{"open_issues": {"1": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3802", "issue_id": "#3802", "issue_summary": "Sending and Receiving phases in mitmdump are very slow", "issue_description": "frolino commented 4 minutes ago\nProblem Description\nWe're thinking of using mitmdump to capture network requests as part of our performance test (we were initially using Fiddler, but unfortunately, Fiddler does not support HTTP2). However, after transitioning from Fiddler to mitmdump, we noticed that all the network requests have slowed down. Digging deeper, it seems like the slowdown occurs in the Sending and Receiving phases:\nNotice in the image above how Sending takes almost 200ms, and Receiving takes almost 400ms (exact magnitude varies per request). On the other hand, when using Fiddler, the Sending and Receiving phases are pretty much instant (i.e., ~0ms). This applies not only to requests sent by our web application - we can reproduce the behaviour using pretty much any other website (e.g., reddit).\nNote that we tried to set the stream_large_bodies option to 1k, as we thought this might speed things up. However, the response times remained the same. A couple of questions:\nAre there any other mitmdump settings/options that we can try to set, which may bring the response time closer to those from Fiddler's?\nIf no, do you know why the Sending and Receiving phases are taking so long? (perhaps it's some processing that mitmdump is doing that we don't actually require on our end, so we can just customize the mitm code for our purpose).\nSteps to reproduce the behavior:\nStart the mitmdump proxy. This is the command that we use (replace <regex> and <filter> with appropriate values):\nmitmdump --ignore-hosts \"<regex>\" -k -w Requests.mitm \"<filter>\"\nOpen the web application (any website would do - we recently tried it on www.reddit.com and we're able to reproduce the issue there)\nStop the mitmdump proxy, and save the requests captured by mitmdump (we converted ours to a .har file)\nStart Fiddler\nOpen the same web application\nStop Fiddler, and save the requests captured by Fiddler\nCompare the requests captured by mitmdump and those captured by Fiddler, and notice that the requests for the former are much slower (particularly the Sending and Receiving phases).\nSystem Information\nMitmproxy: 4.0.4\nPython: 3.7.0\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Windows-10-10.0.14393-SP0", "issue_status": "Open", "issue_reporting_time": "2020-01-31T00:30:21Z"}, "2": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3796", "issue_id": "#3796", "issue_summary": "mitmweb edit request unformatted", "issue_description": "Contributor\nEluch commented 6 days ago\nIs your feature request related to a problem? Please describe.\nSo I realized that there is an intercept feature for mitmweb and its \"frustrating\" to edit a json response when it is compressed into one line.\nWhen It's displayed originally its fine, auto formatted by Content-Type:\nBut when in edit mode it looks like this:\nNow it's hard to edit\nDescribe the solution you'd like\nI would like to see an additional button what does formats the response editor by the content type.\nLike this (new button up right):\nI gave a thought to do auto formatting on edit but in case of false content-type it could mess up the original response so this should be optional.\nDoes this feature fits into mitmproxy/mitmweb? I'm considering contributing this feature", "issue_status": "Open", "issue_reporting_time": "2020-01-24T13:08:43Z"}, "3": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3794", "issue_id": "#3794", "issue_summary": "Addons: TypeError: unexpected object", "issue_description": "Prinzhorn commented 10 days ago\nProblem Description\nI'm trying to set up zerorpc inside an addon. It does work but mitmproxy spits out a stack trace when it encounters a reference to an instance of zerorpc.Client anywhere.\nSteps to reproduce the behavior:\npipx inject mitmproxy zerorpc\nmitmdump --scripts addon.py\nimport zerorpc\n\nclass MyAddon:\n  def __init__(self):\n    self.rpc = zerorpc.Client()\n\naddons = [\n  MyAddon()\n]\nAddon error: Traceback (most recent call last):\n  File \"/home/alex/.local/pipx/venvs/mitmproxy/lib/python3.7/site-packages/mitmproxy/addonmanager.py\", line 42, in safecall\n    yield\n  File \"/home/alex/.local/pipx/venvs/mitmproxy/lib/python3.7/site-packages/mitmproxy/addons/script.py\", line 102, in loadscript\n    ctx.master.addons.register(ns)\n  File \"/home/alex/.local/pipx/venvs/mitmproxy/lib/python3.7/site-packages/mitmproxy/addonmanager.py\", line 161, in register\n    self.master.commands.collect_commands(a)\n  File \"/home/alex/.local/pipx/venvs/mitmproxy/lib/python3.7/site-packages/mitmproxy/command.py\", line 158, in collect_commands\n    self.add(o.command_name, o)\n  File \"/home/alex/.local/pipx/venvs/mitmproxy/lib/python3.7/site-packages/mitmproxy/command.py\", line 165, in add\n    self.commands[path] = Command(self, path, func)\n  File \"/home/alex/.local/pipx/venvs/mitmproxy/lib/python3.7/site-packages/mitmproxy/command.py\", line 64, in __init__\n    self.signature = inspect.signature(self.func)\n  File \"/usr/lib/python3.7/inspect.py\", line 3083, in signature\n    return Signature.from_callable(obj, follow_wrapped=follow_wrapped)\n  File \"/usr/lib/python3.7/inspect.py\", line 2833, in from_callable\n    follow_wrapper_chains=follow_wrapped)\n  File \"/usr/lib/python3.7/inspect.py\", line 2246, in _signature_from_callable\n    'attribute'.format(sig))\nTypeError: unexpected object <function ClientBase.__getattr__.<locals>.<lambda> at 0x7f66616d0b00> in __signature__ attribute\nthe absolute minimal example is this, which does not error when run directly outside of mitmproxy but does when used as an addon\nimport zerorpc\nc = zerorpc.Client()\nI don't know enough Python to understand the underlying issue. I assume there is nothing wrong with zerorpc but with the assumptions mitmproxy makes about stuff that addons expose?\nSystem Information\nMitmproxy: 5.0.1\nPython:    3.7.5\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\nPlatform:  Linux-5.3.0-26-generic-x86_64-with-Ubuntu-19.10-eoan", "issue_status": "Open", "issue_reporting_time": "2020-01-21T12:47:03Z"}, "4": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3786", "issue_id": "#3786", "issue_summary": "Can't get the WSGI example to work", "issue_description": "Contributor\nbeth92 commented 13 days ago\nProblem Description\nI was running code very similar to that in the wsgi_flask_app.py example in my project, hoping to serve a basic flask app under a test domain when the proxy is running. Couldn't get it working in my project so after some experimenting I tried to repro the simple example, using mitmproxy 5.0.1 docker image as a base, but I'm still having trouble.\nBasically mitmdump doesn't seem to be able to resolve the magic \"proxapp.local\" domain - when I make requests to it on port 80, the mitmdump logs the request but says:\nGET http://proxapp.local/\n<< Server connection to ('proxapp.local', 80) failed: Error connecting to \"proxapp.local\": [Errno -2] Name does not resolve\nSteps to reproduce the behavior:\nThis is my Dockerfile\nFROM mitmproxy/mitmproxy:5.0.1\n\nRUN pip install flask==1.1.1\n\nCOPY proxy.py proxy.py\n\nCMD [\"mitmdump\", \"-s\", \"proxy.py\"]\nThe contents of proxy.py is just copy pasted from: https://github.com/mitmproxy/mitmproxy/blob/v5.0.1/examples/simple/wsgi_flask_app.py\nI'm running it with:\ndocker build -t tpr .\ndocker run --network=\"host\" --rm -it -v ~/.mitmproxy:/home/mitmproxy/.mitmproxy tpr\nMaking requests via the browser (set up to proxy via localhost:8080) to http://proxapp.local gives a 502\nMy understanding was that I should get back the test \"Hello World!\" response. Have I missed something?\nAlso, at some point during my experimentation I uncommented the line at the bottom of the example :\nmitmproxy.ctx.master.apps.add(app, \"example.com\", 443)\nbut got some error about how apps is not defined on ctx.master, is that information still applicable to v5.0.1?\nSystem Information\nPaste the output of \"mitmproxy --version\" here.\n(Running from a shell inside the running container):\nMitmproxy: 5.0.1\nPython:    3.6.9\nOpenSSL:   OpenSSL 1.0.2u  20 Dec 2019\nPlatform:  Linux-4.15.0-72-generic-x86_64-with", "issue_status": "Open", "issue_reporting_time": "2020-01-17T22:04:50Z"}, "5": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3780", "issue_id": "#3780", "issue_summary": "ProtocolException(\"Error in HTTP connection: Http2ZombieException('Connection already dead')\")", "issue_description": "Prinzhorn commented 20 days ago\nProblem Description\nThe thumbnails on YouTube don't load after navigating around the page. I'm not sure what exactly is happening, it seems to be related to HTTP 2? See the attached video. Sorry for the video being such a hot mess. During recording it didn't happen after the first navigation (of course, why would it) and it took a moment to be reproducible. When I opened the image in a new tab it still didn't load. The second time I [alt+enter]ed it into a new tab.\nIn dev tools the requests appear as (pending). So mitmproxy never tells Chrome that the request failed?\nSteps to reproduce the behavior:\nStart mitmdump\nOpen Chromium\nBrowse to www.youtube.com\nClick on a video\nGo back to the front page by clicking on the logo\nMost thumbnails will not load (you might need to repeat 4+5). I assume it is related to the error in the title. No amount of waiting makes them load.\nNow the question is: is YouTube or Chromium doing something funny or is it mitmproxy that has the issue?\nSystem Information\nMitmproxy: 5.0.1\nPython:    3.7.5\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\nPlatform:  Linux-5.3.0-26-generic-x86_64-with-Ubuntu-19.10-eoan\nAttachments\nvideo: http://www.prinzhorn.me/mitmproxy/screencast.mp4\nvideo of me hovering the thumbnails: http://www.prinzhorn.me/mitmproxy/screencast-hover.mp4\ndump: http://www.prinzhorn.me/mitmproxy/youtube", "issue_status": "Open", "issue_reporting_time": "2020-01-10T18:26:33Z"}, "6": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3775", "issue_id": "#3775", "issue_summary": "Replace \"Toggle Proxy\" addon recommendation in client replay tutorial", "issue_description": "aesyondu commented 25 days ago\nProblem Description\nIn https://github.com/mitmproxy/mitmproxy/blame/master/docs/src/content/tute-clientreplay.md#L35, Toggle Proxy is linked, but it no longer exists.\nSteps to reproduce the behavior:\nGOTO https://docs.mitmproxy.org/stable/tute-clientreplay/\nGOTO https://addons.mozilla.org/en-us/firefox/addon/toggle-proxy-51740/\nSEE Oops! We can\u2019t find that page\nSystem Information\nDOCS", "issue_status": "Open", "issue_reporting_time": "2020-01-06T05:59:13Z"}, "7": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3772", "issue_id": "#3772", "issue_summary": "Authentication Required ask again in browser", "issue_description": "abinhho commented 28 days ago\nProblem Description\nI set username and password on proxy setting already but when I uses browser, It's prompt ask again.\nSteps to reproduce the behavior:\nSystem Information\nMitmproxy: 6.0.0.dev (+19, commit 7b638f1)\nPython: 3.7.5\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Darwin-19.2.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2020-01-03T09:50:17Z"}, "8": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3755", "issue_id": "#3755", "issue_summary": "Cannot parse Client Hello when too large", "issue_description": "EndUser509 commented on 22 Dec 2019\nProblem Description\nStarting recently the iOS Youtube client sometimes sends ClientHello requests what contain a large 'key_share' extension. The request becomes too large for one frame. However the peeking into the socket in the get_client_hello() function can only see as far as the first frame and therefore the parsing fails.\nThe attached example.zip contains a pcap of such a ClientHello and the resulting error message.\nMy feeling is that instead of throwing an error when peek returns less data than expected, the get_client_hello() function should wait for more data to be available on the socket.\nSteps to reproduce the behavior:\nUse Youtube on an iOS 13 device and wait.\nSystem Information\nMitmproxy: 5.0.0.dev <- pulled from github in 2018\nPython: 3.6.8\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.18.0-80.11.2.el8_0.x86_64-x86_64-with-centos-8.0.1905-Core", "issue_status": "Open", "issue_reporting_time": "2019-12-21T21:49:53Z"}, "9": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3752", "issue_id": "#3752", "issue_summary": "Issues with --set", "issue_description": "YuriyTigiev commented on 20 Dec 2019\nProblem Description\nThe option --set doesn't work\nSteps to reproduce the behavior:\nThe command mitmdump.exe -p 8088 --set ssl_version_client=all --set ssl_version_server=all doesn't change configuration\nmitmdump.exe -p 8088 --options doesn't show changes\nmitmdump.exe --options returns Error starting proxy server: OSError(98, 'Address already in use')\nA default config.yaml file is not present for linux and windows versions.\nDocumentation doesn't contain samples of how to properly use --set options with one or a few parameters.\nSystem Information\nPaste the output of \"mitmproxy --version\" here.\n(venv) [root@localhost mitmproxy]# mitmproxy --version\nMitmproxy: 6.0.0.dev (+494, commit 67955fa)\nPython: 3.6.8\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Linux-3.10.0-1062.9.1.el7.x86_64-x86_64-with-centos-7.7.1908-Core\nC:\\Program Files (x86)\\mitmproxy\\bin>mitmdump --version\nMitmproxy: 4.0.4 binary\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Windows-10-10.0.17763", "issue_status": "Open", "issue_reporting_time": "2019-12-20T05:56:38Z"}, "10": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3750", "issue_id": "#3750", "issue_summary": "In upstream mode, https requests will cause changes in flow.mode", "issue_description": "MeiK2333 commented on 19 Dec 2019\nProblem Description\nIn upstream mode, https requests will cause changes in flow.mode.\nSteps to reproduce the behavior:\nproxy.py\nfrom mitmproxy import http\n\ndef request(flow: http.HTTPFlow) -> None:\n    if flow.request.method == \"CONNECT\":\n        return\n    if flow.live:\n        print(\"flow.mode:\", flow.mode)\n        host = \"127.0.0.1\"\n        port = 7890\n        flow.live.change_upstream_proxy_server((host, port))\nrun bash\nmitmdump -p 8081\nmitmdump --mode upstream:http://127.0.0.1:8081 -s proxy.py --ssl-insecure\nexport http_proxy=http://127.0.0.1:8080\nexport https_proxy=http://127.0.0.1:8080\nresult\n$ curl https://httpbin.org/get\n...\nflow.mode: upstream\n...\n$ curl https://httpbin.org/get -k\n...\nflow.mode: transparent\n...\nSystem Information\n$ mitmproxy --version\nMitmproxy: 4.0.4\nI don't know if this is a bug, but I think #3721 and #2123 are related to this issue.\nEnglish is not my native language; please excuse typing errors.", "issue_status": "Open", "issue_reporting_time": "2019-12-19T11:19:00Z"}, "11": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3749", "issue_id": "#3749", "issue_summary": "Regex not working in Replacement patterns", "issue_description": "2NuFyeat4PZt commented on 19 Dec 2019\nProblem Description\n-R :~q:GET /.$:GET /example.html\nDoes not match GET requests despite \"GET /.$\" being a valid regex.\n-R :~q:/.*$:/example.html triggers replacement of text after all \"/\" in headers; expanding the regex should not cause it to fail.\nSteps to reproduce the behavior:\nrun mitmdump in reverse mode with -R :~q:GET /.*$:GET /example.html\nSystem Information\nPaste the output of \"mitmproxy --version\" here.\nMitmproxy: 4.0.4\nPython: 3.6.9\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-4.15.0-72-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Open", "issue_reporting_time": "2019-12-19T10:30:24Z"}, "12": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3748", "issue_id": "#3748", "issue_summary": "iOS 13.3: Certificate installation instructions need improvement", "issue_description": "andig commented on 19 Dec 2019 \u2022\nedited\nProblem Description\nAfter installing profile and activating it, Safari still shows websites as \"not trusted\" and apps show \"network error\"\nSteps to reproduce the behavior:\nConfigure wifi to use mitmproxy\nInstall and activate profile from mitm.it\nNavigate anywhere in Safari\nrefs #3649 (added EKU) and #3647\nSystem Information\nPaste the output of \"mitmproxy --version\" here.\nMitmproxy: 5.0.0\nPython:    3.7.5\nOpenSSL:   OpenSSL 1.1.1d  10 Sep 2019\nPlatform:  Darwin-19.2.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2019-12-18T19:48:36Z"}, "13": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3742", "issue_id": "#3742", "issue_summary": "Support TLS-PSK", "issue_description": "shiaky commented on 8 Dec 2019\nHi mitmproxy community,\nI would love to use mitmproxy for intercepting IoT devices. Two of the Smart Plugs I'm analyzing use TLS in a PSK flavor. For this devises its known how to calculate the PSK. Is there any way to intercept PSK-AES128-CBC-SHA256 using mitmproxy? For my application it would be sufficient if mitmproxy establishes a TLS secured connection to the devices, but leaves the outgoing connection unprotected. Is there any way to make this possible using mitmproxy?\nThanks in advance.", "issue_status": "Open", "issue_reporting_time": "2019-12-08T14:53:52Z"}, "14": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3732", "issue_id": "#3732", "issue_summary": "Flow view readability improvement", "issue_description": "palb91 commented on 28 Nov 2019\nIs your feature request related to a problem? Please describe.\nWith the new flow view, it is sometimes hard to select the line I want. For example, on the right I see a json that I want to analyze. There is the sign > on the left that shows what is the current line, but I often choose the wrong line (one or two above\u2026).\nDescribe the solution you'd like\nI'd appreciate a different background for the current selected line, example below.\nDescribe alternatives you've considered\nThere are other way that could help, underline the current line, use of ligther colors or even a symbol that would be repeted between each part of a line.\nAdditional context\nI tryed to do it myself but things like UI stuff are not my cup of tea. Eventually I can gimp the screenshot like below to provide an example:", "issue_status": "Open", "issue_reporting_time": "2019-11-28T09:03:16Z"}, "15": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3725", "issue_id": "#3725", "issue_summary": "Flaky test: TestTermLog.test_output", "issue_description": "Member\nmhils commented on 22 Nov 2019\nSee https://github.com/mitmproxy/mitmproxy/pull/3724/checks?check_run_id=316184660#step:6:197:\n=================================== FAILURES ===================================\n__________ TestTermLog.test_output[None-expected_out0-expected_err0] ___________\n\nself = <test.mitmproxy.addons.test_termlog.TestTermLog object at 0x7fa289713c10>\noutfile = None, expected_out = ['one', 'three'], expected_err = ['four']\ncapfd = <_pytest.capture.CaptureFixture object at 0x7fa289713f10>\n\n    @pytest.mark.usefixtures('capfd')\n    @pytest.mark.parametrize('outfile, expected_out, expected_err', [\n        (None, ['one', 'three'], ['four']),\n        (sys.stdout, ['one', 'three', 'four'], []),\n        (sys.stderr, [], ['one', 'three', 'four']),\n    ])\n    def test_output(self, outfile, expected_out, expected_err, capfd):\n        t = termlog.TermLog(outfile=outfile)\n        with taddons.context(t) as tctx:\n            tctx.options.termlog_verbosity = \"info\"\n            tctx.configure(t)\n            t.log(log.LogEntry(\"one\", \"info\"))\n            t.log(log.LogEntry(\"two\", \"debug\"))\n            t.log(log.LogEntry(\"three\", \"warn\"))\n            t.log(log.LogEntry(\"four\", \"error\"))\n        out, err = capfd.readouterr()\n        assert out.strip().splitlines() == expected_out\n>       assert err.strip().splitlines() == expected_err\nE       assert ['Traceback (..._call__', ...] == ['four']\nE         At index 0 diff: 'Traceback (most recent call last):' != 'four'\nE         Left contains 29 more items, first extra item: '  File \"/home/runner/work/mitmproxy/mitmproxy/mitmproxy/proxy/server.py\", line 121, in handle'\nE         Use -v to get the full diff\n\ntest/mitmproxy/addons/test_termlog.py:27: AssertionError", "issue_status": "Open", "issue_reporting_time": "2019-11-22T16:07:47Z"}, "16": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3723", "issue_id": "#3723", "issue_summary": "Body Filter: Also match on URL-encoded contents.", "issue_description": "Contributor\ntypoon commented on 22 Nov 2019\nProblem Description\nWhen filtering requests (~bq) I would expect that the request body would be urldecoded prior to applying the filter to it. This would allow the filter to find the expression \"id\" in a request body that looks like myjsonvar={%22id%22:%22123%22}.\nSteps to reproduce the behavior:\nOpen mitmproxy on port 12345\nSend the following two requests using curl:\ncurl -x 'http://localhost:12345' -d '{\"id\":\"123\"}' -H'Content-type: application/json' http://www.example.com/?test=1\ncurl -x 'http://localhost:12345' -d 'myjsonvar={%22id%22:%22123%22}' http://www.example.com/?test=2\nOpen the request that ends in ?test=2 and notice that the body is displayed urldecoded (you can see the double quotes between id)\nGo back to the flow list and set the following filter '~bq \\'\"id\"\\''\nNotice that only the request that ends in ?test=1 is displayed\nSystem Information\n$ mitmproxy --version\nMitmproxy: 5.0.0.dev (+444, commit bbb7eb6)\nPython: 3.7.3\nOpenSSL: OpenSSL 1.1.1d 10 Sep 2019\nPlatform: Linux-5.0.0-31-generic-x86_64-with-Ubuntu-19.04-disco", "issue_status": "Open", "issue_reporting_time": "2019-11-22T14:34:02Z"}, "17": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3721", "issue_id": "#3721", "issue_summary": "Replaying request using upstream proxy that needs auth doesn't work", "issue_description": "Contributor\ntypoon commented on 22 Nov 2019\nProblem Description\nWhen you use mitmproxy with an upstream proxy that requires authentication, you can't replay requests because the replay feature won't send the credentials in the CONNECT request to the upstream proxy.\nSteps to reproduce the behavior:\nOpen mitmproxy configured with an upstream proxy that requires authorization\nCapture a couple of requests\nOpen wireshark to watch the request sent to by mitmproxy to the upstream proxy\nTry to replay a request\nSystem Information\n$ mitmproxy -p12345 --version\nMitmproxy: 5.0.0.dev (+413, commit 2f30981)\nPython: 3.7.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-5.0.0-31-generic-x86_64-with-Ubuntu-19.04-disco\n1", "issue_status": "Open", "issue_reporting_time": "2019-11-22T00:39:42Z"}, "18": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3716", "issue_id": "#3716", "issue_summary": "Infra: Remove npm/yarn from docs.", "issue_description": "Member\nmhils commented on 20 Nov 2019\nWe currently recommend to use yarn to compile the docs SCSS:\nhttps://github.com/mitmproxy/mitmproxy#documentation\nhttps://github.com/mitmproxy/mitmproxy/tree/master/docs\nHugo now has an \"extended version\", which automatically compiles SCSS to CSS. This means we can get rid of all the yarn/npm/.. stuff and just use that. I updated our website repo already (mitmproxy/www#21), it would be fantastic if someone could step up and do the same here!", "issue_status": "Open", "issue_reporting_time": "2019-11-19T20:47:51Z"}, "19": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3711", "issue_id": "#3711", "issue_summary": "Single flag to read then write (append) a session file", "issue_description": "palb91 commented on 17 Nov 2019\nIs your feature request related to a problem? Please describe.\nThis is related to the issue #3710. I often reuse a flow file, I have to read it then inside mitmproxy I have to set the same file as stream_file manually.\nDescribe the solution you'd like\nOnce the bug is fixed (if), it would be great if we can have a single flag for both options:\nmitmproxy --rw session or\nmitmproxy --rfile +session to use an existing flag and an already used mechanism (+) or\nmitmproxy --session session\nDescribe alternatives you've considered\nDoing it manually, step by step to avoid bug.\nAdditional context\nN/A", "issue_status": "Open", "issue_reporting_time": "2019-11-17T01:28:10Z"}, "20": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3710", "issue_id": "#3710", "issue_summary": "mitmproxy blocked while reading AND writing a session file", "issue_description": "palb91 commented on 17 Nov 2019\nProblem Description\nUsing --rfile, -r PATH and --save-stream-file, -w PATH together prevent mitmproxy to start. This block the process and I can't have any log even with --verbose.\nSteps to reproduce the behavior:\nRun mitmproxy -w session, then log some requests/responses;\nRun mitmproxy -r session, the previous session is correctly loaded;\nRun mitmproxy -r session -w +session, nothing append and I have to kill the process;\nRun mitmproxy -r session --set save_stream_file=+session does not work too;\nHowever, running mitmproxy -r session, then inside the interface :set save_stream_file=+session (or [Ctrl-Shift-W]) works well.\nSystem Information\nMitmproxy: 5.0.0.dev (+395, commit ac22aee)\nPython: 3.8.0\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Linux-5.3.11-arch1-1-x86_64-with-glibc2.2.5", "issue_status": "Open", "issue_reporting_time": "2019-11-17T01:19:44Z"}, "21": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3690", "issue_id": "#3690", "issue_summary": "Save all traffic *except* image content", "issue_description": "elastic-paul commented on 11 Nov 2019\nNot so much a feature request as a question.\nI use Mitmprox and save all traffic to file. However if I visit a page with a lot of JPGs (for instance a lot of thumbnails) I don't want to save the actual binary encoded JPG. I want everything except for the body of the image. I never want the images - saves a huge amount of space.\nCan I do this with a filter? Or even a python script?\nThanks", "issue_status": "Open", "issue_reporting_time": "2019-11-11T14:13:41Z"}, "22": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3665", "issue_id": "#3665", "issue_summary": "Clear All option for mitmweb", "issue_description": "mswilson4040 commented on 9 Oct 2019\nSteps to reproduce the problem:\nrun mitmweb\nWait for the a bunch of requests to be picked up\nLet the OCD kick in and want to clear the entries\nToo bad, delete everything one-by-one\nAny other comments? What have you tried so far?\nThis is just a feature request to add a feature to 'Clear All' for mitmweb. There's a delete option, but it's only a single delete. It would be nice if there was a Clear All button or maybe just a 'Select All' > Delete flow.\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.4\nOpenSSL: OpenSSL 1.1.1d 10 Sep 2019\nPlatform: Darwin-19.0.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2019-10-09T16:12:18Z"}, "23": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3663", "issue_id": "#3663", "issue_summary": "Simple Get Started Instructions", "issue_description": "mswilson4040 commented on 8 Oct 2019\nSteps to reproduce the problem:\nbrew install mitmproxy\nmitmproxy or mitmweb\nNow what?\nAny other comments? What have you tried so far?\nThe documentation doesn't really provide any insight into using this tool. Is there a simple way to maybe demonstrate how to intercept and modify a payload to something like https://jsonplaceholder.typicode.com or maybe some localhost setup?\nI'm confused as I have ran mitmweb and expected to see something but it doesn't do anything. I have tried configuring a listening-host and port but still nothing. How do you actually use this tool?\nI've got high hopes for this. Mac user that's looking for a fiddler replacement as mono sucks at running fiddler (IMO)\nSystem information\nmitmproxy --version\nMitmproxy: 4.0.4\nPython: 3.7.4\nOpenSSL: OpenSSL 1.1.1d 10 Sep 2019\nPlatform: Darwin-19.0.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2019-10-08T18:23:38Z"}, "24": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3645", "issue_id": "#3645", "issue_summary": "[Feature] Support for TLS1.3", "issue_description": "njnuzhao commented on 21 Sep 2019\nHello, the tested app only use tls1.3, does the latest version of mitmproxy supports tls1.3-https traffic analysis? Thank you.", "issue_status": "Open", "issue_reporting_time": "2019-09-21T08:11:23Z"}, "25": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3640", "issue_id": "#3640", "issue_summary": "Accessing mitmproxy over the Internet (HTTP Digest Authentication?)", "issue_description": "SimonAlling commented on 15 Sep 2019\nI use mitmproxy to run userscripts on my phone (Android) and tablet (iOS). When I'm on my own Wi-Fi, I've simply configured proxy settings right on the clients, and it works like a charm.\nHowever, I also want to be able to access the proxy when I'm not home, but I absolutely don't want it open to the Internet, for obvious reasons. My current solution is to connect to mitmproxy through a VPN tunnel, but that has its problems:\nOpenVPN can't push proxy settings to Android clients, so I have to route all traffic from my phone at the network layer; hence, I have to run mitmproxy in transparent mode. This means mitmproxy can't filter traffic properly in general, so some apps are blocked (due to certificate pinning, I think).\nSetup becomes much more complex overall (VPN server, routing, Android VPN toggle tile etc).\nConsumes more battery on the device.\nI have to toggle VPN on and off all the time.\nInstead, I would like to be able to set example.com:8080 as HTTP proxy in the Android/iOS settings, even when I'm not home. Granted I'd have to do it for every Wi-Fi where I want access to my proxy (and I'd still have to use VPN when not on Wi-Fi), but that would nevertheless be a pretty big upgrade over my current setup.\nAs previously mentioned, this would of course only be viable if I could protect the proxy with strong authentication. But as far as I can tell, only HTTP Basic Authentication is supported. Correct me if I'm wrong, but that's so insecure that I might as well not have any authentication at all, right?\nIf I'm just missing some vital piece of information, please feel free to point me in the right direction. Otherwise, maybe it would be possible to implement HTTP Digest Authentication support? Or would there be any other way of securely accessing mitmproxy over the Internet?", "issue_status": "Open", "issue_reporting_time": "2019-09-15T11:17:04Z"}, "26": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3629", "issue_id": "#3629", "issue_summary": "Proxy breaks multi-part responses", "issue_description": "rdegraaf commented on 5 Sep 2019\nI am trying to use mitmproxy to test a service that implements push messages over HTTP/2 in an unusual way: clients issue a GET request to a particular route, which immediately responds with an HTTP 200 with the header \"content-type: multipart/related; boundary=------abcde123; type=application/json\". It does not send a content-length header. The server then keeps the session open and sends further response frames as push messages become available.\nWhen I try to proxy this application with mitmproxy, it appears that mitmproxy is closing the session immediately after the initial response; the client never receives the additional responses.\nSteps to reproduce the problem:\n**Note: this is not the test setup that I'm using; I can't share the actual client and server with you and I haven't written a full reproduction case. However, the setup described below should be equivalent to what I'm testing.\nSet up an HTTP/2 server (I haven't tried this with HTTP/1.1) that responds to a GET request with a 200 response containing the header \"content-type: multipart/related; boundary=------abcde123; type=application/json\", then leaves the stream open; it later sends more response data such as \"------abcde123\\r\\nhello world\\r\\n------abcde123\\r\\n\nSet up a client for the above server. This can be implemented with Python code similar to the following:\nimport hyper\nconn = hyper.HTTP20Connection(\"SERVER_NAME\")\nconn.connect()\nsid = conn.request('GET', \"/PATH\", {'accept':'*/*'})\nresp = conn.get_response(stream_id=sid)\nprint(resp.status)\nprint(resp.headers)\nfor data in resp.read_chunked():\n    print(data)\nConnect the client to the server. Observe that the \"hello world\" response is received.\nInsert mitmproxy between the client and server (this should be possible using the proxy_host and proxy_port parameters to hyper.HTTP20Connection; see https://hyper.readthedocs.io/en/latest/api.html#http-2)\nConnect the client to the server through the proxy. Observe that the stream closes immediately and \"hello world\" is never received.\nAny other comments? What have you tried so far?\nSystem information\n$ bin/mitmweb --version\nMitmproxy: 4.0.4\nPython:    3.6.8\nOpenSSL:   OpenSSL 1.1.0i  14 Aug 2018\nPlatform:  Linux-4.15.0-58-generic-x86_64-wth-Ubuntu-18.04-bionic", "issue_status": "Open", "issue_reporting_time": "2019-09-04T23:38:50Z"}, "27": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3628", "issue_id": "#3628", "issue_summary": "Can we catch timeout exception when using upstream mode?", "issue_description": "xiongjiabin commented on 4 Sep 2019\nCould we catch below exception in addon code or somewhere when the upstream server is down?\n<< Server connection to ('125.117.144.120', 57114) failed: Error connecting to \"125.117.144.120\": [Errno 61] Connection refused\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.2\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Darwin-18.7.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2019-09-04T09:38:48Z"}, "28": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3616", "issue_id": "#3616", "issue_summary": "mitmdump is hanging on TLS connect with upstream proxy mode", "issue_description": "hibari0614 commented on 14 Aug 2019 \u2022\nedited\nI try to use mitmdump to connect SSL website with upstream proxy mode, but it hanging on TLS handshake. mitidump seems did not sent handshake request to website. Below is the step that i running.\nExecute mitmdump with below command\nmitmdump -s indject_js.py --listen-port 8080 --mode upstream:https://<upstream proxy URL>:443/ --upstream-auth <username>:<password> --ssl-insecure --set upstream_cert=false\nContent of indject_js.py\nfrom mitmproxy.http import HTTPFlow\nfrom mitmproxy import ctx\n\ninject_js = '''\nObject.defineProperty(navigator, 'plugins', {\n  get: () => [1, 2, 3, 4, 5],\n});\n\nObject.defineProperty(navigator, 'webdriver', {\n  get: () => false,\n});\n'''\ndef response(flow: HTTPFlow):\n    if not flow.response.status_code == 200:\n      return\n\n    html = flow.response.text\n    html = html.replace('<head>', '<head>\\n    <script>%s</script>' % inject_js)\n    flow.response.text = str(html)\n    ctx.log.info('Inject script success')`\nTry using cURL command to check mitmdump whether is work or not, but it hanging on TLS Client hello step.\ncURL command that i execute as below\ncurl -x https://localhost:8080/ https://tw.yahoo.com/ -v\nBelow is the cURL output of test.\n*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to localhost (127.0.0.1) port 21163 (#0)\n* ALPN, offering http/1.1\n* successfully set certificate verify locations:\n*   CAfile: /etc/ssl/certs/ca-certificates.crt\n  CApath: /etc/ssl/certs\n* (304) (OUT), TLS handshake, Client hello (1):\n* (304) (IN), TLS handshake, Server hello (2):\n* TLSv1.2 (IN), TLS handshake, Certificate (11):\n* TLSv1.2 (IN), TLS handshake, Server key exchange (12):\n* TLSv1.2 (IN), TLS handshake, Server finished (14):\n* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\n* TLSv1.2 (OUT), TLS change cipher, Client hello (1):\n* TLSv1.2 (OUT), TLS handshake, Finished (20):\n* TLSv1.2 (IN), TLS handshake, Finished (20):\n* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256\n* ALPN, server accepted to use http/1.1\n* Proxy certificate:\n*  subject: CN=us-east-027.whiskergalaxy.com\n*  start date: Aug 12 06:28:14 2019 GMT\n*  expire date: Aug 13 06:28:14 2021 GMT\n*  subjectAltName: host \"localhost\" matched cert's \"localhost\"\n*  issuer: CN=mitmproxy; O=mitmproxy\n*  SSL certificate verify ok.\n* allocate connect buffer!\n* Establish HTTP proxy tunnel to tw.yahoo.com:443\n> CONNECT tw.yahoo.com:443 HTTP/1.1\n> Host: tw.yahoo.com:443\n> User-Agent: curl/7.58.0\n> Proxy-Connection: Keep-Alive\n> \n< HTTP/1.1 200 OK\n< Server: nghttpx\n< \n* Proxy replied 200 to CONNECT request\n* CONNECT phase completed!\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* successfully set certificate verify locations:\n*   CAfile: /etc/ssl/certs/ca-certificates.crt\n  CApath: /etc/ssl/certs\n* (304) (OUT), TLS handshake, Client hello (1):\n* CONNECT phase completed!\n* CONNECT phase completed!\nThe connect just stop on TLS handshake Client hello, no Server hello response and mitmdump seems also stuck.\nBelow is mitmdump output.\nLoading script indject_js.py\nProxy server listening at http://*:8080\n127.0.0.1:60998: clientconnect\n::ffff:127.0.0.1:60998: Establish TLS with client\n::ffff:127.0.0.1:60998: ALPN for client: b'http/1.1'\n::ffff:127.0.0.1:60998: serverconnect\n  -> ('<upstream proxy URL>', 443)\n::ffff:127.0.0.1:60998: Establish TLS with server\n::ffff:127.0.0.1:60998: Certificate verification error for localhost: unable to get local issuer certificate (errno: 20, depth: 1)\n::ffff:127.0.0.1:60998: Ignoring server verification error, continuing with connection\n::ffff:127.0.0.1:60998: ALPN selected by server: http/1.1\n::ffff:127.0.0.1:60998: Establish TLS with server\n::ffff:127.0.0.1:60998: Establish TLS with client\nSystem information\nMitmproxy: 5.0.0.dev\nPython: 3.6.8\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-4.9.184-linuxkit-x86_64-with-Ubuntu-18.04-bionic\nTo author: Thank your kindly help", "issue_status": "Open", "issue_reporting_time": "2019-08-14T06:38:33Z"}, "29": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3609", "issue_id": "#3609", "issue_summary": "mitmweb: Search or highlight by body contents.", "issue_description": "iTosun commented on 5 Aug 2019\nHi,\nfirst of all i want to thank the whole community and team that maintain this project. I love mitm and use it for many things during pen-tests. Currently i'm playing around with flowfilters and i noticed that when i try to implement a ~bs (response body) i get a notification in mitmweb that this is not implemented yet with a uri: mitmproxy/mitmweb#10\nThe mitmweb is archived and i couldn't find it here as a issue. So like to know if this issue is still on the roadmap or not.\nThanks in advance!\n1", "issue_status": "Open", "issue_reporting_time": "2019-08-05T17:17:06Z"}, "30": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3598", "issue_id": "#3598", "issue_summary": "OSError: [Errno 24] Too many open files on macOS Mojave", "issue_description": "nlykkei commented on 28 Jul 2019 \u2022\nedited\nI'm having the below issue, when opening a few tabs in Firefox configured to use mitmproxy as its HTTP proxy server. The error can easily be reproduced. How to mitigate the error?\nSteps to reproduce:\nStart mitmproxy mitmproxy --listen-host 127.0.0.1 --listen-port 8080\nConfigure Firefox to use mitmproxy as HTTP proxy.\nOpen +3 websites in tabs.\nSystem information:\nNicolass-MacBook-Pro:~ nlykkei$ mitmproxy --version\nMitmproxy: 4.0.4\nPython:    3.7.4\nOpenSSL:   OpenSSL 1.0.2s  28 May 2019\nPlatform:  Darwin-18.6.0-x86_64-i386-64bit\nError information:\n: Exception in thread ServerThread (('::ffff:127.0.0.1', 8080, 0, 0)):\nTraceback (most recent call last):\n  File \"/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib/python3.7/threading.py\", line 926, in _bootstrap_inner\n    self.run()\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/mitmproxy/master.py\", line 37, in run\n    self.server.serve_forever()\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/mitmproxy/net/tcp.py\", line 607, in serve_forever\n    connection, client_address = self.socket.accept()\n  File \"/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib/python3.7/socket.py\", line 212, in accept\n    fd, addr = self._accept()\nOSError: [Errno 24] Too many open files\nFiles opened by mitmproxy:\nNicolass-MacBook-Pro:~ nlykkei$ lsof -np 1708\nCOMMAND    PID    USER   FD      TYPE             DEVICE  SIZE/OFF    NODE NAME\npython3.7 1708 nlykkei  cwd       DIR                1,5      2272 1078647 /Users/nlykkei\npython3.7 1708 nlykkei  txt       REG                1,5     12552 8894163 /usr/local/Cellar/mitmproxy/4.0.4/libexec/bin/python3.7\npython3.7 1708 nlykkei  txt       REG                1,5   2361608 8754397 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/Python\npython3.7 1708 nlykkei  txt       REG                1,5     18192 8754600 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_heapq.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     30176 8754568 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/zlib.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     16648 8754583 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_bz2.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     32360 8754574 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_lzma.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5    134356 7854609 /usr/local/Cellar/xz/5.2.4/lib/liblzma.5.dylib\npython3.7 1708 nlykkei  txt       REG                1,5     14952 8754558 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/grp.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     38136 8754547 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_struct.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     25148 8754605 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/binascii.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     15812 8754576 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_posixsubprocess.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     30976 8754575 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/select.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     37248 8754588 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/math.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     76616 8754579 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_datetime.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5    172236 8754573 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/pyexpat.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     26868 8754559 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_hashlib.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5    371128 7801663 /usr/local/Cellar/openssl/1.0.2s/lib/libssl.1.0.0.dylib\npython3.7 1708 nlykkei  txt       REG                1,5   1864096 7801648 /usr/local/Cellar/openssl/1.0.2s/lib/libcrypto.1.0.0.dylib\npython3.7 1708 nlykkei  txt       REG                1,5     33988 8754546 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_blake2.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     84060 8754549 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_sha3.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5      9812 8754564 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_bisect.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     15308 8754612 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_random.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     75932 8754556 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_socket.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5      9096 8754603 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_opcode.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5    102512 8754551 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_ssl.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5      8956 8754607 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_contextvars.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     56608 8754563 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_asyncio.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     15880 8754545 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_queue.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5      8936 8754599 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_uuid.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5   1057884 8754566 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/unicodedata.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5    106348 8754581 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_ctypes.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5      9492 8894774 /usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/cryptography/hazmat/bindings/_constant_time.abi3.so\npython3.7 1708 nlykkei  txt       REG                1,5    146848 8895731 /usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/_cffi_backend.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5    745832 8894775 /usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/cryptography/hazmat/bindings/_openssl.abi3.so\npython3.7 1708 nlykkei  txt       REG                1,5    313172 8894984 /usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/_ruamel_yaml.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     48908 8754548 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/array.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5    712320 8894921 /usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/brotli/_brotli.abi3.so\npython3.7 1708 nlykkei  txt       REG                1,5     30540 8754552 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_csv.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     34936 8754604 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_json.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5      8736 8895511 /usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/tornado/speedups.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     88416 8754570 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_pickle.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     76496 8754586 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_curses.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     18648 8754550 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/fcntl.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5      8712 8754594 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_crypt.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     15396 8754597 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/_scproxy.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     14636 8894215 /usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/str_util.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     19252 8754569 /usr/local/Cellar/python/3.7.4/Frameworks/Python.framework/Versions/3.7/lib/python3.7/lib-dynload/termios.cpython-37m-darwin.so\npython3.7 1708 nlykkei  txt       REG                1,5     21024 9472536 /Library/Preferences/Logging/.plist-cache.Xd28eiEW\npython3.7 1708 nlykkei  txt       REG                1,5    973824 6227558 /usr/lib/dyld\npython3.7 1708 nlykkei    0u      CHR               16,4 0t9069022    1157 /dev/ttys004\npython3.7 1708 nlykkei    1u      CHR               16,4 0t9069022    1157 /dev/ttys004\npython3.7 1708 nlykkei    2u      CHR               16,4 0t9069022    1157 /dev/ttys004\npython3.7 1708 nlykkei    3u   KQUEUE                                      count=0, state=0xa\npython3.7 1708 nlykkei    4u     unix 0xf3d07d8d37cfa23f       0t0         ->0xf3d07d8d37cfb9af\npython3.7 1708 nlykkei    5u     unix 0xf3d07d8d37cfb9af       0t0         ->0xf3d07d8d37cfa23f\npython3.7 1708 nlykkei    6u      CHR               16,4 0t9069022    1157 /dev/ttys004\npython3.7 1708 nlykkei    7u     IPv6 0xf3d07d8d35285eff       0t0     TCP 127.0.0.1:http-alt (LISTEN)\npython3.7 1708 nlykkei    8u    systm 0xf3d07d8d384451bf       0t0         [ctl com.apple.netsrc id 8 unit 33]\npython3.7 1708 nlykkei    9      PIPE 0xf3d07d8d330b7bbf     16384         ->0xf3d07d8d330b527f\npython3.7 1708 nlykkei   10      PIPE 0xf3d07d8d330b527f     16384         ->0xf3d07d8d330b7bbf\npython3.7 1708 nlykkei   12   NPOLICY                                      \npython3.7 1708 nlykkei   31u     IPv6 0xf3d07d8d37b634bf       0t0     TCP 127.0.0.1:http-alt->127.0.0.1:54887 (ESTABLISHED)\npython3.7 1708 nlykkei   34u     IPv4 0xf3d07d8d2cc12f7f       0t0     TCP 192.168.0.141:54901->185.29.135.42:https (ESTABLISHED)\npython3.7 1708 nlykkei   73u     IPv4 0xf3d07d8d35167bff       0t0     TCP 192.168.0.141:54902->185.29.135.42:https (ESTABLISHED)\npython3.7 1708 nlykkei  120u     IPv6 0xf3d07d8d37bc693f       0t0     TCP 127.0.0.1:http-alt->127.0.0.1:54882 (ESTABLISHED)\npython3.7 1708 nlykkei  168u     unix 0xf3d07d8d37cfa3cf       0t0         ->0xf3d07d8d37cfa307", "issue_status": "Open", "issue_reporting_time": "2019-07-28T11:16:24Z"}, "31": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3596", "issue_id": "#3596", "issue_summary": "WBXML is out of date", "issue_description": "user185953 commented on 23 Jul 2019\nwbxml is out of date.\nSupport for EAS 16.1 is available upstream for more than a year\nand fix for #2638 is currently waiting for merge.", "issue_status": "Open", "issue_reporting_time": "2019-07-23T12:14:43Z"}, "32": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3584", "issue_id": "#3584", "issue_summary": "Addons: `running` is invoked twice.", "issue_description": "Member\nmhils commented on 18 Jul 2019\nSteps to reproduce the problem:\nWrite an addon that implements running()\nRunning is invoked twice on startup.", "issue_status": "Open", "issue_reporting_time": "2019-07-17T22:27:29Z"}, "33": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3572", "issue_id": "#3572", "issue_summary": "mitmdump doesn't raise done() event", "issue_description": "kubistika commented on 28 Jun 2019 \u2022\nedited\ndone() function isn't invoked when CTRL+C is pressed.\nThis event is super important. I need it in order to close a file I'm writing output to, and because the event isn't being raised, the file never closes and buffered data is not written to the filesystem.\nSteps to reproduce the problem:\nimport random\nimport sys\nimport os\nimport json\nfrom datetime import datetime\n\n\nclass RequestsLogger:\n\n    def __init__(self):\n        self.requests = []\n    \n    def request(self, flow): \n        req = flow.request\n        client_conn = flow.client_conn \n \n        info = {\n            \"scheme\": req.scheme,\n            \"url\":  req.url,\n            \"method\": req.method,\n            \"time\": str(datetime.now()),\n            \"host\": req.host,\n            \"dst_port\": req.port,\n            \"headers\": dict(req.headers),\n            \"client_info\": {\n                \"src_addr\": client_conn.address[0],\n                \"src_port\": client_conn.address[1],\n                \"username\": os.getlogin()\n            }\n        }\n\n        self.requests.append(info)\n        \n    def done(self):\n        print('this should be printed at shutdown')\n        print('got {} requests', len(self.requests))\n        \naddons = [\n    RequestsLogger()\n]\nRun with mitmdump -s some_file_name.py -q\nSystem information\nMitmproxy: 4.0.4 binary\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-10-10.0.17763", "issue_status": "Open", "issue_reporting_time": "2019-06-28T11:57:38Z"}, "34": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3566", "issue_id": "#3566", "issue_summary": "Instruct how to disable platform settings", "issue_description": "villesau commented on 14 Jun 2019\nSteps to reproduce the problem:\ngo to https://docs.mitmproxy.org/stable/howto-transparent/#macos\napply instructions\ntry to get back to original state\nNo instructions for that\nAny other comments? What have you tried so far?\nThis would make it much easier to take the proxy into use since you would know exactly how to revert the changes.", "issue_status": "Open", "issue_reporting_time": "2019-06-14T09:32:59Z"}, "35": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3558", "issue_id": "#3558", "issue_summary": "Addon OptionsError is neither logged, nor does it stop mitmproxy", "issue_description": "cventers commented on 5 Jun 2019\nSteps to reproduce the problem:\nFollowing the master branch documentation here:\nhttps://docs.mitmproxy.org/master/addons-options/\n(venv) chase@turbotaz .../Stage/mitmproxy $ which mitmdump\n/home/chase/Stage/mitmproxy/venv/bin/mitmdump\n(venv) chase@turbotaz .../Stage/mitmproxy $ mitmdump -s ./examples/addons/options-configure.py --set addheader=1000\nLoading script ./examples/addons/options-configure.py\nProxy server listening at http://*:8080\nSystem information\nMitmproxy: 5.0.0.dev (+237, commit 8353f4a)\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Linux-4.13.0-sabayon-x86_64-Intel-R-_Core-TM-i5-6500_CPU@_3.20GHz-with-gentoo-2.6\n1", "issue_status": "Open", "issue_reporting_time": "2019-06-04T19:30:14Z"}, "36": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3545", "issue_id": "#3545", "issue_summary": "Mac OS instructions for transparrent proxy don't work", "issue_description": "ConfusedVorlon commented on 23 May 2019\nSteps to reproduce the problem:\nFollow the steps from\nhttps://docs.mitmproxy.org/stable/howto-transparent/\nIssue1. According to the instructions, editing the sudoers file will allow any user to run /sbin/pfctl -s state\nhowever running this gives the error\npfctl: /dev/pf: Permission denied\nIssue2. Possible error when running sudo pfctl -f pf.conf\npfctl: Use of -f option, could result in flushing of rules\npresent in the main ruleset added by the system at startup.\nSee /etc/pf.conf for further details.\n\nNo ALTQ support in kernel\nALTQ related functions disabled\nAny other comments? What have you tried so far?\nI'm running on mac os 10.14.5, have also tried 10.13\nHave confirmed that the sudoers file has been modified and have tried reboot\nSystem information\nMitmproxy: 4.0.4\nPython:    3.7.3\nOpenSSL:   OpenSSL 1.0.2r  26 Feb 2019\nPlatform:  Darwin-18.6.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2019-05-23T14:11:07Z"}, "37": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3536", "issue_id": "#3536", "issue_summary": "Force ALPN selection to h2 with upstream_cert=false", "issue_description": "tarekziade commented on 6 May 2019\nSteps to reproduce the problem:\nReplay an http/2 recorded playback file\nuse the upstream_cert=false option to avoid calling the upstream server\ndowngraded to http/1\nFrom my current investigation in the code it could be as simple as added a script callback\nin __alpn_select_callback in the mitmproxy/proxy/protocol/tls.py module but I am not 100%\nsure that's the right fix.\nInvestigating on this, any hint appreciated", "issue_status": "Open", "issue_reporting_time": "2019-05-06T08:18:28Z"}, "38": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3535", "issue_id": "#3535", "issue_summary": "Can't hide logs from the python script", "issue_description": "AyoubMarouan commented on 6 May 2019\nimport logging\n\nlogging.basicConfig(level=logging.CRITICAL)\n#logging.basicConfig(level=logging.INFO)\n\ndebugVar = \"\"\n\nclass AddHeader:\n    def log(self , *mdg ):\n        return \"\"\n    \n    def request(self, flow):\n            debugVar = flow.request.url\n            ctx.log( \"\\n\\n\\n {} \\n\\n\\n\\n\".format( debugVar )  )\n\ndef start():\n    myaddon = AddHeader()\n    opts = options.Options(listen_host='192.168.1.16', listen_port=8080)\n    pconf = proxy.config.ProxyConfig(opts)\n    m = DumpMaster(opts)\n    m.server = proxy.server.ProxyServer(pconf)\n    m.addons.add(myaddon)\n\n    try:\n        m.run()\n    except KeyboardInterrupt:\n        m.shutdown()\n\nstart()\nI can't hide all the logs, i just want to show the debug from the addons i have added, i didn't find any solution in the documentation or anythings else\n1", "issue_status": "Open", "issue_reporting_time": "2019-05-05T23:12:22Z"}, "39": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3534", "issue_id": "#3534", "issue_summary": "Server replay errors", "issue_description": "yonixw commented on 30 Apr 2019\nSteps to reproduce the problem:\nUse '-w' option to save to file\nUse '-S' option to read file as server replay\nI am using addons, might be related?\nAny other comments? What have you tried so far?\nAddon error: Traceback (most recent call last):\n  File \"c:\\users\\yoni\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\mitmproxy\\addons\\serverplayback.py\", line 183, in request\n    response.refresh()\n  File \"c:\\users\\yoni\\appdata\\local\\programs\\python\\python37-32\\lib\\site-packages\\mitmproxy\\net\\http\\response.py\", line 178, in refresh\n    delta = now - self.timestamp_start\nTypeError: unsupported operand type(s) for -: 'float' and 'NoneType'\nThe line in question:\nmitmproxy/mitmproxy/net/http/response.py\nLine 178 in 3cd3765\n delta = now - self.timestamp_start \nIf i add \"return\" at the start of Response\\refresh() replay is being playing back OK. (Obviously not refreshed)\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.1\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Windows-10-10.0.17134-SP0", "issue_status": "Open", "issue_reporting_time": "2019-04-30T14:40:31Z"}, "40": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3533", "issue_id": "#3533", "issue_summary": "mitmproxy crashes with ImportError", "issue_description": "jkugler commented on 30 Apr 2019\nSteps to reproduce the problem:\nDownload version 4\nUntar\nRun mitmproxy\nAny other comments? What have you tried so far?\nN/A\nSystem information\nCannot get version (see below). This is CentOS 7.5\n# ./mitmproxy --version\nTraceback (most recent call last):\n  File \"release/specs/mitmproxy_main\", line 2, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/tools/main.py\", line 22, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/tools/_main.py\", line 13, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/tools/cmdline.py\", line 3, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/addons/__init__.py\", line 1, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/addons/anticache.py\", line 1, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/ctx.py\", line 1, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/master.py\", line 7, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/addonmanager.py\", line 8, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/eventsequence.py\", line 5, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/http.py\", line 6, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/net/http/__init__.py\", line 1, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/net/http/request.py\", line 10, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/net/http/message.py\", line 5, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"mitmproxy/net/http/encoding.py\", line 11, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"site-packages/brotli/__init__.py\", line 3, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\n  File \"site-packages/brotli/brotli.py\", line 5, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.6/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 714, in load_module\nImportError: /lib64/libc.so.6: version `GLIBC_2.18' not found (required by /tmp/_MEIPX2BPF/libstdc++.so.6)\n[45449] Failed to execute script mitmproxy_main", "issue_status": "Open", "issue_reporting_time": "2019-04-29T19:41:54Z"}, "41": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3532", "issue_id": "#3532", "issue_summary": "awvs10.5 cause listen port closed", "issue_description": "yingshang commented on 29 Apr 2019\nSteps to reproduce the problem:\nAcunetix Web Vulnerability Scanner(awvs)\n1.I listen the port 8888 and i want to capture awvs10.5 attack script. so i setting the proxy in the awvs10.5.After running for a few seconds, it was found that the port was closed and the proxy server was over.The program did not throw an error, so I didn't know where the attack script triggered the shutdown function.How can I catch exceptional errors.\nthanks!!!!\nAny other comments? What have you tried so far?\nSystem information\nmitmproxy==2.0.2", "issue_status": "Open", "issue_reporting_time": "2019-04-29T06:59:06Z"}, "42": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3531", "issue_id": "#3531", "issue_summary": "Client Handshake failed", "issue_description": "mister87 commented on 26 Apr 2019\nPlease help me solve the problem.\nSteps to reproduce the problem:\nKey and certificate concatineted to file hostname.pem\nStarted mitmproxy:\n$ mitmdump --listen-host 127.0.0.1 --listen-port 60808 --mode upstream:http://<host_upstream_proxy>:<port_upstream_proxy> --certs <path_to_certs>/hostname.pem --scripts <path_to_scripts>/handler.py --set upstream_cert=false --set ssl_insecure=true --set allow_remote=true -v\nLoading script <path_to_scripts>/handler.py\nProxy server listening at http://127.0.0.1:60808\nWhen prompted, an error occurs:\n...\n127.0.0.1:35708: Client Handshake failed. The client may not trust the proxy's certificate for download.sonatype.com.\n127.0.0.1:35708: ClientHandshakeException(\"Cannot establish TLS with client (sni: download.sonatype.com): TlsException(\"\",)\",)\n...\nSystem information\n$ mitmproxy --version\nMitmproxy: 4.0.4\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-3.10.0-86.el7.x86_64-x86_64-with-redhat-7.5-Maipo\nThanks for the help!\n2", "issue_status": "Open", "issue_reporting_time": "2019-04-26T13:29:09Z"}, "43": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3530", "issue_id": "#3530", "issue_summary": "--set causes other flags to be ignored if it isn't used last", "issue_description": "cgarvie commented on 24 Apr 2019 \u2022\nedited\nSteps to reproduce the problem:\nThis correctly uses the upstream proxy's authentication details:\n$ mitmdump --mode upstream:http://host:port --upstream-auth user:pass -s \"thing.py\" --set foo=\"bar\"\nThis appears to ignore them:\n$ mitmdump --mode upstream:http://host:port -s \"thing.py\" --set foo=\"bar\" --upstream-auth user:pass\nSystem information\n$ mitmdump --version\nMitmproxy: 5.0.0.dev (+230, commit 70777a1)\nPython: 3.7.2\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Darwin-17.4.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2019-04-24T12:45:43Z"}, "44": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3528", "issue_id": "#3528", "issue_summary": "Ignore all domains, except 2", "issue_description": "Fredus69 commented on 22 Apr 2019 \u2022\nedited\nHello,\nI am using mitmdump version 4.0.4 for linux.\nI want to ignore every domain from mitmproxy'mechanisms interception HTTPS except 2 in particular (site1.site.com & example.com) in transparent mode.\nI followed doc here : https://docs.mitmproxy.org/stable/howto-ignoredomains/\nSo i put this command :\nmitmdump -v --ignore-hosts '^(?!site1\\.site\\.com)(?!example\\.com)' --mode transparent -p 1337\nIn logs of connexion, Every domains are intercepted by mitmdump, and not only the 2 excepts i put in my command (site1.site.com & example.com) :(\nI probably made a mistake, but after a lots of tries, i cannot figure out where is it.\nThanks for your help,\nRegards\nFred", "issue_status": "Open", "issue_reporting_time": "2019-04-22T10:35:45Z"}, "45": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3519", "issue_id": "#3519", "issue_summary": "Crash: Can't parse client hello", "issue_description": "reardenlife commented on 11 Apr 2019\nTraceback (most recent call last):\n  File \"/opt/mitmproxy/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()ug report at: https://github.com/mitmproxy/mitmproxy\n  File \"/opt/mitmproxy/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/opt/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 268, in __call__\n    self._client_hello.alpn_protocols or\nAttributeError: 'NoneType' object has no attribute 'alpn_protocols'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n-:58670: Cannot parse Client Hello: TlsProtocolException('Cannot read raw Client Hello: TlsProtocolException(\\'Unexpected EOF in TLS handshake: b\\\\\\'\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\xfc\\\\\\\\x03\\\\\\\\x03\\\\\\\\x06\\\\\\\\x7f\\\\\\\\xa7\\\\\\\\x02\\\\\\\\xf8\\\\\\\\x10\\\\\\\\x05\\\\\\\\x8c\\\\\\\\xe1QT\\\\\\\\x8f\\\\\\\\x17\\\\\\\\xa0\\\\\\\\xfbN\\\\\\\\xf0\\\\\\\\xd2\\\\\\\\x15\\\\\\\\x0b\\\\\\\\x9bk\\\\\\\\x9c\\\\\\\\x88\\\\\\\\xd8\\\\\\\\xe5\\\\\\\\xaa\\\\\\\\x9d\\\\\\\\x95f<\\\\\\\\xc0 `\\\\\\\\xdf\\\\\\\\x86\\\\\\\\x88\\\\\\\\x80\\\\\\\\x90\\\\\\\\x95!\\\\\\\\x02S\\\\\\\\xa76M\\\\\\\\xed\\\\\\\\xe86&\\\\\\\\xf8\\\\\\\\r\\\\\\\\x18\\\\\\\\xb3\\\\\\\\x1e\\\\\\\\xbaB\\\\\\\\x1a\\\\\\\\xff\\\\\\\\xa9F\\\\\\\\xdbA}=\\\\\\\\x00$\\\\\\\\x13\\\\\\\\x01\\\\\\\\x13\\\\\\\\x03\\\\\\\\x13\\\\\\\\x02\\\\\\\\xc0+\\\\\\\\xc0/\\\\\\\\xcc\\\\\\\\xa9\\\\\\\\xcc\\\\\\\\xa8\\\\\\\\xc0,\\\\\\\\xc00\\\\\\\\xc0\\\\\\\\n\\\\\\\\xc0\\\\\\\\t\\\\\\\\xc0\\\\\\\\x13\\\\\\\\xc0\\\\\\\\x14\\\\\\\\x003\\\\\\\\x009\\\\\\\\x00/\\\\\\\\x005\\\\\\\\x00\\\\\\\\n\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\x8f\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x1c\\\\\\\\x00\\\\\\\\x1a\\\\\\\\x00\\\\\\\\x00\\\\\\\\x17ru-92-53-3.fri-gate.biz\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00\\\\\\\\x00\\\\\\\\xff\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\x00\\\\\\\\x00\\\\\\\\n\\\\\\\\x00\\\\\\\\x0e\\\\\\\\x00\\\\\\\\x0c\\\\\\\\x00\\\\\\\\x1d\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00\\\\\\\\x18\\\\\\\\x00\\\\\\\\x19\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\x01\\\\\\\\x00\\\\\\\\x0b\\\\\\\\x00\\\\\\\\x02\\\\\\\\x01\\\\\\\\x00\\\\\\\\x00#\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x10\\\\\\\\x00\\\\\\\\x0e\\\\\\\\x00\\\\\\\\x0c\\\\\\\\x02h2\\\\\\\\x08http/1.1\\\\\\\\x00\\\\\\\\x05\\\\\\\\x00\\\\\\\\x05\\\\\\\\x01\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x003\\\\\\\\x00k\\\\\\\\x00i\\\\\\\\x00\\\\\\\\x1d\\\\\\\\x00 \\\\\\\\xa2\\\\\\\\xe8\\\\\\\\xdd\\\\\\\\xb0\\\\\\\\xbdg\\\\\\\\x96\\\\\\\\xfbY\\\\\\\\x98P\\\\\\\\xb9l8\\\\\\\\xa9\\\\\\\\x0c\\\\\\\\xdb X2\\\\\\\\x93\\\\\\\\x98\\\\\\\\xe6\\\\\\\\xc1\\\\\\\\x06\\\\\\\\x9b\\\\\\\\x1eY\\\\\\\\xdf\\\\\\\\xe5\\\\\\\\xed\\\\\\\\x0e\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00A\\\\\\\\x04\\\\\\\\x7f\\\\\\\\xe5+wN\\\\\\\\x17\"\\\\\\\\x86\\\\\\\\x05\\\\\\\\n\\\\\\\\xd0|\\\\\\\\xbb\\\\\\\\xd5\\\\\\\\x1c\\\\\\\\x83.\\\\\\\\x1aXm\\\\\\\\xf6\\\\\\\\xc5S\\\\\\\\x06s\\\\\\\\xf0\\\\\\\\xaf=\\\\\\\\x08)g\\\\\\\\xcf\\\\\\\\n!\\\\\\\\xd7\\\\\\\\x0fig?>\\\\\\\\rK\\\\\\\\x04\\\\\\\\n<\\\\\\\\xff\\\\\\\\x8e\\\\\\\\x080\\\\\\\\x8a\\\\\\\\\\\\\\\\\\\\\\\\x83\\\\\\\\xa7\\\\\\\\x03\\\\\\\\xa7\\\\\\\\xe7v\\\\\\\\xe8{;\\\\\\\\xd6K\\\\\\\\xe1\\\\\\\\x1b\\\\\\\\x00+\\\\\\\\x00\\\\\\\\t\\\\\\\\x08\\\\\\\\x03\\\\\\\\x04\\\\\\\\x03\\\\\\\\x03\\\\\\\\x03\\\\\\\\x02\\\\\\\\x03\\\\\\\\x01\\\\\\\\x00\\\\\\\\r\\\\\\\\x00\\\\\\\\x18\\\\\\\\x00\\\\\\\\x16\\\\\\\\x04\\\\\\\\x03\\\\\\\\x05\\\\\\\\x03\\\\\\\\x06\\\\\\\\x03\\\\\\\\x08\\\\\\\\x04\\\\\\\\x08\\\\\\\\x05\\\\\\\\x08\\\\\\\\x06\\\\\\\\x04\\\\\\\\x01\\\\\\\\x05\\\\\\\\x01\\\\\\\\x06\\\\\\\\x01\\\\\\\\x02\\\\\\\\x03\\\\\\\\x02\\\\\\\\x01\\\\\\\\x00-\\\\\\\\x00\\\\\\\\x02\\\\\\\\x01\\\\\\\\x01\\\\\\\\x00\\\\\\\\x1c\\\\\\\\x00\\\\\\\\x02@\\\\\\\\x01\\\\\\\\x00\\\\\\\\x15\\\\\\\\x00\\\\\\\\x87\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\'\\')')\n---:58670: Traceback (most recent call last):\n  File \"/opt/mitmproxy/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/opt/mitmproxy/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/opt/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 268, in __call__\n    self._client_hello.alpn_protocols or\nAttributeError: 'NoneType' object has no attribute 'alpn_protocols'\nWhy the software crashes if the input data is invalid? Why not to ignore it?", "issue_status": "Open", "issue_reporting_time": "2019-04-11T03:37:59Z"}, "46": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3518", "issue_id": "#3518", "issue_summary": "Crash: Memory error", "issue_description": "reardenlife commented on 11 Apr 2019 \u2022\nedited\nThe setup is the same as in my previous post: #3515\nThe source of the problem should be the same - resource leakage.\n-:49420: Traceback (most recent call last):\n  File \"/opt/mitmproxy/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/opt/mitmproxy/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/opt/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/opt/mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/opt/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/opt/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 392, in _process_flow\n    self.read_response_body(f.request, f.response)\nMemoryError\n\nTraceback (most recent call last):\n  File \"/opt/mitmproxy/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/opt/mitmproxy/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/opt/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/opt/mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/opt/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/opt/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 392, in _process_flow\n    self.read_response_body(f.request, f.response)\nMemoryError\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n-:49420: clientdisconnect\n1", "issue_status": "Open", "issue_reporting_time": "2019-04-11T02:12:41Z"}, "47": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3515", "issue_id": "#3515", "issue_summary": "Crash: Can't create thread", "issue_description": "reardenlife commented on 9 Apr 2019 \u2022\nedited\nTo be exact: RuntimeError: can't start new thread\nCent OS 7. Got 8k file descriptors limit. 1GB RAM total + some swap. About 500MB usually free.\nGot the latest version from the master branch.\nStarted the mitmproxy on localhost in transparent mode. Redirected some tor http traffic from local exit node. After about 12 hours and may be few dozens of thousands requests, I am having a crash:\n( output is intermingled with requests a little bit )\n(venv) [root@v48807 mitmproxy]# mitmproxy --mode transparent --set block_global=false --listen-host 127.0.0.1\n\n\npt/mitmproxy/mitmproxy/net/tcp.py\", line 621, in serve_forever\n    t.start()/172.217.10.68/sorry/index?continue=http://www.google.fr/search%3Fq%3Detude%2\n  File \"/usr/local/lib/python3.7/threading.py\", line 847, in start\n    _start_new_thread(self._bootstrap, ())\nRuntimeError: can't start new threadvirtualisation+economie+transporteur+express+internati\n       onal+up\u2026\n----------------------------------------\n----------------------------------------continue=http://www.google.fr/search%3Fq%3Dvirtual\nError in processing of request from ('185.22.153.244', 35888)\nTraceback (most recent call last):\n  File \"/opt/mitmproxy/mitmproxy/net/tcp.py\", line 621, in serve_foreverone+2001&num=100&h\n    t.start()S\u2026\n  File \"/usr/local/lib/python3.7/threading.py\", line 847, in start\n    _start_new_thread(self._bootstrap, ())ntinue=http://www.google.fr/search%3Fq%3Denjeux%\nRuntimeError: can't start new thread\n       \u2190 503 text/html 3.09k 449ms\n----------------------------------------l+petrole+energie+fossile+concurrents&num=100&hl=e\n----------------------------------------\nError in processing of request from ('185.22.153.244', 35890)\nTraceback (most recent call last):index?continue=http://www.google.fr/search%3Fq%3Dtotal%2\n  File \"/opt/mitmproxy/mitmproxy/net/tcp.py\", line 621, in serve_forever\n    t.start()text/html 3.08k 425ms\n  File \"/usr/local/lib/python3.7/threading.py\", line 847, in starts&num=100&hl=en-US&gbv=1\n    _start_new_thread(self._bootstrap, ())\nRuntimeError: can't start new thread\n   GET http://172.217.10.68/sorry/index?continue=http://www.google.fr/search%3Fq%3Ddossier\n----------------------------------------\n       \u2190 503 text/html 3.05k 448ms\n>> GET http://172.217.3.99/search?q=guide-pratique+administratif&num=100&hl=en-US&gbv=1&pr\n       md=ivns\u2026\n       \u2190 302 text/html 450b 1.74s\n   GET http://172.217.10.68/sorry/index?continue=http://www.google.fr/search%3Fq%3Dguide-p\n       ratique\u2026", "issue_status": "Open", "issue_reporting_time": "2019-04-08T22:27:03Z"}, "48": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3513", "issue_id": "#3513", "issue_summary": "\"If you can see this, traffic is not passing through mitmproxy.\"", "issue_description": "knlr commented on 4 Apr 2019 \u2022\nedited\nI'm reaching the actual site and I can see the request to mitm.it in the flows window. It does not appear to be intercepted. Other requests also appear in the flows window, so my traffic is clearly passing through mitmproxy.\nSteps to reproduce the problem:\nvisit http://mitm.it from the proxy'd browser\nAny other comments? What have you tried so far?\nrm -rf ~/.mitmproxy didn't help\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.3\nOpenSSL: OpenSSL 1.0.2r 26 Feb 2019\nPlatform: Darwin-18.5.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2019-04-04T13:56:36Z"}, "49": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3510", "issue_id": "#3510", "issue_summary": "mitmproxy does not handle TLS handshakes for internationalized domain names correctly over Socksv5", "issue_description": "TPXP commented on 31 Mar 2019 \u2022\nedited\nSteps to reproduce the problem:\nsudo pip install mitmproxy\nmitmproxy --mode socks5 --listen-port 9050\ncurl --socks5-hostname 127.0.0.1:9050 -L -k -v https://www.xn--80ak6aa92e.com/\n*   Trying 127.0.0.1...\n* Connected to 127.0.0.1 (127.0.0.1) port 9050 (#0)\n* found 173 certificates in /etc/ssl/certs/ca-certificates.crt\n* found 697 certificates in /etc/ssl/certs\n* ALPN, offering http/1.1\n* gnutls_handshake() failed: An unexpected TLS packet was received.\n* Closing connection 0\ncurl: (35) gnutls_handshake() failed: An unexpected TLS packet was received.\nAny other comments? What have you tried so far?\nVersions 0.15, 3.0.4, 2.0.2 and 4.0.4 are also affected by the bug.\nStrangely, it works correctly over an HTTP proxy and if I disable remote hostname resolution with SOCKSv5, (use --socks5 instead of --socks5-hostname), it also works correctly.\nSystem information\nMitmproxy: 4.0.4\nPython:    3.7.3\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Linux-4.4.0-21-generic-i686-with-Ubuntu-16.04-xenial", "issue_status": "Open", "issue_reporting_time": "2019-03-31T12:48:17Z"}, "50": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3506", "issue_id": "#3506", "issue_summary": "calling `ctx.log` in new thread will raise a RuntimeError exception", "issue_description": "phith0n commented on 23 Mar 2019\nSteps to reproduce the problem:\nadd an addon for MITMDump\nstart a thread in the addon\ncall ctx.log.info in the thread\nan exception is raised\nTraceback (most recent call last):\n  File \"/Users/user/.pyenv/versions/3.7.0/lib/python3.7/threading.py\", line 917, in _bootstrap_inner\n    self.run()\n  File \"/Users/user/.pyenv/versions/3.7.0/lib/python3.7/threading.py\", line 865, in run\n    self._target(*self._args, **self._kwargs)\n  File \"/Users/user/pro/python/project/project/plugins/crossdomain_xml/__init__.py\", line 39, in _check_crossdomain_xml\n    ctx.log.debug(str(e))\n  File \"/Users/user/pro/python/project/venv/lib/python3.7/site-packages/mitmproxy/log.py\", line 29, in debug\n    self(txt, \"debug\")\n  File \"/Users/user/pro/python/project/venv/lib/python3.7/site-packages/mitmproxy/log.py\", line 59, in __call__\n    asyncio.get_event_loop().call_soon(\n  File \"/Users/user/.pyenv/versions/3.7.0/lib/python3.7/asyncio/events.py\", line 644, in get_event_loop\n    % threading.current_thread().name)\nRuntimeError: There is no current event loop in thread 'Thread-7'.\nExcept for the main thread, there is no event loop in the other threads, so asyncio.get_event_loop().call_soon(...) isn't a good way to send the log message.\nSystem information\nMitmproxy: 4.0.4\nPython:    3.7.0\nOpenSSL:   OpenSSL 1.1.0i  14 Aug 2018\nPlatform:  Darwin-18.2.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2019-03-22T21:27:51Z"}, "51": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3501", "issue_id": "#3501", "issue_summary": "Cannot establish TSL with client : TlsException(\"(-1, 'Unexpected EOF')\",)", "issue_description": "agarwalanirudh commented on 20 Mar 2019 \u2022\nedited\nLogs\n10.5.9.161:56622: clientconnect\n::ffff:10.5.9.161:56622: Set new server address: www.google.com:443\n::ffff:10.5.9.161:56622: Establish TLS with client\n10.5.9.161:56622: CONNECT www.google.com:443\n    host: www.google.com:443\n    Connection: close\n << Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpected EOF')\",)\n10.5.9.161:56622: clientdisconnect\n10.5.9.161:56594: clientconnect\n::ffff:10.5.9.161:56594: Set new server address: www.google.com:443\n::ffff:10.5.9.161:56594: serverconnect\n  -> ('www.google.com', 443)\n::ffff:10.5.9.161:56594: Establish TLS with server\n::ffff:10.5.9.161:56594: ALPN selected by server: h2\n::ffff:10.5.9.161:56594: Establish TLS with client\n::ffff:10.5.9.161:56594: ALPN for client: b'h2'\n::ffff:10.5.9.161:56594: HTTP2 Event from client\n  -> <RemoteSettingsChanged changed_settings:{ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=None, new_value=100), ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=1073741824), ChangedSetting(setting=SettingCodes.ENABLE_PUSH, original_value=1, new_value=0)}>\n::ffff:10.5.9.161:56594: HTTP2 Event from client\n  -> <WindowUpdated stream_id:0, delta:1073676289>\n::ffff:10.5.9.161:56594: HTTP2 Event from client\n  -> <RequestReceived stream_id:1, headers:[(b':method', b'GET'), (b':path', b'/'), (b':scheme', b'https'), (b':authority', b'www.google.com'), (b'user-agent', b'curl/7.61.1'), (b'accept', b'*/*')]>\n::ffff:10.5.9.161:56594: HTTP2 Event from client\n  -> <StreamEnded stream_id:1>\n::ffff:10.5.9.161:56594: HTTP2 Event from client\n  -> <SettingsAcknowledged changed_settings:{}>\n::ffff:10.5.9.161:56594: HTTP2 Event from server\n  -> <RemoteSettingsChanged changed_settings:{ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=None, new_value=100), ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=1048576), ChangedSetting(setting=SettingCodes.MAX_HEADER_LIST_SIZE, original_value=None, new_value=16384)}>\n::ffff:10.5.9.161:56594: HTTP2 Event from server\n  -> <WindowUpdated stream_id:0, delta:983041>\n::ffff:10.5.9.161:56594: HTTP2 Event from server\n  -> <SettingsAcknowledged changed_settings:{ChangedSetting(setting=SettingCodes.ENABLE_PUSH, original_value=1, new_value=0), ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=1073741824), ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=100, new_value=100)}>\n::ffff:10.5.9.161:56594: HTTP2 Event from client\n  -> <SettingsAcknowledged changed_settings:{ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=1048576), ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=100, new_value=100), ChangedSetting(setting=SettingCodes.MAX_HEADER_LIST_SIZE, original_value=65536, new_value=16384)}>\n::ffff:10.5.9.161:56594: HTTP2 Event from server\n  -> <SettingsAcknowledged changed_settings:{}>\n::ffff:10.5.9.161:56594: request\n  -> Request(GET www.google.com:443/)\n::ffff:10.5.9.161:56594: HTTP2 Event from server\n  -> <ResponseReceived stream_id:1, headers:[(b':status', b'200'), (b'date', b'Wed, 20 Mar 2019 09:02:38 GMT'), (b'expires', b'-1'), (b'cache-control', b'private, max-age=0'), (b'content-type', b'text/html; charset=ISO-8859-1'), (b'p3p', b'CP=\"This is not a P3P policy! See g.co/p3phelp for more info.\"'), (b'server', b'gws'), (b'x-xss-protection', b'1; mode=block'), (b'x-frame-options', b'SAMEORIGIN'), (b'set-cookie', b'1P_JAR=2019-03-20-09; expires=Fri, 19-Apr-2019 09:02:38 GMT; path=/; domain=.google.com'), (b'set-cookie', b'NID=164=BG9EWKG6Pu5nPMllv-ZJubbRg6WXPzRdMTqW9fbHJULDpHIsz5hOs7OYxk2GZTj1aBp6RBbrDaVc8OqHfcjwT85pSee8PMeqyFkD0RHYFR4S6GNpOrnPdMrR_Jl6VQL5D5ifI7br7i7jQ-1UokmUcvT0fDlC0P3TfCp3CdIKhaQ; expires=Thu, 19-Sep-2019 09:02:38 GMT; path=/; domain=.google.com; HttpOnly'), (b'alt-svc', b'quic=\":443\"; ma=2592000; v=\"46,44,43,39\"'), (b'accept-ranges', b'none'), (b'vary', b'Accept-Encoding')]>\n::ffff:10.5.9.161:56594: HTTP2 Event from server\n  -> <DataReceived stream_id:1, flow_controlled_length:11236, data:3c21646f63747970652068746d6c3e3c68746d6c>\n::ffff:10.5.9.161:56594: HTTP2 Event from server\n  -> <StreamEnded stream_id:1>\n::ffff:10.5.9.161:56594: response\n  -> Response(200 , text/html; charset=ISO-8859-1, 10.97k)\n10.5.9.161:56594: GET https://www.google.com/ HTTP/2.0\n    :authority: www.google.com\n    user-agent: curl/7.61.1\n    accept: */*\n << 200  10.97k\n    date: Wed, 20 Mar 2019 09:02:38 GMT\n    expires: -1\n    cache-control: private, max-age=0\n    content-type: text/html; charset=ISO-8859-1\n    p3p: CP=\"This is not a P3P policy! See g.co/p3phelp for more info.\"\n    server: gws\n    x-xss-protection: 1; mode=block\n    x-frame-options: SAMEORIGIN\n    set-cookie: 1P_JAR=2019-03-20-09; expires=Fri, 19-Apr-2019 09:02:38 GMT; path=/; domain=.google.com\n    set-cookie: NID=164=BG9EWKG6Pu5nPMllv-ZJubbRg6WXPzRdMTqW9fbHJULDpHIsz5hOs7OYxk2GZTj1aBp6RBbrDaVc8OqHfcjwT85pSee8PMeqyFkD0RHYFR4S6GNpOrnPdMrR_Jl6VQL5D5ifI7br7i7jQ-1UokmUcvT0fDlC0P3TfCp3CdIKhaQ; expires=Thu, 19-Sep-2019 09:02:38 GMT; path=/; domain=.google.com; HttpOnly\n    alt-svc: quic=\":443\"; ma=2592000; v=\"46,44,43,39\"\n    accept-ranges: none\n    vary: Accept-Encoding\n::ffff:10.5.9.161:56594: serverdisconnect\n  -> ('www.google.com', 443)\n10.5.9.161:56594: clientdisconnect\nSteps to reproduce the problem:\nI have a docker container running inside a CoreOS VM, where my application is running which makes network calls. I want to route all the calls via my proxy (viz. mitmproxy) running on another box in the same network.\nBut when my nodeJS application running in docker container, tries to fetch some data by making API calls via request module, I am facing this error. Attached are the logs for clientHello message as recorded in mitmdump -v.\nIf I curl on 'https://www.google.com' within the same docker container, it works fine (goes via proxy and returns the HTML response as expected). I've attached logs for that as well.\nAny other comments? What have you tried so far?\nI have added mitm CA cert in the CoreOS trust store and the dockers running on it automatically take that host's certs in trust store.\nI have setup the proxy configuration as well on CoreOS and docker container.\nI also tried by adding proxy parameter in request module.\nSystem information\nMitmproxy: 4.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.15.0-46-generic-x86_64-with-debian-stretch-sid", "issue_status": "Open", "issue_reporting_time": "2019-03-20T10:45:28Z"}, "52": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3499", "issue_id": "#3499", "issue_summary": "In upstream mode not sending auth when I run resend", "issue_description": "nemanjan00 commented on 19 Mar 2019\nSteps to reproduce the problem:\nRun mitmproxy in upstream mode with auth\nSend request from browser configured to use mirmproxy\nResend that request\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.2\nOpenSSL: OpenSSL 1.1.1b 26 Feb 2019\nPlatform: Linux-5.0.2-zen1-1-zen-x86_64-with-arch", "issue_status": "Open", "issue_reporting_time": "2019-03-19T13:34:17Z"}, "53": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3495", "issue_id": "#3495", "issue_summary": "mitmproxy.exceptions.TcpDisconnect: (104, 'ECONNRESET')", "issue_description": "jszurdi commented on 11 Mar 2019\nSteps to reproduce the problem:\nIt is not a persistent problem.\nI visited https://ipleak.net/ and one time I got the below exception.\nWeirdly mitmproxy didn't actually stop because my script was able to use it for two more requests afterward.\nI use an upstream proxy server and I intercept messages.\nAny other comments? What have you tried so far?\nhttps://ipleak.net/\nhar_files/988580/\nscreenshots/988580/\nTook [1.2397181987762451] seconds to launch the browser\nTook [13.238298892974854] seconds to request the page\n\ufffd[31m\ufffd[22m[::1]:36210: Traceback (most recent call last):\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 95, in write\nreturn self.o.sendall(v)\nFile \"/usr/lib/python3/dist-packages/OpenSSL/SSL.py\", line 1668, in sendall\nself._raise_ssl_error(self._ssl, result)\nFile \"/usr/lib/python3/dist-packages/OpenSSL/SSL.py\", line 1540, in _raise_ssl_error\nraise SysCallError(errno, errorcode.get(errno))\nOpenSSL.SSL.SysCallError: (104, 'ECONNRESET')\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\nroot_layer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 23, in call\nlayer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in call\nlayer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in call\nlayer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in call\nif not self._process_flow(flow):\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 262, in _process_flow\nreturn self.handle_upstream_connect(f)\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 236, in handle_upstream_connect\nreturn layer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 87, in call\nlayer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in call\nlayer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http2.py\", line 328, in call\nself._complete_handshake()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http2.py\", line 119, in _complete_handshake\nself.client_conn.send(self.connections[self.client_conn].data_to_send())\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/connections.py\", line 108, in send\nself.wfile.write(message)\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 101, in write\nraise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: (104, 'ECONNRESET')\n\ufffd[0m\nTraceback (most recent call last):\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 95, in write\nreturn self.o.sendall(v)\nFile \"/usr/lib/python3/dist-packages/OpenSSL/SSL.py\", line 1668, in sendall\nself._raise_ssl_error(self._ssl, result)\nFile \"/usr/lib/python3/dist-packages/OpenSSL/SSL.py\", line 1540, in _raise_ssl_error\nraise SysCallError(errno, errorcode.get(errno))\nOpenSSL.SSL.SysCallError: (104, 'ECONNRESET')\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\nroot_layer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 23, in call\nlayer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in call\nlayer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in call\nlayer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in call\nif not self._process_flow(flow):\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 262, in _process_flow\nreturn self.handle_upstream_connect(f)\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 236, in handle_upstream_connect\nreturn layer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 87, in call\nlayer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in call\nlayer()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http2.py\", line 328, in call\nself._complete_handshake()\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http2.py\", line 119, in _complete_handshake\nself.client_conn.send(self.connections[self.client_conn].data_to_send())\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/connections.py\", line 108, in send\nself.wfile.write(message)\nFile \"/home/jszurdi/tds/tds3/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 101, in write\nraise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: (104, 'ECONNRESET')\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nLink followed as vanilla : https://ipleak.net/\nSystem information\nMitmproxy: 4.0.4\nPython: 3.6.7\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.18.0-15-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Open", "issue_reporting_time": "2019-03-10T19:06:58Z"}, "54": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3494", "issue_id": "#3494", "issue_summary": "How to modify the server name indication(sni) ?", "issue_description": "wangkuncaixu commented on 9 Mar 2019\nSteps to reproduce the problem:\nI am now using the mitmproxy to bypass the firewall. I want to remove the sni in the clienthello message of the TLS handshake. Can I use the mitmproxy to modify or remove the sni?\n2", "issue_status": "Open", "issue_reporting_time": "2019-03-08T22:45:28Z"}, "55": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3493", "issue_id": "#3493", "issue_summary": "What is mitmproxy doing under the hood to be able to fix my issue?", "issue_description": "ghost commented on 8 Mar 2019\nI am working on a web automation application, and it seems that the request endpoint is protected by Akamai. Whenever I tunnel the proxy through mitm, it runs perfect. However as soon as mitm is off, I get a Forbidden (403) error. I'm using C#.\nSteps to reproduce the problem:\nFind an Akamai protected endpoint.\nSubmit a request to it with legit cookies and no proxy (won't work)\nSubmit a request to it with the same cookies/headers but through mitmproxy (and it'll work)\nAny other comments? What have you tried so far?\nThis is not a mitm issue per se, but I wanted to find out what does mitm do under the hood in order to fix my issue, so I could replicate it and make it work without mitm as well.\nI'm sending the same exact request (same cookies, headers, data). I even tried using mitm's CA certificate with my request.\nSystem information\nMitmproxy: 4.0.4 binary\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Windows-10-10.0.17134\nThank you so much.", "issue_status": "Open", "issue_reporting_time": "2019-03-07T20:06:47Z"}, "56": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3492", "issue_id": "#3492", "issue_summary": "Brew Install macOS 10.14", "issue_description": "moisesvs commented on 4 Mar 2019\nSteps to reproduce the problem:\nbrew install mitmproxy\nAny other comments? What have you tried so far?\nWhen you run this command. The output command is the following:\nError: You are using macOS 10.14.\nWe do not provide support for this pre-release version.\nYou may encounter build failures or other breakages.\nPlease create pull-requests instead of filing issues.\n/usr/local/Library/Homebrew/exceptions.rb:426:in `block in dump': undefined method `check_for_bad_install_name_tool' for #<Homebrew::Diagnostic::Checks:0x0000010259e108> (NoMethodError)\nDid you mean?  check_for_tap_ruby_files_locations\n from /usr/local/Library/Homebrew/exceptions.rb:425:in `each'\n from /usr/local/Library/Homebrew/exceptions.rb:425:in `dump'\n from /usr/local/Library/Homebrew/brew.rb:138:in `rescue in <main>'\n from /usr/local/Library/Homebrew/brew.rb:30:in `<main>'\nSystem information\nmacOS 10.14", "issue_status": "Open", "issue_reporting_time": "2019-03-04T08:56:40Z"}, "57": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3491", "issue_id": "#3491", "issue_summary": "Handling DNS queries in socks5", "issue_description": "shawwwn commented on 1 Mar 2019 \u2022\nedited\nLong story short, when I first try mitmproxy, I was expecting its socks5 would behave like ssh -D.\nI tried it with proxychains but I got these errors:\nHere is my setup:\n/etc/proxychains.conf\nproxy_dns\nsocks5 127.0.0.1 8080\nterminal\n$ proxychains curl http://icanhazip.com\nProxyChains-3.1 (http://proxychains.sf.net)\n|DNS-request| icanhazip.com\n|S-chain|-<>-127.0.0.1:8080-<><>-4.2.2.2:53-<><>-OK\n|S-chain|-<>-127.0.0.1:8080-<><>-4.2.2.2:53-<><>-OK\n|S-chain|-<>-127.0.0.1:8080-<><>-4.2.2.2:53-<><>-OK\n|DNS-response|: icanhazip.com does not exist\ncurl: (6) Could not resolve host: icanhazip.com\n$ mitmdump --mode=socks5\nProxy server listening at http://*:8080\n127.0.0.1:40688: clientconnect\n << Bad HTTP request line: b'\\x00*B\\x9a\\x01 \\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x01\\ticanhazip\\x03com\\x00\\x00\\x01\\x00\\x01\\x00\\x00)\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n127.0.0.1:40688: HTTP protocol error in client request: Bad HTTP request line: b'\\x00*B\\x9a\\x01 \\x00\\x01\\x00\\x00\\x00\\x00\\x00\\x01\\ticanhazip\\x03com\\x00\\x00\\x01\\x00\\x01\\x00\\x00)\\x10\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n127.0.0.1:40688: clientdisconnect\n\n.... connect/disconnect\nIt looks like proxychains keeps sending dns queries down to the socks5 proxy but got no response because mitmproxy just errors out (same with http proxy).\nIf I comment out proxy_dns in proxychains.conf and everything works.\nIt seems like mitmproxy doesn't support handling of dns queries.\nAre there plans to add this feature in the future?\n$ mitmdump --version\nMitmproxy: 4.0.4\nPython:    3.7.2+\nOpenSSL:   OpenSSL 1.1.1a  20 Nov 2018\nPlatform:  Linux-4.4", "issue_status": "Open", "issue_reporting_time": "2019-03-01T09:47:43Z"}, "58": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3489", "issue_id": "#3489", "issue_summary": "Retrun 404 if server_replay_kill_extra flag is set to true", "issue_description": "bebef1987 commented on 27 Feb 2019\nBackground:\nMozilla is using mitmproxy for performance testing using it's server replay capability\nWhen replaying our recorded files we need to return a 404 HTTPResponse if a request is not found in the recording file.\nBecause of this we need to support and update a separate addon to manage this replay.\nRequest:\nCan we add a option to server replay to return 404 response if the response if not found in the recording?", "issue_status": "Open", "issue_reporting_time": "2019-02-27T12:40:25Z"}, "59": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3488", "issue_id": "#3488", "issue_summary": "Unable get the real hostname from request in a python script", "issue_description": "WHK102 commented on 27 Feb 2019\nIt is very simple: Need get the current host request from host header using a python script and mitmdump as reverse proxy.\nThe flow.request.data.host can set the custom header, but need get the real host request from web browser using the same server ip address.\nIn the Apache settings i can make a virtual host with separated settings by hostname and port, but the mitmproxy can not get the real hostname.\nI try get this using:\nflow.request.get_state()\nflow.request.data\nflow.request.headers.get('host')\nflow.request.host\nBut, the data is a empty byte, the state show the ip address but no the hostname.\nHow to get the raw request binary data to get the real hostname using a regular expression?\nThe modify of the header host is a big bad idea.", "issue_status": "Open", "issue_reporting_time": "2019-02-26T21:18:03Z"}, "60": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3487", "issue_id": "#3487", "issue_summary": "How to check if the param is a file on flow from python script?", "issue_description": "WHK102 commented on 25 Feb 2019 \u2022\nedited\nUsing mitmdump and python script, on the on_request flow, how to check if the flow.request.multipart_form item is a plain param or file content?, and, how to get the filename?\nFor example, in the post body multipart upload:\nPOST /vulnerabilities/upload/ HTTP/1.1\nHost: 127.0.0.1:80\nUser-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:65.0) Gecko/20100101 Firefox/65.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nContent-Type: multipart/form-data; boundary=---------------------------2073060256919059568701706746\nContent-Length: n\nConnection: keep-alive\n\n-----------------------------2073060256919059568701706746\nContent-Disposition: form-data; name=\"file-var\"; filename=\"test-file.php\"\nContent-Type: application/x-php\n\n<?php /* Content here */\n\n-----------------------------2073060256919059568701706746\nContent-Disposition: form-data; name=\"var-name\"\n\nThe value\n-----------------------------2073060256919059568701706746--\nThe var-name is a input type text, but the file-var is a input type file. The flow.request.multipart_form items process two vars but in same mode (plain text). How to check if a file-param is a file and how to get the file name?\nIn the file mitmproxy/net/http/multipart.py is not defined how to get the files, only process all values as plain text:\nv = hdrs.get(\"content-type\")\n    if v:\n        v = headers.parse_content_type(v)\n        if not v:\n            return []\n        try:\n            boundary = v[2][\"boundary\"].encode(\"ascii\")\n        except (KeyError, UnicodeError):\n            return []\n\n        rx = re.compile(br'\\bname=\"([^\"]+)\"')\n        r = []\n\n        for i in content.split(b\"--\" + boundary):\n            parts = i.splitlines()\n            if len(parts) > 1 and parts[0][0:2] != b\"--\":\n                match = rx.search(parts[1])\n                if match:\n                    key = match.group(1)\n                    value = b\"\".join(parts[3 + parts[2:].index(b\"\"):])\n                    r.append((key, value))\n        return r\n    return []", "issue_status": "Open", "issue_reporting_time": "2019-02-25T14:27:27Z"}, "61": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3485", "issue_id": "#3485", "issue_summary": "Error when decode utf8 but the content is not utf8", "issue_description": "WHK102 commented on 23 Feb 2019 \u2022\nedited\nUsing mitmdump 4.0.4 when make a reverse proxy to google.cl says in request and try access to flow.response.text using a python3 script on on_response event:\nException in thread ScriptThread:\nTraceback (most recent call last):\n  File \"/home/***/.local/lib/python3.6/site-packages/mitmproxy/net/http/encoding.py\", line 52, in decode\n    decoded = custom_decode[encoding](encoded)\nKeyError: 'UTF-8'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/***/.local/lib/python3.6/site-packages/mitmproxy/net/http/encoding.py\", line 54, in decode\n    decoded = codecs.decode(encoded, encoding, errors)\n  File \"/usr/lib/python3.6/encodings/utf_8.py\", line 16, in decode\n    return codecs.utf_8_decode(input, errors, True)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xb0 in position 280: invalid start byte\n\nDuring handling of the above exception, another exception occurred: ...\nHow to ignore and drop the conflicted bytes?, in python3 using ''.decode(errors='ignore') but in the mitmproxy/net/http/encoding.py use a custom decoder: custom_decode[encoding](encoded).\nPlease, add the ignore error when exception is found.", "issue_status": "Open", "issue_reporting_time": "2019-02-22T19:32:27Z"}, "62": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3481", "issue_id": "#3481", "issue_summary": "error:HTTP protocol error in client request", "issue_description": "yslion commented on 18 Feb 2019\n<< Bad HTTP request line: b'\\x80U\\x01\\x03\\x01\\x00<\\x00\\x00\\x00\\x10\\x00\\x005\\x00\\x00/\\x00\\x00\\x04\\x00\\x00\\x05\\x00\\x00'\n10.10.8.250:1692: CONNECT 10.134.132.176:8888\n<< HTTP protocol error in client request: Bad HTTP request line: b'\\x80U\\x01\\x03\\x01\\x00<\\x00\\x00\\x00\\x10\\x00\\x005\\x00\\x00/\\x00\\x00\\x04\\x00\\x00\\x05\\x00\\x00'\nSteps to reproduce the problem:\n1 run \u2018mitmdump.exe --set ssl_version_client=TLSv1 --set ssl_version_server=TLSv1 --s\nsl-insecure\u2018 in cmd\n2 find another PC , install root certificate , Configure IE6/IE8 in XP to use it as a proxy (chrome in XP is ok )\n3 Visit a website started with 'https'\nAny other comments? What have you tried so far?\nmitmproxy works well in win10 ie11 chrome firefox , but only IE6/IE8 with https in XP .\nMany customers of us are using these old Win system :(\nCould you give me some solutions ? many thanks ..", "issue_status": "Open", "issue_reporting_time": "2019-02-18T06:36:00Z"}, "63": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3477", "issue_id": "#3477", "issue_summary": "Can not set response http status from request using mitmdump and python script", "issue_description": "WHK102 commented on 15 Feb 2019 \u2022\nedited\nI use mitmdump 4.0.4 with python script as reverse proxy. How to set the custom http status response from request context?, example:\n@concurrent\ndef request(flow):\n\n    # flow conditionals here\n   \n    flow.response.status_code = 403\n    flow.response.text = 'Access denied!'\nIn the request function the flow.response is None:\n...\nflow.response.status_code = 403\nAttributeError: 'NoneType' object has no attribute 'status_code'\nI try send a raw response:\n@concurrent\ndef request(flow):\n\n    # flow conditionals here\n   \n    flow.client_conn.connection.send(b'HTTP/1.1 403 Forbidden ...')\n    flow.kill()\nThe flush works fine, but the python says:\n...\nflow.kill()\n  File \"/home/***/.local/lib/python3.6/site-packages/mitmproxy/flow.py\", line 159, in kill\n    self.reply.kill(force=True)\n  File \"/home/***/.local/lib/python3.6/site-packages/mitmproxy/controller.py\", line 115, in kill\n    self.send(exceptions.Kill, force)\n  File \"/home/***/.local/lib/python3.6/site-packages/mitmproxy/controller.py\", line 122, in send\n    \"Reply is {}, but expected it to be start or taken.\".format(self.state)\nmitmproxy.exceptions.ControlException: Reply is committed, but expected it to be start or taken.\nIf only kill flow:\n@concurrent\ndef request(flow):\n\n    # flow conditionals here\n   \n    flow.kill()\nSays:\n...\nOSError: [Errno 9] Bad file descriptor\nHow to send a 403 status response on the request flow before server request (reversed) connection?", "issue_status": "Open", "issue_reporting_time": "2019-02-14T20:14:22Z"}, "64": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3475", "issue_id": "#3475", "issue_summary": "mitmdump fails with 404 error", "issue_description": "WHK102 commented on 13 Feb 2019 \u2022\nedited\nSteps to reproduce the problem:\nExecute:\n$ mitmdump --listen-port 8888 --listen-host 127.0.0.1 --mode reverse:http://127.0.0.1:8080/ --scripts test.py\nIn the python script:\nfrom mitmproxy.script import concurrent\n\n@concurrent\ndef error(flow):\n    pass\n\n@concurrent  # Remove this and see what happens\ndef request(flow):\n    flow.request.headers['Host'] = 'abc.com'\n    pass\n\n@concurrent\ndef responseheaders(flow):\n    pass\n\n@concurrent\ndef response(flow):\n    pass\n    \n@concurrent\ndef clientconnect(root_layer):\n    pass\nThe result:\n127.0.0.1:56182: GET http://127.0.0.1:8080/abc/def.html?var=value&var2%5Bdimension%5D=value\n              << 404 Not Found 210b\nAddon error: Traceback (most recent call last):\n  File \"/home/***/.local/lib/python3.6/site-packages/mitmproxy/script/concurrent.py\", line 32, in _concurrent\n    obj.reply.take()\n  File \"/home/***/.local/lib/python3.6/site-packages/mitmproxy/controller.py\", line 92, in take\n    \"Reply is {}, but expected it to be start.\".format(self.state)\nmitmproxy.exceptions.ControlException: Reply is committed, but expected it to be start.\nSystem information\n$ mitmdump --version\nMitmproxy: 4.0.4\nPython:    3.6.7\nOpenSSL:   OpenSSL 1.1.0i  14 Aug 2018\nPlatform:  Linux-4.15.0-45-generic-x86_64-with-Ubuntu-18.04-bionic\nInstalled from pip3.", "issue_status": "Open", "issue_reporting_time": "2019-02-13T02:50:47Z"}, "65": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3474", "issue_id": "#3474", "issue_summary": "Redirects in the documentation", "issue_description": "localhostdotdev commented on 12 Feb 2019 \u2022\nedited\nSteps to reproduce the problem:\nRead through Github issues\nFind a link like: http://docs.mitmproxy.org/en/stable/features/passthrough.html#how-it-works\nLink redirects to documentation home page\nAny other comments? What have you tried so far?\nThe links are still nice enough that I usually can find the corresponding page. In this case the closest I could get was https://docs.mitmproxy.org/stable/overview-features/ and could not get to the correct page\n(I'm getting nodename nor servname provided, or not known and not sure how to fix, looking everywhere, solution for future googlers was to restart my computer)", "issue_status": "Open", "issue_reporting_time": "2019-02-12T13:55:31Z"}, "66": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3473", "issue_id": "#3473", "issue_summary": "On windows server 2008 r2, using ip to access the website failed when the dns server is unavailable", "issue_description": "luojian520 commented on 12 Feb 2019\nSteps to reproduce the problem:\n1.set a dns server which is not unavailable\n2.open proxy\n3.chrome cannot access website by ip\n4.it is ok on windows 10\nAny other comments? What have you tried so far?\n\nI commented out these two lines in mitmproxy\\net\\tcp.py, It seems to be good.\nBut I don't know the role of these two lines.\nSystem information\nmitmproxy version is 2.0.22", "issue_status": "Open", "issue_reporting_time": "2019-02-12T10:13:20Z"}, "67": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3471", "issue_id": "#3471", "issue_summary": "I run mitmweb but get \"OSError 98 Address already in use\" error", "issue_description": "hub2git commented on 11 Feb 2019\nSteps to reproduce the problem:\nDownload https://snapshots.mitmproxy.org/4.0.4/mitmproxy-4.0.4-linux.tar.gz\nExtract archive\nRun chmod +x mitmproxy\nRun chmod +x mitmweb\nRun chmod +m mitmdump\nRun ./mitmweb\nAny other comments? What have you tried so far?\nSystem information\nCinnaman Linux Mint 19.1 Tessa\n~ $ python3 --version\nPython 3.6.7\npython --version\nPython 2.7.15rc1\nmitmproxy --version\nTraceback (most recent call last):\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 574, in _build_master\nws.require(requires)\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 892, in require\nneeded = self.resolve(parse_requirements(requirements))\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 783, in resolve\nraise VersionConflict(dist, req).with_context(dependent_req)\npkg_resources.ContextualVersionConflict: (urwid 2.0.1 (/usr/lib/python3/dist-packages), Requirement.parse('urwid<1.4,>=1.3.1'), {'mitmproxy'})\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/usr/bin/mitmproxy\", line 6, in\nfrom pkg_resources import load_entry_point\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 3088, in\n@_call_aside\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 3072, in _call_aside\nf(*args, **kwargs)\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 3101, in _initialize_master_working_set\nworking_set = WorkingSet._build_master()\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 576, in _build_master\nreturn cls._build_from_requirements(requires)\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 589, in _build_from_requirements\ndists = ws.resolve(reqs, Environment())\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 778, in resolve\nraise DistributionNotFound(req, requirers)\npkg_resources.DistributionNotFound: The 'urwid<1.4,>=1.3.1' distribution was not found and is required by mitmproxy\nError in sys.excepthook:\nTraceback (most recent call last):\nFile \"/usr/lib/python3/dist-packages/apport_python_hook.py\", line 145, in apport_excepthook\nos.O_WRONLY | os.O_CREAT | os.O_EXCL, 0o640), 'wb') as f:\nFileNotFoundError: [Errno 2] No such file or directory: '/var/crash/_usr_bin_mitmproxy.1000.crash'\nOriginal exception was:\nTraceback (most recent call last):\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 574, in _build_master\nws.require(requires)\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 892, in require\nneeded = self.resolve(parse_requirements(requirements))\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 783, in resolve\nraise VersionConflict(dist, req).with_context(dependent_req)\npkg_resources.ContextualVersionConflict: (urwid 2.0.1 (/usr/lib/python3/dist-packages), Requirement.parse('urwid<1.4,>=1.3.1'), {'mitmproxy'})\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/usr/bin/mitmproxy\", line 6, in\nfrom pkg_resources import load_entry_point\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 3088, in\n@_call_aside\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 3072, in _call_aside\nf(*args, **kwargs)\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 3101, in _initialize_master_working_set\nworking_set = WorkingSet._build_master()\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 576, in _build_master\nreturn cls._build_from_requirements(requires)\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 589, in _build_from_requirements\ndists = ws.resolve(reqs, Environment())\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 778, in resolve\nraise DistributionNotFound(req, requirers)\npkg_resources.DistributionNotFound: The 'urwid<1.4,>=1.3.1' distribution was not found and is required by mitmproxy", "issue_status": "Open", "issue_reporting_time": "2019-02-10T19:50:58Z"}, "68": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3470", "issue_id": "#3470", "issue_summary": "RST_STREAM after valid HTTP/2 response causes StreamClosedError", "issue_description": "Contributor\nitaisod commented on 9 Feb 2019 \u2022\nedited\nWhen RST_STREAM frame is sent over an HTTP/2 stream, even if the response has been fully transmitted prior to that RST_STREAM frame, the proxy client receives an incomplete response and fails, and mitmproxy shows the following error:\nStreamClosedError(1)\nWithout mitmproxy, the http client has no such problem.\nSteps to reproduce the problem:\nWe need a certificate because HTTP/2 only works over https.\nopenssl req -x509 -newkey rsa:2048 -nodes -sha256 -subj '/CN=localhost' -keyout localhost-privkey.pem -out localhost-cert.pem\nRun the reproduction code.\nmitmdump --listen-port 8081 -k\ncurl -v https://localhost:8443/1 --proxy localhost:8081 --data 'a'\ncompare with: curl -v https://localhost:8443/1 -k --data 'a'\nReproduction code (tested on node.js v11.6.0):\n#!/usr/bin/env node\nconst http2 = require('http2');\nconst fs = require('fs');\nconst {\n    HTTP2_HEADER_PATH,\n    HTTP2_HEADER_STATUS,\n    HTTP2_HEADER_CONTENT_TYPE,\n    HTTP2_HEADER_CONTENT_LENGTH,\n} = http2.constants;\n\nconst server = http2.createSecureServer({\n    key: fs.readFileSync('localhost-privkey.pem'),\n    cert: fs.readFileSync('localhost-cert.pem')\n});\nserver.on('stream', (stream, headers) => {\n    const body = '<h1>Hello World</h1>';\n    const h = {\n        [HTTP2_HEADER_STATUS]: 200,\n        [HTTP2_HEADER_CONTENT_TYPE]: 'text/html',\n    };\n    switch (headers[HTTP2_HEADER_PATH]) {\n    case '/0':\n    case '/1':\n    case '/2':\n        h[HTTP2_HEADER_CONTENT_LENGTH] = body.length;\n    }\n    stream.respond(h);\n    stream.write(body);\n\n    // https://nodejs.org/api/http2.html#http2_destruction\n    switch (headers[HTTP2_HEADER_PATH]) {\n    case '/0':\n    case '/0z':\n        // mitmproxy hangs\n        break;\n    case '/1':\n    case '/1z':\n        // mitmproxy dies\n        stream.end();\n        break;\n    case '/2':\n    case '/2z':\n        // mitmproxy succeeds, but with a delay of 1000ms\n        setTimeout(() => {\n            stream.end();\n        }, 1000);\n    }\n});\nserver.listen(8443);\nOn MacOS curl displays curl: (56) Unexpected EOF\nOn Ubuntu curl displays nothing, but there is no response.\nUse different http path for difference scenarios. For example, https://localhost:8443/0 will hang with mitmproxy but will work without it. https://localhost:8443/2 will work with mitmproxy, but after a delay of 1000ms.\nAny other comments? What have you tried so far?\nEasy work-around: --no-http2\nReproduced on multiple machines and multiple HTTP clients (chrome, firefox, curl), and multiple http servers. Consistently on POST and not on GET, but that probably has something to do with servers and not mitmproxy.\nThis existing issue might be relevant: #1745\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.2\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Darwin-18.2.0-x86_64-i386-64bit\nMitmproxy: 5.0.0.dev (+230, commit 70777a1)\nPython: 3.6.7\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Linux-4.18.0-15-generic-x86_64-with-Ubuntu-18.10-cosmic\n1", "issue_status": "Open", "issue_reporting_time": "2019-02-08T21:07:26Z"}, "69": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3466", "issue_id": "#3466", "issue_summary": "Block global is blocking local IP", "issue_description": "aznxfrost commented on 7 Feb 2019 \u2022\nedited\nSteps to reproduce the problem:\nSet up transparent proxy using MITMPROXY with block_global=true\nUse iptables port redirection to redirect local traffic to MITMPROXY, for example: iptables -t nat -A OUTPUT -p tcp --dport 443 -m owner ! --uid-owner 0 -j DNAT --to 127.0.0.1:7888\nWhen traffic are being redirected through MITMPROXY, mitmproxy detects connecting IP as \"::ffff:192.168.1.2\" and mistakenly categorize it as a global IP hence blocking the connection (it is in fact an IPv4 padded IPv6 LAN IP)\nip -A reveals two network interfaces:\nlo: 127.0.0.1\neth0: 192.168.1.2\nI have never seem this problem before, this only happens to one particular VPS provider running CentOS 7.6.\nDisabling IPV6 on the machine does not help, listening on 127.0.0.1 doesnt help either.\nSystem information\nMitmproxy: 4.0.4\nPython: 3.6.7\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-3.10.0-957.5.1.el7.x86_64-x86_64-with-centos-7.6.1810-Core", "issue_status": "Open", "issue_reporting_time": "2019-02-06T21:26:24Z"}, "70": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3463", "issue_id": "#3463", "issue_summary": "Can I control the intercept behavior via network?", "issue_description": "lexjhuang commented on 2 Feb 2019 \u2022\nedited\nSteps to reproduce the problem:\nThere is a need that we control the intercept behavior via network, that is something like below work flow.\nsetup the proxy -> visit an url via the proxy -> a command is injected to the proxy(so that the proxy will intercept or modify the traffic according to my command)\nHope you understand what I mean.\nI think the proxy now have the power like mitmproxy -s myscript.py\nBut my question is can I do write myscript.py to fulfill above need?\nAny other comments? What have you tried so far?\nI have already fork a branch of mitmproxy and achieve this by modifying the mitmproxy itself.\nIf the answer is no, then I think I can do a pull request.\nSystem information\nmitmproxy 4.0", "issue_status": "Open", "issue_reporting_time": "2019-02-02T02:57:47Z"}, "71": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3461", "issue_id": "#3461", "issue_summary": "Trying to run mitmweb on a Hyper-V VM win windows 10 Home", "issue_description": "baretomas commented on 31 Jan 2019\nSteps to reproduce the problem:\nInstall Mitmproxy\nInstall certificate through web page and put certificate into trusted root certificate authorities\nRun: mitmweb --mode transparent --listen-port 1081 --web-port 8081 --showhost\nAny other comments? What have you tried so far?\nThe web page will load but no traffic is captured. If I open a browser (Edge I tested), no web pages are loaded. Lookes like it lost internet Connectivity.\nWhat am I missing?mit\nSystem information\nMitmproxy: 4.0.4\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Windows-10-10-0.17763", "issue_status": "Open", "issue_reporting_time": "2019-01-31T10:52:46Z"}, "72": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3458", "issue_id": "#3458", "issue_summary": "unable install mitmproxy on mac", "issue_description": "zimengfang commented on 27 Jan 2019\npip install mitmproxy\nCollecting mitmproxy\nUsing cached https://files.pythonhosted.org/packages/e5/6c/fe3f4b4cbef7f703b1199d5443963c4c56c2182223375bdaf0930e1ad052/mitmproxy-4.0.4-py3-none-any.whl\nRequirement already satisfied: certifi>=2015.11.20.1 in ./venv/lib/python3.7/site-packages (from mitmproxy) (2018.11.29)\nRequirement already satisfied: tornado<5.2,>=4.3 in ./venv/lib/python3.7/site-packages (from mitmproxy) (5.1.1)\nRequirement already satisfied: h2<4,>=3.0.1 in ./venv/lib/python3.7/site-packages (from mitmproxy) (3.1.0)\nRequirement already satisfied: cryptography<2.4,>=2.1.4 in ./venv/lib/python3.7/site-packages (from mitmproxy) (2.3.1)\nRequirement already satisfied: pyperclip<1.7,>=1.6.0 in ./venv/lib/python3.7/site-packages (from mitmproxy) (1.6.5)\nRequirement already satisfied: passlib<1.8,>=1.6.5 in ./venv/lib/python3.7/site-packages (from mitmproxy) (1.7.1)\nRequirement already satisfied: kaitaistruct<0.9,>=0.7 in ./venv/lib/python3.7/site-packages (from mitmproxy) (0.8)\nRequirement already satisfied: click<7,>=6.2 in ./venv/lib/python3.7/site-packages (from mitmproxy) (6.7)\nRequirement already satisfied: pyasn1<0.5,>=0.3.1 in ./venv/lib/python3.7/site-packages (from mitmproxy) (0.4.5)\nCollecting brotlipy<0.8,>=0.7.0 (from mitmproxy)\nUsing cached https://files.pythonhosted.org/packages/d9/91/bc79b88590e4f662bd40a55a2b6beb0f15da4726732efec5aa5a3763d856/brotlipy-0.7.0.tar.gz\nRequirement already satisfied: ldap3<2.6,>=2.5 in ./venv/lib/python3.7/site-packages (from mitmproxy) (2.5.2)\nRequirement already satisfied: pyparsing<2.3,>=2.1.3 in ./venv/lib/python3.7/site-packages (from mitmproxy) (2.2.2)\nRequirement already satisfied: urwid<2.1,>=2.0.1 in ./venv/lib/python3.7/site-packages (from mitmproxy) (2.0.1)\nRequirement already satisfied: pyOpenSSL<18.1,>=17.5 in ./venv/lib/python3.7/site-packages (from mitmproxy) (18.0.0)\nRequirement already satisfied: blinker<1.5,>=1.4 in ./venv/lib/python3.7/site-packages (from mitmproxy) (1.4)\nRequirement already satisfied: ruamel.yaml<0.16,>=0.13.2 in ./venv/lib/python3.7/site-packages (from mitmproxy) (0.15.87)\nRequirement already satisfied: sortedcontainers<2.1,>=1.5.4 in ./venv/lib/python3.7/site-packages (from mitmproxy) (2.0.5)\nRequirement already satisfied: wsproto<0.12.0,>=0.11.0 in ./venv/lib/python3.7/site-packages (from mitmproxy) (0.11.0)\nRequirement already satisfied: hyperframe<6,>=5.1.0 in ./venv/lib/python3.7/site-packages (from mitmproxy) (5.2.0)\nRequirement already satisfied: hpack<4,>=2.3 in ./venv/lib/python3.7/site-packages (from h2<4,>=3.0.1->mitmproxy) (3.0.0)\nRequirement already satisfied: idna>=2.1 in ./venv/lib/python3.7/site-packages (from cryptography<2.4,>=2.1.4->mitmproxy) (2.8)\nRequirement already satisfied: cffi!=1.11.3,>=1.7 in ./venv/lib/python3.7/site-packages (from cryptography<2.4,>=2.1.4->mitmproxy) (1.11.5)\nRequirement already satisfied: asn1crypto>=0.21.0 in ./venv/lib/python3.7/site-packages (from cryptography<2.4,>=2.1.4->mitmproxy) (0.24.0)\nRequirement already satisfied: six>=1.4.1 in ./venv/lib/python3.7/site-packages (from cryptography<2.4,>=2.1.4->mitmproxy) (1.12.0)\nRequirement already satisfied: h11~=0.7.0 in ./venv/lib/python3.7/site-packages (from wsproto<0.12.0,>=0.11.0->mitmproxy) (0.7.0)\nRequirement already satisfied: pycparser in ./venv/lib/python3.7/site-packages (from cffi!=1.11.3,>=1.7->cryptography<2.4,>=2.1.4->mitmproxy) (2.19)\nInstalling collected packages: brotlipy, mitmproxy\nRunning setup.py install for brotlipy ... error\nComplete output from command /Users/zimengfang/python/scrapy\u9879\u76ee/venv/bin/phon -u -c \"import setuptools, tokenize;file='/private/var/folders/t4/flv3wjsj56qdjty1156d45fh0000gn/T/pip-install-insevcl0/brotlipy/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, file, 'exec'))\" install --record /private/var/folders/t4/flv3wjsj56qdjty1156d45fh0000gn/T/pip-record-81pz3s4f/install-record.txt --single-version-externally-managed --compile --install-headers /Users/zimengfang/python/scrapy\u9879\u76ee/venv/include/site/python3.7/brotlipy:\nrunning install\nrunning build\nrunning build_py\ncreating build\ncreating build/lib.macosx-10.6-intel-3.7\ncreating build/lib.macosx-10.6-intel-3.7/brotli\ncopying src/brotli/build.py -> build/lib.macosx-10.6-intel-3.7/brotli\ncopying src/brotli/init.py -> build/lib.macosx-10.6-intel-3.7/brotli\ncopying src/brotli/brotli.py -> build/lib.macosx-10.6-intel-3.7/brotli\nrunning build_clib\nbuilding 'libbrotli' library\ncreating build/temp.macosx-10.6-intel-3.7\ncreating build/temp.macosx-10.6-intel-3.7/libbrotli\ncreating build/temp.macosx-10.6-intel-3.7/libbrotli/common\ncreating build/temp.macosx-10.6-intel-3.7/libbrotli/dec\ncreating build/temp.macosx-10.6-intel-3.7/libbrotli/enc\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/common/dictionary.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/common/dictionary.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/dec/huffman.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/dec/huffman.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/dec/bit_reader.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/dec/bit_reader.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/dec/decode.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/dec/decode.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/dec/state.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/dec/state.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/backward_references.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/backward_references.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/backward_references_hq.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/backward_references_hq.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/bit_cost.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/bit_cost.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/block_splitter.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/block_splitter.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/histogram.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/histogram.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/memory.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/memory.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/literal_cost.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/literal_cost.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/brotli_bit_stream.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/brotli_bit_stream.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/compress_fragment_two_pass.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/compress_fragment_two_pass.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/compress_fragment.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/compress_fragment.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/cluster.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/cluster.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/utf8_util.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/utf8_util.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/encode.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/encode.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/metablock.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/metablock.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/static_dict.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/static_dict.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/dictionary_hash.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/dictionary_hash.o\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli/include -Ilibbrotli/ -Isrc/brotli -c libbrotli/enc/entropy_encode.c -o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/entropy_encode.o\nar rcs build/temp.macosx-10.6-intel-3.7/liblibbrotli.a build/temp.macosx-10.6-intel-3.7/libbrotli/common/dictionary.o build/temp.macosx-10.6-intel-3.7/libbrotli/dec/huffman.o build/temp.macosx-10.6-intel-3.7/libbrotli/dec/bit_reader.o build/temp.macosx-10.6-intel-3.7/libbrotli/dec/decode.o build/temp.macosx-10.6-intel-3.7/libbrotli/dec/state.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/backward_references.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/backward_references_hq.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/bit_cost.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/block_splitter.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/histogram.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/memory.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/literal_cost.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/brotli_bit_stream.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/compress_fragment_two_pass.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/compress_fragment.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/cluster.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/utf8_util.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/encode.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/metablock.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/static_dict.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/dictionary_hash.o build/temp.macosx-10.6-intel-3.7/libbrotli/enc/entropy_encode.o\nwarning: /Library/Developer/CommandLineTools/usr/bin/ranlib: archive library: build/temp.macosx-10.6-intel-3.7/liblibbrotli.a will be fat and ar(1) will not be able to operate on it\nranlib build/temp.macosx-10.6-intel-3.7/liblibbrotli.a\nrunning build_ext\ngenerating cffi module 'build/temp.macosx-10.6-intel-3.7/_brotli.c'\nbuilding '_brotli' extension\ncreating build/temp.macosx-10.6-intel-3.7/build\ncreating build/temp.macosx-10.6-intel-3.7/build/temp.macosx-10.6-intel-3.7\ngcc -fno-strict-aliasing -Wsign-compare -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -arch i386 -arch x86_64 -g -Ilibbrotli -Ilibbrotli/include -I/Users/zimengfang/python/scrapy\u9879\u76ee/venv/include -I/Library/Frameworks/Python.frawork/Versions/3.7/include/python3.7m -c build/temp.macosx-10.6-intel-3.7/_brotli.c -o build/temp.macosx-10.6-intel-3.7/build/temp.macosx-10.6-intel-3.7/_brotli.o\ngcc -bundle -undefined dynamic_lookup -arch i386 -arch x86_64 -g build/temp.macosx-10.6-intel-3.7/build/temp.macosx-10.6-intel-3.7/_brotli.o -Lbuild/temp.macosx-10.6-intel-3.7 -llibbrotli -lstdc++ -llibbrotli -o build/lib.macosx-10.6-intel-3.7/brotli/_brotli.abi3.so\nclang: warning: libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9 [-Wdeprecated]\nclang: warning: libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9 [-Wdeprecated]\nld: library not found for -lstdc++\nclang: error: linker command failed with exit code 1 (use -v to see invocation)\nerror: command 'gcc' failed with exit status 1\n----------------------------------------", "issue_status": "Open", "issue_reporting_time": "2019-01-26T21:39:42Z"}, "73": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3457", "issue_id": "#3457", "issue_summary": "allow mitmweb to export request as cURL command", "issue_description": "baptx commented on 25 Jan 2019\nIt looks like it is only possible to export a request as cURL command in mitmproxy command-line version and not in mitmweb.\n6", "issue_status": "Open", "issue_reporting_time": "2019-01-25T16:29:21Z"}, "74": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3450", "issue_id": "#3450", "issue_summary": "mitmdump memory grows", "issue_description": "ubergeek42 commented on 16 Jan 2019\nSteps to reproduce the problem:\nLaunch mitmdump, the options don't really seem to matter much(I've tried transparent, and regular proxy, with and without scripts)\nRun htop or similar and filter for the mitmdump process, observe Res/Virt memory usage.\nLoad fast.com, or literally any website\nCheck memory usage again, observe that it's gone up(and will continue to increase as more requests are made).\nWait a while, and observe that the memory usage never goes back down.\nGiven ~10 minutes I'm able to grow the process from ~50MiB(when it initially starts before receiving any requests) to around ~550MiB(By just going to e.g. news.ycombinator.com and clicking through to every article link on the page). It seems to grow more when loading unique pages, refreshing the same page over and over again grows the resource usage, but not as quickly as loading different sites.\nAny other comments? What have you tried so far?\nI've tried setting websocket streaming to true, stream_large_bodies to 1, and different requests: I can trigger this behavior by just running curl to a local http-only(non-ssl) site in a loop. I also tried disabling http2.\nI've seen a number of tickets about this, but nothing recent-ish. I saw there were great strides made in the past to fix these memory issues with mitmdump, so I'm curious if this bug report is useful to you.\n#2828 - related recent issue\nhttps://discourse.mitmproxy.org/t/mitmdump-large-memory-consumption/197\nI am happy to run any additional tests/test out any patches/config options/etc. I'd also appreciate any pointers in the right direction to help narrow down the cause of the memory usage myself.\nSystem information\nI'm running inside a generic ubuntu:18.04 docker image, using system python and just doing pip3 install mitmproxy. I believe I've also tried the latest from git with the same issue.\n# mitmdump --version\nMitmproxy: 4.0.4\nPython:    3.6.7\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\nPlatform:  Linux-4.15.0-43-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Open", "issue_reporting_time": "2019-01-16T18:27:39Z"}, "75": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3445", "issue_id": "#3445", "issue_summary": "mitmproxy has crashed", "issue_description": "JamesZBL commented on 8 Jan 2019\nSteps to reproduce the problem:\nmitmdump -m transparent -s addons.py\nseveral hours later there comes the log\nlog:\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/net/tcp.py\", line 118, in read\ndata = self.o.read(rlen)\nFile \"/usr/lib/python3.6/socket.py\", line 586, in readinto\nreturn self._sock.recv_into(b)\nTimeoutError: [Errno 110] Connection timed out\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/server.py\", line 121, in handle\nroot_layer()\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in call\nlayer()\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in call\nlayer()\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in call\nlayer()\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/http.py\", line 188, in call\nif not self._process_flow(flow):\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/http.py\", line 282, in _process_flow\nf.request.data.content = b\"\".join(self.read_request_body(request))\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/net/http/http1/read.py\", line 138, in read_body\ncontent = rfile.read(chunk_size)\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/net/tcp.py\", line 136, in read\nraise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: [Errno 110] Connection timed out\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 4.0.4\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.15.0-43-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Open", "issue_reporting_time": "2019-01-08T13:37:57Z"}, "76": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3440", "issue_id": "#3440", "issue_summary": "Cannot install certificate on android", "issue_description": "Knifespirit commented on 1 Jan 2019\nSteps to reproduce the problem:\nStart mitmdump\nConfigure the proxy inside the wifi settings\nGo to mitm.it\nDownload the android version\nTry installing the cert from ssd\nYou cannot select any .pem files as a cert file\nAny other comments? What have you tried so far?\nI tried using the .p12 version (since I read that android accepts .p12 by default), that you can get from downloading the windows version. Atleast I was able to select the .p12 file, which I could not with the .pem file.\nBut the problem is. Android only accepts .p12 files with a non empty password.\nAndroid\nI got android 8.0\nSolution\nMake a .p12 version avaiable for download with a simple password instead of no password.", "issue_status": "Open", "issue_reporting_time": "2019-01-01T14:01:13Z"}, "77": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3438", "issue_id": "#3438", "issue_summary": "Unable to run windows.py redirector on Win10 + WSL Linux", "issue_description": "grzaks commented on 30 Dec 2018\nMy setup:\nWindows 10\nKali linux installed from Microsoft Store on top of Windows Subsystem for Linux\nIn Kali:\nMitmproxy: 4.0.4\nPython: 3.6.8rc1\nOpenSSL: OpenSSL 1.1.1 11 Sep 2018\nPlatform: Linux-4.4.0-17134-Microsoft-x86_64-with-Kali-kali-rolling-kali-rolling\nThe issue\nMitmproxy itself runs just fine on the Kali shell - it just doesn't get any traffic. I'm sure traffic from mobile device is redirected via this laptop because I can see it in wireshark. It's just the redirector which is not running.\nThere are IMHO two issues:\n1/ on WSL python the sys.platform says \"linux\" so mitmproxy/platform/__init__.py code does not even try to run windows.py - so no chance to get the traffic redirected:\nPython 3.6.8rc1 (default, Dec 12 2018, 06:12:40)\n[GCC 8.2.0] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import sys\n>>> sys.platform\n'linux'\n2/ if I try to run the windows.py script manually I'm getting issues on both WSL Kali shell and native Windows cmd.exe shell with windows version of Python installed. Details below:\nWSL Linux:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/platform/windows.py\", line 3, in <module>\n    import ctypes.wintypes\n  File \"/usr/lib/python3.6/ctypes/wintypes.py\", line 20, in <module>\n    class VARIANT_BOOL(ctypes._SimpleCData):\nValueError: _type_ 'v' not supported\nIf I understand things correctly WSL is unlike cygwin really a linux, so it'll be unable to run \"windows\" code. I get the same error when I open python3 shell and try to import ctypes.wintypes. Is it correct, that the windows.py script was never ment to be run from WSL shell?\nNative Windows cmd.exe shell\nI did install Python for windows and try to run the same windows.py script on it. First it required the click and then pydivert packages so I installed them via pip.exe.\nWhen I run python.exe windows.py without any arguments it works fine, displaying help message:\nwindows.py:174: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\n  class TcpConnectionTable(collections.Mapping):\nUsage: windows.py [OPTIONS] COMMAND [ARGS]...\n\nOptions:\n  --help  Show this message and exit.\n\nCommands:\n  connections  List all TCP connections and the associated PIDs.\n  redirect     Redirect flows to mitmproxy.\nThe connections command also works fine:\nwindows.py:174: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\n  class TcpConnectionTable(collections.Mapping):\n10.0.0.68:55739 -> 7908\n10.0.0.68:55740 -> 7908\n10.0.0.68:55741 -> 7908\n10.0.0.68:55751 -> 4400\n10.0.0.68:55752 -> 9892\n10.0.0.68:55912 -> 9892\n10.0.0.68:55922 -> 7908\n10.0.0.68:55938 -> 9892\n10.0.0.68:55939 -> 9892\n10.0.0.68:55940 -> 9892\n10.0.0.68:55941 -> 9892\n10.0.0.68:55942 -> 9892\nBut the redirect command fails with this traceback:\nwindows.py:174: DeprecationWarning: Using or importing the ABCs from 'collections' instead of from 'collections.abc' is deprecated, and in 3.8 it will stop working\n  class TcpConnectionTable(collections.Mapping):\n * Redirection active.\nTraceback (most recent call last):\n  File \".\\windows.py\", line 591, in <module>\n    cli()\n  File \"C:\\Users\\ibm\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\click\\core.py\", line 764, in __call__\n    return self.main(*args, **kwargs)\n  File \"C:\\Users\\ibm\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\click\\core.py\", line 717, in main\n    rv = self.invoke(ctx)\n  File \"C:\\Users\\ibm\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\click\\core.py\", line 1137, in invoke\n    return _process_result(sub_ctx.command.invoke(sub_ctx))\n  File \"C:\\Users\\ibm\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\click\\core.py\", line 956, in invoke\n    return ctx.invoke(self.callback, **ctx.params)\n  File \"C:\\Users\\ibm\\AppData\\Local\\Programs\\Python\\Python37-32\\lib\\site-packages\\click\\core.py\", line 555, in invoke\n    return callback(*args, **kwargs)\n  File \".\\windows.py\", line 571, in redirect\n    print(f\"   Filter: {proxy.request_filter}\")\nAttributeError: 'TransparentProxy' object has no attribute 'request_filter'\nAny idea how to fix that?", "issue_status": "Open", "issue_reporting_time": "2018-12-30T13:56:46Z"}, "78": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3434", "issue_id": "#3434", "issue_summary": "How can I read traffic record in file when capturing", "issue_description": "mikesxf commented on 27 Dec 2018\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\nI was using the release version 2.0 to capture traffic and using script to write them into file. At the same time, python code was used to read the file to get traffic for other use.\nRecently, I find that 2.0 has some bugs and it has been fixed in latter version. But when I replace 2.0 with 3.0, I can't get the traffic in file while it is capturing directly.\nIs there any API to get them for 3.0 or latter? Thank you!\nSystem information\nubuntu14.04\nmitmproxy release verson 2.0", "issue_status": "Open", "issue_reporting_time": "2018-12-27T03:34:04Z"}, "79": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3432", "issue_id": "#3432", "issue_summary": "The session key is not created during client handshake", "issue_description": "skotti commented on 21 Dec 2018 \u2022\nedited\nHello!\nI set up SSLKELOGFILE variable, but when I set it in wireshark only server<->mitmproxy part is decrypted.\nI attach two photos from wireshark with the traffic sent. As I have mitmproxy installed on the client, there are two recordings - on the lo interface and ens33.\nAs I see all steps of tls handshake are correct, so I think session key should be formed before these alert message are sent in both client<->mitmproxy and mitmproxy<->server. What could be the reason for that?", "issue_status": "Open", "issue_reporting_time": "2018-12-21T12:22:43Z"}, "80": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3431", "issue_id": "#3431", "issue_summary": "Bug report. mitmproxy has crashed!", "issue_description": "scorpioRED commented on 20 Dec 2018\nSteps to reproduce the problem:\nTry to debug ios application\nAny other comments? What have you tried so far?\nTraceback (most recent call last):ack (most recent call last):(more in eventlog)\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in call\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in call\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in call\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in call\nif not self._process_flow(flow):\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 260, in _process_flow\nreturn self.handle_regular_connect(f)\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 279, in call\nself.establish_tls_with_client_and_server()\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 354, in establish_tls_with_client_and_server\nself.ctx.connect()\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 300, in connect\nself.ctx.connect()ss_flow(flow):\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/base.py\", line 166, in connects_flow\nself.server_conn.connect()\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/connections.py\", line 267, in connect establish_server_connection\ntcp.TCPClient.connect(self)\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 463, in connect in connect\nself.ip_address = connection.getpeername()\nOSError: [Errno 22] Invalid argument4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 300, in connect\nself.ctx.connect()\nDuring handling of the above exception, another exception occurred:e-packages/mitmproxy/proxy/protocol/base.py\", line 166, in connect\nself.server_conn.connect()\nTraceback (most recent call last):y/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/connections.py\", line 267, in connect\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\nroot_layer()al/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 463, in connect\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 12, in call\nself.disconnect()nvalid argument\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/base.py\", line 147, in disconnect\nself.server_conn.finish()exception, another exception occurred:\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/connections.py\", line 299, in finish\ntcp.TCPClient.finish(self)st):\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 324, in finishandle\nself.wfile.flush()\nAttributeError: 'NoneType' object has no attribute 'flush'on3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 12, in call\nself.disconnect()\nmitmproxy has crashed!lar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/base.py\", line 147, in disconnect\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/connections.py\", line 299, in finish\ntcp.TCPClient.finish(self)\nFile \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 324, in finish\nself.wfile.flush()\nAttributeError: 'NoneType' object has no attribute 'flush'\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nSystem information\nMitmproxy: 4.0.1\nPython: 3.6.5\nOpenSSL: OpenSSL 1.0.2o 27 Mar 2018\nPlatform: Darwin-17.3.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2018-12-20T07:11:07Z"}, "81": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3430", "issue_id": "#3430", "issue_summary": "Change upstream proxy credentials", "issue_description": "iwex commented on 18 Dec 2018\nHello! How can I change upstream proxy credentials - username and password? Need something like https://github.com/mitmproxy/mitmproxy/blob/master/examples/complex/change_upstream_proxy.py", "issue_status": "Open", "issue_reporting_time": "2018-12-18T18:00:16Z"}, "82": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3426", "issue_id": "#3426", "issue_summary": "tcp eof in tranparent mitmproxy", "issue_description": "skotti commented on 17 Dec 2018 \u2022\nedited\nI Installed mitmproxy on a separate intermediate machine and set it to be in transparent mode. Handshake proceeds correctly but I always got this alert message in the end.\nI attach screenshot with messages seen in wireshark. Client Hello messages differ by two extensions: renegotiation and status request. Also in one case Server Hello answers with Session Ticket extension and in another without. Could this somehow influence on this alert? The third difference is in Certificate Request in one connection, but not in the other.\nWhat steps do you suggest to find out what the problem is and how could I modify code for me so that everything works?\nP.S.\nOn the picture:\n.134 - client\n.135 - server\n.136 - mitmproxy\nOn the client I set up path to .135 through .136, and on .136 added iptables rule for Prerouting\n\nBy the way you have this as comment in source code:\nSome TLS clients will not fail the handshake,\n# but will immediately throw an \"unexpected eof\" error on the first read.\n# The reason for this might be difficult to find, so we try to peek here to see if it\n# raises ann error.\nI think this is the case for me. How the error could be found?", "issue_status": "Open", "issue_reporting_time": "2018-12-17T03:59:11Z"}, "83": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3422", "issue_id": "#3422", "issue_summary": "Searching is broken in master", "issue_description": "Transfusion commented on 16 Dec 2018\nSteps to reproduce the problem:\nVisit any site via mitmproxy\nGo to the Response tab, press / to search and enter any string\nAny other comments? What have you tried so far?\n$ mitmproxy --mode socks5\nTraceback (most recent call last):\n  File \"/home/transfusion/mitmproxy/mitmproxy/master.py\", line 86, in run_loop\n    loop()\n  File \"/home/transfusion/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 286, in run\n    self._run()\n  File \"/home/transfusion/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 384, in _run\n    self.event_loop.run()\n  File \"/home/transfusion/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 1484, in run\n    reraise(*exc_info)\n  File \"/home/transfusion/mitmproxy/venv/lib/python3.6/site-packages/urwid/compat.py\", line 58, in reraise\n    raise value\n  File \"/usr/lib/python3.6/asyncio/events.py\", line 145, in _run\n    self._callback(*self._args)\n  File \"/home/transfusion/mitmproxy/venv/lib/python3.6/site-packages/urwid/raw_display.py\", line 404, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/transfusion/mitmproxy/venv/lib/python3.6/site-packages/urwid/raw_display.py\", line 502, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/transfusion/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 411, in _update\n    self.process_input(keys)\n  File \"/home/transfusion/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 511, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/transfusion/mitmproxy/mitmproxy/tools/console/window.py\", line 309, in keypress\n    k = super().keypress(size, k)\n  File \"/home/transfusion/mitmproxy/venv/lib/python3.6/site-packages/urwid/container.py\", line 1119, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/home/transfusion/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 192, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/home/transfusion/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 139, in keypress\n    self.command_history.add_command(self._w.cbuf, True)\nAttributeError: 'Edit' object has no attribute 'cbuf'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n        https://github.com/mitmproxy/mitmproxy\nSystem information\nMitmproxy: 5.0.0.dev (+209, commit e2bcca4)\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-4.15.0-36-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Open", "issue_reporting_time": "2018-12-16T08:17:58Z"}, "84": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3414", "issue_id": "#3414", "issue_summary": "mitmproxy crash on connection", "issue_description": "pholat commented on 10 Dec 2018\nIssue\nI've wanted to dump session keys for connection on port 1883 (mqtt) using transparent proxy to use them in Wire-shark to decrypt connection. Mitmproxy crashed.\nSteps to reproduce the problem:\nadd iptable rule: sudo iptables -t nat -A PREROUTING -i \"$device\" -p tcp --dport 8883 -j REDIRECT --to-port 1883\non default ubuntu 16.04 package mitmproxy v0.15\nrun: mitmproxy SSLKEYLOGFILE=\"$PWD/.mitmproxy/sslkeylogfile.txt\" mitmproxy -T --host -p 1883 -e --cert ./cacertfile.pem\non latest v4.0.4\nrun: SSLKEYLOGFILE=\"$PWD/sslkeylogfile.txt\" ./mitmproxy --mode transparent -p 1883 --certs ~/workspace/docker/rabbitmq-config/cacertfile.pem --ssl-insecure\ncreate (can be mqtt) host waiting for connection, using cacertfile.pem i.e. with eclipse-mosquitto or with RabbitMQ with MQTT enabled in my case.\nmake connection attempt to host\ncrash happens with logs below\nSystem information\nversion: mitmproxy 0.15\nLog:\nv0.15:\n`Exception in thread SlaveThread (0.0.0.0:1883):\nTraceback (most recent call last):\nFile \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\nFile \"/usr/lib/python2.7/dist-packages/libmproxy/controller.py\", line 83, in run\nFile \"/usr/lib/python2.7/dist-packages/netlib/tcp.py\", line 818, in serve_forever\nFile \"/usr/lib/python2.7/socket.py\", line 206, in accept\nerror: [Errno 24] Too many open files\nEvent log\n10.10.0.146:50490: clientconnect\n10.10.0.146:50492: clientconnect\n10.10.0.146:50494: clientconnect\n10.10.0.146:50496: clientconnect\n10.10.0.146:50498: clientconnect\n10.10.0.146:50500: clientconnect\n10.10.0.146:50502: clientconnect\n10.10.0.146:50504: clientconnect\n10.10.0.146:50506: clientconnect\n10.10.0.146:50508: clientconnect\n10.10.0.146:50510: clientconnect\n10.10.0.146:50512: clientconnect\n10.10.0.146:50514: clientconnect\n10.10.0.146:50516: clientconnect`\nv4.0.4\nException in thread ServerThread (('::', 1883, 0, 0)):\nTraceback (most recent call last):\nFile \"threading.py\", line 916, in _bootstrap_inner\nFile \"mitmproxy/master.py\", line 37, in run\nFile \"mitmproxy/net/tcp.py\", line 607, in serve_forever\nFile \"socket.py\", line 205, in accept\nOSError: [Errno 24] Too many open files", "issue_status": "Open", "issue_reporting_time": "2018-12-10T14:25:11Z"}, "85": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3412", "issue_id": "#3412", "issue_summary": "Mitmproxy is hanging when establishing connection ( libvirt + tls)", "issue_description": "skotti commented on 9 Dec 2018\nHello!\nI am trying to put mitmproxy between client and server in KVM infrastructure. Client send rpc messages to server with the help of libvirt library. I don't actually know how to add mitmproxy certificate to libvirt trusted certificates, so I decided to use libvirt internal ca. It is my local ca, just generated with certtools. I launch mitmdump ( I set ssl-insecure ans I always get an error about SNI)\nmitmdump --mode transparent --ssl-insecure --set confdir=/home/u/\nProxy server listening at http://*:8080\n192.168.246.134:47104: clientconnect\n::ffff:192.168.246.134:47104: Certificate verification error for None: unable to get local issuer certificate (errno: 20, depth: 0)\n::ffff:192.168.246.134:47104: Ignoring server verification error, continuing with connection\nAfter that mitmproxy is hanging, connection is not established and no messages are intercepted. What should be provided so that my CA could work in mitmproxy?\nhome/u/my_project/bin/mitmdump --version\nMitmproxy: 4.0.4\nPython: 3.6.7\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-4.15.0-42-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Open", "issue_reporting_time": "2018-12-08T19:08:01Z"}, "86": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3407", "issue_id": "#3407", "issue_summary": "Failed to open the har file generated by har_dump. py using harviewer", "issue_description": "xiwunongyue commented on 6 Dec 2018\nSteps to reproduce the problem:\n1.Run the mitmproxy's har_dump. Py file in liunx, and then use harviewer to open the generated dump. Har file.\nAny other comments? What have you tried so far?\nHar files cannot be generated by running har_dump. Py through CMD in Windows\nSystem information\nMitmproxy: 4.0.4\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-3.10.105-1.el6.elrepo.x86_64-x86_64-with-centos-6.9-Final", "issue_status": "Open", "issue_reporting_time": "2018-12-06T02:34:35Z"}, "87": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3406", "issue_id": "#3406", "issue_summary": "Custom app using mitmproxy (libmitmproxy)", "issue_description": "tasmaniac commented on 5 Dec 2018\nI am trying to bring a custom application from mitmproxy 0.18 to the current release.\nThe app has it's own UI and uses mitmproxy behind the scenes to capture and modify the project.\nWhat is the proper approach to this now with the change in architecture. Custom mitmproxy scripts will not allow me to build the UI the way I need it?", "issue_status": "Open", "issue_reporting_time": "2018-12-05T17:12:32Z"}, "88": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3402", "issue_id": "#3402", "issue_summary": "tests: taddons tctx.configure does not call configure on addon", "issue_description": "Member\nKriechi commented on 1 Dec 2018 \u2022\nedited\nOn git-master, if you have an addon foo.py with an added option foo:\na = tctx.script(tdata.path(\"foo.py\"))\ntctx.configure(a, foo='bar')\nthe ctx.options.foo gets updated, but the configure of addon a does not get called, and the addon therefor never re-configures itself to use the new option value.\n@cortesi introduced this breaking change 236a2fb#diff-e447662b406664bed7663e2bd8531104L115 in 236a2fb - looking at the diff, the previous behaviour make more sense to me: updating the options, and then calling configure on the addon.\nThis currently blocks #2861 due to failing tests. I'm wondering if other tests are affected as well, but never got noticed due to default values that just happen to work out of the box...\n/cc @mhils\n1", "issue_status": "Open", "issue_reporting_time": "2018-12-01T16:53:23Z"}, "89": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3400", "issue_id": "#3400", "issue_summary": "error: HTTP protocol error in client request: Invalid HTTP request form (expected: authority or absolute, got: relative)", "issue_description": "Amaleid commented on 1 Dec 2018\nWhen i try to use coffeeminer, the code works perfectly, but only 1 issue is caused, I can't make the devices in my network to connect to the httpserver and i cant execute the script on them error code below.\nroot@kali:~/Desktop/coffeeMiner-master# python3 coffeeMiner.py 10.20.2.15\ngateway: 10.20.2.15\nvictims:\n['10.20.2.20', '']\nLoading script injector.py\nProxy server listening at http://*:8080\n10.20.2.20:48010: clientconnect\n10.20.2.20:48012: clientconnect\n10.20.2.20:48010: HTTP protocol error in client request: Invalid HTTP request form (expected: authority or absolute, got: relative)\n10.20.2.20:48010: clientdisconnect\n10.20.2.20:48012: clientdisconnect", "issue_status": "Open", "issue_reporting_time": "2018-12-01T04:07:42Z"}, "90": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3399", "issue_id": "#3399", "issue_summary": "MemoryError occurs after a few minutes of streaming DASH encoded video", "issue_description": "cmck commented on 30 Nov 2018 \u2022\nedited\nSteps to reproduce the problem:\nSetup mitmdump in transparent mode: /usr/local/bin/mitmdump --mode transparent --listen-port 8081\nNavigate to a website where video of type MPEG-DASH is playing\nObserve the requests for the video stream in mitmdump:\n:: GET http:///some_dash_stream_file.mp4\n<< 206 Partial Content 2.18m\n...\nActual:\nFor each stream request, 'clientconnect' is observed in the log. No 'clientdisconnect' is observed. It looks like one thread is created for each http request but they never close\nFollowed by:\nError in processing of request from ('::ffff:192.168.42.244', 55736, 0, 0)\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.7/site-packages/mitmproxy/net/tcp.py\", line 621, in serve_forever\n    t.start()\n  File \"/usr/local/lib/python3.7/threading.py\", line 847, in start\n    _start_new_thread(self._bootstrap, ())\nRuntimeError: can't start new thread\nand eventually upon subsequent requests:\n<ip>:<port>: GET http://<server>/some_dash_stream_file.mp4\n                   << 206 Partial Content 32.22k\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.7/site-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/usr/local/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/usr/local/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/usr/local/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 392, in _process_flow\n    self.read_response_body(f.request, f.response)\nMemoryError\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nAny other comments? What have you tried so far?\nIs it possible for mitmproxy to completely ignore these requests? or for them to be re-written in such a way that one thread isn't created for each request? is this a bug? thanks :)\nI have tried:\n--ignore-hosts ip regex:80 for the video stream IP address\n--set http2=false\n--set stream_large_bodies=1\nusing mitmdump with a script that sets flow.response.stream = True for the video stream requests\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.0\nOpenSSL: OpenSSL 1.1.0f 25 May 2017\nPlatform: Linux-4.14.79-v7+-armv7l-with-debian-9.6", "issue_status": "Open", "issue_reporting_time": "2018-11-30T17:25:25Z"}, "91": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3398", "issue_id": "#3398", "issue_summary": "HTTPS tunneling doesn't seem to work in mitmproxy", "issue_description": "hiranya911 commented on 30 Nov 2018\nNot sure if I'm missing something obvious. But here goes:\nSteps to reproduce the problem:\nStart mitmproxy\nSend a HTTPS proxy request (note that the proxy URL is HTTPS):\ncurl -v -k https://jsonplaceholder.typicode.com/todos/1 --proxy-insecure --proxy https://localhost:8080\nOutput:\n* Establish HTTP proxy tunnel to jsonplaceholder.typicode.com:443\n> CONNECT jsonplaceholder.typicode.com:443 HTTP/1.1\n> Host: jsonplaceholder.typicode.com:443\n> User-Agent: curl/7.53.1\n> Proxy-Connection: Keep-Alive\n> \n< HTTP/1.1 502 Bad Gateway\n< Server: mitmproxy 4.0.4\n< Connection: close\n< Content-Length: 286\n< Content-Type: text/html\n< \n* Received HTTP code 502 from proxy after CONNECT\nAny other comments? What have you tried so far?\nHTTPS over HTTP tunneling works as expected:\n$ curl -v -k https://jsonplaceholder.typicode.com/todos/1 --proxy http://localhost:8080\n> GET /todos/1 HTTP/1.1\n> Host: jsonplaceholder.typicode.com\n> User-Agent: curl/7.53.1\n> Accept: */*\n> \n< HTTP/1.1 200 OK\n< Date: Fri, 30 Nov 2018 00:51:29 GMT\n< Content-Type: application/json; charset=utf-8\n< Content-Length: 83\n< Connection: keep-alive\nSystem information\nMitmproxy: 4.0.4 binary\nPython:    3.6.3\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Linux-4.17.0-3rodete2-amd64-x86_64-with-debian-buster-sid", "issue_status": "Open", "issue_reporting_time": "2018-11-30T01:00:01Z"}, "92": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3397", "issue_id": "#3397", "issue_summary": "mitmweb does not display icons in Firefox", "issue_description": "baptx commented on 30 Nov 2018 \u2022\nedited\nSteps to reproduce the problem:\nIcons are not displayed in mitmweb when using Firefox. It works with Chromium but both browser have 404 Not Found errors for fontawesome-webfont.woff and fontawesome-webfont.ttf files.\nIdeally, mitmweb should not depend on third-party libraries like Font Awesome and simply use a PNG sprite or inline SVG instead of the icon fonts (https://css-tricks.com/icon-fonts-vs-svg/).\nRelated issue: #3034\nYou can find a screenshot of the icons bug below:\nSystem information\nMitmproxy: 4.0.4\nPython: 3.6.7\nOpenSSL: OpenSSL 1.1.1 11 Sep 2018\nPlatform: Linux-4.15.0-36-generic-x86_64-with-Ubuntu-18.10-cosmic\n3", "issue_status": "Open", "issue_reporting_time": "2018-11-29T19:19:21Z"}, "93": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3396", "issue_id": "#3396", "issue_summary": "Injecting multiple websocket messages freezes mitmproxy", "issue_description": "andresriancho commented on 29 Nov 2018\n#3119 added the feature to inject new messages into existing websocket connections.\nThe injected messages get stored in two queues, defined here. The queues have maxsize=1.\nDuring an application security assessment I was using mitmproxy and noticed that when I wanted to inject more than one message the whole mitmproxy (actually mitmdump but I guess it is the same) froze while trying to put() the second message to the queue.\nAfter a little bit of debugging I changed the size of those queues (to 100), and my code started to work.\nSteps to reproduce the problem:\nCreate a script like:\ndef websocket_message(flow: websocket.WebSocketFlow) -> None:\n    flow.inject_message(flow.server_conn, '123')\n    flow.inject_message(flow.server_conn, '123')\nRun it and the code will freeze in the second call to inject_message\nAny other comments? What have you tried so far?\nNot sure if I'm doing something wrong: maybe I should do this in an async way? Maybe I should wait until the queue is empty?\nAnyways, wanted to report this because it might be a bug that others might hit too.\nSystem information\nLatest mitmproxy from github.", "issue_status": "Open", "issue_reporting_time": "2018-11-29T18:05:29Z"}, "94": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3393", "issue_id": "#3393", "issue_summary": "How can I allowed origin of the websocket of mitmweb", "issue_description": "monkeydp commented on 23 Nov 2018\nI wannt to connect the websocket of mitmweb by my own project, but check_origin() not allowed non-same-origin connection", "issue_status": "Open", "issue_reporting_time": "2018-11-23T12:21:56Z"}, "95": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3392", "issue_id": "#3392", "issue_summary": "how to replace flow.resposne.content to utf-8 in add-on script?", "issue_description": "luoshangyu commented on 22 Nov 2018 \u2022\nedited\nSteps to reproduce the problem:\nHi experts,\ni'm trying to use the mitmweb to work as the front view to watch the network traffic.\nbut when i was trying to replace the response.content, it said message content must be bytes.\ni tried to encode the string, but on the web it displays bytes not real utf-8 string, what should i do?\ncreate an add-on script\nload it\nby using this command:\nmitmweb --listen-port 443 --web-port 80 --no-web-open-browser --web-iface 0.0.0.0 -s rule.py\nusing this script\nimport mitmproxy.http\nfrom mitmproxy import ctx\nclass Rule:\ndef response(self, flow: mitmproxy.http.HTTPFlow):\nif 'xxx' in flow.request.url:\nwith open('5dfe8190-ee68-11e8-a251-6901d85114ca') as f:\nflow.response.content = f.read().encode('utf-8').decode('utf-8')\naddons = [\nRule()\n]\nactual it tell me:\nAddon error: Traceback (most recent call last):\nFile \"rule.py\", line 8, in response\nflow.response.content = f.read().encode('utf-8').decode('utf-8')\nFile \"mitmproxy/net/http/message.py\", line 115, in set_content\nTypeError: Message content must be bytes, not str. Please use .text if you want to assign a str.", "issue_status": "Open", "issue_reporting_time": "2018-11-22T15:32:48Z"}, "96": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3391", "issue_id": "#3391", "issue_summary": "Modifying websockets message content", "issue_description": "CapitanShinChan commented on 22 Nov 2018 \u2022\nedited\nSteps to reproduce the problem:\nCreate a simple script to modify the websocket's message content\nRun mitmdump like this: \"mitmdump.exe --script websockets_com.py --mode \"upstream:https://127.0.0.1:8090\" --ssl-insecure\"\nThe messages are sent unmodified to the upstream proxy and to the server. No errors or exceptions\nAny other comments? What have you tried so far?\nExample of my code (based on https://github.com/mitmproxy/mitmproxy/blob/master/examples/simple/websocket_messages.py):\ndef websocket_message(flow):\n    message = flow.messages[-1]\n    binContent= message.content\n    aux = umsgpack.unpackb(binContent)\n    finalJSON = json.dumps(decode_msgpack2(aux)) # decode_msgpack is a function that returns a dict\n    message.content = re.sub(r'.*', finalJSON, format(strutils.bytes_to_escaped_str(message.content)))\n    # I also tried:\n    ## message.content = finalJSON\n    ## flow.messages[-1].content = finalJSON\n    # And to set the content of the new message to plaintext instead of binary data (the original is binary)\n    ## message.type = 0x1\n    print(message.content) # here the JSON is printed as string, but it is still sent with the original content\nI've tried without the upstream proxy that I have only for debugging purposes (Burp), and the result is the same.\nSystem information\nWindows 10 x64\nPS C:\\WINDOWS\\system32> mitmdump.exe --version\nMitmproxy: 4.0.4\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Windows-10-10.0.15063-SP0", "issue_status": "Open", "issue_reporting_time": "2018-11-21T21:11:57Z"}, "97": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3386", "issue_id": "#3386", "issue_summary": "how to decrypt the tcp ssl traffic in transparent mode?", "issue_description": "daumbrella commented on 15 Nov 2018\nSteps to reproduce the problem:\nwhen i do :\n\"mitmproxy --mode transparent --showhost\"\nmitmproxy can decrypt all https trafiic which means the transparent is good.\nThen I want to decrypt tcp ssl traffic with this:\n\"mitmproxy --mode transparent --showhost --tcp :443\"\nthe eventlog shows \"Client handshake failed.\"\nand when i want to access some https websites , it suggests that I have a problem with the certificate.\nAny other comments? What have you tried so far?\nI have tried\n\"mitmproxy --mode transparent --showhost --tcp \".*\" \"\n\"mitmproxy --mode transparent --showhost --tcp \"ip:443\"\"\nthey won't help.\nSystem information\nmitmproxy version 4.0.4", "issue_status": "Open", "issue_reporting_time": "2018-11-15T11:32:11Z"}, "98": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3385", "issue_id": "#3385", "issue_summary": "mitmdump --save_stream_file does not flush to the stream file on exit", "issue_description": "blizzardplus commented on 14 Nov 2018 \u2022\nedited\nSteps to reproduce the problem:\nmitmdump does not flush to the stream file (through \"--save_stream_file\" or \"-w\" options) on exit. A number of times, I run the mitmdump and I can see the flows on the std output, but the stream file is empty upon exit. I am wondering if there's any mechanism to force the tool to flush all flows or manage how frequently it is written to file?\nAny other comments? What have you tried so far?\n1.I started mitmdump through a python script by calling run from mitmproxy.tools.main.\n2.The function creates a master object from dump.DumpMaster (in the case of mitmdump).\n3. I tried calling master.addons.get(\"save\").done() just before I call master.shutdown() but that doesn't seems to flush the remaining flows to the dump file.\n4-Other times, I notice the stream file is not empty, but I don't see any size change in the stream file upon exit, even though I can clearly see new flows on the std output after the file size changed, so I believe there are flows that have been captured by the tool but not reflected in the stream file.\nSystem information\nMitmproxy: 4.0.4 (+3, commit 5603eb5)\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.1-pre5 (beta) 17 Apr 2018\nPlatform: Linux-4.9.35-v7+-armv7l-with-debian-8.0", "issue_status": "Open", "issue_reporting_time": "2018-11-13T20:43:12Z"}, "99": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3381", "issue_id": "#3381", "issue_summary": "handle connection timeout error", "issue_description": "mengluo0107 commented on 9 Nov 2018\nSteps to reproduce the problem:\nTo save traffics into a har file, I used har_dump.py code. But the traffics are only saved if their responses are received. If I need to save traffics(requests) with connection timeout error, I think I should defined an event handler for error which should be called when a flow error occurred. However, this event is never called, even though there is a connection timeout error.\nWhat I defined is as follows,\ndef error(flow):\ntimestamp = datetime.fromtimestamp(flow.error.msg, tzlocal.get_localzone()).isoformat()\nstates = flow.error.get_state()\nmitmproxy.ctx.log(states)\nentry = {\n\"timestamp\" : timestamp,\n\"states\": states\n}\nHAR[\"log\"][\"entries\"].append(entry)\nSystem information\n3.0.4\n1", "issue_status": "Open", "issue_reporting_time": "2018-11-09T05:08:50Z"}, "100": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3379", "issue_id": "#3379", "issue_summary": "Crashed on image upload", "issue_description": "ichux commented on 6 Nov 2018\nSteps to reproduce the problem:\nI ran a simple Python Flask application for uploading a file\nIt worked well for a file like .txt but failed for an image\nPlease note that the file was properly uploaded to the server\nThe image is attached\nError is shown below\nTraceback (most recent call last):\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/mitmproxy/master.py\", line 86, in run_loop\n    loop()\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/main_loop.py\", line 286, in run\n    self._run()\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/main_loop.py\", line 384, in _run\n    self.event_loop.run()\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/main_loop.py\", line 1484, in run\n    reraise(*exc_info)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/compat.py\", line 58, in reraise\n    raise value\n  File \"/usr/local/Cellar/python/3.7.0/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py\", line 88, in _run\n    self._context.run(self._callback, *self._args)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/main_loop.py\", line 1443, in faux_idle_callback\n    callback()\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/main_loop.py\", line 572, in entering_idle\n    self.draw_screen()\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/main_loop.py\", line 586, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/decoration.py\", line 226, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/widget.py\", line 1765, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/listbox.py\", line 501, in render\n    canvas = widget.render((maxcol,))\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/widget.py\", line 1004, in render\n    return apply_text_layout(text, attr, trans, maxcol)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/canvas.py\", line 1315, in apply_text_layout\n    return TextCanvas(t, a, c, maxcol=maxcol)\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/urwid/canvas.py\", line 358, in __init__\n    raise CanvasError(\"Canvas text is wider than the maxcol specified \\n%r\\n%r\\n%r\"%(maxcol,widths,text))\nurwid.canvas.CanvasError: Canvas text is wider than the maxcol specified \n133\n[86, 133, 133, 101, 114, 92, 134, 133, 133, 134, 134, 133, 133, 134, 133, 133, 44, 135, 134, 133, 66, 133, 133, 96, 78, 130, 102, 109, 133, 113, 132, 125, 132, 84, 123, 133, 134, 103, 94, 123, 134, 133, 134, 107, 123, 134, 133, 134, 107, 123, 134, 133, 134, 133, 135, 133, 133, 122, 21, 134, 133, 133, 134, 133, 133, 135, 130, 129, 130, 133, 133, 55, 134, 111, 25, 132, 105, 118, 122, 115, 105, 133, 133, 134, 133, 133, 133, 133, 133, 134, 134, 120, 133, 133, 133, 134, 134, 134, 133, 117, 72, 133, 134, 134, 133, 133, 134, 134, 130, 127, 131, 67, 135, 5, 133, 134, 133, 133, 136, 133, 99, 133, 134, 135, 134, 133, 134, 133, 133, 132, 91, 133, 134, 82, 122, 133, 133, 133, 133, 134, 134, 134, 134, 16, 133, 133, 134, 133, 134, 133, 133, 133, 134, 21, 130, 89, 114, 133, 133, 135, 133, 133, 112, 134, 133, 133, 135, 133, 126, 59, 130, 134, 38, 129, 133, 134, 134, 133, 46, 134, 84, 131, 133, 133, 60, 133, 132, 135, 133, 135, 134, 132, 134, 131, 135, 133, 109, 132, 135, 132, 86, 134, 133, 134, 133, 133, 133, 54, 134, 134, 111, 127, 122, 134, 133, 131, 133, 134, 134, 133, 134, 134, 130, 74, 70, 96, 97, 133, 133, 132, 107, 73, 64, 133, 112, 132, 81, 73, 64, 133, 112, 132, 81, 73, 64, 133, 112, 132, 130, 133, 133, 133, 133, 133, 133, 133, 111]\n[b'file: ?PNG....IHDR...*...?.....???....(iCCPICC Profile..H???.XS?.??$$$?@.???.)??H?*?.I                                               ', b'??.T???kAE.+?\"??Z.Yl??\"??C..e],?Py?.??????}s?3g?s???..T??\"Q.?.@?0W..?????$=.. ....@?(??.'Q?H?B.....IEND?B`?\"]\n\nTraceback (most recent call last):\n  File \"/Users/ichux/Documents/.venv/proxy/lib/python3.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\nTypeError: 'NoneType' object is not callable\nmitmproxy has crashed!\nAny other comments? What have you tried so far?\nI haven't tried any other thing except for the fact that it worked will with a .txt file but failed for an image.\nSystem information\nmitmproxy==4.0.4", "issue_status": "Open", "issue_reporting_time": "2018-11-06T10:00:03Z"}, "101": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3378", "issue_id": "#3378", "issue_summary": "MITMProxy API", "issue_description": "javixeneize commented on 5 Nov 2018\nHi\nI am developing an API for MITMProxy. Basically, it reads the dump file and collect all the relevant information (url, headers, body, response code etc...) for each of the requests.\nIt is still WIP (i have just done the very basics) but I think this would be a great addition to your tool\nIs this something that would be interesting for you? If so, the git for it is https://github.com/javixeneize/mitmproxy_api", "issue_status": "Open", "issue_reporting_time": "2018-11-05T15:43:20Z"}, "102": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3377", "issue_id": "#3377", "issue_summary": "Har file is not being written to disk when using har dump addon with Mitmdump 4.0.4", "issue_description": "YafimK commented on 5 Nov 2018\nartifacts:\nmitmdump 4.0.2 - downloaded release binaries from the site marked as 4.0.4 (which is a bit odd)\nhar_dump example addon from github repository from '4.x' branch.\nSteps to reproduce the problem:\nTry to run 'mitmdump' from cmd, with the mitmdump example addon.\nNo har file is created on exit\n**also reproduced on MacOS.\nAny other comments? What have you tried so far?\nWorks perfectly with mitmdump 3.0.4\nSystem information\nMitmproxy: 4.0.2 binary\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-10-10.0.17134", "issue_status": "Open", "issue_reporting_time": "2018-11-05T13:23:53Z"}, "103": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3373", "issue_id": "#3373", "issue_summary": "mitmproxy auth + HTTPS site access doest not work with Apple iOS 12.1", "issue_description": "yurig93 commented on 4 Nov 2018\nSteps to reproduce the problem:\nStart a proxy with basic auth set (http proxy).\nConfigure iPhone to use your proxy (with auth).\nInstall custom mitm certificate.\nAccess an http site (should work) using safari.\nAccess an https site - you will get a blank page.\nNow un proxy without auth\nAccess https site (will work).\nAny other comments? What have you tried so far?\nIt seems that enabling auth on the proxy somehow breaks https site access with iOS.\nSystem information\n~/code $ mitmproxy --version\nMitmproxy: 4.0.4\nPython:    3.6.6\nOpenSSL:   OpenSSL 1.0.2p  14 Aug 2018\nPlatform:  Linux-4.4.111+-x86_64-with\n1", "issue_status": "Open", "issue_reporting_time": "2018-11-04T11:35:34Z"}, "104": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3372", "issue_id": "#3372", "issue_summary": "No module named '__mitmproxy_script__'", "issue_description": "KaltZK commented on 2 Nov 2018\nIn a directory like:\nproxy/\n\u251c\u2500\u2500 init.py\n\u251c\u2500\u2500 handler.py\n\u2514\u2500\u2500 submit.py\nI got the following message:\nin script handler.py: No module named 'mitmproxy_script'\nwhen I run\nmitmdump -s handler.py -p 6000\nwith the following code in handler.py\nfrom .submit import Foo\nand it is okay if i use\nfrom submit import Foo", "issue_status": "Open", "issue_reporting_time": "2018-11-02T03:45:37Z"}, "105": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3362", "issue_id": "#3362", "issue_summary": "Initiating HTTP/2 connections with prior knowledge are currently not supported", "issue_description": "raulsiles commented on 25 Oct 2018 \u2022\nedited\nSteps to reproduce the problem:\nRun mitmproxy in transparent mode:\nmitmproxy --mode transparent [--showhost]\nGenerate traffic through the transparent proxy (traffic is redirected to mitmproxy via iptables in Linux) from an Android client. The Android client tries multiple HTTP/2 connections to various Google servers, typically in the 216.58.x.y & 172.217.w.z IP address ranges.\nAll these connections appear in the Flows list as shown, followed by a \"Connection killed\" error message (in red color):\nPRI https://216.58.x.y HTTP/2.0\nThe log generates a related warning (\"warn:\", in orange color): \"Initiating HTTP/2 connections with prior knowledge are currently not supported\".\nAll these connections and error messages overload the Flows list with garbage, making difficult to complete the analysis over the interesting flows.\nQuestions and recommendations:\na)- May I suggest the creation of a global (not just for specific IP address ranges) temporary workaround or command line switch to be able to disable displaying these flows until HTTP/2 connections with prior knowledge is supported in mitmproxy? Current workaround:\n mitmproxy --mode transparent [--showhost] --ignore-hosts 172\\.217\\.\\d+\\.\\d+ --ignore-hosts 216\\.58\\.\\d+\\.\\d+\nb)- Are there any plans to support HTTP/2 connections with prior knowledge in the mitmproxy roadmap? ETA?\nAny other comments? What have you tried so far?\nDisabling HTTP/2 support in mitmproxy via the \"--no-http2\" option does not solve the issue, as it seems the Android client keeps trying these connections as HTTP/2, with no prior negotiation.\nSystem information\nKali Linux: mitmproxy --version\nMitmproxy: 4.0.4\nPython: 3.6.5rc1\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.15.0-kali3-amd64-x86_64-with-Kali-kali-rolling-kali-rolling\n6", "issue_status": "Open", "issue_reporting_time": "2018-10-25T10:27:46Z"}, "106": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3361", "issue_id": "#3361", "issue_summary": "Part of the interface return \u201ccontent missing\u201d", "issue_description": "susu123456789 commented on 25 Oct 2018\nSteps to reproduce the problem:\n1.Start the mitmproxy\n2.Visit the web page and find that part of the interface cannot return data\uff0crequest headers display \"provisional headers are shown\"\uff0cChrome's console display \"net::ERR_CONNECTION_CLOS\"\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.0\nOpenSSL: OpenSSL 1.0.2p 14 Aug 2018\nPlatform: Darwin-17.7.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2018-10-25T06:41:58Z"}, "107": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3357", "issue_id": "#3357", "issue_summary": "Recommend installation in a virtualenv", "issue_description": "cdunklau commented on 22 Oct 2018 \u2022\nedited\nI noticed that the advanced installation guide recommends using sudo for installation with pip. This can cause problems because pip and the system package manager disagree on who owns what, and in some cases can actually break the OS.\nInstead, I suggest advising to install in a virtualenv, or at least in the user site. I don't have the time now to make a full PR, but here's a suggested workflow, after getting Python 3.6 installed:\nMake sure you have the stdlib venv package. Some distributions don't include this (e.g. Debians), so you need to:\nsudo apt-get install python3-venv\nThen create a new virtualenv, and upgrade pip:\npython3 -m venv mitmproxy-env\nmitmproxy-env/bin/pip install --upgrade pip setuptools\nAnd install mitmproxy:\nmitmproxy-env/bin/pip install mitmproxy\nThe executables can be invoked directly with the path:\nmitmproxy-env/bin/mitmproxy [options]\n1", "issue_status": "Open", "issue_reporting_time": "2018-10-22T08:36:47Z"}, "108": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3354", "issue_id": "#3354", "issue_summary": "Two error responses on bad HTTP request", "issue_description": "slepogin commented on 19 Oct 2018 \u2022\nedited\nSteps to reproduce the problem:\nStart mitmdump or mitmproxy\n$ echo \"GET bad request HTTP/1.1\" | nc 0.0.0.0 8080\nThis would produce two errors in the response:\nHTTP/1.1 400 Bad Request\nServer: mitmproxy 5.0.0.dev\nConnection: close\nContent-Length: 290\nContent-Type: text/html\n\n<html>\n            <head>\n                <title>400 Bad Request</title>\n            </head>\n            <body>\n            <h1>400 Bad Request</h1>\n            <p>HttpSyntaxException(&quot;Bad HTTP request line: b&#x27;GET test me HTTP&#x27;&quot;,)</p>\n            </body>\n        </html>HTTP/1.1 502 Bad Gateway\nServer: mitmproxy 5.0.0.dev\nConnection: close\nContent-Length: 327\nContent-Type: text/html\n\n<html>\n            <head>\n                <title>502 Bad Gateway</title>\n            </head>\n            <body>\n            <h1>502 Bad Gateway</h1>\n            <p>ProtocolException(&quot;HTTP protocol error in client request: Bad HTTP request line: b&#x27;GET test me HTTP&#x27;&quot;,)</p>\n            </body>\n        </html>\nExpected behaivor - only one error.\nAny other comments? What have you tried so far?\nHappens due to propagating of ProtocolException from protocol/http.py:292 to server.py:143\nSystem information", "issue_status": "Open", "issue_reporting_time": "2018-10-19T13:32:44Z"}, "109": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3342", "issue_id": "#3342", "issue_summary": "Transport endpoint is not connected exception", "issue_description": "EndUser509 commented on 3 Oct 2018\nI am running mitmdump in transparent mode with an iOS client going through. Once a day or so I get the following crash dump on the screen but mitmdump continues to function:\nException in thread TCPConnectionHandler (ProxyServer: ::ffff:192.168.1.23:64925 -> :::8080):\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/threading.py\", line 916, in _bootstrap_inner\n    self.run()\n  File \"/usr/lib64/python3.6/threading.py\", line 864, in run\n    self._target(*self._args, **self._kwargs)\n  File \"/home/user/git/mitmproxy/mitmproxy/net/tcp.py\", line 588, in connection_thread\n    self.handle_client_connection(connection, client_address)\n  File \"/home/user/git/mitmproxy/mitmproxy/proxy/server.py\", line 66, in handle_client_connection\n    self.channel\n  File \"/home/user/git/mitmproxy/mitmproxy/proxy/server.py\", line 78, in __init__\n    None)\n  File \"/home/user/git/mitmproxy/mitmproxy/connections.py\", line 38, in __init__\n    super().__init__(client_connection, address, server)\n  File \"/home/usergit/mitmproxy/mitmproxy/net/tcp.py\", line 487, in __init__\n    super().__init__(connection)\n  File \"/home/user/git/mitmproxy/mitmproxy/net/tcp.py\", line 295, in __init__\n    self.ip_address = connection.getpeername()\nOSError: [Errno 107] Transport endpoint is not connected\nProbably some missing exception handling.\nSystem information\nMitmproxy: 5.0.0.dev (+81, commit 3f6147e)\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.17.19-200.fc28.x86_64-x86_64-with-fedora-28-Twenty_Eight", "issue_status": "Open", "issue_reporting_time": "2018-10-03T05:54:46Z"}, "110": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3341", "issue_id": "#3341", "issue_summary": "mitmproxy does not receive chunked mpeg/audio stream", "issue_description": "yherve commented on 2 Oct 2018\nHi\nI started to play yesterday with mitmproxy, which looks really awesome. Unfortunately I have a problem while streaming audio over http (https does not work either).\nSteps to reproduce the problem:\nmitmproxy -v  --set stream_large_bodies=1k\n\nhttp_proxy=http://localhost:8080 curl -i http://chai5she.cdn.dvmr.fr/fip-midfi.mp3?ID=radiofrance\nno response received by curl. The following output is reported by mitmproxy.\n>> GET http://chai5she.cdn.dvmr.fr/fip-midfi.mp3?ID=radiofrance\n   \u2190 200 audio/mpeg [content missing] 0ms\ntested with dev version (commitid a8b809d) and also with version installed by pip3\nSystem information\nubuntu 18.04 x64", "issue_status": "Open", "issue_reporting_time": "2018-10-02T08:31:18Z"}, "111": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3338", "issue_id": "#3338", "issue_summary": "call request addon in mitm with selenium", "issue_description": "ravi45722 commented on 27 Sep 2018\nSteps to reproduce the problem:\nCopy the counter example in the addons sections\nAdd an option in selenium \"--proxy-server=localhost:8080\"\nThen hit an url using driver.get(\"https://bitbucket.org/\")\nIts showing a log at the end saying We've seen 25 flows including css, png, js and everything.\nI need to call the request or any function only once (when I call the proxy for an url).\nI don't want this on internal request (png, js, css, html, external domains)\nAny other comments? What have you tried so far?\nI tried all the add-on functions available in the docs. Nothing worked for my use case\nI am expecting the output from my addon as 1 flow when I hit one url. Anyway for this??", "issue_status": "Open", "issue_reporting_time": "2018-09-27T11:46:05Z"}, "112": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3326", "issue_id": "#3326", "issue_summary": "How to get real ip address", "issue_description": "Zoe1808 commented on 11 Sep 2018\nDevice connects to a WiFi which provided by a Router, mitmproxy only recognizes the Router's ip, not the device real ip.\nThe Question is how to get the real device ip?\nDevice ip: 192.16.2.49\nRouter ip: 10.101.52.79", "issue_status": "Open", "issue_reporting_time": "2018-09-11T08:58:19Z"}, "113": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3321", "issue_id": "#3321", "issue_summary": "Upgrade ruamel.yaml", "issue_description": "Member\nmhils commented on 7 Sep 2018 \u2022\nedited\nUpgrading ruamel.yaml currently breaks mitmproxy. We need to adjust mitmproxy to the ruamel.yaml changes.\nconfig.yaml\nignore_hosts:\n- example.com\n- example.org\nTraceback:\n\u03bb mitmproxy\nTraceback (most recent call last):\n  File \"/home/user/venv/bin/mitmproxy\", line 9, in <module>\n    load_entry_point('mitmproxy', 'console_scripts', 'mitmproxy')()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/_main.py\", line 149, in mitmproxy\n    run(console.master.ConsoleMaster, cmdline.mitmproxy, args)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/_main.py\", line 93, in run\n    os.path.join(opts.confdir, OPTIONS_FILE_NAME),\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/optmanager.py\", line 527, in load_paths\n    load(opts, txt)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/optmanager.py\", line 507, in load\n    opts.update_defer(**data)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/optmanager.py\", line 221, in update_defer\n    unknown = self.update_known(**kwargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/optmanager.py\", line 216, in update_known\n    self._options[k].set(v)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/optmanager.py\", line 57, in set\n    typecheck.check_option_type(self.name, value, self.typespec)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/utils/typecheck.py\", line 63, in check_option_type\n    raise e\nTypeError: Expected typing.Sequence[str] for ignore_hosts, but got <class 'ruamel.yaml.comments.CommentedSeq'>.\n1", "issue_status": "Open", "issue_reporting_time": "2018-09-07T12:45:19Z"}, "114": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3313", "issue_id": "#3313", "issue_summary": "[Feature Request] Save filtered flows only in mitmweb", "issue_description": "coreywei commented on 5 Sep 2018\nIn mitmweb it is able to filter out flows with some search criteria, but it still saves all the flows when clicking on \"save\" button. So I have to delete unwanted flows one by one and then save.\nIt would be great if we can multi-select flows to delete/save.", "issue_status": "Open", "issue_reporting_time": "2018-09-05T07:52:43Z"}, "115": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3311", "issue_id": "#3311", "issue_summary": "mitmdump crashes", "issue_description": "miaonagemide commented on 3 Sep 2018\nSteps to reproduce the problem:\n1.run mitmdump with my python script, script is to intercept an android app video packets\n2.it automatically downloading, sometimes, maybe in 10 mins, maybe in 20mins, there is no http flow\n3.then when I Ctrl+C, there is no response, I have to continue press Ctrl+C to end the program. Then I got many \"mitmproxy has crashed!\" message in the command line\nAny other comments? What have you tried so far?\nhere is the message after last avaliable http:\n192.168.168.180:47697: Error in HTTP connection: HttpException('Unexpected EOF')\n192.168.168.180:47697: clientdisconnect\n192.168.168.180:48371: clientconnect\n192.168.168.180:56111: clientconnect\n::ffff:192.168.168.180:38581: Ping Received from client\n-> ping\n::ffff:192.168.168.180:38581: Pong Received from server\n->\n192.168.168.180:36381: Error in HTTP connection: HttpException('Unexpected EOF')\n192.168.168.180:36381: clientdisconnect\n192.168.168.180:55677: Error in HTTP connection: HttpException('Unexpected EOF')\n192.168.168.180:55677: clientdisconnect\n192.168.168.180:45515: Error in HTTP connection: HttpException('Unexpected EOF')\n192.168.168.180:45515: clientdisconnect\n192.168.168.180:38559: clientconnect\n192.168.168.180:56262: Error in HTTP connection: HttpException('Unexpected EOF')\n192.168.168.180:56262: clientdisconnect\n192.168.168.180:48222: Error in HTTP connection: HttpException('Unexpected EOF')\n192.168.168.180:48222: clientdisconnect\n192.168.168.180:36641: Error in HTTP connection: HttpException('Unexpected EOF')\nHere is the repeating message that was stucked then appeared after I force quit the program (Ctrl+C)\nTraceback (most recent call last):\nFile \"e:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\server.py\", line 121, in handle\nroot_layer()\nFile \"e:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 9, in call\nlayer()\nTypeError: 'NoneType' object is not callable\nmitmproxy has crashed!\n192.168.168.180:49942: Error in HTTP connection: HttpException('Unexpected EOF')Traceback (most recent call last):\nFile \"e:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\server.py\", line 121, in handle\nroot_layer()\nFile \"e:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 9, in call\nlayer()\nTypeError: 'NoneType' object is not callable\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.0\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Windows-10-10.0.16299-SP0\n1", "issue_status": "Open", "issue_reporting_time": "2018-09-03T05:09:16Z"}, "116": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3300", "issue_id": "#3300", "issue_summary": "Crash on ECONNRESET", "issue_description": "qwelias commented on 20 Aug 2018\nSteps to reproduce the problem:\nuse upstream proxy mode\nget a ECONNRESET\nAny other comments? What have you tried so far?\nError: 10.6.245.204:49483: Traceback (most recent call last):(more in eventlog)Traceback (most recent call last):\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/net/tcp.py\", line 95, in write\n    return self.o.sendall(v)\n  File \"/usr/lib/python3.7/site-packages/OpenSSL/SSL.py\", line 1765, in sendall\n    self._raise_ssl_error(self._ssl, result)\n  File \"/usr/lib/python3.7/site-packages/OpenSSL/SSL.py\", line 1631, in _raise_ssl_error\n    raise SysCallError(errno, errorcode.get(errno))\nOpenSSL.SSL.SysCallError: (104, 'ECONNRESET')\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 23, in __call__\n    layer()\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 262, in _process_flow\n    return self.handle_upstream_connect(f)\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 236, in handle_upstream_connect\n    return layer()\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 87, in __call__\n    layer()\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http2.py\", line 327, in __call__\n    self._initiate_server_conn()\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http2.py\", line 113, in _initiate_server_conn\n    self.server_conn.send(self.connections[self.server_conn].data_to_send())\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/connections.py\", line 273, in send\n    self.wfile.write(message)\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/net/tcp.py\", line 101, in write\n    raise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: (104, 'ECONNRESET')\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.0\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-4.18.3-arch1-1-ARCH-x86_64-with-arch\n1", "issue_status": "Open", "issue_reporting_time": "2018-08-20T16:18:46Z"}, "117": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3296", "issue_id": "#3296", "issue_summary": "Support 'http_proxy' and 'https_proxy' variables", "issue_description": "dejayc commented on 17 Aug 2018\nOK, this might be a really stupid suggestion, but is there any reason why mitmproxy doesn't support http_proxy and https_proxy environment variables?\nInstead of invoking:\nmitmproxy -p 8080 --mode=upstream:http://localhost:8081\nWhy not just invoke:\nhttp_proxy=http://localhost:8081 mitmproxy -p 8080", "issue_status": "Open", "issue_reporting_time": "2018-08-17T01:33:53Z"}, "118": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3289", "issue_id": "#3289", "issue_summary": "Improve Command Prompt UX", "issue_description": "Member\nmhils commented on 12 Aug 2018\nFrom justrs on Slack:\nI'm not a mitmproxy newbie but I installed a new version and I'm completely baffled. Can someone point me to how to edit a URL (or even see the full URL?) I load a flow and hit e -> d and \"flow.set @Focus url str\" shows up, but I have no idea what to do from there and cannot find it in the docs anywhere.\nThis feedback makes sense and applies to all keyboard shortcuts which open a command prompt. As a user, I probably expect some form of editor popping up. To the user it's not really clear that a command prompt has just opened. Can we make this clearer somehow?\nOne possible idea would be to update the bar above from this:\n\nTo this:\n@cortesi, any particular opinion?", "issue_status": "Open", "issue_reporting_time": "2018-08-12T15:06:00Z"}, "119": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3286", "issue_id": "#3286", "issue_summary": "Seeing content of a bad HTTPS request not possible", "issue_description": "CodingMarkus commented on 7 Aug 2018 \u2022\nedited\nI'm trying to monitor a client, that sends non-standard HTTPS requests, e.g. it uses methods other than GET, POST, PUT, etc. that are not mentioned by any known standard document. mitmproxy reacts to this by sending a 400 Bad Request back to the client, which is maybe technically correct but it's not showing the request anywhere. See, the request doesn't have to work, all I want to know is how the payload of the first request packet looks like and I can't because it's nowhere logged or otherwise shown.\nI tried to capture the whole traffic with Wireshark and made mitmproxy write a SSLKEYLOGFILE, however when I configure this file in Wireshark, I can still not see any decrypted SSL content. Not sure why this is not working, maybe because I have to use a transparent proxy and this cannot be done with a transparent proxy? Since the client also ignores proxy settings of its system and doesn't have a proxy support on its own, so using the transparent approach was the only way to get information at all. Now I have all the information I need except of this one non-standard call, which is the most important call of all.\nUsing mitmproxy 4.0.4, pre-built binary, on macOS 10.13.6\nUpdate\nOkay, I finally got Wireshark to dercrypt the SSL packets. All I had to do was capturing the packets on the client machine. Prior to that I was capturing them on the transparent proxy machine and that didn't work. So I finally was able to see the bad HTTP request.\nStill I would love to see mitmproxy to always display any request it got, including invalid ones that it refuses to forward. In that case it would show the request as is and it's own 400 Bad Request response as the actual response. Debugging broken requests sent over SSL is certainly one of the usage cases why people want to use mitmproxy and if then bad requests aren't even shown, it's a bit cumbersome having to use Wireshark for something that mitmproxy could have easily done.", "issue_status": "Open", "issue_reporting_time": "2018-08-06T18:56:27Z"}, "120": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3285", "issue_id": "#3285", "issue_summary": "Docs on ReadTheDocs outdated", "issue_description": "Contributor\nulope commented on 6 Aug 2018\nSteps to reproduce the problem:\nGoogle for mitmproxy docs\nMitmproxy on ReadTheDocs shows up relatively high in the results list\nNotice that the newest version on there is 2.x\nSolution: Either update or delete them on RTD.\n2", "issue_status": "Open", "issue_reporting_time": "2018-08-06T12:35:22Z"}, "121": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3283", "issue_id": "#3283", "issue_summary": "Mitmproxy problem with HTTPS", "issue_description": "MuhammadBor commented on 6 Aug 2018 \u2022\nedited\nI have setup mitmproxy properly.\nI use arpspoof attack correctly on my nettwork so as to perform MITM attack. the \u201carp -a\u201d shows that arpsoof works appropriately.\nI use the following command before starting mitmproxy process.\nsysctl -w net.ipv4.ip_forward=1\niptables -t nat -A PREROUTING -i wlan0 -p tcp --dport 80 -j REDIRECT --to-port 8080\niptables -t nat -A PREROUTING -i wlan0 -p tcp --dport 443 -j REDIRECT --to-port 8080\nThen, i install certificate on my device which is android and name it \u201cmitmproxy-ca-cert\u201d, and it sounds it is installed in correct way.\nThen i start mitmproxy using:\nmitmproxy --mode transparent --showhost\nThe mitmproxy works great on HTTP request, but any request with HTTPS, the page could not be load on victim browser and nothing shown in mitmproxy terminal.\nAny suggestion to resolve that? is there any command i may add to solve this problem.\nNote: Attacker Os: Kali Linux 2019\nVictim Os: Android 8", "issue_status": "Open", "issue_reporting_time": "2018-08-06T06:58:58Z"}, "122": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3270", "issue_id": "#3270", "issue_summary": "mitmdrump crashes with --ssl-insecure option with certain website requests", "issue_description": "kwilson7770 commented on 30 Jul 2018 \u2022\nedited\nSteps to reproduce the problem:\nInstall mitmproxy for Ubuntu Desktop 18.04.1 or CentOS-7-x86_64-Minimal-1804\nInstall mitmproxy-ca certificate on Windows 10 host. Confirm web browsing works with trust in the proxy\nMonitor \"mitmdump --mode transparent --no-http2 --ssl-insecure\" command output and see it crashes when Windows 10 tries to go to its websites (e.g. v10.vortex-win.data.microsoft.com). The following error message will be displayed:\n::ffff:10.0.0.209:50088: Certificate verification error for v20.vortex-win.data.microsoft.com: unable to get local issuer certificate (errno: 20, depth: 1)\n::ffff:10.0.0.209:50088: Ignoring server verification error, continuing with connection\n10.0.0.209:50088: Traceback (most recent call last):\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/net/tcp.py\", line 118, in read\n    data = self.o.read(rlen)\n  File \"/usr/local/lib/python3.6/dist-packages/OpenSSL/SSL.py\", line 1783, in recv\n    self._raise_ssl_error(self._ssl, result)\n  File \"/usr/local/lib/python3.6/dist-packages/OpenSSL/SSL.py\", line 1631, in _raise_ssl_error\n    raise SysCallError(errno, errorcode.get(errno))\nOpenSSL.SSL.SysCallError: (104, 'ECONNRESET')\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/http.py\", line 282, in _process_flow\n    f.request.data.content = b\"\".join(self.read_request_body(request))\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/net/http/http1/read.py\", line 138, in read_body\n    content = rfile.read(chunk_size)\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/net/tcp.py\", line 140, in read\n    raise exceptions.TlsException(str(e))\nmitmproxy.exceptions.TlsException: (104, 'ECONNRESET')\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/net/tcp.py\", line 118, in read\n    data = self.o.read(rlen)\n  File \"/usr/local/lib/python3.6/dist-packages/OpenSSL/SSL.py\", line 1783, in recv\n    self._raise_ssl_error(self._ssl, result)\n  File \"/usr/local/lib/python3.6/dist-packages/OpenSSL/SSL.py\", line 1631, in _raise_ssl_error\n    raise SysCallError(errno, errorcode.get(errno))\nOpenSSL.SSL.SysCallError: (104, 'ECONNRESET')\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/protocol/http.py\", line 282, in _process_flow\n    f.request.data.content = b\"\".join(self.read_request_body(request))\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/net/http/http1/read.py\", line 138, in read_body\n    content = rfile.read(chunk_size)\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/net/tcp.py\", line 140, in read\n    raise exceptions.TlsException(str(e))\nmitmproxy.exceptions.TlsException: (104, 'ECONNRESET')\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nAny other comments? What have you tried so far?\nIf I remove --ssl-insecure, mitmdump no longer crashes, but instead displays:\nCertificate verification error for v20.vortex-win.data.microsoft.com: unable to get local issuer certificate (errno: 20, depth: 1)\nInvalid certificate, closing connection. Pass --insecure to disable validation.\nIn addition, when running mitmdump --mode transparent --ssl-insecure (without --no-http2), it also crashes.\nI tried setting up a CentOS 7 version 1804 server and it has the same error messages and behavior.\nSystem information\nMitmproxy: 4.0.3\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.15.0-29-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Open", "issue_reporting_time": "2018-07-29T19:06:16Z"}, "123": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3257", "issue_id": "#3257", "issue_summary": "Configuring iPhone client for Transparent Mode & VPN", "issue_description": "wimbledon commented on 22 Jul 2018\nhttps://discourse.mitmproxy.org/t/configuring-iphone-client-for-transparent-mode-vpn/1118\nI've configured my iPhone app in transparent mode to my MacBook running mitmproxy successfully.\nNow, if I turn on VPN (HideMyAss) on my MacBook, no traffic gets passed to mitmproxy. Can any help getting this to work?\nI've followed the documentation exactly below to work successfully without VPN:\nhttps://docs.mitmproxy.org/stable/howto-transparent/\nSystem information\nMitmproxy: 4.0.3\nPython: 3.6.5\nOpenSSL: OpenSSL 1.0.2o 27 Mar 2018\nPlatform: Darwin-16.7.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2018-07-22T15:00:05Z"}, "124": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3253", "issue_id": "#3253", "issue_summary": "proxyauth with HTTPS not working on iPhone and MAC Safari - KCFErrorDomainCFNetwork error 310", "issue_description": "ggmartin commented on 21 Jul 2018\nHi, I am using mitmproxy in docker on digitalocean server.\nDocker version 17.12.0-ce, build c97c6d6\nMitmproxy: 4.0.3\nI have CA certificates imported on my MAC and iPhone successfuly.\nIf my runing confuguration is:\ndocker run --name mitmdump --rm -it -v ~/mitmproxy:/home/mitmproxy/.mitmproxy -p 3127:8080 mitmproxy/mitmproxy mitmdump --set block_global=false\neveriting works fine on MAC as well as on iPhone.\nWhen I add --proxyauth login:pass then HTTPS on MAC Safari does not work and all HTTPS on iPhone does not work too.\nAnother tests:\nSafari on MAC work fine only with HTTP\nSafari on iPhone work fine only with HTTP\ncurl on MAC work fine with both HTTP and HTTPS\nchrome on MAC work fine with both HTTP and HTTPS\nfirefox on MAC work fine with both HTTP and HTTPS\nFrom Safari on MAC I am getting KCFErrorDomainCFNetwork error 310", "issue_status": "Open", "issue_reporting_time": "2018-07-20T20:34:14Z"}, "125": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3249", "issue_id": "#3249", "issue_summary": "Unable to get filename in binary multipart/form-data", "issue_description": "oncecreated commented on 16 Jul 2018\nSteps to reproduce the problem:\nmitmproxy -p 8888\ncurl -X POST \"http://google.com/upload\" -H 'Content-type:multipart/form-data; boundary=----------a8ba1f6ad84944199d5346f69bb14140' --data-binary $'------------a8ba1f6ad84944199d5346f69bb14140/\\r\\nContent-Disposition: form-data; name=\"file\"; filename=\"error.log.zip\";\\r\\nContent-Type: application/octet-stream\\r\\n\\r\\nx\\x9c\\xbd\\x96\\xddR\\xab0\\x10\\xc7\\xaf\\xedS\\xe4\\xc2\\r\\n------------a8ba1f6ad84944199d5346f69bb14140--\\r\\n' -x localhost:8888\nCheck request data, only \"file\" field without filename\nSystem information\nMitmproxy: 4.0.3\nPython:    3.6.5\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Linux-4.9.4-galliumos-braswell-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Open", "issue_reporting_time": "2018-07-16T08:08:25Z"}, "126": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3246", "issue_id": "#3246", "issue_summary": "Mitm Installation & Root Certificate for Cuckoo", "issue_description": "saxenakanishk commented on 12 Jul 2018\nI tried to install mitmproxy by following the official site. But I am not sure whether it got installed or not. How can I verify that?\nPlease tell me what is mitm root certificate and how should I add it properly? I'll be using mitm for my malware analysis with cuckoo sandbox.\nIs the certificate need to be added on the host or guest machine of cuckoo sandbox?\nSystem information\nOn running \"mitmproxy --version\", I get a error saying -\n\"Error: mitmproxy requires a UTF console environment.\nSet your LANG environment variable to something like en_US.UTF-8\"\nCuckoo Version -\nCuckoo Sandbox 2.0.6\nOperating System -\nHost - Ubuntu 18.04 LTS (Bionic Beaver)\nGuest (VM) - Windows 7 Ultimate SP1 - x64 bit.\nI need this mitm running properly on my system with the certificate asap. Please help me. Thanks in advance.", "issue_status": "Open", "issue_reporting_time": "2018-07-12T13:18:30Z"}, "127": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3224", "issue_id": "#3224", "issue_summary": "requestheaders addon event problem", "issue_description": "Gigiarum commented on 26 Jun 2018\nI wrote an addon which implements both requestheaders and request addon events. Sometimes I receive None value from flow.request.host property in requestheaders. Same property in request event returns correct value. This problem does not appear for flow.request.path property.\nSystem information\nMitmproxy: 4.0.1\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-3.16.0-6-amd64-x86_64-with-debian-8.9", "issue_status": "Open", "issue_reporting_time": "2018-06-26T09:17:22Z"}, "128": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3223", "issue_id": "#3223", "issue_summary": "the certificate mitmproxy-ca-cert is not added", "issue_description": "rdbox commented on 26 Jun 2018 \u2022\nedited\nI was already tortured by how to add the mitmproxy-ca-cert certificate to Mozilla?\nWhy did not you solve this question, I read it and saw that 100500 questions have already been asked about this topic.\nIn the Mozilla repository, no certificate is added, when trying to do this I have nothing to do with it.\nwhat to do?\nmitmporxy version\ndownloaded the latest version today\nOS\nI use the windows 7 system", "issue_status": "Open", "issue_reporting_time": "2018-06-25T18:40:14Z"}, "129": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3221", "issue_id": "#3221", "issue_summary": "Event for message modifications", "issue_description": "pravic commented on 25 Jun 2018 \u2022\nedited\nMitmweb again (4.0.3).\nThere is an \"Edit Flow\" button that allows message content (and headers) modifications, after that I can press a \"Finish Edit\" button. Is there any addon-wide subscription to catch this event\nThere is an update event that sounds legit:\nUpdate is called when one or more flow objects have been modified, usually from a different addon.\nBut no, it isn't called after such modifications. So, it is either a bug or the update event is intended to a different purpose.\nActually, I've already solved it but adding a new event called updated that reflects user-triggered modifications (though I am not sure if I need the direct addons.trigger call or an indirect one via the self.master.channel.ask):\ndiff --git a/mitmproxy/tools/web/app.py b/mitmproxy/tools/web/app.py\nindex ae2394eb..da6d681c 100644\n--- a/mitmproxy/tools/web/app.py\n+++ b/mitmproxy/tools/web/app.py\n@@ -320,6 +320,7 @@ class FlowHandler(RequestHandler):\n         except APIError:\n             flow.revert()\n             raise\n+        self.master.addons.trigger(\"updated\", flow)\n         self.view.update([flow])\n\ndiff --git a/mitmproxy/eventsequence.py b/mitmproxy/eventsequence.py\nindex 79b1bed4..a652154e 100644\n--- a/mitmproxy/eventsequence.py\n+++ b/mitmproxy/eventsequence.py\n@@ -37,6 +37,7 @@ Events = frozenset([\n     \"load\",\n     \"running\",\n     \"update\",\n+    \"updated\",\n ])\nBut may be I am missing something.", "issue_status": "Open", "issue_reporting_time": "2018-06-24T19:04:57Z"}, "130": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3220", "issue_id": "#3220", "issue_summary": "Console string escaping round trips", "issue_description": "Member\ncortesi commented on 24 Jun 2018\nWe have a bit more work to do with console string escaping round trips. On the command line, enter the following:\n: console.command \"\"foo\"\"\nFirst, note that the highlighting is inconsistent. Second, note that what appears on the command-line afterwards is:\n: \\ foo\\\"\"\nThere are a few more round-trip issues of this sort.", "issue_status": "Open", "issue_reporting_time": "2018-06-23T22:11:37Z"}, "131": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3213", "issue_id": "#3213", "issue_summary": "How to access current message from content view", "issue_description": "pravic commented on 17 Jun 2018 \u2022\nedited\nI use mitmweb (because of Windows). My view requires access to request headers that seems impossible in case of response tab (metadata[\"headers\"] points to response headers).\nIs it possible to access the current (selected) flow from a view object?\nI've tried ctx.master.view.focus, but it always contains the first flow (it would be what I need otherwise).\nI saw a view.flows.resolve command but it isn't clear how to call it from an addon. ctx.master.commands.execute('view.flows.resolve @focus') just hangs.\nctx.master.view.focus_follow just points to the last available flow, not current.\nIt looks like the best option would be to pass the current flow (request/response) as an additional object in metadata", "issue_status": "Open", "issue_reporting_time": "2018-06-17T15:15:18Z"}, "132": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3198", "issue_id": "#3198", "issue_summary": "View API cleanup", "issue_description": "Member\nmadt1m commented on 10 Jun 2018\nI'd like to share some doubts and results collected while working on the View addon.\nThe goal of this work is to clean the view API to ensure that the access to its functions and properties is completely modular -- AKA, the view should only be accessed via the commands exposed through the API.\nNow, I found some frictions in the goal, stated as in below. I'll divide these frictions in two main areas:\nCommands not meant to be invoked on command line:\nMany commands are just thought to be called by other tools, in the code. Take all the commands that take or return flows e.g. @command.command(view.resolve). Registering these as commands expose them on command line, and this requires the command to:\nProvide a way to send in args as str\nProvide a way to print its output in DataViewer, still mantaining its type.\nThis can be solved by providing a 'front-end' for every type that is possibly returned from commands.\nCommands that return types not supported by Command Manager:\nTake this command (from my repo):\ndef focus_flow(self) -> typing.Optional[mitmproxy.flow.Flow]:\nOne of the most exploited 'view hacks' in the codebase is looking for currently focused flow.\nThose hacks expect the return type to be typing.Optional[mitmproxy.flow.Flow], and that makes sense, since when no flows are in the view, focus flow is None. Well, that return type is just unsupported by the Command Manager, so that command cannot be loaded.\nAgain, this can be solved by extending supported types, offering a good solution 'front-end' to represent Optional types (none message if type returned is None).\nSo, both of these issues can be solved, and this require an extension of the Command Manager. This seems to suggest a division between two classes of commands, user_commands and tool_commands. The latter would be masked from the console command line, since anyway, why the user is trying to \"resolve\" flows? That command is just intermediary, to resolve flows that have to be added, duplicated, removed, or filtered -- you continue.\nBut this extension is not to be made today, probably. I could try and look for some workarounds inside the view addon, to mantain the \"You have what you need with commands\" statement.\n@mitmproxy/devs what are your thoughts on this?", "issue_status": "Open", "issue_reporting_time": "2018-06-10T13:55:42Z"}, "133": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3191", "issue_id": "#3191", "issue_summary": "Memory Leaks in Native Code", "issue_description": "ironsalsa commented on 6 Jun 2018\nSteps to reproduce the problem:\nDownload and extract Linux binaries from https://github.com/mitmproxy/mitmproxy/releases/download/v4.0.1/mitmproxy-4.0.1-linux.tar.gz\nsudo ./mitmweb --web-iface 192.168.86.88 --web-port 8081 --showhost --listen-host 192.168.86.88 --listen-port 8080\nGenerate load from an external device or from a local browser. I use MITMProxy to capture video traffic, which tears through memory rather quickly against an HLS stream like http://bitdash-a.akamaihd.net/content/sintel/hls/playlist.m3u8. You can install https://addons.mozilla.org/en-US/firefox/addon/native_hls_playback/ in Firefox to get the playback to happen natively.\nWatch the stream tear through your RAM with .ts fragments (this is expected - video is heavy).\nClear the screen with MITMProxy --> New\nWatch the RAM usage - it won't go down, and will continue to rise when new fragments come in.\nAny other comments? What have you tried so far?\nOccurs in Docker and running natively tested on both x86 and ARMv7\nReproduced in Ubuntu 18.04 LTS and Alpine 3.7 Linux.\nI'm wondering if there's a part of the Python API for MITMProxy that MITMWeb needs to add to the \"New\" instruction in the React code.\nSystem information\nMitmproxy: 4.0.1 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.15.0-22-generic-x86_64-with-debian-buster-sid", "issue_status": "Open", "issue_reporting_time": "2018-06-05T21:38:31Z"}, "134": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3185", "issue_id": "#3185", "issue_summary": "Return full chain to client", "issue_description": "landzhev commented on 4 Jun 2018\nSteps to reproduce the problem:\nConfigure mitmproxy in transparent mode\nConfigure ~.mitmproxy/.mitmproxy-ca.pem to contain the ca certificate,intermediate certificate, root certificate and pkey\nStart mitmproxy\nWhen an HTTPS call is made through the mitmproxy the client receives only the certificate generated by mitmproxy, but not any of the configured ca certificate,intermediate certificate, root certificate\nIf mitmproxy can serve the whole certificate chain, it would not be needed to reconfigure all clients to trust the generated certificate by mitmproxy.\nAny other comments? What have you tried so far?\nA similar issue has been opened before (#174), but I was not able to find if it is fixed.\nSystem information\nMitmproxy: 3.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.4.0-92-generic-x86_64-with-debian-stretch-sid\n1", "issue_status": "Open", "issue_reporting_time": "2018-06-03T19:04:22Z"}, "135": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3168", "issue_id": "#3168", "issue_summary": "change_upstream_proxy_server", "issue_description": "baolitoumu commented on 27 May 2018 \u2022\nedited\ni have two http proxy serivce : http://104.199.205.163:8888 and http://104.155.220.54:8888\nwhen i am run driver.get('http://httpbin.org/ip')\nand mitmproxy\uff1a mitmproxy -s proxy.py --mode upstream:http://104.199.205.163:8888 --no-http2 --ssl-insecure --set upstream_cert=false\nshow ip \uff1a104.155.220.54\nmitmproxy -s proxy.py --mode upstream:http://default-upstream-proxy.local:8080/ --no-http2 --ssl-insecure --set upstream_cert=false\nshow the ip \uff1a104.196.15.117\nproxy.py\ndef request(flow):\n    proxy='104.155.220.54'\n    port=8888\n    flow.live.change_upstream_proxy_server((proxy,port))\nwhy i must set -mode upstream:http://104.199.205.163:8888 show this ip 104.155.220.54?\ncan I do it through a python script?\nWhere is the meaning of the option--mode upstream:http://104.199.205.163:8888\nI don't want to link extra servers\uff08104.155.220.54\uff09", "issue_status": "Open", "issue_reporting_time": "2018-05-27T15:12:05Z"}, "136": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3167", "issue_id": "#3167", "issue_summary": "Server replay does not cache POST requests", "issue_description": "gajus commented on 27 May 2018\nUsing mitmproxy v2 and server replay I was able to server replay all requests, including POST.\nIt appears that as of version v4 POST requests are not being replayed.\nIt is unclear having read the entire documentation what is the reason POST requests are not being cached.", "issue_status": "Open", "issue_reporting_time": "2018-05-27T14:08:12Z"}, "137": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3165", "issue_id": "#3165", "issue_summary": "How to configure the external viewer?", "issue_description": "gajus commented on 27 May 2018\nmitmproxy v4 has key binding v (\"View flow body in an external viewer\").\nIt appears to open the content of the response in nano. How do I change this to, e.g. Atom or browser?", "issue_status": "Open", "issue_reporting_time": "2018-05-27T12:43:56Z"}, "138": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3161", "issue_id": "#3161", "issue_summary": "RuntimeError: can't start new thread after few hours", "issue_description": "aznxfrost commented on 26 May 2018 \u2022\nedited\nSteps to reproduce the problem:\nRun mitmweb and set it up as a HTTP Proxy\nHave my other server tunnel through the proxy using PHP CURL\nAfter processing thousands of requests, mitmproxy will run out of threads with the following error:\nError in processing of request from ('::ffff:xxx.xxx.xxx.xxx', 42182, 0, 0)\nTraceback (most recent call last):\nFile \"mitmproxy\\net\\tcp.py\", line 621, in serve_forever\nFile \"threading.py\", line 846, in start\nRuntimeError: can't start new thread\nOnly way to keep mitmproxy working is keep restarting it every few hours so it closes the thread/leaks properly.\nNote. I have checked other two related issues but they were closed with no real solutions.\nSystem information\nmitmproxy v4.0 Windows Server 2016", "issue_status": "Open", "issue_reporting_time": "2018-05-25T23:20:51Z"}, "139": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3159", "issue_id": "#3159", "issue_summary": "Command language implementation", "issue_description": "Contributor\nkajojify commented on 25 May 2018\nSo, after long and super hot #3074 and #3087 discussions about command language syntax, I am ready to show ideas and some developments regarding the implementation.\nThe main goal of this issue is to represent the steps of implementation plan and to start implementation discussion in general.\nParser choosing\nIn order to construct our language, we need to find suitable parser.\nPrimary requirements for parser:\nSave current usability features like tab expansion, syntax highlighting (also for partial commands), type checking and underlying type conversion;\nease of integration with current implementation;\nspeed of lexing/parsing and ease of use;\nhigh quality code, maintenance and no additional dependencies;\ncompatible license.\nActually, we have two ways: write our own lexer/parser or use an existing solution.\nOwn parser\nFrom my point of view, it is worth writing our own parser, only if we have some very special requirements. Yeah, we have one - integration with command line features. But after looking through available parsers, I can say there are pretty good solutions, which will let us integrate without PITA.\nSo, please, don\u2019t think I am too lazy or I am just afraid of creating parser from scratch. I just think we have a ready-made qualitative solution and can go with it easily.\nUse an existing parser\nThere are many of them: first list, second list. These lists are pretty old but still can show, that there are many available variants. I found only one overview of modern parsers - https://tomassetti.me/parsing-in-python/. So, yes, I can agree with @cortesi, that not very much has been written about \u201cPython parsing libraries\u201d and \u201cCreating parsers using Python\u201d areas.\nAfter some searchings and dropping completely unsuitable and unmaintained parsers, I chose a few more or less suitable ones and then my choice fell on PLY. Why so?\nCompatible license.\nPLY-3.2 and newer releases are distributed under a BSD-license. So we can use it in mitmproxy codebase.\nPLY hasn\u2019t any additional dependencies. It is well-maintained and qualitative. It has well-known creator - David Beazley.\nYes, we are implementing small language, but it wouldn\u2019t be too bad to have fast-working implementation. For example, this is parsing speed comparison between PLY, funcparselib and pyparsing, when processing long summing expression (\u043c\u0441=ms) :\nAs you can see, PLY is winning by a big margin. Source.\nPersonally, I like this library, because:\na) it isn\u2019t overloaded with some excess abstractions.\nLexing\nExample of lexing - http://www.dabeaz.com/ply/ply.html#ply_nn4.\nIn short, if you need to lex something, just list the tokens you need, Write a regular expression for every token and call lex.lex():\nimport ply.lex as lex  \n\ntokens = (\u201cNAME\u201d, \u201cNUMBER\u201d)\n\n\nt_NAME = r\u201d\\d+\u201d\nt_NUMBER = r\u201d\\w+\u201d\n\n\nlexer = lex.lex()\nCongratulations, you have just created a lexer.\nParsing\nExample of parsing - http://www.dabeaz.com/ply/ply.html#ply_nn24.\nIn short, if you need to parse something, you need to describe grammar in BNF (yes, unfortunately not in EBNF), define a function for each BNF rule and call yacc.yacc().\nb) freedom of choice to structure lexer/parser.\nWe can build lexer/parser like separate module, class or closure.\nc) Advanced debugging and error handling support.\nd) It is more flexible in comparison to other parsers. More code, but more control I would say.\nSo, I think PLY should be our choice.\nMy experiments\nLast week I played with PLY and I am ready to show some results.\nIt isn\u2019t a final version of the language of course and there are still issues. Think of it like a small prototype of the language and PLY demonstration. Parentheses, braces and basic pipes are supported.\nhttps://github.com/kajojify/mitminterpreter\nFirst steps\nTo make the current version of command language work with PLY.\nSo, what I want to do is just \"port\" current lexer and parser on PLY.\ndescribe lexer inside separate lexer.py;\ndescribe parser inside separate parser.py;\nmake current usability features work with new lexer and parser.\nThen I will build up the language units around it. Parentheses, braces, pipes support etc. step by step.\nYou can look at PLY demonstration above and understand how it may look like.\nIf you don't mind, please, create separate branch for command language. See my PRs in the nearest time.", "issue_status": "Open", "issue_reporting_time": "2018-05-25T15:39:34Z"}, "140": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3144", "issue_id": "#3144", "issue_summary": "mitmweb - Does not support same addon options types as mitmproxy", "issue_description": "Contributor\ngcmurphy commented on 21 May 2018\nSteps to reproduce the problem:\nGiven this addon:\nfrom mitmproxy import http\n\nclass Reproducer:\n    def load(self, loader):\n        loader.add_option(name=\"this_will_break_things\",\n                          typespec=float,\n                          default=0.42,\n                          help=\"Float options not supported by mitmweb\")\n\n    def response(self, flow: http.HTTPFlow) -> None:\n        flow.response.status_code = 400\n        flow.response.content = b'opps'\n\naddons = [\n    Reproducer()\n]\nStart mitmweb with the addon:\n(mitmproxy-h3iGBSQq) \u279c  mitmproxy git:(mitmproxy) \u2717 mitmweb -s reproducer.py\nWeb server listening at http://127.0.0.1:8081/\nLoading script reproducer.py\nProxy server listening at http://*:8080\nERROR:tornado.application:Uncaught exception GET /options.json (127.0.0.1)\nHTTPServerRequest(protocol='http', host='127.0.0.1:8081', method='GET', uri='/options.json', version='HTTP/1.1', remote_ip='127.0.0.1')\nTraceback (most recent call last):\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/tornado/web.py\", line 1541, in _execute\n    result = method(*self.path_args, **self.path_kwargs)\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/mitmproxy/tools/web/app.py\", line 447, in get\n    self.write(optmanager.dump_dicts(self.master.options))\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/mitmproxy/optmanager.py\", line 463, in dump_dicts\n    t = typecheck.typespec_to_str(o.typespec)\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/mitmproxy/utils/typecheck.py\", line 85, in typespec_to_str\n    raise NotImplementedError\nNotImplementedError\nERROR:tornado.access:500 GET /options.json (127.0.0.1) 4.66ms\n^C%                                                                                                                                                                                                         \nAny other comments? What have you tried so far?\nReplacing the type of the option with str resolves the problem, however this does not reflect the documented supported types\nThis doesn't break mitmproxy however, only mitmweb.\nSystem information\n(mitmproxy-h3iGBSQq) \u279c  mitmproxy git:(mitmproxy) \u2717 mitmweb --version\nMitmproxy: 4.0.1 \nPython:    3.6.5\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2018-05-21T06:09:02Z"}, "141": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3142", "issue_id": "#3142", "issue_summary": "Documentation lacks basic usage examples", "issue_description": "stellarpower commented on 20 May 2018\nHi,\nmitmproxy looks like a really useful tool but I feel it is really let down by a lack of decent basic documentation. It's great that you go into detail on filter expressions, different modes of operation, and all that, but every section is lacking just a basic introduction and there's no basic user guide on how to use the software.\nFor example, the manual page on mitmproxy is just a guide on the keybindings. When I first start using a program, learning how to change the default keybindings is not on my mind. I would just want to see a basic example of how to create a simple setup and perform basic tasks in that setup. So a beginner's guide into starting up the proxy, filtering some content, intercepting and replaying, etc. would be a lot more useful. Similarly, the mitmweb documentation is just a screenshot, and the filter expressions page doesn't even explain how to use them, I'm just presented with a list of flows and no idea how to do anything with them. I'd been using the web interface but atm it's running so slowly on a very powerful laptop that I'm going back to the cli tool.\nI know you're pressed for developer time but I really think ten hours spent on documenting how to use the tool for beginners would go a lot further than ten hours of improvements in the codebase at this time.\nThanks\n11", "issue_status": "Open", "issue_reporting_time": "2018-05-20T01:24:04Z"}, "142": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3141", "issue_id": "#3141", "issue_summary": "Write API Documentation", "issue_description": "p-baum commented on 19 May 2018 \u2022\nedited\nI'm raising this issue because its not listed in #2895\nThere is practically no API documentation. I am currently studying machine generated diagrams to try to understand how this works. Its no fun.\nSomebody wrote \"You can either run mitmdump as a regular process and send it a Ctrl+C when you are finished (importing mitmdump from mitmproxy.tools.main would work as well), or you instantiate your own DumpMaster and thenn call master.shutdown() when you are finished.\" at https://discourse.mitmproxy.org/t/start-and-stop-mitmproxy-from-python-script/677.\nThe homepage boasts a screenshot showing this:\nfrom mitmproxy import http\n\ndef request(flow: http.HTTPFlow):\n    # redirect to different host\n    if flow.request.pretty_host == \"example.com\":\n        flow.request.host = \"mitmproxy.org\"\n    # answer from proxy\n    elif flow.request.path.endswith(\"/brew\"):\n     flow.response = http.HTTPResponse.make(\n            418, b\"I'm a teapot\",\n        )`\nIts not much to go on.", "issue_status": "Open", "issue_reporting_time": "2018-05-19T09:55:20Z"}, "143": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3140", "issue_id": "#3140", "issue_summary": "Add revocation information to certificates", "issue_description": "Yepoleb commented on 19 May 2018\nlibcurl with the WinSSL/Schannel backend fails with an SSL error if no revocation information is provided in the forged certificate. This is preventing me from intercepting an application that uses a statically linked libcurl.\nI was able to reproduce this issue using curl 7.60.0 configured with --without-ssl --with-winssl, compiled with MSYS2 mingw-w64-x86_64-gcc 7.3.0 on Windows 7. The full error message is curl: (35) schannel: next InitializeSecurityContext failed: Unknown error (0x80092012) - The revocation function was unable to check revocation for the certificate.\nI've not yet figured out what exactly is required by curl to accept the certificate, but I'll update the issue once I do. Adding an unresolved URL might just be enough to satisfy it, considering the awful state of revocation in general.\nSystem information\nMitmproxy: 3.0.3\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.16.0-1-amd64-x86_64-with-debian-buster-sid", "issue_status": "Open", "issue_reporting_time": "2018-05-19T02:12:50Z"}, "144": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3139", "issue_id": "#3139", "issue_summary": "Endless Loop when Using Transparent Mode on Same Machine", "issue_description": "stellarpower commented on 19 May 2018\nSteps to reproduce the problem\nAdd an entry in hosts file redirecting target website to localhost\nTurn on IP Forwarding\nSetup iptables as follows:\nsudo iptables -t nat -A PREROUTING -p tcp --dport 443 -j REDIRECT --to-port 8080\netc. etc.\nRun mitmproxy --mode transparent\nAny other comments? What have you tried so far?\nSeems that mitmproxy gets stuck in an endless loop as I'm trying to monitor the traffic on my own machine. It then bails out when there are too many open files and crashes. I'm not sure what's happening but I guess that when it opens the outgoing connection to the target website, it is getting the result from the hosts file, going to port 443 on localhost and being redirected back into itself. If this is the case then if a fix is desired I guess that when mitmproxy is looking up the target IP address it needs to bypass the local DNS server and get a result from the Internet, or at least somehow avoid using the hosts file.\nSystem information\nMitmproxy: 4.0.0 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.10.0-38-generic-x86_64-with-debian-stretch-sid (I'm actually using Mint)\n1", "issue_status": "Open", "issue_reporting_time": "2018-05-19T01:40:21Z"}, "145": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3123", "issue_id": "#3123", "issue_summary": "CLI tools and distribution", "issue_description": "Member\ncortesi commented on 14 May 2018\nIt's time to reassess how our CLI tools are named and distributed.\nAt the moment, we compile separate binaries for all our CLI tools (mitmproxy, mitmweb, mitmdump, pathod and pathoc). For each command, we bundle a complete self-contained interpreter and all its dependencies. This significantly bloats our distribution.\nWe need more commands. I'm speccing out a separate command for managing and installing mitmproxy addons. I also think we have a \"missing command\" for processing flows and exiting, without starting a proxy. Conflating this use case with mitmdump has caused significant complexity and confusion.\nAll of this together has tipped us over to a point where a single-binary distribution makes sense. See previous discussion in #1526.\nProposal\nI propose that we roll up all of our tools in a single command called mx, which is invoked as follows:\nmx --flags - equivalent to current mitmproxy --flags. This command takes no arguments, so can be the top-level.\nmx dump args - equivalent to mitmdump args. I think there's an argument for renaming this - the analogy with tcpdump grows tenuous, and \"dump\" is not really the most apt description of what the tool does.\nmx web args - equivalent to mitmweb args\nmx pathod args - equivalent to pathod args\nmx pathoc args - equivalent to pathoc args\nIn the next iteration, I would also like to add commands like:\nmx addon args - Addon installation and management (mx addon install, mx addon list, etc.)\nmx proc args - Command to process a set of flows and exit, used for conversion, client replay, etc. I'm not attached to the proc name here, so lets not argue about that one yet.", "issue_status": "Open", "issue_reporting_time": "2018-05-13T22:29:21Z"}, "146": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3092", "issue_id": "#3092", "issue_summary": "SSLv2 Handshake Packets Not Handled", "issue_description": "Yushatak commented on 2 May 2018 \u2022\nedited\nThe client is Windows for Workgroups 3.11 using an NDIS3 driver for a Kingston KNE20T card and running Opera 3.62 as the browser.\nPCAPs.zip\nTwo PCAP files here:\nmitmproxyOpera3.62https.pcap - With all ciphers enabled.\nmitmproxyOpera3.62httpsWithout168Bit.pcap - With the 168-bit 3DES disabled in the client.\nIt appears that 168-bit 3DES makes the bad request error happen pretty much every time, whereas it's hit-or-miss otherwise. On the occasions where there's no bad request, it hangs without ever responding to the client.\nBoth sessions were with ssl_client_version=all and ssl_server_version=all just to maximize compatibility, but the same errors occur without these options.\nSimilar behavior occurs with MSIE5 16-bit.\nMitmproxy: 3.0.4 binary\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-8.1-6.3.9600", "issue_status": "Open", "issue_reporting_time": "2018-05-02T11:48:40Z"}, "147": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3087", "issue_id": "#3087", "issue_summary": "Command language", "issue_description": "Member\ncortesi commented on 30 Apr 2018 \u2022\nedited\nCommand language proposal\nIn mimtproxy, users interact with addons (and by extension with mitmproxy itself) ONLY through commands and options. Commands have globally unique names, a set of typed arguments, and a single typed return value. The command language is the textual language users use to invoke and combine these typed addon commands.\nCommand names are always in the form of period separated paths (addon.command). Top level commands are indicated with a leading period (.cut), and are a shorthand for a fully qualified command where the addon and command name are the same (.cut == cut.cut).\nCommand invocation is in the style of Python function invocation, but without commas to separate arguments. In the top scope, brackets can optionally be omitted. In inner scopes brackets are mandatory. Invoked commands are executed once immediately when a command string is run.\nDeferred commands are command invocations preceded by a &. Deferred commands are executed every time they are used as a value.\nCommand pointers are command invocations preceded by a *. Command pointers are used as a value, with the command and all arguments passed to a receiving command. They are not invoked by the command language itself - whether and how to evaluate a command pointer is up to the receiving command. In our type notation we write a command pointer type as *cmd.\nA source<T> yields a possibly infinite stream of items of type T. Sources are the return value from a source command. The Python representation is as yet undefined, but these might be represented as asynchronous iterators or queues.\nA sink<T> accepts a stream of items of type T. Concretely, a sink<T> accepts values of type T, [T] and source<T>, and can be considered to be a union of these types. Sinks are the first argument of a sink command. The Python representation is as yet undefined, but might be iterators over asynchronous iterator objects or consumers of asynchronous queues.\nTwo-sided pipe commands. A command can be both a sink and a source, by accepting a sink as its first argument, and returning a source.\nPipes are denoted with the | operator, and link sinks and sources by passing the LHS as the first argument to the RHS. A command string can compose multiple pipe components into a pipe chain by using two-sided pipe commands. If a pipe chain ends with a source, the final source's emitted values are consumed and discarded. Using the | symbol with a non-sink command on the RHS is a type error. Sources can only be used with the pipe operator.\nPipe variables. Within a pipe component, the variable $this can be used for the current pipe item. We can define this precisely by imagining a command .each sink<T> *cmd -> source<U>. This command inspects the arguments to *cmd to find all occurances of $this. It then reads values from the sink, executes *cmd with occurances of $this replaced by the current value. If the command returns a value, that value is written to the output source. Otherwise, the input value (which may have been modified in-place) is written to the output source.\nArrays are enclosed in [].\nStrings are the primary value type in the language. Strings can be quoted if they contain special characters, or unquoted if they don't.\nType shorthands Each type can define a string format that is dynamically expanded into the underlying type. This can be a complex expansion. For example, for flows the string is resolved by selecting flows from the current view. So wherever a flow, [flow] or sink<flow> occurs, a simple flow selection shorthand x is equivalent to view.select(x). The implementation of the resolving function might be different for different tools.\nMultiple indpendent commands can be separated with ;. These are executed in sequence, with each component running to completion before we proceed to the next.\nCommands\nThe following commands are used in the examples below. These are for illustrative purposes and might not be precisely what we have in the core.\nclient.replay sink<flow>\nconsole.choose str [str] -> str\nconsole.command [str]\n.each sink<T> *cmd -> source<U>\nexport.file sink<flow> format path\nexport.formats -> [str]\n.filter sink<flow> str -> source<flow>\n.random [str] -> str\n.setheader flow str str\n.tap event -> source<flow>\n.time -> str\nview.select str -> [flow]\nIn the above, T and U are generic types.\nExamples\n1\nclient.replay \"~h google.com\"\n2\n\"~h google.com\" | client.replay\nSince client.replay accepts a sink<flow> argument, the filter specificaiton string is resolved using view.select. It is equivalent to:\nview.select \"~h google.com\" | client.replay\nOr\nclient.replay(view.select(\"~h google.com\"))\n3\n.tap request | .filter \"~h google.com\" | export.file json ~/foo.json\n4\n@marked | .setheader $this foo bar\nThis command has an implicit each, and is equivalent to:\n@marked | .each *.setheader($this foo bar)\n5\n@marked |\n.setheader $this foo bar |\nclient.replay\nThis command has an implicit .each, and is equivalent to:\n@marked |\n.each *setheader($this foo bar) |\nclient.replay\n6\n.tap request |\n.filter \"~h google.com\" |\n.setheader $this foo bar |\nexport.file json ~/foo.json\n7\nconsole.command [\n    @focus \"|\" export.file\n    console.choose(Format export.formats())\n]\n8\n.tap request |\n.setheader(\n    $this\n    \"Host\"\n    console.choose(\n        Host\n        [\"google.com\" \"yahoo.com\"]\n    )\n)\nThe console.choose function is invoked once whent he command first run. The header is set to the same value for each flow.\n9\n.tap request | .setheader($this \"Date\" &time())\nThe time function is invoked anew every time it's used as a value, so the header is always set to the current time, and might have a different value for each flow.\n10\n.setheader @marked foo bar; client.replay @marked\nError examples\n1\nType error. Notionally infinite sources may only be used with the pipe operator.\nclient.replay(tap(request))\n2\nSyntax error. Pipes are only valid in the outermost scope.\nclient.replay(\n    @marked | setheader $this foo bar\n)\n3\nType error. Pipes can only used with a sink on the RHS:\nexport.formats | random\nThe correct invocation would be:\nrandom export.formats()\n1", "issue_status": "Open", "issue_reporting_time": "2018-04-29T22:40:10Z"}, "148": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3084", "issue_id": "#3084", "issue_summary": "Unable to intercept traffic on rooted android N with mitm system cert", "issue_description": "adrpino commented on 28 Apr 2018 \u2022\nedited\nSteps to reproduce the problem:\nI have rooted my android N device and installed as #2054 (comment)\nSet up ProxyDroid to send traffic of a specific app I'm trying to audit (understood as the private information it may leak) to mitmproxy running on my computer. The app doesn't work while sending the traffic through the\nThe following error shows up.\n<< Certificate verification error for 192.168.1.62: hostname '192.168.1.62' doesn't match either of '*.google.com', '*.android.com', '*.appengine.google.com', '*.cloud.google.com', '*.db833953.google.cn', '*.g.co', '*.gcp.gvt2.com', '*.google-analytics.com', '*.google.ca', '*.google.cl', '*.google.co.in', \n...\n(and a bunch of other google domains and tracking platforms such as appsflyer)\nAfter that, program crashes with\n::ffff:10.42.0.216:39444: serverdisconnect\nTraceback (most recent call last):\n  File \"mitmproxy/proxy/server.py\", line 121, in handle\n  File \"mitmproxy/proxy/modes/http_proxy.py\", line 12, in __call__\n  File \"mitmproxy/proxy/protocol/base.py\", line 148, in disconnect\n  File \"mitmproxy/net/tcp.py\", line 380, in close\n  File \"mitmproxy/net/tcp.py\", line 238, in close_socket\nTypeError: shutdown() takes 1 positional argument but 2 were given\nI understand that Google pins their certificates, so I cannot intercept the traffic.\nIs this an indication this app uses certificate pinning or am I doing something wrong for the task at hand?\nAny other comments? What have you tried so far?\nI have tried to ignore google domains (not be intercepted) with:\nmitmdump -v --ignore-hosts='^google*'\nwith no luck, also, running with '--insecure' changes the outcome from red to yellow but it doesn't work (app doesn't send traffic).\nSystem information\nMitmproxy: 3.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.13.0-38-generic-x86_64-with-debian-stretch-sid", "issue_status": "Open", "issue_reporting_time": "2018-04-28T09:17:52Z"}, "149": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3081", "issue_id": "#3081", "issue_summary": "Simpler hotkeys on console.choose selector prompt", "issue_description": "Hritik14 commented on 26 Apr 2018\nInside a flow when you press e you're presented with options to choose what to edit.\nEarlier the hotkeys were used to be something like \"h\" for header, \"f\" for form body but now they are hex numbered. It is really confusing and annoying.\nPlease revert.\n1", "issue_status": "Open", "issue_reporting_time": "2018-04-26T12:36:29Z"}, "150": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3075", "issue_id": "#3075", "issue_summary": "Serialization format", "issue_description": "Member\ncortesi commented on 24 Apr 2018 \u2022\nedited\nThis is a discussion ticket for the next steps in our serialization format that will be worked on by @madt1m in the coming months. This is part of the GSoC project, but anyone should feel free to contribute to the discussion.\nAim\nOur current serialization mechanism is substandard in a number of ways:\nIt's a flat, append-only sequence, which means that it doesn't handle streams (HTTP2/websockets/TCP), and we can't (easily) build indexes over it. This is why we currently aggregate all flows in memory for our interactive tools, which is obviously not ideal.\nOur serialisation mechanism is spread throughout our core objects in bits and pieces. It's very hard to know exactly what's included and what the structure is at a glance.\nWe use our own netstrings-like serialization format (tnetstrings). It's served us well, but having a totally custom format is not ideal for interoperability.\nWe want to be able to annotate flows, modify them in situ and perform other operations that mutate flow state. All of this is impossible or very hard with an append-only format.\nThis ticket roughly outlines an approach that fixes all of these issues. It's a bit of a strawman, hoping to provoke others into filling things out more completely.\nOutline\nI propose that we shift the on-disk format to SQLite. SQLite is built in to Python, extremely robust, very fast and operates on all the platforms we care about. I can't think of a better choice for the mechanics of putting data on disk.\nNow, we need to consider what the database format for flows would be. If we're using SQLite, one immediate tought might be to decompose our core data types entirely, and store flows in normalised tables with columns for each consituent value. I feel this would be slow, complicated and error prone. Instead, I propose that we treat SQLite as an indexable key-value store, where flows and flow components are indexed by ID and stored as blobs. For the format of these blobs, I propose protobufs, which gives us fast (?), well-defined serialization and automatic interoperability with a huge range of other tools and languages.\nBelow, I include some entirely untested, utterly unreliable notes on what the storage format might look like - please don't trust the details. Consider a core storage table like this:\nCREATE TABLE flows (\n    id integer PRIMARY KEY, -- row id, generated by sqlite\n    mid text NOT NULL, -- message id, generated by mitmproxy\n    kind text NOT NULL,\n    data BLOB NOT NULL,\n);\n\nCREATE INDEX message_id ON flows (mid, kind); -- maybe - we'll have to play with this\nLets suppose that we have a client connection protobuf like this:\nmessage ClientConnect {\n  string address = 1;\n  ... etc\n}\nAnd a request protobuf like this:\nmessage HTTPRequest {\n  string client_connection_id = 1;\n  string method = 2;\n  string scheme = 3;\n  ... etc\n}\nThe lifecycle of an HTTP flow progresses (roughly, ignoring details like header events) through client_connect -> request -> server_connect -> response -> server_disconnect -> client_disconnect. When we receive the client_connect event, we serialize it and make an entry with (mid = message ID, kind = \"clientconnect\", data = protobuf serialized data). When we receive the request, we make a request entry with the client connection ID set to the appropriate value, and so on. In this way, we can stream data into the database, keeping the minimum needed in memory. For things like websockets, where there can be an arbitrary number of message events, each message is simply added to the database on the fly. When a flow is requested from the store, we can now reassemble it by selecting and deserializing the matching components from the database.\nThere are a few embellishments to add here:\nWe would like to add an annotations mechanism that allows addons and our own tools to add custom data to flows. This might be a column in the main table, or a separate table.\nWe let users specify a flow order for interactive tools (currently method, size, time or url). We'll have to handle these either by maintaining an order index in memory, or by adding matching order columns to the database.\nThe View\nI've been working towards this change for a long time, and it's not a coincidence that the API that the persistent store needs to implement is already mostly encapsulated in the view addon. There's some more work to be done to ensure that the addon is completely encapsulated (mitmproxy console currently uses some parts of the view directly, not through commands), but after that, the task of actually bolting the new persistence layer into mitmproxy will consist of implementing the view API, and then swapping out the current in-memory view for an on-disk view.\nRough implementation plan\nPerformance testing The pure-Python protobuf implementation has performace issues, and we can't use the compiled C++ implementation without immense headache. We should implement some fraction of the outline above for a single message - say HTTP responses. We should then test that the protobuf serilization speed for large messages is adequate, and that insertion of large blogs the database is fast enough. We'd like to make sure that we're speedy for messages up to at least a few megabytes in size. Ideally, the rate at which we can serialise and store messages should not be significantly less than our core performance of about 80 flows per second.\nSerializtion addon The next step is to create an addon that hooks into the lifecycle event mechanisms, and performs serialization to disk on the fly. The addon should also have a mechanism that let us enter and retrieve a list of flows into the state. This will let us test two-way compatibility between the new mechanism and the status quo.\nView addon After that, we can clean up the current View API to make sure it's encapsulated, and implement it on top of the persistent state database.\nDeploy Finally, we'll remove the current in-memory view and replace it with the on-disk view. There are many details to consider here, including automatic conversion of old data formats to the new format.\nLonger term\nThere are many repercussions of the new storage format that will need to be explored. For instance, it also gives us an easy way to add a persistent session to our tools. This might store a copy of changed options on exit, so that a session with all its settings intact can be resumed fluently.", "issue_status": "Open", "issue_reporting_time": "2018-04-24T04:00:19Z"}, "151": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3062", "issue_id": "#3062", "issue_summary": "reduce verbosity with a single option", "issue_description": "Contributor\nStevenVanAcker commented on 16 Apr 2018\nSteps to reproduce the problem:\nmitmdump by default generates a log of output to display flow information, which makes it difficult to see any logging from a script. You can lower mitmdump's logging verbosity, but that does not change the amount of information logged for the flows.\nExample: Run mitmdump --set termlog_verbosity=error\nThis will still print a lot of information about flows, even though verbosity is dialed down to the lowest setting.\nThe answer is to also set flow_detail=0, but it would be nice if all verbosity settings could be combined into a single setting.\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 3.0.4\nPython: 3.5.2\nOpenSSL: OpenSSL 1.0.2g 1 Mar 2016\nPlatform: Linux-4.10.0-42-generic-x86_64-with-Ubuntu-16.04-xenial\n1", "issue_status": "Open", "issue_reporting_time": "2018-04-16T09:43:07Z"}, "152": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3055", "issue_id": "#3055", "issue_summary": "[Feature request] Simpler usage of Ctrl + L", "issue_description": "Contributor\ntunz commented on 13 Apr 2018\nHello folks,\nIt's been a while since I used and enjoyed mitmproxy last time, and seems like many things are changed. The changes are mostly awesome, and I always thank you guys for building this great project :)\nBut, IMHO, we need more helpful documents for the new features.. For example, when I tried to copy a url from a flow view. Ctrl + L was somewhat confusing, and I guess it would be difficult for beginners, too. The help page only shows me that ctrl l is to send cuts to clipboard, and when I typed the ctrl l it shows me cut.clip [flow] [cut]. I think [flow] and [cut] are not general terms, so we need more explanations or examples for them, how to type the values. It was very difficult for me to figure out what the [flow] and [cut] mean. So, I read your docs. Since your documentation page don't provide a search option, so I just read the docs pages one by one, and I found what the [focus] means and what the right value is. And, I searched and read github issues to understand what the [cut] means, and I finally guessed the value based on an example in one of github comments. So, now I'm using this command cut.clip @focus request.url.\nI also want to claim that maybe we can reduce the number of typed characters to copy a url. I cannot understand why we have to type @focus even in a flow view. I think we can omit the @focus because we already select a flow. Maybe we can also omit request.. Typing just url is not ambiguous because only request has a url.\n2", "issue_status": "Open", "issue_reporting_time": "2018-04-13T13:53:11Z"}, "153": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3049", "issue_id": "#3049", "issue_summary": "Crash on escape when there's a very long response", "issue_description": "mahenzon commented on 8 Apr 2018\nSteps to reproduce the problem:\nStart sniffing. We need a request with a huge JSON in response. Open a response\nScroll down the decoded JSON to the line Stopped displaying data after 512 lines. Press f to load all data.\nPress f\nScroll to the bottom\nPress the esc key (multiple times)\nHooray! It crashed!\nSystem information\nRunning on macOS 10.13.14\n# mitmproxy --version \nMitmproxy: 3.0.4 \nPython:    3.6.5\nOpenSSL:   OpenSSL 1.0.2o  27 Mar 2018\nPlatform:  Darwin-17.5.0-x86_64-i386-64bit\nTraceback:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/3.0.4/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 227, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/3.0.4/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 286, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/3.0.4/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 384, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/3.0.4/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 788, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/3.0.4/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 825, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/Cellar/mitmproxy/3.0.4/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 404, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/Cellar/mitmproxy/3.0.4/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 475, in parse_input\n    codes, wait_for_more)\n  File \"/usr/local/Cellar/mitmproxy/3.0.4/libexec/lib/python3.6/site-packages/urwid/escape.py\", line 387, in process_keyqueue\n    if run[0] == \"esc\" or run[0].find(\"meta \") >= 0:\nAttributeError: 'tuple' object has no attribute 'find'\n\nmitmproxy has crashed!\n<!-- Please use the mitmproxy forums (https://discourse.mitmproxy.org/) for support/how-to questions. Thanks! :) -->\n1", "issue_status": "Open", "issue_reporting_time": "2018-04-07T20:54:08Z"}, "154": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3015", "issue_id": "#3015", "issue_summary": "No way to set a sequence option on the command line", "issue_description": "vfaronov commented on 28 Mar 2018 \u2022\nedited\nSteps to reproduce the problem:\nCreate a file /tmp/example.py with the following text:\nimport typing\nfrom mitmproxy import ctx\n\nclass Example:\n\n    def load(self, loader):\n        loader.add_option(name='myoption', typespec=typing.Sequence[str],\n                          default=[], help='')\n\n    def response(self, flow):\n        ctx.log.info(repr(ctx.options.myoption))\n\naddons = [Example()]\nRun mitmdump -s /tmp/example.py --set myoption=foo --set myoption=bar\nRun a request through it: curl -sx http://localhost:8080 http://httpbin.org/get\nObserve that ['bar'] is printed, meaning that myoption is set to a sequence of one element \u2014 the last one passed on the command line, with the first one ignored.\nAny other comments? What have you tried so far?\nLooking at the code, I\u2019m not immediately sure why the multiple --set don\u2019t work as I expected them to.\nSystem information\nMitmproxy: 4.0.0 (79fc4e8)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.4.0-116-generic-x86_64-with-Ubuntu-16.04-xenial\n2", "issue_status": "Open", "issue_reporting_time": "2018-03-28T00:57:23Z"}, "155": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2994", "issue_id": "#2994", "issue_summary": "Limiting interception to only those domains that I have the SSL cert for in transparent mode", "issue_description": "hariszukanovic commented on 16 Mar 2018 \u2022\nedited\nI believe the correct way to accomplish this would be using --ignore-hosts as indicated with an example in the docs at https://mitmproxy.org/docs/latest/howto-ignoredomains/\nusing the concrete example of ignore everything but example.com and mitmproxy.org:\n--ignore-hosts '^(?!example.com)(?!mitmproxy.org)'\nI am certain that there is SNI support towards those servers that I DO want to intercept (these are my servers which run under HTTPS) because I can provide to mitmproxy the certs.\nFor those, I provide cert using --cert example.com=/opt/certs/example.com.pem which works perfectly when it actually intercepts for those domains.\nSteps to reproduce the problem:\nRunning in transparent mode with --ignore-hosts using regex negative lookahead (to intercept SSL for only some hosts)\nFull command (please use your own domain for which you would have the cert available):\n/usr/bin/mitmweb --web-iface=192.168.0.252 --listen-host=192.168.0.252 --mode transparent --showhost --cert example.com=/opt/certs/example.com.pem --cert mitmproxy.org=/opt/certs/mitmproxy.org.pem --ignore-hosts '^(?!example.com)(?!mitmproxy.org)'\nAny other comments? What have you tried so far?\nI have tried an endless number of regex combinations without success. Even for the simplest possible case of a single full domain, it would not work. It seems as if either all requests are ignored or all requests are intercepted.\nSystem information\nmitmproxy --version\nMitmproxy: 3.0.3\nPython: 3.5.5\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-3.10.0-693.21.1.el7.x86_64-x86_64-with-centos-7.4.1708-Core", "issue_status": "Open", "issue_reporting_time": "2018-03-16T12:16:36Z"}, "156": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2989", "issue_id": "#2989", "issue_summary": "Improper treatment of trailing-dot domains", "issue_description": "Member\nmhils commented on 15 Mar 2018\nSteps to reproduce the problem:\nVisit https://example.com./ through mitmproxy\nCertificate Verification Error for example.com.: hostname 'example.com.' doesn't match 'example.com'\nAny other comments? What have you tried so far?\nChristian Heimes that some fantastic pointers regarding this: https://twitter.com/xn/status/973931135154573312\nWe should not only fix the immediate error message here, but make sure that we use the dot-less version consistently where applicable.\nSystem information\nMitmproxy: 3.0.3.dev2 (commit 6d92052)\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Open", "issue_reporting_time": "2018-03-14T21:37:51Z"}, "157": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2980", "issue_id": "#2980", "issue_summary": "Searching has not been transferred to the new keybinding mechanism", "issue_description": "Contributor\nkajojify commented on 8 Mar 2018\nNow searching with / is hardcoded in searchable.py:\nmitmproxy/mitmproxy/tools/console/searchable.py\nLines 28 to 33 in 5617478\n if key == \"/\": \n     signals.status_prompt.send( \n         prompt = \"Search for\", \n         text = \"\", \n         callback = self.set_search \n     ) \nIt should be transferred to the new keybinding mechanism. The first step would be to create new searching command in https://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/tools/console/consoleaddons.py and bind it to / key.\nIf it isn't urgent, I will try to work on it in the nearest few days.\nSystem information\nMitmproxy: 4.0.0.dev99 (commit 5297e66)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-116-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Open", "issue_reporting_time": "2018-03-08T15:40:35Z"}, "158": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2952", "issue_id": "#2952", "issue_summary": "Replacements editor is glitchy", "issue_description": "vfaronov commented on 4 Mar 2018\nSteps to reproduce the problem:\nrun mitmproxy\ntype O \u2014 the options editor opens\nmove the cursor down to replacements\npress Enter \u2014 a list editor opens, saying: \u201cNo values - you should add some. Press ? for help.\u201d\ntype ? \u2014 nothing happens\ntype q \u2014 suddenly, a help screen appears (but not the one for a list editor)\ntype q again \u2014 you\u2019re back to the options editor, but the \u201cOption Help\u201d pane doesn\u2019t match the currently selected option (which is still replacements)\nSystem information\nMitmproxy: 3.0.3 binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-116-generic-x86_64-with-debian-stretch-sid", "issue_status": "Open", "issue_reporting_time": "2018-03-04T11:28:42Z"}, "159": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2936", "issue_id": "#2936", "issue_summary": "header names are needlessly line-wrapped", "issue_description": "majewsky commented on 28 Feb 2018\nEven though there is plenty of horizontal space (as can be seen from the width of the \"Request-Response-Details\" tab bar).", "issue_status": "Open", "issue_reporting_time": "2018-02-28T16:27:44Z"}, "160": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2935", "issue_id": "#2935", "issue_summary": "Mitmweb changes default value of options", "issue_description": "Contributor\narmudgal commented on 28 Feb 2018\nSteps to reproduce the problem:\nrun mitmweb\nenable spoof_source_address from options\nclose mitmweb and open mitmproxy\nGo to options by pressing O , spoof_source_address will be enabled by default\nAny other comments? What have you tried so far?\nEven if you try to change the setting using options from mitmproxy UI, the default is changed until and unless you open mitmweb and untick it back.\nIdk if it's a solid issue or not but this can trouble the user a lot.\nSystem information\nMitmproxy: 4.0.0.dev1295 (commit 10b6f62) \nPython:    3.5.2\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\nPlatform:  Linux-4.13.0-36-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Open", "issue_reporting_time": "2018-02-27T18:55:58Z"}, "161": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2932", "issue_id": "#2932", "issue_summary": "listen_port and listen_host options have no effect", "issue_description": "bugreport998 commented on 27 Feb 2018 \u2022\nedited\nSteps to reproduce the problem:\noptions have no effect when set on the command line\nmitmproxy --set listen_port=1234\nlsof -iTCP -sTCP:LISTEN -P | grep python\nmitmproxy is still listening on port 8080\noptions have no effect when set in the ui\nmitmproxy\nset listen_port option at runtime (pressing O)\nui shows *.1234, lsof still shows port 8080\nthe same appears to be true for listen_host (bound to *. when set to listen on loopback only)\nSystem information\nMitmproxy: 3.0.3\nPython: 3.6.4\nOpenSSL: OpenSSL 1.0.2n 7 Dec 2017\nPlatform: Darwin-17.3.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2018-02-27T05:41:47Z"}, "162": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2910", "issue_id": "#2910", "issue_summary": "System copying shortcuts don't work with mitmweb", "issue_description": "Contributor\nbillinghamj commented on 24 Feb 2018\nSteps to reproduce the problem:\nmitmweb - web browser opens\nhighlight any text on the page\nuse Cmd+C system shortcut (standard for copying text on macOS)\nResult: nothing is copied - clipboard remains as-is.\nExpected: highlighted text is copied to clipboard.\nAny other comments? What have you tried so far?\nRight clicking and hitting copy works, but this is still a massive usability issue.\nThis has been an issue since at least v2.0.2 - but maybe earlier, and is still a problem on the latest version.\nI have had this problem for about a year, using multiple different Macs, so I don't think this is something unique to my current setup.\nHave searched, but there don't seem to be any issues mentioning this, surprisingly.\nSystem information\nMitmproxy: 3.0.2 \nPython:    3.6.4\nOpenSSL:   OpenSSL 1.0.2n  7 Dec 2017\nPlatform:  Darwin-17.4.0-x86_64-i386-64bit", "issue_status": "Open", "issue_reporting_time": "2018-02-24T12:59:16Z"}, "163": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2900", "issue_id": "#2900", "issue_summary": "Revamp versioning strategy for bugfix releases.", "issue_description": "Member\nmhils commented on 23 Feb 2018\nA very unfortunate property of the Python Versioning Conventions in PEP440 is that \".devNNNN\" releases come before the actual release, e.g. 3.0dev1 is seen as a predecessor to 3.0 (\"the first development release towards 3.0). As such, when creating dev releases, we kind of have to know the name of the next version.\nTo conform with PEP440, we currently update mitmproxy/version.py immediately after a release so that the development snapshots use that. For example, immediately after the 3.0.0 release, we bumped the version to 4.0.0, so that our snapshots are now correctly labled 4.0.0dev1, 4.0.0dev2, etc.\nUnfortunately this makes a 3.0.1 bugfix release a bit weird. We currently have two options:\nHave a 3.0.x branch, change the version there to 3.0.1 and cherry-pick commits we want to include.\nDowngrade the version to 3.0.1 + tag it, then immediately bump it again in a second commit.\nThe latter option (which we did for 3.0.1) is a bit ugly. I was thinking of implementing a \"if tagged: use tag as version info; else: use version.py\" logic to make this nicer. Alternatively, we can decide to either accept the status quo of the second option or commit ourselves to always branch out for that.\n@mitmproxy/devs: thoughts?", "issue_status": "Open", "issue_reporting_time": "2018-02-23T17:30:39Z"}, "164": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2895", "issue_id": "#2895", "issue_summary": "Docs Improvements", "issue_description": "Member\nmhils commented on 23 Feb 2018 \u2022\nedited by Kriechi\nThanks to @cortesi, we have fantastic revamped docs.\nTo not interfere with his final touches, I'm collecting minor things here:\nWe definitely need a link back to mitmproxy.org. We'll have users land on the docs and they won't find a way to download the thing. I think it'd be great to have the mitmproxy.org header in the docs as well.\nTo the surprise of @cortesi, we do support transparent mode on Windows. That should be added.\nClicking directly on \"Docs\" should take us to the latest version, not ReadTheDocs.\n\"Linux fully transparent mode\" seems to be way to prominent on https://www-test.mitmproxy.org/docs/latest/howto-transparent/ and should probably be moved to the bottom.\nWe need to mention --tcp and --raw-tcp somewhere.\n\"Other releases\" link on main page is broken, needs to point to https://mitmproxy.org/docs/latest/overview-installation/\nAdd a max-width to the docs. It is hard to read on 27\" screens.\nFrom https://discourse.mitmproxy.org/t/certificates-quick-setup/890 - Mac OS X link has been archived and is no longer updated by Apple. Maybe this link is a suitable replacement: https://support.apple.com/kb/PH20129?locale=en_US\nFrom #2981: Add border mitm.it screenshot to make clear it's an image.\nhttps://mitmproxy.org/docs/ needs to go.\nGoogle Analytics for docs\nGoogle Analytics for main site\nAddon development docs, mentioning hot reload and testing\nKey binding configuration docs\nProvide an auto-generated man-page like listing of all options, ideally with availability tags for mitmproxy/mitmweb/mitmdump, via a script\nProvide an auto-generated man-page like listing of all commands, ideally with availability tags for mitmproxy/mitmweb/mitmdump, via a script\nmake top-left banner src/static/logo-docs.png either high-res (apple 2x style) or an svg vector graphic. Image source at https://github.com/mitmproxy/mitmproxy.org/tree/master/logo (see modd.conf)\nTo be discussed:\nHave we considered adding a second level navigation as on rtd? https://www-test.mitmproxy.org/docs/latest/overview-features/ seems a bit off, and https://www-test.mitmproxy.org/docs/latest/howto-transparent/ would need one.", "issue_status": "Open", "issue_reporting_time": "2018-02-22T20:50:13Z"}, "165": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2894", "issue_id": "#2894", "issue_summary": "urwid.canvas.CanvasError: Canvas text is wider than the maxcol specified", "issue_description": "luckydonald commented on 22 Feb 2018 \u2022\nedited\nSteps to reproduce the problem:\nmitmproxy and mitmproxy --save-stream-file +/tmp/mitmdump\nselect some event, enter\nscroll down\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 286, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 384, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 788, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 816, in _loop\n    self._entering_idle()\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 777, in _entering_idle\n    callback()\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 572, in entering_idle\n    self.draw_screen()\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 586, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/decoration.py\", line 226, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 1765, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/listbox.py\", line 489, in render\n    focus_canvas = focus_widget.render((maxcol,), focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 1004, in render\n    return apply_text_layout(text, attr, trans, maxcol)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/canvas.py\", line 1315, in apply_text_layout\n    return TextCanvas(t, a, c, maxcol=maxcol)\n  File \"/usr/local/Cellar/mitmproxy/3.0.0/libexec/lib/python3.6/site-packages/urwid/canvas.py\", line 358, in __init__\n    raise CanvasError(\"Canvas text is wider than the maxcol specified \\n%r\\n%r\\n%r\"%(maxcol,widths,text))\nurwid.canvas.CanvasError: Canvas text is wider than the maxcol specified\n153\n[153, 153, 154, 125]\n[b'[REDACTED NAME]:        ....$.......?.E=?[LONG REDACTED GLIBBERISH]\"]\nSystem information\n$ mitmproxy --version\nMitmproxy: 3.0.0\nPython:    3.6.4\nOpenSSL:   OpenSSL 1.0.2n  7 Dec 2017\nPlatform:  Darwin-13.4.0-x86_64-i386-64bit\n(via Brew, installed earlier today, so should be the latest version)\nFrom the second run with dumping to file,\nthis seems to be the binary form-data where it crashed.\nThe request is to an API's upload function.\n2018-02-23 08:00:00\n--Boundary+1DAA87079F6BACB5\nContent-Disposition: form-data; name=\"[REDACTED NAME]\"; filename=\"file\"\nContent-Type: application/octet-stream\n\n^A^@^@^@[REDACTED GLIBBERISH]\nAs I am not certain about the contents of the recorded data, so I won't post the dump public.\nHowever, I have keep it for now.\nAlso might be another occurrence of #1796.", "issue_status": "Open", "issue_reporting_time": "2018-02-22T17:42:41Z"}, "166": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2876", "issue_id": "#2876", "issue_summary": "Mitmproxy crashes, when we try to set 'true' for add_upstream_certs_to_client_chain option", "issue_description": "Contributor\nkajojify commented on 19 Feb 2018\nSteps to reproduce the problem:\nRun mitmproxy.\nPress O to enter Options tab.\nPress Enter to set true for add_upstream_certs_to_client_chain option.\nYou will see traceback:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 313, in keypress\n    k\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/keymap.py\", line 130, in handle\n    return self.executor(b.command)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 175, in nav_select\n    self.master.inject_key(\"m_select\")\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 181, in inject_key\n    self.loop.process_input([key])\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 309, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 44, in keypress\n    ret = super().keypress(size, key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/options.py\", line 281, in keypress\n    return self.focus_item.keypress(tsize, key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/options.py\", line 194, in keypress\n    self.master.options.toggler(foc.opt.name)()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/optmanager.py\", line 238, in toggle\n    setattr(self, attr, not getattr(self, attr))\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/optmanager.py\", line 171, in __setattr__\n    self.update(**{attr: value})\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/optmanager.py\", line 210, in update\n    u = self.update_known(**kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/optmanager.py\", line 206, in update_known\n    self.changed.send(self, updated=updated)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/blinker/base.py\", line 267, in <listcomp>\n    for receiver in self.receivers_for(sender)]\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/proxy/config.py\", line 52, in configure\n    \"The verify-upstream-cert requires certificate verification to be disabled. \"\nmitmproxy.exceptions.OptionsError: The verify-upstream-cert requires certificate verification to be disabled. If upstream certificates are verified then extra upstream certificates are not available for inclusion to the client chain.\nAny other comments? What have you tried so far?\nIf we set true for ssl_insecure option, we will be able to set true for add_upstream_certs_to_client_chain option successfully.\nSystem information\nMitmproxy: 3.0.0.dev113 (commit 93425d4)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-112-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Open", "issue_reporting_time": "2018-02-19T11:59:11Z"}, "167": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2843", "issue_id": "#2843", "issue_summary": "Some (certificate-related?) failures don't show up?", "issue_description": "pepasflo commented on 5 Feb 2018 \u2022\nedited\nFirst, thanks so much for working on mitmproxy!\nRecently, when debugging an iOS app, I noticed that a network failure showed up when using Charles proxy, but no traffic showed up at all in mitmproxy.\nIt looks like the failure was related to SSL -- I believe the iOS app was either doing cert pinning or otherwise trying to prevent proxies. Charles was somehow able to show this failed request, whereas nothing showed up in the mitmproxy log.\nIf possible, it would be awesome to also have this ability in mitmproxy.\nSteps to reproduce the problem:\nHrmm, sorry, I don't have a reliable way to reproduce this outside of my dev environment yet.\nAny other comments? What have you tried so far?\nSystem information\n$ mitmproxy --version\nMitmproxy version: 2.0.2 (release version) \nPython version: 3.6.2\nPlatform: Darwin-16.7.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f  25 May 2017\nMac version: 10.12.6 ('', '', '') x86_64\n1", "issue_status": "Open", "issue_reporting_time": "2018-02-05T18:26:04Z"}, "168": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2826", "issue_id": "#2826", "issue_summary": "Better UI Testing", "issue_description": "Member\nmhils commented on 31 Jan 2018\nWe're currently doing a bad job at testing the mitmproxy console UI. While there's an argument to be had that test coverage for UI code quickly yields diminishing returns, we should certainly do better than we do right now. It would be very cool if we had a basic framework to drive UI interactions for testing. I'd love to be able to write a test that roughly looks like this:\ndef test_edit_setcookies():\n    ui = TestUI()\n    ui.run(\"console.edit.focus set-cookies\")\n    ui.press(\"a foo <tab> bar <tab> <enter>\")\n    # set a cookie attribute\n    assert ui.focus_flow.cookies == ...\nThe syntax is obviously up for debate, but it should get the general idea across. I'm sure @Kriechi would be happy to extend his testing empire to mitmproxy.console as well.", "issue_status": "Open", "issue_reporting_time": "2018-01-30T18:45:03Z"}, "169": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2795", "issue_id": "#2795", "issue_summary": "Not easy to choose the part of flow to edit, when second tab is opened below", "issue_description": "Contributor\nkajojify commented on 15 Jan 2018 \u2022\nedited\nSteps to reproduce the problem:\nRun mitmproxy.\nPress -\nn -> Enter -> Enter -> e\nWe can see, that Part overlay wasn't displayed in full size.\nThus if I want to choose response-body, status_code, set-cookies or url, I won't be able to see them and will have to recollect their exact positions, choose at random, press\nEsc-> - -> eand only then choose desired part of flow to edit or expand the window.\nSystem information\nMitmproxy: 3.0.0.dev53 (commit 3b5237c)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-109-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Open", "issue_reporting_time": "2018-01-15T14:52:16Z"}, "170": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2734", "issue_id": "#2734", "issue_summary": "Replacement Addon does not handle invalid encoding gracefully", "issue_description": "AntiverX commented on 30 Dec 2017 \u2022\nedited by mhils\nTraceback (most recent call last):\n  File \"mitmproxy/net/http/encoding.py\", line 50, in decode\nLookupError: unknown encoding: gzip,rc4\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"specs/mitmdump\", line 3, in <module>\n  File \"mitmproxy/tools/main.py\", line 126, in mitmdump\n  File \"mitmproxy/tools/dump.py\", line 69, in run\n  File \"mitmproxy/master.py\", line 84, in run\n  File \"mitmproxy/master.py\", line 109, in tick\n  File \"mitmproxy/controller.py\", line 70, in wrapper\n  File \"mitmproxy/addonmanager.py\", line 90, in __call__\n  File \"mitmproxy/addonmanager.py\", line 85, in invoke\n  File \"mitmproxy/addons/replace.py\", line 93, in response\n  File \"mitmproxy/addons/replace.py\", line 83, in execute\n  File \"mitmproxy/addons/replace.py\", line 112, in replace\n  File \"mitmproxy/net/http/message.py\", line 261, in replace\n  File \"mitmproxy/net/http/message.py\", line 97, in get_content\n  File \"mitmproxy/net/http/encoding.py\", line 61, in decode\nValueError: LookupError when decoding b'\\x1f\\x8b with 'gzip,rc4': LookupError('unknown encoding: gzip,rc4',)\nFailed to execute script mitmdump", "issue_status": "Open", "issue_reporting_time": "2017-12-30T09:23:02Z"}, "171": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2721", "issue_id": "#2721", "issue_summary": "Shift Options to the new type system", "issue_description": "Member\ncortesi commented on 21 Dec 2017\nWe now have a much more flexible type system in mitmproxy.types, which unifies validation and completion. We should:\nMigrate current option type specifications to the mitmproxy.types structure, sharing types where possible and creating new ones where needed.\nAdd an OptionSpec type to use in the set command.\nImplement completion and validation on OptionSpec, which would make the \":set\" command much nicer.", "issue_status": "Open", "issue_reporting_time": "2017-12-20T19:26:31Z"}, "172": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2718", "issue_id": "#2718", "issue_summary": "Actions", "issue_description": "Member\ncortesi commented on 20 Dec 2017\nThe Command Reference will confuse users who assume that they can use it as a shortcut for finding and directly executing commands. First, the execution context is the command reference itself, so commands specific to the flow list, grid editors, etc. will fail to execute. Second, some commands are intended to be used in compound commands, and have little meaning by themselves.\nWhat we really want is a context-sensitive actions pane. An action will be identical to a keybinding, but without a bound key. In fact, we could rename keybindings to Actions, make binding actions to keys optional, and re-use the current interface. We can then generate a context-sensitive overlay that will present the user with .a set of action options to choose from.", "issue_status": "Open", "issue_reporting_time": "2017-12-19T21:48:43Z"}, "173": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2717", "issue_id": "#2717", "issue_summary": "Data view", "issue_description": "Member\ncortesi commented on 20 Dec 2017\nThe \"cut\" addon commands return structured data from flows. This is an incredibly powerful and useful feature, which is not fully exploited in the current UI.\nAt the moment, this data is presented to the user in an overlay, which means that context-sensitive help is not available, and various other feature options are closed to us. We also share an implementation with GridEditor, which results in various inelegances and a slight feature mismatch.\nIn the next release, we should:\nCreate a dedicated data view that is is a full top-level window\nAdd a \"data\" addon to filter and manipulate tabular data.\nIncrease the number of export format options\nExpand the data type so that the flow source ID is included. This means that we can jump from the data view to the corresponding flow view, which would be very powerful.", "issue_status": "Open", "issue_reporting_time": "2017-12-19T21:43:47Z"}, "174": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2699", "issue_id": "#2699", "issue_summary": "Better handling of long error messages in console", "issue_description": "Member\nmhils commented on 17 Dec 2017\nSteps to reproduce the problem:\nProduce a multi-line error message in mitmproxy.\nThe error is flashed to screen and disappears quickly.\nWe need a better way to handle super-long error events in console.", "issue_status": "Open", "issue_reporting_time": "2017-12-17T14:58:06Z"}, "175": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2650", "issue_id": "#2650", "issue_summary": "Keyboard shortcuts need a help mechanism", "issue_description": "Member\ncortesi commented on 10 Dec 2017\nSome keyboard shortcuts compose partial commands, which the user is then prompted to complete. This can sometimes be mystifying and perhaps intimidating. Keyboard commands need a help string to ease people into this.", "issue_status": "Open", "issue_reporting_time": "2017-12-09T22:23:36Z"}, "176": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2649", "issue_id": "#2649", "issue_summary": "Keyboard shortcut for copying URL/curl command/etc.", "issue_description": "nemanjan00 commented on 7 Dec 2017\nIt would ne great to have shortcut for copying request details.", "issue_status": "Open", "issue_reporting_time": "2017-12-07T16:45:51Z"}, "177": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2597", "issue_id": "#2597", "issue_summary": "Transparent mode failure: Runtime Error (could not resolve original destination)", "issue_description": "wimbledon commented on 21 Oct 2017\nSteps to reproduce the problem:\n1.Followed these steps precisely: http://docs.mitmproxy.org/en/stable/transparent/osx.html\n2.mitmproxy -T --host\nAny other comments? What have you tried so far?\nI could not figure out how to connect my iOS 10/11 device to mitmproxy. I tried to change the gateway/router in the wifi settings, but did not work.\nThis the error message:\nI also tried in the regular mode, but I get following errors:\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.2\nPlatform: Darwin-16.7.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f 25 May 2017\nMac version: 10.12.6 ('', '', '') x86_64", "issue_status": "Open", "issue_reporting_time": "2017-10-20T20:32:14Z"}, "178": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2564", "issue_id": "#2564", "issue_summary": "Python script error only visible for the blink of an eye", "issue_description": "Prinzhorn commented on 7 Sep 2017\nSteps to reproduce the problem:\nStart mitmproxy -s broken-script.py\nRequest a URL which triggers the script\nThe python exception shows at the bottom of the interface for <<1s and hardly gives me a chance to see it\nAny other comments? What have you tried so far?\nThis has bothered me from the beginning and maybe I am missing something. Currently it is basically impossible to debug a script because error messages disappear right away. Is there a way to see a log of all errors? Or at least view the last error? If not, then this would be awesome to have.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.3\nPlatform: Linux-4.10.0-33-generic-x86_64-with-Ubuntu-17.04-zesty\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 17.04 zesty", "issue_status": "Open", "issue_reporting_time": "2017-09-07T09:13:00Z"}, "179": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2543", "issue_id": "#2543", "issue_summary": "Improve Certificate Installation Experience", "issue_description": "Contributor\nfulldecent commented on 25 Aug 2017\nCharles sets up certificates quickly and painlessly on macOS.\nPlease study and copy this exact process for mitmproxy.", "issue_status": "Open", "issue_reporting_time": "2017-08-24T22:10:21Z"}, "180": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2497", "issue_id": "#2497", "issue_summary": "More flexible pathoc", "issue_description": "Contributor\nmkagenius commented on 3 Aug 2017\nCurrent pathoc do not support:\nMethod does not allow random text, currently restricted to GET, POST, HEAD and a few more. But can't pass anything else like HELP.\nPath does not allow random text, it must start with / . We can't pass @somedomain.com as path.\nConsidering pathoc to be really powerful lower level API to play with HTTP, we can probably allow random texts for those two (method and path).\nIn my dev environment, I created a new pathoc_expr() in place of expr() and got it to accept a random method HELP (or any other text):\n(venv) mitmproxy manish $ pathoc -s google.com HELP:/ -q -p\n>> HELP:/\n<< 405 Method Not Allowed: 1589 bytes\nBytes written:\n        HELP / HTTP/1.1\n        Host: google.com\n\n\nBytes read:\n        HTTP/1.1 405 Method Not Allowed\n        Content-Type: text/html; charset=UTF-8\n        Referrer-Policy: no-referrer\n        Content-Length: 1589\n        Date: Thu, 03 Aug 2017 12:51:25 GMT\n        Alt-Svc: quic=\":443\"; ma=2592000; v=\"39,38,37,36,35\"\n\n        <!DOCTYPE html>\n        <html lang=en>\n          <meta charset=utf-8>\n**I think there should be a cleaner way than adding pathoc_expr() **\nchanges below\n    @classmethod\n    def pathoc_expr(cls):\n        parts = [i.expr() for i in cls.comps]\n        atom = pp.MatchFirst(parts)\n        resp = pp.And(\n            [\n                pp.MatchFirst(\n                    [\n                        WS.expr() + pp.Optional(\n                            base.Sep + Method.expr()\n                        ),\n                        RawMethod.expr(),\n                    ]\n                ),\n                base.Sep,\n                Path.expr(),\n                pp.ZeroOrMore(base.Sep + atom)\n            ]\n        )\n        resp = resp.setParseAction(cls)\n        return resp\nclass RawMethod(base.Value):\n    pass\n    @property\n    def method(self):\n        return self.tok(RawMethod)", "issue_status": "Open", "issue_reporting_time": "2017-08-03T12:54:53Z"}, "181": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2491", "issue_id": "#2491", "issue_summary": "Proxy stops working while on Editor", "issue_description": "mariolima commented on 2 Aug 2017\nHi,\nI've come to find that every time I edit a request/response or form with Vim, while on the editor, the proxy stops working until I exit. I ask if that's intended and if so, would it be in scope to add multi threaded capabilities while editing.\nThank You.", "issue_status": "Open", "issue_reporting_time": "2017-08-01T20:28:25Z"}, "182": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2474", "issue_id": "#2474", "issue_summary": "Support HTTP trailers", "issue_description": "Member\nmhils commented on 26 Jul 2017 \u2022\nedited\nWe currently do not support HTTP/1.x or HTTP/2.0 trailers. HTTP trailers are basically additional headers sent after the body. https://discourse.mitmproxy.org/t/http-2-trailers-not-supported/557/2 mentions that gRPC is doing this, so this seems like a reasonable feature we should support. I think the rough implementation plan looks as follows:\nAdd HTTPFlow.trailers attribute (which is a http.Headers instance or None)\nModify HTTP/2.0 layer to support trailers. This is likely the most difficult part.\nExpose trailers in mitmdump\nExpose trailers in mitmproxy\nExpose trailers in mitmweb\nWait if anyone ever requests HTTP/1.0 trailer support.\n7", "issue_status": "Open", "issue_reporting_time": "2017-07-26T15:44:47Z"}, "183": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2451", "issue_id": "#2451", "issue_summary": "Options: Check that all options work.", "issue_description": "Member\nmhils commented on 19 Jul 2017 \u2022\nedited\nThere are currently a bunch of options that don't really work when edited while mitmproxy is running. We should go through the list, briefly (!) check which ones are working, and then work on fixing the broken ones.\nMove @MatthewShao's excellent table in #2444 to a Google Docs/Sheets (or similar) document that allows concurrent edits and post the URL here.\nSplit options into \"verified working\", \"to be tested\", \"broken/needs improvement\". This should be a group effort - we just need to very briefly check if an option does anything at all. This is also a great way to learn about all the options and improve docstrings where it seems useful\nFix the easily fixable options, discuss the not-so-easy ones. For example, cadir is a bit tricky for the reasons mentioned in #2444 (comment). One way here would be to change the directory immediately, but only create CA files on startup.", "issue_status": "Open", "issue_reporting_time": "2017-07-19T14:13:35Z"}, "184": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2449", "issue_id": "#2449", "issue_summary": "Options: Move core options into addons", "issue_description": "Member\nmhils commented on 19 Jul 2017 \u2022\nedited\nMitmweb currently displays all options for mitmproxy, and vice versa. I believe the fix to that is that (almost) all options should be moved into the respective addons where possible, so that e.g. the console_ options are not visible in mitmweb. There are multiple steps to that:\nMove isolated options to addons, e.g. \"keepserving\" and see how that works (what happens if they are defined in a config file, but we load a mitmproxy instance without that addon being present?).\nFigure out which options are handled by multiple addons and what to do with them.", "issue_status": "Open", "issue_reporting_time": "2017-07-19T14:01:36Z"}, "185": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2431", "issue_id": "#2431", "issue_summary": "Intercepting flows to mitm.it crashes mitmproxy", "issue_description": "jtl999 commented on 8 Jul 2017 \u2022\nedited\nTrying out mitmproxy. When I capture a connection and attempt to accept it mitmproxy crashes.\nSteps to reproduce the problem:\nInstall mitmproxy from homebrew, trust the CA certificate, configure Chrome proxy settings.\nCapture a flow/connection (in my case I navigated to mitm.it)\nAccept the flow, mitmproxy will now crash.\nAny other comments? What have you tried so far?\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/flowview.py\", line 513, in keypress\n    self.flow.resume()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/flow.py\", line 179, in resume\n    self.reply.ack()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/controller.py\", line 155, in ack\n    self.send(self.obj, force)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/controller.py\", line 166, in send\n    raise exceptions.ControlException(\"There is already a reply message.\")\nmitmproxy.exceptions.ControlException: There is already a reply message.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.1\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f 25 May 2017\nMac version: 10.11.6 ('', '', '') x86_64", "issue_status": "Open", "issue_reporting_time": "2017-07-08T03:24:23Z"}, "186": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2408", "issue_id": "#2408", "issue_summary": "Add property on RawTCPLayer to indicate which end closed the connection", "issue_description": "Caligatio commented on 24 Jun 2017\nFollowing up on my other issue, #2382, it would be helpful to add a property/flag to the RawTCPLayer that indicates whether the client or server closed the connection. The main use case for me is using the addon API and receiving tcp_start, tcp_message, and tcp_end events. The initiator on tcp_start is obvious (the client), the sender on tcp_message is given in the TCPMessage object, but no similar information is exposed to the tcp_end event.\nI'm not super confident but I think Line 47 in rawtcp.py would be the right spot to add something like this.", "issue_status": "Open", "issue_reporting_time": "2017-06-23T19:21:05Z"}, "187": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2374", "issue_id": "#2374", "issue_summary": "Improve All The Docs!", "issue_description": "Member\nKriechi commented on 5 Jun 2017 \u2022\nedited\nThis issue combines all existing and stale documentation-related issues:\nTransparent Mode on Windows\n#323, #336\nhttps://discourse.mitmproxy.org/t/intercept-roku-traffic-on-windows/406\nSetting up local transparent proxy\n#630\nImprove Server Replay Docs\n#635\nHTTP body streaming and Content-Length header\n#856\nLink to the right branch in the option documentation\n#2243\nInline certificate installation docs\n#2089\nUsing external libraries with mitmdump\n#2238\n1", "issue_status": "Open", "issue_reporting_time": "2017-06-04T19:27:32Z"}, "188": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2249", "issue_id": "#2249", "issue_summary": "Make flow available as metadata to contentview", "issue_description": "johnmave126 commented on 18 Apr 2017\nI am working to analyze the ssl traffic on APIs for a specific domain. The content is encoded differently (via some serialization) according to which API the caller is invoking. In this scenario, it is hard for a custom contentview script to distinguish the underlying API solely from the content and headers.\nCan we add more info to the contentview metadata? Say metadata['url'] and metadata['method'] will absolutely be helpful.", "issue_status": "Open", "issue_reporting_time": "2017-04-18T16:20:18Z"}, "189": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2246", "issue_id": "#2246", "issue_summary": "KeyError: 'sdch, gzip'", "issue_description": "Mradr commented on 18 Apr 2017\nSteps to reproduce the problem:\n1: #----------------------------------------------------------------------\ndef response(self, flow):\n# Gather outgoing data size\nif flow.response.content:\nself.outgoing_data_size += len(flow.response.raw_content)\n2. Go to google.com and search \"test\"\n3. Red text flys by saying:\nScript error: Traceback (most recent call last):\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/encoding.py\", line 48, in decode\ndecoded = custom_decodeencoding\nKeyError: 'sdch, gzip'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/encoding.py\", line 50, in decode\ndecoded = codecs.decode(encoded, encoding, errors)\nLookupError: unknown encoding: sdch, gzip\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"main.py\", line 791, in response\nif flow.response.content:\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/message.py\", line 97, in get_content\ncontent = encoding.decode(self.raw_content, ce)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/encoding.py\", line 61, in decode\nrepr(e),\nValueError: LookupError when decoding b'\\x1f\\x8b with 'sdch, gzip': LookupError('unknown encoding: sdch, gzip',)\nAny other comments? What have you tried so far?\nLooks like gzip is supported, but I don't see anything about sdch. Looks to be missing", "issue_status": "Open", "issue_reporting_time": "2017-04-18T11:09:40Z"}, "190": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2235", "issue_id": "#2235", "issue_summary": "Mitmproxy doesn't check revocation lists in 'verify' mode", "issue_description": "ColinChartier commented on 11 Apr 2017\nTo reproduce, simply use mitmproxy to access https://revoked.badssl.com/", "issue_status": "Open", "issue_reporting_time": "2017-04-10T22:31:51Z"}, "191": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2229", "issue_id": "#2229", "issue_summary": "Fails on informational (1xx) responses from upstream", "issue_description": "vfaronov commented on 5 Apr 2017\nSteps to reproduce the problem:\nStart netcat listening on local port 8765: nc -lC 8765\nStart mitmproxy as a reverse proxy: mitmproxy --mode reverse:http://localhost:8765\nMake a request to mitmproxy: curl -v localhost:8080/\nType the following into netcat:\nHTTP/1.1 103 Early Hints\nLink: </logo.png>; rel=preload\n\nHTTP/1.1 200 OK\nDate: Wed, 05 Apr 2017 07:06:41 GMT\nContent-Type: text/plain\nLink: </logo.png>; rel=preload\nContent-Length: 12\n\nHello world!\nmitmproxy sees the 103 response and thinks it is the final response from the server.\nAny other comments? What have you tried so far?\nThe most familiar 1xx response is probably 100 (Continue), but there are others, like the upcoming 103 (Early Hints) I used for this example.\nRFC 7231 \u00a7 6.2:\nA client MUST be able to parse one or more 1xx responses received\nprior to a final response, even if the client does not expect one.\nIdeally mitmproxy would forward these responses, which probably ties into #1721. An easier intermediate solution might be simply to discard them.\nSystem information\n(from Git master)\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-72-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Open", "issue_reporting_time": "2017-04-05T07:21:43Z"}, "192": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2196", "issue_id": "#2196", "issue_summary": "Refactor handling of persistent connection flows", "issue_description": "Member\ncortesi commented on 22 Mar 2017\nWe currently have a structure where we have TCPFlow and WebsocketFlow objects that represent persistent connections. These objects then accumulate messages while the connection lasts. The entire thing is serialised in one chunk when the persistent connection ends if we're writing to file.\nThis structure has two issues. First, all messages are accumulated in memory if we're writing to disk. We'd like to be able to shed data to disk as quickly as we can to keep memory usage low (especially in the light of the session proposal in #2175). Second, this is out of step with the HTTP/HTTP2 structure, where the flow is the primary target of user interaction. So, a user \"replays a flow\" or \"intercepts a flow\" - this sits awkwardly with persistent connections, where the target is really a contained message. This in turn has flow-on effects on how we might design our user interfaces.\nI propose that we promote TCPMessage and WebsockeMessage to top-level Flow objects that can be serialized to disk immediately. Each message keeps a reference to the parent connection object's unique ID.\nWith the current mechanism, we then have a situation where a WebsocketMessage appears in the flow file before the WebsocketConnection (which is written only when the connection terminates). If we didn't gracefully terminate, the connection might not be written at all, so the file could potentially be invalid. To address that, I propose that we allow partial records to be written to the flow file - a WebsocketConnection entry is made before the first WebsocketMessage (containing partial data), and another entry with the same unique ID is made after the last WebsocketMessage (containing complete data). This keeps the file consistent chronologically, and ensures that we never have partial data on disk.\nIf we can represent persistent connections in this way, I also propose that we consider doing this for our ClientConnection and ServerConnection primitives. That is, promote them to full flows, with partial records streamed to disk, and with child objects keep a reference to parent objects through their unique IDs.", "issue_status": "Open", "issue_reporting_time": "2017-03-21T22:15:32Z"}, "193": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2185", "issue_id": "#2185", "issue_summary": "Allow live editing of ProxyServer configuration", "issue_description": "Member\ncortesi commented on 19 Mar 2017\nWe can now edit ProxyServer configuration options on the fly, but many options aren't acted on. For instance, we can change whether a server is started, the binding address and port and so forth.\nWe need a ProxyServer manager addon that responds to configuration changes by shutting down and restarting the ProxyServer with the new options. This is closely related to the ProxyConfig class, which will probably be the basis for the addon.", "issue_status": "Open", "issue_reporting_time": "2017-03-18T23:26:39Z"}, "194": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2175", "issue_id": "#2175", "issue_summary": "Session store", "issue_description": "Member\nujjwal96 commented on 17 Mar 2017 \u2022\nedited\nHaving sessions in mitmproxy so that one can resume the work from where they left.\nAs told by @cortesi on mail\nThings session store would do:\nstores current live configuration so session can resume easily\nhas an immutable on-disk log of all flows in a session\nprovides space for addons to add annotations and store secondary data about flows. All analysis results should go into the session store\nOnce this is in place we can work on implementing higher-level functionality like security scanners, reconnaissance tools and end-point discovery mechanisms.\n@mhils", "issue_status": "Open", "issue_reporting_time": "2017-03-17T07:12:49Z"}, "195": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2130", "issue_id": "#2130", "issue_summary": "OpenSSL.SSL.SysCallError: (104, 'ECONNRESET')", "issue_description": "ccaceresahumada commented on 10 Mar 2017\nSteps to reproduce the problem:\nRun mitmdump -s my_script.py\nStart Appium\nLaunch Android app\nWait for traffic to occur\nCheck the output from mitmdump\nAny other comments? What have you tried so far?\nI'm using Appium to automate tests in an Android device. The goal is to launch the app and then verify the right events are being sent.\nmy_script.py captures the traffic and stores it in a database which is later accessed through a service that verifies payloads are valid for each request.\nWhen looking at the mitmdump output I can see the traffic flow, but at some point it crashes with the following information:\nTraceback (most recent call last):\n  File \"/usr/local/projects/mitmproxy/mitmproxy/net/tcp.py\", line 211, in read\n    data = self.o.read(rlen)\n  File \"/usr/local/projects/mitmproxy/venv3.5/lib/python3.5/site-packages/OpenSSL/SSL.py\", line 1304, in recv\n    self._raise_ssl_error(self._ssl, result)\n  File \"/usr/local/projects/mitmproxy/venv3.5/lib/python3.5/site-packages/OpenSSL/SSL.py\", line 1166, in _raise_ssl_error\n    raise SysCallError(errno, errorcode.get(errno))\nOpenSSL.SSL.SysCallError: (104, 'ECONNRESET')\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 177, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 246, in _process_flow\n    return self.handle_regular_connect(f)\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 204, in handle_regular_connect\n    layer()\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 177, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 228, in _process_flow\n    request = self.read_request_headers(f)\n  File \"/usr/local/projects/mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 14, in read_request_headers\n    http1.read_request_head(self.client_conn.rfile)\n  File \"/usr/local/projects/mitmproxy/mitmproxy/net/http/http1/read.py\", line 52, in read_request_head\n    form, method, scheme, host, port, path, http_version = _read_request_line(rfile)\n  File \"/usr/local/projects/mitmproxy/mitmproxy/net/http/http1/read.py\", line 240, in _read_request_line\n    line = _get_first_line(rfile)\n  File \"/usr/local/projects/mitmproxy/mitmproxy/net/http/http1/read.py\", line 227, in _get_first_line\n    line = rfile.readline()\n  File \"/usr/local/projects/mitmproxy/mitmproxy/net/tcp.py\", line 251, in readline\n    ch = self.read(1)\n  File \"/usr/local/projects/mitmproxy/mitmproxy/net/tcp.py\", line 233, in read\n    raise exceptions.TlsException(str(e))\nmitmproxy.exceptions.TlsException: (104, 'ECONNRESET')\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nSystem information\nMitmproxy version: 2.0.0 (2.0.0dev0000-0x91c3a99)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-36-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g-fips 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Open", "issue_reporting_time": "2017-03-10T00:57:20Z"}, "196": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2123", "issue_id": "#2123", "issue_summary": "Unable to set upstream proxy during request", "issue_description": "rbairwell commented on 8 Mar 2017\nAccording to https://github.com/mitmproxy/mitmproxy/blob/master/examples/complex/change_upstream_proxy.py , it should be able to change a proxy during the request, however, I've been unable to do so.\nTest code:\nimport base64\nfrom mitmproxy.utils import strutils\nfrom urllib.parse import urlparse\nfrom mitmproxy import ctx\n\nproxy_data = urlparse('http://USERNAME:PASSWORD@127.0.0.1:1234')\n\ndef request(flow):\n    if flow.request.method == \"CONNECT\":\n        return\n    if flow.live:\n        ctx.log.info('Setting upstream proxy to '+proxy_data.hostname+' and port '+str(proxy_data.port))\n        flow.live.change_upstream_proxy_server((proxy_data.hostname,proxy_data.port))\n        auth=proxy_data.username + ':' + proxy_data.password\n        ctx.log.info('Auth: '+auth)\n        flow.request.headers[\"Proxy-Authorization\"] = b\"Basic\"+b\" \"+base64.b64encode(strutils.always_bytes(auth))\nSteps to reproduce the problem:\nRun mitmdump with the above script (mitmdump -s test.py -p 7575 -vvv -ddd)\nSet Firefox to use the proxy and go to http://api.ipify.org\nExpect the request to go through the proxy at 127.0.0.1 on port 1234 (authenticated with the username and password provided)\nRequest is not routed via the proxy and the proxy-authorization line is sent to the destination\nOutput from mitmdump:\nLoading script: test.py\nProxy server listening at http://0.0.0.0:7575\n10.0.2.2:9032: clientconnect\n10.0.2.2:9032: request\n  -> Request(GET api.ipify.org:80/)\nSetting upstream proxy to 127.0.0.1 and port 1234\nAuth: USERNAME:PASSWORD\n10.0.2.2:9032: Changing upstream proxy to ('127.0.0.1', 1234) (not CONNECTed)\n10.0.2.2:9032: Set new server address: ('127.0.0.1', 1234)\n10.0.2.2:9032: Set new server address: api.ipify.org:80\n10.0.2.2:9032: serverconnect\n  -> api.ipify.org:80\n10.0.2.2:9032: response\n  -> Response(200 OK, text/plain, 12b)\n10.0.2.2:9032: GET http://api.ipify.org/\n    Host: api.ipify.org\n    User-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:51.0) Gecko/20100101 Firefox/51.0\n...\n    Proxy-Authorization: Basic VVNFUk5BTUU6UEFTU1dPUkQ=\n...\n\n << 200 OK 12b\n...\nSystem information\nMitmproxy version: 2.0.0 (release version) Precompiled Binary\nPython version: 3.5.2\nPlatform: Linux-3.13.0-83-generic-x86_64-with-debian-jessie-sid\nSSL version: OpenSSL 1.1.0e  16 Feb 2017\nLinux distro: debian jessie/sid\nand latest available snapshot:\nMitmproxy version: 3.0.0 (release version) Precompiled Binary\nPython version: 3.5.2\nPlatform: Linux-3.13.0-83-generic-x86_64-with-debian-jessie-sid\nSSL version: OpenSSL 1.1.0e  16 Feb 2017\nLinux distro: debian jessie/sid ", "issue_status": "Open", "issue_reporting_time": "2017-03-08T16:19:26Z"}, "197": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2091", "issue_id": "#2091", "issue_summary": "mitmproxy/mitmweb flow order differs from mitmdump flow order", "issue_description": "wdormann commented on 3 Mar 2017\nSteps to reproduce the problem:\nOpen an existing mitmproxy flow file in mitmweb\nOpen that same flow file in mitmproxy\nCompare the order of records\nAny other comments? What have you tried so far?\nIt's not clear what the default sort order is in mitmweb. It's not chronological. Even if it defaulted to sorting chronologically, there doesn't appear to be a way to revert back to chronological after sorting by any other field.\nSystem information\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.5.2\nPlatform: Linux-3.10.0-514.6.2.el7.x86_64-x86_64-with-centos-7.3.1611-Core\nSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013\nLinux distro: CentOS Linux 7.3.1611 Core\n1", "issue_status": "Open", "issue_reporting_time": "2017-03-02T19:52:24Z"}, "198": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2088", "issue_id": "#2088", "issue_summary": "Feature request: Global search", "issue_description": "wdormann commented on 2 Mar 2017\nSteps to reproduce the problem:\nmitmproxy (mitmweb) has some very granular search capabilities. However, if you don't know specifically where a particular pattern may reside, this can make searching difficult.\nIt would be nice if there were some sort of global search capability. For example, I may want to know if \"asdf\" exists in a network capture, and it'd be nice to know if it exists anywhere in the flow. That is, in any request or response, in the URI, headers, decoded bodies, etc.\nFor example, see the attached screenshot from burp:", "issue_status": "Open", "issue_reporting_time": "2017-03-02T15:10:38Z"}, "199": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2076", "issue_id": "#2076", "issue_summary": "Respond with a close match if request is not found in recorded traffic", "issue_description": "bbraz commented on 28 Feb 2017\nSteps to reproduce the problem:\nRecord traffic from a web browser using MTIMproxy as a proxy:\nmitmdump -w recordedtraffic.pxy --host\nStart replay of recordedtraffic.pxy file:\nmitmdump -S recordedtraffic.pxy --host --no-pop\nUse web browser pointed to MITMProxy to load traffic\nAny other comments? What have you tried so far?\nWhen playing back traffic with MITMProxy, I only want to use the traffic that was recorded and not go out to the Internet to get the latest version of this request. This hurts reproduction scenarios as the responses keep changing. Having the ability to return the closest match would help to resolve this issue.\nSystem information\nmitmdump 1.0.2 on Ubuntu 16.04.1 LTS", "issue_status": "Open", "issue_reporting_time": "2017-02-28T16:17:55Z"}, "200": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2075", "issue_id": "#2075", "issue_summary": "Codec can't encode character: surrogates not allowed", "issue_description": "RhZjQyMWI commented on 28 Feb 2017 \u2022\nedited\nSteps to reproduce the problem:\nmitmdump -T --host -s main.py\nmake a request with \\udcb0 character\nSystem information\nMitmproxy version: 2.0.0 (release version) \nPython version: 3.5.1\nPlatform: Linux-2.6.32-642.13.1.el6.x86_64-x86_64-with-centos-6.8-Final\nSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013\nLinux distro: CentOS 6.8 Final\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmdump\", line 11, in <module>\n    sys.exit(mitmdump())\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/tools/main.py\", line 126, in mitmdump\n    master.run()\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/tools/dump.py\", line 69, in run\n    super().run()\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/master.py\", line 84, in run\n    self.tick(0.1)\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/master.py\", line 109, in tick\n    handle_func(obj)\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/controller.py\", line 70, in wrapper\n    master.addons(f.__name__, message)\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/addonmanager.py\", line 90, in __call__\n    self.invoke(i, name, *args, **kwargs)\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/addonmanager.py\", line 85, in invoke\n    func(*args, **kwargs)\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/addons/dumper.py\", line 224, in response\n    self.echo_flow(f)\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/addons/dumper.py\", line 196, in echo_flow\n    self._echo_request_line(f)\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/addons/dumper.py\", line 144, in _echo_request_line\n    self.echo(line)\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/addons/dumper.py\", line 54, in echo\n    click.secho(text, file=self.outfp, **style)\n  File \"/usr/local/lib/python3.5/site-packages/click/termui.py\", line 420, in secho\n    return echo(style(text, **styles), file=file, nl=nl, err=err, color=color)\n  File \"/usr/local/lib/python3.5/site-packages/click/utils.py\", line 259, in echo\n    file.write(message)\nUnicodeEncodeError: 'utf-8' codec can't encode character '\\udcb0' in position 148: surrogates not allowed", "issue_status": "Open", "issue_reporting_time": "2017-02-28T14:39:14Z"}, "201": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2054", "issue_id": "#2054", "issue_summary": "mitmproxy does not see traffic from Android app", "issue_description": "bridgewaterrobbie commented on 23 Feb 2017 \u2022\nedited by mhils\nSteps to reproduce the problem:\nInstall mitmproxy's CA certificate on Android.\nUse Chrome to verify that HTTPS interception is working.\nOpen an app to inspect its HTTPS traffic.\nExpected result\nApp connects via proxy and traffic is shown in mitmproxy.\nActual result\nApp rejects mitmproxy's certificate and fails to connect to server.\nAny other comments? What have you tried so far?\nThe behavior seems similar to what happens when you try to connect to an https site before installing the certificate - no network traffic is seen until you accept the insecure connection. The same app can be intercepted on iOS and Android 6.\nSystem information\nGoogle Pixel running Android 7.1.1\n22", "issue_status": "Open", "issue_reporting_time": "2017-02-22T22:26:00Z"}, "202": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2023", "issue_id": "#2023", "issue_summary": "pathod HTTP/1.0 support and custom new line (0x0A)", "issue_description": "fiery- commented on 14 Feb 2017\nI tested pathod 1.0.2 trying to simulate a web server that responds with a HTTP/1.0 protocol and has only 0x0A as new lines. I almost succeeded with \"200:r:da\" (to close the connection) and some custom headers, but I can't change the new lines to LF and the protocol from HTTP/1.1 to HTTP/1.0. It would be great if I can put the entire response+content in a binary file, tell pathod to disconnect at the end and load something like this:\nhttp://localhost:9999/p/rf=response_file:da\nWould you please add these options in pathod.\nHere is the server response which I try to replicate:\nHTTP/1.0 200 OK\nContent-type: application/octet-stream\nConnection: close\nCache-Control: no-cache", "issue_status": "Open", "issue_reporting_time": "2017-02-14T13:08:33Z"}, "203": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1985", "issue_id": "#1985", "issue_summary": "Script not unloaded when exception is thrown", "issue_description": "Member\nujjwal96 commented on 4 Feb 2017\nSteps to reproduce the problem:\nDon't give an argument to the script\ne.g. mitmdump -s \"examples/complex/har_dump.py\"\nException is thrown but the script keeps working and throws even more exceptions\nAny other comments? What have you tried so far?\nI haven't tried it for any other script, this may be har_dump.py specific issue but I think would affect other scripts as well.\nIdeally, the script should be unloaded after throwing an exception\nSystem information\nMitmproxy version: 2.0.0 (1.0.1dev0121-0xc540762)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-38-generic-x86_64-with-elementary-0.4-loki\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: \"elementary\" 0.4 loki", "issue_status": "Open", "issue_reporting_time": "2017-02-03T21:13:40Z"}, "204": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1888", "issue_id": "#1888", "issue_summary": "mitmweb: --host Not Working", "issue_description": "Contributor\nBSalita commented on 27 Dec 2016 \u2022\nedited\nSteps to reproduce the problem:\nmitmweb is not respecting --host. All hosts are ips, never domain names. \"showhost\" is displayed at bottom of mitmweb web page.\nAny other comments? What have you tried so far?\nI had reported this long ago. The issue was switches weren't implemented. Now they are but --host isn't working anyway.\nSystem information\nMitmproxy version: 1.0.0\nPython version: 3.5.2\nPlatform: Windows-10-10.0.14393\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nWindows version: 10 10.0.14393 Multiprocessor Free", "issue_status": "Open", "issue_reporting_time": "2016-12-26T21:53:25Z"}, "205": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1856", "issue_id": "#1856", "issue_summary": "Apply filters when reading flows, not just when writing.", "issue_description": "tigrankhachikyan commented on 14 Dec 2016\nSeems that mitmdump passes the original (not filtered content) to -s \"har_dump.py\".\nThe generated har file contains all traffic.\nMy goal is to filer out all \"example.com\" from har entries.\nNot sure may be it is intended behavior, but anyway decided to ask.\nSteps to reproduce the problem:\nmitmdump -n -r /output/traffic.recording -s \"har_dump.py /output/recording.har\" \"! (~u example.com)\"\nSystem information\nMitmproxy version: 0.18.1\nPython version: 3.5.2\nPlatform: Linux-3.16.0-4-amd64-x86_64-with\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\n1", "issue_status": "Open", "issue_reporting_time": "2016-12-14T15:54:53Z"}, "206": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1821", "issue_id": "#1821", "issue_summary": "Upstream Proxy: Skip proxy for some destinations", "issue_description": "majewsky commented on 7 Dec 2016\nI'm in a corporate network where internet access is only possible through a proxy, so I have all the relevant environment variables set:\n$ env | grep -i proxy | sort\nhttp_proxy=http://proxy.corp:8888\nHTTP_PROXY=http://proxy.corp:8888\nhttps_proxy=http://proxy.corp:8888\nHTTPS_PROXY=http://proxy.corp:8888\nno_proxy=localhost,corp,127.0.0.1\nNO_PROXY=localhost,corp,127.0.0.1\nNow when I use mitmproxy, I can start it with --upstream-proxy $http_proxy and it will forward requests for public internet servers correctly, but it will fail with intranet servers, since it doesn't see the $no_proxy variable. I see two options:\nAdd an option to fetch the upstream proxy from the various *_proxy environment variables.\nAdd an --upstream-proxy-skip option to support the $no_proxy usecase.", "issue_status": "Open", "issue_reporting_time": "2016-12-07T14:18:30Z"}, "207": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1775", "issue_id": "#1775", "issue_summary": "Sans-IO Proxy Implementation", "issue_description": "Member\nmhils commented on 22 Nov 2016 \u2022\nedited\nWe had some discussions about the shortcomings of our current protocol layer implementation and I started working on a prototype of an alternative sans-io architecture to potentially replace that at some point. The purpose of this work-in-progress issue is to collect some general thoughts on what we want to achieve. Some of the problems below are immediate consequences of our current architecture, others could in theory also be solved with what we have, but are still listed here to be considered when we work on that anyway.\nProblems with the current implementation\nProtocols are thread-based, which yields a variety of subtle bugs and race conditions in the test suite in particular.\nNo separation between IO and data processing, which makes testing and connection management hard.\nPoor isolation between layers. (this can be improved, but it is debatable by how much)\nInadequate handling of timeouts. If clients or servers don't disconnect, connections may stay up infinitely.\nThe socket object is exposed to layers and dynamically wrapped there (e.g. for TLS), which changes the semantics in subtle ways (see e.g. ssl_read_select ).\nNo support for TLS-over-TLS, which would be required for what the Chromium guys call a \"Secure Web Proxy\".\nNo support for server-side greetings (#1774)\nNo support for changing the request destination when using HTTP2\nWe're always in upstream or non-upstream mode. (#1821)\nThe relationship between WebSocketFlows/HTTP Flows is not really clear (we probably just want to display one of them in the console)\nNo clear strategy determining when to establish an upstream connection. For example, for server replay it is undesirable to establish a connection right away. On the other side, for server-side greetings, connections need to be established immediately (see e.g. #2464)\nNo support for sending transparent requests to an upstream proxy (see #2813)\nNo clear strategy determining if we should be as transparent as possible (e.g. mirror cipher suites offered by the client) or if we should be as secure as possible (only offering ciphersuites we deem secure)\n1", "issue_status": "Open", "issue_reporting_time": "2016-11-22T13:54:47Z"}, "208": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1774", "issue_id": "#1774", "issue_summary": "Handle protocols that start with a server greeting", "issue_description": "flydave commented on 22 Nov 2016\nI've tried using mitmdump 0.18.2 for POP3S and IMAP4S. In both of these protocols the client connects and then the server sends greeting. Then the client sends command(s) and the server responds. Additionally, in IMAP4 the server can send unsolicited responses at any time. (Unsolicited means responses which are not caused by a direct client command).\nSteps to reproduce the problem:\nI've tried with:\nmitmdump --insecure --stream 0 --transparent --tcp '.*'\nmitmdump --insecure --stream 0 --transparent --raw-tcp\nBoth of these act the same: TLS MITM is correctly performed and the server sends a greeting. But mitmdump doesn't forward it to the client. Instead it sits and waits for the client to send something. But the client will not send anything because it's waiting for the server greeting.\nIf I use telnet as a client I can press enter which will cause the client to send something. mitmdump will forward that to the server and then it will forward server's greeting to the client. And after that it will forward server's response to the client's request (just CRLF if I only pressed enter), which will normally be an error response.\nAfter that I can use the connection because now we'll be in the mode which mitmdump expects. However, that can only be initiated from the telnet session. Normal mail clients will hang while waiting for the server greeting. And I suspect that unsolicited IMAP4 server messages won't be forwarded to the client until the client sends something.\nIs there a command line option I've missed that would cause mitmdump to forward server's stream regardless of what client sends?\nFailing that, can that mode of operation be implemented?\nSystem information\nMitmproxy version: 0.18.2\nPython version: 2.7.12\nPlatform: Linux-4.4.0-47-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Open", "issue_reporting_time": "2016-11-22T10:32:25Z"}, "209": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1745", "issue_id": "#1745", "issue_summary": "twitter.com goes in timeout if HTTP2 is enabled", "issue_description": "tomlabaude commented on 15 Nov 2016\nSteps to reproduce the problem:\nIntercepting twitter.com with Firefox and Chrome -> timeout after ClientConnect\nPage never appears, with no error in logs\nSeen on SlackFor @cortesi, for him was working on Firefox but not Chrome\nAny other comments? What have you tried so far?\nDisabling HTTP2 works directly with --no-http2\nSystem information\nMitmproxy version: 0.18.2\nPython version: 3.5.2\nPlatform: Darwin-16.1.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.12.1 ('', '', '') x86_64", "issue_status": "Open", "issue_reporting_time": "2016-11-14T21:57:31Z"}, "210": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1721", "issue_id": "#1721", "issue_summary": "More sophisticated handling of expect/continue", "issue_description": "Member\ncortesi commented on 5 Nov 2016\nThis is an unfortunate corner case in HTTP that we need to handle better:\nAt the moment, we immediately respond with a continue when we see expect. We need to forward the expect request up to the server and reflect the response down tot he client.\nWe'll need to cope with this in our event system. I think this probably means we need to add an http_continue event, and a continue attribute on http flows that contains the server continue response.", "issue_status": "Open", "issue_reporting_time": "2016-11-04T21:51:57Z"}, "211": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1662", "issue_id": "#1662", "issue_summary": "Revamp content views", "issue_description": "Member\ncortesi commented on 25 Oct 2016\nThe way we deal with content views at the moment is sub-optimal. We're caching generated urwid.Text objects in mitmproxy console, and we have no good way for views to be dynamically constructed on demand. To fix this, I propose that:\nWe change the flow body view to use an urwid ListWalker, which constructs the urwid.Text instances on demand.\nWe define a content view function as returning something that implements collections.abc.Sequence. Simple views will just return a list, while more complex views can return an object that constructs data on demand. More complex objects are also free to progressively save internal state for expensive data.\nMitmproxy console can now use an LRU cache to cache objects returned by content views, using the view type and data as keys. These hash more naturally than entire Message objects which is what we use at the moment. For expensive views, the previously constructed view object will be returned from the cache with all of the dynamically computed data intact.", "issue_status": "Open", "issue_reporting_time": "2016-10-24T22:18:14Z"}, "212": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1512", "issue_id": "#1512", "issue_summary": "Support SameSite Cookie Attribute", "issue_description": "Member\nKriechi commented on 28 Aug 2016\nI think we have to make a few changes to support the SameSite cookie attribute:\nnetlib/http/cookies.py and probably in the HAR code as well.\nhttps://www.chromestatus.com/feature/4672634709082112\nhttps://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie", "issue_status": "Open", "issue_reporting_time": "2016-08-28T10:53:52Z"}, "213": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1477", "issue_id": "#1477", "issue_summary": "First class support for HAR", "issue_description": "Contributor\ndufferzafar commented on 11 Aug 2016\nOnce we get HAR dumping support (#1464) I think we should make it an integral part of mitm rather than keeping it as a external example:\nAllow user to export flows as HAR selectively. Just like we do for saving flows (w key.)\nAllow reading of HAR files. This will complete a bridge to/from other tools like browsers and other proxies.\n1\n7", "issue_status": "Open", "issue_reporting_time": "2016-08-11T10:40:02Z"}, "214": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1473", "issue_id": "#1473", "issue_summary": "Add API to programatically create new requests.", "issue_description": "Member\nmhils commented on 9 Aug 2016 \u2022\nedited by dufferzafar\nOriginal discussion: https://discourse.mitmproxy.org/t/are-there-any-script-examples-for-creating-a-get-post-put/134\nIt would be great if we'd have a dedicated API to make new requests from scripts, e.g. master.new_request() or something along those lines. This would probably just call new_request and then replay_request, but this seems useful enough to spell out explicitly.", "issue_status": "Open", "issue_reporting_time": "2016-08-09T01:31:58Z"}, "215": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1469", "issue_id": "#1469", "issue_summary": "Replace body only", "issue_description": "Contributor\ndufferzafar commented on 4 Aug 2016\nCurrently, the replacements work on both Headers and Body.\nI think we should support body only replacements.\nUser story: https://discourse.mitmproxy.org/t/emulate-charles-proxys-map-local/116\n4", "issue_status": "Open", "issue_reporting_time": "2016-08-04T06:26:57Z"}, "216": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1454", "issue_id": "#1454", "issue_summary": "Inbuilt Map Remote Functionality", "issue_description": "Contributor\ndufferzafar commented on 31 Jul 2016 \u2022\nedited\nCharles Proxy has a Map Remote feature which maps one URL to another.\nThis can be achieved in mitm by using a script similar to:\ndef request(flow):\n    if \"google.com\" in flow.url:\n        flow.request.url = flow.request.url.replace(\"google.com\", \"google.jp\")\nI think we should have this feature inbuilt (just like content replacements) rather than expecting users to write custom scripts.\n7\n1", "issue_status": "Open", "issue_reporting_time": "2016-07-31T12:00:37Z"}, "217": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1422", "issue_id": "#1422", "issue_summary": "Add everything while editing requests", "issue_description": "tkisason commented on 24 Jul 2016\nHello everyone, i have a suggestion, what do you think about the possibility to add an \"everything\" option to edit request? Currently the possibility is: cookies,query,path,url,header,form,raw body,method, and only the raw body is editable with $EDITOR, an everything option would be nice, since you could edit the whole raw request/response with vim (and your vim-fu) for instance. The only problem would be calculating and updating the request size afterwards...\nWhat do you think?\nSincerely,\nTonimir", "issue_status": "Open", "issue_reporting_time": "2016-07-24T15:18:44Z"}, "218": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1261", "issue_id": "#1261", "issue_summary": "Add transparent mode for own outgoing traffic", "issue_description": "tlbdk commented on 15 Jun 2016 \u2022\nedited\nI did a bit of research on how to get PF to also handle own outgoing traffic, it works a bit like this:\nBrowser -> (outgoing interface) -> (PF filter rule) -> (lo interface) -> (PF translation rule) -> mitmproxy\nThere are some limits, the \"Browser\" needs to run as a different user than mitmproxy as the uid is used as a filter rule to make sure the mitmproxy traffic is also not sent back to it self.\nI have a more in-depth explanation of how to do this:\nhttp://tlbdk.github.io/mac/proxy/mitmproxy/fiddler/2016/04/14/redirect-outgoing-traffic-for-user-on-mac.html\nAll this could be turned into a switch for mitmproxy so it was a bit less work to setup.", "issue_status": "Open", "issue_reporting_time": "2016-06-15T17:41:58Z"}, "219": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1095", "issue_id": "#1095", "issue_summary": "Feature request: mechanism to set TCP socket connect timeout", "issue_description": "Contributor\nfotinakis commented on 24 Apr 2016 \u2022\nedited\nThanks for mitmproxy! It's awesome.\nI've spent a few days debugging an issue in my environment (a custom Selenium grid that runs Firefox and proxies connections through mitmproxy, uses inline scripts, and has specific requirements for limiting the time that things can take). I believe that having the ability to set TCP socket connection timeouts would solve some specific issues for me. I've distilled it down here to some curl commands, but be aware it's not the real environment.\nSteps to reproduce the problem:\nStart mitmdump --port 8088\nRun time curl --proxy http://localhost:8088 http://169.254.111.111/fake, notice it hangs and then takes real 1m15.650s before raising a 502 and timing out (the actual time is system TCP config dependent).\nWhat is the expected behavior?\nI'd like the ability to make this timeout after X seconds. Specifically, I'd like to set a TCP connection timeout on the socket.socket object, after socket creation but before connect.\nWhat went wrong?\nAs far as I can tell, there's no way to do it currently.\nhttps://github.com/mitmproxy/mitmproxy/blob/0.17.x/netlib/tcp.py#L699\nA few roadblocks exist here to solving this myself:\nThe creation of the socket is relatively deeply nested and there are not hooks to configure it.\nYou cannot use the serverconnect hook, it fires before the socket object is actually created.\nYou cannot use the TCPClient.settimeout method for the same reason, the timeout needs to be set before connect but after the socket is created.\nYou cannot use Python's native socket.setdefaulttimeout in an inline script because it still breaks SSL connections in the same way as this old, closed issue (and this might actually be the wrong fix anyway, since it's a full socket timeout not just a connect timeout).\nI basically want a productionized way to do this patch:\nindex 8e46d4f..8e04138 100644\n--- a/netlib/tcp.py\n+++ b/netlib/tcp.py\n@@ -648,9 +648,12 @@ class TCPClient(_Connection):\n     def connect(self):\n         try:\n             connection = socket.socket(self.address.family, socket.SOCK_STREAM)\n+            connection.settimeout(CONNECT_TIMEOUT_SECONDS)\n             if self.source_address:\n                 connection.bind(self.source_address())\n             connection.connect(self.address())\n+            # Reset socket timeout to system defaults because the connection is now established.\n+            connection.settimeout(None)\n             if not self.source_address:\n                 self.source_address = Address(connection.getsockname())\n             self.rfile = Reader(connection.makefile('rb', self.rbufsize))\nI guess this could be either through a new hook like beforeserverconnect for inline scripts, or a command line flag, etc. It might also be nice to pull out the socket.socket creation to it's own method that can be more easily manipulated (I've ended up having to monkey-patch the whole connect method unfortunately).\nAny other comments?\nI think this would fix #1044\nMitmproxy Version: v0.16 (but relates to master)\nOperating System: Linux and Mac", "issue_status": "Open", "issue_reporting_time": "2016-04-24T17:59:30Z"}, "220": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1020", "issue_id": "#1020", "issue_summary": "Add support for non-HTTP flows to the UI.", "issue_description": "Member\nmhils commented on 10 Mar 2016\nWe want to support other protocols than basic HTTP in the UI. In particular, we want to display HTTP2-specific content, WebSockets and raw tcp streams at some point.\nThe basic foundations for this are laid out: We have a generic Flow object (mitmproxy.models.flow) and a HTTPFlow that subclasses it (libmproxy.models.http). For TCP, we would introduce a TCPFlow object that stores a list of messages objects from client and server (in comparison, the HTTPFlow stores a distinct request and response). libmproxy.protocol.tcp would then create one TCPFlow per connection.\nEach connection thread passes Flow objects to the FlowMaster (handle_request, handle_response, ...), which stores them in a FlowStore (see libmproxy.flow). The UI renders the store contents.\nThe high level implementation steps are as follows:\nSet up TCPFlow class\nSend TCPFlows to the FlowMaster (e.g. handle_new_tcp_flow, handle_update_tcp_flow)\nAdd printing to mitmdump.\nMake mitmdump -w and mitmdump -r work.\nMake the mitmproxy console work.\n4", "issue_status": "Open", "issue_reporting_time": "2016-03-10T14:57:48Z"}, "221": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/944", "issue_id": "#944", "issue_summary": "support for invalid line endings", "issue_description": "Member\nmhils commented on 16 Feb 2016\nFrom @durin42 on May 4, 2012 21:26\nI've seen bad servers in the wild that respond with \\n or \\r (yes, \\r) line endings instead of \\r\\n. It'd be great to be able to test that.\nCopied from original issue: mitmproxy/pathod#3", "issue_status": "Open", "issue_reporting_time": "2016-02-15T22:29:56Z"}, "222": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/943", "issue_id": "#943", "issue_summary": "support for 100 CONTINUE", "issue_description": "Member\nmhils commented on 16 Feb 2016\nFrom @durin42 on May 4, 2012 21:26\nWould be lovely to support sending the continue status line both early and after a delay.\nCopied from original issue: mitmproxy/pathod#2", "issue_status": "Open", "issue_reporting_time": "2016-02-15T22:29:46Z"}, "223": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/942", "issue_id": "#942", "issue_summary": "support for chunked transfer encoding", "issue_description": "Member\nmhils commented on 16 Feb 2016\nFrom @durin42 on May 4, 2012 21:25\nIt'd be nice to be able to have pathod use chunked transfer encoding for responses and then be able to do drops and hangs partway through chunks.\nCopied from original issue: mitmproxy/pathod#1", "issue_status": "Open", "issue_reporting_time": "2016-02-15T22:29:36Z"}, "224": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/941", "issue_id": "#941", "issue_summary": "Increase debugging information on certificate validation failure by storing the invalid cert chain", "issue_description": "Member\nmhils commented on 16 Feb 2016\nFrom @kyle-m on June 23, 2015 22:0\nCurrently only error depth and number are stored in ssl_verification_error when upstream certificate validation fails. This means that when strict upstream certificate validation is enabled the connection is terminated without reporting the actual contents of the certificate it failed on.\nThis is due to the fact that certificates are not available on the connection object until after the SSL handshake has completed and there currently exists a bug in pyOpenSSL which prevents the storing of the certificate passed as the second argument in the verify callback.\nOnce pyca/pyopenssl/issues/273 is fixed we should update the code to also store (and in upstream projects, display) the failing certificate to help users troubleshoot. In the meantime the actual certificate contents will only be available when upstream server validation is disabled.\nCopied from original issue: mitmproxy/netlib#77", "issue_status": "Open", "issue_reporting_time": "2016-02-15T22:25:11Z"}, "225": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/940", "issue_id": "#940", "issue_summary": "Perf: Use trusted certificates from memory instead of calling SSL_CTX_load_verify_locations", "issue_description": "Member\nmhils commented on 16 Feb 2016\nFrom @mhils on September 2, 2015 14:16\nSSL_CTX_load_verify_locations always loads the certificates from a file, we should read them from memory instead. Possibly relevant: http://stackoverflow.com/a/32250441/934719\nCopied from original issue: mitmproxy/netlib#88", "issue_status": "Open", "issue_reporting_time": "2016-02-15T22:24:47Z"}, "226": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/848", "issue_id": "#848", "issue_summary": "Requesting complete URL over https proxy results in \"Invalid request scheme: https\"", "issue_description": "copumpkin commented on 30 Nov 2015\nSteps to reproduce the problem:\nSet up an HTTPS mitmproxy\nRun the following (minimized) code against it:\nimport httplib\nconn = httplib.HTTPSConnection('<your proxy IP>',<your proxy port>)\nconn.set_tunnel('www.google.com',443)\nconn.request('GET','https://www.google.com:443/')\nresp = conn.getresponse()\nprint resp.read()\nWhat is the expected behavior?\n<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\n<TITLE>301 Moved</TITLE></HEAD><BODY>\n<H1>301 Moved</H1>\nThe document has moved\n<A HREF=\"http://www.google.com/\">here</A>.\n</BODY></HTML>\nWhat went wrong?\n<html>\n            <head>\n                <title>400 Bad Request</title>\n            </head>\n            <body>HttpException('Invalid request scheme: https',)</body>\n        </html>\nAny other comments?\nI believe it's caused by a combination of https://github.com/mitmproxy/mitmproxy/blob/master/libmproxy/protocol/http.py#L544-L545 and https://github.com/mitmproxy/mitmproxy/blob/master/libmproxy/protocol/http.py#L502-L503. Indeed, if you modify my GET request above to ask for just / instead of https://www.google.com:443/, everything works fine.\nI'm not sure if it's sensible to support absolute-form requests over https tunnels, but I'm getting this behavior in real code (boto for python AWS) so I don't think it's very a contrived situation.\nmitmproxy version: 0.14.0\n4", "issue_status": "Open", "issue_reporting_time": "2015-11-30T17:05:40Z"}, "227": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/738", "issue_id": "#738", "issue_summary": "Socks Proxy Authentication", "issue_description": "AnalogJ commented on 23 Aug 2015\nI did some quick curl testing, and it seems that with socks mode enabled, single user and no anonymous modes both fail (I didnt have time to test htpasswd mode). If I remove the --socks flag, everything works as expected. I also tried embedding the username and password in the proxy url: http://test:test@localhost:8080 with the same result.\nSteps to reproduce the problem:\n$ mitmdump --socks --nonanonymous --port 8080\nor\n$ mitmdump --socks --singleuser test:test --port 8080\n$ curl -socks5 localhost:8080 --proxy-user test:test http://www.cnn.com\nWhat is the expected behavior?\nThe http response should have been written to STDOUT.\nWhat went wrong?\nThe actual response was:\ncurl: (52) Empty reply from server\nAny other comments?\nWithout the --socks argument mitmdump works fine. I wrote a quick inline script to validate that the authenticator was correctly being set, and call the test method on a hardcoded username and password. It looks like the credentials are being sent over and set correctly, but they are not being validated for requests.\nlocalhost:8080: clientconnect\n{'password_manager': <netlib.http.authentication.PassManSingleUser object at 0x7f19c61fb090>,\n 'realm': 'mitmproxy'}\n{'password': 'test', 'username': 'test'}\nTrue\nlocalhost:8080: Proxy Authentication Required\nlocalhost:8080: clientdisconnect\nmitmdump version: mitmdump 0.13.1\nOperating System: Ubuntu/Docker\n1", "issue_status": "Open", "issue_reporting_time": "2015-08-23T03:28:54Z"}, "228": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/721", "issue_id": "#721", "issue_summary": "Syntax highlighting for responses", "issue_description": "The-Compiler commented on 13 Aug 2015\nFIrst of all, thanks for this awesome piece of software! I'm developing a browser and this seems very helpful for debugging issues.\nIt'd be nice if code in responses was syntax-highlighted, e.g. using the excellent pygments library. This would probably make it much easier to read, at least for me. Also, colors are just nice!\n3", "issue_status": "Open", "issue_reporting_time": "2015-08-13T04:08:27Z"}, "229": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/652", "issue_id": "#652", "issue_summary": "mitmdump --no-pop results in redirect loop", "issue_description": "ghost commented on 26 Jun 2015\nWhat's the problem?\nRunning mitmdump with the --no-pop results in an error like \"This webpage has a redirect loop\" for some pages.\nWhich versions are affected?\nI am not sure when I first encounter this problem. I think it should go back to a version of 0.9 or 0.10. But I can confirm that this is still an issue in version 0.12.1.\nHow to reproduce the problem?\nSetup mitmdump as a transparent proxy and let is save the content with option -w.\nOpen a browser capable of following redirects like HTTP/1.1 301 Moved Permanently and it should be configured to open with an empty start page like about:blank. Firefox, Internet Explorer, Chrome and more should work.\nGo to URL bing.com. After the website is loaded the URL should be www.bing.com.\nNow clear the cache of the browser and close the browser.\nStop mitmdump and start it as a transparent proxy with the captured content and the --no-pop option.\nOpen the same browser and go to URL bing.com. Now the browser should complain about an redirect loop instead of presenting the website.\nWhy does this happen?\nmitmdump use the IP but ignores the host-field and thus the domain to find the correct response. With the --no-pop option mitmdump search for the first appearance of [IP]/ for both domains; with and without www. Thus the redirection is presented in both cases and the loop is born.\nAre there other related problems?\nYes. The problem is not limited for redirection to the url with www but for all virtual host related calls for the same URI on the same IP. For example it once happened that to bigger sites, both using akamai, get temporarily the same IP on recording. Thus on rewind the wrong site was presented when the second one was requested. Now they get different IPs thus it does not happen at the moment.\nAre there more information?\nI am aware of the --replay-ignore-host option but it is not set and thus it should be false and I could validate that it is. I also know the lines\n         if not self.ignore_host:\n             key.append(r.host)\nin the _hash function of flow.py. But r.host is the IP of the host and not the host field of the HTTP headers.\nHow could the problem be solved?\nObviously the host field needs to be considered. As a workaround I added r.headers.get(\"host\") to the hash function, if present.\nI am not sure what the correct solution is. For example I do not know if r.host should be the IP and not the host-field. Additionally I do not know if the intention of --replay-ignore-host is to cover the request host IP and not the request host field. Thus it is not clear if these two lines are totally correct and the problem is somewhere else or not.", "issue_status": "Open", "issue_reporting_time": "2015-06-25T20:20:39Z"}, "230": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/477", "issue_id": "#477", "issue_summary": "Multithreaded WSGI apps seem to block", "issue_description": "Contributor\nzbuc commented on 18 Feb 2015\nSteps to reproduce the problem:\nIn Netlib, it looks like multithreading is enabled on the WSGIAdaptor class that mitmproxy uses: https://github.com/mitmproxy/netlib/blob/master/netlib/wsgi.py#L53\nHowever a simple Flask app that should be able to take advantage of thread switching seems to block on a single thread (and block the main mitmproxy threads as well, making the console UI non-responsive): https://gist.github.com/zbuc/9ae9aed56914df70f462\nWhat is the expected behavior?\nYou should be able to access the main index page while waiting on the thread running /slow to sleep.\nWhat went wrong?\nThe main index (and the main mitmproxy UI) go non-responsive until /slow finishes loading\nmitmproxy version: 0.11.4\nOperating System: Mac OS X 10.10.2", "issue_status": "Open", "issue_reporting_time": "2015-02-18T05:08:10Z"}, "231": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/211", "issue_id": "#211", "issue_summary": "Support upstream SOCKS proxy", "issue_description": "tyll commented on 9 Feb 2014\nImplement support for SOCKS upstream proxy with DNS resolution via SOCKS, so mitmproxy can be easily tunnelled through \"ssh -D\".\n9", "issue_status": "Open", "issue_reporting_time": "2014-02-09T07:00:56Z"}}, "closed_issues": {"1": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3800", "issue_id": "#3800", "issue_summary": "can't see request/response body with test on java", "issue_description": "morkibka commented 3 days ago \u2022\nedited\ncreate test with java + appium + android + mitmproxy and instead of request/response body in IDEA logs see only code like \"[105, 101, 115, 34, 58, 34, 48, 34, 125]\"\nmy code:\n`public void basicTest () throws InterruptedException {\n    org.apache.log4j.BasicConfigurator.configure(new NullAppender());\n\n    List<InterceptedMessage> messages = new ArrayList<InterceptedMessage>();\n\n    MitmproxyJava proxy = new MitmproxyJava(\"/usr/local/bin/mitmdump\", (InterceptedMessage m) -> {\n        System.out.println( m.requestURL.toString() + Arrays.toString(m.requestBody)+ m.responseHeaders.toString() + m.responseBody.toString());\n        messages.add(m);\n        return m;\n\n    });\n    try {\n        proxy.start();\n\n        //first step to get traffic\n        wait.until(ExpectedConditions.visibilityOfElementLocated\n                (By.id(\"com.appcraft.unicorn:id/btnAccept\"))).click();\n        Thread.sleep(3000);\n        System.out.println(messages);\n\n        proxy.stop();\n\n    } catch (IOException | TimeoutException | URISyntaxException | InterruptedException e) {\n        System.out.println(e);\n    }`\nwhat i get: https://gist.github.com/morkibka/4b802c86f37705b7fefe07a3740d5612\nif i use .toString() then i get Ljava.lang.String\nif i use Arrays.toString then i get \"[105, 101, 115, 34, 58, 34, 48, 34, 125]\"\ncan someone help me pls?", "issue_status": "Closed", "issue_reporting_time": "2020-01-27T13:16:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "2": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3799", "issue_id": "#3799", "issue_summary": "Transparent mode failure: File not found in Docker container", "issue_description": "LaumiH commented 4 days ago\nProblem Description\nI have mitmproxy running inside a docker container, entrypoint is mitmdump, and I want to execute the unmodified send_reply_from_proxy.py.\nThe container starts correctly, but when I send a http message through it I get Transparent mode failure: FileNotFoundError(2, 'No such file or directory').\nI am aware of #3236, but it did not solve my issue.\nSteps to reproduce the behavior:\nCreate a Docker container as follows:\nFROM mitmproxy/mitmproxy:latest\n\nRUN mkdir test\nWORKDIR /home/$USER/test\nCOPY ./script.py .\n\nEXPOSE 80:80\nEXPOSE 8080:8080\n\nENTRYPOINT [\"/usr/bin/mitmdump\", \"--mode\", \"transparent\", \"-s\", \"./script.py\"]\nBuild it with docker build . -t mitmdump\nRun it with docker run -it mitmdump. I also tried with --network=host option, no change\nExecute https_proxy=http://localhost:8080/ curl -k https://example.com/\nThere is a clientconnect, and then the error message.\nSystem Information\nDocker image is :latest.\nDocker version 19.03.5-ce, build 633a0ea838.\nI am running it on Linux 5.4.13-3-MANJARO.", "issue_status": "Closed", "issue_reporting_time": "2020-01-27T09:35:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "3": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3797", "issue_id": "#3797", "issue_summary": "Unable to omit true value of custom bool option in CLI", "issue_description": "marwinxxii commented 6 days ago\nProblem Description\nWhen setting true value of custom addon option from CLI you cannot omit its value.\nSteps to reproduce the behavior:\nCreate custom addon with bool option\nrun mitmproxy -s myaddon.py --set bool_option\nSee exception in log\nerror: Addon error: Traceback (most recent call last):\n  File \"\u2026/lib/python3.7/site-packages/mitmproxy/addonmanager.py\", line 42, in safecall\n    yield\n  File \"\u2026/lib/python3.7/site-packages/mitmproxy/addons/script.py\", line 102, in loadscript\n    ctx.master.addons.register(ns)\n  File \"\u2026/lib/python3.7/site-packages/mitmproxy/addonmanager.py\", line 162, in register\n    self.master.options.process_deferred()\n  File \"\u2026/lib/python3.7/site-packages/mitmproxy/optmanager.py\", line 326, in process_deferred\n    self.update(**update)\n  File \"\u2026/lib/python3.7/site-packages/mitmproxy/optmanager.py\", line 225, in update\n    u = self.update_known(**kwargs)\n  File \"\u2026/lib/python3.7/site-packages/mitmproxy/optmanager.py\", line 216, in update_known\n    self._options[k].set(v)\n  File \"\u2026/lib/python3.7/site-packages/mitmproxy/optmanager.py\", line 57, in set\n    typecheck.check_option_type(self.name, value, self.typespec)\n  File \"\u2026/lib/python3.7/site-packages/mitmproxy/utils/typecheck.py\", line 74, in check_option_type\n    raise e\nTypeError: Expected <class 'bool'> for bool_option, but got <class 'NoneType'>.\nWhile the same works for options in addons shipped with mitmproxy, e.g. mitmproxy --set anticache\nSystem Information\nMitmproxy: 5.0.0 (+3, commit 010248a)\nPython:    3.7.1\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\nPlatform:  Darwin-19.0.0-x86_64-i386-64bit\nExample\nimport mitmproxy\n\n\nclass MyAddon:\n    def load(self, loader):\n        loader.add_option(\n            name='bool_option',\n            typespec=bool,\n            default=False,\n            help='Bool option'\n        )\n\n    def configure(self, options):\n        if 'bool_option' in options:\n            print(mitmproxy.ctx.options.bool_option)\n\naddons = [MyAddon()]", "issue_status": "Closed", "issue_reporting_time": "2020-01-24T20:52:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "4": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3795", "issue_id": "#3795", "issue_summary": "Confused about setheader: how to check if it works?", "issue_description": "register110 commented 9 days ago\nProblem\nI started mitmproxy with the following command:\nmitmproxy --setheader /~q/User-Agent/\"TEST\"\nThis is fine, all User-Agents have been modified to \"TEST\" in mitmproxy, but\nWhen I turned to inspecting requests in firefox dev tools, all the request User-Agent headers were not changed\nSo, does it work?\nEnviroment\nMitmproxy: 5.0.1\nPython: 3.6.8\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Linux-5.3.7-1.el7.elrepo.x86_64-x86_64-with-centos-7.7.1908-Core\nFirefox: 68.2.0esr\nThanks!", "issue_status": "Closed", "issue_reporting_time": "2020-01-22T09:31:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "5": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3793", "issue_id": "#3793", "issue_summary": "Need to split flow by proxy users", "issue_description": "outsourcestudio commented 10 days ago\nIn my company users use proxy.\nBut I need to split the flow by usernames. for each user - own traffic log.\nSorry but I can't figure out how to do that. Is it possible?\nI have\nUsing docker latest image.\nProxy works fine with proxyauth option enabled.\nhttp and https work fine.\nbut no meta data in requests details (using mitmweb)\nAs idea want to write add-on. But I'm not sure it's possible.\nThank you!", "issue_status": "Closed", "issue_reporting_time": "2020-01-20T21:58:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "6": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3790", "issue_id": "#3790", "issue_summary": "mitmproxy has crashed!", "issue_description": "SandyLinhNguyen commented 11 days ago \u2022\nedited\nProblem Description\nSorry for my bad english.\nI was using locust-replay and it base on mitmproxy to write a scenario for load test\nSteps to reproduce the behavior:\nUsing command: mitmproxy --anticache -s locust_extractor.py\nUsing option: locust.code.clip @ALL\nAfter that it show the output below:\nTraceback (most recent call last):\nFile \"/Users/linhsandy/Downloads/mitmproxy/mitmproxy/master.py\", line 86, in run_loop\nloop()\nFile \"/Users/linhsandy/Downloads/mitmproxy/venv/lib/python3.8/site-packages/urwid/main_loop.py\", line 287, in run\nself._run()\nFile \"/Users/linhsandy/Downloads/mitmproxy/venv/lib/python3.8/site-packages/urwid/main_loop.py\", line 385, in _run\nself.event_loop.run()\nFile \"/Users/linhsandy/Downloads/mitmproxy/venv/lib/python3.8/site-packages/urwid/main_loop.py\", line 1494, in run\nreraise(*exc_info)\nFile \"/Users/linhsandy/Downloads/mitmproxy/venv/lib/python3.8/site-packages/urwid/compat.py\", line 58, in reraise\nraise value\nFile \"/Library/Frameworks/Python.framework/Versions/3.8/lib/python3.8/asyncio/events.py\", line 81, in _run\nself._context.run(self._callback, *self._args)\nFile \"/Users/linhsandy/Downloads/mitmproxy/venv/lib/python3.8/site-packages/urwid/raw_display.py\", line 416, in\nwrapper = lambda: self.parse_input(\nFile \"/Users/linhsandy/Downloads/mitmproxy/venv/lib/python3.8/site-packages/urwid/raw_display.py\", line 515, in parse_input\ncallback(processed, processed_codes)\nFile \"/Users/linhsandy/Downloads/mitmproxy/venv/lib/python3.8/site-packages/urwid/main_loop.py\", line 412, in _update\nself.process_input(keys)\nFile \"/Users/linhsandy/Downloads/mitmproxy/venv/lib/python3.8/site-packages/urwid/main_loop.py\", line 513, in process_input\nk = self._topmost_widget.keypress(self.screen_size, k)\nFile \"/Users/linhsandy/Downloads/mitmproxy/mitmproxy/tools/console/window.py\", line 310, in keypress\nk = super().keypress(size, k)\nFile \"/Users/linhsandy/Downloads/mitmproxy/venv/lib/python3.8/site-packages/urwid/container.py\", line 1119, in keypress\nreturn self.footer.keypress((maxcol,),key)\nFile \"/Users/linhsandy/Downloads/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 201, in keypress\nreturn self.ab.keypress(*args, **kwargs)\nFile \"/Users/linhsandy/Downloads/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 149, in keypress\nself.prompt_execute(text)\nFile \"/Users/linhsandy/Downloads/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 169, in prompt_execute\nmsg = p(txt)\nFile \"/Users/linhsandy/Downloads/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 115, in execute_command\nexecute(txt)\nFile \"/Users/linhsandy/Downloads/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 18, in call\nret = self.master.commands.execute(cmd)\nFile \"/Users/linhsandy/Downloads/mitmproxy/mitmproxy/command.py\", line 265, in execute\nreturn self.call_strings(command_name, args)\nFile \"/Users/linhsandy/Downloads/mitmproxy/mitmproxy/command.py\", line 251, in call_strings\nreturn self.commands[command_name].call(args)\nFile \"/Users/linhsandy/Downloads/mitmproxy/mitmproxy/command.py\", line 122, in call\nret = self.func(*bound_args.args, **bound_args.kwargs)\nFile \"/Users/linhsandy/Downloads/mitmproxy/mitmproxy/command.py\", line 295, in wrapper\nreturn function(*args, **kwargs)\nFile \"locust_extractor.py\", line 224, in code_clip\ndata = strutils.always_str(self.context.locust_code(flows[0]))\nIndexError: list index out of range\nmitmproxy has crashed!\nPlease lodge a bug report at:\nhttps://github.com/mitmproxy/mitmproxy\nSystem Information\nMacOS Mini High Sierra\nPython version: 3.8.1\nMitmproxy: 6.0.0.dev (+33, commit b020a11)\nPython: 3.8.1\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: macOS-10.13.6-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2020-01-20T07:48:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "7": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3788", "issue_id": "#3788", "issue_summary": "Any workaround incase the ISP blocks the CONNECT tunnel?", "issue_description": "mariolatiffathy commented 11 days ago \u2022\nedited\nIs your feature request related to a problem? Please describe.\nActually, the problem is that I can't load any HTTPS site because my ISP blocks the CONNECT tunnel, and it is a problem for any proxy server that I use (not only mitmproxy). The connection gets reset by peer on requesting any HTTPS site.\nI was wondering if there's a workaround for this, or the CONNECT tunnel is always necessary to be used?", "issue_status": "Closed", "issue_reporting_time": "2020-01-19T13:38:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "8": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3784", "issue_id": "#3784", "issue_summary": "need a python interface to get real IP but not mitm's IP", "issue_description": "weiyuchen commented 17 days ago\nIs your feature request related to a problem? Please describe.\nI'm frustrated when I want to get the attacker's real ip, I'm using python scripts in a addons method, but I try all 5 events style, I can only get mitm's ip by using:\nflow.client_conn.address\nDescribe the solution you'd like\nI'd like to know if there has had such a interface, or if there is a plan to get the real ip.", "issue_status": "Closed", "issue_reporting_time": "2020-01-14T03:39:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "9": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3783", "issue_id": "#3783", "issue_summary": "Connecting to proxy directly using browser throws \"Invalid certifcate\" error. Causes MITMproxy to be blocked by some programs.", "issue_description": "Hacksawfred3232 commented 19 days ago\nProblem Description\nWhen attempting to connect to the proxy port via using something like Edge, Edge reports that\nthe certificate is invalid. The most striking quirk about this is the absence of a subject line. I'm suspecting that this gets set upon receiving a server address from the client. It looks like some programs have a way of testing the proxy due to this quirk. When either set in the proxy settings for the target, or using a program to force the target to use a proxy, the target program reports a \"self-signed certificate\" in the chain, although it is reading the certificate store to check root certificates, which the MITMProxy's certificate is installed in there. A forced installation of the root certificate into \"AuthRoot\" - as indicated in RegEdit - was also performed. In addition, the absence of an additional certificate to verify the presence of HSTS verification might be related.\nSteps to reproduce the behaviour:\nStart any target program that uses libcurl 7.55.1-DEV or something akin to this version.\nStart up MITMProxy. Settings used: \"--anticache, -k\". I am using the windows version installed via pip.\nAttempt to connect to the proxy on the proxy port (In this case for me, its 8080). You should get an error about an invalid certificate, where the certificate has a blank subject line.\nAttempt to connect to a secure remote host with the target program.\nOutcome - You should get an error through either debug or a visible prompt that the target\ncan't connect to the remote host due to a \"self-signed certificate\".\nSystem Information\nmitmproxy: 4.0.4\nPython: 3.7.4\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Windows-10-10.0.18362-SP0", "issue_status": "Closed", "issue_reporting_time": "2020-01-11T22:04:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "10": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3781", "issue_id": "#3781", "issue_summary": "Version 5.0.1 cannot display https requests, 4.04 can display https requests", "issue_description": "crusj commented 20 days ago \u2022\nedited\nProblem Description\nVersion 5.0.1 cannot display https requests, 4.04 can display https requests\nv5.01 I tried for a long time\uff0cv5.0.1 need additional configuration?\nSteps to reproduce the behavior:\nSystem Information\nv5.0.1 linux", "issue_status": "Closed", "issue_reporting_time": "2020-01-11T10:37:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "11": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3778", "issue_id": "#3778", "issue_summary": "\"ValueError: math domain error\" in table mode when displaying a server replay flow", "issue_description": "italankin commented 21 days ago\nProblem Description\nmitmproxy crashes when it tries to display a replayed flows in a table mode.\nWith active server replay, flow's duration is negative, so math.log2 receives a negative value which is illegal.\nTraceback:\n  File \"mitmproxy/master.py\", line 86, in run_loop\n  File \"site-packages/urwid/main_loop.py\", line 286, in run\n  File \"site-packages/urwid/main_loop.py\", line 384, in _run\n  File \"site-packages/urwid/main_loop.py\", line 1484, in run\n  File \"site-packages/urwid/compat.py\", line 58, in reraise\n  File \"asyncio/events.py\", line 88, in _run\n  File \"site-packages/urwid/main_loop.py\", line 1443, in faux_idle_callback\n  File \"site-packages/urwid/main_loop.py\", line 572, in entering_idle\n  File \"site-packages/urwid/main_loop.py\", line 586, in draw_screen\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\n  File \"site-packages/urwid/container.py\", line 1086, in render\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\n  File \"site-packages/urwid/decoration.py\", line 226, in render\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\n  File \"site-packages/urwid/container.py\", line 1086, in render\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\n  File \"site-packages/urwid/listbox.py\", line 471, in render\n  File \"site-packages/urwid/listbox.py\", line 356, in calculate_visible\n  File \"mitmproxy/tools/console/flowlist.py\", line 57, in get_focus\n  File \"mitmproxy/tools/console/flowlist.py\", line 12, in __init__\n  File \"mitmproxy/tools/console/flowlist.py\", line 22, in get_text\n  File \"mitmproxy/tools/console/common.py\", line 561, in format_flow\n  File \"mitmproxy/tools/console/common.py\", line 488, in raw_format_table\nValueError: math domain error\nSteps to reproduce the behavior:\nStart mitmproxy with table layout active\nMake an HTTP call\nAdd the call to server replay\nMake the call again\nSystem Information\nMitmproxy: 5.0.1 binary\nPython:    3.7.5\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\nPlatform:  Linux-5.0.0-38-generic-x86_64-with-debian-buster-sid", "issue_status": "Closed", "issue_reporting_time": "2020-01-10T08:37:23Z", "fixed_by": "#3779", "pull_request_summary": "fix: ValueError: math domain error\" in table mode #3778", "pull_request_description": "ylmrx commented 20 days ago\nAll in title. Fixes #3778", "pull_request_status": "Merged", "issue_fixed_time": "2020-01-10T17:45:45Z", "files_changed": [["2", "mitmproxy/tools/console/common.py"]]}, "12": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3777", "issue_id": "#3777", "issue_summary": "Transparent proxy based DNS support?", "issue_description": "liudonghua123 commented 23 days ago\nIs your feature request related to a problem? Please describe.\nI want to build a transparent proxy server which proxy all the http/https request. the clients has a customized dns server which resolve some domains to the transparent proxy server. For example, google.com will resolve to 10.0.0.1 which is the transparent proxy server, and When the user navigation google.com, all the traffics of google.com will send to 10.0.0.1.\nDescribe the solution you'd like\nAdd some options which support this feature and let the proxy server listen 80/443. And ready for accepting request from network.\nDescribe alternatives you've considered\nAdditional context", "issue_status": "Closed", "issue_reporting_time": "2020-01-08T02:30:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "13": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3776", "issue_id": "#3776", "issue_summary": "mitmdump fails after install", "issue_description": "jlaw9 commented 24 days ago\nProblem Description\nAfter installing mitmproxy, I get the following OpenSSL.crypto error when running mitmdump:\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmdump\", line 11, in <module>\n    sys.exit(mitmdump())\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/tools/_main.py\", line 164, in mitmdump\n    m = run(dump.DumpMaster, cmdline.mitmdump, args, extra)\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/tools/_main.py\", line 94, in run\n    pconf = process_options(parser, opts, args)\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/tools/_main.py\", line 56, in process_options\n    return proxy.config.ProxyConfig(opts)\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/config.py\", line 41, in __init__\n    self.configure(options, set(options.keys()))\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/proxy/config.py\", line 68, in configure\n    key_size\n  File \"/usr/local/lib/python3.6/dist-packages/mitmproxy/certs.py\", line 201, in from_store\n    raw)\n  File \"/usr/local/lib/python3.6/dist-packages/OpenSSL/crypto.py\", line 1837, in load_certificate\n    _raise_current_error()\n  File \"/usr/local/lib/python3.6/dist-packages/OpenSSL/_util.py\", line 54, in exception_from_error_queue\n    raise exception_type(errors)\nOpenSSL.crypto.Error: [('PEM routines', 'PEM_read_bio', 'no start line')]\nSteps to reproduce the behavior:\npip3 install mitmproxy\nmitmdump\nSystem Information\nMitmproxy: 5.0.1\nPython: 3.6.9\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Linux-4.15.0-66-generic-x86_64-with-LinuxMint-19.1-tessa", "issue_status": "Closed", "issue_reporting_time": "2020-01-06T14:56:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "14": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3773", "issue_id": "#3773", "issue_summary": "Multi devices support?", "issue_description": "abinhho commented 27 days ago\nIs your feature request related to a problem? Please describe.\nHello again,\nFor example I have 10 Iphone, I1, I2.. I10 and setting mimtproxy to each of Iphone.\nThen in web view, how could I know which request is of which Iphone?.\nI researched each of request, header have attach an uniqueID of each device but seem not have.\nPlease advice me!", "issue_status": "Closed", "issue_reporting_time": "2020-01-03T14:03:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "15": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3771", "issue_id": "#3771", "issue_summary": "use --rawtcp and change_upstream_proxy_server the tcp Traffic will not fall back", "issue_description": "ldbfpiaoran commented 28 days ago\nProblem Description\nA clear and concise description of what the bug is.\nSteps to reproduce the behavior:\n`def proxy_address(flow: http.HTTPFlow) -> typing.Tuple[str, int]:\nPoor man's loadbalancing: route every second domain through the alternative proxy.\nreturn (\"127.0,0,1\", 8081)\ndef response(flow: http.HTTPFlow):\n# try:\n# print(flow.get_state()['request']['content'])\n# except Exception as e:\n# print(e)\nif flow.request.method == \"CONNECT\":\n# If the decision is done by domain, one could also modify the server address here.\n# We do it after CONNECT here to have the request data available as well.\nreturn\naddress = proxy_address(flow)\nflow.live.change_upstream_proxy_server(address) # type: ignore`\nsuch as\nmitmdump --rawtcp -s tcp.py --mode upstream:http://127.0.0.1:8081 --ssl-insecure --set upstream_cert=false\n3.\nthe tcp Traffic will not fall back\nSystem Information\nPaste the output of \"mitmproxy --version\" here.", "issue_status": "Closed", "issue_reporting_time": "2020-01-03T05:38:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "16": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3769", "issue_id": "#3769", "issue_summary": "this is a bug", "issue_description": "zhaoyulu commented 29 days ago\nProblem Description\nA clear and concise description of what the bug is.\nSteps to reproduce the behavior:\nSystem Information\nPaste the output of \"mitmproxy --version\" here.\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/master.py\", line 86, in run_loop\nloop()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 286, in run\nself._run()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 384, in _run\nself.event_loop.run()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 1484, in run\nreraise(*exc_info)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/compat.py\", line 58, in reraise\nraise value\nFile \"/usr/lib/python3.6/asyncio/events.py\", line 145, in _run\nself._callback(*self._args)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 1443, in faux_idle_callback\ncallback()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 572, in entering_idle\nself.draw_screen()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 586, in draw_screen\ncanvas = self._topmost_widget.render(self.screen_size, focus=True)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/decoration.py\", line 226, in render\ncanv = self._original_widget.render(size, focus=focus)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/listbox.py\", line 501, in render\ncanvas = widget.render((maxcol,))\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/widget.py\", line 1765, in render\ncanv = get_delegate(self).render(size, focus=focus)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/container.py\", line 1523, in render\ncanv = w.render((maxcol,), focus=focus and item_focus)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/container.py\", line 2087, in render\nfocus = focus and self.focus_position == i)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/tools/console/common.py\", line 173, in render\nreturn urwid.TextCanvas([c_text.encode()], [c_attr], maxcol=width)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/canvas.py\", line 358, in init\nraise CanvasError(\"Canvas text is wider than the maxcol specified \\n%r\\n%r\\n%r\"%(maxcol,widths,text))\nurwid.canvas.CanvasError: Canvas text is wider than the maxcol specified\n18\n[23]\n[b'\\xe2\\x80\\xa6[Errno 101] \\xe7\\xbd\\x91\\xe7\\xbb\\x9c\\xe4\\xb8\\x8d\\xe5\\x8f\\xaf\\xe8\\xbe\\xbe']", "issue_status": "Closed", "issue_reporting_time": "2020-01-02T02:49:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "17": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3768", "issue_id": "#3768", "issue_summary": "[Bug] [Web UI] wss://updates not working through apache rewrite", "issue_description": "KaKi87 commented on 1 Jan\nSummary\nwss://updates doesn't work from web UI through apache rewrite.\nSteps to reproduce\nDownload mitmweb binary on a Linux dedicated server\nRun mitmweb using the following command :\n./mitmweb                            \\\n    --mode        socks5             \\\n    --listen-port 3060               \\\n    --web-port    3061               \\\n    --set         block_global=false \\\n    --no-web-open-browser\nCreate a subdomain & point it to your dedicated server\nCreate an apache virtual host for your subdomain using the following configuration :\n<VirtualHost *:80>\n    ServerName proxy.kaki87.net\n    # RewriteEngine On\n    # RewriteCond %{HTTPS} off\n    # RewriteRule (.*) https://%{HTTP_HOST}%{REQUEST_URI}\n</VirtualHost>\nGenerate a Let's Encrypt certificate for your subdomain, then uncomment the redirection directives\nCreate another apache virtual host for your subdomain for HTTPS using the following configuration :\n<IfModule mod_ssl.c>\n<VirtualHost *:443>\n    ServerName proxy.kaki87.net\n    SSLProxyEngine On\n    ProxyRequests Off\n    ProxyPass /.well-known/acme-challenge !\n    ProxyPassReverse /.well-known/acme-challenge !\n    ProxyPass / http://localhost:3061/\n    ProxyPassReverse / http://localhost:3061/\n    RewriteEngine On\n    RewriteCond %{HTTP:UPGRADE} ^WebSocket$ [NC]\n    RewriteCond %{HTTP:CONNECTION} ^Upgrade$ [NC]\n    RewriteRule .* ws://localhost:3061%{REQUEST_URI} [P]\n    SSLCertificateFile /etc/letsencrypt/live/proxy.kaki87.net/fullchain.pem\n    SSLCertificateKeyFile /etc/letsencrypt/live/proxy.kaki87.net/privkey.pem\n    Include /etc/letsencrypt/options-ssl-apache.conf\n</VirtualHost>\n</IfModule>\nConfigure your client to use your proxy (proxy.kaki87.net:3060) as SOCKS5\nListen to your websocket (wss://proxy.kaki87.net/updates) using some tool like websocat\nOpen some web page and note that the websocket configuration is working properly :\n{\n   \"resource\":\"flows\",\n   \"cmd\":\"add\",\n   \"data\":{\n      \"id\":\"c0c71e00-3d75-438e-ab8d-dc9acc5f8012\",\n      \"intercepted\":false,\n      \"client_conn\":{\n         \"id\":\"832cafbb-b6e2-4971-a2ed-e640c088cc80\",\n         \"address\":[\n            \"::ffff:myipaddress\",\n            39036,\n            0,\n            0\n         ],\n         \"tls_established\":true,\n         \"clientcert\":null,\n         \"timestamp_start\":1577877069.7111259,\n         \"timestamp_tls_setup\":1577877070.014983,\n         \"timestamp_end\":null,\n         \"sni\":\"kaki87.net\",\n         \"cipher_name\":\"ECDHE-RSA-AES128-GCM-SHA256\",\n         \"alpn_proto_negotiated\":\"http/1.1\",\n         \"tls_version\":\"TLSv1.2\"\n      },\n      \"server_conn\":{\n         \"id\":\"e794e76f-8eeb-4631-bf45-9bbdfdb784c9\",\n         \"address\":[\n            \"62.210.109.120\",\n            443\n         ],\n         \"ip_address\":[\n            \"62.210.109.120\",\n            443\n         ],\n         \"source_address\":[\n            \"62.210.109.120\",\n            52565\n         ],\n         \"tls_established\":true,\n         \"sni\":\"kaki87.net\",\n         \"alpn_proto_negotiated\":\"http/1.1\",\n         \"tls_version\":\"TLSv1.2\",\n         \"timestamp_start\":1577877077.925917,\n         \"timestamp_tcp_setup\":1577877077.926266,\n         \"timestamp_tls_setup\":1577877077.960093,\n         \"timestamp_end\":null,\n         \"via\":null\n      },\n      \"type\":\"http\",\n      \"modified\":false,\n      \"marked\":false,\n      \"request\":{\n         \"method\":\"GET\",\n         \"scheme\":\"https\",\n         \"host\":\"62.210.109.120\",\n         \"port\":443,\n         \"path\":\"/\",\n         \"http_version\":\"HTTP/1.1\",\n         \"headers\":[\n            [\n               \"Host\",\n               \"kaki87.net\"\n            ],\n            [\n               \"Connection\",\n               \"keep-alive\"\n            ],\n            [\n               \"Cache-Control\",\n               \"max-age=0\"\n            ],\n            [\n               \"Upgrade-Insecure-Requests\",\n               \"1\"\n            ],\n            [\n               \"User-Agent\",\n               \"Mozilla/5.0 (Linux; Android 10; MI 8) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.116 Mobile Safari/537.36\"\n            ],\n            [\n               \"DNT\",\n               \"1\"\n            ],\n            [\n               \"Accept\",\n               \"text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\"\n            ],\n            [\n               \"Accept-Language\",\n               \"fr-FR,fr;q=0.9,en-US;q=0.8,en;q=0.7\"\n            ],\n            [\n               \"If-None-Match\",\n               \"\\\"e174-5964eacb96540-gzip\\\"\"\n            ],\n            [\n               \"If-Modified-Since\",\n               \"Fri, 01 Nov 2019 20:18:53 GMT\"\n            ],\n            [\n               \"Accept-Encoding\",\n               \"gzip, deflate, br\"\n            ]\n         ],\n         \"contentLength\":null,\n         \"contentHash\":null,\n         \"timestamp_start\":1577877104.6229482,\n         \"timestamp_end\":1577877104.6537826,\n         \"is_replay\":false,\n         \"pretty_host\":\"kaki87.net\"\n      }\n   }\n}\nGo to your web UI (https://proxy.kaki87.net) and note that the web UI fails to connect to websocket with the following error :\n11:43:58.115 app.js:8 WebSocket connection to 'wss://proxy.kaki87.net/updates' failed: Error during WebSocket handshake: Unexpected response code: 403\nvalue @ app.js:8\ne @ app.js:8\n1../backends/static @ app.js:2\ns @ app.js:1\ne @ app.js:1\n(anonymous) @ app.js:1\n11:43:58.116 app.js:8 websocket connection errored Arguments [Event, callee: (...), Symbol(Symbol.iterator): \u0192]\nvalue @ app.js:8\n(anonymous) @ app.js:8\nerror (async)\nvalue @ app.js:8\ne @ app.js:8\n1../backends/static @ app.js:2\ns @ app.js:1\ne @ app.js:1\n(anonymous) @ app.js:1\n11:43:58.118 app.js:8 websocket connection closed CloseEvent {isTrusted: true, wasClean: false, code: 1006, reason: \"\", type: \"close\", \u2026}\nvalue @ app.js:8\n(anonymous) @ app.js:8\nSystem Information\nMitmproxy: 5.0.1 binary\nPython:    3.7.5\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\nPlatform:  Linux-4.9.0-7-amd64-x86_64-with-debian-9.8\nThanks", "issue_status": "Closed", "issue_reporting_time": "2020-01-01T11:26:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "18": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3765", "issue_id": "#3765", "issue_summary": "AttributeError: 'tuple' object has no attribute 'find'", "issue_description": "abinhho commented on 31 Dec 2019\nProblem Description\nI tried to run successfully but when I hit ESC, below error displayed.\nSteps to reproduce the behavior:\nRun $ mitmproxy -p 9999 --mode socks5 --showhost\nTraceback (most recent call last):\n  File \"/Users/binhho/Documents/t-mobile/mitmproxy/mitmproxy/master.py\", line 86, in run_loop\n    loop()\n  File \"/Users/binhho/Documents/t-mobile/mitmproxy/venv/lib/python3.7/site-packages/urwid/main_loop.py\", line 286, in run\n    self._run()\n  File \"/Users/binhho/Documents/t-mobile/mitmproxy/venv/lib/python3.7/site-packages/urwid/main_loop.py\", line 384, in _run\n    self.event_loop.run()\n  File \"/Users/binhho/Documents/t-mobile/mitmproxy/venv/lib/python3.7/site-packages/urwid/main_loop.py\", line 1484, in run\n    reraise(*exc_info)\n  File \"/Users/binhho/Documents/t-mobile/mitmproxy/venv/lib/python3.7/site-packages/urwid/compat.py\", line 58, in reraise\n    raise value\n  File \"/usr/local/Cellar/python/3.7.5/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py\", line 88, in _run\n    self._context.run(self._callback, *self._args)\n  File \"/Users/binhho/Documents/t-mobile/mitmproxy/venv/lib/python3.7/site-packages/urwid/raw_display.py\", line 404, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/Users/binhho/Documents/t-mobile/mitmproxy/venv/lib/python3.7/site-packages/urwid/raw_display.py\", line 475, in parse_input\n    codes, wait_for_more)\n  File \"/Users/binhho/Documents/t-mobile/mitmproxy/venv/lib/python3.7/site-packages/urwid/escape.py\", line 387, in process_keyqueue\n    if run[0] == \"esc\" or run[0].find(\"meta \") >= 0:\nAttributeError: 'tuple' object has no attribute 'find'\nSystem Information\nPaste the output of \"mitmproxy --version\" here.\nMitmproxy: 6.0.0.dev (+17, commit 406f8ac)\nPython:    3.7.5\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\nPlatform:  Darwin-19.2.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2019-12-31T09:30:04Z", "fixed_by": "#3766", "pull_request_summary": "bump urwid", "pull_request_description": "Member\nKriechi commented on 31 Dec 2019\nfixes #3765", "pull_request_status": "Merged", "issue_fixed_time": "2019-12-31T10:54:27Z", "files_changed": [["2", "setup.py"]]}, "19": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3764", "issue_id": "#3764", "issue_summary": "brew install mitmproxy - uncertain dependency between version 2 and 3 of python", "issue_description": "punnerud commented on 31 Dec 2019\nProblem Description\nWhen running 'brew install mitmproxy' it have dependency to just python without specifying Python2 or Python3, resulting that Python2 is removed on Mac OS Catalina.\nSteps to reproduce the behavior:\nbrew install mitmproxy\nTry to run 'python2' afterward\nSolution\nChange dependency from 'python' to 'python3' as described where:\nhttps://docs.brew.sh/Homebrew-and-Python\nWhere to change:\nhttps://github.com/Homebrew/homebrew-core/blob/master/Formula/mitmproxy.rb\nhttps://formulae.brew.sh/api/formula/mitmproxy.json", "issue_status": "Closed", "issue_reporting_time": "2019-12-31T09:17:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "20": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3763", "issue_id": "#3763", "issue_summary": "Custom web view for mitmproxy", "issue_description": "abinhho commented on 30 Dec 2019\nHello,\nI search around but could not find the answer so I'd like to ask here.\nI installed mitmproxy already, now I would like to develop a webapp (EX: VueJS + Python Flask) that users can view their request and response via mitmproxy server. I don't know how to read stored data via python flask.\nPlease help!\nSorry I am new here.", "issue_status": "Closed", "issue_reporting_time": "2019-12-30T07:39:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "21": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3761", "issue_id": "#3761", "issue_summary": "Cannot establish TLS with client in android", "issue_description": "TonyStark commented on 29 Dec 2019\nEverything works just except one website..\nSite has self sign certificate, so when i try to open in firefox i get warning about potential risk.\nxyxyxyx.com uses an invalid security certificate. The certificate is not trusted because it is self-signed. Error code: MOZILLA_PKIX_ERROR_SELF_SIGNED_CERT\nSo i accept and continue, then site open.\nThis is Firefox side, now lets get back on android app which uses same site to send/receive data.\nSince i'm on android 10 i have modified app res/xml network_config to capture ssl request from app to server. Also installed mitm cert as system and user too.\nNow i setup everything and start capturing request by mitmproxy command. And then....\nCertificate verification error for www.kjljjlk.com.mx: (\"hostname 'www.hjkhjk.com.mx' doesn't match either of 'a248.e.jhkhkdsfsf.net', '*.dsfsfds-sdfsdfdsf.net', '*.sdffdsfsdf.net', '*.dsfsdfdsf-sdfsfsf.net', '*.dfsfsdsdf.net'\",)\nUsing mitmdump command.....\n<< Cannot establish TLS with client (sni: xyxyxyxy.com): TlsException(\"SSL handshake error: Error([('SSL routines', 'tls_process_client_hello', 'parse tlsext')])\")\nI also try with burpsuite, but i get unknown ca error\nSo i dont know why dont work this\nMitmproxy: 5.0.0 binary Python: 3.7.5 OpenSSL: OpenSSL 1.1.0j 20 Nov 2018 Platform: Linux-5.3.0-7625-generic-x86_64-with-debian-buster-sid\nI also posted at.\nhttps://stackoverflow.com/questions/59509156/cannot-establish-tls-with-client\nThanks for nice tool :)", "issue_status": "Closed", "issue_reporting_time": "2019-12-29T06:01:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "22": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3759", "issue_id": "#3759", "issue_summary": "How to grab tcp at the same time and forward http to other tools", "issue_description": "ldbfpiaoran commented on 27 Dec 2019\nHow to grab tcp at the same time and forward http to other tools\nI need client-> mitmproxy-> burp-> server\nBut i don't want to lose tcp traffic so what should i do\ntcp_message (flow: tcp.TCPMessage) does not correctly forward http", "issue_status": "Closed", "issue_reporting_time": "2019-12-27T09:22:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "23": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3757", "issue_id": "#3757", "issue_summary": "mitmproxy 5.0 faults on requests, Linux Mint 19.2", "issue_description": "CoolCold commented on 25 Dec 2019 \u2022\nedited\nProblem Description\nRunning mitmproxy in transparent mode - after several seconds (requests) it fails. Error message is:\ncoolcold@coolcold-ThinkPad-X230:~/mitmproxy-5.0.0$ ./mitmproxy -v --mode transparent\nTraceback (most recent call last):\n  File \"mitmproxy/master.py\", line 86, in run_loop\n  File \"site-packages/urwid/main_loop.py\", line 286, in run\n  File \"site-packages/urwid/main_loop.py\", line 384, in _run\n  File \"site-packages/urwid/main_loop.py\", line 1484, in run\n  File \"site-packages/urwid/compat.py\", line 58, in reraise\n  File \"asyncio/events.py\", line 88, in _run\n  File \"site-packages/urwid/main_loop.py\", line 1443, in faux_idle_callback\n  File \"site-packages/urwid/main_loop.py\", line 572, in entering_idle\n  File \"site-packages/urwid/main_loop.py\", line 586, in draw_screen\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\n  File \"site-packages/urwid/container.py\", line 1086, in render\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\n  File \"site-packages/urwid/decoration.py\", line 226, in render\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\n  File \"site-packages/urwid/container.py\", line 1086, in render\n  File \"site-packages/urwid/widget.py\", line 144, in cached_render\n  File \"site-packages/urwid/listbox.py\", line 471, in render\n  File \"site-packages/urwid/listbox.py\", line 356, in calculate_visible\n  File \"mitmproxy/tools/console/flowlist.py\", line 57, in get_focus\n  File \"mitmproxy/tools/console/flowlist.py\", line 12, in __init__\n  File \"mitmproxy/tools/console/flowlist.py\", line 22, in get_text\n  File \"mitmproxy/tools/console/common.py\", line 561, in format_flow\n  File \"mitmproxy/tools/console/common.py\", line 427, in raw_format_table\n  File \"mitmproxy/tools/console/common.py\", line 200, in colorize_host\n  File \"site-packages/publicsuffix2/__init__.py\", line 356, in get_tld\n  File \"site-packages/publicsuffix2/__init__.py\", line 86, in __init__\n  File \"/home/runner/work/mitmproxy/mitmproxy/.tox/cibuild/lib/python3.7/codecs.py\", line 904, in open\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/_MEI07uosx/publicsuffix2/public_suffix_list.dat'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n        https://github.com/mitmproxy/mitmproxy\npath in message\nFileNotFoundError: [Errno 2] No such file or directory: '/tmp/_MEI07uosx/publicsuffix2/public_suffix_list.dat'\nchanges for random part, i.e. can be FileNotFoundError: [Errno 2] No such file or directory: '/tmp/_MEIfgpH44/publicsuffix2/public_suffix_list.dat'\nSteps to reproduce the behavior:\nrun mitmproxy with ./mitmproxy -v --mode transparent\nwait\nfail\nSystem Information\nPaste the output of \"mitmproxy --version\" here.\ncoolcold@coolcold-ThinkPad-X230:~/mitmproxy-5.0.0$ ./mitmproxy --version\nMitmproxy: 5.0.0 binary\nPython:    3.7.5\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\nPlatform:  Linux-4.15.0-54-generic-x86_64-with-debian-buster-sid\nOS\ncoolcold@coolcold-ThinkPad-X230:~/mitmproxy-5.0.0$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: LinuxMint\nDescription:    Linux Mint 19.2 Tina\nRelease:        19.2\nCodename:       tina\nhttps://snapshots.mitmproxy.org/5.0.0/mitmproxy-5.0.0-linux.tar.gz is the source of binaries.\nUPDATE: checked with 4.0.4 - so far for 200 request works fine\n1", "issue_status": "Closed", "issue_reporting_time": "2019-12-25T00:26:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "24": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3756", "issue_id": "#3756", "issue_summary": "about multi-network support", "issue_description": "xLabel commented on 23 Dec 2019\ndoes it support specifying outbound ip ?\nE.g:\nintranet ip -> extranet ip\n10.0.0.2 -> A\n10.0.0.3 -> B\nuserA-> 10.0.0.2-> A-> target internet\nuserB-> 10.0.0.3-> B-> target internet", "issue_status": "Closed", "issue_reporting_time": "2019-12-23T10:04:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "25": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3753", "issue_id": "#3753", "issue_summary": "can't establish TLS with client <....>:TlsException(\"(-1,unexpected EOF)\")", "issue_description": "sytpb commented on 20 Dec 2019\nProblem Description\ncan't establish TLS with client <....>:TlsException(\"(-1,unexpected EOF)\")\nSteps to reproduce the behavior:\nmitmproxy installed in win7\ntwo cell phones connect with mitproxy ,\none is HuaWei , another is XiaoMi , Huawei runs ok , XiaoMi show me error as above . i don't know why ?\nSystem Information\nPaste the output of \"mitmproxy --version\" here.\n4.0.4", "issue_status": "Closed", "issue_reporting_time": "2019-12-20T08:51:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "26": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3751", "issue_id": "#3751", "issue_summary": "The issue with a connection to the remote server by https (sslv3, tls)", "issue_description": "YuriyTigiev commented on 19 Dec 2019\nProblem Description\nThe issue with connection to a remote server which uses sslv3/tls1 by https protocol\n[root@localhost bin]# ./mitmdump -R https://localhost -p 8088\n-R is used for specifying replacements.\nTo use mitmproxy in reverse mode please use --mode reverse:SPEC instead\nProxy server listening at http://*:8088\n127.0.0.1:52072: clientconnect\n127.0.0.1:52072: GET https://172.30.129.98:8446/script\n<< Cannot establish TLS with 172.30.129.98:8446 (sni: 172.30.129.98): TlsException(\"SSL handshake error: Error([('SSL routines', 'ssl3_read_bytes', 'sslv3 alert handshake failure')],)\",)\n127.0.0.1:52072: clientdisconnect\nSteps to reproduce the behavior:\nNo way to reproduce, because the remote server is on the intranet.\nSystem Information\nMitmproxy: 6.0.0.dev (+494, commit 67955fa)\nPython: 3.6.8\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Linux-3.10.0-1062.9.1.el7.x86_64-x86_64-with-centos-7.7.1908-Core", "issue_status": "Closed", "issue_reporting_time": "2019-12-19T13:22:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "27": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3746", "issue_id": "#3746", "issue_summary": "How can I redirect request after response flow", "issue_description": "hucailai commented on 13 Dec 2019\nclass Modify: def response(self, flow): # parse the flow and redirct to another web if ....: redirect.... addons = [ Modify() ]\nHow can I redirect to another web after parse the response flow\nI got the sample of \"redirect_requests.py\" , but it's redirct before response.\nI need redirect after response, how can I do.\n@mhils\n1", "issue_status": "Closed", "issue_reporting_time": "2019-12-13T07:45:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "28": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3744", "issue_id": "#3744", "issue_summary": "Some random keys are not writen to keylog", "issue_description": "zhuzcpzcp commented on 12 Dec 2019\nI start mitmproxy with cmd \" SSLKEYLOGFILE=\"/root/mitmproxy/sslkeylogfile.txt\" mitmproxy --mode upstream:http://192.1\u201c \" . I find some random keys are not writen in sslkeylogfile.txt , and I check it with my wireshark. How did it happen?", "issue_status": "Closed", "issue_reporting_time": "2019-12-12T13:28:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "29": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3743", "issue_id": "#3743", "issue_summary": "How to use mimproxy print encrypt packet infos \uff1f", "issue_description": "zhuzcpzcp commented on 11 Dec 2019\nMimproxy can print Decrypted HTTPS message on screen or to the log, But as far as I known the message do not contain packet infos(like IP PORT or sequence and so on), How can I add these encrypt packet infos to the message and print it on the screen ?", "issue_status": "Closed", "issue_reporting_time": "2019-12-11T03:33:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "30": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3741", "issue_id": "#3741", "issue_summary": "App do not trust my proxy\u2019s certificate", "issue_description": "zhuzcpzcp commented on 8 Dec 2019\nI have download certificate in browser and trust the proxy\u2019s certificate in my android phone.But many apps still cannot connect the internet while others can,and the log of mitmproxy show \u201cthe client do not trust the proxy\u2019s certificate for...\u201d. It seems that many apps check the certificate and find the certificate is sended by a middleman.So my question is how to let these apps to trust the proxy\u2019s certificate.", "issue_status": "Closed", "issue_reporting_time": "2019-12-08T01:15:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "31": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3740", "issue_id": "#3740", "issue_summary": "Netflix MSL", "issue_description": "nzsjb commented on 6 Dec 2019\nI've read on another forum that mitmproxy can decode Netflix MSL messages. If this is true\nDoes mitmdump decode them as well?\nWhat do I need to do to enable this to happen. Does mitmdump need to see the key handshake sequence between the client and the server?", "issue_status": "Closed", "issue_reporting_time": "2019-12-05T23:24:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "32": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3737", "issue_id": "#3737", "issue_summary": "CA certificate issuer name should be identifiable", "issue_description": "selurvedu commented on 5 Dec 2019\nWhen you install mitmproxy for the first time, you need to trust the root CA certificate that is generated on the first run. The issuer name is \"mitmproxy\".\nI see the following problem: a third party (an attacker) could trick a non-suspecting regular user of mitmproxy to trust their certificate. If the person being attacked is not very attentive, they could think that they are trusting their own certificate, not the attacker's.\nDescribe the solution you'd like\nI think that the issuer field could contain some information that would help the user to understand if they are going to trust the correct certificate. That could be the user name and/or machine name, or other human-readable text, or an auto-generated ID that would be displayed in the console when starting mitmproxy.\nAdditional context\nOf course, when we look at this problem from the attacker's point of view, there is a little disadvantage. This change would potentially lead to leaking the attacker's personal information when performing a MITM attack at someone else, but I don't think this would be a problem in practice. In any case (with or without this change), performing an attack without replacing the auto-generated certificate can be successful only when targeting a user that would blindly click \"accept the risk and continue anyway\" without checking the issuer field.", "issue_status": "Closed", "issue_reporting_time": "2019-12-05T12:05:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "33": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3733", "issue_id": "#3733", "issue_summary": "Cannot parse client hello", "issue_description": "jen6 commented on 28 Nov 2019 \u2022\nedited\nHi! I\u2019m trying to capture the traffic in android10 machines with no rooting.\nSo I added the mitmproxy certificate as the user certificate.\nIt pretty works well in the Chrome browser but in https://play.google.com/store/apps/details?id=com.nhn.android.search&hl=ko this browser I got crash\nwith this link https://abr.ge/cctk0\nI think it's async socket timing issue but I'm not sure about it. Is there some one can help to debug it?\n::ffff:127.0.0.1:65290: Cannot parse Client Hello: TlsProtocolException('Cannot read raw Client Hello: TlsProtocolException('Unexpected EOF in TLS handshake: b\\'\\\\x01\\\\x00\\\\x01\\\\xfc\\\\x03\\\\x03\\\\xd6_\\\\x11\\\\x1fo\\\\xd3P\\\\xb1\\\\x86\\\\x18\\\\\\\\\\\\xf0(\\\\xbf\\\\xa2(X\\\\xda#q\\\\xe8\\\\x91\\\\x80\\\\xfd\\\\x0bAv7\\\\xe7\\\\x12\\\\x0b\\\\xbd :\\\\xd5\\\\xfdu\\\\x9bn\\\\xb7py-\\\\xec\\\\xc0\\\\xf0%\\\\x01\\\\xb3S\\\\x0f}\\\\xa1\")w\\\\x06\\\\x17\\\\xe1\\\\x1d\\\\x16,\\\\xb5\\\\xdf*\\\\x00\\\\x1c**\\\\xc0+\\\\xc0/\\\\xc0,\\\\xc00\\\\xcc\\\\xa9\\\\xcc\\\\xa8\\\\xc0\\\\x13\\\\xc0\\\\x14\\\\x00\\\\x9c\\\\x00\\\\x9d\\\\x00/\\\\x005\\\\x00\\\\n\\\\x01\\\\x00\\\\x01\\\\x97\\\\x1a\\\\x1a\\\\x00\\\\x00\\\\xff\\\\x01\\\\x00\\\\x01\\\\x00\\\\x00\\\\x00\\\\x00\\\\x17\\\\x00\\\\x15\\\\x00\\\\x00\\\\x12ablog.airbridge.io\\\\x00\\\\x17\\\\x00\\\\x00\\\\x00#\\\\x00\\\\xb0\\\\x88\\\\xf4F\\\\xba\\\\x9c*\\\\xba\\\\x85\\\\x10\\\\\\'h\\\\x17\\\\xe0y5)\\\\xf8\\\\x843Km\\\\xd5 \\\\x1cX98x\\\\xf66O7y{\\\\xc1\\\\xe1c:E\\\\xebL\\\\x18 L}\\\\x05\\\\\\\\xb8!.\\\\\\\\xba\\\\\\\\xac\\\\\\\\x88]\\\\\\\\x0e7\\\\\\\\x0b\\\\\\\\xc0V\\\\\\\\xcd\\\\\\\\xd5/\\\\\\\\xb79\\\\\\\\x01o\\\\\\\\x0e\\\\\\\\xbc\\\\\\\\xd1\\\\\\\\x8a\\\\\\\\x13\\\\\\\\x82\\\\\\\\x8e\\\\\\\\x84;Z\\\\\\\\xdf\\\\\\\\xaf\\\\\\\\x15\\\\\\\\xfe\\\\\\\\xf92\\\\xe1\\\\x13C\\\\xbb\\\\x03\\\\x88\\\\xe1]%\\\\xe2\\\\r=(\\\\xf4\\\\x0e\\\\xb8\\\\xc3\\\\x08S\\\\xed\\\\xad\\\\xe3\\\\xca\\\\xd9p\\\\xb1\\\\x81\\\\x1c\\\\xfeU\\\\x82C\\\\xdd\\\\x0c\\\\xf8\\\\rZ\\\\xaf\\\\xeeD\\\\xf0\\\\x8eW\\\\x10[\\\\\\\\E9\\\\x95m\\\\\\\\\\\\xa8\\\\xef_\\\\x1a\\\\x1b\\\\xadbU\\\\xaa\\\\n\\\\xb8\\\\x89\\\\x85-\\\\xeav\\\\x1ev\\\\xd6\\\\xc5\\\\x8b\\\\xb91\\\\xcaI8\\\\xfe+\\\\xd3\\\\xdbi\\\\xc6\\\\x83\\\\xa6yN\\\\xb2\\\\xdbg\\\\xa6\\\\xf07\\\\x00\\\\r\\\\x00\\\\x14\\\\x00\\\\x12\\\\x04\\\\x03\\\\x08\\\\x04\\\\x04\\\\x01\\\\x05\\\\x03\\\\x08\\\\x05\\\\x05\\\\x01\\\\x08\\\\x06\\\\x06\\\\x01\\\\x02\\\\x01\\\\x00\\\\x05\\\\x00\\\\x05\\\\x01\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x12\\\\x00\\\\x00\\\\x00\\\\x10\\\\x00\\\\x0e\\\\x00\\\\x0c\\\\x02h2\\\\x08http/1.1\\\\x00\\\\x0b\\\\x00\\\\x02\\\\x01\\\\x00\\\\x00\\\\n\\\\x00\\\\n\\\\x00\\\\x08ZZ\\\\x00\\\\x1d\\\\x00\\\\x17\\\\x00\\\\x18\\\\x00\\\\x1b\\\\x00\\\\x03\\\\x02\\\\x00\\\\x02JJ\\\\x00\\\\x01\\\\x00\\\\x00\\\\x15\\\\x00`\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\\\x00\\'')')\nTraceback (most recent call last):\n  File \"/Users/gunson/.pyenv/versions/3.7.2/envs/cross-tester/lib/python3.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/Users/gunson/.pyenv/versions/3.7.2/envs/cross-tester/lib/python3.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/Users/gunson/.pyenv/versions/3.7.2/envs/cross-tester/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 283, in __call__\n    layer()\n  File \"/Users/gunson/.pyenv/versions/3.7.2/envs/cross-tester/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/Users/gunson/.pyenv/versions/3.7.2/envs/cross-tester/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/Users/gunson/.pyenv/versions/3.7.2/envs/cross-tester/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 260, in _process_flow\n    return self.handle_regular_connect(f)\n  File \"/Users/gunson/.pyenv/versions/3.7.2/envs/cross-tester/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\n    layer()\n  File \"/Users/gunson/.pyenv/versions/3.7.2/envs/cross-tester/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 265, in __call__\n    self._client_hello.alpn_protocols or\nAttributeError: 'NoneType' object has no attribute 'alpn_protocols'\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n127.0.0.1:65290: clientdisconnect\nIt had same crash on 4.0.4 or 5 beta", "issue_status": "Closed", "issue_reporting_time": "2019-11-28T14:17:47Z", "fixed_by": "#3735", "pull_request_summary": "close the client connection if TLS ClientHello parsing fails", "pull_request_description": "Member\nKriechi commented on 30 Nov 2019\nfixes #3733", "pull_request_status": "Merged", "issue_fixed_time": "2019-12-05T12:39:45Z", "files_changed": [["2", "mitmproxy/proxy/protocol/tls.py"]]}, "34": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3731", "issue_id": "#3731", "issue_summary": "Missing command-line tools after pip3 install", "issue_description": "njlr commented on 26 Nov 2019\nProblem Description\nAfter I install mitmproxy using pip, I expected the command-line tools to be available. However, the installation succeeds but I cannot find them.\nI can successfully install the binary packages, but these do not work with the Python plugins I plan to use.\nSteps to reproduce the behavior:\n$ pip3 install mitmproxy\n$ mitmproxy --version\nzsh: command not found: mitmproxy\n$ locate mitmproxy\n-\nSystem Information\n$ mitmproxy --version\nzsh: command not found: mitmproxy\n\n$ python3 --version\nPython 3.6.8\n\n$ pip3 --version\npip 19.3.1 from /usr/local/lib/python3.6/dist-packages/pip (python 3.6)\n\n$  lsb_release -a \nLSB Version: core-9.20170808ubuntu1-noarch:printing-9.20170808ubuntu1-noarch:security-9.20170808ubuntu1-noarch\nDistributor ID: Ubuntu\nDescription: Ubuntu 18.10\nRelease: 18.10\nCodename: cosmic", "issue_status": "Closed", "issue_reporting_time": "2019-11-26T12:07:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "35": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3730", "issue_id": "#3730", "issue_summary": "mitmdump --ignore-hosts option can't ignore domain ocsp.digicert.com", "issue_description": "hkglue commented on 26 Nov 2019\nProblem Description\nA clear and concise description of what the bug is.\nI use command\uff1amitmdump -s addos.py --ignore-hosts '(digicert.com)|(mozilla.)', then excute command :curl --proxy 127.0.0.1:8080 http://ocsp.digicert.com/ssssssss .\nit can ignore mozilla but can't ignore ocsp.digicert.com\nSteps to reproduce the behavior:\n$mitmdump -s addos.py --ignore-hosts '(digicert.com)|(mozilla.)'\nLoading script addos.py\nProxy server listening at http://*:8080\n127.0.0.1:63264: clientconnect\n127.0.0.1:63267: clientconnect\n127.0.0.1:63269: clientconnect\n127.0.0.1:63274: clientconnect}\n127.0.0.1:63274: GET http://ocsp.digicert.com/ssssssss\n<< 200 OK 5b\nSystem Information\nPaste the output of \"mitmproxy --version\" here.\nMitmproxy: 4.0.4\nPython: 3.7.5\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Darwin-17.7.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2019-11-26T09:16:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "36": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3729", "issue_id": "#3729", "issue_summary": "Codesigning mitmdump for notarization (with flag 'runtime') makes it crash", "issue_description": "tomlabaude commented on 26 Nov 2019\nEmbedding mitmdump binary in a macOS app requires it to be signed with command:\ncodesign -s \"Developer ID Application\" mitmdump_ok\n\ncodesign --display -v mitmdump_ok\nExecutable=mitmproxy/release/build/binaries/osx/mitmdump_ok\nIdentifier=mitmdump_ok\nFormat=Mach-O thin (x86_64)\nCodeDirectory v=20200 size=117387 flags=0x0(none) hashes=3664+2 location=embedded\nSignature size=9051\nTimestamp=25 Nov 2019 at 22:52:07\nInfo.plist=not bound\nTeamIdentifier=AATLWWB4MZ\nSealed Resources=none\nInternal requirements count=1 size=172\n\n./mitmdump_ok --version\nMitmproxy: 5.0.0.dev binary\nPython:    3.7.3\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\nPlatform:  Darwin-18.7.0-x86_64-i386-64bit\nApple Notarization of an app now requires to enable Hardened Runtime entitlement and a flag 'runtime' during codesigning:\nhttps://developer.apple.com/documentation/xcode/notarizing_macos_software_before_distribution/resolving_common_notarization_issues\ncodesign -o runtime -s \"Developer ID Application\" mitmdump_err\n\ncodesign --display -v mitmdump_err\nExecutable=mitmproxy/release/build/binaries/osx/mitmdump_err\nIdentifier=mitmdump_err\nFormat=Mach-O thin (x86_64)\nCodeDirectory v=20500 size=117432 flags=0x10000(runtime) hashes=3664+2 location=embedded\nSignature size=9051\nTimestamp=25 Nov 2019 at 22:58:33\nInfo.plist=not bound\nTeamIdentifier=AATLWWB4MZ\nRuntime Version=10.11.0\nSealed Resources=none\nInternal requirements count=1 size=172\n\n./mitmdump_err\n[33886] Error loading Python lib '/var/folders/xd/spqtylb911ncthxhqzlxy7d80000gn/T/_MEI4lZWPI/Python': dlopen: dlopen(/var/folders/xd/spqtylb911ncthxhqzlxy7d80000gn/T/_MEI4lZWPI/Python, 10): no suitable image found.  Did find:\n /var/folders/xd/spqtylb911ncthxhqzlxy7d80000gn/T/_MEI4lZWPI/Python: code signature in (/var/folders/xd/spqtylb911ncthxhqzlxy7d80000gn/T/_MEI4lZWPI/Python) not valid for use in process using Library Validation: mapped file has no cdhash, completely unsigned? Code has to be at least ad-hoc signed.\nI tried unsuccessfully this fork of pyinstaller which signs all embedded binaries\nhttps://github.com/cculianu/pyinstaller/releases/tag/3.4AppleEventsCodeSign\n-> It failed, according to dev \"You can't use the -o runtime option with Pyinstaller because it does evil crap like create a binary from its internal archive and fork() then execute() it. -o runtime disallows this.\"", "issue_status": "Closed", "issue_reporting_time": "2019-11-25T22:07:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "37": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3728", "issue_id": "#3728", "issue_summary": "mitmproxy 5.0.0 crashes on macOS 10.12 (ok on 10.13)", "issue_description": "tomlabaude commented on 26 Nov 2019\nDownloaded https://snapshots.mitmproxy.org/branches/master/mitmproxy-master-osx.tar.gz\nCrashes on macOS 10.12.6 with error\n./mitmdump --version\n[787] Error loading Python lib '/var/folders/sj/f0p38wnd2dz1483n0zlns51w0000gn/T/_MEIJdk2Qd/Python': dlopen: dlopen(/var/folders/sj/f0p38wnd2dz1483n0zlns51w0000gn/T/_MEIJdk2Qd/Python, 10): Symbol not found: _futimens\n  Referenced from: /var/folders/sj/f0p38wnd2dz1483n0zlns51w0000gn/T/_MEIJdk2Qd/Python (which was built for Mac OS X 10.13)\n  Expected in: /usr/lib/libSystem.B.dylib\n in /var/folders/sj/f0p38wnd2dz1483n0zlns51w0000gn/T/_MEIJdk2Qd/Python\n-> It runs without problem on 10.13.6", "issue_status": "Closed", "issue_reporting_time": "2019-11-25T21:42:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "38": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3726", "issue_id": "#3726", "issue_summary": "python3 -m venv venv returns error", "issue_description": "slinkinone commented on 25 Nov 2019\nProblem Description\nI get the error message after this command:\npython3 -m venv venv\nIf be honest, I don't know exactly the reason for that, but maybe the first answer to this can be the reason?\nSteps to reproduce the behavior:\n./dev.sh\n+ echo 'Creating dev environment in ./venv...'\nCreating dev environment in ./venv...\n+ python3 -m venv venv\nError: Command '['/home/user/Documents/github/mitmproxy/venv/bin/python3', '-Im', 'ensurepip', '--upgrade', '--default-pip']' returned non-zero exit status 1.\nSystem Information\nPython 3.7.4\nx86_64 GNU/Linux 5.3.12-1-MANJARO ", "issue_status": "Closed", "issue_reporting_time": "2019-11-25T16:43:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "39": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3722", "issue_id": "#3722", "issue_summary": "Search inside a flow causes mitmproxy to crash", "issue_description": "Contributor\ntypoon commented on 22 Nov 2019\nProblem Description\nIf you try to use the search feature inside a flow (by pressing '/') and type something to make a search, mitmproxy crashes.\nSteps to reproduce the behavior:\nOpen mitmproxy and make a few requests\nSelct one of the flows in the main screen and open it (by pressing Enter)\nIn the flow, press / and type something and then press Enter\nNotice that mitmproxy crashes\nSystem Information\n$ mitmproxy --version\nMitmproxy: 5.0.0.dev (+413, commit 2f30981)\nPython: 3.7.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-5.0.0-31-generic-x86_64-with-Ubuntu-19.04-disco", "issue_status": "Closed", "issue_reporting_time": "2019-11-22T00:58:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "40": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3719", "issue_id": "#3719", "issue_summary": "\ud83d\ude80 Ship mitmproxy 5.0", "issue_description": "Member\nmhils commented on 20 Nov 2019 \u2022\nedited\nA new release is long overdue, so let's cut one!\nWrite the CHANGELOG. One basically needs to go through the commit list and write out all new features from a user perspective. Do we have any volunteers for that? https://docs.google.com/document/d/1fqEXRSD_YNWNLLNK5ir689wH6bBgPEsxujx0EFvt2cY/\nFigure out what's the current state of the session addon? Can we ship this or defer? @cortesi? @madt1m?\nIdeally get through the issues linked in https://github.com/mitmproxy/mitmproxy/milestone/20. No problem if we don't, we definitely do want to increase release frequency.\nCompile mitmweb from source and push the updated minified JS.\nFinally, cut the release. @mhils will take care of this to check if the new CI handles it well.\n2", "issue_status": "Closed", "issue_reporting_time": "2019-11-20T18:04:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "41": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3712", "issue_id": "#3712", "issue_summary": "Docker: Move away from Alpine", "issue_description": "Member\nmhils commented on 17 Nov 2019\nOn my quest to shorten CI times, building Docker images has become a major bottleneck. A major issue here is that we use Alpine Linux, which means we can't use precompiled manylinux wheels (Alpine uses musl...).\n@mitmproxy/devs: any opinions on moving to a minimal Ubuntu image? I feel that should be just fine.", "issue_status": "Closed", "issue_reporting_time": "2019-11-17T02:03:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "42": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3706", "issue_id": "#3706", "issue_summary": "/usr/local/bin/mitmproxy: No such script", "issue_description": "nadermx commented on 16 Nov 2019\nI'm trying to have mitmproxy do the tls_passthrough but I get the /usr/local/bin/mitmproxy: No such script\nI'm running the command sudo mitmproxy --set stream_large_bodies=1 --set block_global=false --showhost -s tls_passthrough.py\nSystem Information\nsudo mitmproxy --version\nMitmproxy: 4.0.4\nPython: 3.6.8\nOpenSSL: OpenSSL 1.1.1 11 Sep 2018\nPlatform: Linux-4.15.0-58-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Closed", "issue_reporting_time": "2019-11-15T20:38:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "43": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3704", "issue_id": "#3704", "issue_summary": "New Table UI has no replay indicator", "issue_description": "Member\nmhils commented on 15 Nov 2019\nProblem Description\nThe new table UI doesn't show that a flow has been replayed:\nThe two-line UI still has an indicator - [r] in my case as my terminal is detected to not support UTF8:\nSteps to reproduce the behavior:\nAdd a flow, e.g. by pressing n enter\nPress r to replay.\nSystem Information\nMitmproxy: 5.0.0.dev (+356, commit a5412ab)\nPython: 3.8.0\nOpenSSL: OpenSSL 1.1.1 11 Sep 2018\nPlatform: Linux-4.4.0-18362-Microsoft-x86_64-with-glibc2.27", "issue_status": "Closed", "issue_reporting_time": "2019-11-15T15:27:28Z", "fixed_by": "#3717", "pull_request_summary": "Added Replay to new table UI", "pull_request_description": "Contributor\nJessonsotoventura commented on 20 Nov 2019\nFixes #3704\nAdded a column for mark and replay on the new table ui", "pull_request_status": "Merged", "issue_fixed_time": "2019-11-20T16:28:28Z", "files_changed": [["13", "mitmproxy/tools/console/common.py"]]}, "44": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3701", "issue_id": "#3701", "issue_summary": "Export Plaintext HTTP Response", "issue_description": "Contributor\nmckeimic commented on 15 Nov 2019\nA common irritation for my team when using mitmproxy is the inability to export the full HTTP response. While the request can be clipped or saved to a file with the :export.clip raw @focus or :export.file raw @focus /tmp/request.txt, there is no analogous method to save the full text of the response.\nI suggest a modification to the export command which supports exporting both the raw request, and the raw response for the flow. Specifically, I suggest splitting the raw export type into raw_request and raw_response.\nI've created a custom response export script as a stop-gap measure for myself; however I believe the ability to export the full, plaintext request/response pairs for documentation is a common requirement for penetration testers. As such, there may be a significant enough need to perform this action that a modification to mitmproxy itself is worthwhile.\nUnlike the other export options curl and httpie, which are often used to modify and resubmit the original request, my team and I use the raw option to produce documentation of the flow for our reports. For this purpose, the response is as important as the request. A clean way to export the plaintext HTTP of the response is an important usability feature for us.", "issue_status": "Closed", "issue_reporting_time": "2019-11-15T07:28:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "45": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3696", "issue_id": "#3696", "issue_summary": "Transparent mode failure: FileNotFoundError(2, \"No such file or directory: 'sudo'\")", "issue_description": "maysammortazi commented on 14 Nov 2019 \u2022\nedited\nmitmweb --mode transparent\nclientconnect\nTransparent mode failure: FileNotFoundError(2, \"No such file or directory: 'sudo'\")\nclientdisconnect\nSystem information\nmitmproxy version 4.0.4\nOS: FreeBSD 11.1\nPython 3.6.9", "issue_status": "Closed", "issue_reporting_time": "2019-11-14T08:39:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "46": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3695", "issue_id": "#3695", "issue_summary": "Add IPv6-only mode", "issue_description": "Contributor\nsethb157 commented on 14 Nov 2019\nIs your feature request related to a problem? Please describe.\nWhen starting the proxy on a machine that has IPv4 disabled, the proxy fails to start. Taking a look at the code, it seems that issue occurs when the socket option IPV6_V6ONLY is set to 0 and the system does not allow IPv4-enabled sockets.\nDescribe the solution you'd like\nAdding an ipv6_only option was pretty quick & easy, and I have a potential patch, but I wanted to see if this is a reasonable thing to do?\nDescribe alternatives you've considered\nIt could also make sense to--instead of adding an ipv6_only option--add an option that gives the user full control to select ipv6_only, ipv4_only, or both ipv4 + ipv6, where the proxy does not attempt to fall back on another protocol.", "issue_status": "Closed", "issue_reporting_time": "2019-11-13T19:28:02Z", "fixed_by": "#3714", "pull_request_summary": "Add support for IPv6-only environments", "pull_request_description": "Contributor\nsethb157 commented on 19 Nov 2019\nPreviously, the proxy would attempt to bind to an IPv6 + IPv4 enabled socket.\nOn failure, it would try to bind to an IPv4 only socket. If that failed, the\nproxy would fail to start. This update makes it so that the proxy also tries\nto bind to an IPv6-only socket, which is necessary in environments where IPv4\nis disabled.\nIn short, the proxy will try binding in the following order, only moving\nto the next step when binding fails:\nIPv6 + IPv4 -> IPv4 only -> IPv6 only -> proxy fails to start.\nCloses #3695", "pull_request_status": "Merged", "issue_fixed_time": "2019-11-19T17:32:30Z", "files_changed": [["18", "mitmproxy/net/tcp.py"]]}, "47": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3694", "issue_id": "#3694", "issue_summary": "Command view.focus.[next|prev] causes mitmproxy to crash", "issue_description": "Contributor\ntypoon commented on 13 Nov 2019\nProblem Description\nmitmproxy crashes if one tries to run the command view.focus.next or view.focus.prev when there are no flows in it yet\nSteps to reproduce the behavior:\nOpen mitmproxy making sure there are no clients using it\nIn the main screen press : and then enter the command view.focus.next\nPress Return and notice that the application crashes\nSystem Information\n$ mitmproxy --version\nMitmproxy: 4.0.4\nPython: 3.7.3\nOpenSSL: OpenSSL 1.1.1b 26 Feb 2019\nPlatform: Linux-5.0.0-31-generic-x86_64-with-Ubuntu-19.04-disco", "issue_status": "Closed", "issue_reporting_time": "2019-11-13T16:34:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "48": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3689", "issue_id": "#3689", "issue_summary": "Filter regex does not work like Python", "issue_description": "Contributor\ntypoon commented on 9 Nov 2019\nProblem Description\nHello. I am trying to filter the flows in a case insensitive manner. The documentation (https://docs.mitmproxy.org/stable/concepts-filters/) says that the accepted regex is just like Python:\nRegexes are Python-style\nIt doesn't seem to be the case.\nIf I try to enter the filter ~bq (?i)user, I get the error Invalid interception filter: ~bq (?i)user.\nThe expected result was that I would see any flows that contain the word user in the request in a case insensitive way.\nSteps to reproduce the behavior:\nMake a couple of requests to add a few flows to mitmproxy\nPress f and type the filter ~bq (?i)user\nNotice the error message\nSystem Information\n$ mitmproxy --version\nMitmproxy: 4.0.4\nPython: 3.7.3\nOpenSSL: OpenSSL 1.1.1b 26 Feb 2019\nPlatform: Linux-5.0.0-31-generic-x86_64-with-Ubuntu-19.04-disco", "issue_status": "Closed", "issue_reporting_time": "2019-11-09T02:59:52Z", "fixed_by": "#3693", "pull_request_summary": "Improve Command Bar UX", "pull_request_description": "Contributor\ntypoon commented on 13 Nov 2019\nThese changes fix the issues with the command bar where using backslash and quotes was not properly working.\nWith that fix, regexes can also now be properly written and work just fine.\ncloses #3259\ncloses #3689", "pull_request_status": "Merged", "issue_fixed_time": "2019-11-21T13:13:09Z", "files_changed": [["4", "examples/complex/remote_debug.py"], ["49", "mitmproxy/addons/core.py"], ["20", "mitmproxy/addons/export.py"], ["58", "mitmproxy/addons/view.py"]]}, "49": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3687", "issue_id": "#3687", "issue_summary": "Persistent cache based on http headers", "issue_description": "thenewguy commented on 7 Nov 2019\nIt would be nice to be able to configure persistent cache based on response http headers. Perhaps specifying a path on disk. Apt packages are of particular interest =)", "issue_status": "Closed", "issue_reporting_time": "2019-11-07T03:43:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "50": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3685", "issue_id": "#3685", "issue_summary": "After upgrading mitmproxy it stopped working", "issue_description": "dutzi commented on 3 Nov 2019 \u2022\nedited\nI upgraded to the latest version (4.0.4_3, brew upgrade mitmproxy)\nNow, when running mitmproxy or mitmdump I get the following error:\nAbort trap: 6\nAnd a few seconds later a message box opens saying Python has crashed.", "issue_status": "Closed", "issue_reporting_time": "2019-11-03T15:37:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "51": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3684", "issue_id": "#3684", "issue_summary": "(Almost) can't access the internet with the android proxy", "issue_description": "ncRakl commented on 2 Nov 2019\nSteps to reproduce the problem:\nInstall mitmproxy with pip on Ubuntu\nConfigure the proxy on the Android device\nTry to access to the internet\nAny other comments? What have you tried so far?\nI've tested it only on my OnePlus6.\nThe thing is that my devices says \"connected to the wifi but no internet connection\".\nMy computer has mitmproxy launched and is connected to the same wifi\nThe CA is well installed on my phone and computer\nMy android device has a proxy setup with the local IP adress of my computer and 8080 port\nmitmproxy reads what my phone is trying to do, so it writes HTTP and HTTPS requests\nI can't access most of things, such as Google Play or just connecting to a game\nI can navigate on google without any problem, only few sites won't let me in\nI don't really know why it does that, I looked if someone else met the same problem, I only came up with few SSL tips that didn't work well for me.\nIf you have any help to bring me, feel free !\nSystem information\nMy mitmproxy version is 0.18.2 and I'm using python 2.7", "issue_status": "Closed", "issue_reporting_time": "2019-11-01T23:28:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "52": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3683", "issue_id": "#3683", "issue_summary": "How to filter the display request via device ip", "issue_description": "ThinkerT commented on 1 Nov 2019\nHow to filter requests through the device's ip when using mitmweb\uff1f\nMitmproxy: 5.0.0.dev (+328, commit 65edbda)\nPython:    3.7.2\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\nPlatform:  Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2019-11-01T08:09:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "53": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3682", "issue_id": "#3682", "issue_summary": "Root certificate doesn't work on Catalina", "issue_description": "dutzi commented on 30 Oct 2019\nSteps to reproduce the problem:\nRun mitmproxy\nVisit mitm.it\nDownload the certificate for macOs\nAdd it (tried both Login and System keychains)\nBut when visiting a secured website the site doesn't load.\nThis started happening after I upgraded to macOs Catalina", "issue_status": "Closed", "issue_reporting_time": "2019-10-30T16:16:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "54": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3681", "issue_id": "#3681", "issue_summary": "Is there any configuration description for the transparent mode on windows?", "issue_description": "xiaojinxiansheng commented on 29 Oct 2019\nUnable to capture the phone's package using mitmdump.exe or python version of mitmdump\nLocal pc also cannot access the Internet.(http is ok, but https not)\nBut it works on other machines in the same LAN", "issue_status": "Closed", "issue_reporting_time": "2019-10-29T12:07:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "55": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3678", "issue_id": "#3678", "issue_summary": "pf.conf:1: syntax error", "issue_description": "ymongo commented on 26 Oct 2019\nSteps to reproduce the problem:\nNewbie on Mac, I'm trying to use mtmproxy in transparent mode. I have an error when trying to change pf rules, it can't read my file. (not mitmproxy bug, but hope someone can help!)\nFollow step 2 of https://docs.mitmproxy.org/stable/howto-transparent/ on a macOS High Sierra: create a file named pf.conf, paste in it the rdr command, I did in the TextEditor, saved without extension and encoded UTF8.\nFrom terminal run sudo pfctl -f pf.conf: I receive this error:\npfctl: Use of -f option, could result in flushing of rules\npresent in the main ruleset added by the system at startup.\nSee /etc/pf.conf for further details.\nNo ALTQ support in kernel\nALTQ related functions disabled\npf.conf:1: syntax error\nAny other comments? What have you tried so far?\nSystem information\nMacBook Pro (13 pouces, mi-2010)\nHigh Sierra 10.13.4\nMitmproxy\nMitmproxy: 4.0.4\nPython: 3.7.4\nOpenSSL: OpenSSL 1.1.1d 10 Sep 2019\nPlatform: Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2019-10-26T16:17:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "56": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3677", "issue_id": "#3677", "issue_summary": "Download page doesn't work on chrome", "issue_description": "UmbreonFR4 commented on 26 Oct 2019\nSteps to reproduce the problem:\ngoto https://mitmproxy.org/downloads/ on chrome and wait for it to load (it will never load)\nAny other comments? What have you tried so far?\nIve went onto firefox and it has worked instantly", "issue_status": "Closed", "issue_reporting_time": "2019-10-25T19:49:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "57": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3674", "issue_id": "#3674", "issue_summary": "Multiple mitmproxy/mitmdump instances can run on the same port", "issue_description": "jpstotz commented on 23 Oct 2019\nCurrently mitmproxy opens the proxy port always using the option allow_reuse_address = True without any exception.\nmitmproxy/mitmproxy/proxy/server.py\nLines 35 to 36 in e74e97b\n class ProxyServer(tcp.TCPServer): \n     allow_reuse_address = True \nIn my understanding this option should only be set in cases where load distribution by using multiple processes is used. Or is there any other mitmproxy related use case I don't see that requires multiple mitmproxy instances listening on the same proxy port for incoming requests?\nOn the other hand the current situation with allow_reuse_address = True can lead nondeterministic behavior in situations where multiple mproxy/mitmdump instances are using the same proxy port (or even other third party programs).\nTherefore I suggestion is to change this and set allow_reuse_address = False or at least provide an command-line option to set the default reuse behavior for the proxy port.", "issue_status": "Closed", "issue_reporting_time": "2019-10-23T14:49:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "58": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3673", "issue_id": "#3673", "issue_summary": "'MultiDictView' object has no attribute 'to_dict'", "issue_description": "chuky3000x commented on 23 Oct 2019 \u2022\nedited\nI use mitmproxy to capture cookies from my network traffic. I start mitmproxy from python with an addon.\nFor example my addon looks like this:\nclass AddonProxy():\n    def __init__(self, cookieclass):\n        self.cookieclass = cookieclass\n\n    def response(self, flow):\n\n        cookies = flow.response.cookies\n\n        if cookies:\n            self.cookieclass.test_cookies_response.append(cookies)\n\n    def request(self, flow):\n\n        cookies = flow.request.cookies\n\n        if cookies:\n            self.cookieclass.test_cookies_request.append(cookies)\nFor every request or response i store the cookies in a list. After i visit all websites with selenium, i would like to work with the cookie information. The mitmproxy doc tells me that the MultiDictView class have a function that gives me the MultiDictView as a python dict. But it not work.\nMy code looks like:\nfor ob in self.test_cookies_response:\n    pprint.pprint(ob.to_dict())\nI get an error:\nAttributeError: 'MultiDictView' object has no attribute 'to_dict'\nWhy?\nI use Python 3.7.3 and Mitmproxy: 4.0.4 under Debian 10.1", "issue_status": "Closed", "issue_reporting_time": "2019-10-23T12:19:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "59": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3672", "issue_id": "#3672", "issue_summary": "Slow and Crashing on Raspberry Pi", "issue_description": "ekohilas commented on 17 Oct 2019\nHi all,\nI'm having problems running mitmproxy successfully on my raspberry pi.\nI've set it up this way such that I can find a certain requests which can appear randomly, however I've found that if I keep mitm continuously proxing, the requests seem to become slower and slower, until it just dies.\nJust recently after getting the request I was searching for, by the time I got to the web client to view the logs, it had crashed and everything disappeared.\nIs there something I'm overlooking?\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.3\nOpenSSL: OpenSSL 1.1.1c 28 May 2019\nPlatform: Linux-4.19.75-v7+-armv7l-with-debian-10.1", "issue_status": "Closed", "issue_reporting_time": "2019-10-17T02:40:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "60": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3668", "issue_id": "#3668", "issue_summary": "Addon script loaded successfully but not working", "issue_description": "supermariogo commented on 13 Oct 2019 \u2022\nedited\nHi,\nI run into a very weird issue on Ubuntu MATE installed on Pi3. mitmproxy can load addon script successfully, but only init can be executed and no other response after that when http requests come.\nFor the same script, I can see log output on my mac.\nSteps to reproduce the problem:\nUbuntu MATE on Pi3 and install mitimproxy by pip3 install\nCreate the sample add-on script:\nfrom mitmproxy import ctx\n\n\nclass Counter:\n    def __init__(self):\n        self.num = 0\n         ctx.log.info(\"init\")\n\n    def request(self, flow):\n        self.num = self.num + 1\n        ctx.log.info(\"We've seen %d flows\" % self.num)\n\n\naddons = [\n    Counter()\n]\nmitmdump -s aboveScript.sh\nAny other comments? What have you tried so far?\nSearched web, but no one mentioned this.\nSystem information\nUbuntu MATE installed on Pi3\nmitmproxy --version\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.8\nPlatform: Linux-4.15.0-1032-raspi2-armv7l-with-Ubuntu-18.04-bionic\nSSL version: OpenSSL 1.1.1 11 Sep 2018\nLinux distro: Ubuntu 18.04 bionic", "issue_status": "Closed", "issue_reporting_time": "2019-10-13T17:58:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "61": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3666", "issue_id": "#3666", "issue_summary": "mitmproxy hangs on test", "issue_description": "piescotch commented on 10 Oct 2019\nSteps to reproduce the problem:\npytest --full-trace ./test/mitmproxy/proxy/test_server.py\nHangs forever\nAny other comments? What have you tried so far?\nHere is the trace on my system\n============================ test session starts ==============================\nplatform linux -- Python 3.7.4, pytest-5.2.1, py-1.8.0, pluggy-0.13.0\nhypothesis profile 'default' -> database=DirectoryBasedExampleDatabase('/mnt/HD1/aur/cache/mitmproxy-git/src/mitmproxy/test/mitmproxy/proxy/.hypothesis/examples')\nrootdir: /mnt/HD1/aur/cache/mitmproxy-git/src/mitmproxy, inifile: setup.cfg\nplugins: asyncio-0.10.0, hypothesis-4.36.2\ncollected 109 items\n\ntest_server.py ...................\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! KeyboardInterrupt !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\n\nconfig = <_pytest.config.Config object at 0x7f6a91a67a50>\ndoit = <function _main at 0x7f6a91b39b90>\n\n    def wrap_session(config, doit):\n        \"\"\"Skeleton command line program\"\"\"\n        session = Session(config)\n        session.exitstatus = ExitCode.OK\n        initstate = 0\n        try:\n            try:\n                config._do_configure()\n                initstate = 1\n                config.hook.pytest_sessionstart(session=session)\n                initstate = 2\n>               session.exitstatus = doit(config, session) or 0\n\n/usr/lib/python3.7/site-packages/_pytest/main.py:191: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nconfig = <_pytest.config.Config object at 0x7f6a91a67a50>\nsession = <Session mitmproxy exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=109>\n\n    def _main(config, session):\n        \"\"\" default command line protocol for initialization, session,\n        running tests and reporting. \"\"\"\n        config.hook.pytest_collection(session=session)\n>       config.hook.pytest_runtestloop(session=session)\n\n/usr/lib/python3.7/site-packages/_pytest/main.py:235: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_HookCaller 'pytest_runtestloop'>, args = ()\nkwargs = {'session': <Session mitmproxy exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=109>}\nnotincall = set()\n\n    def __call__(self, *args, **kwargs):\n        if args:\n            raise TypeError(\"hook calling supports only keyword arguments\")\n        assert not self.is_historic()\n        if self.spec and self.spec.argnames:\n            notincall = (\n                set(self.spec.argnames) - set([\"__multicall__\"]) - set(kwargs.keys())\n            )\n            if notincall:\n                warnings.warn(\n                    \"Argument(s) {} which are declared in the hookspec \"\n                    \"can not be found in this hook call\".format(tuple(notincall)),\n                    stacklevel=2,\n                )\n>       return self._hookexec(self, self.get_hookimpls(), kwargs)\n\n/usr/lib/python3.7/site-packages/pluggy/hooks.py:286: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.config.PytestPluginManager object at 0x7f6a92f80c10>\nhook = <_HookCaller 'pytest_runtestloop'>\nmethods = [<HookImpl plugin_name='main', plugin=<module '_pytest.main' from '/usr/lib/python3.7/site-packages/_pytest/main.py'>>...plugin.py'>>, <HookImpl plugin_name='logging-plugin', plugin=<_pytest.logging.LoggingPlugin object at 0x7f6a91d16d10>>]\nkwargs = {'session': <Session mitmproxy exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=109>}\n\n    def _hookexec(self, hook, methods, kwargs):\n        # called from all hookcaller instances.\n        # enable_tracing will set its own wrapping function at self._inner_hookexec\n>       return self._inner_hookexec(hook, methods, kwargs)\n\n/usr/lib/python3.7/site-packages/pluggy/manager.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhook = <_HookCaller 'pytest_runtestloop'>\nmethods = [<HookImpl plugin_name='main', plugin=<module '_pytest.main' from '/usr/lib/python3.7/site-packages/_pytest/main.py'>>...plugin.py'>>, <HookImpl plugin_name='logging-plugin', plugin=<_pytest.logging.LoggingPlugin object at 0x7f6a91d16d10>>]\nkwargs = {'session': <Session mitmproxy exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=109>}\n\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\n        methods,\n        kwargs,\n>       firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n    )\n\n/usr/lib/python3.7/site-packages/pluggy/manager.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nsession = <Session mitmproxy exitstatus=<ExitCode.OK: 0> testsfailed=0 testscollected=109>\n\n    def pytest_runtestloop(session):\n        if session.testsfailed and not session.config.option.continue_on_collection_errors:\n            raise session.Interrupted(\"%d errors during collection\" % session.testsfailed)\n    \n        if session.config.option.collectonly:\n            return True\n    \n        for i, item in enumerate(session.items):\n            nextitem = session.items[i + 1] if i + 1 < len(session.items) else None\n>           item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\n\n/usr/lib/python3.7/site-packages/_pytest/main.py:256: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_HookCaller 'pytest_runtest_protocol'>, args = ()\nkwargs = {'item': <Function test_tcp>, 'nextitem': <Function test_clientcert_file>}\nnotincall = set()\n\n    def __call__(self, *args, **kwargs):\n        if args:\n            raise TypeError(\"hook calling supports only keyword arguments\")\n        assert not self.is_historic()\n        if self.spec and self.spec.argnames:\n            notincall = (\n                set(self.spec.argnames) - set([\"__multicall__\"]) - set(kwargs.keys())\n            )\n            if notincall:\n                warnings.warn(\n                    \"Argument(s) {} which are declared in the hookspec \"\n                    \"can not be found in this hook call\".format(tuple(notincall)),\n                    stacklevel=2,\n                )\n>       return self._hookexec(self, self.get_hookimpls(), kwargs)\n\n/usr/lib/python3.7/site-packages/pluggy/hooks.py:286: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.config.PytestPluginManager object at 0x7f6a92f80c10>\nhook = <_HookCaller 'pytest_runtest_protocol'>\nmethods = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.7/site-packages/_pytest/runner...lugin_name='warnings', plugin=<module '_pytest.warnings' from '/usr/lib/python3.7/site-packages/_pytest/warnings.py'>>]\nkwargs = {'item': <Function test_tcp>, 'nextitem': <Function test_clientcert_file>}\n\n    def _hookexec(self, hook, methods, kwargs):\n        # called from all hookcaller instances.\n        # enable_tracing will set its own wrapping function at self._inner_hookexec\n>       return self._inner_hookexec(hook, methods, kwargs)\n\n/usr/lib/python3.7/site-packages/pluggy/manager.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhook = <_HookCaller 'pytest_runtest_protocol'>\nmethods = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.7/site-packages/_pytest/runner...lugin_name='warnings', plugin=<module '_pytest.warnings' from '/usr/lib/python3.7/site-packages/_pytest/warnings.py'>>]\nkwargs = {'item': <Function test_tcp>, 'nextitem': <Function test_clientcert_file>}\n\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\n        methods,\n        kwargs,\n>       firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n    )\n\n/usr/lib/python3.7/site-packages/pluggy/manager.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nitem = <Function test_tcp>, nextitem = <Function test_clientcert_file>\n\n    def pytest_runtest_protocol(item, nextitem):\n        item.ihook.pytest_runtest_logstart(nodeid=item.nodeid, location=item.location)\n>       runtestprotocol(item, nextitem=nextitem)\n\n/usr/lib/python3.7/site-packages/_pytest/runner.py:80: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nitem = <Function test_tcp>, log = True\nnextitem = <Function test_clientcert_file>\n\n    def runtestprotocol(item, log=True, nextitem=None):\n        hasrequest = hasattr(item, \"_request\")\n        if hasrequest and not item._request:\n            item._initrequest()\n        rep = call_and_report(item, \"setup\", log)\n        reports = [rep]\n        if rep.passed:\n            if item.config.getoption(\"setupshow\", False):\n                show_test_item(item)\n            if not item.config.getoption(\"setuponly\", False):\n>               reports.append(call_and_report(item, \"call\", log))\n\n/usr/lib/python3.7/site-packages/_pytest/runner.py:95: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nitem = <Function test_tcp>, when = 'call', log = True, kwds = {}\n\n    def call_and_report(item, when, log=True, **kwds):\n>       call = call_runtest_hook(item, when, **kwds)\n\n/usr/lib/python3.7/site-packages/_pytest/runner.py:176: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nitem = <Function test_tcp>, when = 'call', kwds = {}\nhookname = 'pytest_runtest_call'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    def call_runtest_hook(item, when, **kwds):\n        hookname = \"pytest_runtest_\" + when\n        ihook = getattr(item.ihook, hookname)\n        reraise = (Exit,)  # type: Tuple[Type[BaseException], ...]\n        if not item.config.getoption(\"usepdb\", False):\n            reraise += (KeyboardInterrupt,)\n        return CallInfo.from_call(\n>           lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n        )\n\n/usr/lib/python3.7/site-packages/_pytest/runner.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncls = <class '_pytest.runner.CallInfo'>\nfunc = <function call_runtest_hook.<locals>.<lambda> at 0x7f6a8c08d5f0>\nwhen = 'call'\nreraise = (<class '_pytest.outcomes.Exit'>, <class 'KeyboardInterrupt'>)\n\n    @classmethod\n    def from_call(cls, func, when, reraise=None):\n        #: context of invocation: one of \"setup\", \"call\",\n        #: \"teardown\", \"memocollect\"\n        start = time()\n        excinfo = None\n        try:\n>           result = func()\n\n/usr/lib/python3.7/site-packages/_pytest/runner.py:229: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\n>       lambda: ihook(item=item, **kwds), when=when, reraise=reraise\n    )\n\n/usr/lib/python3.7/site-packages/_pytest/runner.py:201: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_HookCaller 'pytest_runtest_call'>, args = ()\nkwargs = {'item': <Function test_tcp>}, notincall = set()\n\n    def __call__(self, *args, **kwargs):\n        if args:\n            raise TypeError(\"hook calling supports only keyword arguments\")\n        assert not self.is_historic()\n        if self.spec and self.spec.argnames:\n            notincall = (\n                set(self.spec.argnames) - set([\"__multicall__\"]) - set(kwargs.keys())\n            )\n            if notincall:\n                warnings.warn(\n                    \"Argument(s) {} which are declared in the hookspec \"\n                    \"can not be found in this hook call\".format(tuple(notincall)),\n                    stacklevel=2,\n                )\n>       return self._hookexec(self, self.get_hookimpls(), kwargs)\n\n/usr/lib/python3.7/site-packages/pluggy/hooks.py:286: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.config.PytestPluginManager object at 0x7f6a92f80c10>\nhook = <_HookCaller 'pytest_runtest_call'>\nmethods = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.7/site-packages/_pytest/runner..._item=None>>, <HookImpl plugin_name='logging-plugin', plugin=<_pytest.logging.LoggingPlugin object at 0x7f6a91d16d10>>]\nkwargs = {'item': <Function test_tcp>}\n\n    def _hookexec(self, hook, methods, kwargs):\n        # called from all hookcaller instances.\n        # enable_tracing will set its own wrapping function at self._inner_hookexec\n>       return self._inner_hookexec(hook, methods, kwargs)\n\n/usr/lib/python3.7/site-packages/pluggy/manager.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhook = <_HookCaller 'pytest_runtest_call'>\nmethods = [<HookImpl plugin_name='runner', plugin=<module '_pytest.runner' from '/usr/lib/python3.7/site-packages/_pytest/runner..._item=None>>, <HookImpl plugin_name='logging-plugin', plugin=<_pytest.logging.LoggingPlugin object at 0x7f6a91d16d10>>]\nkwargs = {'item': <Function test_tcp>}\n\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\n        methods,\n        kwargs,\n>       firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n    )\n\n/usr/lib/python3.7/site-packages/pluggy/manager.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nitem = <Function test_tcp>\n\n    def pytest_runtest_call(item):\n        _update_current_test_var(item, \"call\")\n        sys.last_type, sys.last_value, sys.last_traceback = (None, None, None)\n        try:\n>           item.runtest()\n\n/usr/lib/python3.7/site-packages/_pytest/runner.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <Function test_tcp>\n\n    def runtest(self):\n        \"\"\" execute the underlying test function. \"\"\"\n>       self.ihook.pytest_pyfunc_call(pyfuncitem=self)\n\n/usr/lib/python3.7/site-packages/_pytest/python.py:1423: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_HookCaller 'pytest_pyfunc_call'>, args = ()\nkwargs = {'pyfuncitem': <Function test_tcp>}, notincall = set()\n\n    def __call__(self, *args, **kwargs):\n        if args:\n            raise TypeError(\"hook calling supports only keyword arguments\")\n        assert not self.is_historic()\n        if self.spec and self.spec.argnames:\n            notincall = (\n                set(self.spec.argnames) - set([\"__multicall__\"]) - set(kwargs.keys())\n            )\n            if notincall:\n                warnings.warn(\n                    \"Argument(s) {} which are declared in the hookspec \"\n                    \"can not be found in this hook call\".format(tuple(notincall)),\n                    stacklevel=2,\n                )\n>       return self._hookexec(self, self.get_hookimpls(), kwargs)\n\n/usr/lib/python3.7/site-packages/pluggy/hooks.py:286: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <_pytest.config.PytestPluginManager object at 0x7f6a92f80c10>\nhook = <_HookCaller 'pytest_pyfunc_call'>\nmethods = [<HookImpl plugin_name='python', plugin=<module '_pytest.python' from '/usr/lib/python3.7/site-packages/_pytest/python...lugin_name='skipping', plugin=<module '_pytest.skipping' from '/usr/lib/python3.7/site-packages/_pytest/skipping.py'>>]\nkwargs = {'pyfuncitem': <Function test_tcp>}\n\n    def _hookexec(self, hook, methods, kwargs):\n        # called from all hookcaller instances.\n        # enable_tracing will set its own wrapping function at self._inner_hookexec\n>       return self._inner_hookexec(hook, methods, kwargs)\n\n/usr/lib/python3.7/site-packages/pluggy/manager.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nhook = <_HookCaller 'pytest_pyfunc_call'>\nmethods = [<HookImpl plugin_name='python', plugin=<module '_pytest.python' from '/usr/lib/python3.7/site-packages/_pytest/python...lugin_name='skipping', plugin=<module '_pytest.skipping' from '/usr/lib/python3.7/site-packages/_pytest/skipping.py'>>]\nkwargs = {'pyfuncitem': <Function test_tcp>}\n\n    self._inner_hookexec = lambda hook, methods, kwargs: hook.multicall(\n        methods,\n        kwargs,\n>       firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n    )\n\n/usr/lib/python3.7/site-packages/pluggy/manager.py:86: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\npyfuncitem = <Function test_tcp>\n\n    @hookimpl(trylast=True)\n    def pytest_pyfunc_call(pyfuncitem):\n        def async_warn():\n            msg = \"async def functions are not natively supported and have been skipped.\\n\"\n            msg += \"You need to install a suitable plugin for your async framework, for example:\\n\"\n            msg += \"  - pytest-asyncio\\n\"\n            msg += \"  - pytest-trio\\n\"\n            msg += \"  - pytest-tornasync\"\n            warnings.warn(PytestUnhandledCoroutineWarning(msg.format(pyfuncitem.nodeid)))\n            skip(msg=\"async def function and no async plugin installed (see warnings)\")\n    \n        testfunction = pyfuncitem.obj\n        if iscoroutinefunction(testfunction) or (\n            sys.version_info >= (3, 6) and inspect.isasyncgenfunction(testfunction)\n        ):\n            async_warn()\n        funcargs = pyfuncitem.funcargs\n        testargs = {arg: funcargs[arg] for arg in pyfuncitem._fixtureinfo.argnames}\n>       result = testfunction(**testargs)\n\n/usr/lib/python3.7/site-packages/_pytest/python.py:170: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test.mitmproxy.proxy.test_server.TestHTTPS object at 0x7f6a85737110>\n\n    def test_tcp(self):\n        n = self.pathod(\"304\")\n        self._tcpproxy_on()\n>       i = self.pathod(\"305\")\n\ntest_server.py:171: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test.mitmproxy.proxy.test_server.TestHTTPS object at 0x7f6a85737110>\nspec = '305', sni = None\n\n    def pathod(self, spec, sni=None):\n        \"\"\"\n            Constructs a pathod GET request, with the appropriate base and proxy.\n        \"\"\"\n        p = self.pathoc(sni=sni)\n        if self.ssl:\n            q = \"get:'/p/%s'\" % spec\n        else:\n            q = \"get:'%s/p/%s'\" % (self.server.urlbase, spec)\n        with p.connect():\n>           return p.request(q)\n\n../tservers.py:233: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f6a856fd510>\nr = 'GET':'/p/305'\n\n    def request(self, r):\n        \"\"\"\n            Performs a single request.\n    \n            r: A language.message.Message object, or a string representing\n            one.\n    \n            Returns Response if we have a non-ignored response.\n    \n            May raise a exceptions.NetlibException\n        \"\"\"\n        if isinstance(r, str):\n            r = next(language.parse_pathoc(r, self.use_http2))\n    \n        if isinstance(r, language.http.Request):\n            if r.ws:\n                return self.websocket_start(r)\n            else:\n>               return self.http(r)\n\n../../../pathod/pathoc.py:488: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f6a856fd510>\nr = 'GET':'/p/305'\n\n    def http(self, r):\n        \"\"\"\n            Performs a single request.\n    \n            r: A language.http.Request object, or a string representing one\n            request.\n    \n            Returns Response if we have a non-ignored response.\n    \n            May raise a exceptions.NetlibException\n        \"\"\"\n        logger = log.ConnectionLogger(\n            self.fp,\n            self.hexdump,\n            False,\n            self.rfile if self.showresp else None,\n            self.wfile if self.showreq else None,\n        )\n        with logger.ctx() as lg:\n            lg(\">> %s\" % r)\n            resp, req = None, None\n            try:\n                req = language.serve(r, self.wfile, self.settings)\n                self.wfile.flush()\n    \n                # build a dummy request to read the response\n                # ideally this would be returned directly from language.serve\n                dummy_req = net_http.Request(\n                    first_line_format=\"relative\",\n                    method=req[\"method\"],\n                    scheme=b\"http\",\n                    host=b\"localhost\",\n                    port=80,\n                    path=b\"/\",\n                    http_version=b\"HTTP/1.1\",\n                    content=b'',\n                )\n    \n>               resp = self.protocol.read_response(self.rfile, dummy_req)\n\n../../../pathod/pathoc.py:450: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrfile = <mitmproxy.net.tcp.Reader object at 0x7f6a85777110>\nrequest = Request(GET localhost:80/), body_size_limit = None\n\n    def read_response(rfile, request, body_size_limit=None):\n>       response = read_response_head(rfile)\n\n../../../mitmproxy/net/http/http1/read.py:65: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrfile = <mitmproxy.net.tcp.Reader object at 0x7f6a85777110>\n\n    def read_response_head(rfile):\n        \"\"\"\n        Parse an HTTP response head (response line + headers) from an input stream\n    \n        Args:\n            rfile: The input stream\n    \n        Returns:\n            The HTTP request object (without body)\n    \n        Raises:\n            exceptions.HttpReadDisconnect: No bytes can be read from rfile.\n            exceptions.HttpSyntaxException: The input is malformed HTTP.\n            exceptions.HttpException: Any other error occurred.\n        \"\"\"\n    \n        timestamp_start = time.time()\n        if hasattr(rfile, \"reset_timestamps\"):\n            rfile.reset_timestamps()\n    \n>       http_version, status_code, message = _read_response_line(rfile)\n\n../../../mitmproxy/net/http/http1/read.py:92: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrfile = <mitmproxy.net.tcp.Reader object at 0x7f6a85777110>\n\n    def _read_response_line(rfile):\n        try:\n>           line = _get_first_line(rfile)\n\n../../../mitmproxy/net/http/http1/read.py:292: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nrfile = <mitmproxy.net.tcp.Reader object at 0x7f6a85777110>\n\n    def _get_first_line(rfile):\n        try:\n>           line = rfile.readline()\n\n../../../mitmproxy/net/http/http1/read.py:230: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mitmproxy.net.tcp.Reader object at 0x7f6a85777110>, size = None\n\n    def readline(self, size=None):\n        result = b''\n        bytes_read = 0\n        while True:\n            if size is not None and bytes_read >= size:\n                break\n>           ch = self.read(1)\n\n../../../mitmproxy/net/tcp.py:158: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <mitmproxy.net.tcp.Reader object at 0x7f6a85777110>, length = 1\n\n    def read(self, length):\n        \"\"\"\n            If length is -1, we read until connection closes.\n        \"\"\"\n        result = b''\n        start = time.time()\n        while length == -1 or length > 0:\n            if length == -1 or length > self.BLOCKSIZE:\n                rlen = self.BLOCKSIZE\n            else:\n                rlen = length\n            try:\n>               data = self.o.read(rlen)\n\n../../../mitmproxy/net/tcp.py:118: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <OpenSSL.SSL.Connection object at 0x7f6a85711250>, bufsiz = 1\nflags = None\n\n    def recv(self, bufsiz, flags=None):\n        \"\"\"\n        Receive data on the connection.\n    \n        :param bufsiz: The maximum number of bytes to read\n        :param flags: (optional) The only supported flag is ``MSG_PEEK``,\n            all other flags are ignored.\n        :return: The string read from the Connection\n        \"\"\"\n        buf = _no_zero_allocator(\"char[]\", bufsiz)\n        if flags is not None and flags & socket.MSG_PEEK:\n            result = _lib.SSL_peek(self._ssl, buf, bufsiz)\n        else:\n>           result = _lib.SSL_read(self._ssl, buf, bufsiz)\nE           KeyboardInterrupt\n\n/usr/lib/python3.7/site-packages/OpenSSL/SSL.py:1790: KeyboardInterrupt\nTraceback (most recent call last):\n  File \"/usr/bin/pytest\", line 11, in <module>\n    load_entry_point('pytest==5.2.1', 'console_scripts', 'pytest')()\n  File \"/usr/lib/python3.7/site-packages/_pytest/config/__init__.py\", line 90, in main\n    return config.hook.pytest_cmdline_main(config=config)\n  File \"/usr/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n  File \"/usr/lib/python3.7/site-packages/pluggy/manager.py\", line 92, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"/usr/lib/python3.7/site-packages/pluggy/manager.py\", line 86, in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n  File \"/usr/lib/python3.7/site-packages/pluggy/callers.py\", line 208, in _multicall\n    return outcome.get_result()\n  File \"/usr/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"/usr/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/usr/lib/python3.7/site-packages/_pytest/main.py\", line 228, in pytest_cmdline_main\n    return wrap_session(config, _main)\n  File \"/usr/lib/python3.7/site-packages/_pytest/main.py\", line 221, in wrap_session\n    session=session, exitstatus=session.exitstatus\n  File \"/usr/lib/python3.7/site-packages/pluggy/hooks.py\", line 286, in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\n  File \"/usr/lib/python3.7/site-packages/pluggy/manager.py\", line 92, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"/usr/lib/python3.7/site-packages/pluggy/manager.py\", line 86, in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n  File \"/usr/lib/python3.7/site-packages/pluggy/callers.py\", line 203, in _multicall\n    gen.send(outcome)\n  File \"/usr/lib/python3.7/site-packages/_pytest/terminal.py\", line 650, in pytest_sessionfinish\n    outcome.get_result()\n  File \"/usr/lib/python3.7/site-packages/pluggy/callers.py\", line 80, in get_result\n    raise ex[1].with_traceback(ex[2])\n  File \"/usr/lib/python3.7/site-packages/pluggy/callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"/usr/lib/python3.7/site-packages/_pytest/runner.py\", line 75, in pytest_sessionfinish\n    session._setupstate.teardown_all()\n  File \"/usr/lib/python3.7/site-packages/_pytest/runner.py\", line 326, in teardown_all\n    self._pop_and_teardown()\n  File \"/usr/lib/python3.7/site-packages/_pytest/runner.py\", line 299, in _pop_and_teardown\n    self._teardown_with_finalization(colitem)\n  File \"/usr/lib/python3.7/site-packages/_pytest/runner.py\", line 319, in _teardown_with_finalization\n    self._callfinalizers(colitem)\n  File \"/usr/lib/python3.7/site-packages/_pytest/runner.py\", line 307, in _callfinalizers\n    fin()\n  File \"/usr/lib/python3.7/site-packages/_pytest/nose.py\", line 14, in <lambda>\n    item.session._setupstate.addfinalizer((lambda: teardown_nose(item)), item)\n  File \"/usr/lib/python3.7/site-packages/_pytest/nose.py\", line 20, in teardown_nose\n    call_optional(item.parent.obj, \"teardown\")\n  File \"/usr/lib/python3.7/site-packages/_pytest/nose.py\", line 37, in call_optional\n    method()\n  File \"/mnt/HD1/aur/cache/mitmproxy-git/src/mitmproxy/test/mitmproxy/tservers.py\", line 161, in teardown\n    self.server.wait_for_silence()\n  File \"/mnt/HD1/aur/cache/mitmproxy-git/src/mitmproxy/pathod/test.py\", line 43, in wait_for_silence\n    self.thread.server.wait_for_silence(timeout=timeout)\n  File \"/mnt/HD1/aur/cache/mitmproxy-git/src/mitmproxy/mitmproxy/net/tcp.py\", line 668, in wait_for_silence\n    if self.handler_counter.count == 0:\nKeyboardInterrupt\nException ignored in: <module 'threading' from '/usr/lib/python3.7/threading.py'>\nTraceback (most recent call last):\n  File \"/usr/lib/python3.7/threading.py\", line 1308, in _shutdown\n    lock.acquire()\nKeyboardInterrupt\nSystem information\nMitmproxy: 5.0.0.dev\nPython: 3.7.4\nOpenSSL: OpenSSL 1.1.1d 10 Sep 2019\nPlatform: Linux-5.3.1-arch1-1-ARCH-x86_64-with-arch\n2", "issue_status": "Closed", "issue_reporting_time": "2019-10-09T19:30:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "62": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3664", "issue_id": "#3664", "issue_summary": "Error decoding header block: Encoder did not shrink table size to within the max", "issue_description": "lpcdma commented on 9 Oct 2019\nSteps to reproduce the problem:\n1.run command ./mitmweb --listen-port=7777 --web-iface 0.0.0.0 --set block_global=false --set http2_priority=true --set termlog_verbosity=debug --set bodyize_limit=3m\n2.usage C# clinet send http/2.0 package\n3. mitm print error Error decoding header block: Encoder did not shrink table size to within the max\ndebug info\n::ffff:127.0.0.1:39876: HTTP2 Event from server\n  -> <SettingsAcknowledged changed_settings:{ChangedSetting(setting=SettingCodes.HEADER_TABLE_SIZE, original_value=4096, new_value=0), ChangedSetting(setting=SettingCodes.ENABLE_PUSH, original_value=1, new_value=0)}>\n::ffff:127.0.0.1:39876: HTTP2 Event from client\n  -> <SettingsAcknowledged changed_settings:{ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=100, new_value=20)}>\n::ffff:127.0.0.1:39876: HTTP2 Event from client\n  -> <SettingsAcknowledged changed_settings:{}>\n::ffff:127.0.0.1:39876: HTTP2 Event from server\n  -> <SettingsAcknowledged changed_settings:{}>\n::ffff:127.0.0.1:39876: ProtocolError('Error decoding header block: Encoder did not shrink table size to within the max',)\n::ffff:127.0.0.1:39876: serverdisconnect\nclinet debug info\nSystem.AggregateException : One or more errors occurred. (An error occurred while sending the request.)\n ---- System.Net.Http.HttpRequestException : An error occurred while sending the request.\n-------- System.IO.IOException : The request was aborted.\n------------ System.IO.IOException : The response ended prematurely, with at least 9 additional bytes expected.\nSystem information\n./mitmweb --version\nMitmproxy: 4.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.4.0-62-generic-x86_64-with-debian-stretch-sid\nhttps://discourse.mitmproxy.org/t/error-decoding-header-block-encoder-did-not-shrink-table-size-to-within-the-max/1692", "issue_status": "Closed", "issue_reporting_time": "2019-10-09T02:43:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "63": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3658", "issue_id": "#3658", "issue_summary": "relax-http-form-validation", "issue_description": "sk3lk0 commented on 2 Oct 2019\n--relax-http-form-validation whats the new version of this? This param doesnot work in the newest binary", "issue_status": "Closed", "issue_reporting_time": "2019-10-02T11:49:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "64": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3654", "issue_id": "#3654", "issue_summary": "TypeError: 'NoneType' object is not callable", "issue_description": "timeisflowing commented on 28 Sep 2019\nSteps to reproduce the problem:\nmitmproxy -s examples/complex/xss_scanner.py\nBrowsing any url np next 5 time min freezing\nResulting Errror\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy-5.0.0.dev0-py3.6.egg/mitmproxy/proxy/server.py\", line 121, in handle\nroot_layer()\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy-5.0.0.dev0-py3.6.egg/mitmproxy/proxy/modes/http_proxy.py\", line 9, in call\nlayer()\nTypeError: 'NoneType' object is not callable\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy-5.0.0.dev0-py3.6.egg/mitmproxy/master.py\", line 86, in run_loop\nloop()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 286, in run\nself._run()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 384, in _run\nself.event_loop.run()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 1484, in run\nreraise(*exc_info)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/compat.py\", line 58, in reraise\nraise value\nFile \"/usr/lib/python3.6/asyncio/events.py\", line 145, in _run\nself._callback(*self._args)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/raw_display.py\", line 404, in\nevent_loop, callback, self.get_available_raw_input())\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/raw_display.py\", line 475, in parse_input\ncodes, wait_for_more)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/escape.py\", line 387, in process_keyqueue\nif run[0] == \"esc\" or run[0].find(\"meta \") >= 0:\nAttributeError: 'tuple' object has no attribute 'find'\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 5.0.0.dev\nPython: 3.6.8\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Linux-5.0.0-29-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Closed", "issue_reporting_time": "2019-09-28T16:26:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "65": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3649", "issue_id": "#3649", "issue_summary": "iOS 13 and HTTPS Inspection - Root Certificate Issue", "issue_description": "Ogekuri commented on 27 Sep 2019\nSteps to reproduce the problem:\nUpgrade iPhone to iOS 13\nTry in inspect HTTPS traffic of Safari\nUnable to connect to remote site with Safari\nAny other comments? What have you tried so far?\nIt appears that iOS 13 introduced new requirements for HTTPS certificates to be treated as valid:\nhttps://support.apple.com/en-gb/HT210176\nSystem information\nmitmproxy-4.0.4-windows>mitmweb.exe --version\nMitmproxy: 4.0.2 binary\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-10-10.0.17763\n3\n1", "issue_status": "Closed", "issue_reporting_time": "2019-09-27T09:43:44Z", "fixed_by": "#3659", "pull_request_summary": "Add EKU extension for dummy certificates", "pull_request_description": "Contributor\nvin01 commented on 3 Oct 2019\nAn attempt to fix #3649 (I have not been able to test it functionally yet with iOS 13)\nFrom: https://support.apple.com/en-gb/HT210176\nTLS server certificates must contain an ExtendedKeyUsage (EKU) extension containing the id-kp-serverAuth OID.\nRelevant information:\nhttps://community.letsencrypt.org/t/extendedkeyusage-tls-client-authentication-in-tls-server-certificates/59140\nhttps://letsencrypt.org/documents/isrg-cps-v2.0/", "pull_request_status": "Merged", "issue_fixed_time": "2019-10-04T14:24:20Z", "files_changed": [["7", "mitmproxy/certs.py"]]}, "66": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3647", "issue_id": "#3647", "issue_summary": "Mitmproxy doesn't work in iOS apps", "issue_description": "n3oney commented on 26 Sep 2019\nSteps to reproduce the problem:\nConnect an iPhone to mitmproxy\nOpen an app like Messenger\nMessenger can't connect to the internet.\nAny other comments? What have you tried so far?\nI have tried using mitmproxy on Ubuntu and MacOS both, nothing has changed. The apps still can not access the internet. I can open websites normally (I've trusted the certificate) but not use apps like Messenger, Discord.\nI'm on an iPhone 6s iOS 12.4, jailbroken. So, if there is a way to make this work that requires jailbreak, I would be happy to try it.\nSystem information\nMitmproxy: 4.0.4 binary\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Darwin-19.0.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2019-09-26T09:08:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "67": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3644", "issue_id": "#3644", "issue_summary": "The windows mitmdump can\u2018t download file\uff0cAlways in the link", "issue_description": "logan-x commented on 19 Sep 2019\nSteps to reproduce the problem:\n1.Start mitmdump on Windows\n2.Listen for localhost: 8888\uff0cdomain: qq.com\n3.Open https://work.weixin.qq.com/\n3.Click the download button on the web page\nAny other comments? What have you tried so far?\nIt's always on the link. It can't be downloaded. https://pc.weixin.qq.com/ is the same\u3002\nset \"flow.response.stream\" = True Also is invalid\nSystem information\nMitmproxy: 4.0.3 binary\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-2008ServerR2-6.1.7601-SP1", "issue_status": "Closed", "issue_reporting_time": "2019-09-19T03:52:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "68": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3643", "issue_id": "#3643", "issue_summary": "Intercepting Upstream Proxy Response Headers", "issue_description": "hashexclude commented on 19 Sep 2019\nI am using an upstream proxy and I am unable to figure out a way to log the Response headers of the HTTP proxy. The flow response hooks only logs the headers set by the end server requested.", "issue_status": "Closed", "issue_reporting_time": "2019-09-18T20:40:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "69": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3642", "issue_id": "#3642", "issue_summary": "win10 can't show in mitmweb", "issue_description": "wjy19990622 commented on 17 Sep 2019\ni have a problem: my phone's requests and response can show in mitmweb, but my win10's can'show nothing. what can i do??", "issue_status": "Closed", "issue_reporting_time": "2019-09-17T03:58:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "70": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3641", "issue_id": "#3641", "issue_summary": "How to create certificate?", "issue_description": "piko789 commented on 16 Sep 2019 \u2022\nedited\nSteps to reproduce the problem:\nopenssl genrsa -out cert.key 2048\nopenssl req -new -x509 -key cert.key -out cert.crt\ncat cert.key cert.crt > cert.pem\nthen i run mitmproxy in transparrent mode and i add --cert *=cert.pem\nsudo nano cert.pem\ncreate txt file in ansi on my pc and copy paste the cert.pem. then save file\nsend cert.pem to my android phone and instlal certificate.\nAny other comments? What have you tried so far?\ncertificates installs successfully on the phone. then i get handshake error on the mitmproxy and cant visit any https website on the phone. Phone connects to linux server using pptpd. non https sites works. https i get error.. If i run in regular mode and add manually proxy then i can visit mitm.mi and download cert,install it and it works fantastic.however when i run mitmproxy in transparrent mode i cannot visit mitm.it on the phone as it says that traffic does not go through mitmproxy but it DOES go because non https websites i can visit them..\nIs it wrong the way i try to create my own certificate in order to avoid downloading a new one all the time(plus mitm.it isnt working when on transparrent)??\nthank you\nSystem information\n4.0.4", "issue_status": "Closed", "issue_reporting_time": "2019-09-15T20:59:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "71": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3639", "issue_id": "#3639", "issue_summary": "Support of .yml extension in config file.", "issue_description": "HasBert commented on 15 Sep 2019\nHey,\nthis is not a bug issue it's more a feature request.\nYesterday I made a STUPID mistake and named the config.yaml file config.yml. It cost me some time to find out. (Yeah I know that the docs say use config.yaml xD)\nAccording to this post, the extensions .yaml and .yml are the same. The extension .yml has grown in Google search results, over the past years.\nHowever, I thought, that accepting both file extensions would make mitmproxy more robust. I started to implement this \"feature\" for a pull request, and then thought that I should ask you first, if you even want to have it? Maybe you want to force people to use the correct extension.", "issue_status": "Closed", "issue_reporting_time": "2019-09-15T11:15:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "72": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3638", "issue_id": "#3638", "issue_summary": "mitmproxy add addon has no effect", "issue_description": "chuky3000x commented on 13 Sep 2019 \u2022\nedited", "issue_status": "Closed", "issue_reporting_time": "2019-09-13T08:20:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "73": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3637", "issue_id": "#3637", "issue_summary": "Forwarding proxy crashes when trying to view details of a POST containing multipart file data", "issue_description": "bdobrzelecki commented on 12 Sep 2019 \u2022\nedited\nadmins-MacBook-Pro:~ bartek$ miproxyeb --mode reverse:https://host\nTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/mitmproxy/master.py\", line 86, in run_loop\nloop()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 286, in run\nself._run()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 384, in _run\nself.event_loop.run()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 1484, in run\nreraise(*exc_info)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/compat.py\", line 58, in reraise\nraise value\nFile \"/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py\", line 88, in _run\nself._context.run(self._callback, *self._args)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 1443, in faux_idle_callback\ncallback()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 572, in entering_idle\nself.draw_screen()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 586, in draw_screen\ncanvas = self._topmost_widget.render(self.screen_size, focus=True)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/decoration.py\", line 226, in render\ncanv = self._original_widget.render(size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 1765, in render\ncanv = get_delegate(self).render(size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/listbox.py\", line 501, in render\ncanvas = widget.render((maxcol,))\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 1004, in render\nreturn apply_text_layout(text, attr, trans, maxcol)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/canvas.py\", line 1315, in apply_text_layout\nreturn TextCanvas(t, a, c, maxcol=maxcol)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4_1/libexec/lib/python3.7/site-packages/urwid/canvas.py\", line 358, in init\nraise CanvasError(\"Canvas text is wider than the maxcol specified \\n%r\\n%r\\n%r\"%(maxcol,widths,text))\nurwid.canvas.CanvasError: Canvas text is wider than the maxcol specified\n134\n[119, 123, 134, 134, 25, 116, 134, 134, 134, 134, 134, 135, 134, 134, 97, 120, 135, 135, 135, 134, 134, 111, 135, 108, 134, 134, 134, 83, 134, 122, 79, 133, 129, 134, 121, 17, 119, 135, 134, 93, 76, 134, 134, 98, 127, 135, 134, 135, 121, 39, 128, 20, 134, 135, 134, 136, 134, 134, 75, 134, 135, 136, 134, 134, 134, 135, 33, 133, 89, 134, 133, 134, 92, 135, 135, 136, 109, 132, 136, 134, 134, 135, 115, 135, 118, 97, 73, 90, 130, 132, 134, 84, 126, 134, 134, 134, 109, 135, 136, 135, 63, 134, 134, 110, 107, 133, 134, 134, 134, 134, 135, 134, 119, 62, 134, 136, 31, 134, 134, 131, 133, 135, 135, 135, 75, 93, 134, 92, 135, 135, 134, 20, 134, 135, 79, 134, 119, 131, 128, 41, 136, 134, 122, 134, 120, 136, 102, 129, 133, 132, 1, 134, 135, 134, 138, 136, 105, 129, 58, 78, 134, 134, 135, 87, 95, 97, 136, 134, 14, 134, 127, 135, 135, 133, 136, 59, 134, 133, 136, 134, 134, 134, 110, 134, 134, 101, 46, 134, 134, 73, 135, 116, 130, 89, 79, 134, 130, 104, 84, 76, 135, 135, 135, 134, 135, 95, 104, 134, 22, 133, 133, 101, 34, 135, 132, 134, 135, 99, 88, 134, 134, 136, 134, 134, 83, 134, 120, 134, 134, 133, 115, 111, 134, 134, 134, 133, 126, 134, 134, 134, 79, 132, 85, 90, 54, 95, 134, 137, 135, 134, 135, 1, 136, 73, 134, 134, 93, 132, 106, 65, 134, 135, 134, 134, 135, 90, 82, 114, 135, 134, 133, 133, 1, 134, 41, 135, 54, 134, 134, 39, 131, 134, 134, 136, 132, 134, 134, 135, 134, 135, 134, 135, 135, 135, 131, 35, 111, 93, 50, 134, 134, 131, 116, 134, 134, 134, 128, 136, 133, 1, 135, 8, 135, 118, 134, 83, 134, 134, 114, 134, 134, 135, 133, 135, 136, 134, 130, 38, 135, 134, 134, 135, 133, 1, 135, 134, 133, 112, 106, 134, 135, 134, 135, 106, 61]\n[b'file: ?PNG....IHDR.....?.....X.?....sRGB.??.?...\\tpHYs...#...#.x??v...YiTXtXML:com.adobe.xmp.....<x:xmpmeta", "issue_status": "Closed", "issue_reporting_time": "2019-09-12T18:20:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "74": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3636", "issue_id": "#3636", "issue_summary": "mitmproxy crashed", "issue_description": "doraeqing commented on 12 Sep 2019 \u2022\nedited by mhils\nTraceback (most recent call last):\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 260, in _process_flow\n    return self.handle_regular_connect(f)\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\n    layer()\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\nTypeError: 'NoneType' object is not callable\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 260, in _process_flow\n    return self.handle_regular_connect(f)\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\n    layer()\n  File \"/Users/xxx/venv_godeye/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\nTypeError: 'NoneType' object is not callable\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2019-09-12T10:06:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "75": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3635", "issue_id": "#3635", "issue_summary": "MITMProxy is detected", "issue_description": "gianlucacolucci commented on 11 Sep 2019\nI am trying to debug a mobile app, which seems to have some kind of protection against MITM attacks.\nThe presence of MITMProxy is detected.\nIs there any way around this?", "issue_status": "Closed", "issue_reporting_time": "2019-09-10T20:26:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "76": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3634", "issue_id": "#3634", "issue_summary": "error", "issue_description": "asos-gianlucacolucci commented on 11 Sep 2019 \u2022\nedited\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2019-09-10T20:22:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "77": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3632", "issue_id": "#3632", "issue_summary": "gulp build broken", "issue_description": "fliot commented on 9 Sep 2019\nSteps to reproduce the problem:\ncd ./web && yarn && gulp\npip3 uninstall mitmproxy && pip3 -v install . --upgrade # hard way\nmitmweb\neach displayed request breaks the react view:\nAny other comments? What have you tried so far?\nI tried several version of Yarn and Gulp, just in case, but I get the same behavior...\nSystem information\nyarn -v\n1.17.3\nnode -v\nv10.16.3\ngulp -v\nCLI version: 2.2.0\nLocal version: Unknown\nmitmweb --version\nMitmproxy: 5.0.0.dev (I got the same behavior with 4.0.4)\nPython: 3.6.8\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Linux-5.0.0-27-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Closed", "issue_reporting_time": "2019-09-09T12:48:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "78": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3625", "issue_id": "#3625", "issue_summary": "Unknown setting ssl_insecure", "issue_description": "FranklinYu commented on 30 Aug 2019\nSteps to reproduce the problem:\ndocker run --rm -it -p 8080:8080 -p 127.0.0.1:8081:8081 mitmproxy/mitmproxy mitmweb --web-iface 0.0.0.0\nNavigate to http://localhost:8081\nSwitch to tab \u201cOptions\u201d\nCheck \u201cVerify server certificates\u201d\nWARNING:tornado.general:400 PUT /settings?_xsrf=... (x.x.x.x): Unknown setting ssl_insecure\nAny other comments? What have you tried so far?\nI tried both Windows (with Docker-for-Windows) and Arch Linux.\nSystem information\nMitmproxy: 4.0.4\nPython:    3.6.3\nOpenSSL:   OpenSSL 1.0.2o  27 Mar 2018\nPlatform:  Linux-4.9.184-linuxkit-x86_64-with", "issue_status": "Closed", "issue_reporting_time": "2019-08-30T14:44:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "79": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3624", "issue_id": "#3624", "issue_summary": "Crash Bug", "issue_description": "Hakai123 commented on 29 Aug 2019\nFile \"mitmproxy\\proxy\\server.py\", line 121, in handle\nFile \"mitmproxy\\proxy\\modes\\http_proxy.py\", line 9, in call\nFile \"mitmproxy\\proxy\\protocol\\tls.py\", line 286, in call\nFile \"mitmproxy\\proxy\\protocol\\http1.py\", line 83, in call\nFile \"mitmproxy\\proxy\\protocol\\http.py\", line 188, in call\nFile \"mitmproxy\\proxy\\protocol\\http.py\", line 260, in _process_flow\nFile \"mitmproxy\\proxy\\protocol\\http.py\", line 206, in handle_regular_connect\nFile \"mitmproxy\\proxy\\protocol\\tls.py\", line 268, in call\nAttributeError: 'NoneType' object has no attribute 'alpn_protocols'\nmitmproxy has crashed!", "issue_status": "Closed", "issue_reporting_time": "2019-08-28T21:46:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "80": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3623", "issue_id": "#3623", "issue_summary": "the client may not trust the proxy's certificate", "issue_description": "shay444 commented on 28 Aug 2019\nSteps to reproduce the problem:\nhi, i got a problem with the trust certificate i'm using virtualbox 1 with kali and mitmproxy and win10.\n\ni can use firefox in the win10 only when i use \"ufw disable\" on kali when i tried to use ip tabels with:\niptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\niptables -t nat -A PREROUTING -i eth0 -p tcp --dport 443 -j REDIRECT --to-port 8080\nip6tables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\nip6tables -t nat -A PREROUTING -i eth0 -p tcp --dport 443 -j REDIRECT --to-port 8080\nu can see that i add the mitmproxy certificate to:\n\nty for the help :)\nSystem information\nKALI\nWIN10\n4.0.4", "issue_status": "Closed", "issue_reporting_time": "2019-08-28T08:13:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "81": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3622", "issue_id": "#3622", "issue_summary": "certutil.exe -importpfx Root mitmproxy-ca-cert.p12 does not work", "issue_description": "vincenthawke commented on 28 Aug 2019 \u2022\nedited\nOS: Windows 10\nMitmproxy ver: 4.0.4\nI am unable to use cmd or PS to install the certificate.\nRunning the provided command returns this:\nC:\\projects>certutil -importpfx Root mitmproxy-ca-cert.p12\nEnter PFX password:\nCertUtil: -importPFX command FAILED: 0x80092007 (-2146885625 CRYPT_E_SELF_SIGNED)\nCertUtil: The specified certificate is self signed.", "issue_status": "Closed", "issue_reporting_time": "2019-08-28T02:29:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "82": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3621", "issue_id": "#3621", "issue_summary": "start proxy from python", "issue_description": "chuky3000x commented on 23 Aug 2019 \u2022\nedited\nI try to start the mitmproxy from python script. I have found a solution for this here.\nBut for this code i get an error:\nroot@debian:/bin/test# python3 testproxy\n['<mitmproxy.addons.termlog.TermLog object at 0x7f70052f7940>',\n '<mitmproxy.addons.termstatus.TermStatus object at 0x7f70052f7978>',\n '<mitmproxy.addons.core.Core object at 0x7f70052f79b0>',\n '<mitmproxy.addons.browser.Browser object at 0x7f70052f79e8>',\n '<mitmproxy.addons.block.Block object at 0x7f70052f7a58>',\n '<mitmproxy.addons.anticache.AntiCache object at 0x7f70052f7a20>',\n '<mitmproxy.addons.anticomp.AntiComp object at 0x7f70052f7ac8>',\n '<mitmproxy.addons.check_ca.CheckCA object at 0x7f70052f7b00>',\n '<mitmproxy.addons.clientplayback.ClientPlayback object at 0x7f70052f7b38>',\n '<mitmproxy.addons.cut.Cut object at 0x7f70052f7c50>',\n '<mitmproxy.addons.disable_h2c.DisableH2C object at 0x7f70052f7c88>',\n '<mitmproxy.addons.export.Export object at 0x7f70052f7cc0>',\n '<mitmproxy.addons.onboarding.Onboarding object at 0x7f70052f7cf8>',\n '<mitmproxy.addons.proxyauth.ProxyAuth object at 0x7f70052f7d68>',\n '<mitmproxy.addons.replace.Replace object at 0x7f70052f7dd8>',\n '<mitmproxy.addons.script.ScriptLoader object at 0x7f70052f7e10>',\n '<mitmproxy.addons.serverplayback.ServerPlayback object at 0x7f70052f7e48>',\n '<mitmproxy.addons.setheaders.SetHeaders object at 0x7f70052f7e80>',\n '<mitmproxy.addons.stickyauth.StickyAuth object at 0x7f70052f7eb8>',\n '<mitmproxy.addons.stickycookie.StickyCookie object at 0x7f70052f7ef0>',\n '<mitmproxy.addons.streambodies.StreamBodies object at 0x7f70052f7f28>',\n '<mitmproxy.addons.save.Save object at 0x7f70052f7f60>',\n '<mitmproxy.addons.upstream_auth.UpstreamAuth object at 0x7f70052f7f98>',\n '<mitmproxy.addons.dumper.Dumper object at 0x7f70052f7fd0>',\n '<mitmproxy.addons.keepserving.KeepServing object at 0x7f7005285668>',\n '<mitmproxy.addons.readfile.ReadFileStdin object at 0x7f7005285588>',\n '<mitmproxy.tools.dump.ErrorCheck object at 0x7f70052f7908>']\nProxy server listening at http://127.0.0.1:8080\n127.0.0.1:53014: clientconnect\n127.0.0.1:53014: Traceback (most recent call last):\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/protocol/http.py\", line 254, in _process_flow\n    self.read_request_body(f.request)\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 23, in read_request_body\n    human.parse_size(self.config.options.body_size_limit)\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/optmanager.py\", line 172, in __getattr__\n    raise AttributeError(\"No such option: %s\" % attr)\nAttributeError: No such option: body_size_limit\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/protocol/http.py\", line 254, in _process_flow\n    self.read_request_body(f.request)\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 23, in read_request_body\n    human.parse_size(self.config.options.body_size_limit)\n  File \"/usr/local/lib/python3.7/dist-packages/mitmproxy/optmanager.py\", line 172, in __getattr__\n    raise AttributeError(\"No such option: %s\" % attr)\nAttributeError: No such option: body_size_limit\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nI would like to use mitmproxy to capture http request and response to extract the cookies (first and third party) from it. For this purposes i would like to start the proxy, open a website with selenium, capture the requests and responses and finally analyse on \"Cookie\" and \"Set-Cookie\" fields in the headers.", "issue_status": "Closed", "issue_reporting_time": "2019-08-22T21:31:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "83": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3620", "issue_id": "#3620", "issue_summary": "High CPU usage when idle", "issue_description": "povlhp commented on 20 Aug 2019 \u2022\nedited\nSteps to reproduce the problem:\nLaunch 4.0.4 precompiled, linux\nAny other comments? What have you tried so far?\nNot much to do.\nJust eats CPU on startup. Stays at 45-50% on my cloud server. 2.7% mem, no swap.\nTested 3.04, stays < 10% CPU.\n4.0.0 and later stays > 45%\ncat /proc/cpuinfo\nprocessor       : 0\nvendor_id       : GenuineIntel\ncpu family      : 6\nmodel           : 60\nmodel name      : Intel Core Processor (Haswell, no TSX)\nstepping        : 1\nmicrocode       : 0x1\ncpu MHz         : 2394.444\ncache size      : 4096 KB\nphysical id     : 0\nsiblings        : 1\ncore id         : 0\ncpu cores       : 1\napicid          : 0\ninitial apicid  : 0\nfpu             : yes\nfpu_exception   : yes\ncpuid level     : 13\nwp              : yes\nflags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 syscall nx rdtscp lm constant_tsc rep_good nopl cpuid tsc_known_freq pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm cpuid_fault invpcid_single pti tpr_shadow vnmi flexpriority ept vpid fsgsbase bmi1 avx2 smep bmi2 erms invpcid xsaveopt arat\nbugs            : cpu_meltdown spectre_v1 spectre_v2 spec_store_bypass l1tf mds\nbogomips        : 4788.88\nclflush size    : 64\ncache_alignment : 64\naddress sizes   : 40 bits physical, 48 bits virtual\npower management:\nSystem information\nMitmproxy: 4.0.4 binary\nPython:    3.6.3\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Linux-4.15.0-52-generic-x86_64-with-debian-buster-sid", "issue_status": "Closed", "issue_reporting_time": "2019-08-20T10:53:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "84": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3619", "issue_id": "#3619", "issue_summary": "SSL handshake error", "issue_description": "lefuturiste commented on 18 Aug 2019\nSteps to reproduce the problem:\nTake an Android 7.1.2 Xiaomi Redmi 4X with MIUI 10.3\nInstall mitmproxy\nlaunch mitmdump command\nSet proxy on the phone & Install root certificate provided by the domain mitm.it\nusing settings app: \"More settings\" > \"Privacy\" > \"Install certificate\"\nGo to any apps and try to make a http request like twitter or discordapp\nErrors appears:\n192.168.0.14:56294: CONNECT android.googleapis.com:443\n << Cannot establish TLS with client (sni: android.googleapis.com): TlsException(\"SSL handshake error: Error([('SSL routines', 'ssl3_read_bytes', 'sslv3 alert certificate unknown')],)\",)\nSystem information\nMitmproxy: 4.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-5.2.5-arch1-1-ARCH-x86_64-with-arch", "issue_status": "Closed", "issue_reporting_time": "2019-08-18T16:14:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "85": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3618", "issue_id": "#3618", "issue_summary": "mitmproxy is not working on Kali Linux (no attribute 'WSGIAdapter')", "issue_description": "johhnry commented on 17 Aug 2019\nHi guys,\nI am on Kali Linux (4.19.0-kali5-amd64 #1 SMP Debian x86_64 GNU/Linux) and I never used mitmproxy before, it was pre-installed by default.\nSteps to reproduce the problem:\nRunning mitmproxy from command line\nSystem information\nThis is the output of the console :\nTraceback (most recent call last):\n  File \"/usr/bin/mitmproxy\", line 11, in <module>\n    load_entry_point('mitmproxy==4.0.4', 'console_scripts', 'mitmproxy')()\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 489, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2843, in load_entry_point\n    return ep.load()\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2434, in load\n    return self.resolve()\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2440, in resolve\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\n  File \"/usr/lib/python3/dist-packages/mitmproxy/tools/main.py\", line 22, in <module>\n    from ._main import *  # noqa\n  File \"/usr/lib/python3/dist-packages/mitmproxy/tools/_main.py\", line 13, in <module>\n    from mitmproxy.tools import cmdline  # noqa\n  File \"/usr/lib/python3/dist-packages/mitmproxy/tools/cmdline.py\", line 3, in <module>\n    from mitmproxy.addons import core\n  File \"/usr/lib/python3/dist-packages/mitmproxy/addons/__init__.py\", line 11, in <module>\n    from mitmproxy.addons import onboarding\n  File \"/usr/lib/python3/dist-packages/mitmproxy/addons/onboarding.py\", line 2, in <module>\n    from mitmproxy.addons.onboardingapp import app\n  File \"/usr/lib/python3/dist-packages/mitmproxy/addons/onboardingapp/app.py\", line 13, in <module>\n    class Adapter(tornado.wsgi.WSGIAdapter):\nAttributeError: module 'tornado.wsgi' has no attribute 'WSGIAdapter'\nThanks in advance\n7", "issue_status": "Closed", "issue_reporting_time": "2019-08-16T21:39:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "86": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3617", "issue_id": "#3617", "issue_summary": "how to close log or set log lever", "issue_description": "xzkzdx commented on 15 Aug 2019\nHow to close log or set log lever?", "issue_status": "Closed", "issue_reporting_time": "2019-08-15T06:41:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "87": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3615", "issue_id": "#3615", "issue_summary": "[please close this issue ! ] mitmweb no request record in web ui", "issue_description": "LockGit commented on 14 Aug 2019 \u2022\nedited\nSteps to reproduce the problem:\nrun mitmweb\nWeb server listening at http://127.0.0.1:8081/\nProxy server listening at http://*:8080\nopen chrome browser view http://127.0.0.1:8081/\ncurl -x http://127.0.0.1:8080 http://www.baidu.com\nAny other comments? What have you tried so far?\nchrome browser web ui http://127.0.0.1:8081/ no http request record,\njust only can see request in command line like \uff1a\nWeb server listening at http://127.0.0.1:8081/\nProxy server listening at http://*:8080\n127.0.0.1:62414: clientconnect\n127.0.0.1:62414: clientdisconnect\nSystem information\n\u279c  ~ mitmproxy --version\nMitmproxy: 4.0.4\nPython:    3.6.4\nOpenSSL:   OpenSSL 1.1.0i  14 Aug 2018\nPlatform:  Darwin-17.7.0-x86_64-i386-64bit\n\n\u279c  ~ mitmweb --version\nMitmproxy: 4.0.4\nPython:    3.6.4\nOpenSSL:   OpenSSL 1.1.0i  14 Aug 2018\nPlatform:  Darwin-17.7.0-x86_64-i386-64bit\nNew discovery\nI find \nhttp://0.0.0.0:8081/#/flows    it's ok \nhttp://127.0.0.1:8081/#/flows   it's not ok \n\nwhy ? \nNew discovery , at 2019-08-14 21:08:25\nI know , oh my god , because install an old version mitmproxy before new version. \nit's browser javascript cache .\nso http://127.0.0.1:8081/#/flows   it's not ok \n\nplease close this issue !  ", "issue_status": "Closed", "issue_reporting_time": "2019-08-14T05:01:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "88": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3614", "issue_id": "#3614", "issue_summary": "please ignore", "issue_description": "zhangyoufu commented on 13 Aug 2019 \u2022\nedited\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2019-08-12T23:51:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "89": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3613", "issue_id": "#3613", "issue_summary": "Proxy Chaining issue", "issue_description": "rajarajan1888 commented on 11 Aug 2019\nSteps to reproduce the problem:\nHi,\nI've been facing this new issue with MiTM Proxy that I haven't faced before, at least until Dec 2018.\nI was doing proxy chaining between MiTMproxy and Charles proxy with the following setup:\nAndroid phone <---> Charles Proxy <---> Internet <---> MiTM Proxy <---> IP Server\nNote that the Android phone <---> IP Server connection is a TLS- encrypted connection over HTTPS for applications such as Netflix, Facebook, etc.\nThe Charles Proxy's and MiTM proxies SSL certificates were installed in the Android phone. The phone runs Android 6, so can trust user- installed SSL certificates. I also have MiTMproxy certificate installed in the Windows 10 machine that runs Charles proxy. The Charles proxy is in the same local network (and hence, a private IP) as the Android client. The MiTMproxy runs on an Amazon EC2 instance with public IP.\nThe purpose of having a MiTMproxy in public IP is to collect some TCP stats (like RTT, etc) on the IP side, upon routing the traffic data through the proxy.\nThe above setup successfully enabled me route the HTTPS/TLS-encrypted traffic over both the proxies and intercept the traffic on both the proxies using tcpdump, etc. This was till Dec 2018.\nHowever, when I recreated the same setup now, the MiTMProxy does not seem to be working fine with HTTPS. It works fine with HTTP though. I only see a \"ClientConnect\" from Event logs of MiTMProxy when I use HTTPS. Even as the client is successfully connected to the MiTMproxy, I immediately see a \"Client Disconnect\". The Android client is getting a connection timeout and there is no HTTPS data transfer to the client. This was never the case until Dec 2018.\nWhen I use Windows chrome browser as client, I see \"waiting for proxy tunnel\" message. And when I use MiTMproxy, I only see something like \"GET http://www.google.com\" . Note the URL doesn't say \"https\". Then, there is a 301 or 302 as response.", "issue_status": "Closed", "issue_reporting_time": "2019-08-10T21:50:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "90": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3611", "issue_id": "#3611", "issue_summary": "mitmproxy has crashed!", "issue_description": "zzzzfeng commented on 7 Aug 2019\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/master.py\", line 86, in run_loop\nloop()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 286, in run\nself._run()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 384, in _run\nself.event_loop.run()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 1484, in run\nreraise(*exc_info)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/compat.py\", line 58, in reraise\nraise value\nFile \"/usr/lib/python3.6/asyncio/events.py\", line 145, in _run\nself._callback(*self._args)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 1443, in faux_idle_callback\ncallback()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 572, in entering_idle\nself.draw_screen()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 587, in draw_screen\nself.screen.draw_screen(self.screen_size, canvas)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/raw_display.py\", line 804, in draw_screen\nassert cs in [None, \"0\", \"U\"], repr(cs)\nAssertionError: b'0'", "issue_status": "Closed", "issue_reporting_time": "2019-08-07T09:59:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "91": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3610", "issue_id": "#3610", "issue_summary": "iOS \u56fe\u7247\u83b7\u53d6\u5931\u8d25", "issue_description": "mengdg commented on 6 Aug 2019\nDescribe the bug\n\u516c\u53f8\u7684APP\u83b7\u53d6\u7528\u6237\u5934\u50cf\u65f6\uff0ciOS\u7cfb\u7edf9.3.1\u53ef\u4ee5\u6b63\u5e38\u83b7\u53d6\u56fe\u7247\uff0c11.4.1\u7cfb\u7edf\u7684iOS\u624b\u673a\u83b7\u53d6\u5934\u50cf\u5931\u8d25\uff0c\u63d0\u793a\u7684\u9519\u8bef\u4e3a\uff1a\n10.0.15.62:56562: CONNECT alogs.umengcloud.com:443\n<< Cannot establish TLS with client (sni: alogs.umengcloud.com): TlsException(\"SSL handshake error: SysCallError(-1, 'Unexpected EOF')\",)\nTo Reproduce\nSteps to reproduce the behavior:\n\u767b\u5f55Blued APP\u8fdb\u5165\u9644\u8fd1\u4eba\u9875\u9762\n2.\u67e5\u770b\u7528\u6237\u5934\u50cf\nExpected behavior\n\u5934\u50cf\u6ca1\u6709\u505a\u4efb\u4f55mock\uff0c\u5934\u50cf\u5747\u53ef\u4ee5\u6b63\u5e38\u52a0\u8f7d\nSmartphone (please complete the following information):\nDevice: [e.g. iPhone6] iPhone 7\nOS: [e.g. iOS8.1]\nBrowser [e.g. stock browser, safari]\nVersion [e.g. 22] 11.4.1\nAdditional context\n10.0.15.90:51474: clientconnect\n10.0.15.62:56560: CONNECT alogs.umeng.com:443\n<< Cannot establish TLS with client (sni: alogs.umeng.com): TlsException(\"SSL handshake error: SysCallError(-1, 'Unexpected EOF')\",)\n10.0.15.62:56560: clientdisconnect\n10.0.15.62:56562: clientconnect\n10.0.15.90:51474: POST https://alogs.umeng.com/app_logs\n<< 200 OK 171b\n10.0.15.62:56562: CONNECT alogs.umengcloud.com:443\n<< Cannot establish TLS with client (sni: alogs.umengcloud.com): TlsException(\"SSL handshake error: SysCallError(-1, 'Unexpected EOF')\",)\n10.0.15.62:56562: clientdisconnect\n10.0.15.90:51477: clientconnect\n10.0.15.90:51477: POST https://toblog.snssdk.com/service/2/app_log/ HTTP/2.0\n<< 200 91b", "issue_status": "Closed", "issue_reporting_time": "2019-08-06T10:12:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "92": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3608", "issue_id": "#3608", "issue_summary": "[WinError 10053] ConnectionAbortedError: mitmproxy.exceptions.TcpDisconnect:", "issue_description": "icedrunkard commented on 5 Aug 2019\nSteps to reproduce the problem:\n1.mitmdump\nAny other comments? What have you tried so far?\n127.0.0.1:53793: Traceback (most recent call last):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 97, in write\nr = self.o.write(v)\nFile \"c:\\python37\\lib\\socket.py\", line 607, in write\nreturn self._sock.send(b)\nConnectionAbortedError: [WinError 10053] \u4f60\u7684\u4e3b\u673a\u4e2d\u7684\u8f6f\u4ef6\u4e2d\u6b62\u4e86\u4e00\u4e2a\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\u3002\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\server.py\", line 121, in handle\nroot_layer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 23, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\tls.py\", line 286, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 83, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 188, in call\nif not self._process_flow(flow):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 262, in _process_flow\nreturn self.handle_upstream_connect(f)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 233, in handle_upstream_connect\nself.send_response(f.response)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 42, in send_response\nself.send_response_body(response, [response.data.content])\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 59, in send_response_body\nself.client_conn.wfile.write(chunk)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 101, in write\nraise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: [WinError 10053] \u4f60\u7684\u4e3b\u673a\u4e2d\u7684\u8f6f\u4ef6\u4e2d\u6b62\u4e86\u4e00\u4e2a\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\u3002\n127.0.0.1:53789: Traceback (most recent call last):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 97, in write\nr = self.o.write(v)\nFile \"c:\\python37\\lib\\socket.py\", line 607, in write\nreturn self._sock.send(b)\nConnectionAbortedError: [WinError 10053] \u4f60\u7684\u4e3b\u673a\u4e2d\u7684\u8f6f\u4ef6\u4e2d\u6b62\u4e86\u4e00\u4e2a\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\u3002\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\server.py\", line 121, in handle\nroot_layer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 23, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\tls.py\", line 286, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 83, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 188, in call\nif not self._process_flow(flow):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 262, in _process_flow\nreturn self.handle_upstream_connect(f)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 233, in handle_upstream_connect\nself.send_response(f.response)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 42, in send_response\nself.send_response_body(response, [response.data.content])\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 59, in send_response_body\nself.client_conn.wfile.write(chunk)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 101, in write\nraise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: [WinError 10053] \u4f60\u7684\u4e3b\u673a\u4e2d\u7684\u8f6f\u4ef6\u4e2d\u6b62\u4e86\u4e00\u4e2a\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\u3002\nTraceback (most recent call last):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 97, in write\nr = self.o.write(v)\nFile \"c:\\python37\\lib\\socket.py\", line 607, in write\nreturn self._sock.send(b)\nConnectionAbortedError: [WinError 10053] \u4f60\u7684\u4e3b\u673a\u4e2d\u7684\u8f6f\u4ef6\u4e2d\u6b62\u4e86\u4e00\u4e2a\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\u3002\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\server.py\", line 121, in handle\nroot_layer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 23, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\tls.py\", line 286, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 83, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 188, in call\nif not self._process_flow(flow):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 262, in _process_flow\nreturn self.handle_upstream_connect(f)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 233, in handle_upstream_connect\nself.send_response(f.response)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 42, in send_response\nself.send_response_body(response, [response.data.content])\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 59, in send_response_body\nself.client_conn.wfile.write(chunk)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 101, in write\nraise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: [WinError 10053] \u4f60\u7684\u4e3b\u673a\u4e2d\u7684\u8f6f\u4ef6\u4e2d\u6b62\u4e86\u4e00\u4e2a\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\u3002\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 97, in write\nr = self.o.write(v)\nFile \"c:\\python37\\lib\\socket.py\", line 607, in write\nreturn self._sock.send(b)\nConnectionAbortedError: [WinError 10053] \u4f60\u7684\u4e3b\u673a\u4e2d\u7684\u8f6f\u4ef6\u4e2d\u6b62\u4e86\u4e00\u4e2a\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\u3002\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\server.py\", line 121, in handle\nroot_layer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 23, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\tls.py\", line 286, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 83, in call\nlayer()\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 188, in call\nif not self._process_flow(flow):\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 262, in _process_flow\nreturn self.handle_upstream_connect(f)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 233, in handle_upstream_connect\nself.send_response(f.response)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 42, in send_response\nself.send_response_body(response, [response.data.content])\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 59, in send_response_body\nself.client_conn.wfile.write(chunk)\nFile \"c:\\python37\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 101, in write\nraise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: [WinError 10053] \u4f60\u7684\u4e3b\u673a\u4e2d\u7684\u8f6f\u4ef6\u4e2d\u6b62\u4e86\u4e00\u4e2a\u5df2\u5efa\u7acb\u7684\u8fde\u63a5\u3002\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nSystem information\nmitmdump --version\nMitmproxy: 4.0.4\nPython: 3.7.3\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Windows-10-10.0.17763-SP0", "issue_status": "Closed", "issue_reporting_time": "2019-08-05T07:43:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "93": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3607", "issue_id": "#3607", "issue_summary": "Certificate verification, unkown CA", "issue_description": "kubistika commented on 4 Aug 2019 \u2022\nedited\nAs mitmproxy using OpenSSL to verify certificates, mitmproxy won't allow HTTPS communication with an HTTPS server who's certificate is signed by a CA that is not known by OpenSSL. In order to solve my problem, I tried to run mitmdump with --set ssl_verify_upstream_trusted_ca=PEM_CA, then mitmproxy was able to connect via HTTPS to that site, but was using only the custom CA, instead of using it + all of OpenSSL known CAs, so all other HTTPS connections to the internet failed. (unable to get local issuer certificate error...).\nHow should this one be handled? Isn't there an option for telling mitmproxy to trust a custom CA in addition to all of OpenSSL known CAs?", "issue_status": "Closed", "issue_reporting_time": "2019-08-04T11:06:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "94": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3606", "issue_id": "#3606", "issue_summary": "Upon running mitmproxy Windows Installer avast antivirus is giving Win32:Malware-Gen Warning", "issue_description": "player67 commented on 3 Aug 2019\nHi!\nUpon running mitmproxy windows installer to download mitimproxy Avast antivirus is giving Win32:Malware-gen warning and blocking it. Is mitmproxy windows installer malware affected?\nThanks", "issue_status": "Closed", "issue_reporting_time": "2019-08-03T11:34:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "95": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3605", "issue_id": "#3605", "issue_summary": "certutil.exe import error on windows 10", "issue_description": "vincenthawke commented on 2 Aug 2019\nI managed to manually import the certificate but wish to use the console in the future where I encountered this error:\nC:\\Users\\User\\Desktop>certutil.exe -importpfx Root mitmproxy-ca-cert.p12\nEnter PFX password:\nCertUtil: -importPFX command FAILED: 0x80092007 (-2146885625 CRYPT_E_SELF_SIGNED)\nCertUtil: The specified certificate is self signed.\nVersion information:\nMitmproxy: 4.0.4\nPython:    3.6.8\nOpenSSL:   OpenSSL 1.1.0i  14 Aug 2018\nPlatform:  Windows-10-10.0.17763-SP0", "issue_status": "Closed", "issue_reporting_time": "2019-08-01T21:51:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "96": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3604", "issue_id": "#3604", "issue_summary": "AP Isolation is set in wifi, how to set up mitmproxy", "issue_description": "mansonami commented on 1 Aug 2019\nSteps to reproduce the problem:\nstart: mitmdump\nProxy server listening at http://*:8080\nmodify phone wifi proxy same to MAC\nAny other comments? What have you tried so far?\nSince AP Isolation, mitmdump can catch the phone traffic\uff0c how to set in mitmproxy to avoid AP Isolation?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2019-08-01T09:22:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "97": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3602", "issue_id": "#3602", "issue_summary": "mitmdump hang after launching several minutes", "issue_description": "imom0 commented on 1 Aug 2019 \u2022\nedited\nSteps to reproduce the problem:\n1.Launch mitmdump with args: mitmdump -p 8082 --ignore=www.dpfile.com:443 --ignore=dianping.com:443 --ignore=report.meituan.com:443 --ignore=meituan.net:443 --ignore=push-hotel.meituan.com:443 --no-http2 --ssl-insecure -s myscript.py\n2.The script do these things: read from local file, get upstream proxy config, use it for several mins, use another, in response, change some content like:\ndef response(flow):\n    if '.js' in flow.request.url and 'order' in flow.request.url:\n        flow.response.text = flow.response.text.replace('&&\"ABORT\"===', '&&\"RESCHEDULED\"===')\n    if 'ebk/consume/order.html' in flow.request.url:\n        flow.response.text = flow.response.text.replace(\"\"\"{{item.checkInDate | date: 'MM-dd'}}\"\"\", \"\"\"{{item.checkInDate | date: 'yyyy-MM-dd'}}\"\"\")\n        flow.response.text = flow.response.text.replace(\"\"\"{{item.checkOutDate | date: 'MM-dd'}}\"\"\", \"\"\"{{item.checkOutDate | date: 'yyyy-MM-dd'}}\"\"\")\n        flow.response.text = flow.response.text.replace(\"\"\"{{item.price/100\"\"\", \"\"\"{{ (item.totalFee || item.price)/100\"\"\")\n        flow.response.text = flow.response.text.replace(\"\"\"{{item.rpInfo}}\"\"\", \"\"\"{{item.goodsId}}\"\"\")\n        flow.response.text = flow.response.text.replace(\"\"\"(item.cancelRules\"\"\", \"\"\"(false\"\"\")\n3.10 mins or longer, mitmdump service hang with no response.\nAny other comments? What have you tried so far?\ndo not use upstream proxies only change the content, the problem also exists.\nSystem information\nMitmproxy: 4.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.4.0-142-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2019-08-01T01:22:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "98": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3601", "issue_id": "#3601", "issue_summary": "Cannot parse ActiveSync 16.0 messages involving concepts", "issue_description": "user185953 commented on 31 Jul 2019\nSteps to reproduce the problem:\nObserve Exchange ActiveSync 16.0 network traffic\nTransfer a concept between phone and exchange\nTry to see content\nSystem information\nMitmproxy: 4.0.4\nPython: 3.6.8\nOpenSSL: OpenSSL 1.1.0i\nThis is caused by PyWBXMLDecoder crashing on unknown tokens and #3596", "issue_status": "Closed", "issue_reporting_time": "2019-07-31T08:00:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "99": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3599", "issue_id": "#3599", "issue_summary": "cut.clip request.raw_content crashes mitmproxy", "issue_description": "christoph-winf commented on 30 Jul 2019\nSteps to reproduce the problem:\nopen an set of with recorded flows with mitmproxy\nchoose a flow press \"CTRL\" + \"L\" (lowcase L) and insert \"@Focus request.raw_content\" to start the cut.clip command to copy the raw content of the request\nmitmproxy crashes (see error message below)\ncrash message:\n$ mitmproxy -r 190709_mpow_experiment1\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/master.py\", line 86, in run_loop\nloop()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 286, in run\nself._run()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 384, in _run\nself.event_loop.run()\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 1484, in run\nreraise(*exc_info)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/compat.py\", line 58, in reraise\nraise value\nFile \"/usr/lib/python3.6/asyncio/events.py\", line 145, in _run\nself._callback(*self._args)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/raw_display.py\", line 404, in\nevent_loop, callback, self.get_available_raw_input())\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/raw_display.py\", line 502, in parse_input\ncallback(processed, processed_codes)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 411, in _update\nself.process_input(keys)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/main_loop.py\", line 511, in process_input\nk = self._topmost_widget.keypress(self.screen_size, k)\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/tools/console/window.py\", line 309, in keypress\nk = super().keypress(size, k)\nFile \"/usr/local/lib/python3.6/dist-packages/urwid/container.py\", line 1119, in keypress\nreturn self.footer.keypress((maxcol,),key)\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/tools/console/statusbar.py\", line 187, in keypress\nreturn self.ab.keypress(*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/tools/console/statusbar.py\", line 135, in keypress\nself.prompt_execute(self._w.get_edit_text())\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/tools/console/statusbar.py\", line 155, in prompt_execute\nmsg = p(txt)\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/tools/console/commandexecutor.py\", line 17, in call\nret = self.master.commands.execute(cmd)\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/command.py\", line 245, in execute\nreturn self.call_strings(parts[0], parts[1:])\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/command.py\", line 233, in call_strings\nreturn self.commands[path].call(args)\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/command.py\", line 105, in call\nret = self.func(*self.prepare_args(args))\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/command.py\", line 275, in wrapper\nreturn function(*args, **kwargs)\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/addons/cut.py\", line 133, in clip\nfp.write(strutils.always_str(v))\nFile \"/usr/local/lib/python3.6/dist-packages/mitmproxy/utils/strutils.py\", line 24, in always_str\nreturn str_or_bytes.decode(*decode_args)\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x9c in position 1: invalid start byte\nmitmproxy has crashed!\nPlease lodge a bug report at:\nhttps://github.com/mitmproxy/mitmproxy\nAny other comments? What have you tried so far?\nSame problem occures with this cut.clip commands:\n\"request.text\",\n\"request.content\",\nSystem information\n$ mitmproxy --version\nMitmproxy: 4.0.4\nPython: 3.6.8\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-4.15.0-55-generic-x86_64-with-LinuxMint-19.1-tessa", "issue_status": "Closed", "issue_reporting_time": "2019-07-30T10:58:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "100": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3595", "issue_id": "#3595", "issue_summary": "Boot failure, please", "issue_description": "woshisanhuo commented on 23 Jul 2019\nroot@ubuntu:/# mitmproxy -P http://127.0.0.1:1215 -p 8006\nTraceback (most recent call last):\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 574, in _build_master\nws.require(requires)\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 892, in require\nneeded = self.resolve(parse_requirements(requirements))\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 783, in resolve\nraise VersionConflict(dist, req).with_context(dependent_req)\npkg_resources.ContextualVersionConflict: (urwid 2.0.1 (/usr/lib/python3/dist-packages), Requirement.parse('urwid<1.4,>=1.3.1'), {'mitmproxy'})\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/usr/bin/mitmproxy\", line 6, in\nfrom pkg_resources import load_entry_point\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 3088, in\n@_call_aside\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 3072, in _call_aside\nf(*args, **kwargs)\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 3101, in _initialize_master_working_set\nworking_set = WorkingSet._build_master()\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 576, in _build_master\nreturn cls._build_from_requirements(requires)\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 589, in _build_from_requirements\ndists = ws.resolve(reqs, Environment())\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 778, in resolve\nraise DistributionNotFound(req, requirers)\npkg_resources.DistributionNotFound: The 'urwid<1.4,>=1.3.1' distribution was not found and is required by mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2019-07-23T06:11:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "101": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3592", "issue_id": "#3592", "issue_summary": "mitmproxy only allow to one device to connect to the internet?", "issue_description": "Waha-Liu88 commented on 19 Jul 2019 \u2022\nedited\nSteps to reproduce the problem:\n1.one device connect the internet successfully.\n2. another device can't connect the internet\n3.\nAny other comments? What have you tried so far?\nso, I wan to know the mitmproxy only allow one device to connnect?\nif no, how to solve the problem? thanks.\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2019-07-19T02:05:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "102": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3589", "issue_id": "#3589", "issue_summary": "Simple addon doesn't work", "issue_description": "moldis commented on 18 Jul 2019\nSteps to reproduce the problem:\nsudo apt-get install mitmproxy (debian)\nmitmproxy -s ./myaddon.py\nAny other comments? What have you tried so far?\nCode for addon:\nfrom mitmproxy import ctx\nclass AdsResponse:\ndef request(self, flow):\nflow.request.host = \"mitmproxy.org\"\naddons = [\nAdsResponse()\n]\nSystem information\nmitmproxy --version 0.18.2", "issue_status": "Closed", "issue_reporting_time": "2019-07-18T09:36:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "103": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3588", "issue_id": "#3588", "issue_summary": "Permission denied: '/root/.mitmproxy'", "issue_description": "josh7 commented on 18 Jul 2019 \u2022\nedited\nI installed mitmproxy in django project and run it in docker, but getting this problem.\nserver: Ubuntu: 18.04\nclass StartView(APIView):\n\n    def get(self, request):\n        path = os.path.join(BASE_DIR, 'mockup', 'mock_addon.py')\n        os.system('mitmdump -s %s -p %s' % (path, PROXY_PORT))\n        return Response({'msg': '1'})\nmitm_1        | Traceback (most recent call last):\nmitm_1        |   File \"/usr/local/bin/mitmdump\", line 10, in <module>\nmitm_1        |     sys.exit(mitmdump())\nmitm_1        |   File \"/usr/local/lib/python3.6/site-packages/mitmproxy/tools/_main.py\", line 166, in mitmdump\nmitm_1        |     m = run(dump.DumpMaster, cmdline.mitmdump, args, extra)\nmitm_1        |   File \"/usr/local/lib/python3.6/site-packages/mitmproxy/tools/_main.py\", line 95, in run\nmitm_1        |     pconf = process_options(parser, opts, args)\nmitm_1        |   File \"/usr/local/lib/python3.6/site-packages/mitmproxy/tools/_main.py\", line 59, in process_options\nmitm_1        |     return proxy.config.ProxyConfig(opts)\nmitm_1        |   File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/config.py\", line 43, in __init__\nmitm_1        |     self.configure(options, set(options.keys()))\nmitm_1        |   File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/config.py\", line 60, in configure\nmitm_1        |     CONF_BASENAME\nmitm_1        |   File \"/usr/local/lib/python3.6/site-packages/mitmproxy/certs.py\", line 184, in from_store\nmitm_1        |     key, ca = cls.create_store(path, basename)\nmitm_1        |   File \"/usr/local/lib/python3.6/site-packages/mitmproxy/certs.py\", line 201, in create_store\nmitm_1        |     os.makedirs(path)\nmitm_1        |   File \"/usr/local/lib/python3.6/os.py\", line 220, in makedirs\nmitm_1        |     mkdir(name, mode)\nmitm_1        | PermissionError: [Errno 13] Permission denied: '/root/.mitmproxy'", "issue_status": "Closed", "issue_reporting_time": "2019-07-18T06:26:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "104": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3583", "issue_id": "#3583", "issue_summary": "Weird behavior, cannot visit a specific website", "issue_description": "i54cxy commented on 10 Jul 2019\nI can visit most website except for linkedin.\nThis is a weird issue for me and I haven't found any solution yet. Maybe it's a simple mistake or configuration error on my end but I really couldn't figure it out myself so I'm hoping that I can get some help here.\nSteps to reproduce the problem:\nI installed ubuntu on my windows laptop using virtualbox. To replicate the problem, the following steps are done on a newly installed ubuntu.\nsudo apt install python3-pip\nsudo pip3 install -U pip\nsudo pip3 install mitmproxy\nAfter I installed mitmproxy like that, I ran mitmproxy or mitmweb to start a simple proxy. I used firefox, configured its proxy setting to 127.0.0.1:8080, and visited google. Then I had the page that says software issue is preventing me from visiting google. I then went to mitm.it to install the certificate. After that I could visit google, and in fact a lot of other sites like facebook, pinterest, twitter, dmv, etc, but I just cannot visit linkedin. As soon as I hit enter in the address bar the webpage kinda refreshed and stayed at previous page. I tried google linkedin and visit them from there but it's still not responding and giving me blank pages if opened in a new tab.\nAny other comments? What have you tried so far?\nPart of the output from mitmweb looks like this when I tried visit linkedin.com:\n127.0.0.1:47522: clientconnect\n127.0.0.1:47524: clientconnect\n127.0.0.1:47526: clientconnect\n127.0.0.1:47528: clientconnect\n127.0.0.1:47530: clientconnect\n127.0.0.1:47532: clientconnect\n::ffff:127.0.0.1:47510: HTTP/2 connection terminated by client: error code: 0, last stream id: 0, additional data: None\n127.0.0.1:47510: clientdisconnect\n::ffff:127.0.0.1:47508: HTTP/2 connection terminated by client: error code: 0, last stream id: 0, additional data: None\n127.0.0.1:47508: clientdisconnect\n::ffff:127.0.0.1:47518: HTTP/2 connection terminated by client: error code: 0, last stream id: 0, additional data: None\n127.0.0.1:47518: clientdisconnect\n::ffff:127.0.0.1:47514: HTTP/2 connection terminated by client: error code: 0, last stream id: 0, additional data: None\n127.0.0.1:47514: clientdisconnect\n::ffff:127.0.0.1:47512: HTTP/2 connection terminated by client: error code: 0, last stream id: 0, additional data: None\nI have tried curl as well:\nConnecting to google is fine:\n~$ curl -V\ncurl 7.58.0 (x86_64-pc-linux-gnu) libcurl/7.58.0 OpenSSL/1.1.1 zlib/1.2.11 libidn2/2.0.4 libpsl/0.19.1 (+libidn2/2.0.4) nghttp2/1.30.0 librtmp/2.3\nRelease-Date: 2018-01-24\nProtocols: dict file ftp ftps gopher http https imap imaps ldap ldaps pop3 pop3s rtmp rtsp smb smbs smtp smtps telnet tftp \nFeatures: AsynchDNS IDN IPv6 Largefile GSS-API Kerberos SPNEGO NTLM NTLM_WB SSL libz TLS-SRP HTTP2 UnixSockets HTTPS-proxy PSL\n~$ curl -Ikv --proxy 127.0.0.1:8080 https://www.google.com\n* Rebuilt URL to: https://www.google.com/\n*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)\n* allocate connect buffer!\n* Establish HTTP proxy tunnel to www.google.com:443\n> CONNECT www.google.com:443 HTTP/1.1\n> Host: www.google.com:443\n> User-Agent: curl/7.58.0\n> Proxy-Connection: Keep-Alive\n> \n< HTTP/1.1 200 Connection established\nHTTP/1.1 200 Connection established\n< \n\n* Proxy replied 200 to CONNECT request\n* CONNECT phase completed!\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* successfully set certificate verify locations:\n*   CAfile: /etc/ssl/certs/ca-certificates.crt\n  CApath: /etc/ssl/certs\n* (304) (OUT), TLS handshake, Client hello (1):\n* CONNECT phase completed!\n* CONNECT phase completed!\n* (304) (IN), TLS handshake, Server hello (2):\n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, Unknown (8):\n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, Certificate (11):\n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, CERT verify (15):\n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, Finished (20):\n* (304) (OUT), TLS change cipher, Client hello (1):\n* (304) (OUT), TLS Unknown, Certificate Status (22):\n* (304) (OUT), TLS handshake, Finished (20):\n* SSL connection using unknown / TLS_AES_256_GCM_SHA384\n* ALPN, server accepted to use h2\n* Server certificate:\n*  subject: CN=www.google.com\n*  start date: Jul  7 22:33:38 2019 GMT\n*  expire date: Jul  8 22:33:38 2021 GMT\n*  issuer: CN=mitmproxy; O=mitmproxy\n*  SSL certificate verify result: self signed certificate in certificate chain (19), continuing anyway.\n* Using HTTP2, server supports multi-use\n* Connection state changed (HTTP/2 confirmed)\n* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\n* (304) (OUT), TLS Unknown, Unknown (23):\n* (304) (OUT), TLS Unknown, Unknown (23):\n* (304) (OUT), TLS Unknown, Unknown (23):\n* Using Stream ID: 1 (easy handle 0x55ab8f543580)\n* (304) (OUT), TLS Unknown, Unknown (23):\n> HEAD / HTTP/2\n> Host: www.google.com\n> User-Agent: curl/7.58.0\n> Accept: */*\n> \n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, Newsession Ticket (4):\n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, Newsession Ticket (4):\n* (304) (IN), TLS Unknown, Unknown (23):\n* Connection state changed (MAX_CONCURRENT_STREAMS updated)!\n* (304) (OUT), TLS Unknown, Unknown (23):\n* (304) (IN), TLS Unknown, Unknown (23):\n* (304) (IN), TLS Unknown, Unknown (23):\n* (304) (OUT), TLS Unknown, Unknown (23):\n* (304) (IN), TLS Unknown, Unknown (23):\n< HTTP/2 200 \nHTTP/2 200 \nBut connecting to linkedin is not successful:\n~$ curl -Ikv --proxy 127.0.0.1:8080 https://www.linkedin.com\n* Rebuilt URL to: https://www.linkedin.com/\n*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)\n* allocate connect buffer!\n* Establish HTTP proxy tunnel to www.linkedin.com:443\n> CONNECT www.linkedin.com:443 HTTP/1.1\n> Host: www.linkedin.com:443\n> User-Agent: curl/7.58.0\n> Proxy-Connection: Keep-Alive\n> \n< HTTP/1.1 200 Connection established\nHTTP/1.1 200 Connection established\n< \n\n* Proxy replied 200 to CONNECT request\n* CONNECT phase completed!\n* ALPN, offering h2\n* ALPN, offering http/1.1\n* successfully set certificate verify locations:\n*   CAfile: /etc/ssl/certs/ca-certificates.crt\n  CApath: /etc/ssl/certs\n* (304) (OUT), TLS handshake, Client hello (1):\n* CONNECT phase completed!\n* CONNECT phase completed!\n* (304) (IN), TLS handshake, Server hello (2):\n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, Unknown (8):\n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, Certificate (11):\n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, CERT verify (15):\n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, Finished (20):\n* (304) (OUT), TLS change cipher, Client hello (1):\n* (304) (OUT), TLS Unknown, Certificate Status (22):\n* (304) (OUT), TLS handshake, Finished (20):\n* SSL connection using unknown / TLS_AES_256_GCM_SHA384\n* ALPN, server accepted to use h2\n* Server certificate:\n*  subject: CN=www.linkedin.com\n*  start date: Jul  7 22:35:31 2019 GMT\n*  expire date: Jul  8 22:35:31 2021 GMT\n*  issuer: CN=mitmproxy; O=mitmproxy\n*  SSL certificate verify result: self signed certificate in certificate chain (19), continuing anyway.\n* Using HTTP2, server supports multi-use\n* Connection state changed (HTTP/2 confirmed)\n* Copying HTTP/2 data in stream buffer to connection buffer after upgrade: len=0\n* (304) (OUT), TLS Unknown, Unknown (23):\n* (304) (OUT), TLS Unknown, Unknown (23):\n* (304) (OUT), TLS Unknown, Unknown (23):\n* Using Stream ID: 1 (easy handle 0x56270c7f0580)\n* (304) (OUT), TLS Unknown, Unknown (23):\n> HEAD / HTTP/2\n> Host: www.linkedin.com\n> User-Agent: curl/7.58.0\n> Accept: */*\n> \n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, Newsession Ticket (4):\n* (304) (IN), TLS Unknown, Certificate Status (22):\n* (304) (IN), TLS handshake, Newsession Ticket (4):\n* (304) (IN), TLS Unknown, Unknown (23):\n* Connection state changed (MAX_CONCURRENT_STREAMS updated)!\n* (304) (OUT), TLS Unknown, Unknown (23):\n* (304) (IN), TLS Unknown, Unknown (23):\n* (304) (IN), TLS Unknown, Unknown (23):\n* (304) (OUT), TLS Unknown, Unknown (23):\n* (304) (IN), TLS Unknown, Unknown (23):\n* Connection #0 to host 127.0.0.1 left intact\ncurl: (16) Error in the HTTP2 framing layer\nFor all the websites I've tried so far, linkedin is the only website that cannot be visited.\nI've also tried install mitmproxy on my original windows system and it can visit linkedin just fine.\nSystem information\n~$ mitmproxy --version\nMitmproxy: 4.0.4\nPython:    3.6.8\nOpenSSL:   OpenSSL 1.1.1  11 Sep 2018\nPlatform:  Linux-4.18.0-25-generic-x86_64-with-Ubuntu-18.04-bionic\nFirefox version: Firefox Quantum 67.0.4 64bit", "issue_status": "Closed", "issue_reporting_time": "2019-07-09T23:14:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "105": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3582", "issue_id": "#3582", "issue_summary": "No module named 'mitmproxy.models'", "issue_description": "arunkumarmn9 commented on 8 Jul 2019\ni was trying to modify the response body so i followed the example modify_response_body.py\nbut i'm getting the above error while running\n./mitmproxy -s modify_response_body.py\ncode: modify_response_body.py\n# Usage: mitmdump -s \"modify_response_body.py mitmproxy bananas\"\n# (this script works best with --anticache)\nfrom mitmproxy.models import decoded\n\n\ndef start(context, argv):\n    if len(argv) != 3:\n        raise ValueError('Usage: -s \"modify_response_body.py old new\"')\n    # You may want to use Python's argparse for more sophisticated argument\n    # parsing.\n    context.old, context.new = argv[1], argv[2]\n\n\ndef response(context, flow):\n    with decoded(flow.response):  # automatically decode gzipped responses.\n        flow.response.content = flow.response.content.replace(\n            context.old,\n            context.new)\nmy version:\nMitmproxy: 4.0.4\nPython: 3.6.8\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-4.15.0-54-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Closed", "issue_reporting_time": "2019-07-08T11:04:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "106": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3581", "issue_id": "#3581", "issue_summary": "mitmproxy to speedup ci servers [paid mission]", "issue_description": "jpic commented on 8 Jul 2019\nHi all,\nThis is a proposal for a task where we have a little budget of $500. I did this in the past so I know it's possible and works really, really great, but i lost the code and it was very hacky because that was 4 years ago. It was a like 200 line long python I did in a week or so by reverse engineering the python internal API of mitmproxy, and it's probably easier today, particularely if you are already an mitmproxy contributor.\nYou know when developers make applications, they like to have a CI server like gitlab-ci for example that will execute a bunch of tests on every git push.\nThe tests will typically go through installing all dependencies, such as from PyPi, RubyGem, NPM, and so on.\nThis is a big waste of time and bandwidth to re-download packages for every push, also blocks CI which means other devs may have to wait in line for their tests to happen.\nThis mission I'm proposing doesn't have to be in mitmproxy repo itself, it can be a separate app.\nThe user story to solve is:\nAs a sysadmin, I run a command that starts mitmproxy with a cache directory, and everytime a package is downloaded through the proxy.*\nWhy not use an existing caching proxy ? Well:\nSquid apparently does not support caching for HTTPS anymore due to abuse by shitty governments, it only supports CONNECT tunnel now,\nAny other solution ? Not that I know of.\nSorry for the small budget, we should be able to unlock more if we see this going in the right direction.\nHave a great day", "issue_status": "Closed", "issue_reporting_time": "2019-07-08T05:02:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "107": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3578", "issue_id": "#3578", "issue_summary": "exported curl command is not properly quoted when payload has single quote", "issue_description": "contrun commented on 6 Jul 2019\nSteps to reproduce the problem:\nhttp_proxy=http://127.0.0.1:8090 curl --data-binary \"'test'=string\" example.com\nExport flow as curl command\nRun the exported curl command curl -H 'Host:example.com' -H 'User-Agent:curl/7.64.0' -H 'Accept:*/*' -H 'Proxy-Connection:Keep-Alive' -H 'Content-Length:13' -H 'Content-Type:application/x-www-form-urlencoded' -X POST 'http://example.com/' --data-binary '\\'test\\'=string'\nAny other comments? What have you tried so far?\nshellcheck wiki SC1003 has more information above how to escape single quote inside single quote.\nI copied its description to here.\nProblematic code:\necho 'This is not how it\\'s done'.\nCorrect code:\necho 'This is how it'\\''s done'.\nSystem information\nMitmproxy: 4.0.4\nPython:    3.7.3\nOpenSSL:   OpenSSL 1.0.2r  26 Feb 2019\nPlatform:  Linux-4.19.49-x86_64-with-glibc2.2.5", "issue_status": "Closed", "issue_reporting_time": "2019-07-06T07:10:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "108": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3577", "issue_id": "#3577", "issue_summary": "mitmdump does not call configure of addon consistently.", "issue_description": "HasBert commented on 2 Jul 2019 \u2022\nedited\nHey guys,\nI'm using the mitmproxy/mitmproxy:latest docker image. I tried 2 diffrent addons with mitmdump (and mitmweb). Both scripts does have a configure function implemented, which will be called in the mitmproxy lifecycle. The problem is, that one of the scripts call the def configure() function, the other one does not. The def load() function is called in both scripts. There are no errors I can see in the console.\nSteps to reproduce the problem:\nCreate a jsondump.py with the source from here (copy&paste), and place a ctx.log.info('configuring') inside the configure() function of the script.\nCreate a storemongo.py with the source from here(copy&paste), and place a ctx.log.info('configuring') inside the configure() function of the script.\nPlace both files in a directory, e.g /your/path/addons these will be loaded into the container with docker volumes.\nCreate a config.yml file and place it inside your /.mitmproxy/ directory.\nExecute docker-compose up with a similar file like the one attached in the sources below.\nMove into that container docker exec -it <container-id> /bin/sh and install dependencies for the addons: pip3 install requests for jsondump.py pip3 install pymongo for storemongo.py.\nCommit that container docker commit <container-id> some/name:sometag, so changes will persist after recreating the container.\nEdit your docker-compose.yml file to use that committed container:\nservices:\n  mitmdump:\n    image: some/name:sometag\nRun your container docker-compose up with the docker-compose command mitmdump -s ~/addons/storemongo.py --> You can see the line \"configuring\" inside the logs.\nRun your container docker-compose up with the docker-compose command mitmdump -s ~/addons/jsondump.py --> The line \"configuring\" is not showing up.\nAny other comments? What have you tried so far?\nI also tried to log the ctx.options.dump_destination (inside the load() function, which gets called!) I placed inside the config.yml, but the value is always the default value (jsondump.out), so the ctx.option does also not work properly in this script.\nI also deleted all mitmproxy images and re-downloaded them, but still there is no change to this behaviour.\nI can remember, that this one worked for me a month ago, but I haven't changed my own image container since then, I just played around with several options, and the images does not persist if you docker rm <container-id>, what I surely did!\nSources\ndocker-compose.yml\nversion: \"3.7\"\n\nservices:\n  mitmdump:\n    image: mitmproxy/mitmproxy:latest\n    #restart: unless-stopped\n    #container_name: mitmdump \n    command: mitmdump -s ~/addons/jsondump.py #~/addons/storemongo.py\n    volumes: \n      - ${MITM_PROXY_DATA_PATH}/mitmproxy/addons:/home/mitmproxy/addons\n      - ${MITM_PROXY_DATA_PATH}/mitmproxy/dump:/home/mitmproxy/dump\n      - ${MITM_PROXY_DATA_PATH}/mitmproxy/.mitmproxy:/home/mitmproxy/.mitmproxy\n    tty: true\nconfig.yml\ndump_destination: \"/home/mitmproxy/dump/output.json\"\ndump_encodecontent: true\nSystem information\nMitmproxy: 4.0.4\nPython: 3.6.3\nOpenSSL: OpenSSL 1.0.2o 27 Mar 2018\nPlatform: Linux-4.15.0-54-generic-x86_64-with\ndocker version: 18.09.6\ndocker-compose version: 1.24.0, build 0aa59064\nCan anyone imagine, why the configure function doesn't get called inside the jsondump.py file?\nI appreciate any kind of help or advise. Kind regards", "issue_status": "Closed", "issue_reporting_time": "2019-07-02T12:17:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "109": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3576", "issue_id": "#3576", "issue_summary": "search some test. crash", "issue_description": "hhhaiai commented on 2 Jul 2019\nSteps to reproduce the problem:\ncustom parser metod.\nsearch text \uff08/\uff0c then \u201cxxx\u201d\uff09\nenter \uff0cthen crash.\nTraceback (most recent call last):\n  File \"/Users/sanbo/dev/mitm/mitmproxy/mitmproxy/master.py\", line 86, in run_loop\n    loop()\n  File \"/Users/sanbo/dev/mitm/mitmproxy/venv/lib/python3.7/site-packages/urwid/main_loop.py\", line 286, in run\n    self._run()\n  File \"/Users/sanbo/dev/mitm/mitmproxy/venv/lib/python3.7/site-packages/urwid/main_loop.py\", line 384, in _run\n    self.event_loop.run()\n  File \"/Users/sanbo/dev/mitm/mitmproxy/venv/lib/python3.7/site-packages/urwid/main_loop.py\", line 1484, in run\n    reraise(*exc_info)\n  File \"/Users/sanbo/dev/mitm/mitmproxy/venv/lib/python3.7/site-packages/urwid/compat.py\", line 58, in reraise\n    raise value\n  File \"/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py\", line 88, in _run\n    self._context.run(self._callback, *self._args)\n  File \"/Users/sanbo/dev/mitm/mitmproxy/venv/lib/python3.7/site-packages/urwid/raw_display.py\", line 404, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/Users/sanbo/dev/mitm/mitmproxy/venv/lib/python3.7/site-packages/urwid/raw_display.py\", line 502, in parse_input\n    callback(processed, processed_codes)\n  File \"/Users/sanbo/dev/mitm/mitmproxy/venv/lib/python3.7/site-packages/urwid/main_loop.py\", line 411, in _update\n    self.process_input(keys)\n  File \"/Users/sanbo/dev/mitm/mitmproxy/venv/lib/python3.7/site-packages/urwid/main_loop.py\", line 511, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/Users/sanbo/dev/mitm/mitmproxy/mitmproxy/tools/console/window.py\", line 309, in keypress\n    k = super().keypress(size, k)\n  File \"/Users/sanbo/dev/mitm/mitmproxy/venv/lib/python3.7/site-packages/urwid/container.py\", line 1119, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/Users/sanbo/dev/mitm/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 192, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/Users/sanbo/dev/mitm/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 139, in keypress\n    self.command_history.add_command(self._w.cbuf, True)\nAttributeError: 'Edit' object has no attribute 'cbuf'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 5.0.0.dev (+237, commit 8353f4a)\nPython: 3.7.3\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Darwin-18.6.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2019-07-02T10:32:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "110": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3575", "issue_id": "#3575", "issue_summary": "Request edit option with new body", "issue_description": "tushardhole commented on 1 Jul 2019\nHello Everyone,\nCurrently we can edit request body, and while doing so it opens up vi(editor) with original body.\nThere are many times, when I need to delete all contents in body, paste new contents in body.\nWhat about having a new option like, 'new-request-body' where it opens up blank vi(editor) and i just paste the new body that i want.\nI had first posted it on the forum also,\nhttps://discourse.mitmproxy.org/t/request-edit-option-with-new-body/1572\nIf sounds foolish, please close the issue, if sounds good then we can discuses more.", "issue_status": "Closed", "issue_reporting_time": "2019-07-01T07:49:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "111": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3574", "issue_id": "#3574", "issue_summary": "Dyld", "issue_description": "Imparium commented on 29 Jun 2019\nSteps to reproduce the problem:\nHave a macOS High Sierra 10.13.6\nHave brew\nInstall mitmproxy using brew and run it.\nAny other comments? What have you tried so far?\nUpdating everything from brew\nSystem information\ndyld: Library not loaded: @executable_path/../.Python\nReferenced from: /usr/local/Cellar/mitmproxy/4.0.4/libexec/bin/python3.7\nReason: image not found\n[1] 14539 abort mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2019-06-28T20:52:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "112": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3573", "issue_id": "#3573", "issue_summary": "Using mitmproxy as a library", "issue_description": "dutzi commented on 28 Jun 2019 \u2022\nedited\nSorry if this question is a bit blurry, I'm trying to adapt an old wrapper for mitmproxy to the current version. I haven't touched the code in a long time and I pretty much have no idea what I'm doing.\nIn previous versions of mitmproxy I was able to use it as a library by creating a class InjectingMaster(flow.FlowMaster) and calling flow.FlowMaster.__init__(self, server, state), defining handle_request and such...\nHow can I do it in the current version?", "issue_status": "Closed", "issue_reporting_time": "2019-06-28T18:15:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "113": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3571", "issue_id": "#3571", "issue_summary": "webp image not display preview in mitmweb", "issue_description": "richshaw2015 commented on 27 Jun 2019\nSteps to reproduce the problem:\nuse mitmweb\nview webp image\nAny other comments? What have you tried so far?\nconst isImage = /^image\\/(png|jpe?g|gif|vnc.microsoft.icon|x-icon)$/i\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.3\nOpenSSL: OpenSSL 1.1.1c 28 May 2019\nPlatform: Linux-4.19.49-1-MANJARO-x86_64-with-arch-Manjaro-Linux\n1", "issue_status": "Closed", "issue_reporting_time": "2019-06-27T06:35:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "114": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3569", "issue_id": "#3569", "issue_summary": "curl -x option get 502 bad gateway", "issue_description": "ramumanavalan commented on 24 Jun 2019\nWhen I apply for proxy on my whole device is working fine. But when I tried to make curl proxy connection I got 502 Bad Gateway\ncurl -x 127.0.0.1:8080 http://ipinfo.io/ip\nLog:\n127.0.0.1:42420: clientconnect ::ffff:127.0.0.1:42420: request -> Request(GET scratchpads.eu:80/) ::ffff:127.0.0.1:42420: Set new server address: scratchpads.eu:80 ::ffff:127.0.0.1:42420: serverconnect -> ('scratchpads.eu', 80) ::ffff:127.0.0.1:42420: server communication error: HttpReadDisconnect('Server disconnected') ::ffff:127.0.0.1:42420: serverdisconnect -> ('scratchpads.eu', 80) ::ffff:127.0.0.1:42420: serverconnect -> ('scratchpads.eu', 80) ::ffff:127.0.0.1:42420: serverdisconnect -> ('scratchpads.eu', 80) 127.0.0.1:42420: clientdisconnect\nResponse:\n<html> <head> <title>502 Bad Gateway</title> </head> <body> <h1>502 Bad Gateway</h1> <p>HttpReadDisconnect(&#x27;Server disconnected&#x27;)</p> </body> </html>", "issue_status": "Closed", "issue_reporting_time": "2019-06-24T11:59:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "115": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3568", "issue_id": "#3568", "issue_summary": "Roadmap for mitmweb", "issue_description": "oxr463 commented on 17 Jun 2019\nFirst off, mitmproxy is such a wonderful tool; as a programmer turned pen-tester, I find it to be a lot more intuitive than using GUI-driven tools like Burp, and Zap.\nThe documentation states that mitmweb is still in beta, but I am unable to find any roadmap for it, or for mitmproxy in general. I'd like to contribute, and I see there are many issues to work on, but there doesn't appear to be any priorities set for any of them.\nFor now, I guess I'll take a look at the area/web tag.\nThanks,", "issue_status": "Closed", "issue_reporting_time": "2019-06-16T20:07:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "116": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3567", "issue_id": "#3567", "issue_summary": "websockets: replace simple Masker with speed-optimized version", "issue_description": "Member\nKriechi commented on 15 Jun 2019\nsee the recent discussion in python-hyper/wsproto#127\nSummary: Our \"simple\" Masker is not really performant. With a little code magic we can gain speedup of up to 60x!", "issue_status": "Closed", "issue_reporting_time": "2019-06-15T11:04:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "117": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3565", "issue_id": "#3565", "issue_summary": "[QUESTION] HTTPS within script", "issue_description": "loretoparisi commented on 14 Jun 2019 \u2022\nedited\nIs it possibile to make an HTTPS call to a different endpoint within the mitmproxy script?\nAssumed I have like\ndef response(flow):\n    if flow.request.pretty_host.endswith(my_host):\n        res = flow.response\n       if res.content:\n          # http call?\nit seems that the mitmproxy hangs when trying the HTTPS call within the script. I do no have to forward traffic etc., just calling a different endpoint, while keeping the flow as-it-is.", "issue_status": "Closed", "issue_reporting_time": "2019-06-13T20:10:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "118": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3564", "issue_id": "#3564", "issue_summary": "Mtimdump crashes when replaying websockets", "issue_description": "bebef1987 commented on 12 Jun 2019\nSteps to reproduce the problem:\nStart mitmdump in record mode mitmdump-linux --set save_stream_file=websocket.mp\nIn browser open http://websocket.org/echo.html\nClick Connect and Send message\nClose proxy\nStart mitmdump in replay mode mitmdump-linux --set server_replay=websocket.mp\nIn browser open http://websocket.org/echo.html\nClick Connect and Send message\nCheck output\nfirst we get addon error:\nmitmdump-linux --set server_replay=/home/florinstrugariu/mozilla/raptor-studio/record/websocket.mp\nAddon error: Traceback (most recent call last):\n  File \"mitmproxy/addons/serverplayback.py\", line 174, in configure\n  File \"mitmproxy/command.py\", line 275, in wrapper\n  File \"mitmproxy/addons/serverplayback.py\", line 79, in load_flows\nAttributeError: 'WebSocketFlow' object has no attribute 'response'\nand when we click connect in replay mode we get\n127.0.0.1:40402: GET http://websocket.org/img/favicon.ico\n[replay]               << 200 OK 3.55k\n127.0.0.1:40480: clientconnect\n127.0.0.1:40480: GET http://echo.websocket.org/?encoding=text\n[replay]               << 101 Web Socket Protocol Handshake 0b\nWebSocket connection closed by client: 1000 (message missing), unknown status code\nTraceback (most recent call last):\n  File \"mitmproxy/proxy/server.py\", line 121, in handle\n  File \"mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n  File \"mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n  File \"mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n  File \"mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n  File \"mitmproxy/proxy/protocol/http.py\", line 260, in _process_flow\n  File \"mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\n  File \"mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n  File \"mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n  File \"mitmproxy/proxy/protocol/http.py\", line 447, in _process_flow\n  File \"mitmproxy/proxy/protocol/websocket.py\", line 193, in __call__\n  File \"mitmproxy/net/tcp.py\", line 227, in ssl_read_select\nTypeError: argument must be an int, or have a fileno() method.\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n127.0.0.1:40480: Traceback (most recent call last):\n  File \"mitmproxy/proxy/server.py\", line 121, in handle\n  File \"mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n  File \"mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n  File \"mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n  File \"mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n  File \"mitmproxy/proxy/protocol/http.py\", line 260, in _process_flow\n  File \"mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\n  File \"mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n  File \"mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n  File \"mitmproxy/proxy/protocol/http.py\", line 447, in _process_flow\n  File \"mitmproxy/proxy/protocol/websocket.py\", line 193, in __call__\n  File \"mitmproxy/net/tcp.py\", line 227, in ssl_read_select\nTypeError: argument must be an int, or have a fileno() method.\n\n127.0.0.1:40480: clientdisconnect\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 4.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.15.0-50-generic-x86_64-with-debian-buster-sid", "issue_status": "Closed", "issue_reporting_time": "2019-06-12T12:06:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "119": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3563", "issue_id": "#3563", "issue_summary": "How to convert from HTTPS proxy to HTTP proxy", "issue_description": "pauldraper commented on 10 Jun 2019 \u2022\nedited\nHow can I use MITM proxy as an HTTPS proxy in front of an HTTP proxy?\nSo https_proxy=http://mitmproxy curl https://example.com would CONNECT to mitmproxy, and mitmproxy would send a GET Host: example.com to a configured upstream server, which would send GET Host: example.com to example.com.\nMy current solution:\nRegular mode\nDisable HTTP2\nAddon\ndef http_connect(flow):\n    flow.request.host = <upstream_proxy_host>\n    flow.request.port = <upsteam_proxy_port>\nDisable mitmproxy SSL checks\nAdd SSL proxy upsteam.\nIs there a better way?", "issue_status": "Closed", "issue_reporting_time": "2019-06-09T19:33:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "120": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3562", "issue_id": "#3562", "issue_summary": "Get only hostname without intercepting the request", "issue_description": "Badranh commented on 8 Jun 2019\nHello, I wanna to intercept the host name and based on the host name I wanna drop or continue the request ( I don't care about the content at all).\nI have tried the example below:\nfrom mitmproxy import http\n\ndef request(flow: http.HTTPFlow) -> None:\n    print(\"sending request to\"+ flow.request.pretty_host)\nbut I'm receiving an error: Cannot establish TLS with client so is there any way to achieve this without installing custom certs ?", "issue_status": "Closed", "issue_reporting_time": "2019-06-07T21:04:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "121": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3561", "issue_id": "#3561", "issue_summary": "mitmproxy does not intercept all the traffic coming from my android device", "issue_description": "yosradirgham commented on 7 Jun 2019 \u2022\nedited\nSteps to reproduce the problem:\nInstall mitmproxy's CA on a rooted Android\nopen wireshark on the same device on which mitmproxy is running using $ mitmproxy --ssl-insecure\nopen an application to inspect its HTTPS traffic\nAny other comments?\nI want to intercept the traffic coming from a specific app, when i first open this app, I can see that mitmproxy does intercept some dafa from it, however it doesn't not intercept all the traffic. Mitmproxy only intercepts https requests that the application sends automatically to update its content, but the https requests I send aren't intercepted by mitmproxy.\nWhat have you tried so far?\nI've rooted my android device\nI've added the mitmproxy certificate to the root store on my android following these steps\nI've tried to run mitmproxy in transparent mode following the steps from the documentation, and when I do, mitmproxy doesn't intercept anything at all.\nI've used ProxyDroid to force all the traffic to be redirected to mitmproxy. When I do this, Wireshark does intercept the requests that are sent to the server, but the server never responds, what I get instead is a 502 Bad Gateway message from the proxy. Since this enables me at least to intercept the request that the application sends to the proxy, I tried sending it on postman, and what I get is There was an error connecting to https://192.168.10.211/message.\nSystem information\nThis is my topology:\nAndroid --> mitmproxy --> server\nAndroid's version is : 6.0.1, it's IP address is 192.168.10.199\nMitmproxy is running on Linux, it's IP address is 192.168.10.264\nServer's IP address is 192.168.10.211", "issue_status": "Closed", "issue_reporting_time": "2019-06-07T10:03:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "122": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3559", "issue_id": "#3559", "issue_summary": "removing \":authority\" pseudo header, then executing request crashes mitmproxy", "issue_description": "merlinmarek commented on 5 Jun 2019\nSteps to reproduce the problem:\nRun mitmproxy\nVisit some http2 website, e.g. google.com\nEdit the request (enter + e + 7) and remove the :authority header (d + q).\nReplay the request (r).\nmitmproxy crashes\nStacktrace:\nTraceback (most recent call last):\nFile \"/usr/lib/python3.7/site-packages/mitmproxy/master.py\", line 86, in run_loop\nloop()oding: gzip, deflate, br\nFile \"/usr/lib/python3.7/site-packages/urwid/main_loop.py\", line 286, in run\nself._run()e-requests: 1\nFile \"/usr/lib/python3.7/site-packages/urwid/main_loop.py\", line 384, in _run\nself.event_loop.run() tab to view [m:auto]\nFile \"/usr/lib/python3.7/site-packages/urwid/main_loop.py\", line 1484, in run\nreraise(*exc_info)\nFile \"/usr/lib/python3.7/site-packages/urwid/compat.py\", line 58, in reraise\nraise value\nFile \"/usr/lib/python3.7/asyncio/events.py\", line 88, in _run\nself._context.run(self._callback, *self._args)\nFile \"/usr/lib/python3.7/site-packages/urwid/raw_display.py\", line 404, in\nevent_loop, callback, self.get_available_raw_input())\nFile \"/usr/lib/python3.7/site-packages/urwid/raw_display.py\", line 502, in parse_input\ncallback(processed, processed_codes)\nFile \"/usr/lib/python3.7/site-packages/urwid/main_loop.py\", line 411, in _update\nself.process_input(keys)\nFile \"/usr/lib/python3.7/site-packages/urwid/main_loop.py\", line 511, in process_input\nk = self._topmost_widget.keypress(self.screen_size, k)\nFile \"/usr/lib/python3.7/site-packages/mitmproxy/tools/console/window.py\", line 313, in keypress\nk\nFile \"/usr/lib/python3.7/site-packages/mitmproxy/tools/console/keymap.py\", line 143, in handle\nreturn self.executor(b.command)\nFile \"/usr/lib/python3.7/site-packages/mitmproxy/tools/console/commandexecutor.py\", line 17, in call\nret = self.master.commands.execute(cmd)\nFile \"/usr/lib/python3.7/site-packages/mitmproxy/command.py\", line 245, in execute\nreturn self.call_strings(parts[0], parts[1:])\nFile \"/usr/lib/python3.7/site-packages/mitmproxy/command.py\", line 233, in call_strings\nreturn self.commands[path].call(args)\nFile \"/usr/lib/python3.7/site-packages/mitmproxy/command.py\", line 105, in call\nret = self.func(*self.prepare_args(args))\nFile \"/usr/lib/python3.7/site-packages/mitmproxy/command.py\", line 275, in wrapper\nreturn function(*args, **kwargs)\nFile \"/usr/lib/python3.7/site-packages/mitmproxy/addons/clientplayback.py\", line 204, in start_replay\nhost = hf.request.headers.pop(\":authority\")\nFile \"/usr/lib/python3.7/_collections_abc.py\", line 795, in pop\nvalue = self[key]\nFile \"/usr/lib/python3.7/site-packages/mitmproxy/coretypes/multidict.py\", line 39, in getitem\nraise KeyError(key)\nKeyError: ':authority'\nmitmproxy has crashed!\nPlease lodge a bug report at:\nhttps://github.com/mitmproxy/mitmproxy\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.3\nOpenSSL: OpenSSL 1.1.1c 28 May 2019\nPlatform: Linux-5.1.6-arch1-1-ARCH-x86_64-with-arch\n1", "issue_status": "Closed", "issue_reporting_time": "2019-06-04T20:39:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "123": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3556", "issue_id": "#3556", "issue_summary": "HTTP protocol error in client request", "issue_description": "amitbha commented on 4 Jun 2019\nSteps to reproduce the problem:\nmitmdump running in linux.\ncp ~/mitmproxy/mitmproxy-ca-cert.p12 to windows xp, and import into root cert.\nrun the app (weixin-windows, download link) in windows xp, set its proxy to mitmdump.\nmitmdump print lots of errors like:\n192.168.10.102:2245: CONNECT 14.215.158.119:80\n<< HTTP protocol error in client request: Bad HTTP request line: b\"\\x16\\xf1\\x03\\x00\\xa1\\x00\\ ........\n192.168.10.102:2245: clientdisconnect\nthe expected traffic to \"mp.weixin.qq.com\" never seen.\nAny other comments? What have you tried so far?\nAlso tried Fiddler4 in windows, with \"Decrypt HTTPS Traffic\" enabled, worked as expect, no errors.\nSystem information\n# mitmproxy --version\nMitmproxy: 4.0.4\nPython:    3.7.3\nOpenSSL:   OpenSSL 1.1.1b  26 Feb 2019\nPlatform:  Linux-4.18.20-1-MANJARO-x86_64-with-arch-Manjaro-Linu", "issue_status": "Closed", "issue_reporting_time": "2019-06-04T03:49:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "124": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3555", "issue_id": "#3555", "issue_summary": "mitmdump not seeing traffic", "issue_description": "jdmevo123 commented on 4 Jun 2019\nIm not seeing the traffic coming through with mitmdump. currently running latest version.\nIn the logs all i see is:\n:65013: clientconnect\n:65013: clientdisconnect\n:65052: clientconnect\n:65052: clientdisconnect\n:65088: clientconnect\n:65088: clientdisconnect\n:65118: clientconnect\n:65119: clientconnect\n:65119: clientdisconnect\n:65118: clientdisconnect\n::ffff::52695: Ping Received from server\n->\n::ffff::52695: Pong Received from client\n->\n:65147: clientconnect\n:65147: clientdisconnect\n:65181: clientconnect\n:65181: clientdisconnect\n::ffff::52695: Ping Received from server\n->", "issue_status": "Closed", "issue_reporting_time": "2019-06-03T23:40:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "125": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3554", "issue_id": "#3554", "issue_summary": "M", "issue_description": "khairul2547 commented on 3 Jun 2019\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2019-06-03T15:54:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "126": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3553", "issue_id": "#3553", "issue_summary": "Inject traffic coming from a specific Client ip address", "issue_description": "gam3-over commented on 3 Jun 2019\nHi,\nI'll go straight to the point:\nI'm trying to understand if it's possible to inject all the traffic coming from a specific ip address and leaving all the other clients with the traffic untouched.\ni've even tried using a regex like this via --ignore-hosts (assuming that i only want to inject 192.168.1.42) :\n^(?!192\\.168\\.1\\.42)((?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9])\\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9]?[0-9]))$\nor the opposite\n^192\\.168\\.1\\.42$\nbut it didn't work.\nI've looked at the API but nothing, so im here to ask if its possible to do something like that even passing a script -s myscript.py and checking the specific ip address of the client.\ni've checked all the arguments inside the webui panel but i didnt find something useful.\ncan someone help me ?", "issue_status": "Closed", "issue_reporting_time": "2019-06-03T12:54:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "127": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3550", "issue_id": "#3550", "issue_summary": "Main screen split view", "issue_description": "acaetano commented on 28 May 2019 \u2022\nedited\nThis is not really a problem, but an enhancement.\nmitmproxy's main screen lists the requests along with the response's status code. When you're pentesting, you need to take a look at each response, but you need to enter each one and switch to the response tab.\nNow think about sifting through that when you have more than a thousand requests to check?\nWould it be possible for the team to create a split view of the main screen where we can see the response of the highlighted request? I've created a (very ugly) mockup of my idea below.\nSorry, couldn't upload it here, github might have some aesthetic bots to block it...", "issue_status": "Closed", "issue_reporting_time": "2019-05-28T13:34:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "128": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3549", "issue_id": "#3549", "issue_summary": "mitmproxy crashed on trying to see request details by hitting enter", "issue_description": "sowmyarajs commented on 28 May 2019\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\nSystem information\nTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/mitmproxy/master.py\", line 86, in run_loop\nloop()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 286, in run\nself.run()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 384, in run\nself.event_loop.run()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 1484, in run\nreraise(exc_info)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/compat.py\", line 58, in reraise\nraise value\nFile \"/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py\", line 88, in _run\nself._context.run(self._callback, self._args)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 1443, in faux_idle_callback\ncallback()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 572, in entering_idle\nself.draw_screen()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 586, in draw_screen\ncanvas = self._topmost_widget.render(self.screen_size, focus=True)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/decoration.py\", line 226, in render\ncanv = self._original_widget.render(size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 1765, in render\ncanv = get_delegate(self).render(size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/listbox.py\", line 501, in render\ncanvas = widget.render((maxcol,))\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 1004, in render\nreturn apply_text_layout(text, attr, trans, maxcol)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/canvas.py\", line 1315, in apply_text_layout\nreturn TextCanvas(t, a, c, maxcol=maxcol)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/canvas.py\", line 358, in init\nraise CanvasError(\"Canvas text is wider than the maxcol specified \\n%r\\n%r\\n%r\"%(maxcol,widths,text))\nurwid.canvas.CanvasError: Canvas text is wider than the maxcol specified\n180\n[71, 162, 167, 167, 167, 167, 167, 176, 158, 180, 134, 88, 181, 180, 181, 164, 162, 69, 180, 180, 181, 181, 168, 181, 180, 184, 102, 180, 182, 181, 169, 146, 180, 78, 148, 71, 181, 179, 180, 179, 154, 180, 180, 181, 180, 165, 120, 181, 147, 180, 181, 180, 180, 177, 180, 180, 180, 132, 172, 91, 183, 182, 143, 178, 123, 181, 181, 181, 182, 180, 181, 122, 180, 179, 140, 128, 169, 181, 180, 51, 181, 180, 181, 182, 180, 181, 157, 178, 155, 175, 179, 174, 167, 167, 167, 179, 167, 68]\n[b'doctor_signature: ?PNG....IHDR...?...?.....Q-j?....sBIT...3.??.. ', b\".IDATx???Mh.????y?@>??dp?Qf.D??8??3.7?Y??qfv.???b.nef'??gV?NPf?y:?3??3S.???^p.???Tp.?\\67?v???z??U???i??]v.?j??.?u???..??..?...??.l..$@.. .....\\t.?..H??..@..6... \", b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ', b'?..?.?.?..l..$@.P?S??Z.?5>???v??};.\\\\???k??. 4?Z{Y{???u%5?:?t?N?C?+.N?????????.?,N??ZQ??/?M?.?].h???..?2.c??z?e?????l6.?-.?.?$?v???].??N?/??W\\tl r.l ?j/k?.?.?}???RC???????@O.l ', b'???~[r??wo?1?.\"??.b?\\\\?ua??27???|??p ?.l V.?????.V???_l/????-.?.??a.???????T?-???????.7.?+.6 7????m?.9??..&{o?(?.??.@v??????k?ko^??5?W.?.??$?.?0?.$?????-@R.6 ', b\"?T?x?Q{Y?R?z?VV+.????f?;?:??.[.pE#.}.??J?v??GT???n???h.??F?.,?.X???\", b'???.???.?.??+.?????\\\\....?.?$??~???fL?????m?>?????P??.???eF2.?0Q?W???..?\"?.???+?i?.J??].?N?_lw.Ho???5..?v??J?.??..????3?.8?O?????v?k??R????.?m ?.l?k??z??Yy?.?=?Z????', b\"07??0?[?V???????.?????_N??v???h??5.?.38?M.?.~.~F??+b.?.?_t?f.|T.?(b/.X??1?m 9.lx,???.|T??.bu??:b..?/?4v?%e???un?2???y???{@1?z??W_8?$.?o??'??k??W???..?.??9??Q?m\", b'?.l.???K?}v????ju???????m i.l??sX??R?.F??Z???!??r??Q?y???(?aL}??L??h???Y??ZQ?????:?\", b'?l?0???.@;???/??-{??0Q8|.??gQ.??BYx,0??R..|????0??[??...?K?%?..\"???>7?W.U.?.?b??.)??+??^?k?C???kZ??K..??kZkGZ?F??s?s?}??V.%{5+4??y?F;??..?.l?S?eM(P?<^?^?z??7?m..?{???%?D?w?????', b'9?.???q????uF????-?o.@8??zC$?Z-????n????h.??5??~?V??[?$?[.?.s?p???W?????.??je?-?-L.???k????..?.??+??Df$s??,??.GI<??S?????i]{Y.?2????6??4.??Pv?Cn4??????@?.?????j%??.', b\"??h?6k??????.?;/?^??T]?.???!?0Q?{???.???o?????[?.?W????]Z.????_?^sMk????..@??????$P;???/?K.?>.?!?It???P??Pj?]?????6..?;?#?{?????.??( ???]?t???'?I?C..E)M??8??.?NI?y.^q..?./ .??q??Q\", b'.8.??A[?&??.\\t.8O?.?Y$???$.'??.??27??aZ?<^q?.?.??T?e..N.v???Yi??GZw8.SQ??D!?7?V??7K??\"p??Z?.?}S@?.?I!??d?????????.?dn2???w?n'?>?:?9';??...??.?3?????:F7??R?l2h?..|A>', b'~??g??... ,.v\"8.?=?.?Z-??g.(??4??m??#|o??/?}S@B.???j?.????.:??????~h.??s?^???.LlM..????????F????????jEQ2#?????[????P~???????C???S?????.?8....[??_Sk?_??.?yt???kZ?Gw?}:.%??.?i?.?.?~LZ{.', b\"{5[]??p(...;??.???s??zy?<Y?t?.??,;?t????w?.?l1?C??.??PX.???'?.??.?DI<?.]?d.y??d?f???0????.?6??@,s?s???\", b\"?i%??,?_?|?.?-%?~?_?^?_?~n.?'.a?0?N?\\\\.?<????O\\\\?0Qhj???z?i]{YsM??.?u.?W??J????7?m?u?@..?1'?-??p?@.?2|??=?67.?|..?????.??R??~X??.??U?????~??u?@?.?1?a.?0O.'#?YfW^(???p13?9|..??%?P?8?r\", b\"^?/?u3@?.?1'.?9P6;???c??e????Yf1.c??).}?x?(?W??.??FX?.$Mgq?l.j?Z.?,?????8.???K?Wu.??b.F?F?^?I??>??7.??.v?\\t???H?sg??.ng?E;??.;?zn~????.????[?+?_??..?.?.?q&.??????,?i?DgJ???h?.^.U.?7s\", b\"gF?t????.?s.v???..????????Og3wf???.?^?fgf??;?????a???.;?.?a?u?@..?e.F?%7fg??...vK./???'\\L?.?.F?.????i?c??J.??t.C????0??By??p=7?c???rn.??t?.>!????VY??;b?0Q??U#2Wm?!\\R???.?.%??P.??7?\", b\"?{?]Z?<^?Ng???pye?f?)????k/ka?..o.v.?gXM.'??g.??V?:??py9?+e..?'.??.?X~?|-{??eQV{Y?,N:._l?...????]?O.l?UV+?W???r???tI.?D???v?\\????%^???l?..??.<s??.??.?|?0???1??0?B.~\", b'?%cN???,?d?_lG???b6?;??(L..?.Fj?.?\\'??1??????~?O}?5Y?t??N?\"r?V.????sm.g???mm??8?l?s.?.??2?\"?????Og?j?7?.?6?,.??]?!\\\\v???H?~?]?.?.?Q???0Q8?O???H???H?', b'?=???ec????.??j?6:t??Fs??.??????+???.??.?CG?Y=?????Y??????,?+/????D?h?.NCx???ia&??8?-.;Z?S??P??Yv???..Ss?igC8i.WB.??????.?.?..?aTV+??\\tg?:?\">]m??V????.????R|\\t?U?j?0Q??x?.??.?CG??', b's???We?,3?.j?????+4???z??v??]?W.??e?~z??Y?.???Y?????dq?u?}??v?.?ap3wf??].O.d.?', b'?C???\\\\?t??L??2??R]????LSkJ1??\\t.??\\tx??.A7?e.???<????{?E.?K?.??.???_??l?..v???2??i??%Kg??(???Q?(4??,_.??N?????W??.? ??s?.[M?Y.U?b?ZQ.?@???6??R?O?Y??X?', b\"???c?w.?#??6N?+.[?e??a.?1$??????36.M???????808.???n?l.???.6?4?cH?'???\", b\"-???.???7??..D?????u~WQ?.:???c??.?R?.i???@3?.Yz??7akqEQj/.d..!??b.????k?????'.tc\\t???w?0??.??k.3??>?.1%L?P...D?e??sc??Da_?.??,.3/?b?? ????????i??e??...?.?????..A???P.?:5??i?.??.?h\", b\",?b?KYR????j??????,??.???????80?K_?~?.?f???0.5?~.?\\t\\\\??e????'?.?7?mTV+???|??t5.?.???I????e5..5??=V{YsV????.?7???ln4g?r?..?z??u??2s.6Y??F????????n.?.????n???{???.???0??????77v.??I??\", b\"(????.????X{??7?go^?1.#??.?FI?3?'aT??x%?3.?????+???a._.v.X?_?g???x??)?.???u??.??.?.?.)B???????????t?~?]Y??Pv??????Og?5??N???D??@..l.?.?.L.??a?@?[??]???.Yn4????7?.?.????<?.>@2Q.???.\", b'?I??h???atr?Y??i??S??.RC??Og??. ??????????.?.?.#?A?.??TZ+??N??A??z?,??_?#?%@j????>??8?+.{ ?.????#???;????f]g1?4]b?..*?.???:????_?\\\\w6sgF8??.d.?Q^(??=??..@X?%?\\\\.p!.?O?\\\\r??k6?P.G0?.?', b'h>?.QF?C;?Q??(+?W\"?????g..?..a?Z(?.?.]?=3O?v.????<|e??$..??????8]?@..a?&?K?;?\\.?..?.#l&??>.?q?r?.?\\tU?(.??v.??.?'?\\tl?..v.?Xr???..???.????.??h?ug??l???0??b', b'?.???3g0S.??8R...?}1.?\\?c.??e?\"ck?M?K???..:.?.?.?n??.M?N??.^.? ?;??)?}p?.n:?rNf??M?i.Y?(?u'??.?d_r-p?.n'.?.x?.6?\\t.?a.?/?.?.?-??.o\\t#l&???.?.\\?Z?E\\&?.4????.5?..??.?/?].??|?),?.?.?c?', b'???.?.???H.?2,??\"?k??.^]?f?fg???/2?F0$}?.B?i]??.i?pEQ?_lK??KQ??ncv??.J2.C8??D??^?.z.H?K?.?_?Z-2.?.#?.???9?:5?jjMy??.^.??.?t:-,?aq..@Z.?!?.EQj/k???s????Cy+?J?b??R??*.?\\t?T??LXw.??V*', b\"?.????????J??????D??.?W?j???? .?\\\\??%=??.?'??..?Fs??.?~g?\\\\.??o?Y?._iG??e6+??+ \\\\?l3?.3.E)M??]?e??.n..w1?o?Z-?K????p%4????????{??;??z????p.???.#l?+I.l?Q.EY??$?>?v???G?+??p?.??..?G)<?..\", b'?J?.???(?/?7?o?rK.2.?4]..?_?;?Kf?fs?9?.?<???.???.@??.??.??P???g????K?,?.Uq?G??&??. \\\\\\t?Xn?bWY?.S??\\\\7e.???.?T??.?$.?IR.;?[?X?.UX??.J?{????+????.eL????M???..?D.v\\?F?.?1???p???@???.O', b\".#l&??A????5?]i?$..V.?\\8um'.?w.???.??..??C??~?.?=???K???Ylm?~?\", b'.???^??.????/?`?.?E?7.?w. .?.a.}??T??z???.???R?i?(J:?~????Rv???Z?..I?.6?.v?&?.???_??W2#??????w??K??.,??>.?...???.?..[>??', b'?{??I\\']?vq??????s.??.M??9/N?.?P?6???N?y?0.??I???.???I?????PvdC??????#??.?x??.?~?_?q](?7??D?????{w?\\t.???????9?35???.?=??.?'?%q)LMO\\ti??t]??V.e???+???X??.??.?.?!+/?????t??.???U??^??Y?.B.8?.?s?la<'4\", b'0GP?e???7?+??L?U=??.P?U]X?Ef\\'?v?\\tU\".t.??U`?Z-???w??L;??f???????????,??o6?/M???1.?)V?-.?0??eaP??b[??k\\'??A??????.6...;.K.??????x???^?.??t.??x?.?-?W??????+??.?.?!pN]?Fs[??.??o?3?~z?)?', b'?D=...?.4??uj(U.]??{????.??EN?%??@0b.???/_.?N?1.?y????M??]-?????.??@`?.??7?.?.,/??w??L]????;3?<_f?WlP....?????g.???1??v?)??F=...?..?T.??#???P????u?!N?1??@?.?.?p???.?]???.N?1?.?p', b'H.v@??????D..?7??.??[?l??Kj?? ?*????$?F\\'?h???s?????C# .??@?b.?M?i..?P.F?\\t)?.\\\\O?,/?Y?%#??@?b.?Q&lD.??? qglP...F`.A??Eh?J???za?`?BfK?z8.<.;.???%`{o????K???.??.../???`Y.?EX?5?..?N\"?\\\\?', b'-T.>?????.~???..?s`.?q|???(,..?..?(m2?S8?????d.??U`???h?_???W^.s?j?T..?????)??.V??Fs?\\\\?..,V?????UC???y?&w#.???j??25??$nq=????{,?2a.{?nlO?.\"%V??(Ju???????|???X~,???z????>?$n??????%?', b'\"?pF??.?.6.?K_?~?.?g.Fy?,.?e?W???H??.???.?ej(u???v*/??\\'??h????.?+?.K????.?/_????u???v??=?en4????!?.?.?.??\"?N???]?em?????s?/?.??....?jOkEQ6?oJ?@??z??i?}?f??.????V?e.?????R?????D?x?8', b'?.+?.F???0?.??. ??9??????P?+M????.??>|e????.?}:.??J?0??[??_?????1?.???>\\6.C???eF2Vx?.?0??/?4???. ??.?I?K+?????{?M?..?Ie?.i?????????', b'||3???e?3.@????S?3(.?D.?~??q????.J????.???c\\tie????\\'?+.7?I?Y?P??O?.??\"J?r??t:m???7?.????SC)?a???', b'?????_.??@??.?cp`Y??T]?z??h.??a??Z`.???|?I???tX.??H?|?3?)??f?f??v????i?z??=..?????.J????.??', b'??.p??.???.????>.?????v??-??Tu???????_??WN?.??r??@?.?*?b?k?0?j.?.??:??{,????C?oa?.??p?9eMV????.???)A??(?v?????~,2#???[.??????5??$??\\t3?]???Y?6????? oC;?Z?...?^?(??????4-??i??? S?C??/%i', b'?m???UV+?2?0Q??e???PxO?N)?.(.?ka?.A?w?...?n????????.???I?%??(?4e=???Jb`+?b.?????g.??.???k?^.^???(+?W?k??o4.?6PV.?0Q.&?#??.k?.?.~{3#.+?.??..=?mf.??????_\\tl?~?WV+????P??..????w:a?wf$.?j', b'???@?Q6G??G?x<\\tuf.?z???=?_???V.???.?.??B?x eCa?a?..X?...$:?M??t.??.bf$S]?v???\\\\9.?7???]g?]???.?o???S]????.x?.k?X7??\\\\.?j?dy.?.?*$??2?U???0e????.?', b\"K./D`??z??.???+7??|????)?.???UO?h}..???j?uqv??????.??e??9[?#U.?.v??O?.?0'RHY).???x?QY??.?t?h?.'a?)aob&??.(.?^.5?:|.????????l6???_~?l/???].p$?]O??IC`??~4a?.;?F+?R.???4?????.?.9O?Q\", b'HVx.?x?sa?[??.???QC?o.?;?T_~??3???h%??H=?H?.????.|?.??.\"3?u]ojM.[?..?,????D=P+??.?h[????.lDj?-?.?YK???1:.?A?{glX?os.?>.???V??>?.X.?l?2.??????q.?v?UV+?60?0Q(?.?????.?C??Y??^j(U.U?*?.?0r7r?#???m?I??oul?.7??z?)??lz=.??w?????{?.JY5s?.?#???..?ScTt?.?2.???v.?(p??h.??Y??:.?.'?y??e??\", b'k???..R3...{@?[?\\?8???..?????\"V??.??#??z??.????1??\\'???..b??.H.???S??f?j?)??X?h??QfN0?+?mYp?Tz?Fan??exG?Z \\\\?.???????qBN.????e?K?WW??7????\"{5?????v??4v:,.?h?.?...?p?JD??^????.?.?.i?', b'.J=???7.D.%????.?#?%d2\\t;T???K??.7?.lo9??.n?;??+????s?s?*#l@a?=????????.]?+X????n?..?^?.+?????_????Z]?&!z????fx]?.?]?wMk?..0???s\\?.?}????R??????f?3#???X?f??C??.V?????2\\?.Q.sLH.??n.?', b'.?C[??J?.S.???<^.??+?W???t=5????0QX????b??5C?.e????.;8?O?????kj??.?Mm??L????S.?a??1?X?D?.?z?j?nN:??.R.o.??c?|??a.?V?.9K?s?s[??j????{??P%.?v?5???iM?ya?i_?M..08.?c????o:?j?????n?f?.', b\"B?v?D?x^.?)?..6G{o??????7.s???>?=?X???d?.|f$??v?.S?0.?l??.]h????|p.???? ?-????A??s??|>oEx?.'.*??'??..??8.?????V???\\t?7\", b\".?uE?y*?????n?-?.j???...?ql..SC??;3?wf???X]?f???.??.??/???.??????Y???SB?.t?.?{?,Sk??.??o&9?????v??.]..?..?{?.]??.?;?.i???Z2?[????X.lr.X??DB.?A{/??.???f?w?f&?? ?xOx???'0??#??Z?{\", b'?7??\"?.?.??H????.????DA?k???.?df6Un@:.??\".??ncgw???.|os??*{?.???}fkG???M?i??.?5'??P.??~[<Ln\\'?m](?GvG?8e????@4.??(?-?&??y??PZ.}?\\\\???<?...?$.?c?????d?s?Z-?T?u????????tX????l????.', b'?.l??.?dq?~%??\\t?f??.???X?>???2.???E3??+?????7????.j??8????k/k????t???B?7.?.l?9.[Q??D???.??5...=??za?????????.??.3?d3?.?.?.?c??l6?|?.?2l.??p', b'?.l?\\to.??P??V?}??.??n&??\\tg.?d??0??+??<vx?s<.????V+???@?.?????|?.Z?.??y7.J?O?.&?B?s n/h7?f???.?.?N??e???\"?}a.Fe?????RC???z?v.?', b\"?O?[????f?QB.p.?YH?..D.??#?@-/?]?v???o.'??.?Y?.}}Z????SC?????C?....???.?I?.??)m????U??Z/EQ.???{2>rUV+O~~b??d?>??x?.:#?.?a???x??V?????o?0zZ??.?%??.?.J]-.???.????????h???NM2??e??(K??6?o..K?q.?>?Ob??...?.?$N?j????????PJ???????c??J(7?n???', b'.\\??????????.i??U.j/k????.iD.#????????X-?[??z?N}???H?6?oF|)?a.?/??i?7..q??C????????+?????7?o~k???.&?.^.1@?xriG???q?>?+?W?k?Pn\\tv?a??..??SC??Og?Wg\\t;?v?G.D.#?????.??t??=?????3?.?t??.t???u?Y;ax=sg??.b?.v?.?.E??.?.?F.:??.U.', b'?.q?.;???t????gL?.s?-4.<??I?.A?.qECQ.?????Y??.?@.????S???[??=?Y~???????a?.\"?x?x?.\\\\?????~?.??..?????...???.?!????????.??????????.9???????r?.\\\\???????_??o.?..q@<0??o?k.W.%7?+?..o.g?', b\"?..cP.e??p?Z?~?0?B.b???H;?J?%a?,Aa?0;3[?]?? .?1|eXx???.H....??;??R3wf????wf.?.@=P'???+,?..???;?0?.,9O{??????????Zy??.???D???aX?. ..6:????Nc???h?4]2?-????d6?.\", b'??.?0vvw?.U=P;Oo.?u??wf????m??d6?@.6z?.ifr????.?Fs3wffgfiU..??@?.?.Hc?a?wO5??P???f?7&??D!???T7????p]??Nf$c.?????l 9.lx?lUS.T!K.D?Z???.?????.?0??;?;?????nvU?.??@B.?.?Y37???3??&??$', b'?..k???V5??;2.?=..a2k????k????d6.{.6??\\?]{Q?i??1$.&??x#?.9?j=?.??TKr?.??@?.?4?H?????1K???1??.?9XM?=?j..K?.bLf.qEC>????v[????d6.K.6$?????Nc??-??<??l ~.l??', b'???z?\\'??@?.?.s\\'?^we???0&???!?.[}/.??6?Lf.qB#.?m??<??l 6.l$???.?=-.??3H??7?8'??_l/??.??.?.????oy?????X?f^??6.?????+t?.2\"??.nc???0EQr??|>.??????{???5c?[.$.????5K4?{?????.6', b')..p???0?(?sx??.@R.6p.k.s?@?c?m\\t%???n.?x??.z?.??.iM??}??????K??;??.?/.???.?d.FSkF<??.??????^}p.A\"?.o???c????&?x???G???H???? 7. ,.6?.o?[Q??P?\\?e?9.?f?.6b?O?k?k?+??.$E.A?<??..??V', b'?OMOQ..b??.B.@~?CU.?.??/???*.??.\"??V??S/??t??.???.???a?..Q:?.?.???S]?uEQ?.U?+?.E??^?s?<l@F???8??w???.?lv.H??..?.?+.u?.?.?.?.?-?.....#?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?.??l?...aIDAT.?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..???.Q0???Z,....IEND?B?']\nmitmproxy has crashed!\nPlease lodge a bug report at:\nhttps://github.com/mitmproxy/mitmproxy\nSowmyas-MacBook-Pro:~ sowmyas$ mitmproxy -p 8080\nTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/mitmproxy/master.py\", line 86, in run_loop\nloop()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 286, in run\nself.run()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 384, in run\nself.event_loop.run()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 1484, in run\nreraise(exc_info)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/compat.py\", line 58, in reraise\nraise value\nFile \"/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py\", line 88, in _run\nself._context.run(self._callback, self._args)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 1443, in faux_idle_callback\ncallback()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 572, in entering_idle\nself.draw_screen()\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 586, in draw_screen\ncanvas = self._topmost_widget.render(self.screen_size, focus=True)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/decoration.py\", line 226, in render\ncanv = self._original_widget.render(size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 1765, in render\ncanv = get_delegate(self).render(size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1086, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/listbox.py\", line 501, in render\ncanvas = widget.render((maxcol,))\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 144, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/widget.py\", line 1004, in render\nreturn apply_text_layout(text, attr, trans, maxcol)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/canvas.py\", line 1315, in apply_text_layout\nreturn TextCanvas(t, a, c, maxcol=maxcol)\nFile \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/canvas.py\", line 358, in init\nraise CanvasError(\"Canvas text is wider than the maxcol specified \\n%r\\n%r\\n%r\"%(maxcol,widths,text))\nurwid.canvas.CanvasError: Canvas text is wider than the maxcol specified\n180\n[71, 162, 167, 167, 167, 167, 167, 176, 158, 180, 134, 88, 181, 180, 181, 164, 162, 69, 180, 180, 181, 181, 168, 181, 180, 184, 102, 180, 182, 181, 169, 146, 180, 78, 148, 71, 181, 179, 180, 179, 154, 180, 180, 181, 180, 165, 120, 181, 147, 180, 181, 180, 180, 177, 180, 180, 180, 132, 172, 91, 183, 182, 143, 178, 123, 181, 181, 181, 182, 180, 181, 122, 180, 179, 140, 128, 169, 181, 180, 51, 181, 180, 181, 182, 180, 181, 157, 178, 155, 175, 179, 174, 167, 167, 167, 179, 167, 68]\n[b'doctor_signature: ?PNG....IHDR...?...?.....Q-j?....sBIT...3.??.. ', b\".IDATx???Mh.????y?@>??dp?Qf.D??8??3.7?Y??qfv.???b.nef'??gV?NPf?y:?3??3S.???^p.???Tp.?\\67?v???z??U???i??]v.?j??.?u???..??..?...??.l..$@.. .....\\t.?..H??..@..6... \", b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ', b'?..?.?.?..l..$@.P?S??Z.?5>???v??};.\\\\???k??. 4?Z{Y{???u%5?:?t?N?C?+.N?????????.?,N??ZQ??/?M?.?].h???..?2.c??z?e?????l6.?-.?.?$?v???].??N?/??W\\tl r.l ?j/k?.?.?}???RC???????@O.l ', b'???~[r??wo?1?.\"??.b?\\\\?ua??27???|??p ?.l V.?????.V???_l/????-.?.??a.???????T?-???????.7.?+.6 7????m?.9??..&{o?(?.??.@v??????k?ko^??5?W.?.??$?.?0?.$?????-@R.6 ', b\"?T?x?Q{Y?R?z?VV+.????f?;?:??.[.pE#.}.??J?v??GT???n???h.??F?.,?.X???\", b'???.???.?.??+.?????\\\\....?.?$??~???fL?????m?>?????P??.???eF2.?0Q?W???..?\"?.???+?i?.J??].?N?_lw.Ho???5..?v??J?.??..????3?.8?O?????v?k??R????.?m ?.l?k??z??Yy?.?=?Z????', b\"07??0?[?V???????.?????_N??v???h??5.?.38?M.?.~.~F??+b.?.?_t?f.|T.?(b/.X??1?m 9.lx,???.|T??.bu??:b..?/?4v?%e???un?2???y???{@1?z??W_8?$.?o??'??k??W???..?.??9??Q?m\", b'?.l.???K?}v????ju???????m i.l??sX??R?.F??Z???!??r??Q?y???(?aL}??L??h???Y??ZQ?????:?\", b'?l?0???.@;???/??-{??0Q8|.??gQ.??BYx,0??R..|????0??[??...?K?%?..\"???>7?W.U.?.?b??.)??+??^?k?C???kZ??K..??kZkGZ?F??s?s?}??V.%{5+4??y?F;??..?.l?S?eM(P?<^?^?z??7?m..?{???%?D?w?????', b'9?.???q????uF????-?o.@8??zC$?Z-????n????h.??5??~?V??[?$?[.?.s?p???W?????.??je?-?-L.???k????..?.??+??Df$s??,??.GI<??S?????i]{Y.?2????6??4.??Pv?Cn4??????@?.?????j%??.', b\"??h?6k??????.?;/?^??T]?.???!?0Q?{???.???o?????[?.?W????]Z.????_?^sMk????..@??????$P;???/?K.?>.?!?It???P??Pj?]?????6..?;?#?{?????.??( ???]?t???'?I?C..E)M??8??.?NI?y.^q..?./ .??q??Q\", b'.8.??A[?&??.\\t.8O?.?Y$???$.'??.??27??aZ?<^q?.?.??T?e..N.v???Yi??GZw8.SQ??D!?7?V??7K??\"p??Z?.?}S@?.?I!??d?????????.?dn2???w?n'?>?:?9';??...??.?3?????:F7??R?l2h?..|A>', b'~??g??... ,.v\"8.?=?.?Z-??g.(??4??m??#|o??/?}S@B.???j?.????.:??????~h.??s?^???.LlM..????????F????????jEQ2#?????[????P~???????C???S?????.?8....[??_Sk?_??.?yt???kZ?Gw?}:.%??.?i?.?.?~LZ{.', b\"{5[]??p(...;??.???s??zy?<Y?t?.??,;?t????w?.?l1?C??.??PX.???'?.??.?DI<?.]?d.y??d?f???0????.?6??@,s?s???\", b\"?i%??,?_?|?.?-%?~?_?^?_?~n.?'.a?0?N?\\\\.?<????O\\\\?0Qhj???z?i]{YsM??.?u.?W??J????7?m?u?@..?1'?-??p?@.?2|??=?67.?|..?????.??R??~X??.??U?????~??u?@?.?1?a.?0O.'#?YfW^(???p13?9|..??%?P?8?r\", b\"^?/?u3@?.?1'.?9P6;???c??e????Yf1.c??).}?x?(?W??.??FX?.$Mgq?l.j?Z.?,?????8.???K?Wu.??b.F?F?^?I??>??7.??.v?\\t???H?sg??.ng?E;??.;?zn~????.????[?+?_??..?.?.?q&.??????,?i?DgJ???h?.^.U.?7s\", b\"gF?t????.?s.v???..????????Og3wf???.?^?fgf??;?????a???.;?.?a?u?@..?e.F?%7fg??...vK./???'\\L?.?.F?.????i?c??J.??t.C????0??By??p=7?c???rn.??t?.>!????VY??;b?0Q??U#2Wm?!\\R???.?.%??P.??7?\", b\"?{?]Z?<^?Ng???pye?f?)????k/ka?..o.v.?gXM.'??g.??V?:??py9?+e..?'.??.?X~?|-{??eQV{Y?,N:._l?...????]?O.l?UV+?W???r???tI.?D???v?\\????%^???l?..??.<s??.??.?|?0???1??0?B.~\", b'?%cN???,?d?_lG???b6?;??(L..?.Fj?.?\\'??1??????~?O}?5Y?t??N?\"r?V.????sm.g???mm??8?l?s.?.??2?\"?????Og?j?7?.?6?,.??]?!\\\\v???H?~?]?.?.?Q???0Q8?O???H???H?', b'?=???ec????.??j?6:t??Fs??.??????+???.??.?CG?Y=?????Y??????,?+/????D?h?.NCx???ia&??8?-.;Z?S??P??Yv???..Ss?igC8i.WB.??????.?.?..?aTV+??\\tg?:?\">]m??V????.????R|\\t?U?j?0Q??x?.??.?CG??', b's???We?,3?.j?????+4???z??v??]?W.??e?~z??Y?.???Y?????dq?u?}??v?.?ap3wf??].O.d.?', b'?C???\\\\?t??L??2??R]????LSkJ1??\\t.??\\tx??.A7?e.???<????{?E.?K?.??.???_??l?..v???2??i??%Kg??(???Q?(4??,_.??N?????W??.? ??s?.[M?Y.U?b?ZQ.?@???6??R?O?Y??X?', b\"???c?w.?#??6N?+.[?e??a.?1$??????36.M???????808.???n?l.???.6?4?cH?'???\", b\"-???.???7??..D?????u~WQ?.:???c??.?R?.i???@3?.Yz??7akqEQj/.d..!??b.????k?????'.tc\\t???w?0??.??k.3??>?.1%L?P...D?e??sc??Da_?.??,.3/?b?? ????????i??e??...?.?????..A???P.?:5??i?.??.?h\", b\",?b?KYR????j??????,??.???????80?K_?~?.?f???0.5?~.?\\t\\\\??e????'?.?7?mTV+???|??t5.?.???I????e5..5??=V{YsV????.?7???ln4g?r?..?z??u??2s.6Y??F????????n.?.????n???{???.???0??????77v.??I??\", b\"(????.????X{??7?go^?1.#??.?FI?3?'aT??x%?3.?????+???a._.v.X?_?g???x??)?.???u??.??.?.?.)B???????????t?~?]Y??Pv??????Og?5??N???D??@..l.?.?.L.??a?@?[??]???.Yn4????7?.?.????<?.>@2Q.???.\", b'?I??h???atr?Y??i??S??.RC??Og??. ??????????.?.?.#?A?.??TZ+??N??A??z?,??_?#?%@j????>??8?+.{ ?.????#???;????f]g1?4]b?..*?.???:????_?\\\\w6sgF8??.d.?Q^(??=??..@X?%?\\\\.p!.?O?\\\\r??k6?P.G0?.?', b'h>?.QF?C;?Q??(+?W\"?????g..?..a?Z(?.?.]?=3O?v.????<|e??$..??????8]?@..a?&?K?;?\\.?..?.#l&??>.?q?r?.?\\tU?(.??v.??.?'?\\tl?..v.?Xr???..???.????.??h?ug??l???0??b', b'?.???3g0S.??8R...?}1.?\\?c.??e?\"ck?M?K???..:.?.?.?n??.M?N??.^.? ?;??)?}p?.n:?rNf??M?i.Y?(?u'??.?d_r-p?.n'.?.x?.6?\\t.?a.?/?.?.?-??.o\\t#l&???.?.\\?Z?E\\&?.4????.5?..??.?/?].??|?),?.?.?c?', b'???.?.???H.?2,??\"?k??.^]?f?fg???/2?F0$}?.B?i]??.i?pEQ?_lK??KQ??ncv??.J2.C8??D??^?.z.H?K?.?_?Z-2.?.#?.???9?:5?jjMy??.^.??.?t:-,?aq..@Z.?!?.EQj/k???s????Cy+?J?b??R??*.?\\t?T??LXw.??V*', b\"?.????????J??????D??.?W?j???? .?\\\\??%=??.?'??..?Fs??.?~g?\\\\.??o?Y?._iG??e6+??+ \\\\?l3?.3.E)M??]?e??.n..w1?o?Z-?K????p%4????????{??;??z????p.???.#l?+I.l?Q.EY??$?>?v???G?+??p?.??..?G)<?..\", b'?J?.???(?/?7?o?rK.2.?4]..?_?;?Kf?fs?9?.?<???.???.@??.??.??P???g????K?,?.Uq?G??&??. \\\\\\t?Xn?bWY?.S??\\\\7e.???.?T??.?$.?IR.;?[?X?.UX??.J?{????+????.eL????M???..?D.v\\?F?.?1???p???@???.O', b\".#l&??A????5?]i?$..V.?\\8um'.?w.???.??..??C??~?.?=???K???Ylm?~?\", b'.???^??.????/?`?.?E?7.?w. .?.a.}??T??z???.???R?i?(J:?~????Rv???Z?..I?.6?.v?&?.???_??W2#??????w??K??.,??>.?...???.?..[>??', b'?{??I\\']?vq??????s.??.M??9/N?.?P?6???N?y?0.??I???.???I?????PvdC??????#??.?x??.?~?_?q](?7??D?????{w?\\t.???????9?35???.?=??.?'?%q)LMO\\ti??t]??V.e???+???X??.??.?.?!+/?????t??.???U??^??Y?.B.8?.?s?la<'4\", b'0GP?e???7?+??L?U=??.P?U]X?Ef\\'?v?\\tU\".t.??U`?Z-???w??L;??f???????????,??o6?/M???1.?)V?-.?0??eaP??b[??k\\'??A??????.6...;.K.??????x???^?.??t.??x?.?-?W??????+??.?.?!pN]?Fs[??.??o?3?~z?)?', b'?D=...?.4??uj(U.]??{????.??EN?%??@0b.???/_.?N?1.?y????M??]-?????.??@`?.??7?.?.,/??w??L]????;3?<_f?WlP....?????g.???1??v?)??F=...?..?T.??#???P????u?!N?1??@?.?.?p???.?]???.N?1?.?p', b'H.v@??????D..?7??.??[?l??Kj?? ?*????$?F\\'?h???s?????C# .??@?b.?M?i..?P.F?\\t)?.\\\\O?,/?Y?%#??@?b.?Q&lD.??? qglP...F`.A??Eh?J???za?`?BfK?z8.<.;.???%`{o????K???.??.../???`Y.?EX?5?..?N\"?\\\\?', b'-T.>?????.~???..?s`.?q|???(,..?..?(m2?S8?????d.??U`???h?_???W^.s?j?T..?????)??.V??Fs?\\\\?..,V?????UC???y?&w#.???j??25??$nq=????{,?2a.{?nlO?.\"%V??(Ju???????|???X~,???z????>?$n??????%?', b'\"?pF??.?.6.?K_?~?.?g.Fy?,.?e?W???H??.???.?ej(u???v*/??\\'??h????.?+?.K????.?/_????u???v??=?en4????!?.?.?.??\"?N???]?em?????s?/?.??....?jOkEQ6?oJ?@??z??i?}?f??.????V?e.?????R?????D?x?8', b'?.+?.F???0?.??. ??9??????P?+M????.??>|e????.?}:.??J?0??[??_?????1?.???>\\6.C???eF2Vx?.?0??/?4???. ??.?I?K+?????{?M?..?Ie?.i?????????', b'||3???e?3.@????S?3(.?D.?~??q????.J????.???c\\tie????\\'?+.7?I?Y?P??O?.??\"J?r??t:m???7?.????SC)?a???', b'?????_.??@??.?cp`Y??T]?z??h.??a??Z`.???|?I???tX.??H?|?3?)??f?f??v????i?z??=..?????.J????.??', b'??.p??.???.????>.?????v??-??Tu???????_??WN?.??r??@?.?*?b?k?0?j.?.??:??{,????C?oa?.??p?9eMV????.???)A??(?v?????~,2#???[.??????5??$??\\t3?]???Y?6????? oC;?Z?...?^?(??????4-??i??? S?C??/%i', b'?m???UV+?2?0Q??e???PxO?N)?.(.?ka?.A?w?...?n????????.???I?%??(?4e=???Jb`+?b.?????g.??.???k?^.^???(+?W?k??o4.?6PV.?0Q.&?#??.k?.?.~{3#.+?.??..=?mf.??????_\\tl?~?WV+????P??..????w:a?wf$.?j', b'???@?Q6G??G?x<\\tuf.?z???=?_???V.???.?.??B?x eCa?a?..X?...$:?M??t.??.bf$S]?v???\\\\9.?7???]g?]???.?o???S]????.x?.k?X7??\\\\.?j?dy.?.?*$??2?U???0e????.?', b\"K./D`??z??.???+7??|????)?.???UO?h}..???j?uqv??????.??e??9[?#U.?.v??O?.?0'RHY).???x?QY??.?t?h?.'a?)aob&??.(.?^.5?:|.????????l6???_~?l/???].p$?]O??IC`??~4a?.;?F+?R.???4?????.?.9O?Q\", b'HVx.?x?sa?[??.???QC?o.?;?T_~??3???h%??H=?H?.????.|?.??.\"3?u]ojM.[?..?,????D=P+??.?h[????.lDj?-?.?YK???1:.?A?{glX?os.?>.???V??>?.X.?l?2.??????q.?v?UV+?60?0Q(?.?????.?C??Y??^j(U.U?*?.?0r7r?#???m?I??oul?.7??z?)??lz=.??w?????{?.JY5s?.?#???..?ScTt?.?2.???v.?(p??h.??Y??:.?.'?y??e??\", b'k???..R3...{@?[?\\?8???..?????\"V??.??#??z??.????1??\\'???..b??.H.???S??f?j?)??X?h??QfN0?+?mYp?Tz?Fan??exG?Z \\\\?.???????qBN.????e?K?WW??7????\"{5?????v??4v:,.?h?.?...?p?JD??^????.?.?.i?', b'.J=???7.D.%????.?#?%d2\\t;T???K??.7?.lo9??.n?;??+????s?s?*#l@a?=????????.]?+X????n?..?^?.+?????_????Z]?&!z????fx]?.?]?wMk?..0???s\\?.?}????R??????f?3#???X?f??C??.V?????2\\?.Q.sLH.??n.?', b'.?C[??J?.S.???<^.??+?W???t=5????0QX????b??5C?.e????.;8?O?????kj??.?Mm??L????S.?a??1?X?D?.?z?j?nN:??.R.o.??c?|??a.?V?.9K?s?s[??j????{??P%.?v?5???iM?ya?i_?M..08.?c????o:?j?????n?f?.', b\"B?v?D?x^.?)?..6G{o??????7.s???>?=?X???d?.|f$??v?.S?0.?l??.]h????|p.???? ?-????A??s??|>oEx?.'.*??'??..??8.?????V???\\t?7\", b\".?uE?y*?????n?-?.j???...?ql..SC??;3?wf???X]?f???.??.??/???.??????Y???SB?.t?.?{?,Sk??.??o&9?????v??.]..?..?{?.]??.?;?.i???Z2?[????X.lr.X??DB.?A{/??.???f?w?f&?? ?xOx???'0??#??Z?{\", b'?7??\"?.?.??H????.????DA?k???.?df6Un@:.??\".??ncgw???.|os??*{?.???}fkG???M?i??.?5'??P.??~[<Ln\\'?m](?GvG?8e????@4.??(?-?&??y??PZ.}?\\\\???<?...?$.?c?????d?s?Z-?T?u????????tX????l????.', b'?.l??.?dq?~%??\\t?f??.???X?>???2.???E3??+?????7????.j??8????k/k????t???B?7.?.l?9.[Q??D???.??5...=??za?????????.??.3?d3?.?.?.?c??l6?|?.?2l.??p', b'?.l?\\to.??P??V?}??.??n&??\\tg.?d??0??+??<vx?s<.????V+???@?.?????|?.Z?.??y7.J?O?.&?B?s n/h7?f???.?.?N??e???\"?}a.Fe?????RC???z?v.?', b\"?O?[????f?QB.p.?YH?..D.??#?@-/?]?v???o.'??.?Y?.}}Z????SC?????C?....???.?I?.??)m????U??Z/EQ.???{2>rUV+O~~b??d?>??x?.:#?.?a???x??V?????o?0zZ??.?%??.?.J]-.???.????????h???NM2??e??(K??6?o..K?q.?>?Ob??...?.?$N?j????????PJ???????c??J(7?n???', b'.\\??????????.i??U.j/k????.iD.#????????X-?[??z?N}???H?6?oF|)?a.?/??i?7..q??C????????+?????7?o~k???.&?.^.1@?xriG???q?>?+?W?k?Pn\\tv?a??..??SC??Og?Wg\\t;?v?G.D.#?????.??t??=?????3?.?t??.t???u?Y;ax=sg??.b?.v?.?.E??.?.?F.:??.U.', b'?.q?.;???t????gL?.s?-4.<??I?.A?.qECQ.?????Y??.?@.????S???[??=?Y~???????a?.\"?x?x?.\\\\?????~?.??..?????...???.?!????????.??????????.9???????r?.\\\\???????_??o.?..q@<0??o?k.W.%7?+?..o.g?', b\"?..cP.e??p?Z?~?0?B.b???H;?J?%a?,Aa?0;3[?]?? .?1|eXx???.H....??;??R3wf????wf.?.@=P'???+,?..???;?0?.,9O{??????????Zy??.???D???aX?. ..6:????Nc???h?4]2?-????d6?.\", b'??.?0vvw?.U=P;Oo.?u??wf????m??d6?@.6z?.ifr????.?Fs3wffgfiU..??@?.?.Hc?a?wO5??P???f?7&??D!???T7????p]??Nf$c.?????l 9.lx?lUS.T!K.D?Z???.?????.?0??;?;?????nvU?.??@B.?.?Y37???3??&??$', b'?..k???V5??;2.?=..a2k????k????d6.{.6??\\?]{Q?i??1$.&??x#?.9?j=?.??TKr?.??@?.?4?H?????1K???1??.?9XM?=?j..K?.bLf.qEC>????v[????d6.K.6$?????Nc??-??<??l ~.l??', b'???z?\\'??@?.?.s\\'?^we???0&???!?.[}/.??6?Lf.qB#.?m??<??l 6.l$???.?=-.??3H??7?8'??_l/??.??.?.????oy?????X?f^??6.?????+t?.2\"??.nc???0EQr??|>.??????{???5c?[.$.????5K4?{?????.6', b')..p???0?(?sx??.@R.6p.k.s?@?c?m\\t%???n.?x??.z?.??.iM??}??????K??;??.?/.???.?d.FSkF<??.??????^}p.A\"?.o???c????&?x???G???H???? 7. ,.6?.o?[Q??P?\\?e?9.?f?.6b?O?k?k?+??.$E.A?<??..??V', b'?OMOQ..b??.B.@~?CU.?.??/???*.??.\"??V??S/??t??.???.???a?..Q:?.?.???S]?uEQ?.U?+?.E??^?s?<l@F???8??w???.?lv.H??..?.?+.u?.?.?.?.?-?.....#?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?.??l?...aIDAT.?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..?.?.?..l..$@.. .....\\t.?..H??..@..6...', b'?..?.?.?..l..$@.. .....\\t.?..H??..@..6... ?..???.Q0???Z,....IEND?B?']\nmitmproxy has crashed!", "issue_status": "Closed", "issue_reporting_time": "2019-05-28T12:07:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "129": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3548", "issue_id": "#3548", "issue_summary": "support Wireshark extcap interface instead of current GUI", "issue_description": "KOLANICH commented on 28 May 2019 \u2022\nedited\nWireshark has a feature called extcap. There is an extcap dir in Wireshark dir. In this dir binaries reside. These binaries have the same command line interface. Wireshark introspects their capabilities and configures and calls them via CLI. They output a pcap stream into the pipe they get as a CLI arg.\nIt may make sense to have a mode of mitmproxy, which doesn't start a web interface, but works like an extcap, but Wireshark is used as a visualizing and analysing app.\nHere is an example of extcap: https://github.com/wireshark/wireshark/blob/master/doc/extcap_example.py", "issue_status": "Closed", "issue_reporting_time": "2019-05-27T23:03:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "130": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3546", "issue_id": "#3546", "issue_summary": "How to script mitm between to machines", "issue_description": "qymspace1 commented on 25 May 2019\nSteps to reproduce the problem:\nI have no Problem. Just a question/ask for advice\nCould you brilliant people please point on the right direction of how to achieve this:\nRun a mitm proxy on my computer(Client) -> Intercept all requests -> Send all requests as text(Via email/chat) -> Receive the message on my server(Server) which runs a second mitm proxy -> Text the message and pass it as a request to mitm proxy on Server to complete the request->Send response back as text(Email/Chat) back to Client\nHow can I script mitm proxy to achieve this?", "issue_status": "Closed", "issue_reporting_time": "2019-05-25T16:45:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "131": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3543", "issue_id": "#3543", "issue_summary": "Deploy to kubrentes", "issue_description": "botzill commented on 22 May 2019\nI'm trying to deploy mitmproxy to kubernetes using nginx-ingress. Did anyone try that, how it works? I somehow don't manage to get it to work.", "issue_status": "Closed", "issue_reporting_time": "2019-05-21T21:27:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "132": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3540", "issue_id": "#3540", "issue_summary": "\u2800", "issue_description": "sdfww commented on 16 May 2019 \u2022\nedited\n\u2800", "issue_status": "Closed", "issue_reporting_time": "2019-05-15T21:37:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "133": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3539", "issue_id": "#3539", "issue_summary": "Changing Host/Port while running the proxy breaks it.", "issue_description": "Contributor\narmudgal commented on 15 May 2019\nSteps to reproduce the problem:\nRun mitmproxy\nPress O and go to port\nChange the port and press Enter\nTraceback\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/mitmproxy/master.py\", line 86, in run_loop\n    loop()\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 286, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 384, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 1484, in run\n    reraise(*exc_info)\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/compat.py\", line 58, in reraise\n    raise value\n  File \"/usr/local/opt/python/Frameworks/Python.framework/Versions/3.7/lib/python3.7/asyncio/events.py\", line 88, in _run\n    self._context.run(self._callback, *self._args)\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/raw_display.py\", line 404, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/raw_display.py\", line 502, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 411, in _update\n    self.process_input(keys)\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/main_loop.py\", line 511, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/mitmproxy/tools/console/window.py\", line 309, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1131, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/mitmproxy/tools/console/window.py\", line 44, in keypress\n    ret = super().keypress(size, key)\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/urwid/container.py\", line 1131, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/mitmproxy/tools/console/options.py\", line 283, in keypress\n    return self.focus_item.keypress(tsize, key)\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/mitmproxy/tools/console/options.py\", line 177, in keypress\n    d = self.master.options.parse_setval(foc.opt.name, v)\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/mitmproxy/optmanager.py\", line 332, in parse_setval\n    if o.typespec in (str, typing.Optional[str]):\nAttributeError: 'str' object has no attribute 'typespec'\nAny other comments? What have you tried so far?\nmitmproxy --listen-port <port> works fine\nSystem information\nMitmproxy: 4.0.4\nPython:    3.7.3\nOpenSSL:   OpenSSL 1.0.2r  26 Feb 2019\nPlatform:  Darwin-17.7.0-x86_64-i386-64bit\nref: #2932 (comment)", "issue_status": "Closed", "issue_reporting_time": "2019-05-15T13:35:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "134": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3538", "issue_id": "#3538", "issue_summary": "TypeError: Object of type MultiDictView is not JSON serializable", "issue_description": "binger1990 commented on 14 May 2019\nSteps to reproduce the problem:\ndef request(self, flow: mitmproxy.http.HTTPFlow):\nctx.log.info(flow.request.query)\n#####addons.py\naddons = [\nAdReport.AdReport()\n]\n#####Error:\n\nSystem information\npython3.7.3", "issue_status": "Closed", "issue_reporting_time": "2019-05-14T02:50:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "135": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3537", "issue_id": "#3537", "issue_summary": "pip3 install mitmproxy error", "issue_description": "suanping commented on 8 May 2019\nSteps to reproduce the problem:\npython3.7 version\npip3 install mitmproxy\nany suggestion ?\nMicrosoft Windows [\u7248\u672c 6.1.7601]\n\u7248\u6743\u6240\u6709 (c) 2009 Microsoft Corporation\u3002\u4fdd\u7559\u6240\u6709\u6743\u5229\u3002\nC:\\Users\\Administrator>pip3 install mitmproxy\nCollecting mitmproxy\nUsing cached https://files.pythonhosted.org/packages/e5/6c/fe3f4b4cbef7f703b11\n99d5443963c4c56c2182223375bdaf0930e1ad052/mitmproxy-4.0.4-py3-none-any.whl\nRequirement already satisfied: kaitaistruct<0.9,>=0.7 in d:\\python37\\lib\\site-pa\nckages (from mitmproxy) (0.8)\nRequirement already satisfied: hyperframe<6,>=5.1.0 in d:\\python37\\lib\\site-pack\nages (from mitmproxy) (5.2.0)\nRequirement already satisfied: blinker<1.5,>=1.4 in d:\\python37\\lib\\site-package\ns (from mitmproxy) (1.4)\nRequirement already satisfied: pyOpenSSL<18.1,>=17.5 in d:\\python37\\lib\\site-pac\nkages (from mitmproxy) (18.0.0)\nRequirement already satisfied: wsproto<0.12.0,>=0.11.0 in d:\\python37\\lib\\site-p\nackages (from mitmproxy) (0.11.0)\nRequirement already satisfied: urwid<2.1,>=2.0.1 in d:\\python37\\lib\\site-package\ns (from mitmproxy) (2.0.1)\nRequirement already satisfied: h2<4,>=3.0.1 in d:\\python37\\lib\\site-packages (fr\nom mitmproxy) (3.1.0)\nRequirement already satisfied: certifi>=2015.11.20.1 in d:\\python37\\lib\\site-pac\nkages (from mitmproxy) (2019.3.9)\nRequirement already satisfied: pyperclip<1.7,>=1.6.0 in d:\\python37\\lib\\site-pac\nkages (from mitmproxy) (1.6.5)\nRequirement already satisfied: pyparsing<2.3,>=2.1.3 in d:\\python37\\lib\\site-pac\nkages (from mitmproxy) (2.2.2)\nRequirement already satisfied: cryptography<2.4,>=2.1.4 in d:\\python37\\lib\\site-\npackages (from mitmproxy) (2.3.1)\nRequirement already satisfied: click<7,>=6.2 in d:\\python37\\lib\\site-packages (f\nrom mitmproxy) (6.7)\nRequirement already satisfied: passlib<1.8,>=1.6.5 in d:\\python37\\lib\\site-packa\nges (from mitmproxy) (1.7.1)\nRequirement already satisfied: pyasn1<0.5,>=0.3.1 in d:\\python37\\lib\\site-packag\nes (from mitmproxy) (0.4.5)\nRequirement already satisfied: ruamel.yaml<0.16,>=0.13.2 in d:\\python37\\lib\\site\n-packages (from mitmproxy) (0.15.94)\nRequirement already satisfied: pydivert<2.2,>=2.0.3; sys_platform == \"win32\" in\nd:\\python37\\lib\\site-packages (from mitmproxy) (2.1.0)\nRequirement already satisfied: sortedcontainers<2.1,>=1.5.4 in d:\\python37\\lib\\s\nite-packages (from mitmproxy) (2.0.5)\nRequirement already satisfied: tornado<5.2,>=4.3 in d:\\python37\\lib\\site-package\ns (from mitmproxy) (5.1.1)\nRequirement already satisfied: ldap3<2.6,>=2.5 in d:\\python37\\lib\\site-packages\n(from mitmproxy) (2.5.2)\nCollecting brotlipy<0.8,>=0.7.0 (from mitmproxy)\nUsing cached https://files.pythonhosted.org/packages/d9/91/bc79b88590e4f662bd4\n0a55a2b6beb0f15da4726732efec5aa5a3763d856/brotlipy-0.7.0.tar.gz\nRequirement already satisfied: six>=1.5.2 in d:\\python37\\lib\\site-packages (from\npyOpenSSL<18.1,>=17.5->mitmproxy) (1.12.0)\nRequirement already satisfied: h11~=0.7.0 in d:\\python37\\lib\\site-packages (from\nwsproto<0.12.0,>=0.11.0->mitmproxy) (0.7.0)\nRequirement already satisfied: hpack<4,>=2.3 in d:\\python37\\lib\\site-packages (f\nrom h2<4,>=3.0.1->mitmproxy) (3.0.0)\nRequirement already satisfied: asn1crypto>=0.21.0 in d:\\python37\\lib\\site-packag\nes (from cryptography<2.4,>=2.1.4->mitmproxy) (0.24.0)\nRequirement already satisfied: cffi!=1.11.3,>=1.7 in d:\\python37\\lib\\site-packag\nes (from cryptography<2.4,>=2.1.4->mitmproxy) (1.12.3)\nRequirement already satisfied: idna>=2.1 in d:\\python37\\lib\\site-packages (from\ncryptography<2.4,>=2.1.4->mitmproxy) (2.8)\nRequirement already satisfied: pycparser in d:\\python37\\lib\\site-packages (from\ncffi!=1.11.3,>=1.7->cryptography<2.4,>=2.1.4->mitmproxy) (2.19)\nInstalling collected packages: brotlipy, mitmproxy\nRunning setup.py install for brotlipy ... error\nERROR: Complete output from command 'd:\\python37\\python.exe' -u -c 'import s\netuptools, tokenize;file='\"'\"'C:\\Users\\ADMINI1\\AppData\\Local\\Temp\\pip\n-install-jafsrcn7\\brotlipy\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', o\npen)(file);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exe\nc(compile(code, file, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\ADMINI1\nAppData\\Local\\Temp\\pip-record-jrk8bsc0\\install-record.txt' --single-version-exte\nrnally-managed --compile:\nERROR: running install\nrunning build\nrunning build_py\ncreating build\ncreating build\\lib.win-amd64-3.7\ncreating build\\lib.win-amd64-3.7\\brotli\ncopying src\\brotli\\brotli.py -> build\\lib.win-amd64-3.7\\brotli\ncopying src\\brotli\\build.py -> build\\lib.win-amd64-3.7\\brotli\ncopying src\\brotli_init_.py -> build\\lib.win-amd64-3.7\\brotli\nrunning build_clib\nbuilding 'libbrotli' library\ncreating build\\temp.win-amd64-3.7\ncreating build\\temp.win-amd64-3.7\\libbrotli\ncreating build\\temp.win-amd64-3.7\\libbrotli\\common\ncreating build\\temp.win-amd64-3.7\\libbrotli\\dec\ncreating build\\temp.win-amd64-3.7\\libbrotli\\enc\nC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\n\\14.20.27508\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD -Ilibbro\ntli/include -Ilibbrotli/ -Isrc/brotli \"-IC:\\Program Files (x86)\\Microsoft Visual\nStudio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.20.27508\\include\" \"-IC:\\Program Files (\nx86)\\Windows Kits\\NETFXSDK\\4.6.1\\include\\um\" /Tclibbrotli/common/dictionary.c /F\nobuild\\temp.win-amd64-3.7\\libbrotli/common/dictionary.obj\ndictionary.c\nlibbrotli/include\\brotli/types.h(15): fatal error C1083: \u65e0\u6cd5\u6253\u5f00\u5305\u62ec\u6587\u4ef6:\n\u201cstddef.h\u201d: No such file or directory\nerror: command 'C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Buil\ndTools\\VC\\Tools\\MSVC\\14.20.27508\\bin\\HostX86\\x64\\cl.exe' failed with exi\nt status 2\n----------------------------------------\nERROR: Command \"'d:\\python37\\python.exe' -u -c 'import setuptools, tokenize;fi\nle='\"'\"'C:\\Users\\ADMINI1\\AppData\\Local\\Temp\\pip-install-jafsrcn7\\brotl\nipy\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(file);code=f.re\nad().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, file\n, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\ADMINI1\\AppData\\Local\\Temp\\pip-r\necord-jrk8bsc0\\install-record.txt' --single-version-externally-managed --compile\n\" failed with error code 1 in C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\pip-install-j\nafsrcn7\\brotlipy\\", "issue_status": "Closed", "issue_reporting_time": "2019-05-08T02:40:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "136": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3529", "issue_id": "#3529", "issue_summary": "mitmdump not running in docker container", "issue_description": "adr-arroyo commented on 22 Apr 2019 \u2022\nedited\nSteps to reproduce the problem:\nCreated the following dockerfile:\nFROM mitmproxy/mitmproxy:latest\n\nRUN mkdir data_tampering\nWORKDIR /home/$USER/data_tampering\nCOPY ./modify_content.py .\n\n\nEXPOSE 80:80\nEXPOSE 8080:8080\n\nENTRYPOINT [\"mitmdump --mode transparent -s ./modify_content.py\"]\nBuild image by: docker build . -t mitmdump_tampering\nRUN image with: docker run -it mitmdump_tampering:latest resulting in:\ndocker: Error response from daemon: OCI runtime create failed: container_linux.go:348: starting container process caused \"exec: \"mitmdump --mode transparent -s ./modify_content.py\": stat mitmdump --mode transparent -s ./modify_content.py: no such file or directory\": unknown.\nAny other comments? What have you tried so far?\nI have iteratively run the container (with docker run -it mitmdump_tampering /bin/bash) without the ENTRYPOINT and mitmdump runs successfully with the python script INSIDE the container. However, if I directly run the container from the host, i get the error above. I cannot see the reason for this\nSystem information\nMitmproxy: 4.0.4\nPython: 3.6.7\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.15.0-47-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Closed", "issue_reporting_time": "2019-04-22T11:42:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "137": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3527", "issue_id": "#3527", "issue_summary": "Mitmproxy can't import other Module", "issue_description": "Ch1ngg commented on 21 Apr 2019\nSteps to reproduce the problem:\n1.i install mitmproxy and mitmproxy.exe\n2. mitmdump -s\u201ca.py\u201d\n3.mitmproxy remind me [ in script E:\\Workspace\\Python\\CaidaoMitmProxy\\CaidaoMP.py: No module named 'pyDes']\nAny other comments? What have you tried so far?\nNothing\nSystem information\nMitmproxy Version:4.0.4\nOperating System: Windows 10", "issue_status": "Closed", "issue_reporting_time": "2019-04-20T18:30:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "138": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3524", "issue_id": "#3524", "issue_summary": "datetime.fromtimestamp", "issue_description": "Shnitzelil commented on 15 Apr 2019\nSteps to reproduce the problem:\nCreate addon that import datetime\ndate should be value lower than 86400\ndatetime.fromtimestamp(date)\nAny other comments? What have you tried so far?\nJust change the value to 86400\nThe issue comes from python sdk, to solve this mitmproxy must upgrade to python 3.7 or later\nSystem information\n4.0.4", "issue_status": "Closed", "issue_reporting_time": "2019-04-15T07:20:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "139": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3523", "issue_id": "#3523", "issue_summary": "Script API doc for release version", "issue_description": "mikesxf commented on 15 Apr 2019\nAny other comments? What have you tried so far?\nI\u2019m using mitmproxy to capture traffic with my own script (officially called addon). But I can\u2019t find the detailed API doc on web docs (https://docs.mitmproxy.org/archive/v3/addons-overview/) like before (v2 or older version). It is said that I can use command pydoc mitmproxy.http to get the doc. But it can\u2019t work as I\u2019m using the release version I think.\nIs there any way to get the detailed script API doc when using release version? Thanks!\nSystem information\nmitmproxy-3.0.4-linux release version", "issue_status": "Closed", "issue_reporting_time": "2019-04-15T01:22:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "140": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3521", "issue_id": "#3521", "issue_summary": "library not found for -lstdc++", "issue_description": "youran1024 commented on 11 Apr 2019\nSteps to reproduce the problem:\npip3 install mitmproxy\nSystem information\nclang: warning: libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9 [-Wdeprecated]\nclang: warning: libstdc++ is deprecated; move to libc++ with a minimum deployment target of OS X 10.9 [-Wdeprecated]\nld: library not found for -lstdc++\nclang: error: linker command failed with exit code 1 (use -v to see invocation)", "issue_status": "Closed", "issue_reporting_time": "2019-04-11T12:42:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "141": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3520", "issue_id": "#3520", "issue_summary": "error: can't start new thread", "issue_description": "xkabrix commented on 11 Apr 2019\nError in processing of request from 127.0.0.1:21893\nTraceback (most recent call last):\nFile \"c:\\python27\\lib\\site-packages\\netlib\\tcp.py\", line 951, in serve_forever\nt.start()\nFile \"c:\\python27\\lib\\threading.py\", line 736, in start\n_start_new_thread(self.__bootstrap, ())\nerror: can't start new thread", "issue_status": "Closed", "issue_reporting_time": "2019-04-11T09:13:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "142": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3517", "issue_id": "#3517", "issue_summary": "How to build windows binary", "issue_description": "mAmged commented on 10 Apr 2019 \u2022\nedited\nI want to build windows portable binary couln't find any documentations for this, like this https://snapshots.mitmproxy.org/4.0.4/mitmproxy-4.0.4-windows.zip\nany help please?\nthanks,", "issue_status": "Closed", "issue_reporting_time": "2019-04-10T14:33:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "143": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3514", "issue_id": "#3514", "issue_summary": "how to fake response and reply immediately in request function instead of kill flow?", "issue_description": "OldTiger commented on 8 Apr 2019 \u2022\nedited\nDescription: I have tried Return custom response with mitmproxy\nBut met error because flow.reply is not callable", "issue_status": "Closed", "issue_reporting_time": "2019-04-08T08:35:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "144": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3512", "issue_id": "#3512", "issue_summary": "High CPU usage when launch two mitmdump processes", "issue_description": "guoyuanjing2988 commented on 4 Apr 2019\nSteps to reproduce the problem:\nLaunch two MITM proxies on the same desktop:\nmitmdump -p 8080\nmitmdump -p 8888\nConnect two iphones to corresponding proxy.\nThe CPU usage for second proxy will be extremely high (>50%) while the first one is <1%. One proxy alone also consume <1% CPU.\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.3\nOpenSSL: OpenSSL 1.0.2r 26 Feb 2019\nPlatform: Darwin-18.0.0-x86_64_i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2019-04-04T07:29:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "145": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3511", "issue_id": "#3511", "issue_summary": "Intercept more than one domain", "issue_description": "ahtai commented on 4 Apr 2019\nSteps to reproduce the problem:\nI am using mitmproxy on Linux, after I run the mitmproxy with this command \"mitmproxy --listen-host 192.168.1.1 -p 8080\", so that I can trace the user's traffic. Now my problem is I want to intercept user to access Facebook, Youtube, and so on, but I only can intercept the first domain name. I have no idea to intercept more than one website. Someone can please guide me.\nAnd want to know how to intercept IP addresses as well.\nSorry my English is not good.\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 4.0.3\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.17.0-kali1-amd64-x86_64-with-Kali-kali-rolling-kali-rolling", "issue_status": "Closed", "issue_reporting_time": "2019-04-04T05:31:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "146": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3508", "issue_id": "#3508", "issue_summary": "got an error like below", "issue_description": "BigWavelet commented on 28 Mar 2019\nError message:\nIOError when decoding '\\xdb\\xc7m with 'gzip': IOError('Not a gzipped file',)\nMy code:\nfrom mitmproxy import flow, proxy, controller, options\nfrom mitmproxy.proxy.server import ProxyServer\n\nclass MockxyServer(flow.FlowMaster):\n\n    def __init__(self, opts, server, state):\n        super(MockxyServer, self).__init__(opts, server, state)\n        \n\n    def run(self):\n        try:\n            logger.info(\"mockxy server started successfully...\")\n            flow.FlowMaster.run(self)\n        except KeyboardInterrupt:\n            self.shutdown()\n            logger.info(\"Ctrl C - stopping mockxy server\")\n        except Exception,e:\n            logger.error(\"mockxy server error: %s\", e)", "issue_status": "Closed", "issue_reporting_time": "2019-03-28T09:13:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "147": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3507", "issue_id": "#3507", "issue_summary": "What's going on planning?", "issue_description": "q2dg commented on 27 Mar 2019\nLast update was one year ago and development seems a bit stalled from since.\nIs there any problems?\nIs this project healthy?\nThanks!", "issue_status": "Closed", "issue_reporting_time": "2019-03-27T00:04:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "148": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3505", "issue_id": "#3505", "issue_summary": "Hide the fact that mitmproxy is being used", "issue_description": "localhostdotdev commented on 22 Mar 2019\nSteps to reproduce the problem:\nGo to \"https://google.com\"\nSee \"captcha\" / \"We are sorry\" page\nAny other comments? What have you tried so far?\nreCaptcha doesn't work when using mitmproxy too so no way to escape that with the default config. (I'm already disabling HTTP/2)\nSystem information\nMitmproxy: 4.0.4\nPython:    3.7.2\nOpenSSL:   OpenSSL 1.0.2q  20 Nov 2018\nPlatform:  Darwin-17.7.0-x86_64-i386-64bit\nI'm guessing this is based on TLS cyphers signatures like caddy does.", "issue_status": "Closed", "issue_reporting_time": "2019-03-22T14:11:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "149": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3504", "issue_id": "#3504", "issue_summary": "macOS transparent proxy PermissionError", "issue_description": "adamyonk commented on 22 Mar 2019 \u2022\nedited\nSteps to reproduce the problem:\nTrying to proxy all traffic from macOS through to mitmproxy. Followed the steps to set up transparent proxy on macOS where host listens to its own traffic.\nWhen I try to enable pf (step 4),\n\u276f sudo pfctl -e\nPassword:\nNo ALTQ support in kernel\nALTQ related functions disabled\npf enabled\nAre the ALTQ warnings OK/expected?\nAfter sudo -u nobody mitmproxy --mode transparent --showhost:\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 6, in <module>\n    from pkg_resources import load_entry_point\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 3105, in <module>\n    @_call_aside\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 3089, in _call_aside\n    f(*args, **kwargs)\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 3118, in _initialize_master_working_set\n    working_set = WorkingSet._build_master()\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 569, in _build_master\n    ws = cls()\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 562, in __init__\n    self.add_entry(entry)\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 618, in add_entry\n    for dist in find_distributions(entry, True):\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 1965, in find_on_path\n    for dist in factory(fullpath):\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 2035, in distributions_from_metadata\n    root, entry, metadata, precedence=DEVELOP_DIST,\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 2474, in from_location\n    py_version=py_version, platform=platform, **kw\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 2849, in _reload_version\n    md_version = _version_from_file(self._get_metadata(self.PKG_INFO))\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 2438, in _version_from_file\n    line = next(iter(version_lines), '')\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 2628, in _get_metadata\n    for line in self.get_metadata_lines(name):\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 1411, in get_metadata_lines\n    return yield_lines(self.get_metadata(name))\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 1407, in get_metadata\n    value = self._get(self._fn(self.egg_info, name))\n  File \"/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/pkg_resources/__init__.py\", line 1519, in _get\n    with open(path, 'rb') as stream:\nPermissionError: [Errno 13] Permission denied: '/usr/local/Cellar/mitmproxy/4.0.4/libexec/lib/python3.7/site-packages/idna-2.7-py3.7.egg-info/PKG-INFO'\nAny other comments? What have you tried so far?\nPoked around GitHub, StackOverflow, and the forums for this error, but couldn't find any related issues.\nSystem information\nMitmproxy: 4.0.4\nPython:    3.7.2\nOpenSSL:   OpenSSL 1.0.2q  20 Nov 2018\nPlatform:  Darwin-18.2.0-x86_64-i386-64bit\n2", "issue_status": "Closed", "issue_reporting_time": "2019-03-21T22:33:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "150": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3503", "issue_id": "#3503", "issue_summary": "Transparent Proxy not catching any requests", "issue_description": "vunhatminh241191 commented on 22 Mar 2019\nI have 2 machines (A and B), which can talk directly with each other because they are in the same VLAN. I put my proxy in B, where I have a simple docker container running (ports 8070 and 8448). I put my transparent proxy in front of these port numbers because I want to catch the network traffic through this port. I also config my iptable to listen to any incoming package comes to these ports and forwarding to my proxy. However, when I do the request from A to B, it goes direct to my docker container's port instead of forwarding it to my proxy. Does anyone have ideas about what is going on?\nSteps to reproduce the problem:\nFollow these step https://docs.mitmproxy.org/stable/howto-transparent/\nmitmproy --m transparent -p $PORTNUMBER\nAny other comments? What have you tried so far?\nI tried to use \"traceroute\" but I can't get anything.\nSystem information\nMitmproxy: 4.0.4\nPython: 3.6.7\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-4.15.0-43-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Closed", "issue_reporting_time": "2019-03-21T22:30:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "151": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3502", "issue_id": "#3502", "issue_summary": "Server replay corrupts Date header", "issue_description": "vfaronov commented on 21 Mar 2019\nSteps to reproduce the problem:\nStart mitmproxy.\nRun a request through it and observe that the Date header of the response is correct:\n$ curl -six http://localhost:8080 http://httpbin.org/status/200 | grep Date:\nDate: Thu, 21 Mar 2019 12:45:00 GMT\nIn mitmproxy, start server replay:\n: replay.server @all\nRun a request again and observe that the Date header now has -0000 instead of GMT:\n$ curl -six http://localhost:8080 http://httpbin.org/status/200 | grep Date:\nDate: Thu, 21 Mar 2019 12:46:58 -0000\nAny other comments? What have you tried so far?\nPer RFC 7231 \u00a7 7.1.1, a correct HTTP date always has GMT.\nSystem information\nMitmproxy: 4.0.4 binary\nPython:    3.6.3\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Linux-4.15.0-46-generic-x86_64-with-debian-buster-sid", "issue_status": "Closed", "issue_reporting_time": "2019-03-21T12:50:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "152": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3500", "issue_id": "#3500", "issue_summary": "how to get entire raw request and response", "issue_description": "Lucifer1993 commented on 20 Mar 2019 \u2022\nedited\nHello, how to use mitmproxy get entire requests and response like with python3:\nPOST /sample.jsp HTTP/1.1\nAccept:image/gif.image/jpeg,/\nAccept-Language:zh-cn\nConnection:Keep-Alive\nHost:localhost\nUser-Agent:Mozila/4.0(compatible;MSIE5.01;Window NT5.0)\nAccept-Encoding:gzip,deflate\nusername=jinqiao&password=1234", "issue_status": "Closed", "issue_reporting_time": "2019-03-20T09:15:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "153": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3498", "issue_id": "#3498", "issue_summary": "Unable to setup mitmproxy due to blinker 1.5", "issue_description": "JoeMarshall123 commented on 17 Mar 2019\nI am currently unable to install mitmproxy on Raspberry Pi 3 due to the below. Anyone ever had similar issues?\n{pi} $ ./dev.sh\n+ echo Creating dev environment in ./venv...\nCreating dev environment in ./venv...\n+ python3 -m venv venv\n\n+ . venv/bin/activate\n+ deactivate nondestructive\n+ [ -n  ]\n+ [ -n  ]\n+ [ -n  -o -n  ]\n+ [ -n  ]\n+ unset VIRTUAL_ENV\n+ [ ! nondestructive = nondestructive ]\n+ VIRTUAL_ENV=/home/pi/Desktop/mitmproxy/venv\n+ export VIRTUAL_ENV\n+ _OLD_VIRTUAL_PATH=/home/pi/.local/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games\n+ PATH=/home/pi/Desktop/mitmproxy/venv/bin:/home/pi/.local/bin/:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games\n+ export PATH\n+ [ -n  ]\n+ [ -z  ]\n+ _OLD_VIRTUAL_PS1=$\n+ [ x(venv)  != x ]\n+ PS1=(venv) $\n+ export PS1\n+ [ -n  -o -n  ]\n+ pip3 install -U pip setuptools\npip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.\nRetrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/pip/\nRetrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/pip/\nRetrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/pip/\nRetrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/pip/\nRetrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/pip/\nCould not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")) - skipping\nRequirement already up-to-date: pip in ./venv/lib/python3.7/site-packages (18.1)\nRetrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/setuptools/\nRetrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/setuptools/\nRetrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/setuptools/\nRetrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/setuptools/\nRetrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/setuptools/\nCould not fetch URL https://pypi.org/simple/setuptools/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/setuptools/ (Caused by SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")) - skipping\nRequirement already up-to-date: setuptools in ./venv/lib/python3.7/site-packages (40.6.2)\npip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.\nCould not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")) - skipping\n+ pip3 install -r requirements.txt\npip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.\nObtaining file:///home/pi/Desktop/mitmproxy (from -r requirements.txt (line 1))\nCollecting blinker<1.5,>=1.4 (from mitmproxy==5.0.0.dev0->-r requirements.txt (line 1))\n  Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/blinker/\n  Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/blinker/\n  Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/blinker/\n  Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/blinker/\n  Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")': /simple/blinker/\n  Could not fetch URL https://pypi.org/simple/blinker/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/blinker/ (Caused by SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")) - skipping\n  Could not find a version that satisfies the requirement blinker<1.5,>=1.4 (from mitmproxy==5.0.0.dev0->-r requirements.txt (line 1)) (from versions: )\nNo matching distribution found for blinker<1.5,>=1.4 (from mitmproxy==5.0.0.dev0->-r requirements.txt (line 1))\npip is configured with locations that require TLS/SSL, however the ssl module in Python is not available.\nCould not fetch URL https://pypi.org/simple/pip/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='pypi.org', port=443): Max retries exceeded with url: /simple/pip/ (Caused by SSLError(\"Can't connect to HTTPS URL because the SSL module is not available.\")) - skipping", "issue_status": "Closed", "issue_reporting_time": "2019-03-17T09:55:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "154": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3497", "issue_id": "#3497", "issue_summary": "400 No required SSL certificate was sent", "issue_description": "yilingsj commented on 17 Mar 2019\nfiddler\uff0ccharles and mitmproxy They all failed!\neg:https://img.alicdn.com/imgextra/i1/759415648/O1CN016k9Bvh1rapU9jcmu0_!!759415648.png\n\u6211\u6b63\u5728\u6293soul app\uff0c\u7ed3\u679c\u53d1\u73b0\u65e0\u6cd5\u6293\u53d6https\u7684\u6570\u636e\uff0c\u4f46\u662f\u6709\u4e9bhttps\u662f\u53ef\u4ee5\u6b63\u786e\u8fd4\u56de\u6570\u636e\u7684", "issue_status": "Closed", "issue_reporting_time": "2019-03-17T04:02:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "155": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3484", "issue_id": "#3484", "issue_summary": "not capturing anything", "issue_description": "asvi2409 commented on 21 Feb 2019\ngreetings\nEvents\ninfo: 127.0.0.1:59374: clientconnect\ninfo: 127.0.0.1:59376: clientconnect\nwarn: 127.0.0.1:59376: HTTP protocol error in client request: Bad HTTP request line:\nb'\\x05\\x01\\x00'\nwarn: 127.0.0.1:59374: HTTP protocol error in client request: Bad HTTP request line:\nb'\\x05\\x01\\x00'\ninfo: 127.0.0.1:59374: clientdisconnect\ninfo: 127.0.0.1:59376: clientdisconnect\ninfo: 127.0.0.1:59380: clientconnect\ninfo: 127.0.0.1:59382: clientconnect\nI also tried to run with --rawtcp and transparent mode but getting the same result\nMitmproxy: 4.0.4\nPython: 3.7.2\nOpenSSL: OpenSSL 1.1.1a 20 Nov 2018\nPlatform: Linux-4.14.101-1-MANJARO-x86_64-with-arch-Manjaro-Linux", "issue_status": "Closed", "issue_reporting_time": "2019-02-21T06:31:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "156": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3483", "issue_id": "#3483", "issue_summary": "Feature request - Add an option to run in background as service", "issue_description": "WHK102 commented on 20 Feb 2019\nAdd an option to run in background as service like as postgresql binaries using pg_ctl. From ssh access run the pg_ctl with run arguments and the pg service run in background without current shell session.\nExample: mitmdump [options...] --service start\nAnd save the pid file in current directory for multiple instances or declare manualy, example: mitmdump [options...] --service start --pid-file ./instance-website.com.pid", "issue_status": "Closed", "issue_reporting_time": "2019-02-20T14:19:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "157": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3479", "issue_id": "#3479", "issue_summary": "\u624b\u673a\u548c\u7535\u8111\u7ffb\u5899\u540e\uff0c\u5982\u4f55\u7528mitmproxy\u6293\u5305", "issue_description": "mansonami commented on 15 Feb 2019\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2019-02-15T07:17:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "158": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3478", "issue_id": "#3478", "issue_summary": "Icons not loading in mitmweb - potential fontawesome issue?", "issue_description": "victorhooi commented on 15 Feb 2019\nSteps to reproduce the problem:\nLaunch mitmweb with mitmweb --set block_global=false --web-iface 0.0.0.0.\nNavigate to port 8081 on the mitmweb IP address.\nAny other comments? What have you tried so far?\nI see square instead of what I assume are fontawesome icons.\nI think this might be similar to #3397 - and maybe even #3034 - however, will let developers decide.\nSystem information\n^Cvictorhooi@mitmproxy:~$ mitmproxy --version\nMitmproxy: 4.0.4\nPython:    3.6.7\nOpenSSL:   OpenSSL 1.1.1  11 Sep 2018\nPlatform:  Linux-4.18.0-1006-gcp-x86_64-with-Ubuntu-18.10-cosmic", "issue_status": "Closed", "issue_reporting_time": "2019-02-14T22:32:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "159": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3476", "issue_id": "#3476", "issue_summary": "If you can see this, traffic is not passing through mitmproxy", "issue_description": "jepunband commented on 13 Feb 2019\nmitmproxy - 0.18.2\nHi after starting mitmproxy, when go to mitm.it i get this \"If you can see this, traffic is not passing through mitmproxy\".\ni have done all this:\nsysctl -w net.ipv4.ip_forward=1\niptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\niptables -t nat -A PREROUTING -i eth0 -p tcp --dport 443 -j REDIRECT --to-port 8080\nhow to solve this?", "issue_status": "Closed", "issue_reporting_time": "2019-02-13T05:44:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "160": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3472", "issue_id": "#3472", "issue_summary": "New release?", "issue_description": "FFY00 commented on 12 Feb 2019\nCan we have a new release so that #3459 is included?\nThanks,\nFilipe", "issue_status": "Closed", "issue_reporting_time": "2019-02-11T21:35:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "161": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3469", "issue_id": "#3469", "issue_summary": "Errors when trying to use server replay on the flows created with help of mitmproxy", "issue_description": "Contributor\nkajojify commented on 8 Feb 2019\nSteps to reproduce the problem:\nRun mitmproxy.\nPress n -> enter -> r\nPress : -> input \"replay.server @Focus\" -> enter -> r\nCreate second flow using \"n -> enter -> r\" sequence.\nPress : -> input replay.server @all -> enter -> replay any flow.\nSystem information\nMitmproxy: 5.0.0.dev (+223, commit 139a385)\nPython: 3.6.7\nOpenSSL: OpenSSL 1.0.2g 1 Mar 2016\nPlatform: Linux-4.4.0-141-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2019-02-07T21:15:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "162": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3468", "issue_id": "#3468", "issue_summary": "Export to JSON", "issue_description": "localhostdotdev commented on 7 Feb 2019\nSteps to reproduce the problem:\nLog flows\nWant to read flows from other language from python\nCan't export one or multiple flow to JSON\nAny other comments? What have you tried so far?\nIdeally I could export all the flows matching a filter to JSON\nSystem information\nMitmproxy: 4.0.4\nPython:    3.7.0\nOpenSSL:   OpenSSL 1.1.0i  14 Aug 2018\nPlatform:  Darwin-17.7.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2019-02-07T16:35:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "163": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3467", "issue_id": "#3467", "issue_summary": "Unformatted documentation page", "issue_description": "localhostdotdev commented on 7 Feb 2019\nSteps to reproduce the problem:\ngoogle \"simple mitmproxy example\"\nfirst result is: https://mitmproxy.readthedocs.io/en/latest/src/examples/simple/\nSee unreadable page\nAny other comments? What have you tried so far?\nObviously the correct examples are in the examples/ folder in this repo", "issue_status": "Closed", "issue_reporting_time": "2019-02-07T16:31:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "164": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3455", "issue_id": "#3455", "issue_summary": "Mobile internet", "issue_description": "WhisperLoli commented on 24 Jan 2019\nI installed mitmproxy, the phone is also connected to the proxy, but can not access the Internet", "issue_status": "Closed", "issue_reporting_time": "2019-01-24T16:12:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "165": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3454", "issue_id": "#3454", "issue_summary": "Not compatible with wsproto 0.13", "issue_description": "Contributor\nyan12125 commented on 24 Jan 2019\nSteps to reproduce the problem:\nInstall wsproto 0.13\nRemove wsproto version upper bound in setup.py\nTry to run mitmproxy\n$ python3.6 -c 'from mitmproxy.tools.main import mitmproxy; mitmproxy()'\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/tools/main.py\", line 22, in <module>\n    from ._main import *  # noqa\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/tools/_main.py\", line 13, in <module>\n    from mitmproxy.tools import cmdline  # noqa\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/tools/cmdline.py\", line 3, in <module>\n    from mitmproxy.addons import core\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/addons/__init__.py\", line 11, in <module>\n    from mitmproxy.addons import onboarding\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/addons/onboarding.py\", line 2, in <module>\n    from mitmproxy.addons.onboardingapp import app\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/addons/onboardingapp/app.py\", line 8, in <module>\n    from mitmproxy.proxy import config\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/__init__.py\", line 2, in <module>\n    from .root_context import RootContext\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/root_context.py\", line 4, in <module>\n    from mitmproxy.proxy import protocol\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/__init__.py\", line 33, in <module>\n    from .http import UpstreamConnectLayer\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 10, in <module>\n    from mitmproxy.proxy.protocol.websocket import WebSocketLayer\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/websocket.py\", line 8, in <module>\n    from wsproto.connection import ConnectionType, WSConnection\nImportError: cannot import name 'WSConnection'\nAny other comments? What have you tried so far?\nI tried to patch mitmproxy following a commit message in wsproto python-hyper/wsproto@994d1fa. Here I use wsproto.connection.Connection instead of wsproto.WSConnection as the former allows specifying extensions. With the following patch,\ndiff --git a/mitmproxy/proxy/protocol/websocket.py b/mitmproxy/proxy/protocol/websocket.py\nindex 0d1964a6..2a49e050 100644\n--- a/mitmproxy/proxy/protocol/websocket.py\n+++ b/mitmproxy/proxy/protocol/websocket.py\n@@ -5,7 +5,7 @@ from OpenSSL import SSL\n \n import wsproto\n from wsproto import events\n-from wsproto.connection import ConnectionType, WSConnection\n+from wsproto.connection import ConnectionType, Connection as WSConnection\n from wsproto.extensions import PerMessageDeflate\n \n from mitmproxy import exceptions\n@@ -67,13 +67,13 @@ class WebSocketLayer(base.Layer):\n                 conn.extensions[0].finalize(conn, handshake_flow.response.headers['Sec-WebSocket-Extensions'])\n \n         data = self.connections[self.server_conn].bytes_to_send()\n-        self.connections[self.client_conn].receive_bytes(data)\n+        self.connections[self.client_conn].receive_data(data)\n \n         event = next(self.connections[self.client_conn].events())\n         assert isinstance(event, events.ConnectionRequested)\n \n         self.connections[self.client_conn].accept(event)\n-        self.connections[self.server_conn].receive_bytes(self.connections[self.client_conn].bytes_to_send())\n+        self.connections[self.server_conn].receive_data(self.connections[self.client_conn].bytes_to_send())\n         assert isinstance(next(self.connections[self.server_conn].events()), events.ConnectionEstablished)\n \n     def _handle_event(self, event, source_conn, other_conn, is_server):\n@@ -197,7 +197,7 @@ class WebSocketLayer(base.Layer):\n                     is_server = (source_conn == self.server_conn)\n \n                     frame = websockets.Frame.from_file(source_conn.rfile)\n-                    self.connections[source_conn].receive_bytes(bytes(frame))\n+                    self.connections[source_conn].receive_data(bytes(frame))\n                     source_conn.send(self.connections[source_conn].bytes_to_send())\n \n                     if close_received:\nWebsocket tests in mitmproxy fail with:\nTraceback (most recent call last):\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 260, in _process_flow\n    return self.handle_regular_connect(f)\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\n    layer()\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 444, in _process_flow\n    layer = WebSocketLayer(self, f)\n  File \"/Users/yen/var/syncthing/Projects/mitmproxy/mitmproxy/proxy/protocol/websocket.py\", line 64, in __init__\n    extensions=extensions)\nTypeError: __init__() got an unexpected keyword argument 'host'\nSystem information\nVersion: 139a385\nOS: macOS Mojave 10.14.2\nPython: 3.6.8", "issue_status": "Closed", "issue_reporting_time": "2019-01-24T16:04:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "166": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3452", "issue_id": "#3452", "issue_summary": "decide on response event base on requestheaders event value", "issue_description": "s0heil commented on 21 Jan 2019\nSteps to reproduce the problem:\ni want to add something at response of some request that received with my mitmproxy. based on request header on it. at first i define instance value in my addon, (use a flag). then check request header in requestheaders event, if the condition is true, set true on my flag. at response event if my flag is true then add some thing to the response. but the point is there is no instance value in addon and the initialized just once that mitmproxy start working.\ni checked many way, for example saving requestheaders value in hash table but i can not even find a way to map which response is for which request.\nI would appreciate FOR ANY HELPS\nThanks! :) -->", "issue_status": "Closed", "issue_reporting_time": "2019-01-21T11:18:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "167": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3449", "issue_id": "#3449", "issue_summary": "issue with netlib", "issue_description": "ghost commented on 15 Jan 2019\nHello there.\nI need to build a project (https://github.com/realgam3/pymultitor) and it requires mitmproxy < 3.0.0\nThe problem is that when i bundle netlib 0.16, it doesn't come along with these imports:\nfrom netlib import strutils from netlib.http import url\nwhich version of netlib comes along with mitmproxy 2.0.2?\nand in case it is prior to netlib 0.15, the repository: https://github.com/mitmproxy/netlib/ is missing versions prior to 0.15.\nThanks in advance.", "issue_status": "Closed", "issue_reporting_time": "2019-01-15T09:39:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "168": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3447", "issue_id": "#3447", "issue_summary": "too strict install_requires dependencies", "issue_description": "blshkv commented on 11 Jan 2019\nHello,\nwe are working on adding the tool in Gentoo (https://bugs.gentoo.org/572170) and noticed that the current requirement list is too strict.\nhttps://github.com/mitmproxy/mitmproxy/blob/master/setup.py#L63\nYou have restricted ALL new versions just in case which is not much better than pining dependencies to specific versions\nPlease remove this restriction unless it is known that a package changes an API frequently.\nThank you.", "issue_status": "Closed", "issue_reporting_time": "2019-01-10T23:44:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "169": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3446", "issue_id": "#3446", "issue_summary": "test failures on Fedora development branch (rawhide/F30)", "issue_description": "rathann commented on 10 Jan 2019\nSteps to reproduce the problem:\nOn Fedora develoment branch (F30/rawhide), I installed all dependencies and ran:\n$ /usr/bin/python3 setup.py build '--executable=/usr/bin/python3 -s'\n...\n$ pytest-3 --lf -v \n================================================= test session starts ==================================================\nplatform linux -- Python 3.7.2, pytest-3.9.3, py-1.7.0, pluggy-0.8.0 -- /usr/bin/python3\ncachedir: .pytest_cache\nrootdir: /builddir/build/BUILD/mitmproxy-82bc8c7ca2b946e7f022b92ab16ced2924feb284, inifile: setup.cfg\nplugins: xdist-1.25.0, forked-0.2, asyncio-0.9.0\ncollected 1427 items / 1422 deselected                                                                                 \nrun-last-failure: rerun previous 5 failures\n\ntest/mitmproxy/net/test_tcp.py::TestServerCipherList::test_echo FAILED\ntest/mitmproxy/net/test_tcp.py::TestServerCurrentCipher::test_echo FAILED\ntest/mitmproxy/net/test_tcp.py::TestClientCipherListError::test_echo FAILED\ntest/mitmproxy/net/test_tcp.py::TestDHParams::test_dhparams FAILED\ntest/mitmproxy/net/test_tls.py::TestMasterSecretLogger::test_log FAILED\n\n======================================================= FAILURES =======================================================\n____________________________________________ TestServerCipherList.test_echo ____________________________________________\n\nself = <test.mitmproxy.net.test_tcp.TestServerCipherList object at 0x7f51c6c43c18>\n\n    def test_echo(self):\n        c = tcp.TCPClient((\"127.0.0.1\", self.port))\n        with c.connect():\n            c.convert_to_tls(sni=\"foo.com\")\n            expected = b\"['AES256-GCM-SHA384']\"\n>           assert c.rfile.read(len(expected) + 2) == expected\nE           assert b\"['TLS_AES_256_GCM_SHA38\" == b\"['AES256-GCM-SHA384']\"\nE             At index 2 diff: 84 != 65\nE             Left contains more items, first extra item: 51\nE             Full diff:\nE             - b\"['TLS_AES_256_GCM_SHA38\"\nE             ?     ----   -   ^   ^\nE             + b\"['AES256-GCM-SHA384']\"\nE             ?           ^   ^     +++\n\ntest/mitmproxy/net/test_tcp.py:429: AssertionError\n__________________________________________ TestServerCurrentCipher.test_echo ___________________________________________\n\nself = <test.mitmproxy.net.test_tcp.TestServerCurrentCipher object at 0x7f51c6cb74a8>\n\n    def test_echo(self):\n        c = tcp.TCPClient((\"127.0.0.1\", self.port))\n        with c.connect():\n            c.convert_to_tls(sni=\"foo.com\")\n>           assert b'AES256-GCM-SHA384' in c.rfile.readline()\nE           assert b'AES256-GCM-SHA384' in b\"('TLS_AES_256_GCM_SHA384', 256, 'TLSv1.3')\"\nE            +  where b\"('TLS_AES_256_GCM_SHA384', 256, 'TLSv1.3')\" = <bound method Reader.readline of <mitmproxy.net.tcp.Reader object at 0x7f51c6cb7550>>()\nE            +    where <bound method Reader.readline of <mitmproxy.net.tcp.Reader object at 0x7f51c6cb7550>> = <mitmproxy.net.tcp.Reader object at 0x7f51c6cb7550>.readline\nE            +      where <mitmproxy.net.tcp.Reader object at 0x7f51c6cb7550> = <mitmproxy.net.tcp.TCPClient object at 0x7f51c6cb75f8>.rfile\n\ntest/mitmproxy/net/test_tcp.py:449: AssertionError\n_________________________________________ TestClientCipherListError.test_echo __________________________________________\n\nself = <test.mitmproxy.net.test_tcp.TestClientCipherListError object at 0x7f51c6ca89b0>\n\n    def test_echo(self):\n        c = tcp.TCPClient((\"127.0.0.1\", self.port))\n        with c.connect():\n            with pytest.raises(Exception, match=\"cipher specification\"):\n>               c.convert_to_tls(sni=\"foo.com\", cipher_list=\"bogus\")\nE               Failed: DID NOT RAISE <class 'Exception'>\n\ntest/mitmproxy/net/test_tcp.py:475: Failed\n______________________________________________ TestDHParams.test_dhparams ______________________________________________\n\nself = <test.mitmproxy.net.test_tcp.TestDHParams object at 0x7f51c63ca908>\n\n    def test_dhparams(self):\n        c = tcp.TCPClient((\"127.0.0.1\", self.port))\n        with c.connect():\n            c.convert_to_tls()\n            ret = c.get_current_cipher()\n>           assert ret[0] == \"DHE-RSA-AES256-SHA\"\nE           AssertionError: assert 'TLS_AES_256_GCM_SHA384' == 'DHE-RSA-AES256-SHA'\nE             - TLS_AES_256_GCM_SHA384\nE             + DHE-RSA-AES256-SHA\n\ntest/mitmproxy/net/test_tcp.py:613: AssertionError\n___________________________________________ TestMasterSecretLogger.test_log ____________________________________________\n\nself = <test.mitmproxy.net.test_tls.TestMasterSecretLogger object at 0x7f51c6ca82b0>\ntmpdir = local('/tmp/pytest-of-mockbuild/pytest-6/test_log0')\n\n    def test_log(self, tmpdir):\n        testval = b\"echo!\\n\"\n        _logfun = tls.log_master_secret\n    \n        logfile = str(tmpdir.join(\"foo\", \"bar\", \"logfile\"))\n        tls.log_master_secret = tls.MasterSecretLogger(logfile)\n    \n        c = TCPClient((\"127.0.0.1\", self.port))\n        with c.connect():\n            c.convert_to_tls()\n            c.wfile.write(testval)\n            c.wfile.flush()\n            assert c.rfile.readline() == testval\n            c.finish()\n    \n            tls.log_master_secret.close()\n            with open(logfile, \"rb\") as f:\n>               assert f.read().count(b\"CLIENT_RANDOM\") == 2\nE               AssertionError: assert 6 == 2\nE                +  where 6 = <built-in method count of bytes object at 0x55c2e7455140>(b'CLIENT_RANDOM')\nE                +    where <built-in method count of bytes object at 0x55c2e7455140> = b'\\r\\nCLIENT_RANDOM 4d21b2b5aba1b94055f5e27a6bbc61ac633ecc0d49674a30001202fb0f7fe4de 000000000000000000000000000000000...0001202fb0f7fe4de 170efebbe61c05e385c4cb72a01e5a6753c279664b9001905e707d73385733b82b2900c23b3cbba4e6d6d8d1fb7e3f42\\r\\n'.count\nE                +      where b'\\r\\nCLIENT_RANDOM 4d21b2b5aba1b94055f5e27a6bbc61ac633ecc0d49674a30001202fb0f7fe4de 000000000000000000000000000000000...0001202fb0f7fe4de 170efebbe61c05e385c4cb72a01e5a6753c279664b9001905e707d73385733b82b2900c23b3cbba4e6d6d8d1fb7e3f42\\r\\n' = <built-in method read of _io.BufferedReader object at 0x7f51c99a1728>()\nE                +        where <built-in method read of _io.BufferedReader object at 0x7f51c99a1728> = <_io.BufferedReader name='/tmp/pytest-of-mockbuild/pytest-6/test_log0/foo/bar/logfile'>.read\n\ntest/mitmproxy/net/test_tls.py:46: AssertionError\nAny other comments? What have you tried so far?\nI don't know if it's relevant, but Fedora 30 comes with click-7.0 and sortedcontainers-2.1.0, so I had to patch these in setup.py:\ndiff -up a/setup.py.v b/setup.py\n--- a/setup.py  2019-01-09 22:01:18.106375874 +0100\n+++ b/setup.py    2019-01-09 22:01:32.514534469 +0100\n@@ -64,7 +64,7 @@ setup(\n         \"blinker>=1.4, <1.5\",\n         \"brotlipy>=0.7.0,<0.8\",\n         \"certifi>=2015.11.20.1\",  # no semver here - this should always be on the last release!\n-        \"click>=6.2, <7\",\n+        \"click>=6.2,<7.1\",\n         \"cryptography>=2.1.4,<2.5\",\n         \"h2>=3.0.1,<4\",\n         \"hyperframe>=5.1.0,<6\",\n@@ -77,7 +77,7 @@ setup(\n         \"pyparsing>=2.1.3,<2.4\",\n         \"pyperclip>=1.6.0,<1.8\",\n         \"ruamel.yaml>=0.15,<0.16\",\n-        \"sortedcontainers>=1.5.4,<2.1\",\n+        \"sortedcontainers>=1.5.4,<2.2\",\n         \"tornado>=4.3,<5.2\",\n         \"urwid>=2.0.1,<2.1\",\n         \"wsproto>=0.12.0,<0.13.0\",\nSystem information\nBuild from git master, commit 82bc8c7 .\nMitmproxy: 5.0.0.dev\nPython:    3.7.2\nOpenSSL:   OpenSSL 1.1.1 FIPS  11 Sep 2018\nPlatform:  Linux-4.19.13-300.fc29.x86_64-x86_64-with-fedora-30-Rawhide", "issue_status": "Closed", "issue_reporting_time": "2019-01-09T23:33:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "170": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3442", "issue_id": "#3442", "issue_summary": "Source code release", "issue_description": "ndowens commented on 5 Jan 2019\nCan you make an official release of the source code instead of binary, so it could be packaged in VoidLinux\nvoid-linux/void-packages#4432", "issue_status": "Closed", "issue_reporting_time": "2019-01-05T17:04:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "171": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3439", "issue_id": "#3439", "issue_summary": "mitmproxy crashed when request url param include a string without urlencode !", "issue_description": "hbhuyt commented on 1 Jan 2019\nmitmproxy crashed when request url param include a string without urlencode !\nhow can I catch this error and add some codes?\nHttpSyntaxException(\"Bad HTTP request line: b'GET http://www.goodtime.com/f10/stock/stk_assetrestruct.do?tradingcode=600052&secuabbr=\\\\xe6\\\\xb5\\\\x99\\\\xe6\\\\xb1\\\\x9f\\\\xe5\\\\xb9\\\\xbf\\\\xe5\\\\x8e\\\\xa6&comcode=228819&indunum=1010010000&type=region HTTP/1.1'\",)\n127.0.0.1:11993: clientdisconnect\n127.0.0.1:11998: Traceback (most recent call last):\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 118, in read\ndata = self.o.read(rlen)\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\socket.py\", line 586, in readinto\nreturn self._sock.recv_into(b)\nConnectionResetError: [WinError 10054] \u8fdc\u7a0b\u4e3b\u673a\u5f3a\u8feb\u5173\u95ed\u4e86\u4e00\u4e2a\u73b0\u6709\u7684\u8fde\u63a5\u3002\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\server.py\", line 121, in handle\nroot_layer()\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 9, in call\nlayer()\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\tls.py\", line 286, in call\nlayer()\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 83, in call\nlayer()\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 188, in call\nif not self._process_flow(flow):\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 242, in _process_flow\nrequest = self.read_request_headers(f)\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 15, in read_request_headers\nhttp1.read_request_head(self.client_conn.rfile)\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\net\\http\\http1\\read.py\", line 53, in read_request_head\nheaders = _read_headers(rfile)\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\net\\http\\http1\\read.py\", line 330, in _read_headers\nline = rfile.readline()\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 158, in readline\nch = self.read(1)\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 136, in read\nraise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: [WinError 10054] \u8fdc\u7a0b\u4e3b\u673a\u5f3a\u8feb\u5173\u95ed\u4e86\u4e00\u4e2a\u73b0\u6709\u7684\u8fde\u63a5\u3002\nTraceback (most recent call last):\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 118, in read\ndata = self.o.read(rlen)\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\socket.py\", line 586, in readinto\nreturn self._sock.recv_into(b)\nConnectionResetError: [WinError 10054] \u8fdc\u7a0b\u4e3b\u673a\u5f3a\u8feb\u5173\u95ed\u4e86\u4e00\u4e2a\u73b0\u6709\u7684\u8fde\u63a5\u3002\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\server.py\", line 121, in handle\nroot_layer()\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 9, in call\nlayer()\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\tls.py\", line 286, in call\nlayer()\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 83, in call\nlayer()\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 188, in call\nif not self._process_flow(flow):\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http.py\", line 242, in _process_flow\nrequest = self.read_request_headers(f)\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http1.py\", line 15, in read_request_headers\nhttp1.read_request_head(self.client_conn.rfile)\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\net\\http\\http1\\read.py\", line 53, in read_request_head\nheaders = _read_headers(rfile)\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\net\\http\\http1\\read.py\", line 330, in _read_headers\nline = rfile.readline()\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 158, in readline\nch = self.read(1)\nFile \"C:\\WinPython\\python-3.6.6.amd64\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 136, in read\nraise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: [WinError 10054] \u8fdc\u7a0b\u4e3b\u673a\u5f3a\u8feb\u5173\u95ed\u4e86\u4e00\u4e2a\u73b0\u6709\u7684\u8fde\u63a5\u3002\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n127.0.0.1:11998: clientdisconnect\n127.0.0.1:12006: clientconnect\n127.0.0.1:12007: clientconnect\n127.0.0.1:12007: HTTP protocol error in client request: Bad HTTP request line: b'GET http://www.goodtime.com/f10/stock/stockmainpage.do?tradingcode=600152&secuabbr=\\xe7\\xbb\\xb4\\xe7\\xa7\\x91\\xe6\\x8a\\x80\\xe6\\x9c\\xaf HTTP/1.1'\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2019-01-01T10:36:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "172": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3436", "issue_id": "#3436", "issue_summary": "WARNING:tornado.access on macOS Mojave", "issue_description": "Tomygames commented on 29 Dec 2018\nSteps to reproduce the problem:\nuse mitmweb/mitmproxy\nTry to use it, and see it doesn't work\nSee this in log for every website you visit:\nWARNING:tornado.access:405 CONNECT github.com:443 (127.0.0.1) 0.38ms WARNING:tornado.access:405 CONNECT api.github.com:443 (127.0.0.1) 0.29ms WARNING:tornado.access:405 CONNECT github.com:443 (127.0.0.1) 0.37ms\nAny other comments? What have you tried so far?\nTried to use the master branch, doesn't work\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.2\nOpenSSL: OpenSSL 1.0.2q 20 Nov 2018\nPlatform: Darwin-18.2.0-x86_64-i386-64bit\nAlso tested with\nMitmproxy: 5.0.0.dev\nPython: 3.7.2\nOpenSSL: OpenSSL 1.1.0j 20 Nov 2018\nPlatform: Darwin-18.2.0-x86_64-i386-64bit\nmacOS version: 10.14.2", "issue_status": "Closed", "issue_reporting_time": "2018-12-28T18:40:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "173": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3435", "issue_id": "#3435", "issue_summary": "How can I get traffic size in scripting API", "issue_description": "Totti0135 commented on 27 Dec 2018\nHow can I get traffic size in scripting API?", "issue_status": "Closed", "issue_reporting_time": "2018-12-27T07:33:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "174": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3433", "issue_id": "#3433", "issue_summary": "Redirecting a particular website on localhost", "issue_description": "khanof89 commented on 24 Dec 2018\nSteps to reproduce the problem:\nI am not sure\nAny other comments? What have you tried so far?\nThe other day I have installed mitm on my local system and ran it, I was going through examples and used the redirect examples to redirect a particular website to mitmproxy.org, now that i am not even running mitm it still redirect that particular website to mitmproxy.org\nSystem information\nI have cloned the git repo and ran it in a virtual environment, now when I run this command it says \"Command 'mitmproxy' not found, but can be installed with:\"", "issue_status": "Closed", "issue_reporting_time": "2018-12-24T10:13:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "175": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3429", "issue_id": "#3429", "issue_summary": "set-cookie header not returned correctly", "issue_description": "javixeneize commented on 18 Dec 2018\nHi\nI am trying to extract the headers from the traffic captured in mitmproxy. I have noticed that, when in the response there are two set-cookie directives as in https://github.com, it does display only the first one\ndata = io.FlowReader(file)\nprint (item.request.headers.fields)\nSet-cookie should be returned as a list\nI faced the same problem in another application, and i solved it getting that set-cookie value with response.raw.headers.getlist('Set-Cookie')", "issue_status": "Closed", "issue_reporting_time": "2018-12-18T12:01:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "176": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3421", "issue_id": "#3421", "issue_summary": "dev.sh fails with \"error: option --user not recognized\"", "issue_description": "Contributor\nBkPHcgQL3V commented on 16 Dec 2018\nSteps to reproduce the problem:\nRun ./dev.sh\nAny other comments? What have you tried so far?\nThe command's output ends with:\n  Running setup.py install for blinker ... done\n  Running setup.py install for pycparser ... done\n  Running setup.py install for brotlipy ... done\n  Running setup.py install for kaitaistruct ... done\n  Running setup.py install for ldap3 ... done\n  Running setup.py install for pyperclip ... done\n  Running setup.py install for tornado ... done\n  Running setup.py install for urwid ... done\n  Running setup.py install for rstcheck ... done\n  Running setup.py develop for mitmproxy\n    Complete output from command /home/BkPHcgQL3V/mitmproxy/venv/bin/python3 -c \"import setuptools, tokenize;__file__='/home/BkPHcgQL3V/mitmproxy/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" develop --no-deps --user --prefix=:\n    /home/BkPHcgQL3V/mitmproxy/venv/lib/python3.7/site-packages/setuptools/dist.py:397: UserWarning: Normalizing '5.0.0.dev' to '5.0.0.dev0'\n      normalized_version,\n    usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]\n       or: -c --help [cmd1 cmd2 ...]\n       or: -c --help-commands\n       or: -c cmd --help\n    \n    error: option --user not recognized\n    \n    ----------------------------------------\nCommand \"/home/BkPHcgQL3V/mitmproxy/venv/bin/python3 -c \"import setuptools, tokenize;__file__='/home/BkPHcgQL3V/mitmproxy/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" develop --no-deps --user --prefix=\" failed with error code 1 in /home/BkPHcgQL3V/mitmproxy/\nYou are using pip version 10.0.1, however version 18.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\nI've also tried invoking it with a clean PATH (PATH=/bin ./dev.sh), which results in the same error.\nI found exactly one reference to this error message, in a blog post (Chinese):\nhttp://codewenda.com/\u5982\u4f55\u8f7b\u677e\u5206\u53d1\u5177\u6709python\u6a21\u5757\u4f9d\u8d56\u5173\u7cfb\u7684python\u8f6f\u4ef6\uff1f-unix\u4e0apython/\nIt seems to say that there are two implementations of user_install, only one of which has a --user option.\nSystem information\nOutput is from the distribution package of mitmproxy (whereas I'm trying to set up a development environment):\nMitmproxy: 4.0.4\nPython:    3.7.1\nOpenSSL:   OpenSSL 1.1.0j  20 Nov 2018\nPlatform:  Linux-4.18.16-arch1-1-ARCH-x86_64-with-arch", "issue_status": "Closed", "issue_reporting_time": "2018-12-16T05:40:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "177": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3419", "issue_id": "#3419", "issue_summary": "Eof error in tcp", "issue_description": "skotti commented on 14 Dec 2018\nCould you provide me with some tips how this TCP eof error can be solved? I have tls over tcp, when I install mitmproxy on server - everything works fine with deletion of all peek(1) calls when proceeding to the next layer and setting up next layer as TCP. But when I install mitmproxy on client this solution does not work - I have no messages in tcp channel after processing tls layer which results in eof error.\nError in TCP connection to 192.168.246.135:16514: TCP connection closed unexpectedly: SysCallError(-1, 'Unexpected EOF')", "issue_status": "Closed", "issue_reporting_time": "2018-12-14T05:26:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "178": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3418", "issue_id": "#3418", "issue_summary": "self.client_conn.rfile.peek(1) is hanging", "issue_description": "skotti commented on 13 Dec 2018\nHello, I have a problem, that when I establish connection mitmproxy can't proceed to the next layer because of the call of the peek function during final stage of establishing connection with client. What is this call for? How can I figure out what the reason for this problem is. I deleted this peek (1) and then the program again is hanging when making peek(3) in _next_layer() function.", "issue_status": "Closed", "issue_reporting_time": "2018-12-13T02:31:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "179": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3417", "issue_id": "#3417", "issue_summary": "Silent Mode", "issue_description": "jcampbell05 commented on 12 Dec 2018\nI wish to use this proxy as a production proxy since it has functionality other proxies lack.\nIs there a way of running it without any of the debug UI and just as a CLI.", "issue_status": "Closed", "issue_reporting_time": "2018-12-12T14:14:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "180": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3413", "issue_id": "#3413", "issue_summary": "error: IOError: [Errno 25] Inappropriate ioctl for device", "issue_description": "yigitkonur commented on 9 Dec 2018\nSteps to reproduce the problem:\nTrying to start a new proxy with end of & to run on background\nWaiting for 2-3 seconds.\nThen, we see this error:\nTraceback (most recent call last):\n  File \"/usr/bin/mitmproxy\", line 64, in <module>\n    m.run()\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 538, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/lib/python2.7/dist-packages/urwid/raw_display.py\", line 237, in run_wrapper\n    return fn()\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 746, in loop\n    size = self.drawscreen()\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 723, in drawscreen\n    size = self.ui.get_cols_rows()\n  File \"/usr/lib/python2.7/dist-packages/urwid/raw_display.py\", line 511, in get_cols_rows\n    buf = fcntl.ioctl(0, termios.TIOCGWINSZ, ' '*4)\nIOError: [Errno 25] Inappropriate ioctl for device\nAny other comments? What have you tried so far?\nI'm running MITMPROXY on EdgeRouter - EdgeOS - Debian Based.\nSystem information\nmitmproxy 0.8", "issue_status": "Closed", "issue_reporting_time": "2018-12-08T20:55:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "181": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3409", "issue_id": "#3409", "issue_summary": "Cant run multiple prxies on same port", "issue_description": "MarcoD1337 commented on 7 Dec 2018\nI tried to run multiple proixes on same port but it gave me an error which said \"Error starting proxy server: OSError(48, 'Address already in use')\", It would help if anybody knows how to run multiple proxies on same port.\n1", "issue_status": "Closed", "issue_reporting_time": "2018-12-07T04:20:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "182": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3408", "issue_id": "#3408", "issue_summary": "On Ubuntu 16.4 Xenial - have Python 3.6.5 - Still get # mitmproxy requires Python 3.6 or higher!", "issue_description": "RohitDhankar commented on 6 Dec 2018 \u2022\nedited by Kriechi\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ python --version\nPython 3.6.5\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ \ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ pip install --upgrade pip\nCache entry deserialization failed, entry ignored\nCollecting pip\n  Downloading https://files.pythonhosted.org/packages/c2/d7/90f34cb0d83a6c5631cf71dfe64cc1054598c843a92b400e55675cc2ac37/pip-18.1-py2.py3-none-any.whl (1.3MB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.3MB 673kB/s \nInstalling collected packages: pip\n  Found existing installation: pip 9.0.3\n    Uninstalling pip-9.0.3:\n      Successfully uninstalled pip-9.0.3\nSuccessfully installed pip-18.1\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ \ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ pip3 install mitmproxy\nCollecting mitmproxy\n  Using cached https://files.pythonhosted.org/packages/e5/6c/fe3f4b4cbef7f703b1199d5443963c4c56c2182223375bdaf0930e1ad052/mitmproxy-4.0.4-py3-none-any.whl\nRequirement already satisfied: tornado<5.2,>=4.3 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (5.1.1)\nRequirement already satisfied: certifi>=2015.11.20.1 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (2018.11.29)\nRequirement already satisfied: wsproto<0.12.0,>=0.11.0 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (0.11.0)\nRequirement already satisfied: hyperframe<6,>=5.1.0 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (5.1.0)\nRequirement already satisfied: urwid<2.1,>=2.0.1 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (2.0.1)\nRequirement already satisfied: cryptography<2.4,>=2.1.4 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (2.3.1)\nRequirement already satisfied: pyperclip<1.7,>=1.6.0 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (1.6.5)\nRequirement already satisfied: kaitaistruct<0.9,>=0.7 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (0.8)\nRequirement already satisfied: sortedcontainers<2.1,>=1.5.4 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (2.0.5)\nRequirement already satisfied: passlib<1.8,>=1.6.5 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (1.7.1)\nRequirement already satisfied: blinker<1.5,>=1.4 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (1.4)\nRequirement already satisfied: ldap3<2.6,>=2.5 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (2.5.1)\nRequirement already satisfied: brotlipy<0.8,>=0.7.0 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (0.7.0)\nRequirement already satisfied: pyparsing<2.3,>=2.1.3 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (2.2.2)\nRequirement already satisfied: click<7,>=6.2 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (6.7)\nRequirement already satisfied: pyasn1<0.5,>=0.3.1 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (0.4.4)\nRequirement already satisfied: pyOpenSSL<18.1,>=17.5 in /home/dhankar/.local/lib/python3.6/site-packages (from mitmproxy) (18.0.0)\nRequirement already satisfied: h2<4,>=3.0.1 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (3.0.1)\nRequirement already satisfied: ruamel.yaml<0.16,>=0.13.2 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from mitmproxy) (0.15.80)\nRequirement already satisfied: h11~=0.7.0 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from wsproto<0.12.0,>=0.11.0->mitmproxy) (0.7.0)\nRequirement already satisfied: idna>=2.1 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from cryptography<2.4,>=2.1.4->mitmproxy) (2.8)\nRequirement already satisfied: asn1crypto>=0.21.0 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from cryptography<2.4,>=2.1.4->mitmproxy) (0.24.0)\nRequirement already satisfied: six>=1.4.1 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from cryptography<2.4,>=2.1.4->mitmproxy) (1.11.0)\nRequirement already satisfied: cffi!=1.11.3,>=1.7 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from cryptography<2.4,>=2.1.4->mitmproxy) (1.11.5)\nRequirement already satisfied: hpack<4,>=2.3 in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from h2<4,>=3.0.1->mitmproxy) (3.0.0)\nRequirement already satisfied: pycparser in /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages (from cffi!=1.11.3,>=1.7->cryptography<2.4,>=2.1.4->mitmproxy) (2.19)\nInstalling collected packages: mitmproxy\nSuccessfully installed mitmproxy-4.0.4\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ \ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ mitmproxy --V\n############################################################################\n# mitmproxy requires Python 3.6 or higher!                                 #\n#                                                                          #\n# Please upgrade your Python intepreter or use our mitmproxy binaries from #\n# https://mitmproxy.org. If your operating system does not include the     #\n# required Python version, you can try using pyenv or similar tools.       #\n############################################################################\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ \ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ mitmproxy --V\n############################################################################\n# mitmproxy requires Python 3.6 or higher!                                 #\n#                                                                          #\n# Please upgrade your Python intepreter or use our mitmproxy binaries from #\n# https://mitmproxy.org. If your operating system does not include the     #\n# required Python version, you can try using pyenv or similar tools.       #\n############################################################################\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ \nSystem information\nFurther tried to UnInstall - that also doesnt seem to work , obviously Purge wont work as i did not APT INstall ....\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ sudo apt-get --purge remove mitmproxy\n[sudo] password for dhankar: \nReading package lists... Done\nBuilding dependency tree       \nReading state information... Done\nPackage 'mitmproxy' is not installed, so not removed\nThe following packages were automatically installed and are no longer required:\n  linux-headers-4.4.0-112 linux-headers-4.4.0-112-generic linux-headers-4.4.0-116 linux-headers-4.4.0-116-generic linux-headers-4.4.0-119\n  linux-headers-4.4.0-119-generic linux-headers-4.4.0-121 linux-headers-4.4.0-121-generic linux-headers-4.4.0-124 linux-headers-4.4.0-124-generic\n  linux-headers-4.4.0-127 linux-headers-4.4.0-127-generic linux-headers-4.4.0-128 linux-headers-4.4.0-128-generic linux-headers-4.4.0-130\n  linux-headers-4.4.0-130-generic linux-headers-4.4.0-133 linux-headers-4.4.0-133-generic linux-headers-4.4.0-134 linux-headers-4.4.0-134-generic\n  linux-headers-4.4.0-137 linux-headers-4.4.0-137-generic linux-image-4.4.0-112-generic linux-image-4.4.0-116-generic linux-image-4.4.0-119-generic\n  linux-image-4.4.0-121-generic linux-image-4.4.0-124-generic linux-image-4.4.0-127-generic linux-image-4.4.0-128-generic\n  linux-image-4.4.0-130-generic linux-image-4.4.0-133-generic linux-image-4.4.0-134-generic linux-image-4.4.0-137-generic\n  linux-image-extra-4.4.0-112-generic linux-image-extra-4.4.0-116-generic linux-image-extra-4.4.0-119-generic linux-image-extra-4.4.0-121-generic\n  linux-image-extra-4.4.0-124-generic linux-image-extra-4.4.0-127-generic linux-image-extra-4.4.0-128-generic linux-image-extra-4.4.0-130-generic\n  linux-image-extra-4.4.0-133-generic linux-image-extra-4.4.0-134-generic linux-image-extra-4.4.0-137-generic\nUse 'sudo apt autoremove' to remove them.\n0 upgraded, 0 newly installed, 0 to remove and 404 not upgraded.\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ \ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ pip3 uninstall mitmproxy\nUninstalling mitmproxy-4.0.4:\n  Would remove:\n    /home/dhankar/.pyenv/versions/3.6.5/bin/mitmdump\n    /home/dhankar/.pyenv/versions/3.6.5/bin/mitmproxy\n    /home/dhankar/.pyenv/versions/3.6.5/bin/mitmweb\n    /home/dhankar/.pyenv/versions/3.6.5/bin/pathoc\n    /home/dhankar/.pyenv/versions/3.6.5/bin/pathod\n    /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages/mitmproxy-4.0.4.dist-info/*\n    /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages/mitmproxy/*\n    /home/dhankar/.pyenv/versions/3.6.5/lib/python3.6/site-packages/pathod/*\nProceed (y/n)? y\n  Successfully uninstalled mitmproxy-4.0.4\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ \ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ mitmproxy --V\n############################################################################\n# mitmproxy requires Python 3.6 or higher!                                 #\n#                                                                          #\n# Please upgrade your Python intepreter or use our mitmproxy binaries from #\n# https://mitmproxy.org. If your operating system does not include the     #\n# required Python version, you can try using pyenv or similar tools.       #\n############################################################################\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ \ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ python --version\nPython 3.6.5\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ pip uninstall mitmproxy\nSkipping mitmproxy as it is not installed.\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ mitmproxy\n############################################################################\n# mitmproxy requires Python 3.6 or higher!                                 #\n#                                                                          #\n# Please upgrade your Python intepreter or use our mitmproxy binaries from #\n# https://mitmproxy.org. If your operating system does not include the     #\n# required Python version, you can try using pyenv or similar tools.       #\n############################################################################\ndhankar@dhankar-VPCEB44EN:/media/dhankar/Dhankar_1/a7_18/a7_18_Scrapy$ ", "issue_status": "Closed", "issue_reporting_time": "2018-12-06T12:26:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "183": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3395", "issue_id": "#3395", "issue_summary": "error setting ssl_insecure to true", "issue_description": "javixeneize commented on 29 Nov 2018\nHi\nIm having an error when setting ssl_insecure option\nIm running:\nmitmdump -w test.txt --set ssl_insecure=true\nThe error i have is\nTraceback (most recent call last):\nFile \"\", line 3, in\nFile \"site-packages/mitmproxy/main.py\", line 88, in mitmdump\nFile \"site-packages/mitmproxy/cmdline.py\", line 165, in get_common_options\nargparse.ArgumentTypeError: Malformed filter pattern:\nmitmdump returned -1\nHow should i set ssl_insecure when using mitmdump?\nTHanks", "issue_status": "Closed", "issue_reporting_time": "2018-11-29T16:49:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "184": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3394", "issue_id": "#3394", "issue_summary": "how to generated options.html & filters.html", "issue_description": "MrChens commented on 26 Nov 2018 \u2022\nedited\nSteps to reproduce the problem:\ngit clone https://github.com/mitmproxy/mitmproxy.git\n2.cd docs\nyarn\nmodd\nAny other comments? What have you tried so far?\n11:12:11: prep: ./node_modules/.bin/node-sass -o ./src/themes/mitmproxydocs/static/css ./style/style.scss --error-bell\n11:12:11: daemon: cd src; hugo server -D\n>> starting...\nBuilding sites \u2026 ERROR 2018/11/26 11:12:11 \"/Users/dc/Documents/interest/gitHub/mitmproxy/docs/src/content/concepts-options.md:47:5\": failed to render shortcode \"readfile\": \"/Users/dc/Documents/interest/gitHub/mitmproxy/docs/src/layouts/shortcodes/readfile.html:5:12\": execute of template failed: template: shortcodes/readfile.html:5:12: executing \"shortcodes/readfile.html\" at <readFile>: error calling readFile: stat /Users/dc/Documents/interest/gitHub/mitmproxy/docs/src/content/generated/options.html: no such file or directory\nTotal in 51 ms\nError: Error building site: \"/Users/dc/Documents/interest/gitHub/mitmproxy/docs/src/content/concepts-filters.md:13:5\": failed to render shortcode \"readfile\": \"/Users/dc/Documents/interest/gitHub/mitmproxy/docs/src/layouts/shortcodes/readfile.html:5:12\": execute of template failed: template: shortcodes/readfile.html:5:12: executing \"shortcodes/readfile.html\" at <readFile>: error calling readFile: stat /Users/dc/Documents/interest/gitHub/mitmproxy/docs/src/content/generated/filters.html: no such file or directory\nexited: exit status 1\n>> sleeping... 1000000000\nI just delete {{< readfile file=\"/generated/options.html\" >}} in mitmproxy/docs/src/content/concepts-options.md:47:5 and {{< readfile file=\"/generated/filters.html\" >}} in mitmproxy/docs/src/content/concepts-filters.md:13:5 and it will work fine but it miss something.\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.0\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Darwin-18.0.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-11-26T03:30:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "185": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3390", "issue_id": "#3390", "issue_summary": "Where is the code design flow", "issue_description": "mansonami commented on 20 Nov 2018\nSteps to reproduce the problem:\nCheckout the code\nAny other comments? What have you tried so far?\nI don't know where to study the code, also check the Doc about how mitmproxy works, but where is the code design flow? Seem that many codes are duplication.\nSystem information\nlatest\n1", "issue_status": "Closed", "issue_reporting_time": "2018-11-20T08:31:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "186": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3388", "issue_id": "#3388", "issue_summary": "json.dumps(flow.get_state()) - not json serializable", "issue_description": "Contributor\nphackt commented on 18 Nov 2018 \u2022\nedited\nHello,\nWhile i was playing with a custom script, i tried to dumps the flow.get_state() in order to send it to a rest API. Unfortunately some bytes values are present and i got the following:\nvariable = json.dumps(flow.get_state())\n...\nTypeError: Object of type 'bytes' is not JSON serializable\nAm i missing something ? Do i need to use pickle instead ?\nThanks in advance,", "issue_status": "Closed", "issue_reporting_time": "2018-11-18T14:27:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "187": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3387", "issue_id": "#3387", "issue_summary": "Non root Docker image", "issue_description": "javixeneize commented on 16 Nov 2018\nHi\nI have noticed that the docker image of mitmproxy runs as root\nHowever, in the dockerfile less privileged user, mitmproxy, is created\nI am trying to modify the dockerfile to start the container as mitmproxy, it is, adding a new step before\nVOLUME /home/mitmproxy/.mitmproxy to switch to that user\nUSER mitmproxy\nBut, when running it, this user has no write permission in .mitmproxy folder to store the certificate there\nwith open(os.path.join(path, basename + \"-ca.pem\"), \"wb\") as f:\nPermissionError: [Errno 13] Permission denied: '/home/mitmproxy/.mitmproxy/mitmproxy-ca.pem'\nI have tried to own that folder for mitmproxy user (RUN chown mitmproxy /home/mitmproxy/mitmproxy) and even change the permissions to 777, but i still face that problem\nAny idea what could i do to make this work?\nThanks", "issue_status": "Closed", "issue_reporting_time": "2018-11-16T15:44:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "188": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3384", "issue_id": "#3384", "issue_summary": "Seamless mitmproxy?", "issue_description": "javixeneize commented on 13 Nov 2018\nHi\nIs there any way to start mitmproxy in non-interactive mode? It is, it just records the traffic, writes the log in a file, but the app is not displayed in the screen?\nIm mainly interested in this option for the docker image, as i need to start it always in interactive mode (-it parameter)\nThanks", "issue_status": "Closed", "issue_reporting_time": "2018-11-12T20:32:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "189": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3383", "issue_id": "#3383", "issue_summary": "Create a Chocolatey Package Installer", "issue_description": "amirhalatzi commented on 12 Nov 2018 \u2022\nedited\nSteps to reproduce the problem:\ncurl https://snapshots.mitmproxy.org/4.0.4/mitmproxy-4.0.4-windows-installer.exe --output mitmproxy-4.0.4-windows-installer.exe\nmitmproxy-4.0.4-windows-installer.exe --unattendedmodeui none --mode unattended\ncertutil -f -service -addstore \"Root\" \"%userprofile%.mitmproxy\\mitmproxy-ca-cert.cer\"\nAny other comments? What have you tried so far?\nScripting the installation of mitmproxy on Windows\nSystem information\nMitmproxy: 4.0.4 binary\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Windows-10-10.0.17134\nWe'd like to automate mitmproxy install on Windows, the same way it is with brew and other package managers. As Chocolatey is the semi-official package manager for Windows, having a ready-made package would be great", "issue_status": "Closed", "issue_reporting_time": "2018-11-12T12:06:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "190": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3380", "issue_id": "#3380", "issue_summary": "Cannot generate file use har_dump.py", "issue_description": "nmweizi commented on 9 Nov 2018 \u2022\nedited\nmitmweb.exe -s ./har_dump.py --set hardump=./dump.har\nbut cannot generate file dump.har\nlog output\nWeb server listening at http://127.0.0.1:8081/\nLoading script ./har_dump.py\nProxy server listening at http://*:8080\n127.0.0.1:54339: clientconnect\n127.0.0.1:54341: clientconnect\n127.0.0.1:54342: clientconnect\n127.0.0.1:54344: clientconnect\nctrl+c\nMitmproxy: 4.0.4\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Windows-7-6.1.7601-SP1", "issue_status": "Closed", "issue_reporting_time": "2018-11-09T03:11:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "191": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3370", "issue_id": "#3370", "issue_summary": "Just Save url, time and size", "issue_description": "Keshvadi commented on 30 Oct 2018\nHi all,\nI want just save requested URL, times and the response size. How can I do it?\nAs I am new with mitmproxy, I appreciate you if you give me an answer with good details.", "issue_status": "Closed", "issue_reporting_time": "2018-10-29T22:30:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "192": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3369", "issue_id": "#3369", "issue_summary": "[Windows 7 Critical Issue ] In transparent mode, it cannot capture https url with dedicate port(eg: https://www.h.xiaohanapp.com:4445) while in proxy mode it can", "issue_description": "GeekTT commented on 29 Oct 2018\nSteps to reproduce the problem:\nmitmdump.exe --showhost --mode transparent\nopen one regular url web: https://www.google.com, it can capture successfully\nopen one https url with dedicate port: https://www.h.xiaohanapp.com:4445, it cannot capture\nAlternate with no transparent mode, it can capture https://www.h.xiaohanapp.com:4445\nAny other comments? What have you tried so far?\nIn transparent mode, it cannot capture all http/https url with dedicate port.\nWhile it did well in proxy mode.\nSystem information\nC:\\Users\\qiao>mitmdump --version\nMitmproxy: 4.0.3 binary\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-7-6.1.7601-SP1", "issue_status": "Closed", "issue_reporting_time": "2018-10-29T02:16:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "193": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3368", "issue_id": "#3368", "issue_summary": "Is it possible to add custom log level?", "issue_description": "mitjans commented on 28 Oct 2018\nHi!\nI'm trying to log certain information based on the contents of a websocket message. The default log level is \"Info\", which means that every time a websocket message is received either by the client or the server, the following message is presented in the EventLog panel:\ninfo: 192.168.1.54:59672 <- WebSocket 1 message <- \"server address\"\nA lot of websocket messages are sent between client and server, so the EventLog gets filled with this info level logs. To avoid it, I can lower the log level to \"warn\" or \"error\" and use ctx.log.warn or ctx.log.error in my script to print the logs I'm interested in. This workaround is, although functional, a bit cumbersome and impractical (my script logs will be in red and merged with real errors and warnings).\nIs there a way to suppress default \"info\" logging done by mitm? If not, is there a way to create a custom log level, and then filter the EventLog with the newly created level so that EventLog only displays my logs?\nThanks in advance!", "issue_status": "Closed", "issue_reporting_time": "2018-10-28T11:58:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "194": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3367", "issue_id": "#3367", "issue_summary": "HTTPS interception on Android 8.0 for apps with target API level 26 not working", "issue_description": "dragosMC91 commented on 26 Oct 2018\nSteps to reproduce the problem:\nComplete setup of mitmproxy on - pc/ mac\nInstall mitmproxy certificate on client - samsung phone with android 8.0\nStart debugging traffic for apps on the client which have api target leve = 26\nActual results\nI've noticed that ever since the mobile app i'm testing updated its target api level (targetSdkVersion) parameter to '26', traffic is no longer visible in mitmproxy interface.\nWhat i've tried\nI have tried various combinations of setups (mac/ pc) with numerous OSs (macos, ubuntu, windows) and with various clients.\nThe same app's traffic can easily be inspected from a different phone with android 5.1.\nI'm not sure i fully grasp what goes on 'behind the scenes' while decrypting https traffic but i found something in the android 8.0 documentation (https://developer.android.com/about/versions/oreo/android-8.0-changes) which might be the problem. The notes state '\nThe system no longer sends user-agent and proxy-authorization headers from a tunneled request to the proxy server.\nThe system no longer sends a proxy-authorization header on a tunneled Http(s)URLConnection to the proxy when setting up the tunnel. Instead, the system generates a proxy-authorization header, and sends it to the proxy when that proxy sends HTTP 407 in response to the initial request.\nSimilarly, the system no longer copies the user-agent header from the tunneled request to the proxy request that sets up the tunnel. Instead, the library generates a user-agent header for that request.\n'\nPS\nI'm having the exact same issue while trying to debug https traffic with Fiddler.\nThis tool has been super helpful for my testing effort, hope this will get fixed or that i'm missing something in my config.", "issue_status": "Closed", "issue_reporting_time": "2018-10-26T14:32:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "195": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3363", "issue_id": "#3363", "issue_summary": "How can I functionally replace the PIP version with the Linux binary?", "issue_description": "2fst4u commented on 26 Oct 2018\nI can't get mitmproxy to run using the PIP version, I receive errors that I've seen other users complain about, however the binary works fine.\nIs there any way I can replace the PIP version with the binary files so that the command \"mitmproxy\" runs the working version instead of the broken one?", "issue_status": "Closed", "issue_reporting_time": "2018-10-25T19:52:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "196": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3360", "issue_id": "#3360", "issue_summary": "Error in Auto Content viewer when parsing a JPEG", "issue_description": "tomlabaude commented on 24 Oct 2018\nSteps to reproduce the problem:\nDownload those JPEGs:\nhttps://img.lemde.fr/2018/10/09/1/0/3008/2005/184/122/60/0/4991a85_fz3CllPV3V0pbxyjvHkXiu7G.jpg\nhttps://img.lemde.fr/2018/10/09/0/56/4770/3180/184/122/60/0/2616eb7_ZEmpnu_LH1c1xeTNOJ5uM5uh.jpg\nGot this error:\nERROR:  Auto Content viewer failed:  ERROR   \nTraceback (most recent call last): ERROR   \n  File \"mitmproxy/contentviews/__init__.py\", line 130, in get_content_view ERROR   \n  File \"mitmproxy/contentviews/auto.py\", line 17, in __call__ ERROR   \n  File \"mitmproxy/contentviews/image/view.py\", line 36, in __call__ ERROR   \n  File \"mitmproxy/contentviews/image/image_parser.py\", line 78, in parse_jpeg ERROR   \n  File \"mitmproxy/contrib/kaitaistruct/exif_be.py\", line 572, in ifd0 ERROR   \n  File \"mitmproxy/contrib/kaitaistruct/exif_be.py\", line 31, in __init__ ERROR   \n  File \"mitmproxy/contrib/kaitaistruct/exif_be.py\", line 522, in __init__ ERROR   \n  File \"enum.py\", line 291, in __call__ ERROR   \n  File \"enum.py\", line 533, in __new__ ERROR   \n  File \"enum.py\", line 546, in _missing_ ERROR   \nValueError: 9 is not a valid FieldTypeEnum ERROR \nAny other comments? What have you tried so far?\nNot sure if those JPEG are malformed, and how mitmproxy should handle this case\nSystem information\nMitmproxy: 4.0.4 binary\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Darwin-17.7.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-10-24T15:10:47Z", "fixed_by": "#3480", "pull_request_summary": "Updated exif kaitai files", "pull_request_description": "lusceu commented on 18 Feb 2019\nFixed the exif .ksy files in the kaitai repo with kaitai-io/kaitai_struct_formats#124 . Compiled the .ksy to python files and updated them in the contrib folder. Should fix #3360 and avoids error in mitmproxy 5.0.0 -> no fallback to raw content in view mode.", "pull_request_status": "Merged", "issue_fixed_time": "2019-04-02T14:39:17Z", "files_changed": [["20", "mitmproxy/contrib/kaitaistruct/exif_be.py"], ["20", "mitmproxy/contrib/kaitaistruct/exif_le.py"]]}, "197": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3359", "issue_id": "#3359", "issue_summary": "Can i intercept this traffic ?", "issue_description": "donnib commented on 23 Oct 2018\nHi,\nI am trying to reveal the API used of the app here : https://apkpure.com/danfoss-link%E2%84%A2/com.danfoss.linkapp\nI thought this app would use SSL Pinning but i can't find any references to this in the code but what i can see is that it links to some technology where they state this :\nSecure Device Grid provides a 256-bit elliptic curve encrypted communication protocol securing your communication between the device and smartphone.\nand\nWith Secure Device Grid you benefit from an automated mechanism to create an Internet Protocol (IP) connection through firewalls and routers. This enables the device to be accessible and communicate with any paired device without compromising the security. Secure Device Grid provides a 256-bit elliptic curve encrypted communication protocol securing your communication between the device and smartphone.\nWhen i use mitmproxy i see nothing from the app, is it because it's not HTTP traffic ?", "issue_status": "Closed", "issue_reporting_time": "2018-10-23T11:57:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "198": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3358", "issue_id": "#3358", "issue_summary": "PermissionDenied on MacOS trying to use transparent proxying", "issue_description": "jabley commented on 23 Oct 2018\nSteps to reproduce the problem:\nFollow the steps for transparent proxying in the documentation \u2013 https://docs.mitmproxy.org/stable/howto-transparent/\nLast step fails\n> sudo -u nobody mitmproxy --mode transparent --showhost\nsudo: unable to execute /opt/boxen/homebrew/bin/mitmproxy: Permission denied\nmitmproxy has been installed with the following she-bang:\n#!/opt/boxen/homebrew/Cellar/mitmproxy/4.0.4/libexec/bin/python3.7\nPython3.7 looks like:\n> ll /opt/boxen/homebrew/Cellar/mitmproxy/4.0.4/libexec/bin/python3.7\n-rwxr-xr-x  1 jabley  staff  12552 31 Jul 13:01 /opt/boxen/homebrew/Cellar/mitmproxy/4.0.4/libexec/bin/python3.7\nAny other comments? What have you tried so far?\nI can execute other commands using sudo -u nobody\n> sudo -u nobody ls\ncdn-acceptance-tests gds-boxen  govuk_frontend_toolkit metadata-api  router\nSystem information\n> mitmproxy --version\nMitmproxy: 4.0.4 (+504, commit fdd8e9b)\nPython:    3.7.0\nOpenSSL:   OpenSSL 1.0.2p  14 Aug 2018\nPlatform:  Darwin-17.7.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-10-23T07:47:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "199": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3350", "issue_id": "#3350", "issue_summary": "No module named 'netlib'", "issue_description": "promc666 commented on 13 Oct 2018\nSteps to reproduce the problem:\nInstall mitmproxy from source (I can't do it on pip)\nRealize that netlib is only a link for the mitmproxy pip package... (See https://pypi.org/project/netlib/)\nNot be able to install netlib.\nAny other comments? What have you tried so far?\nI have tried to also install the pip package, but nothing happened.\nSystem information\nMitmproxy: 5.0.0.dev\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-2.6.32-042stab127.2-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-10-13T15:36:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "200": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3349", "issue_id": "#3349", "issue_summary": "Invalid HTTP request form (expected: authority or absolute, got: relative) from Burp", "issue_description": "j3ssie commented on 10 Oct 2018 \u2022\nedited\nSteps to reproduce the problem:\nI used mitmproxy as forwarding proxy from Burp but I keep getting these error.\n\nAnd this is error I get from console\nmitmdump -p 8779 -s proxy.py\n\nProxy server listening at http://*:8779\n127.0.0.1:56560: clientconnect\n << Invalid HTTP request form (expected: authority or absolute, got: relative)\n127.0.0.1:56560: HTTP protocol error in client request: Invalid HTTP request form (expected: authority or absolute, got: relative)\nI only get this error when use mitmproxy as upstream proxy on burp in Repeater tab from Burp\nSystem information\nMitmproxy: 3.0.2\nPython: 3.7.0\nOpenSSL: OpenSSL 1.0.2p 14 Aug 2018\nPlatform: Darwin-18.0.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-10-10T08:44:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "201": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3346", "issue_id": "#3346", "issue_summary": "Not able to dump WebSocket messages", "issue_description": "raamojirao commented on 9 Oct 2018 \u2022\nedited\nSteps to reproduce the problem:\nmitmdump -w outfile does not dump any traffic to the output file\nI have attached the screenshot. How do I dump the websocket message displayed in the screenshot.\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-10-09T15:59:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "202": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3345", "issue_id": "#3345", "issue_summary": "when I use mitmproxy all http websites don't work!!!", "issue_description": "mohamed159753 commented on 6 Oct 2018\nSteps to reproduce the problem:\n1.I set proxy to : 127.0.0.1:8080\n2.I load any http page\n3.it tell me \"problem loading page\"\nAny other comments? What have you tried so far?\nhttps websites work fine\nSystem information\n2.02\nPLease HELP!!", "issue_status": "Closed", "issue_reporting_time": "2018-10-05T19:39:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "203": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3339", "issue_id": "#3339", "issue_summary": "Errors on standard output instead of standard error", "issue_description": "tomlabaude commented on 28 Sep 2018\nI receive errors from dumper on standard output, they would be better to appear on StandardError\nEx:\n\"Error in WebSocket connection to 192.x.x.x:443: WebSocket connection closed unexpectedly by server: TcpDisconnect(None,)\"\nThink it comes from here:\nmitmproxy/mitmproxy/addons/dumper.py\nLine 245 in 3cd3765\n def websocket_error(self, f): \nThere's the same output for tcp_error apparently:\nmitmproxy/mitmproxy/addons/dumper.py\nLine 270 in 3cd3765\n def tcp_error(self, f): \nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 4.0.3 binary\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Darwin-17.7.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-09-28T14:32:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "204": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3337", "issue_id": "#3337", "issue_summary": "mitmproxy charles https", "issue_description": "rulaimiao commented on 27 Sep 2018\nI get mitmproxy-ca.pem , can get https requests ,\nbut not get some https requests\nI use charles can get all https requests ,\nwhy", "issue_status": "Closed", "issue_reporting_time": "2018-09-26T18:47:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "205": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3333", "issue_id": "#3333", "issue_summary": "ChromeDriver+Mitmproxy ,\"Client Handshake failed\"", "issue_description": "rainsun007 commented on 20 Sep 2018\ngoogle-chrome 69\nChromeDriver 2.42.591071\nchromeOptions = webdriver.ChromeOptions()\nchromeOptions.add_argument('--no-sandbox')\nchromeOptions.add_argument('--headless')\nchromeOptions.add_argument('--disable-gpu')\nchromeOptions.add_argument('--disable-dev-shm-usage')\nchromeOptions.add_argument('--ignore-certificate-errors')\nchromeOptions.add_argument('--window-size=1920x1080')\nchromeOptions.add_argument(\"--proxy-server=127.0.0.1:60800\")\nMitmproxy: 4.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-3.10.0-862.11.6.el7.x86_64-x86_64-with-centos-7.5.1804-Core\n[service]\nmitmdump --mode upstream:http://10.0.0.228:28084 -s mitm_pro.py -p 60800 --ssl-insecure --set upstream_cert=false\n[problem]\n\"Client Handshake failed. The client may not trust the proxy's certificate for www.baidu.com.\"\n@mhils How can I solve this problem. thx", "issue_status": "Closed", "issue_reporting_time": "2018-09-20T07:05:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "206": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3332", "issue_id": "#3332", "issue_summary": "Regex BUG?", "issue_description": "zhuscat commented on 20 Sep 2018\nSteps to reproduce the problem:\nrun mitmproxy\npress f key to filter. For an instance, I want to enter google\\.com. However, after I enter ., the \\ disappear.\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.0\nOpenSSL: OpenSSL 1.0.2p 14 Aug 2018\nPlatform: Darwin-17.5.0-x86_64-i386-64bit\n1", "issue_status": "Closed", "issue_reporting_time": "2018-09-20T05:02:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "207": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3331", "issue_id": "#3331", "issue_summary": "Content missing", "issue_description": "wuhengzhi commented on 19 Sep 2018 \u2022\nedited\nSteps to reproduce the problem:\n./mitmdump -b 127.0.0.1 -p 8000 -s \"mitm.py\" -U http://192.168.1.100:8001\nchrome --proxy-server=http://127.0.0.1:8000\nopen video page: http://v.pptv.com/show/IxoEg8c0LmzPTbU.html?&rcc_src=B3&spm=v_show_web.0.1.3.1.0.0.5.0.0.0.0\nNote: In \"mitm.py\", there is no special operation for \"response()\".\nFrom the output of mitmdump, there are some tips:\nGET http://122.143.10.155/0/11343872/0/2b9f90009f74b959a772d5b65173aab4.mp4?fpp.ver=1.3.0.23&key=cbcfea3666fecc72c526e905281ec847&k=e9cb6c7327d7556a30ae542141209680-a8f6-1537374975%26bppcataid%3D9&type=web.fpp&vvid=b84822b8-e010-b294-3811-f1d4b9ff5a03 << 206 Partial Content [content missing] 887ms\nor\n127.0.0.1:56546: GET http://122.143.10.155/0/11343872/0/2b9f90009f74b959a772d5b65173aab4.mp4?fpp.ver=1.3.0.23&key=cbcfea3666fecc72c526e905281ec847&k=e9cb6c7327d7556a30ae542141209680-a8f6-1537374975%26bppcataid%3D9&type=web.fpp&vvid=b84822b8-e010-b294-3811-f1d4b9ff5a03 << 206 Partial Content 8.66m 127.0.0.1:56546: Error in HTTP connection: TcpDisconnect('[Errno 32] Broken pipe',)\nThis will lead to the request status to \"canceled\" in chrome.\nNote: This video link is breakpoint continuingly.\nAny other comments? What have you tried so far?\nFor other links, no problem.\nWithout upstream proxy, no problem.\nI have also tried mitmproxy 4.0.1, and added the options, like \"--stream\" and \"--body-limit-size\", but have the same issue.\nI have read the series issues in #1764, and tried the method in #856 to set response.stream=True, but also failed.\nSystem information\nUbuntu 16.04\nmitmdump version: 2.0.2 and 4.0.1\nIs this a bug or something need to set? Thanks.", "issue_status": "Closed", "issue_reporting_time": "2018-09-19T13:10:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "208": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3325", "issue_id": "#3325", "issue_summary": "mitmdump crashes with https in transparent mode", "issue_description": "Jblackman18 commented on 8 Sep 2018\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n192.168.20.1:56381: Traceback (most recent call last):\nFile \"/usr/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 120, in handle\nroot_layer()\nFile \"/usr/lib/python2.7/dist-packages/libmproxy/proxy/modes/transparent_proxy.py\", line 21, in call\nlayer()\nFile \"/usr/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 267, in call\nself._establish_tls_with_client_and_server()\nFile \"/usr/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 392, in _establish_tls_with_client_and_server\nsix.reraise(*sys.exc_info())\nFile \"/usr/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 389, in _establish_tls_with_client_and_server\nself._establish_tls_with_client()\nFile \"/usr/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 408, in _establish_tls_with_client\nalpn_select_callback=self.__alpn_select_callback,\nFile \"/usr/lib/python2.7/dist-packages/libmproxy/models/connections.py\", line 82, in convert_to_ssl\nsuper(ClientConnection, self).convert_to_ssl(*args, **kwargs)\nFile \"/usr/lib/python2.7/dist-packages/netlib/tcp.py\", line 759, in convert_to_ssl\n**sslctx_kwargs)\nFile \"/usr/lib/python2.7/dist-packages/netlib/tcp.py\", line 722, in create_ssl_context\ncontext = self._create_ssl_context(**sslctx_kwargs)\nFile \"/usr/lib/python2.7/dist-packages/netlib/tcp.py\", line 504, in _create_ssl_context\ncontext.load_verify_locations(ca_pemfile, ca_path)\nFile \"/usr/lib/python2.7/dist-packages/OpenSSL/SSL.py\", line 528, in load_verify_locations\n_raise_current_error()\nFile \"/usr/lib/python2.7/dist-packages/OpenSSL/_util.py\", line 48, in exception_from_error_queue\nraise exception_type(errors)\nError: [('system library', 'fopen', 'No such file or directory'), ('BIO routines', 'BIO_new_file', 'no such file'), ('x509 certificate routines', 'X509_load_cert_crl_file', 'system lib')]\nSteps to reproduce the problem:\nmitmproxy -T --host\ndirect traffic to the proxy on port 8080 for both http and https\nhttp seems to work.\nhttps fails.\ndefault directory for the mitmproxy certs is in tact with the certs.\nAny other comments? What have you tried so far?\nThis works with mitmproxy 0.9 on a different system\nSystem information\nmitmproxy 0.15\nubuntu 16.04\nPython 2.7.12", "issue_status": "Closed", "issue_reporting_time": "2018-09-08T14:17:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "209": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3324", "issue_id": "#3324", "issue_summary": "mitmproxy crashes", "issue_description": "Jblackman18 commented on 8 Sep 2018\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-09-08T14:13:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "210": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3318", "issue_id": "#3318", "issue_summary": "Inquiry for replay example", "issue_description": "festum commented on 7 Sep 2018\nHello,\nIt actually not an issue.\nI'm new to mitmproxy wondering if there is an example for capture client data and replay it.\nWe want to capture real server response while crawlers hitting websites then put these captured responses setup a mock server on the staging environment for e2e test and prevent external traffic cost.", "issue_status": "Closed", "issue_reporting_time": "2018-09-07T07:35:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "211": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3317", "issue_id": "#3317", "issue_summary": "Using https proxy as upstream proxy occur Server disconnected", "issue_description": "jkryanchou commented on 6 Sep 2018 \u2022\nedited\nSteps to reproduce the problem:\nUsing https proxy as upstream proxy as following commands: mitmdump --mode upstream:https://foo.com -p 8081 -s ./proxy/flow_dumper.py\nThe mode represents as below:\nClient <--- http ---> MITMproxy<----HTTPS(Proxy)---> Internet\nIt shows Server disconnected as below\n127.0.0.1:51409: HTTP protocol error in client request: Server disconnected\n127.0.0.1:51409: clientdisconnect\n << Server disconnected\n127.0.0.1:51408: HTTP protocol error in client request: Server disconnected\n127.0.0.1:51408: clientdisconnect\n127.0.0.1:51412: clientconnect\n << Server disconnected\n127.0.0.1:51412: HTTP protocol error in client request: Server disconnected\n127.0.0.1:51412: clientdisconnect\n127.0.0.1:51419: clientconnect\n << Server disconnected\n127.0.0.1:51419: HTTP protocol error in client request: Server disconnected\n127.0.0.1:51419: clientdisconnect\n127.0.0.1:51429: clientconnect\n << Server disconnected\n... ...\nAny other comments? What have you tried so far?\nI have no idea what options set to mitmproxy. Try several options while it doesn't work.\nSystem information\nMitmproxy: 4.0.4\nPython: 3.6.1\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-09-06T14:42:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "212": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3316", "issue_id": "#3316", "issue_summary": "Tests are failing due to expired certificates", "issue_description": "Member\nmhils commented on 6 Sep 2018 \u2022\nedited\nSee https://travis-ci.org/mitmproxy/mitmproxy/jobs/424443619 - this unfortunately blocks #3291 at the moment.\nWe need to generate new certificates with looong lifetimes.\n1", "issue_status": "Closed", "issue_reporting_time": "2018-09-06T03:15:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "213": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3315", "issue_id": "#3315", "issue_summary": "Request host in requestheaders event", "issue_description": "Gigiarum commented on 5 Sep 2018\nAre properties \"host\" and \"pretty_host\" always set in flow.request in requestheaders event?\nIf I try request event I don't have this problem.\nSystem information\nMitmproxy: 4.0.1\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-3.16.0-6-amd64-x86_64-with-debian-8.9", "issue_status": "Closed", "issue_reporting_time": "2018-09-05T14:55:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "214": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3314", "issue_id": "#3314", "issue_summary": "python3 AttributeError: No such option: body_size_limit", "issue_description": "legleon commented on 5 Sep 2018 \u2022\nedited\nUsing the following code:\nfrom mitmproxy import proxy, options\nfrom mitmproxy.tools.dump import DumpMaster\nfrom mitmproxy.addons import core\n\n\n\n\nopts = options.Options(listen_host='127.0.0.1', listen_port=8081)\npconf = proxy.config.ProxyConfig(opts)\n\nm = DumpMaster(None)\nm.server = proxy.server.ProxyServer(pconf)\n#print(m.addons)\nprint(m.addons)\n#m.addons.add(core.Core())\n\ntry:\n    m.run()\nexcept KeyboardInterrupt:\n    m.shutdown()\nWhen running the above the following error is thrown:\nTraceback (most recent call last):\n  File \"/home/userone/dev/p3_going_headless/venv/lib/python3.6/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/home/userone/dev/p3_going_headless/venv/lib/python3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/home/userone/dev/p3_going_headless/venv/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/home/userone/dev/p3_going_headless/venv/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/home/userone/dev/p3_going_headless/venv/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/home/userone/dev/p3_going_headless/venv/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 254, in _process_flow\n    self.read_request_body(f.request)\n  File \"/home/userone/dev/p3_going_headless/venv/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http1.py\", line 23, in read_request_body\n    human.parse_size(self.config.options.body_size_limit)\n  File \"/home/userone/dev/p3_going_headless/venv/lib/python3.6/site-packages/mitmproxy/optmanager.py\", line 172, in __getattr__\n    raise AttributeError(\"No such option: %s\" % attr)\nAttributeError: No such option: body_size_limit\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n127.0.0.1:48110: clientdisconnect\nAccording to the following a simple m.addons.add(core.Core()) should fix this however as can be seen in the addon list Core is already loaded:\n'<mitmproxy.addons.core.Core object at 0x7f1521916e48>',\nAny suggestions would be welcome, it seems to be a similar issue as posted here:\nhttps://stackoverflow.com/questions/52107026/mitmproxy-how-to-launch-from-script-and-save-dumps-to-file?rq=1\nSystem information\npython version: Python 3.6.5\nmitmproxy ver: 4.0.4 (latest)", "issue_status": "Closed", "issue_reporting_time": "2018-09-05T12:58:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "215": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3312", "issue_id": "#3312", "issue_summary": "mitmweb status code colors", "issue_description": "reden87 commented on 4 Sep 2018\nIt would be great to have colored status codes in mitmweb too.\nmitmproxy example:\nmitmweb example:", "issue_status": "Closed", "issue_reporting_time": "2018-09-04T09:28:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "216": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3310", "issue_id": "#3310", "issue_summary": "Full Transparent mode C script error", "issue_description": "IcoBoyanov commented on 31 Aug 2018\nI have problems enabling full transparent mode on ubuntu 16.04 machine.\nhttps://docs.mitmproxy.org/stable/howto-transparent/#full-transparent-mode-on-linux\nSteps to reproduce the problem:\nCloning mitmproxy repo\nConfiguring linux as shown in mitmproxy docs\nrunning: gcc examples/complex/full_transparency_shim.c -o mitmproxy_shim -lcap\nraises the following error\n\"examples/complex/full_transparency_shim.c:6:28: fatal error: sys/capability.h: No such file or directory\ncompilation terminated.\"\nAny other comments? What have you tried so far?\nWhere can i find this lib ? Are there any alternatives to run full transparent mode\nSystem information\nMitmproxy: 4.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.4.0-127-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-08-31T11:36:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "217": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3309", "issue_id": "#3309", "issue_summary": "Fresh new mitmproxy-ca-cert on every install", "issue_description": "john-bonachon commented on 31 Aug 2018 \u2022\nedited\nmitmproxy's CA certificate (taken from ~/.mitmproxy or mitm.it) installed on a machine means that any mitmproxy user could take advantage of it.\nshouldn't it be generated at mitmproxy installation/first-use? as explained on https://docs.mitmproxy.org/stable/concepts-certificates/#using-a-custom-certificate-authority", "issue_status": "Closed", "issue_reporting_time": "2018-08-30T19:10:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "218": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3308", "issue_id": "#3308", "issue_summary": "How to get the detail timing by python script?", "issue_description": "tttaotie commented on 30 Aug 2018\nSteps to reproduce the problem:\nI didn't find the api to get the detail timing . for example : client conn established\u3001 server conn initiated\u3001server conn tcp handshake and so on\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-08-30T09:13:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "219": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3307", "issue_id": "#3307", "issue_summary": "Client replay doesn't update request timestamps", "issue_description": "kjkuan commented on 30 Aug 2018 \u2022\nedited\nSteps to reproduce the problem:\nSave flows to a file, saved.mitm\nWait a few minutes\nUse a command like mitmdump -n -C saved.mitm -s myscript.py -w replayed.mtim to replay the saved flows.\nThen observe the flows with mitmproxy -n -r replayed.mitm and see that the request-response time of the flows are inaccurate because it seems to be calculated using the start time of the requests in saved.mitm.\nAny other comments? What have you tried so far?\nIf such behavior is intentional, what's the recommended way to set the request timestamps so that they reflect the time when the requests are actually replayed rather than the previously saved timestamps?\nAs a workaround, I've added these two lines after the server.wfile.flush() line in addons/clientplayback.py for my use case:\n                r.timestamp_end = time.time()\n                r.timestamp_start = server.wfile.first_byte_timestamp\nIt seems reasonable but I'm not sure if it's correct.\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.0\nOpenSSL: OpenSSL 1.0.2p 14 Aug 2018\nPlatform: Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-08-29T20:55:17Z", "fixed_by": "#3401", "pull_request_summary": "client-replay-fix", "pull_request_description": "Contributor\nrjt-gupta commented on 1 Dec 2018\nThis is my first PR here,excited :)\nfixes #3307\n1", "pull_request_status": "Merged", "issue_fixed_time": "2018-12-01T15:35:41Z", "files_changed": [["2", "mitmproxy/addons/clientplayback.py"]]}, "220": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3306", "issue_id": "#3306", "issue_summary": "Seeking help on how to dump flows and start mitmproxy all from a script", "issue_description": "securisec commented on 30 Aug 2018 \u2022\nedited\nSteps to reproduce the problem:\nNot an issue. I am failing to understand how i can start the proxy from a script, and then write any flows on a file. Here is my script so far. Script is a put together form various script ideas by googling around. didnt want to create an issue, but couldnt really get in help on twitter/slack/irc etc. I understand this is simper to do using subprocess, but i am not trying to use subprocess\nimport os\nimport sys\n\nfrom mitmproxy import http\n# from mitmproxy.master import Master\nimport mitmproxy.master as master\nfrom mitmproxy.addons import core\nfrom mitmproxy.proxy import ProxyConfig, ProxyServer\nfrom mitmproxy.options import Options\nfrom mitmproxy import io, http\n\n\nclass Writer(master.Master, http.HTTPFlow):\n    def __init__(self, options, server, file_path):\n        master.Master.__init__(self, options)\n        self.server = server\n        self.file_path = file_path\n        self.f = open(self.file_path, 'wb+')\n        self.w = io.FlowWriter(self.f)\n\n    def run(self):\n        try:\n            master.Master.run(self)\n        except KeyboardInterrupt:\n            self.shutdown()\n            sys.exit(0)\n    \n    def writestuff(self):\n        flo = http.HTTPFlow\n        print(flo)\n        self.w.add(flo)\n\n\ndef start_proxy(port, file_path):\n    options = Options(\n        listen_port=port,\n    )\n    config = ProxyConfig(\n        options=options,\n    )\n    server = ProxyServer(config)\n    # print(dir(http.HTTPFlow))\n    m = Writer(options, server, file_path)\n    m.addons.add(core.Core())\n    m.run()\n    m.writestuff()\n\nstart_proxy(8080, '/tmp/dumptest')\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.0\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Darwin-16.7.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-08-29T20:43:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "221": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3304", "issue_id": "#3304", "issue_summary": "Measure request and response times from inline script?", "issue_description": "j3ssie commented on 23 Aug 2018\nHow do I measure request and response from inline script?\nI used formal below to measure time from start to send request from get response from server,\nbut after convert that into human readdle I realize that not acctually time of issue request(I used Burp Proxy to compare).\nflow.request.timestamp_start - flow.response.timestamp_end\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.0\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Darwin-17.7.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-08-23T10:41:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "222": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3303", "issue_id": "#3303", "issue_summary": "(ipv6) 400 Bad Request in reverse mode", "issue_description": "luckychelsea commented on 23 Aug 2018\nSteps to reproduce the problem:\nMitmproxy: 4.0.4\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-2.6.32-358.el6.x86_64-x86_64-with-centos-6.4-Final\nmitmdump -m reverse:https://[2400:a480:aaaa:888::102]:444 -p 16008 --ssl-insecure\n**This address is accessible https://[2400:a480:aaaa:888::102]:444\nhowever...**\n172.168.0.121:16457: GET https://[2400:a480:aaaa:888::102]:444/\n2400:a480:aaaa:888::102\n<< 400 Bad Request 347b\n172.168.0.121:16457: clientdisconnect\nAfter the domain name is configured in the /etc/hosts file, it works normally\n172.168.0.121:16609: GET https://[dbhost]:444/\n<< 200 OK 44b\nCan't access it using real IP?\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-08-23T07:10:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "223": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3302", "issue_id": "#3302", "issue_summary": "Byte size limit for mitmproxy", "issue_description": "hgbing commented on 23 Aug 2018\nI got an error with \"fork:cannot allocate memory\" , mitmproxy was working on regular mode for 24 hours. is there the method as i supposed:\nset Byte size limit when mitmproxy startups\nclean memory period by commands or scripts", "issue_status": "Closed", "issue_reporting_time": "2018-08-23T04:26:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "224": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3301", "issue_id": "#3301", "issue_summary": "TypeError on running as user", "issue_description": "qwelias commented on 21 Aug 2018 \u2022\nedited\nSteps to reproduce the problem:\n$ sudo pacman -S mitmproxy\n$ mitmproxy\nAny other comments? What have you tried so far?\nTraceback (most recent call last):\n  File \"/usr/bin/mitmproxy\", line 11, in <module>\n    load_entry_point('mitmproxy==4.0.4', 'console_scripts', 'mitmproxy')()\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/tools/_main.py\", line 149, in mitmproxy\n    run(console.master.ConsoleMaster, cmdline.mitmproxy, args)\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/tools/_main.py\", line 93, in run\n    os.path.join(opts.confdir, OPTIONS_FILE_NAME),\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/optmanager.py\", line 527, in load_paths\n    load(opts, txt)\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/optmanager.py\", line 507, in load\n    opts.update_defer(**data)\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/optmanager.py\", line 221, in update_defer\n    unknown = self.update_known(**kwargs)\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/optmanager.py\", line 216, in update_known\n    self._options[k].set(v)\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/optmanager.py\", line 57, in set\n    typecheck.check_option_type(self.name, value, self.typespec)\n  File \"/usr/lib/python3.7/site-packages/mitmproxy/utils/typecheck.py\", line 63, in check_option_type\n    raise e\nTypeError: Expected typing.Sequence[str] for client_replay, but got <class 'ruamel.yaml.comments.CommentedSeq'>.\nUnder root works as expected\nSystem information\nMitmproxy: 4.0.4\nPython: 3.7.0\nOpenSSL: OpenSSL 1.1.0i 14 Aug 2018\nPlatform: Linux-4.18.3-arch1-1-ARCH-x86_64-with-arch", "issue_status": "Closed", "issue_reporting_time": "2018-08-21T09:25:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "225": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3299", "issue_id": "#3299", "issue_summary": "All release packages missing", "issue_description": "Solarer commented on 20 Aug 2018\nSteps to reproduce the problem:\nVisit https://mitmproxy.org/downloads/ or https://snapshots.mitmproxy.org/4.0.4/ or any related page\nAll files appear to be missing", "issue_status": "Closed", "issue_reporting_time": "2018-08-20T11:51:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "226": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3298", "issue_id": "#3298", "issue_summary": "Using mitmproxy inside python script", "issue_description": "j3ssie commented on 17 Aug 2018\nI'm new in mitmproxy so I have a question why I can't figure out how to put mitmproxy inside my python script(my purpose is just to make some modify with the request and analyze response)\nI'm found this but this doesn't work anymore\nhttps://gist.github.com/dannvix/5285924#example-of-proxypy\nand\nhttps://2qwesgdhjuiytyrjhtgdbf.readthedocs.io/en/latest/scripting/mitmproxy.html#examples-stickycookies\nSo I wonder why are you guys refer using\nmitmproxy -s sample.py\ninstead of do some configuration inside python script like\nconfig = proxy.ProxyConfig(port=8080)\nserver = ProxyServer(config)\nthen just run sample.py script.\nSystem information\nOS: Mac OS\nLastest version of mitmproxy via pip3 install mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2018-08-17T18:11:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "227": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3295", "issue_id": "#3295", "issue_summary": "[Feature Request] Add an option to allow hosts", "issue_description": "KevCui commented on 16 Aug 2018\nThere is an option ignore_hosts to ignore hosts. Do you think it makes sense to add an option, like whitelist hosts, to allow only some hosts go to proxy? Let's call it allow_hosts?\nAsking for a friend", "issue_status": "Closed", "issue_reporting_time": "2018-08-16T08:47:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "228": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3291", "issue_id": "#3291", "issue_summary": "Windows build/download link not working", "issue_description": "gregorylyons commented on 13 Aug 2018\nSteps to reproduce the problem:\nClick on download link on homepage\ne.g. https://snapshots.mitmproxy.org/4.0.4/mitmproxy-4.0.4-windows-installer.exe\nAny other comments? What have you tried so far?\nFile appears to be missing; 4.0.3 exists.\n1", "issue_status": "Closed", "issue_reporting_time": "2018-08-13T01:19:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "229": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3288", "issue_id": "#3288", "issue_summary": "UX Regression: Updating the URL is painful.", "issue_description": "Member\nmhils commented on 12 Aug 2018\nSteps to reproduce the problem:\nSelect a flow, press e to edit a URL.\nflow.set @focus url str appears\nThis is really impractical for editing URLs. I see two approaches here:\nA popup appears where the existing URL can be updated, similar to Query editing.\nflow.set @focus url https://existing-url/ appears.\nThe same problem may also apply when editing other attributes, we should take a look.\nSystem information\nMitmproxy: 5.0.0.dev (+137, commit e74e97b)\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-17134-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-08-12T14:57:58Z", "fixed_by": "#3594", "pull_request_summary": "Edit URLs in external editor", "pull_request_description": "Contributor\nJessonsotoventura commented on 23 Jul 2019\nFixes: #3288\nSince URLs can be long and unwieldy they should be edited in an external editor instead of in the action bar.", "pull_request_status": "Merged", "issue_fixed_time": "2019-09-28T11:31:30Z", "files_changed": [["7", "mitmproxy/tools/console/consoleaddons.py"]]}, "230": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3287", "issue_id": "#3287", "issue_summary": "Test failure with 4.0.4", "issue_description": "Contributor\nfelixonmars commented on 11 Aug 2018\nSteps to reproduce the problem:\npython setup.py pytest\n=================================== FAILURES ===================================\n_______________________ TestScripts.test_iframe_injector _______________________\n\nself = <test.examples.test_examples.TestScripts object at 0x7fb3ba0db940>\ntdata = <mitmproxy.utils.data.Data object at 0x7fb3ba0dbe48>\n\n    def test_iframe_injector(self, tdata):\n        with taddons.context() as tctx:\n            sc = tctx.script(tdata.path(\"../examples/simple/modify_body_inject_iframe.py\"))\n            tctx.configure(\n                sc,\n>               iframe = \"http://example.org/evil_iframe\"\n            )\n\ntest/examples/test_examples.py:30:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nmitmproxy/test/taddons.py:105: in configure\n    self.options.update(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = mitmproxy.options.Options({\n    'add_upstream_certs_to_client_chain': False [<class 'bool'>],\n    'body_size_limit': N..._bind_address':  [<class 'str'>],\n    'upstream_cert': True [<class 'bool'>],\n    'websocket': True [<class 'bool'>]\n})\nkwargs = {'iframe': 'http://example.org/evil_iframe'}\nu = {'iframe': 'http://example.org/evil_iframe'}\n\n    def update(self, **kwargs):\n        u = self.update_known(**kwargs)\n        if u:\n>           raise KeyError(\"Unknown options: %s\" % \", \".join(u.keys()))\nE           KeyError: 'Unknown options: iframe'\n\nmitmproxy/optmanager.py:227: KeyError\n=============================== warnings summary ===============================\ntest/mitmproxy/utils/test_debug.py::test_dump_info\n  /build/mitmproxy/src/mitmproxy-4.0.4/mitmproxy/utils/debug.py:70: RuntimeWarning: coroutine 'Script.watcher' was never awaited\n    gc.collect()\n\n-- Docs: http://doc.pytest.org/en/latest/warnings.html\n============== 1 failed, 1392 passed, 1 warnings in 84.15 seconds ==============\nSystem information\nNot yet installed version of mitmproxy 4.0.4 with Python 3.7.0.", "issue_status": "Closed", "issue_reporting_time": "2018-08-11T04:05:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "231": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3284", "issue_id": "#3284", "issue_summary": "[Feature Request] Manage Multiple Servers/Proxies from One UI", "issue_description": "zero77 commented on 6 Aug 2018\nCan you please add support for managing more than one proxy from one web-ui, by configuring each proxy to connect back to one specified proxy/server for management.\nThanks", "issue_status": "Closed", "issue_reporting_time": "2018-08-06T12:09:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "232": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3279", "issue_id": "#3279", "issue_summary": "pyOpenSSL", "issue_description": "Mradr commented on 3 Aug 2018\nSteps to reproduce the problem:\nInstall mitmproxy, gevent, gevent_openssl\nMonkey patch for gevent_openssl and then gevent\nGo to a HTTPS website\n<< Cannot establish TLS with www.google.com:443 (sni: www.google.com): TlsException(\"SSL handshake error: Error([('SSL routines', 'SSL_do_handshake', 'connection type not set')])\")\nAny other comments? What have you tried so far?\nHTTP works just fine, but HTTPS sites seem to be broken when doing this method.\nSystem information\n4+", "issue_status": "Closed", "issue_reporting_time": "2018-08-02T19:45:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "233": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3276", "issue_id": "#3276", "issue_summary": "4.0.4: No module named mitmproxy.contrib.kaitaistruct", "issue_description": "lgbaldoni commented on 1 Aug 2018\nSteps to reproduce the problem:\nPackage the pypi source with setuptools\nrun mitmproxy\nSee log\nAny other comments? What have you tried so far?\nIt crashes on startup, possibly a regression of bug #3132 ?\nSystem information\nopenSUSE Tumbleweed\nmitmproxy --version also crashes", "issue_status": "Closed", "issue_reporting_time": "2018-08-01T08:42:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "234": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3275", "issue_id": "#3275", "issue_summary": "Race condition in test_xss_scanner", "issue_description": "eli-schwartz commented on 1 Aug 2018\nSteps to reproduce the problem:\ngit clone https://github.com/mitmproxy/mitmproxy\ncd mitmproxy\npython setup.py pytest\nResult:\n====================================================================== FAILURES ======================================================================\n______________________________________________________ TestXSSScanner.test_find_unclaimed_URLs _______________________________________________________\n\nself = <test.examples.test_xss_scanner.TestXSSScanner object at 0x7f091866cb38>\nmonkeypatch = <_pytest.monkeypatch.MonkeyPatch object at 0x7f091866cdd8>\nlogger = <test.examples.test_xss_scanner.TestXSSScanner.logger.<locals>.Logger object at 0x7f091866ce10>\n\n    def test_find_unclaimed_URLs(self, monkeypatch, logger):\n        logger.args = []\n        monkeypatch.setattr(\"mitmproxy.ctx.log\", logger)\n        monkeypatch.setattr(\"socket.gethostbyname\", self.mocked_socket_gethostbyname)\n        xss.find_unclaimed_URLs(\"<html><script src=\\\"http://google.com\\\"></script></html>\",\n                                \"https://example.com\")\n        assert logger.args == []\n        xss.find_unclaimed_URLs(\"<html><script src=\\\"http://unclaimedDomainName.com\\\"></script></html>\",\n                                \"https://example.com\")\n>       assert logger.args[0] == 'XSS found in https://example.com due to unclaimed URL \"http://unclaimedDomainName.com\".'\nE       IndexError: list index out of range\n\ntest/examples/test_xss_scanner.py:329: IndexError\n================================================================== warnings summary ==================================================================\ntest/mitmproxy/utils/test_debug.py::test_dump_info\n  /build/mitmproxy/src/mitmproxy/mitmproxy/utils/debug.py:70: RuntimeWarning: coroutine 'Script.watcher' was never awaited\n    gc.collect()\n\n-- Docs: http://doc.pytest.org/en/latest/warnings.html\n================================================= 1 failed, 1416 passed, 1 warnings in 86.32 seconds =================================================", "issue_status": "Closed", "issue_reporting_time": "2018-07-31T21:15:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "235": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3273", "issue_id": "#3273", "issue_summary": "Reduce certificate validity for Chrome >= 68", "issue_description": "Contributor\nmuffl0n commented on 31 Jul 2018\nSteps to reproduce the problem:\nInstall Chrome 68\nStart mitmproxy, add mitmproxy-ca to your cert-store\nOpen any site via https\nChrome shows NET::ERR_CERT_VALIDITY_TOO_LONG error\nAny other comments? What have you tried so far?\nIn #815 the validity of the certificates was reduced to three years which was enough for Chrome's \"not valid longer than 39 month\". It seems like Chrome 68 changed this to a shorter value though I haven't found any evidence in the code yet.\nAfter tinkering around I found that the value \"71107200\" (around 27 month) for DEFAULT_EXP is the greatest value that is accepted by Chrome.\nI know that I'm not using the most recent version of mitmproxy but the value for DEFAULT_EXP is the same in the current version so I assume the problem is still the same.\nSuggesting to just reduce the validity to something really short, like Let's Encrypt's three month. Should not be a problem and saves us from further reduction in Chrome.\nSystem information\n-> % mitmproxy --version\nMitmproxy: 3.0.3\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.17.8-1-ARCH-x86_64-with-arch", "issue_status": "Closed", "issue_reporting_time": "2018-07-31T07:37:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "236": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3269", "issue_id": "#3269", "issue_summary": "Norton Reported Trojan in mitmweb.exe", "issue_description": "richp10 commented on 29 Jul 2018\nPlease note it is possible another program is the problem and infected mitmweb.exe. I thought however that the risk was sufficiently serious that it was worth reporting and having several people double check.\nSteps to reproduce the problem:\nInstalled mitmweb using the windows installer\nTwo weeks later, after a full scan, Norton reported Trojan.Gen.6 infection of mitmweb.exe and removed the exe.\nAny other comments? What have you tried so far?\nI have just uninstalled\nSystem information\nUninstalled, though installation / version was about 10/06/2018 (I then went away and noticed infection on return, after full scan by Norton).", "issue_status": "Closed", "issue_reporting_time": "2018-07-29T09:08:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "237": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3267", "issue_id": "#3267", "issue_summary": "Intermittent crashing", "issue_description": "ldelossa commented on 27 Jul 2018 \u2022\nedited by mhils\nSteps to reproduce the problem:\nIntermittent\nAny other comments? What have you tried so far?\nFollowed directions in issue and opened bug report.\nSystem information\nIssue:\nrror: [::1]:57274: Traceback (most recent call last):(more in eventlog)Traceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 260, in _process_flow\n    return self.handle_regular_connect(f)\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\n    layer()\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 279, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 354, in _establish_tls_with_client_and_server\n    self.ctx.connect()\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/protocol/tls.py\", line 300, in connect\n    self.ctx.connect()\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/protocol/base.py\", line 166, in connect\n    self.server_conn.connect()\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/connections.py\", line 267, in connect\n    tcp.TCPClient.connect(self)\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/net/tcp.py\", line 463, in connect\n    self.ip_address = connection.getpeername()\nOSError: [Errno 22] Invalid argument\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 12, in __call__\n    self.disconnect()\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/proxy/protocol/base.py\", line 147, in disconnect\n    self.server_conn.finish()\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/connections.py\", line 299, in finish\n    tcp.TCPClient.finish(self)\n  File \"/usr/local/Cellar/mitmproxy/4.0.3_1/libexec/lib/python3.7/site-packages/mitmproxy/net/tcp.py\", line 324, in finish\n    self.wfile.flush()\nAttributeError: 'NoneType' object has no attribute 'flush'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2018-07-27T17:50:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "238": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3266", "issue_id": "#3266", "issue_summary": "Confusing confdir argument", "issue_description": "tomlabaude commented on 27 Jul 2018\nMy tests are messy cause I used mitmproxy and mitmdump, both of them in 4.0.1 and 4.0.3 and now I mixed all cases.\nAt some point, I think I had an error saying that --confdir was deprecated and had to use \"--set confdir=\" (I can't reproduce this case though with mitmproxy or mitmdump...)\nI spent some time to try to make \"--set confdir=\" work in a weird bash script and arguments with quotes and maybe it failed due to me.\nBut I realized --confdir was still working eventually for mitmdump in 4.0.3.\nQuestion to sum up:\nIs it attended to have both \"--confdir\" and \"--set confdir=\" working at the same time for mitmproxy & mitmdump?\nIf yes, help (-h) should specify it clearly with something like: \"--confdir PATH, --set confdir=PATH\"\nIf not, one of them should be deleted.", "issue_status": "Closed", "issue_reporting_time": "2018-07-27T15:51:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "239": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3264", "issue_id": "#3264", "issue_summary": "Weird SSL_PROTOCOL_ERROR on iOS / macOS devices but not Android in transparent mode.", "issue_description": "SgrAlpha commented on 27 Jul 2018\nI git a weird SSL_PROTOCOL_ERROR on iOS / macOS devices when playing with transparent mode.\nThe deployment topology is my clients will connect to my VPS server using shadowsocks proxy, mitmproxy is enabled on the VPS and running in transparent mode to capture the communications to one specific site.\nAll Android devices work perfectly without error, but on all iOS / macOS devices, will hit SSL_PROTOCOL_ERROR when trying to browse HTTPS site.\nUsually that's due to wrong CA, but I confirm the root CA has been installed to all iOS devices, and enabled in General -> About -> Certificate Trust Settings.\nSteps to reproduce the problem:\nBuild a new Ubuntu 18.04 VPS\nSetup shadowsocks-libev server listen to port 8989 for example.\nEnable UFW and allow 8989 and 5800\nUpdate /etc/ufw/before.rules, append following after the last commit:\n*nat\n:PREROUTING ACCEPT [0:0]\n:POSTROUTING ACCEPT [0:0]\n:OUTPUT ACCEPT [0:0]\n-A OUTPUT -p tcp -m owner --uid-owner nobody --dport 80 -j REDIRECT --to-port 8080\n-A OUTPUT -p tcp -m owner --uid-owner nobody --dport 443 -j REDIRECT --to-port 8080\nCOMMIT\nInstall mitmproxy and start with: mitmdump --mode transparent --ignore-hosts <rules> --script /capture.py\nLet clients connect to the VPS via shadowsocks client.\nOpen Safari / Chrome and visite https://www.google.com\nAny other comments? What have you tried so far?\nAndroid devices work perfectly. If I remove the changes in /etc/ufw/before.rules, switch to regular mode and let clients connect as a HTTP proxy, both Android and iOS work.\nSystem information\nMitmproxy: 4.0.3\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.15.0-29-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Closed", "issue_reporting_time": "2018-07-27T06:05:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "240": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3263", "issue_id": "#3263", "issue_summary": "Starting proxy from custom script raises AttributeError: No such option: body_size_limit", "issue_description": "llazzaro commented on 25 Jul 2018 \u2022\nedited\nSteps to reproduce the problem:\nusing the following python code:\nimport os\nimport sys\n\nfrom mitmproxy import http\nfrom mitmproxy.master import Master\nfrom mitmproxy.proxy import ProxyConfig, ProxyServer\nfrom mitmproxy.options import Options\n\nclass TestInterceptor(Master):\n    def __init__(self, options, server, data_queue):\n        Master.__init__(self, options)\n        self.server = server\n        self.data_queue = data_queue\n\n    def run(self):\n        while True:\n            try:\n                Master.run(self)\n            except KeyboardInterrupt:\n                self.shutdown()\n                sys.exit(0)\n\ndef start_proxy(port, data_queue):\n    options = Options(\n        listen_port=port,\n    )\n    #options.body_size_limit='3m'\n    config = ProxyConfig(\n        options=options,\n    #    cacert = os.path.expanduser('./mitmproxy.pem'),\n    )\n    server = ProxyServer(config)\n    print('Intercepting Proxy listening on {0}'.format(port))\n    m = TestInterceptor(options, server, data_queue)\n    m.run()\nTraceback:\nTraceback (most recent call last):\n  File \"/Users/leonardolazzaro/.pyenv/versions/picks/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/Users/leonardolazzaro/.pyenv/versions/picks/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/Users/leonardolazzaro/.pyenv/versions/picks/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/protocol/tls.py\", line 286, in __call__\n    layer()\n  File \"/Users/leonardolazzaro/.pyenv/versions/picks/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/protocol/http1.py\", line 83, in __call__\n    layer()\n  File \"/Users/leonardolazzaro/.pyenv/versions/picks/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/Users/leonardolazzaro/.pyenv/versions/picks/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/protocol/http.py\", line 282, in _process_flow\n    f.request.data.content = b\"\".join(self.read_request_body(request))\n  File \"/Users/leonardolazzaro/.pyenv/versions/picks/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/protocol/http1.py\", line 23, in read_request_body\n    human.parse_size(self.config.options.body_size_limit)\n  File \"/Users/leonardolazzaro/.pyenv/versions/picks/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/optmanager.py\", line 172, in __getattr__\n    raise AttributeError(\"No such option: %s\" % attr)\nAttributeError: No such option: body_size_limit\nSystem information\nMitmproxy: 4.0.3\nPython: 3.6.1\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Darwin-17.6.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-07-25T05:24:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "241": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3262", "issue_id": "#3262", "issue_summary": "Segmentation Fault Help!", "issue_description": "c0rpse commented on 24 Jul 2018\nGlibc problem.I changed the glibc version and tried to execute mitmproxy.But all of them were failed.\nThey looks like bellow:\n[localhost software]# LD_LIBRARY_PATH=/home/work/libs/glibc-2.17/lib ./mitmproxy\n./mitmproxy: error while loading shared libraries: __vdso_time: invalid mode for dlopen(): Invalid argument\n[localhost software]# LD_LIBRARY_PATH=/home/work/libs/glibc-2.15/lib ./mitmproxy\nSegmentation fault\n[localhost software]# LD_LIBRARY_PATH=/home/work/libs/glibc-2.14/lib ./mitmproxy\nTraceback (most recent call last):\nFile \"site-packages/PyInstaller/loader/rthooks/pyi_rth_pkgres.py\", line 11, in\nFile \"/home/travis/build/mitmproxy/mitmproxy/.tox/rtool/lib/python3.5/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\nFile \"site-packages/pkg_resources/init.py\", line 33, in\nFile \"/home/travis/build/mitmproxy/mitmproxy/.tox/rtool/lib/python3.5/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\nFile \"platform.py\", line 117, in\nFile \"/home/travis/build/mitmproxy/mitmproxy/.tox/rtool/lib/python3.5/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 631, in exec_module\nFile \"subprocess.py\", line 438, in\nFile \"/home/travis/build/mitmproxy/mitmproxy/.tox/rtool/lib/python3.5/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 714, in load_module\nImportError: /home/work/libs/glibc-2.14/lib/libc.so.6: version `GLIBC_2.15' not found (required by /tmp/_MEICvKEA3/select.so)\n[30568] Failed to execute script pyi_rth_pkgres\n[localhost software]# LD_LIBRARY_PATH=/home/work/libs/glibc-2.17/lib ./mitmproxy\n./mitmproxy: error while loading shared libraries: __vdso_time: invalid mode for dlopen(): Invalid argument", "issue_status": "Closed", "issue_reporting_time": "2018-07-24T14:26:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "242": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3261", "issue_id": "#3261", "issue_summary": "HTTPS traffic doesn't intercept and just tunnled", "issue_description": "dirkwirth commented on 24 Jul 2018\nHey All,\nI tried to connect my iPhone to mitmproxy and i didn't see any HTTPS traffic.\nI configure the mitmproxy to be proxy server of my iPhone.\nWhen i used transparent mode, i got the error: \"Unexpected CONNECT request.\"\nand when i tried to open the mitmproxy in regular mode then i didn't see traffic HTTPS traffic.\nThis is what i see:\n10.129.0.50:53623: clientdisconnect\n10.129.0.50:53624: clientconnect\n10.129.0.50:53624: clientdisconnect\n10.129.0.50:53626: clientconnect\n10.129.0.50:53626: clientdisconnect\n10.129.0.50:53629: clientconnect\n10.129.0.50:53629: clientdisconnect\n10.129.0.50:53630: clientconnect\n10.129.0.50:53630: clientdisconnect\nThanks! :)", "issue_status": "Closed", "issue_reporting_time": "2018-07-24T11:12:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "243": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3259", "issue_id": "#3259", "issue_summary": "Unable to enter backslash or parenthesis in a display filter regex interactively", "issue_description": "alexeypetrenko commented on 23 Jul 2018\nHi, thanks for your great work with mitmproxy!\nI beleive I found a bug.\nExample:\nLet's say I want to show only requests containing a digit in url.\nFilter \\d does the trick. However, I cannot enter it interactively via f hotkey. Setting it via --view-filter \"\\d\" works fine.\nSystem info\nI'm running an image from dockerhub\n# mitmproxy --version\nMitmproxy: 4.0.3\nPython:    3.6.3\nOpenSSL:   OpenSSL 1.0.2o  27 Mar 2018\nPlatform:  Linux-4.17.3-200.fc28.x86_64-x86_64-with", "issue_status": "Closed", "issue_reporting_time": "2018-07-23T17:21:46Z", "fixed_by": "#3693", "pull_request_summary": "Improve Command Bar UX", "pull_request_description": "Contributor\ntypoon commented on 13 Nov 2019\nThese changes fix the issues with the command bar where using backslash and quotes was not properly working.\nWith that fix, regexes can also now be properly written and work just fine.\ncloses #3259\ncloses #3689", "pull_request_status": "Merged", "issue_fixed_time": "2019-11-21T13:13:09Z", "files_changed": [["4", "examples/complex/remote_debug.py"], ["49", "mitmproxy/addons/core.py"], ["20", "mitmproxy/addons/export.py"], ["58", "mitmproxy/addons/view.py"]]}, "244": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3255", "issue_id": "#3255", "issue_summary": "Syntax Error by Following Documentation Code", "issue_description": "pkqxdd commented on 22 Jul 2018\nI followed the \"workaround\" for macOS for transparent proxying. However, after I pasted the code, pfctl gave the following output:\nNo ALTQ support in kernel\nALTQ related functions disabled\npf.conf:23: syntax error\npfctl: Syntax error in config file: pf rules not loaded\nSystem information\nMitmproxy: 3.0.4\nPython: 3.6.6\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Darwin-17.6.0-x86_64-i386-64bit\nSIP disabled", "issue_status": "Closed", "issue_reporting_time": "2018-07-21T22:54:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "245": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3250", "issue_id": "#3250", "issue_summary": "Errors running tests", "issue_description": "FFY00 commented on 18 Jul 2018 \u2022\nedited\nSteps to reproduce the problem:\npython setup.py pytest\nOutput:\n==================================== ERRORS ====================================\n________________________ ERROR at setup of test_mitmweb ________________________\nfile /build/mitmproxy-git/src/mitmproxy/test/mitmproxy/tools/test_main.py, line 9\n  def test_mitmweb(event_loop, tdata):\nE       fixture 'event_loop' not found\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, record_xml_attribute, record_xml_property, recwarn, tdata, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/build/mitmproxy-git/src/mitmproxy/test/mitmproxy/tools/test_main.py:9\n_______________________ ERROR at setup of test_mitmdump ________________________\nfile /build/mitmproxy-git/src/mitmproxy/test/mitmproxy/tools/test_main.py, line 18\n  def test_mitmdump(event_loop, tdata):\nE       fixture 'event_loop' not found\n>       available fixtures: cache, capfd, capfdbinary, caplog, capsys, capsysbinary, doctest_namespace, monkeypatch, pytestconfig, record_property, record_xml_attribute, record_xml_property, recwarn, tdata, tmpdir, tmpdir_factory\n>       use 'pytest --fixtures [testpath]' for help on them.\n\n/build/mitmproxy-git/src/mitmproxy/test/mitmproxy/tools/test_main.py:18\npython setup.py pytest\nOutput:\nException in thread WebsocketFrameReader:\nTraceback (most recent call last):\n  File \"/usr/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\n    self.run()\n  File \"/build/mitmproxy-git/src/mitmproxy/pathod/pathoc.py\", line 128, in run\n    r, _, _ = select.select([self.rfile], [], [], 0.05)\nValueError: file descriptor cannot be a negative integer (-1)\nAny other comments? What have you tried so far?\nI ran pytest --fixtures\nOutput:\n---------------------------------------------------------------------------------------- fixtures defined from test.conftest ----------------------------------------------------------------------------------------\ntdata\n    build/mitmproxy-git/src/mitmproxy/test/conftest.py:41: no docstring available\n\n------------------------------------------------------------------------------ fixtures defined from test.mitmproxy.addons.test_export ------------------------------------------------------------------------------\nget_request\n    build/mitmproxy-git/src/mitmproxy/test/mitmproxy/addons/test_export.py:15: no docstring available\npost_request\n    build/mitmproxy-git/src/mitmproxy/test/mitmproxy/addons/test_export.py:26: no docstring available\npatch_request\n    build/mitmproxy-git/src/mitmproxy/test/mitmproxy/addons/test_export.py:37: no docstring available\ntcp_flow\n    build/mitmproxy-git/src/mitmproxy/test/mitmproxy/addons/test_export.py:44: no docstring available\n\n------------------------------------------------------------------------------ fixtures defined from test.mitmproxy.tools.web.test_app ------------------------------------------------------------------------------\nno_tornado_logging\n    build/mitmproxy-git/src/mitmproxy/test/mitmproxy/tools/web/test_app.py:19: no docstring available\n\n----------------------------------------------------------------------------- fixtures defined from test.mitmproxy.addons.test_readfile -----------------------------------------------------------------------------\ndata\n    build/mitmproxy-git/src/mitmproxy/test/mitmproxy/addons/test_readfile.py:15: no docstring available\ncorrupt_data\n    build/mitmproxy-git/src/mitmproxy/test/mitmproxy/addons/test_readfile.py:33: no docstring available\n\n------------------------------------------------------------------------------- fixtures defined from test.examples.test_xss_scanner --------------------------------------------------------------------------------\nlogger\n    build/mitmproxy-git/src/mitmproxy/test/examples/test_xss_scanner.py:308: no docstring available\nSystem information\nLatest from git (tag.revision.commit): 4.0.0.r93.7f464b892\n(git describe --long --tags | sed 's/^v//;s/\\([^-]*-\\)g/r\\1/;s/-/./g;s/\\.rc./rc/g')\nI don't know why 4.0.0 shows up as the tag.\nNote\nI am maintaining mitmproxy-git in Arch Linux's AUR repo. The packaging process runs tests by default. Committing to the repo without checking if the changes break the tests will break the package, please be careful when doing this. Thanks.", "issue_status": "Closed", "issue_reporting_time": "2018-07-18T13:13:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "246": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3247", "issue_id": "#3247", "issue_summary": "mitmproxy will not run using Python 3.7.0", "issue_description": "PhartimusMaximus commented on 13 Jul 2018\nInstalled mitmproxy and started it.\nFollowing message was returned:\n############################################################################\nmitmproxy requires Python 3.6 or higher!\nPlease upgrade your Python intepreter or use our mitmproxy binaries from\nhttps://mitmproxy.org. If your operating system does not include the\nrequired Python version, you can try using pyenv or similar tools.\n############################################################################\nSystem information\nsam-precision-m4800\ndescription: Laptop\nproduct: Precision M4800 (05CC)\nvendor: Dell Inc.\nversion: 00\nserial: CFJBR52\nwidth: 64 bits\ncapabilities: smbios-2.7 dmi-2.7 vsyscall32\nconfiguration: boot=normal chassis=laptop sku=05CC uuid=44454C4C-4600-104A-8042-C3C04F523532\n*-core\ndescription: Motherboard\nproduct: 0X3C7N\nvendor: Dell Inc.\nphysical id: 0\nversion: A00\nserial: /CFJBR52/CN1296355BGEL9/\n*-firmware\ndescription: BIOS\nvendor: Dell Inc.\nphysical id: 0\nversion: A19\ndate: 05/14/2017\nsize: 64KiB\ncapacity: 11MiB\ncapabilities: pci pnp upgrade shadowing cdboot bootselect edd int13floppy1200 int13floppy720 int13floppy2880 int5printscreen int9keyboard int14serial int17printer acpi usb smartbattery biosbootspecification netboot uefi\n*-cpu\ndescription: CPU\nproduct: Intel(R) Core(TM) i7-4910MQ CPU @ 2.90GHz\nvendor: Intel Corp.\nphysical id: 43\nbus info: cpu@0\nversion: Intel(R) Core(TM) i7-4910MQ CPU @ 2.90GHz\nslot: SOCKET 0\nsize: 954MHz\ncapacity: 3900MHz\nwidth: 64 bits\nclock: 100MHz\ncapabilities: x86-64 fpu fpu_exception wp vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp constant_tsc arch_perfmon pebs bts rep_good nopl xtopology nonstop_tsc cpuid aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 sdbg fma cx16 xtpr pdcm pcid sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm abm cpuid_fault epb invpcid_single pti retpoline tpr_shadow vnmi flexpriority ept vpid fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid xsaveopt dtherm ida arat pln pts cpufreq\nconfiguration: cores=4 enabledcores=4 threads=8\n*-cache:0\ndescription: L1 cache\nphysical id: 44\nslot: CPU Internal L1\nsize: 256KiB\ncapacity: 256KiB\ncapabilities: internal write-back\nconfiguration: level=1\n*-cache:1\ndescription: L2 cache\nphysical id: 45\nslot: CPU Internal L2\nsize: 1MiB\ncapacity: 1MiB\ncapabilities: internal write-back unified\nconfiguration: level=2\n*-cache:2\ndescription: L3 cache\nphysical id: 46\nslot: CPU Internal L3\nsize: 8MiB\ncapacity: 8MiB\ncapabilities: internal write-back unified\nconfiguration: level=3\n*-memory\ndescription: System Memory\nphysical id: 47\nslot: System board or motherboard\nsize: 16GiB\n*-bank:0\ndescription: SODIMM DDR3 Synchronous 1600 MHz (0.6 ns)\nproduct: EBJ81UG8EFU0-GN-F\nvendor: Elpida\nphysical id: 0\nserial: FCACABD5\nslot: DIMM B\nsize: 8GiB\nwidth: 64 bits\nclock: 1600MHz (0.6ns)\n*-bank:1\ndescription: DIMM [empty]\nproduct: [Empty]\nvendor: [Empty]\nphysical id: 1\nserial: [Empty]\nslot: DIMM C\n*-bank:2\ndescription: SODIMM DDR3 Synchronous 1600 MHz (0.6 ns)\nproduct: EBJ81UG8EFU0-GN-F\nvendor: Elpida\nphysical id: 2\nserial: F5ACAB8B\nslot: DIMM A\nsize: 8GiB\nwidth: 64 bits\nclock: 1600MHz (0.6ns)\n*-bank:3\ndescription: DIMM [empty]\nproduct: [Empty]\nvendor: [Empty]\nphysical id: 3\nserial: [Empty]\nslot: DIMM D\n*-pci\ndescription: Host bridge\nproduct: Xeon E3-1200 v3/4th Gen Core Processor DRAM Controller\nvendor: Intel Corporation\nphysical id: 100\nbus info: pci@0000:00:00.0\nversion: 06\nwidth: 32 bits\nclock: 33MHz\n*-pci:0\ndescription: PCI bridge\nproduct: Xeon E3-1200 v3/4th Gen Core Processor PCI Express x16 Controller\nvendor: Intel Corporation\nphysical id: 1\nbus info: pci@0000:00:01.0\nversion: 06\nwidth: 32 bits\nclock: 33MHz\ncapabilities: pci pm msi pciexpress normal_decode bus_master cap_list\nconfiguration: driver=pcieport\nresources: irq:16 ioport:e000(size=4096) memory:f7e00000-f7efffff ioport:e0000000(size=268435456)\n*-generic:0\ndescription: Unassigned class\nproduct: Illegal Vendor ID\nvendor: Illegal Vendor ID\nphysical id: 0\nbus info: pci@0000:01:00.0\nversion: ff\nwidth: 32 bits\nclock: 66MHz\ncapabilities: bus_master vga_palette cap_list rom\nconfiguration: driver=radeon latency=255 maxlatency=255 mingnt=255\nresources: irq:29 memory:e0000000-efffffff memory:f7e00000-f7e3ffff ioport:e000(size=256) memory:f7e40000-f7e5ffff\n*-generic:1\ndescription: Unassigned class\nproduct: Illegal Vendor ID\nvendor: Illegal Vendor ID\nphysical id: 0.1\nbus info: pci@0000:01:00.1\nversion: ff\nwidth: 32 bits\nclock: 66MHz\ncapabilities: bus_master vga_palette cap_list\nconfiguration: driver=snd_hda_intel latency=255 maxlatency=255 mingnt=255\nresources: irq:17 memory:f7e60000-f7e63fff\n*-display\ndescription: VGA compatible controller\nproduct: 4th Gen Core Processor Integrated Graphics Controller\nvendor: Intel Corporation\nphysical id: 2\nbus info: pci@0000:00:02.0\nversion: 06\nwidth: 64 bits\nclock: 33MHz\ncapabilities: msi pm vga_controller bus_master cap_list rom\nconfiguration: driver=i915 latency=0\nresources: irq:30 memory:f5800000-f5bfffff memory:d0000000-dfffffff ioport:f000(size=64) memory:c0000-dffff\n*-multimedia:0\ndescription: Audio device\nproduct: Xeon E3-1200 v3/4th Gen Core Processor HD Audio Controller\nvendor: Intel Corporation\nphysical id: 3\nbus info: pci@0000:00:03.0\nversion: 06\nwidth: 64 bits\nclock: 33MHz\ncapabilities: pm msi pciexpress bus_master cap_list\nconfiguration: driver=snd_hda_intel latency=0\nresources: irq:33 memory:f7f34000-f7f37fff\n*-usb:0\ndescription: USB controller\nproduct: 8 Series/C220 Series Chipset Family USB xHCI\nvendor: Intel Corporation\nphysical id: 14\nbus info: pci@0000:00:14.0\nversion: 04\nwidth: 64 bits\nclock: 33MHz\ncapabilities: pm msi xhci bus_master cap_list\nconfiguration: driver=xhci_hcd latency=0\nresources: irq:26 memory:f7f20000-f7f2ffff\n*-usbhost:0\nproduct: xHCI Host Controller\nvendor: Linux 4.13.0-37-generic xhci-hcd\nphysical id: 0\nbus info: usb@3\nlogical name: usb3\nversion: 4.13\ncapabilities: usb-2.00\nconfiguration: driver=hub slots=15 speed=480Mbit/s\n*-usbhost:1\nproduct: xHCI Host Controller\nvendor: Linux 4.13.0-37-generic xhci-hcd\nphysical id: 1\nbus info: usb@4\nlogical name: usb4\nversion: 4.13\ncapabilities: usb-3.00\nconfiguration: driver=hub slots=6 speed=5000Mbit/s\n*-communication\ndescription: Communication controller\nproduct: 8 Series/C220 Series Chipset Family MEI Controller #1\nvendor: Intel Corporation\nphysical id: 16\nbus info: pci@0000:00:16.0\nversion: 04\nwidth: 64 bits\nclock: 33MHz\ncapabilities: pm msi bus_master cap_list\nconfiguration: driver=mei_me latency=0\nresources: irq:31 memory:f7f40000-f7f4000f\n*-network\ndescription: Ethernet interface\nproduct: Ethernet Connection I217-LM\nvendor: Intel Corporation\nphysical id: 19\nbus info: pci@0000:00:19.0\nlogical name: eno1\nversion: 04\nserial: 34:e6:d7:5c:bc:2b\ncapacity: 1Gbit/s\nwidth: 32 bits\nclock: 33MHz\ncapabilities: pm msi bus_master cap_list ethernet physical tp 10bt 10bt-fd 100bt 100bt-fd 1000bt-fd autonegotiation\nconfiguration: autonegotiation=on broadcast=yes driver=e1000e driverversion=3.2.6-k firmware=0.13-3 latency=0 link=no multicast=yes port=twisted pair\nresources: irq:28 memory:f7f00000-f7f1ffff memory:f7f3d000-f7f3dfff ioport:f080(size=32)\n*-usb:1\ndescription: USB controller\nproduct: 8 Series/C220 Series Chipset Family USB EHCI #2\nvendor: Intel Corporation\nphysical id: 1a\nbus info: pci@0000:00:1a.0\nversion: 04\nwidth: 32 bits\nclock: 33MHz\ncapabilities: pm debug ehci bus_master cap_list\nconfiguration: driver=ehci-pci latency=0\nresources: irq:16 memory:f7f3c000-f7f3c3ff\n*-usbhost\nproduct: EHCI Host Controller\nvendor: Linux 4.13.0-37-generic ehci_hcd\nphysical id: 1\nbus info: usb@1\nlogical name: usb1\nversion: 4.13\ncapabilities: usb-2.00\nconfiguration: driver=hub slots=2 speed=480Mbit/s\n*-usb\ndescription: USB hub\nvendor: Intel Corp.\nphysical id: 1\nbus info: usb@1:1\nversion: 0.04\ncapabilities: usb-2.00\nconfiguration: driver=hub slots=6 speed=480Mbit/s\n*-multimedia:1\ndescription: Audio device\nproduct: 8 Series/C220 Series Chipset High Definition Audio Controller\nvendor: Intel Corporation\nphysical id: 1b\nbus info: pci@0000:00:1b.0\nversion: 04\nwidth: 64 bits\nclock: 33MHz\ncapabilities: pm msi pciexpress bus_master cap_list\nconfiguration: driver=snd_hda_intel latency=0\nresources: irq:32 memory:f7f30000-f7f33fff\n*-pci:1\ndescription: PCI bridge\nproduct: 8 Series/C220 Series Chipset Family PCI Express Root Port #1\nvendor: Intel Corporation\nphysical id: 1c\nbus info: pci@0000:00:1c.0\nversion: d4\nwidth: 32 bits\nclock: 33MHz\ncapabilities: pci pciexpress msi pm normal_decode bus_master cap_list\nconfiguration: driver=pcieport\nresources: irq:16 ioport:2000(size=4096) memory:cf200000-cf3fffff ioport:cf400000(size=2097152)\n*-pci:2\ndescription: PCI bridge\nproduct: 8 Series/C220 Series Chipset Family PCI Express Root Port #3\nvendor: Intel Corporation\nphysical id: 1c.2\nbus info: pci@0000:00:1c.2\nversion: d4\nwidth: 32 bits\nclock: 33MHz\ncapabilities: pci pciexpress msi pm normal_decode bus_master cap_list\nconfiguration: driver=pcieport\nresources: irq:18 memory:f5c00000-f5efffff\n*-network\ndescription: Wireless interface\nproduct: BCM4352 802.11ac Wireless Network Adapter\nvendor: Broadcom Corporation\nphysical id: 0\nbus info: pci@0000:03:00.0\nlogical name: wlp3s0\nversion: 03\nserial: ac:e0:10:5b:14:83\nwidth: 64 bits\nclock: 33MHz\ncapabilities: pm msi pciexpress bus_master cap_list ethernet physical wireless\nconfiguration: broadcast=yes driver=wl0 driverversion=6.30.223.271 (r587334) ip=192.168.1.11 latency=0 multicast=yes wireless=IEEE 802.11\nresources: irq:18 memory:f5e00000-f5e07fff memory:f5c00000-f5dfffff\n*-pci:3\ndescription: PCI bridge\nproduct: 8 Series/C220 Series Chipset Family PCI Express Root Port #4\nvendor: Intel Corporation\nphysical id: 1c.3\nbus info: pci@0000:00:1c.3\nversion: d4\nwidth: 32 bits\nclock: 33MHz\ncapabilities: pci pciexpress msi pm normal_decode bus_master cap_list\nconfiguration: driver=pcieport\nresources: irq:19 ioport:d000(size=4096) memory:f7300000-f7cfffff ioport:f1400000(size=10485760)\n*-pci:4\ndescription: PCI bridge\nproduct: 8 Series/C220 Series Chipset Family PCI Express Root Port #5\nvendor: Intel Corporation\nphysical id: 1c.4\nbus info: pci@0000:00:1c.4\nversion: d4\nwidth: 32 bits\nclock: 33MHz\ncapabilities: pci pciexpress msi pm normal_decode bus_master cap_list\nconfiguration: driver=pcieport\nresources: irq:16 ioport:c000(size=4096) memory:f6900000-f72fffff ioport:f0a00000(size=10485760)\n*-pci:5\ndescription: PCI bridge\nproduct: 8 Series/C220 Series Chipset Family PCI Express Root Port #7\nvendor: Intel Corporation\nphysical id: 1c.6\nbus info: pci@0000:00:1c.6\nversion: d4\nwidth: 32 bits\nclock: 33MHz\ncapabilities: pci pciexpress msi pm normal_decode bus_master cap_list\nconfiguration: driver=pcieport\nresources: irq:18 ioport:a000(size=8192) memory:f5f00000-f68fffff ioport:f0000000(size=10485760)\n*-pci:6\ndescription: PCI bridge\nproduct: 8 Series/C220 Series Chipset Family PCI Express Root Port #8\nvendor: Intel Corporation\nphysical id: 1c.7\nbus info: pci@0000:00:1c.7\nversion: d4\nwidth: 32 bits\nclock: 33MHz\ncapabilities: pci pciexpress msi pm normal_decode bus_master cap_list\nconfiguration: driver=pcieport\nresources: irq:19 memory:f7d00000-f7dfffff\n*-generic\ndescription: SD Host controller\nproduct: SD/MMC Card Reader Controller\nvendor: O2 Micro, Inc.\nphysical id: 0\nbus info: pci@0000:11:00.0\nversion: 01\nwidth: 32 bits\nclock: 33MHz\ncapabilities: pm msi pciexpress bus_master cap_list\nconfiguration: driver=sdhci-pci latency=0\nresources: irq:19 memory:f7d01000-f7d01fff memory:f7d00000-f7d007ff\n*-usb:2\ndescription: USB controller\nproduct: 8 Series/C220 Series Chipset Family USB EHCI #1\nvendor: Intel Corporation\nphysical id: 1d\nbus info: pci@0000:00:1d.0\nversion: 04\nwidth: 32 bits\nclock: 33MHz\ncapabilities: pm debug ehci bus_master cap_list\nconfiguration: driver=ehci-pci latency=0\nresources: irq:21 memory:f7f3b000-f7f3b3ff\n*-usbhost\nproduct: EHCI Host Controller\nvendor: Linux 4.13.0-37-generic ehci_hcd\nphysical id: 1\nbus info: usb@2\nlogical name: usb2\nversion: 4.13\ncapabilities: usb-2.00\nconfiguration: driver=hub slots=2 speed=480Mbit/s\n*-usb\ndescription: USB hub\nvendor: Intel Corp.\nphysical id: 1\nbus info: usb@2:1\nversion: 0.04\ncapabilities: usb-2.00\nconfiguration: driver=hub slots=8 speed=480Mbit/s\n*-usb:0\ndescription: Generic USB device\nproduct: BCM20702A0\nvendor: Broadcom Corp\nphysical id: 5\nbus info: usb@2:1.5\nversion: 1.12\nserial: ACE0105B1484\ncapabilities: usb-2.00\nconfiguration: driver=btusb speed=12Mbit/s\n*-usb:1 UNCLAIMED\ndescription: Generic USB device\nproduct: 5880\nvendor: Broadcom Corp\nphysical id: 8\nbus info: usb@2:1.8\nversion: 1.01\nserial: 0123456789ABCD\ncapabilities: usb-1.10\nconfiguration: maxpower=100mA speed=12Mbit/s\n*-isa\ndescription: ISA bridge\nproduct: QM87 Express LPC Controller\nvendor: Intel Corporation\nphysical id: 1f\nbus info: pci@0000:00:1f.0\nversion: 04\nwidth: 32 bits\nclock: 33MHz\ncapabilities: isa bus_master cap_list\nconfiguration: driver=lpc_ich latency=0\nresources: irq:0\n*-storage\ndescription: RAID bus controller\nproduct: 82801 Mobile SATA Controller [RAID mode]\nvendor: Intel Corporation\nphysical id: 1f.2\nbus info: pci@0000:00:1f.2\nversion: 04\nwidth: 32 bits\nclock: 66MHz\ncapabilities: storage msi pm bus_master cap_list\nconfiguration: driver=ahci latency=0\nresources: irq:27 ioport:f0d0(size=8) ioport:f0c0(size=4) ioport:f0b0(size=8) ioport:f0a0(size=4) ioport:f060(size=32) memory:f7f3a000-f7f3a7ff\n*-serial UNCLAIMED\ndescription: SMBus\nproduct: 8 Series/C220 Series Chipset Family SMBus Controller\nvendor: Intel Corporation\nphysical id: 1f.3\nbus info: pci@0000:00:1f.3\nversion: 04\nwidth: 64 bits\nclock: 33MHz\nconfiguration: latency=0\nresources: memory:f7f39000-f7f390ff ioport:f040(size=32)\n*-scsi:0\nphysical id: 1\nlogical name: scsi0\ncapabilities: emulated\n*-disk\ndescription: ATA Disk\nproduct: ST500LM000-1EJ16\nvendor: Seagate\nphysical id: 0.0.0\nbus info: scsi@0:0.0.0\nlogical name: /dev/sda\nversion: DEMC\nserial: W764W5ZN\nsize: 465GiB (500GB)\ncapabilities: partitioned partitioned:dos\nconfiguration: ansiversion=5 logicalsectorsize=512 sectorsize=4096 signature=557fc104\n*-volume:0\ndescription: Windows NTFS volume\nphysical id: 1\nbus info: scsi@0:0.0.0,1\nlogical name: /dev/sda1\nversion: 3.1\nserial: 4801-e201\nsize: 498MiB\ncapacity: 500MiB\ncapabilities: primary bootable ntfs initialized\nconfiguration: clustersize=4096 created=2017-11-28 13:45:05 filesystem=ntfs label=System Reserved modified_by_chkdsk=true mounted_on_nt4=true resize_log_file=true state=dirty upgrade_on_mount=true\n*-volume:1\ndescription: Windows NTFS volume\nphysical id: 2\nbus info: scsi@0:0.0.0,2\nlogical name: /dev/sda2\nversion: 3.1\nserial: 1a0a957c-6296-6e40-8db7-b9a506d25ec5\nsize: 318GiB\ncapacity: 318GiB\ncapabilities: primary ntfs initialized\nconfiguration: clustersize=4096 created=2017-11-28 13:45:14 filesystem=ntfs state=clean\n*-volume:2\ndescription: Windows NTFS volume\nphysical id: 3\nbus info: scsi@0:0.0.0,3\nlogical name: /dev/sda3\nversion: 3.1\nserial: 187c-1c4f\nsize: 459MiB\ncapacity: 475MiB\ncapabilities: primary ntfs initialized\nconfiguration: clustersize=4096 created=2017-11-28 18:49:09 filesystem=ntfs modified_by_chkdsk=true mounted_on_nt4=true resize_log_file=true state=dirty upgrade_on_mount=true\n*-volume:3\ndescription: Extended partition\nphysical id: 4\nbus info: scsi@0:0.0.0,4\nlogical name: /dev/sda4\nsize: 146GiB\ncapacity: 146GiB\ncapabilities: primary extended partitioned partitioned:extended\n*-logicalvolume:0\ndescription: Linux swap / Solaris partition\nphysical id: 5\nlogical name: /dev/sda5\ncapacity: 15GiB\ncapabilities: nofs\n*-logicalvolume:1\ndescription: Linux filesystem partition\nphysical id: 6\nlogical name: /dev/sda6\nlogical name: /\ncapacity: 130GiB\nconfiguration: mount.fstype=ext4 mount.options=rw,relatime,errors=remount-ro,data=ordered state=mounted\n*-scsi:1\nphysical id: 2\nlogical name: scsi1\ncapabilities: emulated\n*-cdrom\ndescription: DVD reader\nproduct: DVD-ROM DU-8D5LH\nvendor: PLDS\nphysical id: 0.0.0\nbus info: scsi@1:0.0.0\nlogical name: /dev/cdrom\nlogical name: /dev/dvd\nlogical name: /dev/sr0\nversion: FD11\ncapabilities: removable audio dvd\nconfiguration: ansiversion=5 status=nodisc\n*-battery\nproduct: DELL GXMW9D1\nvendor: SMP\nphysical id: 1\nversion: 03/31/2015\nserial: 0AB0\nslot: Sys. Battery Bay\ncapacity: 66600mWh\nconfiguration: voltage=11.1V", "issue_status": "Closed", "issue_reporting_time": "2018-07-12T19:00:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "247": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3244", "issue_id": "#3244", "issue_summary": "Icloud.com error", "issue_description": "michka4 commented on 12 Jul 2018\nSteps to reproduce the problem:\nStart mitmproxy and listen on port 8080.\nSetup proxy in macOS.\nNavigate to yahoo.com and to icloud.com\nIcloud.com is saying 'meet connection problems'\nAnd same for Yahoo.com is loading without sucess.\nMitmproxy: 4.0.3\nPython: 3.7.0\nOpenSSL: OpenSSL 1.0.2o 27 Mar 2018\nPlatform: Darwin-17.6.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-07-11T23:17:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "248": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3242", "issue_id": "#3242", "issue_summary": "The windows mitmdump connection is slow when you download the file", "issue_description": "logan-x commented on 9 Jul 2018\nSteps to reproduce the problem:\n1.Start mitmdump on Windows\n2.Listen for localhost: 8888\n3.Click the download button on the web page\nAny other comments? What have you tried so far?\nAt run time, memory is always high and there is no reduction in closing the browser.\nSystem information\nMitmproxy: 4.0.3 binary\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-2008ServerR2-6.1.7601-SP1", "issue_status": "Closed", "issue_reporting_time": "2018-07-09T08:59:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "249": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3241", "issue_id": "#3241", "issue_summary": "http2 buggy", "issue_description": "inetghost commented on 8 Jul 2018\nThe http2 code seems to be buggy. Watching videos through mitmproxy on watchbox.de does not work. This can easily be reproduced, just try to watch one video on watchbox.de while proxying.\nWhen disabling http2 support with \u2014set http2=false the playback works, which indicates an issue in the http2 code.\nMitmproxy: 5.0.0.dev (+81, commit 3f6147e)\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h. 27 Mar 2018\nPlatform: Linux-4.16.14-300.fc28.x86_64-with-fedora-28-Twenty_Eight", "issue_status": "Closed", "issue_reporting_time": "2018-07-08T15:14:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "250": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3240", "issue_id": "#3240", "issue_summary": "HAR Output quietly fails when using an existing flow file", "issue_description": "ironsalsa commented on 6 Jul 2018 \u2022\nedited\nTL;DR How to output HAR from existing flow\nSteps to reproduce the problem:\nDownload https://github.com/mitmproxy/mitmproxy/blob/ad74c18f74256537fd22037e8aec0e9707773fa0/examples/complex/har_dump.py\nmitmdump -ns ./har_dump.py -r /trash/flowsinnativeformat --set hardump=/trash/hardump.har\nOutput:\nLoading script /trash/har_dump.py\n192.168.13.203:51406: POST http://23.101.136.37/track\n<< 200 OK 2b\n192.168.13.203:32791: POST http://172.82.210.19/b/ss/nbcusportslive/0/JAVA-4.6.0-AN/s55284490\n<< 200 OK 1b\netc. etc.\nThe flow loads, but no HAR output is ever generated - is there a way to load an MITMdump file and convert that to HAR\nAny other comments? What have you tried so far?\nThere used to be a har_extractor.py around, but that is now 404'd when I find references to it.\nSystem information\n$ docker run -it mitmproxy/mitmproxy mitmdump --version\nMitmproxy: 4.0.1\nPython: 3.6.3\nOpenSSL: OpenSSL 1.0.2o 27 Mar 2018\nPlatform: Linux-4.15.0-24-generic-x86_64-with", "issue_status": "Closed", "issue_reporting_time": "2018-07-05T19:37:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "251": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3238", "issue_id": "#3238", "issue_summary": "Addon scripts don't have access to full Python 3 standard library", "issue_description": "0x326 commented on 5 Jul 2018\nSteps to reproduce the problem:\nInstall mitmproxy for Windows. (I used Scoop; scoop install mitmproxy)\necho \"from pathlib import Path\" > test_addon.py\nmitmdump -s test_addon.py\nOutput is:\nLoading script test_addon.py\nin script test_addon.py: No module named 'pathlib'\nProxy server listening at http://*:8080\nExpected output: No error since pathlib was introduced in Python 3.4\nAny other comments? What have you tried so far?\nI tested other standard library modules, such as os and sys and they work as expected.\nSystem information\n$ mitmdump --version\nMitmproxy: 4.0.3 binary\nPython:    3.6.5\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Windows-10-10.0.16299", "issue_status": "Closed", "issue_reporting_time": "2018-07-05T16:14:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "252": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3237", "issue_id": "#3237", "issue_summary": "Unable to overwrite default key bindings", "issue_description": "kidmose commented on 4 Jul 2018\nSteps to reproduce the problem:\nEnter the following into ~/.mitmproxy/keys.yaml, expecting the\neffect to be that n gets bound to console.nav.down:\n -\n   key: n\n   cmd: console.nav.down\nStart mitmproxy\nPress n\nObserve that n is still bound to console.command view.create get https://example.com/,\nas per https://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/tools/console/defaultkeys.py#L61\nAny other comments? What have you tried so far?\nThis seems to be a conflict between the implemented behaviour and the\nexpected behaviour (At least my expectations).\nMy motivation for this possibly unanticipated key binding is that I'd\nlike try and make bindings similar to the defaults of emacs dired\nmode, which would make mitmproxy easier to use for me.\nWith a few hints on where to fix this and some guidance, I'd be happy to try and do it my self.\nSystem information\nMitmproxy: 4.0.3 (+9, commit d08c9cf)\nPython:    3.6.5\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Linux-4.8.0-53-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-07-04T12:37:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "253": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3236", "issue_id": "#3236", "issue_summary": "Transparent mode failure: FileNotFoundError(2, 'No such file or directory')", "issue_description": "pannzh commented on 2 Jul 2018\nSteps to reproduce the problem:\nstart ap and redirect tcp 80/443 stream to 8080\npull and start mitmproxy for raspberrypi model 3\ndocker run -it --rm -p 8080:8080 mitmproxy/mitmproxy:4.0.3-ARMv7 mitmdump -m transparent -p 8080 -v \nand it shows:\n...\nclientconnect\nTransparent mode failure: FileNotFoundError(2, 'No such file or directory')\nProtocolException(\"Transparent mode failure: FileNotFoundError(2, 'No such file or directory')\",)\nclientdisconnect\n...\nSystem information\n$ uname -a\nLinux raspberrypi 4.14.34-v7+ #1110 SMP Mon Apr 16 15:18:51 BST 2018 armv71 GNU/Linux\n$ docker run --rm mitmproxy/mitmproxy:4.0.3-ARMv7 mitmproxy --version\nMitmproxy: 4.0.3\nPython:       3.6.3\nOpenSSL:   OpenSSL 1.0.2o 27 Mar 2018\nPlatform:     Linux-4.14.34-v7+-armv71-with", "issue_status": "Closed", "issue_reporting_time": "2018-07-02T12:29:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "254": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3234", "issue_id": "#3234", "issue_summary": "mitmweb isn't protected against DNS rebinding", "issue_description": "atx commented on 1 Jul 2018\nThe mitmweb interface does not seem to include protection against DNS rebinding. This could be exploited by a malicious website to either access the sniffed data or run arbitrary Python scripts on the filesystem by setting the scripts config option.\nI have hacked together a PoC here (nothing really special to be seen though).", "issue_status": "Closed", "issue_reporting_time": "2018-07-01T15:58:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "255": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3231", "issue_id": "#3231", "issue_summary": "Response json mode with chinese character display as ??", "issue_description": "zxw1962 commented on 28 Jun 2018 \u2022\nedited\nSteps to reproduce the problem:\nany API response with chinese character;\ncheck response tab with json mode;\nlike \"realname\": \"*\u54c8\u54c8\", but display as \"realname\":\"*??\" ;\nAny other comments? What have you tried so far?\nSystem information\nmac os v10.13.2\nMitmproxy: 4.0.3 binary\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Darwin-17.3.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-06-28T15:22:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "256": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3230", "issue_id": "#3230", "issue_summary": "Crash when editing str-options", "issue_description": "Dunedan commented on 28 Jun 2018\nSteps to reproduce the problem:\nStart mitmproxy in interactive mode\nType O to switch to the options view\nEdit a random str-option\nSee mitmproxy crash with the following stacktrace:\nTraceback (most recent call last):\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/mitmproxy/master.py\", line 86, in run_loop\n    loop()\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/urwid/main_loop.py\", line 286, in run\n    self._run()\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/urwid/main_loop.py\", line 384, in _run\n    self.event_loop.run()\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/urwid/main_loop.py\", line 1484, in run\n    reraise(*exc_info)\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/urwid/compat.py\", line 58, in reraise\n    raise value\n  File \"/usr/lib/python3.6/asyncio/events.py\", line 145, in _run\n    self._callback(*self._args)\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/urwid/raw_display.py\", line 404, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/urwid/raw_display.py\", line 502, in parse_input\n    callback(processed, processed_codes)\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/urwid/main_loop.py\", line 411, in _update\n    self.process_input(keys)\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/urwid/main_loop.py\", line 511, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 309, in keypress\n    k = super().keypress(size, k)\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/urwid/container.py\", line 1131, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 44, in keypress\n    ret = super().keypress(size, key)\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/urwid/container.py\", line 1131, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/mitmproxy/tools/console/options.py\", line 283, in keypress\n    return self.focus_item.keypress(tsize, key)\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/mitmproxy/tools/console/options.py\", line 177, in keypress\n    d = self.master.options.parse_setval(foc.opt.name, v)\n  File \"/tmp/mitmproxy-crash/lib/python3.6/site-packages/mitmproxy/optmanager.py\", line 332, in parse_setval\n    if o.typespec in (str, typing.Optional[str]):\nAttributeError: 'str' object has no attribute 'typespec'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n        https://github.com/mitmproxy/mitmproxy\nSystem information\nMitmproxy: 4.0.3\nPython:    3.6.6\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Linux-4.17.0-x86_64-with-debian-buster-sid", "issue_status": "Closed", "issue_reporting_time": "2018-06-28T08:57:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "257": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3228", "issue_id": "#3228", "issue_summary": "Does uploadContent work?", "issue_description": "pravic commented on 28 Jun 2018\nMitmweb 4.0.3\nSteps to reproduce the problem:\nIntercept any HTTP POST packet\nDownload it\nTry to edit it and upload it back\nNothing happens.\nAny other comments? What have you tried so far?\nEven if I attach a debugger and set breakpoints to the FlowContent.post and FlowContent.get, only the second method works when I try to download the packet.\nSo, it looks like a problem in frontend JS code. And I believe it is because of the following error message when I upload something:\nPOST http://127.0.0.1:8081/flows/279d81d1-deee-4795-b99e-1c97e584f718/request/content?_xsrf=2|4a3759c3|09fcb860706632cb87ac58641d3472eb|1526013962 404 (Not Found)\nSystem information\nMitmproxy: 4.0.3\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-7-6.1.7601-SP1", "issue_status": "Closed", "issue_reporting_time": "2018-06-27T18:57:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "258": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3227", "issue_id": "#3227", "issue_summary": "modifying http responses through mitmproxy", "issue_description": "hgundogdu53 commented on 27 Jun 2018\nwhen I typed \"I\" and add \"~s\" as a filter, web page is intercepted and I modified the page after typed \"a\"\nand updated web page released. I want to do that without intercepting the page, Is there a way to do that automatically, not every time intercept the page.", "issue_status": "Closed", "issue_reporting_time": "2018-06-27T16:47:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "259": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3226", "issue_id": "#3226", "issue_summary": "Python3.6 and installation", "issue_description": "sommis commented on 27 Jun 2018 \u2022\nedited\nCan you explain please how to run a new version of mitmproxy on Debian 9? When I run\n\"mitmproxy\" I always get the error, that python 3.6 or higher must be installed, despite the fact that I've installed it.\nAny other comments? What have you tried so far?\nAliases for \"python\" and \"python3\" pointing to python3.6\nupdate-alternatives switching to python3.6\n3.\"python --version\" says \"Python 3.6.4\"\nInstalling python 3.6 from sources and from testing repository\nInstalling mitmproxy from git\nInstalling mitmproxy via pip\nSystem information\nDebian-9-x86_64\nMitmproxy 4.0.3", "issue_status": "Closed", "issue_reporting_time": "2018-06-27T14:02:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "260": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3222", "issue_id": "#3222", "issue_summary": "Websocket", "issue_description": "Octolus commented on 25 Jun 2018 \u2022\nedited\nI have removed the certificate pinning from the application, and redirected all the traffic via MITMPROXY UI.\nI can read the HTTPS Traffic, but the \"Secure Web Socket\" traffic isn't anywhere? I can use a debugger like Charles, which would show raw connection.\nDoes the web ui support \"SECURE WEB SOCKETS\"? It connets fine to it, just can't read it using the tool..\n::ffff:127.0.0.1:61258: Certificate verification error for None: self signed certificate (errno: 18, depth: 0)\n::ffff:127.0.0.1:61258: Ignoring server verification error, continuing with connection", "issue_status": "Closed", "issue_reporting_time": "2018-06-24T19:16:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "261": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3219", "issue_id": "#3219", "issue_summary": "NET::ERR_CERT_WEAK_SIGNATURE_ALGORITHM", "issue_description": "bastova commented on 23 Jun 2018\nGetting \"Your connection is not private\" error in Chrome browser.\nBased on the error description, looks like the mitmproxy certificate is using SHA-1 hashing, which is deemed insecure and is no longer supported by any Chrome browser version. The certs need to be updated to use SHA-256.", "issue_status": "Closed", "issue_reporting_time": "2018-06-22T22:50:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "262": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3217", "issue_id": "#3217", "issue_summary": "TypeError: unorderable types: function() < function()", "issue_description": "krjarvis commented on 21 Jun 2018\nSteps to reproduce the problem:\nThe exception happens intermittently, often several thousand requests into a session. I cannot reproduce at-will. The proxy is getting a lot of bad HTTP requests (expected) that cause this warning (or similar) to be displayed:\nWarn: 10.137.0.2:52288: HTTP protocol error in client request: Bad HTTP request line:\n81\\xbb\\x80\\xa5\\x02S;\\\\xb7\\xd1n\\xb1\\xcf\\xad\\xf7k\\xb4\\xbd\\x9f<'\nThese are flashed in bold below the status bar. I cannot say for sure if it is related.\nAny other comments? What have you tried so far?\nTraceback (most recent call last):\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/master.py\", line 281, in run\nself.loop.run()\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\nself.event_loop.run()\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\nself._loop()\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 715, in _loop\nalarm_callback()\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 164, in cb\ncallback(self, user_data)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/master.py\", line 242, in ticker\nself.loop.set_alarm_in(0.01, self.ticker)\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 165, in set_alarm_in\nreturn self.event_loop.alarm(sec, cb)\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 604, in alarm\nheapq.heappush(self._alarms, (tm, callback))\nTypeError: unorderable types: function() < function()\nmitmproxy has crashed!\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.13.0-41-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.1.0h 27 Mar 2018\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2018-06-21T03:20:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "263": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3216", "issue_id": "#3216", "issue_summary": "Cannot input quotation marks or backslashes in mitmproxy console", "issue_description": "astiob commented on 21 Jun 2018\nSteps to reproduce the problem:\nLaunch mitmproxy.\nOpen the command console by pressing : or f.\nType: \"foo\" or \"\" or 'foo' or \"\" or \\\\ or \\\" or \\'.\nAs soon as the second quotation mark is typed in, both quotation marks disappear. As soon as the character after the backslash is typed in, the preceding backslash disappears.\nIn particular, this makes it impossible to filter by values that contain quotation marks (as already noted in #1053) or backslashes: you either don\u2019t have the desired characters in the filter, or you have only one quotation mark and it complains that Command error: No closing quotation, or you have a lone backslash and it complains that Command error: No escaped character.\nAny other comments? What have you tried so far?\nI\u2019ve tried to quote the affected characters by doubling them, preceding them with backslashes or enclosing them in other quotation marks, but as you can see, none of this helps.\nSetting the view filter from the command line works, but as soon as you try to edit it interactively afterwards, it gets broken in the same manner.\nSystem information\nMitmproxy: 4.0.1 \nPython:    3.6.5\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Linux-4.4.114-42-default-x86_64-with-SuSE-42.3-x86_64\nThe same thing happened on mitmproxy 3.", "issue_status": "Closed", "issue_reporting_time": "2018-06-20T22:37:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "264": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3215", "issue_id": "#3215", "issue_summary": "Parsing log output", "issue_description": "moonlitSpider commented on 21 Jun 2018\nSteps to reproduce the problem:\nmitmdump --mode reverse:https://172.19.7.40:443 -p 8082 -v -w ./w1.log --rawtcp --tcp-host 172.19.7.40 --ssl-insecure -s ./tcp_message.py > stdout1.log\nAny other comments? What have you tried so far?\nI would like to write a program to parse the output in stdout1.log (the redirected file named above). But I noticed this anomaly (seen here and elsewhere in the log): the initial 'P' as in 'POST' is interrupted by 1 line of output from mitmdump and 1 line from your example script tcp_message.py. The following line continues the 'OST' from 'POST'.\nTo simplify parsing this output, is there a way to prevent this behavior, e.g., flushing log after each write?\nThank you.\nP\n172.20.2.157:60377 -> tcp -> 172.19.7.40:443\n[tcp_message] from client to server:\nOST /sdk HTTP/1.1\\r\\nSOAPAction: urn:vim25/5.5\\r\\nContent-Type: text/xml; charset=utf-8\\r\\nCache-Control: no-cache\\r\\nPragma: no-cache\\r\\nUser-Agent: Java/1.7.0_80\\r\\nHost: 71.100.14.12:8082\\r\\nAccept: text/html, image/gif, image/jpeg, *; q=.2, */*; q=.2\\r\\nConnection: keep-alive\\r\\nContent-Length: 439\\r\\n\\r\\n\n172.20.2.157:60377 -> tcp -> 172.19.7.40:443\nSystem information\nMitmproxy: 4.0.3\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-2.6.32-642.11.1.el6.x86_64-x86_64-with-centos-6.9-Final", "issue_status": "Closed", "issue_reporting_time": "2018-06-20T19:20:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "265": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3214", "issue_id": "#3214", "issue_summary": "SOAP problem?", "issue_description": "paul-bell commented on 20 Jun 2018\nSteps to reproduce the problem:\nmitmdump --mode reverse:https://172.19.7.40:443 -p 8082 -v -w ./vsphere.log --ssl-insecure -s ./pbtest.py > shell.log\nstart the client application (talks to 172.19.7.40) and attempt to register 172.19.7.40. This is done by pointing the client to the IP:PORT where mitmdump (or mitmproxy) is running.\nAny other comments? What have you tried so far?\nThe server at 172.19.7.40:443 is a VMware vSphere server. The client registration of this server involves client use of the vSphere SDK APIs. My understanding is that these APIs talk \"SOAP\".\nThe shell.log file contains this:\nProxy server listening at http://*:8082\n172.20.2.157:51319: clientconnect\n::ffff:172.20.2.157:51319: serverconnect\n  -> ('172.19.7.40', 443)\n::ffff:172.20.2.157:51319: Establish TLS with server\n::ffff:172.20.2.157:51319: Certificate verification error for 172.19.7.40: unable to get local issuer certificate (errno: 20, depth: 0)\n::ffff:172.20.2.157:51319: Ignoring server verification error, continuing with connection\n::ffff:172.20.2.157:51319: ALPN selected by server: -\n::ffff:172.20.2.157:51319: Establish TLS with client\n << Invalid header line: b'SOAPAction\\r\\n'\n::ffff:172.20.2.157:51319: serverdisconnect\n  -> ('172.19.7.40', 443)\n172.20.2.157:51319: HTTP protocol error in client request: Invalid header line: b'SOAPAction\\r\\n'\n172.20.2.157:51319: ProtocolException(\"HTTP protocol error in client request: Invalid header line: b'SOAPAction\\\\r\\\\n'\",)\n172.20.2.157:51319: clientdisconnect\nSystem information\nMitmproxy: 4.0.3\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-2.6.32-642.11.1.el6.x86_64-x86_64-with-centos-6.9-Final\nGrateful for any light you can shed on this.\n-Paul", "issue_status": "Closed", "issue_reporting_time": "2018-06-19T19:56:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "266": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3212", "issue_id": "#3212", "issue_summary": "mitmproxy binary self-corruption (Ubuntu 18.04)", "issue_description": "Sfinx commented on 17 Jun 2018\nSteps to reproduce the problem:\nget the 4.x mitmproxy release from github, untar it to /usr/local/bin\nwork with some traffic\nexit and try to start binary again, you will get:\n[13310] Cannot open self /usr/local/bin/mitmproxy or archive /usr/local/bin/mitmproxy.pkg\nNoticed that file size of corrupted binary have been increased:\n~# l /usr/local/bin/old/mitmproxy \n-rwxr-xr-x 1 2000 2000 22450352 Jun 16 07:51 /usr/local/bin/corrupted_mitmproxy*\n~# l /usr/local/bin/mitmproxy \n-r-xr-xr-x 1 2000 2000 22444880 Jun 16 07:51 /usr/local/bin/mitmproxy*\n1", "issue_status": "Closed", "issue_reporting_time": "2018-06-17T03:56:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "267": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3210", "issue_id": "#3210", "issue_summary": "Gracefully handle ALPN unavailability", "issue_description": "washcroft commented on 16 Jun 2018\nmitmproxy is crashing with the below error, not sure how to resolve since OpenSSL has ALPN support and I have recompiled cryptographgy, pyOpenSSL and mitmproxy from source.\nmitmproxy --version\nMitmproxy: 4.0.3\nPython: 3.6.3\nOpenSSL: OpenSSL 1.0.2l 25 May 2017\nPlatform: Linux-4.9.35-v7+-armv7l-with-debian-8.0\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n10.10.10.101:56144: Traceback (most recent call last):\nFile \"/usr/local/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/server.py\", line 121, in handle\nroot_layer()\nFile \"/usr/local/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in call\nlayer()\nFile \"/usr/local/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/protocol/tls.py\", line 279, in call\nself._establish_tls_with_client_and_server()\nFile \"/usr/local/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/protocol/tls.py\", line 355, in _establish_tls_with_client_and_server\nself._establish_tls_with_server()\nFile \"/usr/local/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/proxy/protocol/tls.py\", line 444, in _establish_tls_with_server\n**args\nFile \"/usr/local/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/connections.py\", line 292, in establish_tls\nself.convert_to_tls(cert=client_cert, sni=sni, **kwargs)\nFile \"/usr/local/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/net/tcp.py\", line 386, in convert_to_tls\n**sslctx_kwargs\nFile \"/usr/local/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/net/tls.py\", line 285, in create_client_context\n**sslctx_kwargs,\nFile \"/usr/local/lib/python3.6/site-packages/mitmproxy-4.0.3-py3.6.egg/mitmproxy/net/tls.py\", line 194, in _create_ssl_context\ncontext.set_alpn_protos(alpn_protos)\nFile \"/usr/local/lib/python3.6/site-packages/pyOpenSSL-18.0.0-py3.6.egg/OpenSSL/SSL.py\", line 650, in explode\nraise NotImplementedError(error)\nNotImplementedError: ALPN not available", "issue_status": "Closed", "issue_reporting_time": "2018-06-16T17:12:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "268": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3209", "issue_id": "#3209", "issue_summary": "4.0.3 socks5 mode sucks [2]", "issue_description": "Sfinx commented on 16 Jun 2018 \u2022\nedited\nSteps to reproduce the problem:\nsetup two socks5 proxies (srelay & mitmproxy) at some amazon server (I've used free tier)\ninstall stock ubuntu tsocks app at your test box\nuse simple /etc/tsocks.conf:\nserver = amazon_server_ip\n# Server type defaults to 4 so we need to specify it as 5 for this one\nserver_type = 5\n# The port defaults to 1080 but I've stated it here for clarity\nserver_port = 8080\nlaunch slrealy proxy at amazon server and check some connection from some external to amazon host test box : tsocks telnet some_host 22\nTrying xxxxx...\nConnected to xxxxxx.\nEscape character is '^]'.\nSSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.4\nAll is working as expected.\nStop srelay, launch mitmproxy as mitmproxy -m socks5 :\ntsocks telnet xxxxx 22\nTrying xxxxx...\ntelnet: Unable to connect to remote host: Transport endpoint is not connected\nStock Ubuntu 16.04.4 LTS at amazon & Ubuntu 18.04 as second box & 4.0.3 mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2018-06-16T13:55:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "269": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3208", "issue_id": "#3208", "issue_summary": "4.0.3 socks5 mode sucks [1]", "issue_description": "Sfinx commented on 16 Jun 2018 \u2022\nedited\nSteps to reproduce the problem:\nsetup two socks5 proxies (srelay & mitmproxy)\ninstall stock ubuntu tsocks app\nuse simple /etc/tsocks.conf:\nserver = srelay_host\n# Server type defaults to 4 so we need to specify it as 5 for this one\nserver_type = 5\n# The port defaults to 1080 but I've stated it here for clarity\nserver_port = 8080\ncheck some connection : tsocks telnet some_host 22\nTrying xxxxx...\nConnected to xxxxxx.\nEscape character is '^]'.\nSSH-2.0-OpenSSH_7.2p2 Ubuntu-4ubuntu2.4\nAll is working as expected.\nThen check the same with mitmproxy -m socks5 :\n# must be at the same NAT network as your test box because of next bug (see second bug report)\nserver = mitmproxy_host\n# Server type defaults to 4 so we need to specify it as 5 for this one\nserver_type = 5\n# The port defaults to 1080 but I've stated it here for clarity\nserver_port = 8080\nTrying xxxx...\nConnected to xxxx.\nEscape character is '^]'.\n\n[Silence here, press Enter twice]\n\nHTTP/1.1 400 Bad Request\nServer: mitmproxy 4.0.3\nConnection: close\nContent-Length: 274\nContent-Type: text/html\n\n<html>\n            <head>\n                <title>400 Bad Request</title>\n            </head>\n            <body>\n            <h1>400 Bad Request</h1>\n            <p>HttpSyntaxException(&quot;Bad HTTP request line: b&#x27;&#x27;&quot;,)</p>\n            </body>\n        </html>HTTP/1.1 502 Bad Gateway\nServer: mitmproxy 4.0.3\nConnection: close\nContent-Length: 311\nContent-Type: text/html\n\n<html>\n            <head>\n                <title>502 Bad Gateway</title>\n            </head>\n            <body>\n            <h1>502 Bad Gateway</h1>\n            <p>ProtocolException(&quot;HTTP protocol error in client request: Bad HTTP request line: b&#x27;&#x27;&quot;,)</p>\n            </body>\n        </html>Connection closed by foreign host.\nStock Ubuntu 18.04 & 4.0.3 mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2018-06-16T13:49:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "270": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3206", "issue_id": "#3206", "issue_summary": "Addon \"done\" event not called in 3.X", "issue_description": "Caligatio commented on 16 Jun 2018\nSteps to reproduce the problem:\nCreate an addon using the \"done\" event\nStart mitmdump or mitmproxy with your addon specified using -s\nExit mitmproxy/mitmdump\nAny other comments? What have you tried so far?\nHere's a test addon that illustrates the problem:\nclass TestAddon():\n    def done(self):\n        print('Hello, World!')\n\naddons = [\n    TestAddon()\n]\nI am forced to use mitmproxy 3.X as we still use Ubuntu Xenial extensively across our infrastructure which uses Python 3.5. The below system dump reflects a VM I spun up to test this in isolation. This problem has been fixed in 4.X but it would be really great if it could be backported to 3.X as this is a killer bug for me (my add-on finalizes an output file in \"done\" and worked great in 2.X).\nSystem information\nMitmproxy: 3.0.4\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.15.0-23-generic-x86_64-with-Ubuntu-18.04-bionic", "issue_status": "Closed", "issue_reporting_time": "2018-06-16T06:24:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "271": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3203", "issue_id": "#3203", "issue_summary": "Unable to replay a https connection when offline - 502 Bad Gateway (Errno 3: Temporary failure in name resolution)", "issue_description": "GuillaumeGETTE commented on 15 Jun 2018\nSteps to reproduce the problem:\nrun \"mitmdump -w test.replay\"\nvisit https://example.com via the proxy\nstop mitmdump & cutoff web connection\nrun mitmdump in replay mode : \"mitmdump -S test.replay\"\ntry to access the same webpage\nI obtain the following error: 502 Bad Gateway (Errno 3: Temporary failure in name resolution)\nAny other comments? What have you tried so far?\nI tried to disable the server_replay_refresh option, didn't solve it.\nWhile replaying, wireshark shows that mitmdump still tries to connect to the remote server (which in my case fails since I'm offline).\nSystem information\nMitmproxy: 4.0.1\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.16.13-2-ARCH-x86_64-with-arch", "issue_status": "Closed", "issue_reporting_time": "2018-06-15T11:50:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "272": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3201", "issue_id": "#3201", "issue_summary": "TlsException(\"(-1, 'Unexpected EOF')\",)", "issue_description": "aznxfrost commented on 12 Jun 2018\nSteps to reproduce the problem:\nRunning mitmdump with just port parameter, while some websites works flawlessly some websites simply doesn't work at all.\n127.0.0.1:59082: clientdisconnect\n127.0.0.1:59086: clientconnect\n127.0.0.1:59086: CONNECT 35.173.95.148:443\n << Cannot establish TLS with client (sni: polka.typekit.com): TlsException(\"(-1, 'Unexpected EOF')\",)\n127.0.0.1:59086: clientdisconnect\n127.0.0.1:59089: clientconnect\n127.0.0.1:59089: CONNECT 34.235.245.109:443\n << Cannot establish TLS with client (sni: tch83795.tch.quora.com): TlsException(\"(-1, 'Unexpected EOF')\",)\n127.0.0.1:59089: clientdisconnect\n127.0.0.1:59097: clientconnect\n127.0.0.1:59097: CONNECT 52.72.185.152:443\n << Cannot establish TLS with client (sni: scss.adobesc.com): TlsException(\"(-1, 'Unexpected EOF')\",)\nSystem information\nMitmproxy: 4.0.1 binary\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-10-10.0.14393", "issue_status": "Closed", "issue_reporting_time": "2018-06-12T15:09:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "273": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3197", "issue_id": "#3197", "issue_summary": "request event is fired 4 times when it is supposed to be fired only once", "issue_description": "P0oOOOo0YA commented on 10 Jun 2018 \u2022\nedited\nI'm trying to learn mitmproxy but there are not many examples on the internet and also on the documentation. Please provide more and more real word examples of using mitmproxy for app development and modifying flows on the fly. It is much appreciated.\nI'm using mitmproxy to mitm between Android sdkmanager and google android repository (dl.google.com). The goal is to add the requested package url to aria2 download manager via a wrapper around aria rpc if the package is not on the hard drive and if it is, feed sdkmanager with the package on the local machine. I have achieved my goal thanks to aria2 and mitmproxy but i noticed something weird on my download session. Every package url is repeated exactly four times.\npseudo code follows\ndef request(a_flow):\n    path = a_flow.request.path\n    if a_flow.request.host == \"dl.google.com\" and not path.endswith(\".xml\"):\n if package_on_the_machine:\n  // redirect the request to local server\n else:\n  // add the package url to aria2\n  a_flow.kill()\n\ndef responseheaders(a_flow):\n    if a_flow.request.host == \"127.0.0.1\":\n     a_flow.response.stream = True", "issue_status": "Closed", "issue_reporting_time": "2018-06-09T22:20:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "274": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3195", "issue_id": "#3195", "issue_summary": "Temporary failure in name resolution", "issue_description": "rajkotraja commented on 8 Jun 2018\nProxy giving this error\n502 Bad Gateway\nProtocolException('Server connection to ('www.oraculous.in', 80) failed: Error connecting to \"www.oraculous.in\": [Errno -3] Temporary failure in name resolution',)", "issue_status": "Closed", "issue_reporting_time": "2018-06-07T21:55:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "275": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3194", "issue_id": "#3194", "issue_summary": "Proxy giving error killed by Global_block", "issue_description": "rajkotraja commented on 8 Jun 2018 \u2022\nedited\nProxy giving error killed by Global_block for all connections, http and https on Ubuntu 18.04", "issue_status": "Closed", "issue_reporting_time": "2018-06-07T20:02:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "276": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3193", "issue_id": "#3193", "issue_summary": "not able to install on ubuntu 16.06", "issue_description": "rajkotraja commented on 8 Jun 2018\ni am getting following error when i try to install mitmproxy on a Ubuntu 16.04 system\nroot@ubuntu-s-1vcpu-1gb-blr1-01:/mitmproxy# . venv/bin/activate\n(venv) root@ubuntu-s-1vcpu-1gb-blr1-01:/mitmproxy# mitmdump --version\nTraceback (most recent call last):\nFile \"/root/mitmproxy/venv/bin/mitmdump\", line 11, in\nload_entry_point('mitmproxy', 'console_scripts', 'mitmdump')()\nFile \"/root/mitmproxy/venv/lib/python3.5/site-packages/pkg_resources/init.py\", line 476, in load_entry_point\nreturn get_distribution(dist).load_entry_point(group, name)\nFile \"/root/mitmproxy/venv/lib/python3.5/site-packages/pkg_resources/init.py\", line 2700, in load_entry_point\nreturn ep.load()\nFile \"/root/mitmproxy/venv/lib/python3.5/site-packages/pkg_resources/init.py\", line 2318, in load\nreturn self.resolve()\nFile \"/root/mitmproxy/venv/lib/python3.5/site-packages/pkg_resources/init.py\", line 2324, in resolve\nmodule = import(self.module_name, fromlist=['name'], level=0)\nFile \"/root/mitmproxy/mitmproxy/tools/main.py\", line 101\nserver: typing.Any = None\n^\nSyntaxError: invalid syntax", "issue_status": "Closed", "issue_reporting_time": "2018-06-07T19:12:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "277": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3192", "issue_id": "#3192", "issue_summary": "What does \"a response with an HTTP error code\" mean?", "issue_description": "wolfogre commented on 7 Jun 2018 \u2022\nedited\nSorry, forget it.", "issue_status": "Closed", "issue_reporting_time": "2018-06-07T09:38:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "278": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3187", "issue_id": "#3187", "issue_summary": "SyntaxError on any mitmproxy/mitmweb command", "issue_description": "hkevicBB commented on 5 Jun 2018\nSteps to reproduce the problem:\nClean installation of both Python and Mitmproxy (and all other dependencies, followed tutorial from https://www.adamengle.com/2016/12/08/raspberry-pi-3-mitmproxy/)\nExecute any of the mitmproxy or mitmweb commands, i.e.:\nmitmproxy --version\nor\nmitmweb -h\nResults in the SyntaxError below.\nAny other comments? What have you tried so far?\nTried to reinstall components, downloading the latest Mitmproxy from the web and manual installation;\nrebooted the system (Raspberry Pi)\nSystem information\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmweb\", line 7, in\nfrom mitmproxy.tools.main import mitmweb\nFile \"/usr/local/lib/python3.5/site-packages/mitmproxy/tools/main.py\", line 101\nserver: typing.Any = None\n^\nSyntaxError: invalid syntax\npi@RaspberryPi:~ $ mitmproxy --version\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 7, in\nfrom mitmproxy.tools.main import mitmproxy\nFile \"/usr/local/lib/python3.5/site-packages/mitmproxy/tools/main.py\", line 101\nserver: typing.Any = None\n^\nSyntaxError: invalid syntax", "issue_status": "Closed", "issue_reporting_time": "2018-06-05T16:20:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "279": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3181", "issue_id": "#3181", "issue_summary": "GitHub Releases -> Snapshot server", "issue_description": "Member\nmhils commented on 31 May 2018\nI've been working on a nicer interface for the snapshot server to streamline our release process: https://www-test.mitmproxy.org/downloads/.\nThere are five user-facing parts that may be affected by this:\nThe mitmproxy.org landing page, which has a big red download button (or brew install instructions for OSX) and a link to \"Other Downloads\".\nThe top menu on mitmproxy.org.\nThe downloads listing at https://www-test.mitmproxy.org/downloads/.\nThe installation docs at https://docs.mitmproxy.org/stable/overview-installation/.\nThe GitHub releases page at https://github.com/mitmproxy/mitmproxy/releases.\nNow, how do we structure this best? Some thoughts:\nThe big red OS-specific button on mitmproxy.org should stay as-is IMHO. The \"Other Downloads\" link currently points to the installation docs. I thought about pointing it to /downloads, but that page in its currently form is missing pointers to Docker, WSL, and pip.\nThe same goes for potentially adding \"Downloads\" to the top menu. I am currently slightly on this as people would go there quickly and miss rather important info on Docker, WSL, and pip.\nCurrently this is just a directory listing with a pointer to the docs. Can we/do we want to do better here and also include pointers to Docker, WSL, pip, ...? That would at least solve the problems with 1 and 2, but now this page would kind of be competing with the docs.\nIf we add the important stuff to mitmproxy.org/downloads, do we even want more elaborate docs on this? I am not sure - I'd also be fine with deemphasizing the /downloads page a bit by only linking to it from here.\nFinally an easy one: We should just redirect to the docs or /downloads here.\n@mitmproxy/devs, thoughts? Please keep in mind that we don't want to make this complicated, getting mitmproxy should be straightforward and we should only point to alternative ways for users that are interested.", "issue_status": "Closed", "issue_reporting_time": "2018-05-31T14:26:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "280": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3180", "issue_id": "#3180", "issue_summary": "proxyauth option breaks flow state access in addons", "issue_description": "Contributor\ndrzax commented on 30 May 2018\nSteps to reproduce the problem:\nCreate test.py addon\nfrom mitmproxy import ctx\nclass AuthTest:\n    def response(self, flow):\n        ctx.log.info('Getting flow state')\n        flow.get_state()\n        ctx.log.info('Got flow state')\n\naddons = [\n    AuthTest()\n]\nStart mitmdump, navigate to example.com and observe the log\nmitmdump -s server/test.py\nLoading script server/test.py\nProxy server listening at http://*:8080\n...\n[::1]:56410: GET http://example.com/\n          << 200 OK 606b\nGetting flow state\nGot flow state\nRe-start mitmdump with proxyauth applied and navigate to example.com again\nmitmdump -s server/test.py --set proxyauth=foo:bar\nLoading script server/test.py\nProxy server listening at http://*:8080\n...\n[::1]:56290: GET http://example.com/\n          << 200 OK 606b\nGetting flow state\nAddon error: Traceback (most recent call last):\n  File \"server/test.py\", line 5, in response\n    flow.get_state()\n  File \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/flow.py\", line 94, in get_state\n    d = super().get_state()\n  File \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/stateobject.py\", line 31, in get_state\n    state[attr] = get_state(cls, val)\n  File \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/stateobject.py\", line 94, in get_state\n    return _process(typeinfo, val, False)\n  File \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/stateobject.py\", line 77, in _process\n    for k, v in val.items()\n  File \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/stateobject.py\", line 77, in <dictcomp>\n    for k, v in val.items()\n  File \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/stateobject.py\", line 81, in _process\n    assert isinstance(val, (int, str, bool, bytes))\nAssertionError\nAny other comments? What have you tried so far?\nThere's a FIXME right near the code that's breaking, but I think it's a red herring. My best guess is that proxy auth adds something to the flow state that isn't in the list of allowed types int, str, bool, bytes\u2014possibly a dict.\nSystem information\nmitmdump --version\nMitmproxy: 4.0.1\nPython:    3.6.5\nOpenSSL:   OpenSSL 1.0.2o  27 Mar 2018\nPlatform:  Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-05-30T07:43:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "281": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3179", "issue_id": "#3179", "issue_summary": "connection not private error on android chrome", "issue_description": "TonyStark commented on 30 May 2018 \u2022\nedited\nSteps to reproduce the problem:\nI have installed certificate using this method on android (#2054 (comment))\nSo before week mitmproxy works fine, google had opened successfully in android chrome browser\nbut today i tried to open google it said your connection is not private\ni also clear user credential, and update mitmproxy v4, reinstalled certificate\nbut still getting error that your connection is not private.\nAny other comments? What have you tried so far?\nRemoved Certificate, reinstalled using adb method\ntried --ssl-insecure not work\nSystem information\nMitmproxy: 4.0.1 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.13.0-43-generic-x86_64-with-debian-stretch-sid\n./mitmdump\n10.42.0.204:53930: CONNECT www.google.co.in:443\n << Cannot establish TLS with client (sni: www.google.co.in): TlsException(\"(-1, 'Unexpected EOF')\",)\n10.42.0.204:53930: clientdisconnect\n10.42.0.204:53931: clientconnect\n10.42.0.204:53932: clientconnect\n10.42.0.204:53931: CONNECT www.google.co.in:443\n << Cannot establish TLS with client (sni: www.google.co.in): TlsException(\"(-1, 'Unexpected EOF')\",)\n10.42.0.204:53931: clientdisconnect\n10.42.0.204:53933: clientconnect\n10.42.0.204:53932: CONNECT www.google.co.in:443\n << Cannot establish TLS with client (sni: www.google.co.in): TlsException(\"(-1, 'Unexpected EOF')\",)\n10.42.0.204:53932: clientdisconnect\n10.42.0.204:53933: CONNECT www.google.co.in:443\n << Cannot establish TLS with client (sni: www.google.co.in): TlsException(\"(-1, 'Unexpected EOF')\",)\n10.42.0.204:53933: clientdisconnect\n10.42.0.204:53934: clientconnect\n10.42.0.204:53934: CONNECT www.google.com:443\n << Cannot establish TLS with client (sni: www.google.com): TlsException(\"(104, 'ECONNRESET')\",)\n10.42.0.204:53934: clientdisconnect\n10.42.0.204:53935: clientconnect\n10.42.0.204:53935: CONNECT clients4.google.com:443\n << Cannot establish TLS with client (sni: clients4.google.com): TlsException(\"(104, 'ECONNRESET')\",)\n10.42.0.204:53935: clientdisconnect\n10.42.0.204:53936: clientconnect\n10.42.0.204:53937: clientconnect\n10.42.0.204:53936: POST http://event.apiv9.com/event.php\n                << 200 OK 33b\n10.42.0.204:53937: CONNECT www.google.com:443\n << Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpected EOF')\",)\n10.42.0.204:53937: clientdisconnect\n10.42.0.204:53936: POST http://event.apiv9.com/event.php\n                << 200 OK 33b", "issue_status": "Closed", "issue_reporting_time": "2018-05-29T21:23:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "282": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3178", "issue_id": "#3178", "issue_summary": "test failure", "issue_description": "ZeroChaos- commented on 30 May 2018\nthis is from testing on Gentoo Linux, I believe all deps are in line and correct but test seem to fail\ntest.examples.test_examples.TestScripts.test_add_header ... ERROR\ntest.examples.test_examples.TestScripts.test_custom_contentviews ... ERROR\ntest.examples.test_examples.TestScripts.test_dns_spoofing ... ERROR\ntest.examples.test_examples.TestScripts.test_iframe_injector ... ERROR\ntest.examples.test_examples.TestScripts.test_modify_form ... ERROR\ntest.examples.test_examples.TestScripts.test_modify_querystring ... ERROR\ntest.examples.test_examples.TestScripts.test_redirect_requests ... ERROR\ntest.examples.test_examples.TestScripts.test_send_reply_from_proxy ... ERROR\ntest.examples.test_har_dump.TestHARDump.test_base64 ... ERROR\ntest.examples.test_har_dump.TestHARDump.test_binary ... ERROR\ntest.examples.test_har_dump.TestHARDump.test_format_cookies ... ERROR\ntest.examples.test_har_dump.TestHARDump.test_simple ... ERROR\ntest.examples.test_xss_scanner.TestXSSScanner.test_data_equals ... ok\ntest.examples.test_xss_scanner.TestXSSScanner.test_find_unclaimed_URLs ... ERROR\ntest.examples.test_xss_scanner.TestXSSScanner.test_get_SQLi_data ... ok\ntest.examples.test_xss_scanner.TestXSSScanner.test_get_XSS_info ... ok\ntest.examples.test_xss_scanner.TestXSSScanner.test_get_cookies ... ok\ntest.examples.test_xss_scanner.TestXSSScanner.test_inside_quote ... ok\ntest.examples.test_xss_scanner.TestXSSScanner.test_log_SQLi_data ... ERROR\ntest.examples.test_xss_scanner.TestXSSScanner.test_log_XSS_data ... ERROR\ntest.examples.test_xss_scanner.TestXSSScanner.test_paths_to_text ... ok\ntest.examples.test_xss_scanner.TestXSSScanner.test_response ... ERROR\ntest.examples.test_xss_scanner.TestXSSScanner.test_test_end_of_url_injection ... ERROR\ntest.examples.test_xss_scanner.TestXSSScanner.test_test_query_injection ... ERROR\ntest.examples.test_xss_scanner.TestXSSScanner.test_test_referer_injection ... ERROR\ntest.examples.test_xss_scanner.TestXSSScanner.test_test_user_agent_injection ... ERROR\ntest.mitmproxy.addons.test_anticache.TestAntiCache.test_simple ... ok\ntest.mitmproxy.addons.test_anticomp.TestAntiComp.test_simple ... ok\ntest.mitmproxy.addons.test_block.test_block_global ... ERROR\ntest.mitmproxy.addons.test_browser.test_browser ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_browser' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.addons.test_browser.test_no_browser ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_no_browser' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.addons.test_check_ca.TestCheckCA.test_check_ca ... ERROR\ntest.mitmproxy.addons.test_clientplayback.TestClientPlayback.test_check ... ok\ntest.mitmproxy.addons.test_clientplayback.TestClientPlayback.test_configure ... ERROR\ntest.mitmproxy.addons.test_clientplayback.TestClientPlayback.test_http2 ... ok\ntest.mitmproxy.addons.test_clientplayback.TestClientPlayback.test_load_file ... ERROR\ntest.mitmproxy.addons.test_clientplayback.TestClientPlayback.test_playback ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestClientPlayback.test_playback' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.addons.test_clientplayback.TestHTTPProxy.test_replay ... ok\ntest.mitmproxy.addons.test_clientplayback.TestHTTPSProxy.test_replay ... ok\ntest.mitmproxy.addons.test_clientplayback.TestUpstreamProxy.test_replay ... ok\ntest.mitmproxy.addons.test_core.test_set ... ok\ntest.mitmproxy.addons.test_core.test_resume ... ok\ntest.mitmproxy.addons.test_core.test_mark ... ok\ntest.mitmproxy.addons.test_core.test_kill ... ok\ntest.mitmproxy.addons.test_core.test_revert ... ok\ntest.mitmproxy.addons.test_core.test_flow_set ... ok\ntest.mitmproxy.addons.test_core.test_encoding ... ok\ntest.mitmproxy.addons.test_core.test_options ... ERROR\ntest.mitmproxy.addons.test_core.test_validation_simple ... ok\ntest.mitmproxy.addons.test_core.test_client_certs ... ERROR\ntest.mitmproxy.addons.test_core.test_validation_modes ... ok\ntest.mitmproxy.addons.test_core.test_validation_no_transparent ... ok\ntest.mitmproxy.addons.test_cut.test_extract ... ERROR\ntest.mitmproxy.addons.test_cut.test_headername ... ok\ntest.mitmproxy.addons.test_cut.test_cut_clip ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_cut_clip' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.addons.test_cut.test_cut_save ... ERROR\ntest.mitmproxy.addons.test_cut.test_cut_save_open ... ERROR\ntest.mitmproxy.addons.test_cut.test_cut ... ok\ntest.mitmproxy.addons.test_disable_h2c.TestDisableH2CleartextUpgrade.test_prior_knowledge ... ok\ntest.mitmproxy.addons.test_disable_h2c.TestDisableH2CleartextUpgrade.test_upgrade ... ok\ntest.mitmproxy.addons.test_dumper.TestContentView.test_contentview ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestContentView.test_contentview' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.addons.test_dumper.test_configure ... ok\ntest.mitmproxy.addons.test_dumper.test_simple ... ok\ntest.mitmproxy.addons.test_dumper.test_echo_body ... ok\ntest.mitmproxy.addons.test_dumper.test_echo_request_line ... ok\ntest.mitmproxy.addons.test_dumper.test_tcp ... ok\ntest.mitmproxy.addons.test_dumper.test_websocket ... ok\ntest.mitmproxy.addons.test_eventstore.test_simple ... ok\ntest.mitmproxy.addons.test_eventstore.test_max_size ... ok\ntest.mitmproxy.addons.test_export.TestExportCurlCommand.test_get ... ERROR\ntest.mitmproxy.addons.test_export.TestExportCurlCommand.test_patch ... ERROR\ntest.mitmproxy.addons.test_export.TestExportCurlCommand.test_post ... ERROR\ntest.mitmproxy.addons.test_export.TestExportCurlCommand.test_tcp ... ERROR\ntest.mitmproxy.addons.test_export.TestExportHttpieCommand.test_get ... ERROR\ntest.mitmproxy.addons.test_export.TestExportHttpieCommand.test_patch ... ERROR\ntest.mitmproxy.addons.test_export.TestExportHttpieCommand.test_post ... ERROR\ntest.mitmproxy.addons.test_export.TestExportHttpieCommand.test_tcp ... ERROR\ntest.mitmproxy.addons.test_export.TestRaw.test_get ... ERROR\ntest.mitmproxy.addons.test_export.TestRaw.test_tcp ... ERROR\ntest.mitmproxy.addons.test_export.test_export ... ERROR\ntest.mitmproxy.addons.test_export.test_export_open ... ERROR\ntest.mitmproxy.addons.test_export.test_clip ... ERROR\ntest.mitmproxy.addons.test_intercept.test_simple ... ok\ntest.mitmproxy.addons.test_keepserving.test_keepserving ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_keepserving' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.addons.test_onboarding.TestApp.test_basic ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestApp.test_basic' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.addons.test_onboarding.TestApp.test_cert ... ERROR\ntest.mitmproxy.addons.test_onboarding.TestApp.test_head ... ERROR\ntest.mitmproxy.addons.test_proxyauth.TestMkauth.test_mkauth ... ERROR\ntest.mitmproxy.addons.test_proxyauth.TestMkauth.test_mkauth_scheme ... ok\ntest.mitmproxy.addons.test_proxyauth.TestParseHttpBasicAuth.test_parse_http_basic_auth ... ok\ntest.mitmproxy.addons.test_proxyauth.TestParseHttpBasicAuth.test_parse_http_basic_auth_error ... ERROR\ntest.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_auth_required_response ... ERROR\ntest.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_authenticate ... ok\ntest.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_check ... ERROR\ntest.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_configure ... ERROR\ntest.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_handlers ... ok\ntest.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_is_proxy_auth ... ERROR\ntest.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_which_auth_header ... ERROR\nFailure: ModuleNotFoundError (No module named 'asynctest') ... ERROR\ntest.mitmproxy.addons.test_replace.TestReplace.test_configure ... ok\ntest.mitmproxy.addons.test_replace.TestReplace.test_order ... ok\ntest.mitmproxy.addons.test_replace.TestReplace.test_parse_hook ... ok\ntest.mitmproxy.addons.test_replace.TestReplace.test_simple ... ok\ntest.mitmproxy.addons.test_replace.TestReplaceFile.test_nonexistent ... ERROR\ntest.mitmproxy.addons.test_replace.TestReplaceFile.test_simple ... ERROR\ntest.mitmproxy.addons.test_save.test_configure ... ERROR\ntest.mitmproxy.addons.test_save.test_tcp ... ERROR\ntest.mitmproxy.addons.test_save.test_websocket ... ERROR\ntest.mitmproxy.addons.test_save.test_save_command ... ERROR\ntest.mitmproxy.addons.test_save.test_simple ... ERROR\ntest.mitmproxy.addons.test_script.TestCutTraceback.test_simple ... ok\ntest.mitmproxy.addons.test_script.TestScript.test_addon ... ERROR\ntest.mitmproxy.addons.test_script.TestScript.test_exception ... ERROR\ntest.mitmproxy.addons.test_script.TestScript.test_notfound ... ok\nTest that a script specified as '\"foo.py\"' works to support the calling convention of ... ERROR\ntest.mitmproxy.addons.test_script.TestScript.test_reload ... ERROR\ntest.mitmproxy.addons.test_script.TestScript.test_simple ... ERROR\ntest.mitmproxy.addons.test_script.TestScriptLoader.test_dupes ... ok\ntest.mitmproxy.addons.test_script.TestScriptLoader.test_order ... ERROR\ntest.mitmproxy.addons.test_script.TestScriptLoader.test_script_deletion ... ERROR\ntest.mitmproxy.addons.test_script.TestScriptLoader.test_script_error_handler ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestScriptLoader.test_script_error_handler' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.addons.test_script.TestScriptLoader.test_script_run ... ERROR\ntest.mitmproxy.addons.test_script.TestScriptLoader.test_script_run_nonexistent ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestScriptLoader.test_script_run_nonexistent' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.addons.test_script.TestScriptLoader.test_simple ... ERROR\ntest.mitmproxy.addons.test_script.test_load_script ... ERROR\nTest that loading two scripts at locations a/foo.py and b/foo.py works. ... ERROR\ntest.mitmproxy.addons.test_serverplayback.test_load_file ... ERROR\ntest.mitmproxy.addons.test_serverplayback.test_config ... ERROR\ntest.mitmproxy.addons.test_serverplayback.test_server_playback ... ok\ntest.mitmproxy.addons.test_serverplayback.test_ignore_host ... ok\ntest.mitmproxy.addons.test_serverplayback.test_ignore_content ... ok\ntest.mitmproxy.addons.test_serverplayback.test_ignore_content_wins_over_params ... ok\ntest.mitmproxy.addons.test_serverplayback.test_ignore_payload_params_other_content_type ... ok\ntest.mitmproxy.addons.test_serverplayback.test_hash ... ok\ntest.mitmproxy.addons.test_serverplayback.test_headers ... ok\ntest.mitmproxy.addons.test_serverplayback.test_load ... ok\ntest.mitmproxy.addons.test_serverplayback.test_load_with_server_replay_nopop ... ok\ntest.mitmproxy.addons.test_serverplayback.test_ignore_params ... ok\ntest.mitmproxy.addons.test_serverplayback.test_ignore_payload_params ... ok\ntest.mitmproxy.addons.test_serverplayback.test_server_playback_full ... ok\ntest.mitmproxy.addons.test_serverplayback.test_server_playback_kill ... ok\ntest.mitmproxy.addons.test_setheaders.TestSetHeaders.test_configure ... ok\ntest.mitmproxy.addons.test_setheaders.TestSetHeaders.test_parse_setheaders ... ok\ntest.mitmproxy.addons.test_setheaders.TestSetHeaders.test_setheaders ... ok\ntest.mitmproxy.addons.test_stickyauth.test_configure ... ok\ntest.mitmproxy.addons.test_stickyauth.test_simple ... ok\ntest.mitmproxy.addons.test_stickycookie.TestStickyCookie.test_config ... ok\ntest.mitmproxy.addons.test_stickycookie.TestStickyCookie.test_request ... ok\ntest.mitmproxy.addons.test_stickycookie.TestStickyCookie.test_response ... ok\ntest.mitmproxy.addons.test_stickycookie.TestStickyCookie.test_response_delete ... ok\ntest.mitmproxy.addons.test_stickycookie.TestStickyCookie.test_response_multiple ... ok\ntest.mitmproxy.addons.test_stickycookie.TestStickyCookie.test_response_overwrite ... ok\ntest.mitmproxy.addons.test_stickycookie.TestStickyCookie.test_response_weird ... ok\ntest.mitmproxy.addons.test_stickycookie.TestStickyCookie.test_simple ... ok\ntest.mitmproxy.addons.test_stickycookie.test_domain_match ... ok\ntest.mitmproxy.addons.test_streambodies.test_simple ... ok\ntest.mitmproxy.addons.test_termlog.TestTermLog.test_output ... ERROR\ntest.mitmproxy.addons.test_termstatus.test_configure ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_configure' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.addons.test_upstream_auth.test_configure ... ok\ntest.mitmproxy.addons.test_upstream_auth.test_simple ... ok\ntest.mitmproxy.addons.test_view.test_order_refresh ... ok\ntest.mitmproxy.addons.test_view.test_order_generators ... ok\ntest.mitmproxy.addons.test_view.test_simple ... ok\ntest.mitmproxy.addons.test_view.test_filter ... ok\ntest.mitmproxy.addons.test_view.test_create ... ok\ntest.mitmproxy.addons.test_view.test_orders ... ok\ntest.mitmproxy.addons.test_view.test_load ... ERROR\ntest.mitmproxy.addons.test_view.test_resolve ... ok\ntest.mitmproxy.addons.test_view.test_movement ... ok\ntest.mitmproxy.addons.test_view.test_duplicate ... ok\ntest.mitmproxy.addons.test_view.test_remove ... ok\ntest.mitmproxy.addons.test_view.test_setgetval ... ok\ntest.mitmproxy.addons.test_view.test_order ... ok\ntest.mitmproxy.addons.test_view.test_reversed ... ok\ntest.mitmproxy.addons.test_view.test_update ... ok\ntest.mitmproxy.addons.test_view.test_signals ... ok\ntest.mitmproxy.addons.test_view.test_focus_follow ... ok\ntest.mitmproxy.addons.test_view.test_focus ... ok\ntest.mitmproxy.addons.test_view.test_settings ... ok\ntest.mitmproxy.addons.test_view.test_configure ... ok\ntest.mitmproxy.addons.test_wsgiapp.TestApp.test_app_err ... ok\ntest.mitmproxy.addons.test_wsgiapp.TestApp.test_simple ... ok\ntest.mitmproxy.contentviews.image.test_image_parser.test_parse_png ... ERROR\ntest.mitmproxy.contentviews.image.test_image_parser.test_parse_gif ... ERROR\ntest.mitmproxy.contentviews.image.test_image_parser.test_parse_jpeg ... ERROR\ntest.mitmproxy.contentviews.image.test_image_parser.test_ico ... ERROR\ntest.mitmproxy.contentviews.image.test_view.test_view_image ... ERROR\ntest.mitmproxy.contentviews.test_api.test_add_remove ... ok\ntest.mitmproxy.contentviews.test_api.test_get_content_view ... ok\ntest.mitmproxy.contentviews.test_api.test_get_message_content_view ... ok\ntest.mitmproxy.contentviews.test_auto.test_view_auto ... ok\ntest.mitmproxy.contentviews.test_base.test_format_dict ... ok\ntest.mitmproxy.contentviews.test_css.test_beautify ... ERROR\ntest.mitmproxy.contentviews.test_css.test_simple ... ok\ntest.mitmproxy.contentviews.test_hex.test_view_hex ... ok\ntest.mitmproxy.contentviews.test_javascript.test_view_javascript ... ok\ntest.mitmproxy.contentviews.test_javascript.test_format_xml ... ERROR\ntest.mitmproxy.contentviews.test_json.test_pretty_json ... ok\ntest.mitmproxy.contentviews.test_json.test_view_json ... ok\ntest.mitmproxy.contentviews.test_multipart.test_view_multipart ... ok\ntest.mitmproxy.contentviews.test_protobuf.test_view_protobuf_request ... ERROR\ntest.mitmproxy.contentviews.test_protobuf.test_format_pbuf ... ERROR\ntest.mitmproxy.contentviews.test_query.test_view_query ... ok\ntest.mitmproxy.contentviews.test_raw.test_view_raw ... ok\ntest.mitmproxy.contentviews.test_urlencoded.test_view_urlencoded ... ok\ntest.mitmproxy.contentviews.test_wbxml.test_wbxml ... ERROR\ntest.mitmproxy.contentviews.test_xml_html.test_simple ... ERROR\ntest.mitmproxy.contentviews.test_xml_html.test_format_xml ... ERROR\ntest.mitmproxy.coretypes.test_basethread.test_basethread ... ok\ntest.mitmproxy.coretypes.test_bidi.test_bidi ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_add ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_delitem ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_eq ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_get_all ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_getitem ... ok\nIf a class defines mutable objects and implements an __eq__() method, ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_init ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_insert ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_items ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_iter ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_keys ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_len ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_repr ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_set_all ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_setitem ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_state ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDict.test_values ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDictView.test_copy ... ok\ntest.mitmproxy.coretypes.test_multidict.TestMultiDictView.test_modify ... ok\ntest.mitmproxy.coretypes.test_serializable.TestSerializable.test_copy ... ok\ntest.mitmproxy.coretypes.test_serializable.TestSerializable.test_copy_id ... ok\ntest.mitmproxy.net.http.http1.test_assemble.test_assemble_request ... ok\ntest.mitmproxy.net.http.http1.test_assemble.test_assemble_request_head ... ok\ntest.mitmproxy.net.http.http1.test_assemble.test_assemble_response ... ok\ntest.mitmproxy.net.http.http1.test_assemble.test_assemble_response_head ... ok\ntest.mitmproxy.net.http.http1.test_assemble.test_assemble_body ... ok\ntest.mitmproxy.net.http.http1.test_assemble.test_assemble_request_line ... ok\ntest.mitmproxy.net.http.http1.test_assemble.test_assemble_request_headers ... ok\ntest.mitmproxy.net.http.http1.test_assemble.test_assemble_request_headers_host_header ... ok\ntest.mitmproxy.net.http.http1.test_assemble.test_assemble_response_headers ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadBody.test_chunked ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadBody.test_known_size ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadBody.test_known_size_limit ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadBody.test_known_size_too_short ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadBody.test_max_chunk_size ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadBody.test_unknown_size ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadBody.test_unknown_size_limit ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadHeaders.test_read_continued ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadHeaders.test_read_continued_err ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadHeaders.test_read_empty_name ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadHeaders.test_read_empty_value ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadHeaders.test_read_err ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadHeaders.test_read_multi ... ok\ntest.mitmproxy.net.http.http1.test_read.TestReadHeaders.test_read_simple ... ok\ntest.mitmproxy.net.http.http1.test_read.test_get_header_tokens ... ok\ntest.mitmproxy.net.http.http1.test_read.test_read_request ... ERROR\ntest.mitmproxy.net.http.http1.test_read.test_read_request_error ... ERROR\ntest.mitmproxy.net.http.http1.test_read.test_read_request_head ... ok\ntest.mitmproxy.net.http.http1.test_read.test_read_response ... ERROR\ntest.mitmproxy.net.http.http1.test_read.test_read_response_head ... ok\ntest.mitmproxy.net.http.http1.test_read.test_connection_close ... ok\ntest.mitmproxy.net.http.http1.test_read.test_expected_http_body_size ... ok\ntest.mitmproxy.net.http.http1.test_read.test_get_first_line ... ok\ntest.mitmproxy.net.http.http1.test_read.test_read_request_line ... ok\ntest.mitmproxy.net.http.http1.test_read.test_parse_authority_form ... ok\ntest.mitmproxy.net.http.http1.test_read.test_read_response_line ... ok\ntest.mitmproxy.net.http.http1.test_read.test_check_http_version ... ok\ntest.mitmproxy.net.http.http1.test_read.test_read_chunked ... ok\ntest.mitmproxy.net.http.http2.test_framereader.test_read_raw_frame ... ok\ntest.mitmproxy.net.http.http2.test_framereader.test_read_raw_frame_failed ... ok\ntest.mitmproxy.net.http.http2.test_framereader.test_parse_frame ... ok\ntest.mitmproxy.net.http.http2.test_framereader.test_parse_frame_combined ... ok\ntest.mitmproxy.net.http.http2.test_utils.TestHttp2ParseHeaders.test_absolute ... ok\ntest.mitmproxy.net.http.http2.test_utils.TestHttp2ParseHeaders.test_connect ... ok\ntest.mitmproxy.net.http.http2.test_utils.TestHttp2ParseHeaders.test_relative ... ok\ntest.mitmproxy.net.http.http2.test_utils.TestHttp2ParseHeaders.test_without_authority ... ok\ntest.mitmproxy.net.http.http2.test_utils.TestHttp2ParseHeaders.test_without_port ... ERROR\ntest.mitmproxy.net.http.test_cookies.test_read_key ... ok\ntest.mitmproxy.net.http.test_cookies.test_read_quoted_string ... ok\ntest.mitmproxy.net.http.test_cookies.test_read_cookie_pairs ... ok\ntest.mitmproxy.net.http.test_cookies.test_pairs_roundtrips ... ok\ntest.mitmproxy.net.http.test_cookies.test_cookie_roundtrips ... ok\ntest.mitmproxy.net.http.test_cookies.test_parse_set_cookie_pairs ... ok\ntest.mitmproxy.net.http.test_cookies.test_parse_set_cookie_header ... ok\ntest.mitmproxy.net.http.test_cookies.test_refresh_cookie ... ok\ntest.mitmproxy.net.http.test_cookies.test_is_expired ... ok\ntest.mitmproxy.net.http.test_cookies.test_group_cookies ... ok\ntest.mitmproxy.net.http.test_cookies.test_get_expiration_ts ... ok\ntest.mitmproxy.net.http.test_encoding.test_identity ... ERROR\nThis test is for testing byte->byte encoding/decoding ... ERROR\nThis test is for testing byte->str decoding ... ERROR\ntest.mitmproxy.net.http.test_encoding.test_cache ... ok\ntest.mitmproxy.net.http.test_headers.TestHeaders.test_bytes ... ok\ntest.mitmproxy.net.http.test_headers.TestHeaders.test_init ... ok\ntest.mitmproxy.net.http.test_headers.TestHeaders.test_replace_multi ... ok\ntest.mitmproxy.net.http.test_headers.TestHeaders.test_replace_remove_spacer ... ok\ntest.mitmproxy.net.http.test_headers.TestHeaders.test_replace_simple ... ok\ntest.mitmproxy.net.http.test_headers.TestHeaders.test_replace_with_count ... ok\ntest.mitmproxy.net.http.test_headers.TestHeaders.test_set ... ok\ntest.mitmproxy.net.http.test_headers.test_parse_content_type ... ok\ntest.mitmproxy.net.http.test_headers.test_assemble_content_type ... ok\ntest.mitmproxy.net.http.test_message.TestMessage.test_content_length_update ... ok\ntest.mitmproxy.net.http.test_message.TestMessage.test_eq_ne ... ok\ntest.mitmproxy.net.http.test_message.TestMessage.test_headers ... ok\ntest.mitmproxy.net.http.test_message.TestMessage.test_http_version ... ok\ntest.mitmproxy.net.http.test_message.TestMessage.test_init ... ok\ntest.mitmproxy.net.http.test_message.TestMessage.test_replace ... ok\ntest.mitmproxy.net.http.test_message.TestMessage.test_serializable ... ok\ntest.mitmproxy.net.http.test_message.TestMessage.test_timestamp_end ... ok\ntest.mitmproxy.net.http.test_message.TestMessage.test_timestamp_start ... ok\ntest.mitmproxy.net.http.test_message.TestMessageContentEncoding.test_cannot_decode ... ok\ntest.mitmproxy.net.http.test_message.TestMessageContentEncoding.test_cannot_encode ... ok\ntest.mitmproxy.net.http.test_message.TestMessageContentEncoding.test_modify ... ok\ntest.mitmproxy.net.http.test_message.TestMessageContentEncoding.test_none ... ok\ntest.mitmproxy.net.http.test_message.TestMessageContentEncoding.test_simple ... ok\ntest.mitmproxy.net.http.test_message.TestMessageContentEncoding.test_unknown_ce ... ok\ntest.mitmproxy.net.http.test_message.TestMessageContentEncoding.test_update_content_length_header ... ok\ntest.mitmproxy.net.http.test_message.TestMessageContentEncoding.test_utf8_as_ce ... ok\ntest.mitmproxy.net.http.test_message.TestMessageData.test_eq ... ok\ntest.mitmproxy.net.http.test_message.TestMessageData.test_serializable ... ok\ntest.mitmproxy.net.http.test_message.TestMessageText.test_cannot_decode ... ok\ntest.mitmproxy.net.http.test_message.TestMessageText.test_cannot_encode ... ok\ntest.mitmproxy.net.http.test_message.TestMessageText.test_guess_json ... ok\ntest.mitmproxy.net.http.test_message.TestMessageText.test_modify ... ok\ntest.mitmproxy.net.http.test_message.TestMessageText.test_none ... ok\ntest.mitmproxy.net.http.test_message.TestMessageText.test_simple ... ok\ntest.mitmproxy.net.http.test_message.TestMessageText.test_unknown_ce ... ok\ntest.mitmproxy.net.http.test_multipart.test_decode ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_first_line_format ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_get_host_header ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_host ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_host_update_also_updates_header ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_make ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_method ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_modify_host_header ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_path ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_port ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_replace ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_repr ... ok\ntest.mitmproxy.net.http.test_request.TestRequestCore.test_scheme ... ok\ntest.mitmproxy.net.http.test_request.TestRequestData.test_init ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_anticache ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_anticomp ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_constrain_encoding ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_get_cookies_double ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_get_cookies_none ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_get_cookies_single ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_get_cookies_withequalsign ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_get_multipart_form ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_get_path_components ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_get_query ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_get_urlencoded_form ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_pretty_host ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_pretty_url ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_pretty_url_authority ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_pretty_url_options ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_set_cookies ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_set_multipart_form ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_set_path_components ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_set_query ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_set_urlencoded_form ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_url ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_url_authority ... ok\ntest.mitmproxy.net.http.test_request.TestRequestUtils.test_url_options ... ok\ntest.mitmproxy.net.http.test_response.TestResponseCore.test_make ... ok\ntest.mitmproxy.net.http.test_response.TestResponseCore.test_reason ... ok\ntest.mitmproxy.net.http.test_response.TestResponseCore.test_repr ... ok\ntest.mitmproxy.net.http.test_response.TestResponseCore.test_status_code ... ok\ntest.mitmproxy.net.http.test_response.TestResponseData.test_init ... ok\ntest.mitmproxy.net.http.test_response.TestResponseUtils.test_get_cookies_empty ... ok\ntest.mitmproxy.net.http.test_response.TestResponseUtils.test_get_cookies_no_value ... ok\ntest.mitmproxy.net.http.test_response.TestResponseUtils.test_get_cookies_none ... ok\ntest.mitmproxy.net.http.test_response.TestResponseUtils.test_get_cookies_simple ... ok\ntest.mitmproxy.net.http.test_response.TestResponseUtils.test_get_cookies_twocookies ... ok\ntest.mitmproxy.net.http.test_response.TestResponseUtils.test_get_cookies_with_parameters ... ok\ntest.mitmproxy.net.http.test_response.TestResponseUtils.test_refresh ... ok\ntest.mitmproxy.net.http.test_response.TestResponseUtils.test_set_cookies ... ok\ntest.mitmproxy.net.http.test_status_codes.test_simple ... ok\ntest.mitmproxy.net.http.test_url.test_parse ... ok\ntest.mitmproxy.net.http.test_url.test_parse_port_range ... ok\ntest.mitmproxy.net.http.test_url.test_unparse ... ok\nSome HTTP clients don't send trailing equal signs for parameters without assigned value, e.g. they send ... ok\ntest.mitmproxy.net.http.test_url.test_encode ... ok\ntest.mitmproxy.net.http.test_url.test_decode ... ok\ntest.mitmproxy.net.http.test_url.test_quote ... ok\ntest.mitmproxy.net.http.test_url.test_unquote ... ok\ntest.mitmproxy.net.http.test_user_agents.test_get_shortcut ... ok\ntest.mitmproxy.net.websockets.test_frame.TestFrame.test_equality ... ok\ntest.mitmproxy.net.websockets.test_frame.TestFrame.test_human_readable ... ok\ntest.mitmproxy.net.websockets.test_frame.TestFrame.test_roundtrip ... ok\ntest.mitmproxy.net.websockets.test_frame.TestFrame.test_serialization_bijection ... ERROR\ntest.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_automask ... ok\ntest.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_deserialization_length ... ERROR\ntest.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_deserialization_masking ... ERROR\ntest.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_equality ... ok\ntest.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_funky ... ok\ntest.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_human_readable ... ok\ntest.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_roundtrip ... ok\ntest.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_serialization_length ... ERROR\ntest.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_serialization_too_large ... ok\ntest.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_violations ... ok\ntest.mitmproxy.net.websockets.test_masker.TestMasker.test_masker ... ERROR\ntest.mitmproxy.net.websockets.test_utils.TestUtils.test_check_client_version ... ERROR\ntest.mitmproxy.net.websockets.test_utils.TestUtils.test_check_handshake ... ERROR\ntest.mitmproxy.net.websockets.test_utils.TestUtils.test_client_handshake_headers ... ok\ntest.mitmproxy.net.websockets.test_utils.TestUtils.test_create_server_nonce ... ERROR\ntest.mitmproxy.net.websockets.test_utils.TestUtils.test_get_client_key ... ERROR\ntest.mitmproxy.net.websockets.test_utils.TestUtils.test_get_extensions ... ERROR\ntest.mitmproxy.net.websockets.test_utils.TestUtils.test_get_protocol ... ERROR\ntest.mitmproxy.net.websockets.test_utils.TestUtils.test_get_server_accept ... ERROR\ntest.mitmproxy.net.websockets.test_utils.TestUtils.test_server_handshake_headers ... ok\ntest.mitmproxy.net.test_check.test_is_valid_host ... ok\ntest.mitmproxy.net.test_server_spec.test_parse ... ok\ntest.mitmproxy.net.test_server_spec.test_parse_with_mode ... ok\ntest.mitmproxy.net.test_socks.test_client_greeting ... ok\ntest.mitmproxy.net.test_socks.test_client_greeting_assert_socks5 ... ok\ntest.mitmproxy.net.test_socks.test_server_greeting ... ok\ntest.mitmproxy.net.test_socks.test_server_greeting_assert_socks5 ... ok\ntest.mitmproxy.net.test_socks.test_username_password_auth ... ok\ntest.mitmproxy.net.test_socks.test_username_password_auth_assert_ver1 ... ok\ntest.mitmproxy.net.test_socks.test_username_password_auth_response ... ok\ntest.mitmproxy.net.test_socks.test_username_password_auth_response_auth_assert_ver1 ... ok\ntest.mitmproxy.net.test_socks.test_message ... ok\ntest.mitmproxy.net.test_socks.test_message_assert_socks5 ... ok\ntest.mitmproxy.net.test_socks.test_message_ipv4 ... ok\ntest.mitmproxy.net.test_socks.test_message_ipv6 ... ok\ntest.mitmproxy.net.test_socks.test_message_invalid_host ... ok\ntest.mitmproxy.net.test_socks.test_message_invalid_rsv ... ok\ntest.mitmproxy.net.test_socks.test_message_unknown_atyp ... ok\ntest.mitmproxy.net.test_tcp.TestALPNClient.test_alpn ... ERROR\ntest.mitmproxy.net.test_tcp.TestClientCipherListError.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestDHParams.test_dhparams ... ok\ntest.mitmproxy.net.test_tcp.TestDisconnect.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestEcho.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_blocksize ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_first_byte_timestamp_updated_on_read ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_first_byte_timestamp_updated_on_readline ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_limit ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_limitless ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_read_ssl_error ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_read_syscall_ssl_error ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_reader_incomplete_error ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_reader_read_error ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_reader_readline_disconnect ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_readlog ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_reset_timestamps ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_wrap ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_writelog ... ok\ntest.mitmproxy.net.test_tcp.TestFileLike.test_writer_flush_error ... ok\ntest.mitmproxy.net.test_tcp.TestFinishFail.test_disconnect_in_finish ... ok\ntest.mitmproxy.net.test_tcp.TestInvalidTrustFile.test_invalid_trust_file_should_fail ... ERROR\ntest.mitmproxy.net.test_tcp.TestNoSSLNoALPNClient.test_no_ssl_no_alpn ... ok\ntest.mitmproxy.net.test_tcp.TestPeek.test_peek ... ok\ntest.mitmproxy.net.test_tcp.TestPeekSSL.test_peek ... ok\ntest.mitmproxy.net.test_tcp.TestSNI.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestSNI.test_idn ... ok\ntest.mitmproxy.net.test_tcp.TestSSLClientCert.test_clientcert ... ERROR\ntest.mitmproxy.net.test_tcp.TestSSLClientCert.test_clientcert_err ... ERROR\ntest.mitmproxy.net.test_tcp.TestSSLDisconnect.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestSSLHardDisconnect.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestSSLTimeOut.test_timeout_client ... ok\ntest.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWBadHostname.test_mode_none_should_pass_without_sni ... ERROR\ntest.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWBadHostname.test_should_fail ... ERROR\ntest.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWBadHostname.test_should_fail_without_sni ... ERROR\ntest.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWBadServerCert.test_mode_default_should_pass ... ok\ntest.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWBadServerCert.test_mode_none_should_pass ... ok\ntest.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWBadServerCert.test_mode_strict_should_fail ... ERROR\ntest.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWValidCertChain.test_mode_strict_w_confdir_should_pass ... ERROR\ntest.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWValidCertChain.test_mode_strict_w_pemfile_should_pass ... ERROR\ntest.mitmproxy.net.test_tcp.TestSSLv3Only.test_failure ... ok\ntest.mitmproxy.net.test_tcp.TestServer.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestServer.test_thread_start_error ... ok\nTest to bind to a given random port. Try again if the random port turned out to be blocked. ... ok\ntest.mitmproxy.net.test_tcp.TestServerCipherList.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestServerCipherListError.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestServerCurrentCipher.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestServerIPv6.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestServerSSL.test_echo ... ok\ntest.mitmproxy.net.test_tcp.TestServerSSL.test_get_current_cipher ... ok\ntest.mitmproxy.net.test_tcp.TestServerTimeOut.test_timeout ... ok\ntest.mitmproxy.net.test_tcp.TestTCPClient.test_conerr ... ok\ntest.mitmproxy.net.test_tcp.TestTCPClient.test_spoof_address ... ok\ntest.mitmproxy.net.test_tcp.TestTCPClient.test_timeout ... ok\ntest.mitmproxy.net.test_tcp.TestTCPServer.test_binderr ... ok\ntest.mitmproxy.net.test_tcp.TestTCPServer.test_wait_for_silence ... ok\ntest.mitmproxy.net.test_tcp.TestTimeOut.test_timeout ... ok\ntest.mitmproxy.net.test_tls.TestClientHello.test_extensions ... ok\ntest.mitmproxy.net.test_tls.TestClientHello.test_from_file ... ok\ntest.mitmproxy.net.test_tls.TestClientHello.test_no_extensions ... ok\ntest.mitmproxy.net.test_tls.TestMasterSecretLogger.test_create_logfun ... ok\ntest.mitmproxy.net.test_tls.TestMasterSecretLogger.test_log ... ERROR\ntest.mitmproxy.net.test_tls.TestTLSInvalid.test_alpn_error ... ok\ntest.mitmproxy.net.test_tls.TestTLSInvalid.test_invalid_ssl_method_should_fail ... ok\ntest.mitmproxy.net.test_tls.test_is_record_magic ... ok\ntest.mitmproxy.net.test_tls.test_get_client_hello ... ok\ntest.mitmproxy.net.test_wsgi.TestWSGI.test_make_environ ... ok\ntest.mitmproxy.net.test_wsgi.TestWSGI.test_serve ... ok\ntest.mitmproxy.net.test_wsgi.TestWSGI.test_serve_double_err ... ok\ntest.mitmproxy.net.test_wsgi.TestWSGI.test_serve_double_start ... ok\ntest.mitmproxy.net.test_wsgi.TestWSGI.test_serve_empty_body ... ok\ntest.mitmproxy.net.test_wsgi.TestWSGI.test_serve_single_err ... ok\ntest.mitmproxy.platform.test_pf.TestLookup.test_simple ... ERROR\ntest.mitmproxy.proxy.protocol.test_http1.TestExpectHeader.test_simple ... ok\ntest.mitmproxy.proxy.protocol.test_http1.TestHTTPFlow.test_repr ... ok\ntest.mitmproxy.proxy.protocol.test_http1.TestHeadContentLength.test_head_content_length ... ok\ntest.mitmproxy.proxy.protocol.test_http1.TestInvalidRequests.test_double_connect ... ok\ntest.mitmproxy.proxy.protocol.test_http1.TestInvalidRequests.test_relative_request ... ok\ntest.mitmproxy.proxy.protocol.test_http1.TestProxyMisconfiguration.test_absolute_request ... ok\ntest.mitmproxy.proxy.protocol.test_http1.TestStreaming.test_streaming ... ERROR\ntest.mitmproxy.proxy.protocol.test_http2.TestBodySizeLimit.test_body_size_limit ... ok\ntest.mitmproxy.proxy.protocol.test_http2.TestConnectionLost.test_connection_lost ... ok\ntest.mitmproxy.proxy.protocol.test_http2.TestConnectionTerminated.test_connection_terminated ... ok\ntest.mitmproxy.proxy.protocol.test_http2.TestMaxConcurrentStreams.test_max_concurrent_streams ... ok\ntest.mitmproxy.proxy.protocol.test_http2.TestPriority.test_priority ... ERROR\nERROR\ntest.mitmproxy.proxy.protocol.test_http2.TestPushPromise.test_push_promise ... ok\ntest.mitmproxy.proxy.protocol.test_http2.TestPushPromise.test_push_promise_reset ... ok\ntest.mitmproxy.proxy.protocol.test_http2.TestRequestStreaming.test_request_streaming ... ERROR\nERROR\ntest.mitmproxy.proxy.protocol.test_http2.TestRequestWithPriority.test_request_with_priority ... ERROR\nERROR\ntest.mitmproxy.proxy.protocol.test_http2.TestResponseStreaming.test_response_streaming ... ERROR\nERROR\ntest.mitmproxy.proxy.protocol.test_http2.TestSimple.test_simple ... ok\ntest.mitmproxy.proxy.protocol.test_http2.TestStreamResetFromServer.test_request_with_priority ... ok\ntest.mitmproxy.proxy.protocol.test_websocket.TestClose.test_close ... ok\ntest.mitmproxy.proxy.protocol.test_websocket.TestClose.test_close_payload_1 ... ok\ntest.mitmproxy.proxy.protocol.test_websocket.TestClose.test_close_payload_2 ... ok\ntest.mitmproxy.proxy.protocol.test_websocket.TestExtension.test_extension ... ok\ntest.mitmproxy.proxy.protocol.test_websocket.TestInjectMessageClient.test_inject_message_client ... ok\ntest.mitmproxy.proxy.protocol.test_websocket.TestInjectMessageServer.test_inject_message_server ... ok\ntest.mitmproxy.proxy.protocol.test_websocket.TestInvalidFrame.test_invalid_frame ... ok\ntest.mitmproxy.proxy.protocol.test_websocket.TestKillFlow.test_kill ... ok\ntest.mitmproxy.proxy.protocol.test_websocket.TestPing.test_ping ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestPing.test_ping' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.proxy.protocol.test_websocket.TestPong.test_pong ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestPong.test_pong' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.proxy.protocol.test_websocket.TestSimple.test_change_payload ... ok\ntest.mitmproxy.proxy.protocol.test_websocket.TestSimple.test_simple ... ERROR\ntest.mitmproxy.proxy.protocol.test_websocket.TestSimpleTLS.test_simple_tls ... ok\ntest.mitmproxy.proxy.protocol.test_websocket.TestStreaming.test_streaming ... ERROR\ntest.mitmproxy.proxy.test_config.TestProxyConfig.test_invalid_certificate ... ERROR\ntest.mitmproxy.proxy.test_config.TestProxyConfig.test_invalid_confdir ... ok\ntest.mitmproxy.proxy.test_server.TestFakeResponse.test_fake ... ok\ntest.mitmproxy.proxy.test_server.TestHTTP.test_blank_leading_line ... ok\ntest.mitmproxy.proxy.test_server.TestHTTP.test_connection_close ... ok\nIf mitmproxy is a regular HTTP proxy, it must rewrite an absolute-form request like ... ok\ntest.mitmproxy.proxy.test_server.TestHTTP.test_get_connection_switching ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestHTTP.test_get_connection_switching' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.proxy.test_server.TestHTTP.test_http ... ok\ntest.mitmproxy.proxy.test_server.TestHTTP.test_invalid_connect ... ok\ntest.mitmproxy.proxy.test_server.TestHTTP.test_invalid_headers ... ok\ntest.mitmproxy.proxy.test_server.TestHTTP.test_invalid_http ... ok\ntest.mitmproxy.proxy.test_server.TestHTTP.test_large ... ok\ntest.mitmproxy.proxy.test_server.TestHTTP.test_reconnect ... ok\ntest.mitmproxy.proxy.test_server.TestHTTP.test_sni ... ok\ntest.mitmproxy.proxy.test_server.TestHTTP.test_stream_modify ... ERROR\ntest.mitmproxy.proxy.test_server.TestHTTP.test_upstream_ssl_error ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPS.test_clientcert_dir ... ERROR\ntest.mitmproxy.proxy.test_server.TestHTTPS.test_clientcert_file ... ERROR\ntest.mitmproxy.proxy.test_server.TestHTTPS.test_error_post_connect ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPS.test_http ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPS.test_ignore ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPS.test_invalid_http ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPS.test_large ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPS.test_sni ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPS.test_tcp ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPSAddUpstreamCertsToClientChainFalse.test_add_upstream_certs_to_client_chain ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPSAddUpstreamCertsToClientChainTrue.test_add_upstream_certs_to_client_chain ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPSCertfile.test_certfile ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPSCertfile.test_http ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPSCertfile.test_invalid_http ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPSCertfile.test_large ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPSCertfile.test_sni ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPSNoCommonName.test_http ... ok\nCertificate verification should be turned on by default. ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPSUpstreamServerVerificationWBadCert.test_no_verification_w_bad_cert ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPSUpstreamServerVerificationWBadCert.test_verification_w_bad_cert ... ok\ntest.mitmproxy.proxy.test_server.TestHTTPSUpstreamServerVerificationWTrustedCert.test_verification_w_confdir ... ERROR\ntest.mitmproxy.proxy.test_server.TestHTTPSUpstreamServerVerificationWTrustedCert.test_verification_w_pemfile ... ERROR\ntest.mitmproxy.proxy.test_server.TestHttps2Http.test_all ... ok\ntest.mitmproxy.proxy.test_server.TestHttps2Http.test_http ... ok\ntest.mitmproxy.proxy.test_server.TestHttps2Http.test_sni ... ok\ntest.mitmproxy.proxy.test_server.TestIncompleteResponse.test_incomplete ... ok\ntest.mitmproxy.proxy.test_server.TestKillRequest.test_kill ... ok\ntest.mitmproxy.proxy.test_server.TestKillResponse.test_kill ... ok\ntest.mitmproxy.proxy.test_server.TestProxy.test_http ... ok\ntest.mitmproxy.proxy.test_server.TestProxy.test_request_ip ... ok\ntest.mitmproxy.proxy.test_server.TestProxy.test_request_tcp_setup_timestamp_presence ... ok\ntest.mitmproxy.proxy.test_server.TestProxy.test_request_timestamps ... ok\ntest.mitmproxy.proxy.test_server.TestProxy.test_response_timestamps ... ok\nTests proper functionality of ConnectionHandler.server_reconnect mock. ... ok\ntest.mitmproxy.proxy.test_server.TestProxySSL.test_request_tls_attribute_presence ... ok\ntest.mitmproxy.proxy.test_server.TestProxySSL.test_via ... ok\nImagine a single HTTPS connection with three requests: ... ok\ntest.mitmproxy.proxy.test_server.TestReverse.test_host_header ... ok\ntest.mitmproxy.proxy.test_server.TestReverse.test_http ... ok\ntest.mitmproxy.proxy.test_server.TestReverse.test_ignore ... ok\ntest.mitmproxy.proxy.test_server.TestReverse.test_invalid_http ... ok\ntest.mitmproxy.proxy.test_server.TestReverse.test_large ... ok\ntest.mitmproxy.proxy.test_server.TestReverse.test_overridden_host_header ... ok\ntest.mitmproxy.proxy.test_server.TestReverse.test_selfconnection ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestReverse.test_selfconnection' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.proxy.test_server.TestReverse.test_sni ... ok\ntest.mitmproxy.proxy.test_server.TestReverse.test_tcp ... ok\ntest.mitmproxy.proxy.test_server.TestReverseSSL.test_http ... ok\ntest.mitmproxy.proxy.test_server.TestReverseSSL.test_ignore ... ok\ntest.mitmproxy.proxy.test_server.TestReverseSSL.test_invalid_http ... ok\ntest.mitmproxy.proxy.test_server.TestReverseSSL.test_large ... ok\ntest.mitmproxy.proxy.test_server.TestReverseSSL.test_sni ... ok\ntest.mitmproxy.proxy.test_server.TestReverseSSL.test_tcp ... ok\nA replayed/fake response with no upstream_cert should not connect to an upstream server ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestServerConnect.test_unnecessary_serverconnect' was never awaited\n  self.test(*self.arg)\nok\nmitmproxy doesn't support UDP or BIND SOCKS CMDs ... ok\ntest.mitmproxy.proxy.test_server.TestSocks5.test_simple ... ok\ntest.mitmproxy.proxy.test_server.TestSocks5.test_with_authentication ... ok\ntest.mitmproxy.proxy.test_server.TestSocks5.test_with_authentication_only ... ok\ntest.mitmproxy.proxy.test_server.TestSocks5SSL.test_simple ... ok\ntest.mitmproxy.proxy.test_server.TestStreamRequest.test_stream_chunked ... ok\ntest.mitmproxy.proxy.test_server.TestStreamRequest.test_stream_multiple ... ok\ntest.mitmproxy.proxy.test_server.TestStreamRequest.test_stream_simple ... ok\ntest.mitmproxy.proxy.test_server.TestTransparent.test_http ... ok\ntest.mitmproxy.proxy.test_server.TestTransparent.test_ignore ... ok\ntest.mitmproxy.proxy.test_server.TestTransparent.test_invalid_http ... ok\ntest.mitmproxy.proxy.test_server.TestTransparent.test_large ... ok\ntest.mitmproxy.proxy.test_server.TestTransparent.test_sni ... ok\ntest.mitmproxy.proxy.test_server.TestTransparent.test_tcp ... ok\ntest.mitmproxy.proxy.test_server.TestTransparent.test_tcp_stream_modify ... ERROR\ntest.mitmproxy.proxy.test_server.TestTransparentResolveError.test_resolve_error ... ok\ntest.mitmproxy.proxy.test_server.TestTransparentSSL.test_http ... ok\ntest.mitmproxy.proxy.test_server.TestTransparentSSL.test_ignore ... ok\ntest.mitmproxy.proxy.test_server.TestTransparentSSL.test_invalid_http ... ok\ntest.mitmproxy.proxy.test_server.TestTransparentSSL.test_large ... ok\ntest.mitmproxy.proxy.test_server.TestTransparentSSL.test_sni ... ok\ntest.mitmproxy.proxy.test_server.TestTransparentSSL.test_sslerr ... ok\ntest.mitmproxy.proxy.test_server.TestTransparentSSL.test_tcp ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxy.test_http ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxy.test_invalid_http ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxy.test_large ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxy.test_sni ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxySSL.test_change_upstream_proxy_connect ... ok\nhttps://github.com/mitmproxy/mitmproxy/issues/2329 ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxySSL.test_http ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxySSL.test_ignore ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxySSL.test_invalid_http ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxySSL.test_large ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxySSL.test_simple ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxySSL.test_sni ... ok\ntest.mitmproxy.proxy.test_server.TestUpstreamProxySSL.test_tcp ... ok\ntest.mitmproxy.script.test_concurrent.TestConcurrent.test_concurrent ... ERROR\ntest.mitmproxy.script.test_concurrent.TestConcurrent.test_concurrent_class ... ERROR\ntest.mitmproxy.script.test_concurrent.TestConcurrent.test_concurrent_err ... ERROR\ntest.mitmproxy.tools.console.test_commander.TestCommandBuffer.test_backspace ... ok\ntest.mitmproxy.tools.console.test_commander.TestCommandBuffer.test_cycle_completion ... ok\ntest.mitmproxy.tools.console.test_commander.TestCommandBuffer.test_flatten ... ok\ntest.mitmproxy.tools.console.test_commander.TestCommandBuffer.test_insert ... ok\ntest.mitmproxy.tools.console.test_commander.TestCommandBuffer.test_left ... ok\ntest.mitmproxy.tools.console.test_commander.TestCommandBuffer.test_render ... ok\ntest.mitmproxy.tools.console.test_commander.TestCommandBuffer.test_right ... ok\ntest.mitmproxy.tools.console.test_commander.TestListCompleter.test_cycle ... ok\ntest.mitmproxy.tools.console.test_common.test_format_flow ... ok\ntest.mitmproxy.tools.console.test_common.test_format_keyvals ... ok\ntest.mitmproxy.tools.console.test_defaultkeys.test_commands_exist ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_commands_exist' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.tools.console.test_keymap.test_binding ... ok\ntest.mitmproxy.tools.console.test_keymap.test_bind ... ok\ntest.mitmproxy.tools.console.test_keymap.test_join ... ok\ntest.mitmproxy.tools.console.test_keymap.test_remove ... ok\ntest.mitmproxy.tools.console.test_keymap.test_load_path ... ERROR\ntest.mitmproxy.tools.console.test_keymap.test_parse ... ok\ntest.mitmproxy.tools.console.test_master.TestMaster.test_basic ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestMaster.test_basic' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.tools.console.test_palettes.TestPalette.test_helptext ... ok\ntest.mitmproxy.tools.console.test_statusbar.test_statusbar ... ERROR\ntest.mitmproxy.tools.console.test_statusbar.test_shorten_message ... ERROR\ntest.mitmproxy.tools.console.test_statusbar.test_shorten_message_narrow ... ok\ntest_clear (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_err (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_events (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_filter_help (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_flow_content (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_flow_content_view (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_flow_delete (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_flow_duplicate (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_flow_replay (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_flow_revert (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_flow_update (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_flows (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_flows_dump (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_index (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_kill (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_option_save (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_option_update (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_options (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_resume (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_settings (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_settings_update (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_update_flow_content (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_update_flow_content_multipart (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest_websocket (test.mitmproxy.tools.web.test_app.TestApp) ... ok\ntest.mitmproxy.tools.web.test_master.TestWebMaster.test_basic ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestWebMaster.test_basic' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.tools.web.test_static_viewer.test_save_static ... ERROR\ntest.mitmproxy.tools.web.test_static_viewer.test_save_filter_help ... ERROR\ntest.mitmproxy.tools.web.test_static_viewer.test_save_settings ... ERROR\ntest.mitmproxy.tools.web.test_static_viewer.test_save_flows ... ERROR\ntest.mitmproxy.tools.web.test_static_viewer.test_static_viewer ... ERROR\ntest.mitmproxy.tools.web.test_static_viewer.test_save_flows_content ... ERROR\ntest.mitmproxy.tools.test_cmdline.test_common ... ok\ntest.mitmproxy.tools.test_cmdline.test_mitmproxy ... ok\ntest.mitmproxy.tools.test_cmdline.test_mitmdump ... ok\ntest.mitmproxy.tools.test_cmdline.test_mitmweb ... ok\ntest.mitmproxy.tools.test_dump.TestDumpMaster.test_addons_dumper ... ERROR\ntest.mitmproxy.tools.test_dump.TestDumpMaster.test_addons_termlog ... ERROR\ntest.mitmproxy.tools.test_dump.TestDumpMaster.test_has_error ... ok\ntest.mitmproxy.tools.test_main.test_mitmweb ... ERROR\ntest.mitmproxy.tools.test_main.test_mitmdump ... ERROR\ntest.mitmproxy.utils.test_arg_check.test_check_args ... ERROR\ntest.mitmproxy.utils.test_data.test_pkg_data ... ok\ntest.mitmproxy.utils.test_debug.test_dump_system_info_precompiled ... ERROR\ntest.mitmproxy.utils.test_debug.test_dump_info ... ok\ntest.mitmproxy.utils.test_debug.test_dump_stacks ... ok\ntest.mitmproxy.utils.test_debug.test_register_info_dumpers ... ok\ntest.mitmproxy.utils.test_human.test_format_timestamp ... ok\ntest.mitmproxy.utils.test_human.test_format_timestamp_with_milli ... ok\ntest.mitmproxy.utils.test_human.test_parse_size ... ok\ntest.mitmproxy.utils.test_human.test_pretty_size ... ok\ntest.mitmproxy.utils.test_human.test_pretty_duration ... ok\ntest.mitmproxy.utils.test_human.test_format_address ... ok\ntest.mitmproxy.utils.test_sliding_window.test_simple ... ok\ntest.mitmproxy.utils.test_sliding_window.test_is_lazy ... ok\ntest.mitmproxy.utils.test_strutils.test_always_bytes ... ok\ntest.mitmproxy.utils.test_strutils.test_always_str ... ok\ntest.mitmproxy.utils.test_strutils.test_escape_control_characters ... ok\ntest.mitmproxy.utils.test_strutils.test_bytes_to_escaped_str ... ok\ntest.mitmproxy.utils.test_strutils.test_escaped_str_to_bytes ... ok\ntest.mitmproxy.utils.test_strutils.test_is_mostly_bin ... ok\ntest.mitmproxy.utils.test_strutils.test_is_xml ... ok\ntest.mitmproxy.utils.test_strutils.test_clean_hanging_newline ... ok\ntest.mitmproxy.utils.test_strutils.test_hexdump ... ok\ntest.mitmproxy.utils.test_strutils.test_split_special_areas ... ok\ntest.mitmproxy.utils.test_strutils.test_escape_special_areas ... ok\ntest.mitmproxy.utils.test_typecheck.test_check_option_type ... ok\ntest.mitmproxy.utils.test_typecheck.test_check_union ... ok\ntest.mitmproxy.utils.test_typecheck.test_check_tuple ... ok\ntest.mitmproxy.utils.test_typecheck.test_check_sequence ... ok\ntest.mitmproxy.utils.test_typecheck.test_check_io ... ok\ntest.mitmproxy.utils.test_typecheck.test_check_any ... ok\ntest.mitmproxy.utils.test_typecheck.test_typesec_to_str ... ok\ntest.mitmproxy.utils.test_typecheck.test_mapping_types ... ok\ntest.mitmproxy.test_addonmanager.test_command ... ok\ntest.mitmproxy.test_addonmanager.test_halt ... ok\ntest.mitmproxy.test_addonmanager.test_lifecycle ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_lifecycle' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.test_addonmanager.test_defaults ... ok\ntest.mitmproxy.test_addonmanager.test_loader ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_loader' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.test_addonmanager.test_simple ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_simple' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.test_addonmanager.test_load_option ... ok\ntest.mitmproxy.test_addonmanager.test_nesting ... ok\ntest.mitmproxy.test_certs.TestCert.test_der ... ERROR\ntest.mitmproxy.test_certs.TestCert.test_err_broken_sans ... ERROR\ntest.mitmproxy.test_certs.TestCert.test_simple ... ERROR\ntest.mitmproxy.test_certs.TestCert.test_state ... ERROR\ntest.mitmproxy.test_certs.TestCertStore.test_create_dhparams ... ERROR\ntest.mitmproxy.test_certs.TestCertStore.test_create_explicit ... ERROR\ntest.mitmproxy.test_certs.TestCertStore.test_create_no_common_name ... ERROR\ntest.mitmproxy.test_certs.TestCertStore.test_create_tmp ... ERROR\ntest.mitmproxy.test_certs.TestCertStore.test_expire ... ERROR\ntest.mitmproxy.test_certs.TestCertStore.test_overrides ... ERROR\ntest.mitmproxy.test_certs.TestCertStore.test_sans ... ERROR\ntest.mitmproxy.test_certs.TestCertStore.test_sans_change ... ERROR\ntest.mitmproxy.test_certs.TestDummyCert.test_with_ca ... ERROR\ntest.mitmproxy.test_command.TestCommand.test_call ... ok\ntest.mitmproxy.test_command.TestCommand.test_parse_partial ... ok\ntest.mitmproxy.test_command.TestCommand.test_typecheck ... ok\ntest.mitmproxy.test_command.TestCommand.test_varargs ... ok\ntest.mitmproxy.test_command.test_simple ... ok\ntest.mitmproxy.test_command.test_typename ... ok\ntest.mitmproxy.test_command.test_parsearg ... ok\nThis tests for the error thrown by hasattr() ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_collect_commands' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.test_command.test_decorator ... ok\ntest.mitmproxy.test_command.test_verify_arg_signature ... ok\ntest.mitmproxy.test_connections.TestClientConnection.test_eq ... ok\ntest.mitmproxy.test_connections.TestClientConnection.test_make_dummy ... ok\ntest.mitmproxy.test_connections.TestClientConnection.test_repr ... ok\ntest.mitmproxy.test_connections.TestClientConnection.test_send ... ok\ntest.mitmproxy.test_connections.TestClientConnection.test_state ... ok\ntest.mitmproxy.test_connections.TestClientConnection.test_tls_established_property ... ok\ntest.mitmproxy.test_connections.TestClientConnectionTLS.test_tls_with_sni ... ERROR\ntest.mitmproxy.test_connections.TestServerConnection.test_eq ... ok\ntest.mitmproxy.test_connections.TestServerConnection.test_make_dummy ... ok\ntest.mitmproxy.test_connections.TestServerConnection.test_repr ... ok\ntest.mitmproxy.test_connections.TestServerConnection.test_send ... ok\ntest.mitmproxy.test_connections.TestServerConnection.test_simple ... ok\ntest.mitmproxy.test_connections.TestServerConnection.test_sni ... ok\ntest.mitmproxy.test_connections.TestServerConnection.test_state ... ok\ntest.mitmproxy.test_connections.TestServerConnection.test_terminate_error ... ok\ntest.mitmproxy.test_connections.TestServerConnection.test_tls_established_property ... ok\ntest.mitmproxy.test_connections.TestServerConnectionTLS.test_tls ... ERROR\ntest.mitmproxy.test_controller.TestDummyReply.test_del ... ok\ntest.mitmproxy.test_controller.TestDummyReply.test_reset ... ok\ntest.mitmproxy.test_controller.TestDummyReply.test_simple ... ok\ntest.mitmproxy.test_controller.TestReply.test_ack ... ok\ntest.mitmproxy.test_controller.TestReply.test_commit_no_reply ... ok\ntest.mitmproxy.test_controller.TestReply.test_del ... ok\ntest.mitmproxy.test_controller.TestReply.test_double_send ... ok\ntest.mitmproxy.test_controller.TestReply.test_kill ... ok\ntest.mitmproxy.test_controller.TestReply.test_reply_none ... ok\ntest.mitmproxy.test_controller.TestReply.test_simple ... ok\ntest.mitmproxy.test_controller.TestReply.test_state_transitions ... ok\ntest.mitmproxy.test_controller.test_master ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_master' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.test_eventsequence.test_http_flow ... ERROR\ntest.mitmproxy.test_eventsequence.test_websocket_flow ... ERROR\ntest.mitmproxy.test_eventsequence.test_tcp_flow ... ERROR\ntest.mitmproxy.test_eventsequence.test_invalid ... ok\ntest.mitmproxy.test_flow.TestError.test_getset_state ... ok\ntest.mitmproxy.test_flow.TestError.test_repr ... ok\ntest.mitmproxy.test_flow.TestFlowMaster.test_all ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestFlowMaster.test_all' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.test_flow.TestFlowMaster.test_load_http_flow_reverse ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestFlowMaster.test_load_http_flow_reverse' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.test_flow.TestFlowMaster.test_load_websocket_flow ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'TestFlowMaster.test_load_websocket_flow' was never awaited\n  self.test(*self.arg)\nok\n_backup may be shared across instances. That should not raise errors. ... ok\ntest.mitmproxy.test_flow.TestSerialize.test_error ... ok\ntest.mitmproxy.test_flow.TestSerialize.test_filter ... ok\ntest.mitmproxy.test_flow.TestSerialize.test_roundtrip ... ok\ntest.mitmproxy.test_flow.TestSerialize.test_versioncheck ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingDummyFlow.test_filters ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_and ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_asset ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_body ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_code ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_domain ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_dst ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_fcontenttype ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_ferr ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_fmarked ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_freq_fresp ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_head ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_http ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_method ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_not ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_or ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_src ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingHTTPFlow.test_url ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_and ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_body ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_code ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_content_type ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_domain ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_dst ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_ferr ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_headers ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_method ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_not ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_or ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_request ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_response ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_src ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_tcp ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingTCPFlow.test_url ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingWebSocketFlow.test_and ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingWebSocketFlow.test_body ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingWebSocketFlow.test_domain ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingWebSocketFlow.test_dst ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingWebSocketFlow.test_ferr ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingWebSocketFlow.test_not ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingWebSocketFlow.test_or ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingWebSocketFlow.test_src ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingWebSocketFlow.test_url ... ok\ntest.mitmproxy.test_flowfilter.TestMatchingWebSocketFlow.test_websocket ... ok\ntest.mitmproxy.test_flowfilter.TestParsing.test_binaryops ... ok\ntest.mitmproxy.test_flowfilter.TestParsing.test_naked_url ... ok\ntest.mitmproxy.test_flowfilter.TestParsing.test_nesting ... ok\ntest.mitmproxy.test_flowfilter.TestParsing.test_not ... ok\ntest.mitmproxy.test_flowfilter.TestParsing.test_parse_err ... ok\ntest.mitmproxy.test_flowfilter.TestParsing.test_quoting ... ok\ntest.mitmproxy.test_flowfilter.TestParsing.test_simple ... ok\ntest.mitmproxy.test_flowfilter.TestParsing.test_wideops ... ok\ntest.mitmproxy.test_flowfilter.test_match ... ok\nhttps://github.com/mitmproxy/mitmproxy/issues/1087 ... ok\ntest.mitmproxy.test_fuzzing.TestFuzzy.test_idna_err ... ok\ntest.mitmproxy.test_fuzzing.TestFuzzy.test_invalid_ipv6_url ... ok\ntest.mitmproxy.test_fuzzing.TestFuzzy.test_nullbytes ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_backup ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_backup_idempotence ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_copy ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_getset_state ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_intercept ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_kill ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_match ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_replace ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_replace_encoded ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_replace_no_content ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_replace_unicode ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_resume ... ok\ntest.mitmproxy.test_http.TestHTTPFlow.test_resume_duplicated ... ok\ntest.mitmproxy.test_http.TestHTTPRequest.test_constrain_encoding ... ok\ntest.mitmproxy.test_http.TestHTTPRequest.test_get_content_type ... ok\ntest.mitmproxy.test_http.TestHTTPRequest.test_get_url ... ok\ntest.mitmproxy.test_http.TestHTTPRequest.test_replace ... ok\ntest.mitmproxy.test_http.TestHTTPRequest.test_simple ... ok\ntest.mitmproxy.test_http.TestHTTPResponse.test_get_content_type ... ok\ntest.mitmproxy.test_http.TestHTTPResponse.test_replace ... ok\ntest.mitmproxy.test_http.TestHTTPResponse.test_simple ... ok\ntest.mitmproxy.test_http.test_make_error_response ... ok\ntest.mitmproxy.test_http.test_make_connect_request ... ok\ntest.mitmproxy.test_http.test_make_connect_response ... ok\ntest.mitmproxy.test_http.test_expect_continue_response ... ok\ntest.mitmproxy.test_log.test_logentry ... ok\ntest.mitmproxy.test_optmanager.test_defaults ... ok\ntest.mitmproxy.test_optmanager.test_required_int ... ok\ntest.mitmproxy.test_optmanager.test_deepcopy ... ok\ntest.mitmproxy.test_optmanager.test_options ... ok\ntest.mitmproxy.test_optmanager.test_setter ... ok\ntest.mitmproxy.test_optmanager.test_toggler ... ok\ntest.mitmproxy.test_optmanager.test_subscribe ... ok\ntest.mitmproxy.test_optmanager.test_rollback ... ok\ntest.mitmproxy.test_optmanager.test_simple ... ok\ntest.mitmproxy.test_optmanager.test_items ... ok\ntest.mitmproxy.test_optmanager.test_serialize ... ok\ntest.mitmproxy.test_optmanager.test_serialize_defaults ... ok\ntest.mitmproxy.test_optmanager.test_saving ... ERROR\ntest.mitmproxy.test_optmanager.test_merge ... ok\ntest.mitmproxy.test_optmanager.test_option ... ok\ntest.mitmproxy.test_optmanager.test_dump_defaults ... ok\ntest.mitmproxy.test_optmanager.test_dump_dicts ... ok\ntest.mitmproxy.test_optmanager.test_make_parser ... ok\ntest.mitmproxy.test_optmanager.test_set ... ok\ntest.mitmproxy.test_proxy.TestConnectionHandler.test_fatal_error ... ERROR\ntest.mitmproxy.test_proxy.TestDummyServer.test_simple ... ok\ntest.mitmproxy.test_proxy.TestProcessProxyOptions.test_certs ... ERROR\ntest.mitmproxy.test_proxy.TestProcessProxyOptions.test_simple ... ok\ntest.mitmproxy.test_proxy.TestProxyServer.test_err ... ok\ntest.mitmproxy.test_proxy.TestProxyServer.test_err_2 ... ok\ntest.mitmproxy.test_stateobject.test_simple ... ok\ntest.mitmproxy.test_stateobject.test_serializable_child ... ok\ntest.mitmproxy.test_stateobject.test_tuple ... ok\ntest.mitmproxy.test_stateobject.test_tuple_err ... ok\ntest.mitmproxy.test_stateobject.test_list ... ok\ntest.mitmproxy.test_stateobject.test_dict ... ok\ntest.mitmproxy.test_stateobject.test_any ... ok\ntest.mitmproxy.test_stateobject.test_too_much_state ... ok\ntest.mitmproxy.test_stateobject.test_none ... ok\ntest.mitmproxy.test_taddons.test_recordingmaster ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_recordingmaster' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.test_taddons.test_dumplog ... /usr/lib64/python3.6/site-packages/nose/case.py:197: RuntimeWarning: coroutine 'test_dumplog' was never awaited\n  self.test(*self.arg)\nok\ntest.mitmproxy.test_taddons.test_load_script ... ERROR\ntest.mitmproxy.test_tcp.TestTCPFlow.test_copy ... ok\ntest.mitmproxy.test_tcp.TestTCPFlow.test_match ... ok\ntest.mitmproxy.test_tcp.TestTCPFlow.test_repr ... ok\ntest.mitmproxy.test_types.test_bool ... ok\ntest.mitmproxy.test_types.test_str ... ok\ntest.mitmproxy.test_types.test_unknown ... ok\ntest.mitmproxy.test_types.test_int ... ok\ntest.mitmproxy.test_types.test_path ... ERROR\ntest.mitmproxy.test_types.test_cmd ... ok\ntest.mitmproxy.test_types.test_cutspec ... ok\ntest.mitmproxy.test_types.test_arg ... ok\ntest.mitmproxy.test_types.test_strseq ... ok\ntest.mitmproxy.test_types.test_flow ... ok\ntest.mitmproxy.test_types.test_flows ... ok\ntest.mitmproxy.test_types.test_data ... ok\ntest.mitmproxy.test_types.test_choice ... ok\ntest.mitmproxy.test_types.test_typemanager ... ok\ntest.mitmproxy.test_version.test_version ... ERROR\ntest.mitmproxy.test_version.test_get_version_hardcoded ... ok\ntest.mitmproxy.test_version.test_get_version ... ok\ntest.mitmproxy.test_websocket.TestWebSocketFlow.test_copy ... ok\ntest.mitmproxy.test_websocket.TestWebSocketFlow.test_inject_message ... ok\ntest.mitmproxy.test_websocket.TestWebSocketFlow.test_kill ... ok\ntest.mitmproxy.test_websocket.TestWebSocketFlow.test_match ... ok\ntest.mitmproxy.test_websocket.TestWebSocketFlow.test_message_kill ... ok\ntest.mitmproxy.test_websocket.TestWebSocketFlow.test_repr ... ok\ntest.mitmproxy.test_websocket.TestWebSocketFlow.test_serialize ... ok\ntest.pathod.language.test_actions.TestDisconnects.test_at ... ok\ntest.pathod.language.test_actions.TestDisconnects.test_parse_pathod ... ok\ntest.pathod.language.test_actions.TestDisconnects.test_spec ... ok\ntest.pathod.language.test_actions.TestInject.test_at ... ok\ntest.pathod.language.test_actions.TestInject.test_parse_pathod ... ok\ntest.pathod.language.test_actions.TestInject.test_serve ... ok\ntest.pathod.language.test_actions.TestInject.test_spec ... ok\ntest.pathod.language.test_actions.TestInject.test_spec2 ... ok\ntest.pathod.language.test_actions.TestPauses.test_freeze ... ok\ntest.pathod.language.test_actions.TestPauses.test_parse_pathod ... ok\ntest.pathod.language.test_actions.TestPauses.test_request ... ok\ntest.pathod.language.test_actions.TestPauses.test_spec ... ok\ntest.pathod.language.test_actions.Test_Action.test_cmp ... ok\ntest.pathod.language.test_actions.Test_Action.test_freeze ... ok\ntest.pathod.language.test_actions.Test_Action.test_repr ... ok\ntest.pathod.language.test_actions.Test_Action.test_resolve ... ok\ntest.pathod.language.test_actions.test_unique_name ... ok\ntest.pathod.language.test_base.TestKeyValue.test_freeze ... ok\ntest.pathod.language.test_base.TestKeyValue.test_simple ... ok\ntest.pathod.language.test_base.TestMisc.test_fixedlengthvalue ... ERROR\ntest.pathod.language.test_base.TestMisc.test_generators ... ok\ntest.pathod.language.test_base.TestMisc.test_value ... ok\ntest.pathod.language.test_base.TestMisc.test_value2 ... ok\ntest.pathod.language.test_base.TestTokValueFile.test_access_control ... ERROR\ntest.pathod.language.test_base.TestTokValueFile.test_file_value ... ok\ntest.pathod.language.test_base.TestTokValueFile.test_freeze ... ok\ntest.pathod.language.test_base.TestTokValueFile.test_spec ... ok\ntest.pathod.language.test_base.TestTokValueGenerate.test_basic ... ok\ntest.pathod.language.test_base.TestTokValueGenerate.test_freeze ... ok\ntest.pathod.language.test_base.TestTokValueGenerate.test_spec ... ok\ntest.pathod.language.test_base.TestTokValueLiteral.test_expr ... ok\ntest.pathod.language.test_base.TestTokValueLiteral.test_roundtrip ... ok\ntest.pathod.language.test_base.TestTokValueLiteral.test_spec ... ok\ntest.pathod.language.test_base.TestTokValueNakedLiteral.test_expr ... ok\ntest.pathod.language.test_base.TestTokValueNakedLiteral.test_spec ... ok\ntest.pathod.language.test_base.test_times ... ok\ntest.pathod.language.test_base.test_caseless_literal ... ok\ntest.pathod.language.test_base.test_intfield ... ok\ntest.pathod.language.test_base.test_options_or_value ... ok\ntest.pathod.language.test_base.test_integer ... ok\ntest.pathod.language.test_base.test_unique_name ... ok\ntest.pathod.language.test_generators.test_randomgenerator ... ok\ntest.pathod.language.test_generators.test_filegenerator ... ERROR\ntest.pathod.language.test_generators.test_transform_generator ... ok\ntest.pathod.language.test_http.TestRequest.test_err ... ok\ntest.pathod.language.test_http.TestRequest.test_freeze ... ok\ntest.pathod.language.test_http.TestRequest.test_multiline ... ok\ntest.pathod.language.test_http.TestRequest.test_multiple ... ok\ntest.pathod.language.test_http.TestRequest.test_nested_response ... ok\ntest.pathod.language.test_http.TestRequest.test_nonascii ... ok\ntest.pathod.language.test_http.TestRequest.test_path_generator ... ok\ntest.pathod.language.test_http.TestRequest.test_render ... ok\ntest.pathod.language.test_http.TestRequest.test_simple ... ok\ntest.pathod.language.test_http.TestRequest.test_spec ... ok\ntest.pathod.language.test_http.TestRequest.test_websocket ... ok\ntest.pathod.language.test_http.TestResponse.test_length ... ok\ntest.pathod.language.test_http.TestResponse.test_maximum_length ... ok\ntest.pathod.language.test_http.TestResponse.test_nonascii ... ok\ntest.pathod.language.test_http.TestResponse.test_parse_err ... ok\ntest.pathod.language.test_http.TestResponse.test_parse_header ... ok\ntest.pathod.language.test_http.TestResponse.test_parse_pause_after ... ok\ntest.pathod.language.test_http.TestResponse.test_parse_pause_before ... ok\ntest.pathod.language.test_http.TestResponse.test_parse_pause_random ... ok\ntest.pathod.language.test_http.TestResponse.test_parse_stress ... ok\ntest.pathod.language.test_http.TestResponse.test_raw ... ok\ntest.pathod.language.test_http.TestResponse.test_render ... ok\ntest.pathod.language.test_http.TestResponse.test_response ... ok\ntest.pathod.language.test_http.TestResponse.test_spec ... ok\ntest.pathod.language.test_http.TestResponse.test_websockets ... ok\ntest.pathod.language.test_http.test_make_error_response ... ok\ntest.pathod.language.test_http.test_ctype_shortcut ... ok\ntest.pathod.language.test_http.test_location_shortcut ... ok\ntest.pathod.language.test_http.test_shortcuts ... ok\ntest.pathod.language.test_http.test_user_agent ... ok\ntest.pathod.language.test_http.test_nested_response ... ok\ntest.pathod.language.test_http.test_nested_response_freeze ... ok\ntest.pathod.language.test_http.test_unique_components ... ok\ntest.pathod.language.test_http2.TestRequest.test_cached_values ... ok\ntest.pathod.language.test_http2.TestRequest.test_content_type ... ok\ntest.pathod.language.test_http2.TestRequest.test_err ... ok\ntest.pathod.language.test_http2.TestRequest.test_multiple ... ok\ntest.pathod.language.test_http2.TestRequest.test_nested_response ... ok\ntest.pathod.language.test_http2.TestRequest.test_nonascii ... ok\ntest.pathod.language.test_http2.TestRequest.test_raw_content_length ... ok\ntest.pathod.language.test_http2.TestRequest.test_render_simple ... ok\ntest.pathod.language.test_http2.TestRequest.test_render_with_body ... ok\ntest.pathod.language.test_http2.TestRequest.test_render_with_headers ... ok\ntest.pathod.language.test_http2.TestRequest.test_simple ... ok\ntest.pathod.language.test_http2.TestRequest.test_spec ... ok\ntest.pathod.language.test_http2.TestRequest.test_user_agent ... ok\ntest.pathod.language.test_http2.TestResponse.test_cached_values ... ok\ntest.pathod.language.test_http2.TestResponse.test_content_type ... ok\ntest.pathod.language.test_http2.TestResponse.test_err ... ok\ntest.pathod.language.test_http2.TestResponse.test_nonascii ... ok\ntest.pathod.language.test_http2.TestResponse.test_raw_content_length ... ok\ntest.pathod.language.test_http2.TestResponse.test_render_simple ... ok\ntest.pathod.language.test_http2.TestResponse.test_render_with_body ... ok\ntest.pathod.language.test_http2.TestResponse.test_render_with_headers ... ok\ntest.pathod.language.test_http2.TestResponse.test_simple ... ok\ntest.pathod.language.test_http2.TestResponse.test_spec ... ok\ntest.pathod.language.test_http2.test_make_error_response ... ok\ntest.pathod.language.test_websockets.TestWebsocketFrame.test_client_values ... ok\ntest.pathod.language.test_websockets.TestWebsocketFrame.test_construction ... ok\ntest.pathod.language.test_websockets.TestWebsocketFrame.test_construction_2 ... ok\ntest.pathod.language.test_websockets.TestWebsocketFrame.test_flags ... ok\ntest.pathod.language.test_websockets.TestWebsocketFrame.test_knone ... ok\ntest.pathod.language.test_websockets.TestWebsocketFrame.test_length ... ok\ntest.pathod.language.test_websockets.TestWebsocketFrame.test_nested_frame ... ok\ntest.pathod.language.test_websockets.TestWebsocketFrame.test_parse_websocket_frames ... ok\ntest.pathod.language.test_websockets.TestWebsocketFrame.test_rawbody ... ok\ntest.pathod.language.test_websockets.TestWebsocketFrame.test_server_values ... ok\ntest.pathod.language.test_writer.test_send_chunk ... ok\ntest.pathod.language.test_writer.test_write_values_inject ... ok\ntest.pathod.language.test_writer.test_write_values_disconnects ... ok\ntest.pathod.language.test_writer.test_write_values ... ok\ntest.pathod.language.test_writer.test_write_values_pauses ... ok\ntest.pathod.language.test_writer.test_write_values_after ... ok\ntest.pathod.protocols.test_http2.TestApplySettings.test_apply_settings ... ok\ntest.pathod.protocols.test_http2.TestAssembleRequest.test_request_simple ... ok\ntest.pathod.protocols.test_http2.TestAssembleRequest.test_request_with_body ... ok\ntest.pathod.protocols.test_http2.TestAssembleRequest.test_request_with_stream_id ... ok\ntest.pathod.protocols.test_http2.TestAssembleResponse.test_simple ... ok\ntest.pathod.protocols.test_http2.TestAssembleResponse.test_with_body ... ok\ntest.pathod.protocols.test_http2.TestAssembleResponse.test_with_stream_id ... ok\ntest.pathod.protocols.test_http2.TestCheckALPNMatch.test_check_alpn ... ok\ntest.pathod.protocols.test_http2.TestCheckALPNMismatch.test_check_alpn ... ok\ntest.pathod.protocols.test_http2.TestClientStreamIds.test_client_stream_ids ... ok\ntest.pathod.protocols.test_http2.TestCreateBody.test_create_body_empty ... ok\ntest.pathod.protocols.test_http2.TestCreateBody.test_create_body_multiple_frames ... ok\ntest.pathod.protocols.test_http2.TestCreateBody.test_create_body_single_frame ... ok\ntest.pathod.protocols.test_http2.TestCreateHeaders.test_create_headers ... ok\ntest.pathod.protocols.test_http2.TestCreateHeaders.test_create_headers_multiple_frames ... ok\ntest.pathod.protocols.test_http2.TestPerformClientConnectionPreface.test_perform_client_connection_preface ... ok\ntest.pathod.protocols.test_http2.TestPerformServerConnectionPreface.test_perform_server_connection_preface ... ok\ntest.pathod.protocols.test_http2.TestProtocol.test_perform_connection_preface ... ok\ntest.pathod.protocols.test_http2.TestProtocol.test_perform_connection_preface_server ... ok\ntest.pathod.protocols.test_http2.TestReadEmptyResponse.test_read_empty_response ... ok\ntest.pathod.protocols.test_http2.TestReadRequest.test_read_request ... ok\ntest.pathod.protocols.test_http2.TestReadRequestAbsolute.test_absolute_form ... ok\ntest.pathod.protocols.test_http2.TestReadRequestRelative.test_asterisk_form ... ok\ntest.pathod.protocols.test_http2.TestReadResponse.test_read_response ... ok\ntest.pathod.protocols.test_http2.TestTCPHandlerWrapper.test_direct ... ok\ntest.pathod.protocols.test_http2.TestTCPHandlerWrapper.test_wrapped ... ok\ntest.pathod.protocols.test_http2.TestserverstreamIds.test_server_stream_ids ... ok\ntest.pathod.test_log.test_disconnect ... ok\ntest.pathod.test_pathoc.TestDaemon.test_conn_err ... ok\ntest.pathod.test_pathoc.TestDaemon.test_connect_fail ... ok\ntest.pathod.test_pathoc.TestDaemon.test_explain ... ok\ntest.pathod.test_pathoc.TestDaemon.test_ignorecodes ... ok\ntest.pathod.test_pathoc.TestDaemon.test_showreq ... ok\ntest.pathod.test_pathoc.TestDaemon.test_showresp ... ok\ntest.pathod.test_pathoc.TestDaemon.test_showresp_httperr ... ok\ntest.pathod.test_pathoc.TestDaemon.test_showssl ... ok\ntest.pathod.test_pathoc.TestDaemon.test_socks_connect ... ok\ntest.pathod.test_pathoc.TestDaemon.test_ssl_error ... ok\ntest.pathod.test_pathoc.TestDaemon.test_wait_finish ... ok\ntest.pathod.test_pathoc.TestDaemon.test_websocket_shutdown ... ok\ntest.pathod.test_pathoc.TestDaemonHTTP2.test_http2 ... ok\ntest.pathod.test_pathoc.TestDaemonHTTP2.test_http2_alpn ... ok\ntest.pathod.test_pathoc.TestDaemonHTTP2.test_request ... ok\ntest.pathod.test_pathoc.TestDaemonSSL.test_clientcert ... ERROR\ntest.pathod.test_pathoc.TestDaemonSSL.test_http2_without_ssl ... ok\ntest.pathod.test_pathoc.TestDaemonSSL.test_showssl ... ok\ntest.pathod.test_pathoc.TestDaemonSSL.test_sni ... ok\ntest.pathod.test_pathoc.test_response ... ok\ntest.pathod.test_pathoc_cmdline.test_pathoc ... ERROR\ntest.pathod.test_pathod.TestCustomCert.test_connect ... ok\ntest.pathod.test_pathod.TestDaemon.test_access_denied ... ok\ntest.pathod.test_pathod.TestDaemon.test_anchor ... ok\ntest.pathod.test_pathod.TestDaemon.test_binarydata ... ok\ntest.pathod.test_pathod.TestDaemon.test_connect ... ok\ntest.pathod.test_pathod.TestDaemon.test_connect_err ... ok\ntest.pathod.test_pathod.TestDaemon.test_disconnect ... ok\ntest.pathod.test_pathod.TestDaemon.test_invalid_content_length ... ok\ntest.pathod.test_pathod.TestDaemon.test_invalid_first_line ... ok\ntest.pathod.test_pathod.TestDaemon.test_invalid_headers ... ok\ntest.pathod.test_pathod.TestDaemon.test_logs ... ok\ntest.pathod.test_pathod.TestDaemon.test_parserr ... ok\ntest.pathod.test_pathod.TestDaemon.test_preline ... ok\ntest.pathod.test_pathod.TestDaemon.test_proxy ... ok\ntest.pathod.test_pathod.TestDaemon.test_sizelimit ... ok\ntest.pathod.test_pathod.TestDaemon.test_source_access_denied ... ok\ntest.pathod.test_pathod.TestDaemon.test_static ... ok\ntest.pathod.test_pathod.TestDaemon.test_websocket ... ok\ntest.pathod.test_pathod.TestDaemon.test_websocket_frame ... ok\ntest.pathod.test_pathod.TestDaemon.test_websocket_frame_disconnect_error ... ok\ntest.pathod.test_pathod.TestDaemon.test_websocket_frame_reflect_error ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_access_denied ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_anchor ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_binarydata ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_disconnect ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_invalid_content_length ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_invalid_first_line ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_invalid_headers ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_logs ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_parserr ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_preline ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_proxy ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_sizelimit ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_source_access_denied ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_ssl_cipher ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_ssl_conn_failure ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_static ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_websocket ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_websocket_frame ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_websocket_frame_disconnect_error ... ok\ntest.pathod.test_pathod.TestDaemonSSL.test_websocket_frame_reflect_error ... ok\ntest.pathod.test_pathod.TestHTTP2.test_http2 ... ok\ntest.pathod.test_pathod.TestHexdump.test_hexdump ... ok\ntest.pathod.test_pathod.TestNocraft.test_nocraft ... ok\ntest.pathod.test_pathod.TestNohang.test_nohang ... ok\ntest.pathod.test_pathod.TestNotAfterConnect.test_connect ... ok\ntest.pathod.test_pathod.TestPathod.test_logging ... ok\ntest.pathod.test_pathod.TestSSLCN.test_connect ... ok\ntest.pathod.test_pathod.TestTimeout.test_timeout ... ok\ntest.pathod.test_pathod_cmdline.test_parse_anchor_spec ... ok\ntest.pathod.test_pathod_cmdline.test_pathod ... ERROR\ntest.pathod.test_test.TestDaemonManual.test_simple ... ok\ntest.pathod.test_test.TestDaemonManual.test_startstop_ssl ... ERROR\ntest.pathod.test_utils.test_membool ... ok\ntest.pathod.test_utils.test_data_path ... ok\n\n======================================================================\nERROR: test.examples.test_examples.TestScripts.test_add_header\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_add_header() missing 1 required positional argument: 'tdata'\n-------------------- >> begin captured logging << --------------------\npasslib.utils.compat: DEBUG: loaded lazy attr 'SafeConfigParser': <class 'configparser.ConfigParser'>\npasslib.utils.compat: DEBUG: loaded lazy attr 'NativeStringIO': <class '_io.StringIO'>\npasslib.utils.compat: DEBUG: loaded lazy attr 'BytesIO': <class '_io.BytesIO'>\npasslib.registry: DEBUG: registered 'htdigest' handler: <class 'passlib.handlers.digests.htdigest'>\npasslib.registry: DEBUG: registered 'bcrypt' handler: <class 'passlib.handlers.bcrypt.bcrypt'>\npasslib.registry: DEBUG: registered 'sha256_crypt' handler: <class 'passlib.handlers.sha2_crypt.sha256_crypt'>\npasslib.handlers.bcrypt: DEBUG: detected 'bcrypt' backend, version '3.1.3'\npasslib.handlers.bcrypt: DEBUG: 'bcrypt' backend lacks $2$ support, enabling workaround\npasslib.registry: DEBUG: registered 'sha512_crypt' handler: <class 'passlib.handlers.sha2_crypt.sha512_crypt'>\npasslib.registry: DEBUG: registered 'sha1_crypt' handler: <class 'passlib.handlers.sha1_crypt.sha1_crypt'>\npasslib.registry: DEBUG: registered 'md5_crypt' handler: <class 'passlib.handlers.md5_crypt.md5_crypt'>\npasslib.registry: DEBUG: registered 'bsdi_crypt' handler: <class 'passlib.handlers.des_crypt.bsdi_crypt'>\npasslib.registry: DEBUG: registered 'des_crypt' handler: <class 'passlib.handlers.des_crypt.des_crypt'>\npasslib.registry: DEBUG: registered 'apr_md5_crypt' handler: <class 'passlib.handlers.md5_crypt.apr_md5_crypt'>\npasslib.registry: DEBUG: registered 'ldap_sha1' handler: <class 'passlib.handlers.ldap_digests.ldap_sha1'>\npasslib.registry: DEBUG: registered 'plaintext' handler: <class 'passlib.handlers.misc.plaintext'>\n--------------------- >> end captured logging << ---------------------\n\n======================================================================\nERROR: test.examples.test_examples.TestScripts.test_custom_contentviews\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_custom_contentviews() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.examples.test_examples.TestScripts.test_dns_spoofing\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_dns_spoofing() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.examples.test_examples.TestScripts.test_iframe_injector\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_iframe_injector() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.examples.test_examples.TestScripts.test_modify_form\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_modify_form() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.examples.test_examples.TestScripts.test_modify_querystring\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_modify_querystring() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.examples.test_examples.TestScripts.test_redirect_requests\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_redirect_requests() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.examples.test_examples.TestScripts.test_send_reply_from_proxy\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_send_reply_from_proxy() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.examples.test_har_dump.TestHARDump.test_base64\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_base64() missing 2 required positional arguments: 'tmpdir' and 'tdata'\n\n======================================================================\nERROR: test.examples.test_har_dump.TestHARDump.test_binary\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_binary() missing 2 required positional arguments: 'tmpdir' and 'tdata'\n\n======================================================================\nERROR: test.examples.test_har_dump.TestHARDump.test_format_cookies\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_format_cookies() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.examples.test_har_dump.TestHARDump.test_simple\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_simple() missing 2 required positional arguments: 'tmpdir' and 'tdata'\n\n======================================================================\nERROR: test.examples.test_xss_scanner.TestXSSScanner.test_find_unclaimed_URLs\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_find_unclaimed_URLs() missing 2 required positional arguments: 'monkeypatch' and 'logger'\n\n======================================================================\nERROR: test.examples.test_xss_scanner.TestXSSScanner.test_log_SQLi_data\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_log_SQLi_data() missing 2 required positional arguments: 'monkeypatch' and 'logger'\n\n======================================================================\nERROR: test.examples.test_xss_scanner.TestXSSScanner.test_log_XSS_data\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_log_XSS_data() missing 2 required positional arguments: 'monkeypatch' and 'logger'\n\n======================================================================\nERROR: test.examples.test_xss_scanner.TestXSSScanner.test_response\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_response() missing 2 required positional arguments: 'monkeypatch' and 'logger'\n\n======================================================================\nERROR: test.examples.test_xss_scanner.TestXSSScanner.test_test_end_of_url_injection\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_test_end_of_url_injection() missing 1 required positional argument: 'monkeypatch'\n\n======================================================================\nERROR: test.examples.test_xss_scanner.TestXSSScanner.test_test_query_injection\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_test_query_injection() missing 1 required positional argument: 'monkeypatch'\n\n======================================================================\nERROR: test.examples.test_xss_scanner.TestXSSScanner.test_test_referer_injection\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_test_referer_injection() missing 1 required positional argument: 'monkeypatch'\n\n======================================================================\nERROR: test.examples.test_xss_scanner.TestXSSScanner.test_test_user_agent_injection\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_test_user_agent_injection() missing 1 required positional argument: 'monkeypatch'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_block.test_block_global\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_block_global() missing 4 required positional arguments: 'block_global', 'block_private', 'should_be_killed', and 'address'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_check_ca.TestCheckCA.test_check_ca\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_check_ca() missing 1 required positional argument: 'expired'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_clientplayback.TestClientPlayback.test_configure\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_configure() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_clientplayback.TestClientPlayback.test_load_file\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_load_file() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_core.test_options\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_options() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_core.test_client_certs\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_client_certs() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_cut.test_extract\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_extract() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_cut.test_cut_save\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_cut_save() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_cut.test_cut_save_open\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_cut_save_open() missing 3 required positional arguments: 'exception', 'log_message', and 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.TestExportCurlCommand.test_get\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_get() missing 1 required positional argument: 'get_request'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.TestExportCurlCommand.test_patch\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_patch() missing 1 required positional argument: 'patch_request'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.TestExportCurlCommand.test_post\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_post() missing 1 required positional argument: 'post_request'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.TestExportCurlCommand.test_tcp\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_tcp() missing 1 required positional argument: 'tcp_flow'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.TestExportHttpieCommand.test_get\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_get() missing 1 required positional argument: 'get_request'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.TestExportHttpieCommand.test_patch\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_patch() missing 1 required positional argument: 'patch_request'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.TestExportHttpieCommand.test_post\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_post() missing 1 required positional argument: 'post_request'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.TestExportHttpieCommand.test_tcp\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_tcp() missing 1 required positional argument: 'tcp_flow'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.TestRaw.test_get\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_get() missing 1 required positional argument: 'get_request'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.TestRaw.test_tcp\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_tcp() missing 1 required positional argument: 'tcp_flow'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.test_export\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_export() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.test_export_open\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_export_open() missing 3 required positional arguments: 'exception', 'log_message', and 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_export.test_clip\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_clip() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_onboarding.TestApp.test_cert\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_cert() missing 1 required positional argument: 'ext'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_onboarding.TestApp.test_head\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_head() missing 1 required positional argument: 'ext'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_proxyauth.TestMkauth.test_mkauth\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_mkauth() missing 2 required positional arguments: 'scheme' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_proxyauth.TestParseHttpBasicAuth.test_parse_http_basic_auth_error\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_parse_http_basic_auth_error() missing 1 required positional argument: 'input'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_auth_required_response\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_auth_required_response() missing 3 required positional arguments: 'is_proxy_auth', 'expected_status_code', and 'expected_header'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_check\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_check() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_configure\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_configure() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_is_proxy_auth\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_is_proxy_auth() missing 2 required positional arguments: 'mode' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_proxyauth.TestProxyAuth.test_which_auth_header\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_which_auth_header() missing 2 required positional arguments: 'is_proxy_auth' and 'expected'\n\n======================================================================\nERROR: Failure: ModuleNotFoundError (No module named 'asynctest')\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/failure.py\", line 39, in runTest\n    raise self.exc_val.with_traceback(self.tb)\n  File \"/usr/lib64/python3.6/site-packages/nose/loader.py\", line 417, in loadTestsFromName\n    addr.filename, addr.module)\n  File \"/usr/lib64/python3.6/site-packages/nose/importer.py\", line 47, in importFromPath\n    return self.importFromDir(dir_path, fqname)\n  File \"/usr/lib64/python3.6/site-packages/nose/importer.py\", line 94, in importFromDir\n    mod = load_module(part_fqname, fh, filename, desc)\n  File \"/usr/lib64/python3.6/imp.py\", line 235, in load_module\n    return load_source(name, filename, file)\n  File \"/usr/lib64/python3.6/imp.py\", line 172, in load_source\n    module = _load(spec)\n  File \"<frozen importlib._bootstrap>\", line 684, in _load\n  File \"<frozen importlib._bootstrap>\", line 665, in _load_unlocked\n  File \"<frozen importlib._bootstrap_external>\", line 678, in exec_module\n  File \"<frozen importlib._bootstrap>\", line 219, in _call_with_frames_removed\n  File \"/var/tmp/portage/net-proxy/mitmproxy-4.0.1/work/mitmproxy-4.0.1/test/mitmproxy/addons/test_readfile.py\", line 5, in <module>\n    import asynctest\nModuleNotFoundError: No module named 'asynctest'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_replace.TestReplaceFile.test_nonexistent\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_nonexistent() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_replace.TestReplaceFile.test_simple\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_simple() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_save.test_configure\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_configure() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_save.test_tcp\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_tcp() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_save.test_websocket\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_websocket() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_save.test_save_command\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_save_command() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_save.test_simple\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_simple() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_script.TestScript.test_addon\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_addon() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_script.TestScript.test_exception\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_exception() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: Test that a script specified as '\"foo.py\"' works to support the calling convention of\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_quotes_around_filename() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_script.TestScript.test_reload\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_reload() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_script.TestScript.test_simple\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_simple() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_script.TestScriptLoader.test_order\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_order() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_script.TestScriptLoader.test_script_deletion\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_script_deletion() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_script.TestScriptLoader.test_script_run\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_script_run() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_script.TestScriptLoader.test_simple\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_simple() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_script.test_load_script\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_load_script() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: Test that loading two scripts at locations a/foo.py and b/foo.py works.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_load_fullname() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_serverplayback.test_load_file\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_load_file() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_serverplayback.test_config\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_config() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_termlog.TestTermLog.test_output\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_output() missing 4 required positional arguments: 'outfile', 'expected_out', 'expected_err', and 'capfd'\n\n======================================================================\nERROR: test.mitmproxy.addons.test_view.test_load\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_load() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.image.test_image_parser.test_parse_png\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_parse_png() missing 3 required positional arguments: 'filename', 'metadata', and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.image.test_image_parser.test_parse_gif\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_parse_gif() missing 3 required positional arguments: 'filename', 'metadata', and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.image.test_image_parser.test_parse_jpeg\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_parse_jpeg() missing 3 required positional arguments: 'filename', 'metadata', and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.image.test_image_parser.test_ico\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_ico() missing 3 required positional arguments: 'filename', 'metadata', and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.image.test_view.test_view_image\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_view_image() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.test_css.test_beautify\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_beautify() missing 2 required positional arguments: 'filename' and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.test_javascript.test_format_xml\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_format_xml() missing 2 required positional arguments: 'filename' and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.test_protobuf.test_view_protobuf_request\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_view_protobuf_request() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.test_protobuf.test_format_pbuf\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_format_pbuf() missing 2 required positional arguments: 'filename' and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.test_wbxml.test_wbxml\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_wbxml() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.test_xml_html.test_simple\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_simple() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.contentviews.test_xml_html.test_format_xml\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_format_xml() missing 2 required positional arguments: 'filename' and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.net.http.http1.test_read.test_read_request\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_read_request() missing 1 required positional argument: 'input'\n\n======================================================================\nERROR: test.mitmproxy.net.http.http1.test_read.test_read_request_error\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_read_request_error() missing 1 required positional argument: 'input'\n\n======================================================================\nERROR: test.mitmproxy.net.http.http1.test_read.test_read_response\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_read_response() missing 1 required positional argument: 'input'\n\n======================================================================\nERROR: test.mitmproxy.net.http.http2.test_utils.TestHttp2ParseHeaders.test_without_port\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_without_port() missing 2 required positional arguments: 'scheme' and 'expected_port'\n\n======================================================================\nERROR: test.mitmproxy.net.http.test_encoding.test_identity\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_identity() missing 1 required positional argument: 'encoder'\n\n======================================================================\nERROR: This test is for testing byte->byte encoding/decoding\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_encoders() missing 1 required positional argument: 'encoder'\n\n======================================================================\nERROR: This test is for testing byte->str decoding\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_encoders_strings() missing 1 required positional argument: 'encoder'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_frame.TestFrame.test_serialization_bijection\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_serialization_bijection() missing 2 required positional arguments: 'masked' and 'length'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_deserialization_length\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_deserialization_length() missing 2 required positional arguments: 'input' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_deserialization_masking\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_deserialization_masking() missing 2 required positional arguments: 'input' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_frame.TestFrameHeader.test_serialization_length\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_serialization_length() missing 2 required positional arguments: 'input' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_masker.TestMasker.test_masker\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_masker() missing 2 required positional arguments: 'input' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_utils.TestUtils.test_check_client_version\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_check_client_version() missing 2 required positional arguments: 'input' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_utils.TestUtils.test_check_handshake\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_check_handshake() missing 2 required positional arguments: 'input' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_utils.TestUtils.test_create_server_nonce\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_create_server_nonce() missing 2 required positional arguments: 'input' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_utils.TestUtils.test_get_client_key\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_get_client_key() missing 2 required positional arguments: 'input' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_utils.TestUtils.test_get_extensions\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_get_extensions() missing 2 required positional arguments: 'input' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_utils.TestUtils.test_get_protocol\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_get_protocol() missing 2 required positional arguments: 'input' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.net.websockets.test_utils.TestUtils.test_get_server_accept\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_get_server_accept() missing 2 required positional arguments: 'input' and 'expected'\n\n======================================================================\nERROR: test.mitmproxy.net.test_tcp.TestALPNClient.test_alpn\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_alpn() missing 4 required positional arguments: 'monkeypatch', 'alpn_protos', 'expected_negotiated', and 'expected_response'\n\n======================================================================\nERROR: test.mitmproxy.net.test_tcp.TestInvalidTrustFile.test_invalid_trust_file_should_fail\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_invalid_trust_file_should_fail() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.net.test_tcp.TestSSLClientCert.test_clientcert\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_clientcert() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.net.test_tcp.TestSSLClientCert.test_clientcert_err\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_clientcert_err() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWBadHostname.test_mode_none_should_pass_without_sni\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_mode_none_should_pass_without_sni() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWBadHostname.test_should_fail\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_should_fail() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWBadHostname.test_should_fail_without_sni\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_should_fail_without_sni() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWBadServerCert.test_mode_strict_should_fail\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_mode_strict_should_fail() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWValidCertChain.test_mode_strict_w_confdir_should_pass\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_mode_strict_w_confdir_should_pass() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.net.test_tcp.TestSSLUpstreamCertVerificationWValidCertChain.test_mode_strict_w_pemfile_should_pass\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_mode_strict_w_pemfile_should_pass() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.net.test_tls.TestMasterSecretLogger.test_log\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_log() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.platform.test_pf.TestLookup.test_simple\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_simple() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.proxy.protocol.test_http1.TestStreaming.test_streaming\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_streaming() missing 1 required positional argument: 'streaming'\n\n======================================================================\nERROR: test.mitmproxy.proxy.protocol.test_http2.TestPriority.test_priority\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_priority() missing 4 required positional arguments: 'prioritize_before', 'http2_priority_enabled', 'priority', and 'expected_priority'\n\n======================================================================\nERROR: test.mitmproxy.proxy.protocol.test_http2.TestPriority.test_priority\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 384, in tearDown\n    try_run(self.inst, ('teardown', 'tearDown'))\n  File \"/usr/lib64/python3.6/site-packages/nose/util.py\", line 471, in try_run\n    return func()\n  File \"/var/tmp/portage/net-proxy/mitmproxy-4.0.1/work/mitmproxy-4.0.1/test/mitmproxy/proxy/protocol/test_http2.py\", line 118, in teardown\n    if self.client:\nAttributeError: 'TestPriority' object has no attribute 'client'\n\n======================================================================\nERROR: test.mitmproxy.proxy.protocol.test_http2.TestRequestStreaming.test_request_streaming\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_request_streaming() missing 1 required positional argument: 'streaming'\n\n======================================================================\nERROR: test.mitmproxy.proxy.protocol.test_http2.TestRequestStreaming.test_request_streaming\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 384, in tearDown\n    try_run(self.inst, ('teardown', 'tearDown'))\n  File \"/usr/lib64/python3.6/site-packages/nose/util.py\", line 471, in try_run\n    return func()\n  File \"/var/tmp/portage/net-proxy/mitmproxy-4.0.1/work/mitmproxy-4.0.1/test/mitmproxy/proxy/protocol/test_http2.py\", line 118, in teardown\n    if self.client:\nAttributeError: 'TestRequestStreaming' object has no attribute 'client'\n\n======================================================================\nERROR: test.mitmproxy.proxy.protocol.test_http2.TestRequestWithPriority.test_request_with_priority\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_request_with_priority() missing 3 required positional arguments: 'http2_priority_enabled', 'priority', and 'expected_priority'\n\n======================================================================\nERROR: test.mitmproxy.proxy.protocol.test_http2.TestRequestWithPriority.test_request_with_priority\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 384, in tearDown\n    try_run(self.inst, ('teardown', 'tearDown'))\n  File \"/usr/lib64/python3.6/site-packages/nose/util.py\", line 471, in try_run\n    return func()\n  File \"/var/tmp/portage/net-proxy/mitmproxy-4.0.1/work/mitmproxy-4.0.1/test/mitmproxy/proxy/protocol/test_http2.py\", line 118, in teardown\n    if self.client:\nAttributeError: 'TestRequestWithPriority' object has no attribute 'client'\n\n======================================================================\nERROR: test.mitmproxy.proxy.protocol.test_http2.TestResponseStreaming.test_response_streaming\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_response_streaming() missing 1 required positional argument: 'streaming'\n\n======================================================================\nERROR: test.mitmproxy.proxy.protocol.test_http2.TestResponseStreaming.test_response_streaming\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 384, in tearDown\n    try_run(self.inst, ('teardown', 'tearDown'))\n  File \"/usr/lib64/python3.6/site-packages/nose/util.py\", line 471, in try_run\n    return func()\n  File \"/var/tmp/portage/net-proxy/mitmproxy-4.0.1/work/mitmproxy-4.0.1/test/mitmproxy/proxy/protocol/test_http2.py\", line 118, in teardown\n    if self.client:\nAttributeError: 'TestResponseStreaming' object has no attribute 'client'\n\n======================================================================\nERROR: test.mitmproxy.proxy.protocol.test_websocket.TestSimple.test_simple\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_simple() missing 1 required positional argument: 'streaming'\n\n======================================================================\nERROR: test.mitmproxy.proxy.protocol.test_websocket.TestStreaming.test_streaming\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_streaming() missing 1 required positional argument: 'streaming'\n\n======================================================================\nERROR: test.mitmproxy.proxy.test_config.TestProxyConfig.test_invalid_certificate\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_invalid_certificate() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.proxy.test_server.TestHTTP.test_stream_modify\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_stream_modify() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.proxy.test_server.TestHTTPS.test_clientcert_dir\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_clientcert_dir() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.proxy.test_server.TestHTTPS.test_clientcert_file\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_clientcert_file() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.proxy.test_server.TestHTTPSUpstreamServerVerificationWTrustedCert.test_verification_w_confdir\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_verification_w_confdir() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.proxy.test_server.TestHTTPSUpstreamServerVerificationWTrustedCert.test_verification_w_pemfile\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_verification_w_pemfile() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.proxy.test_server.TestTransparent.test_tcp_stream_modify\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_tcp_stream_modify() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.script.test_concurrent.TestConcurrent.test_concurrent\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_concurrent() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.script.test_concurrent.TestConcurrent.test_concurrent_class\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_concurrent_class() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.script.test_concurrent.TestConcurrent.test_concurrent_err\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_concurrent_err() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.tools.console.test_keymap.test_load_path\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_load_path() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.tools.console.test_statusbar.test_statusbar\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_statusbar() missing 1 required positional argument: 'monkeypatch'\n\n======================================================================\nERROR: test.mitmproxy.tools.console.test_statusbar.test_shorten_message\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_shorten_message() missing 2 required positional arguments: 'message' and 'ready_message'\n\n======================================================================\nERROR: test.mitmproxy.tools.web.test_static_viewer.test_save_static\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_save_static() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.tools.web.test_static_viewer.test_save_filter_help\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_save_filter_help() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.tools.web.test_static_viewer.test_save_settings\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_save_settings() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.tools.web.test_static_viewer.test_save_flows\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_save_flows() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.tools.web.test_static_viewer.test_static_viewer\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_static_viewer() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.tools.web.test_static_viewer.test_save_flows_content\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/usr/lib64/python3.6/unittest/mock.py\", line 1179, in patched\n    return func(*args, **keywargs)\nTypeError: test_save_flows_content() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.tools.test_dump.TestDumpMaster.test_addons_dumper\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_addons_dumper() missing 1 required positional argument: 'dumper'\n\n======================================================================\nERROR: test.mitmproxy.tools.test_dump.TestDumpMaster.test_addons_termlog\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_addons_termlog() missing 1 required positional argument: 'termlog'\n\n======================================================================\nERROR: test.mitmproxy.tools.test_main.test_mitmweb\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_mitmweb() missing 2 required positional arguments: 'event_loop' and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.tools.test_main.test_mitmdump\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_mitmdump() missing 2 required positional arguments: 'event_loop' and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.utils.test_arg_check.test_check_args\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_check_args() missing 2 required positional arguments: 'arg' and 'output'\n\n======================================================================\nERROR: test.mitmproxy.utils.test_debug.test_dump_system_info_precompiled\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_dump_system_info_precompiled() missing 1 required positional argument: 'precompiled'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCert.test_der\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_der() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCert.test_err_broken_sans\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_err_broken_sans() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCert.test_simple\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_simple() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCert.test_state\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_state() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCertStore.test_create_dhparams\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_create_dhparams() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCertStore.test_create_explicit\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_create_explicit() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCertStore.test_create_no_common_name\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_create_no_common_name() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCertStore.test_create_tmp\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_create_tmp() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCertStore.test_expire\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_expire() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCertStore.test_overrides\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_overrides() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCertStore.test_sans\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_sans() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestCertStore.test_sans_change\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_sans_change() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.test_certs.TestDummyCert.test_with_ca\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_with_ca() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.test_connections.TestClientConnectionTLS.test_tls_with_sni\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_tls_with_sni() missing 2 required positional arguments: 'sni' and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.test_connections.TestServerConnectionTLS.test_tls\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_tls() missing 2 required positional arguments: 'client_certs' and 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.test_eventsequence.test_http_flow\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_http_flow() missing 2 required positional arguments: 'resp' and 'err'\n\n======================================================================\nERROR: test.mitmproxy.test_eventsequence.test_websocket_flow\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_websocket_flow() missing 1 required positional argument: 'err'\n\n======================================================================\nERROR: test.mitmproxy.test_eventsequence.test_tcp_flow\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_tcp_flow() missing 1 required positional argument: 'err'\n\n======================================================================\nERROR: test.mitmproxy.test_optmanager.test_saving\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_saving() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.mitmproxy.test_proxy.TestConnectionHandler.test_fatal_error\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_fatal_error() missing 1 required positional argument: 'capsys'\n\n======================================================================\nERROR: test.mitmproxy.test_proxy.TestProcessProxyOptions.test_certs\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_certs() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.test_taddons.test_load_script\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_load_script() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.test_types.test_path\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_path() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.mitmproxy.test_version.test_version\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_version() missing 1 required positional argument: 'capsys'\n\n======================================================================\nERROR: test.pathod.language.test_base.TestMisc.test_fixedlengthvalue\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_fixedlengthvalue() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.pathod.language.test_base.TestTokValueFile.test_access_control\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_access_control() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.pathod.language.test_generators.test_filegenerator\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_filegenerator() missing 1 required positional argument: 'tmpdir'\n\n======================================================================\nERROR: test.pathod.test_pathoc.TestDaemonSSL.test_clientcert\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_clientcert() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.pathod.test_pathoc_cmdline.test_pathoc\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/usr/lib64/python3.6/unittest/mock.py\", line 1179, in patched\n    return func(*args, **keywargs)\nTypeError: test_pathoc() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.pathod.test_pathod_cmdline.test_pathod\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/usr/lib64/python3.6/unittest/mock.py\", line 1179, in patched\n    return func(*args, **keywargs)\nTypeError: test_pathod() missing 1 required positional argument: 'tdata'\n\n======================================================================\nERROR: test.pathod.test_test.TestDaemonManual.test_startstop_ssl\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/site-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\nTypeError: test_startstop_ssl() missing 1 required positional argument: 'not_after_connect'\n\n----------------------------------------------------------------------\nRan 1180 tests in 57.662s\n\nFAILED (errors=184)", "issue_status": "Closed", "issue_reporting_time": "2018-05-29T20:07:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "283": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3177", "issue_id": "#3177", "issue_summary": "ubuntu bionic package doesn't work", "issue_description": "jsoref commented on 29 May 2018\nSteps to reproduce the problem:\ninstall ubuntu-bionic (server)\napt install mitmproxy\nmitmproxy\nAny other comments? What have you tried so far?\n$ /usr/bin/mitmproxy\npkg_resources.ContextualVersionConflict: (urwid 2.0.1 (/usr/lib/python3/dist-packages), Requirement.parse('urwid<1.4,>=1.3.1'), {'mitmproxy'})\n# vi /usr/lib/python3/dist-packages/mitmproxy-2.0.2.egg-info/requires.txt\n$ mitmproxy\npkg_resources.DistributionNotFound: The 'setuptools!=29.0.0,>=11.3' distribution was not found and is required by mitmproxy\n# apt install -y python3-setuptools\n$ mitmproxy\npkg_resources.DistributionNotFound: The 'ruamel.yaml<0.14,>=0.13.2' distribution was not found and is required by mitmproxy\n# vi /usr/lib/python3/dist-packages/mitmproxy-2.0.2.egg-info/requires.txt\n$ mitmproxy\npkg_resources.DistributionNotFound: The 'pyperclip<1.6,>=1.5.22' distribution was not found and is required by mitmproxy\n# vi /usr/lib/python3/dist-packages/mitmproxy-2.0.2.egg-info/requires.txt\n$ mitmproxy\npkg_resources.DistributionNotFound: The 'pyasn1<0.3,>=0.1.9' distribution was not found and is required by mitmproxy\n# vi /usr/lib/python3/dist-packages/mitmproxy-2.0.2.egg-info/requires.txt\n$ mitmproxy\npkg_resources.DistributionNotFound: The 'pyOpenSSL<17.0,>=16.0' distribution was not found and is required by mitmproxy\n# vi /usr/lib/python3/dist-packages/mitmproxy-2.0.2.egg-info/requires.txt\n$ mitmproxy\npkg_resources.DistributionNotFound: The 'html2text<=2016.9.19,>=2016.1.8' distribution was not found and is required by mitmproxy\n# vi /usr/lib/python3/dist-packages/mitmproxy-2.0.2.egg-info/requires.txt\n$ mitmproxy\n...\npkg_resources.DistributionNotFound: The 'brotli<0.7,>=0.5.1' distribution was not found and is required by mitmproxy\n# vi /usr/lib/python3/dist-packages/mitmproxy-2.0.2.egg-info/requires.txt\n$ mitmproxy\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.5\nPlatform: Linux-4.15.0-22-generic-x86_64-with-Ubuntu-18.04-bionic\nSSL version: OpenSSL 1.1.0g  2 Nov 2017\nLinux distro: Ubuntu 18.04 bionic\nFwiw, here's what I ended up doing:\napt install -y python3-setuptools\nI picked these random versions (roughly replacing the first digit with a 9):\n# egrep $(egrep 'ContextualVersionConflict|DistributionNotFound' /tmp/09 |sed -e \"s/' .*//;s/.* '//;s/[<!=].*//;s/.*'//\"|tr \"\\n\" '|'|sed -e 's/.$//') /usr/lib/python3/dist-packages/mitmproxy-2.0.2.egg-info/requires.txt\nbrotli<9.7,>=0.5.1\nhtml2text<=9016.9.19,>=2016.1.8\npyOpenSSL<97.0,>=16.0\npyasn1<9.3,>=0.1.9\npyperclip<9.6,>=1.5.22\nruamel.yaml<9.14,>=0.13.2\nsetuptools!=29.0.0,>=11.3\nurwid<9.4,>=1.3.1\nThis might be better suited as a bug against debian/ubuntu, but, this is where I as a user came looking, and #868 was filed here...\nOffhand, if setuptools is needed by the app, then it should be a dependency. As for the versions (or why making them arbitrarily large made things work)...\n1", "issue_status": "Closed", "issue_reporting_time": "2018-05-29T17:48:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "284": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3176", "issue_id": "#3176", "issue_summary": "Can find the simple shortcut for copy / export curl, python, body header", "issue_description": "felipeflorencio commented on 29 May 2018 \u2022\nedited\nI always used mitmproxy to validate the request's from mobile request, and the easy step that I always did is some keyboard shortcut inside the flow details to export the curl, as python, header, body.\nAfter search to much I did not found anything else to this simples task that was there before, does anyone know how to show this options again?\nBefore was just that easy: Shift + C", "issue_status": "Closed", "issue_reporting_time": "2018-05-29T12:40:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "285": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3175", "issue_id": "#3175", "issue_summary": "multipart/form-data current values are deleted right before editing", "issue_description": "Member\nmadt1m commented on 29 May 2018 \u2022\nedited by kajojify\nSteps to reproduce the problem:\nEdit with 'e' a POST flow with multipart/form-data type.\nAn empty editor will appear:\nAdd a row, and go back to check that previous fields have sadly been overwritten:\nAny other comments? What have you tried so far?\nIt seems to me that the editor expects a URL-encoded form type, and thus the unexpected format passes unnoticed, while the new form is saved with the URL-encoded format. I'll wait for some insights from anyone which knows something about it. Otherwise, I'll take a look at it in the next days.\nSystem information\nMitmproxy: 4.0.0 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.15.0-kali3-amd64-x86_64-with-debian-kali-rolling", "issue_status": "Closed", "issue_reporting_time": "2018-05-28T22:05:27Z", "fixed_by": "#3420", "pull_request_summary": "multipart-fix", "pull_request_description": "Contributor\nrjt-gupta commented on 14 Dec 2018\nFixes #3175", "pull_request_status": "Merged", "issue_fixed_time": "2019-11-15T18:04:48Z", "files_changed": [["55", "mitmproxy/net/http/multipart.py"], ["3", "mitmproxy/net/http/request.py"], ["9", "mitmproxy/tools/console/consoleaddons.py"], ["20", "mitmproxy/tools/console/grideditor/editors.py"], ["3", "mitmproxy/tools/console/window.py"], ["37", "test/mitmproxy/net/http/test_multipart.py"], ["7", "test/mitmproxy/net/http/test_request.py"]]}, "286": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3173", "issue_id": "#3173", "issue_summary": "Memory leak", "issue_description": "steave-r0gers commented on 28 May 2018 \u2022\nedited\nSteps to reproduce the problem:\ntry to download some file, https://mirror.nl.leaseweb.net/speedtest/100mb.bin\nbrowser wait response from mitmproxy, while it will be fully downloaded by mitmproxy\npress download file https://mirror.nl.leaseweb.net/speedtest/100mb.bin\nstop download file in browser after few seconds, mitmproxy still download file\npress download file https://mirror.nl.leaseweb.net/speedtest/100mb.bin\nstop download file in browser after few seconds, and download file again\nno free memory\nSystem information\nMitmproxy: 4.0.1\nPython: 3.6.5rc1\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.15.0-kali3-amd64-x86_64-with-Kali-kali-rolling-kali-rolling", "issue_status": "Closed", "issue_reporting_time": "2018-05-28T14:12:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "287": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3171", "issue_id": "#3171", "issue_summary": "invalid syntax \"server: typing.Any = None\"", "issue_description": "cwaazywabbit commented on 28 May 2018\nHi,\nno matter how I install mitmproxy (git, pip3, pre-package) I get the following syntax error:\n    server: typing.Any = None\n          ^\nSyntaxError: invalid syntax\nHow can I solve this? using Centos 6.9.\nRegards", "issue_status": "Closed", "issue_reporting_time": "2018-05-28T00:10:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "288": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3166", "issue_id": "#3166", "issue_summary": "How to copy the response to the clipboard?", "issue_description": "gajus commented on 27 May 2018\nIn v2 of mitmproxy, I was able to use key binding C to copy the response body into my clipboard. This option does not seem to exist anymore in v4. What was it replaced with?", "issue_status": "Closed", "issue_reporting_time": "2018-05-27T12:44:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "289": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3162", "issue_id": "#3162", "issue_summary": "Addon defined options set in config.yaml not used", "issue_description": "Contributor\ndrzax commented on 26 May 2018\nNew to this, so apologies if I'm just missing something obvious.\nSteps to reproduce the problem:\nDefine test.py addon\nfrom mitmproxy import ctx\nclass OptionsTest:\n    def load(self, loader):\n        loader.add_option(\n            name = \"anoption\",\n            typespec = str,\n            default = \"None\",\n            help = \"Add a header to responses\",\n        )\n\n    def configure(self, updates):\n        ctx.log.info('Test option: %s' % ctx.options.anoption)\n\n    def response(self, flow):\n        flow.response.headers[\"anoption\"] = str(ctx.options.anoption)\n\naddons = [\n    OptionsTest()\n]\nLoad addon and define anoption in ~/.mitmproxy/config.yaml\nscripts:\n  - ~/.mitmproxy/test.py\nanoption: \"foo\"\nNotice that anoption isn't documented in output from mitmweb --options\nRun mitmdump and note that the log shows the option's default value, not the one defined in config.yaml\nmitmdump\nLoading script ~/.mitmproxy/test.py\nTest option: None\nProxy server listening at http://*:8080\nAny other comments? What have you tried so far?\nOptions set on the command line are loaded:\nmitmdump --set anoption=\"bar\"\nLoading script ~/.mitmproxy/test.py\nTest option: bar\nProxy server listening at http://*:8080\nSystem information\nmitmproxy --version\nMitmproxy: 4.0.1\nPython:    3.6.5\nOpenSSL:   OpenSSL 1.0.2o  27 Mar 2018\nPlatform:  Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-05-26T04:49:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "290": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3160", "issue_id": "#3160", "issue_summary": "Bridge Addresses Causing \"block.py\" Add-on to Fail with `ValueError`", "issue_description": "Contributor\nohhorob commented on 26 May 2018\nSteps to reproduce the problem:\ncreate an ipv6 network connection to the proxy host on a bridge\nset the device to request through the proxy host\nwatch some traffic start flowing\nAddon error: Traceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/4.0.1/libexec/lib/python3.6/site-packages/mitmproxy/addons/block.py\", line 24, in clientconnect\n    address = ipaddress.ip_address(layer.client_conn.address[0])\n  File \"/usr/local/opt/python/Frameworks/Python.framework/Versions/3.6/lib/python3.6/ipaddress.py\", line 54, in ip_address\n    address)\nValueError: 'fe80::884:9f3b:3afd:6eae%bridge100' does not appear to be an IPv4 or IPv6 address\nSystem information\n$ mitmproxy --version\nMitmproxy: 4.0.1 \nPython:    3.6.5\nOpenSSL:   OpenSSL 1.0.2o  27 Mar 2018\nPlatform:  Darwin-17.6.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-05-25T22:29:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "291": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3158", "issue_id": "#3158", "issue_summary": "block_global option not working", "issue_description": "sameer17cs commented on 25 May 2018\nSteps to reproduce the problem:\n--------@MITM:~$ ./mitmdump --block_global false\nAny other comments? What have you tried so far?\nResponse:\nusage: mitmdump [options] [filter]\nmitmdump: error: unrecognized arguments: --block_global\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-05-25T10:49:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "292": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3153", "issue_id": "#3153", "issue_summary": "Mitmproxy error on startup", "issue_description": "jenskueper commented on 25 May 2018\nSteps to reproduce the problem:\nInstall the latest mitmproxy version via pip 10 under Debian 9\nHey, I justed updated mitmproxy and if I want to run it, I get the following error:\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 7, in\nfrom mitmproxy.tools.main import mitmproxy\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/main.py\", line 101\nserver: typing.Any = None\n^\nSyntaxError: invalid syntax\nDoes anybody have an idea what causes this?", "issue_status": "Closed", "issue_reporting_time": "2018-05-24T18:31:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "293": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3151", "issue_id": "#3151", "issue_summary": "Can I use mitmproxy as a library without mitmdump", "issue_description": "StevenKangWei commented on 24 May 2018\nI want to get request url in my program, how can i run mitmproxy in a thread", "issue_status": "Closed", "issue_reporting_time": "2018-05-24T09:05:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "294": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3148", "issue_id": "#3148", "issue_summary": "v4.0.1 Client connection killed by block_signal", "issue_description": "luckychelsea commented on 22 May 2018\nSteps to reproduce the problem:\nmitmdump -p 16002 -m reverse:https://172.168.0.190:333 --ssl-insecure --anticache\nProxy server listening at http://*:16002\n172.168.0.121:24086: clientconnect\nClient connection from 172.168.0.121 killed by block_global\n172.168.0.121:24086: Connection killed\n172.168.0.121:24086: clientdisconnect\n172.168.0.121:24087: clientconnect\nClient connection from 172.168.0.121 killed by block_global\n172.168.0.121:24087: Connection killed\n172.168.0.121:24087: clientdisconnect\n172.168.0.121:24088: clientconnect\nbut the v3.0.4 is ok\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 4.0.1\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-2.6.32-431.el6.x86_64-x86_64-with-centos-6.5-Final", "issue_status": "Closed", "issue_reporting_time": "2018-05-22T09:20:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "295": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3147", "issue_id": "#3147", "issue_summary": "mitmproxy - custom addon options not visible", "issue_description": "Contributor\ngcmurphy commented on 22 May 2018\nSteps to reproduce the problem:\nStart the following addon with mitmproxy --scripts eg.py\nfrom mitmproxy import http, ctx\n\nclass MyAddon:\n    def load(self, loader) -> None:\n        loader.add_option(name='AAAAA_addon_message',\n                          typespec=str,\n                          default='your request is bad and you should feel bad',\n                          help='Respond with this message')\n\n        loader.add_option(name='AAAAA_addon_status_code',\n                          typespec=int,\n                          default=400,\n                          help='Respond with this status code')\n\n    def request(self, flow: http.HTTPFlow) -> None:\n        ctx.log.info('my_addon request')\n\n    def response(self, flow: http.HTTPFlow) -> None:\n        ctx.log.info('my_addon response')\n        flow.response.status_code = ctx.options.AAAAA_status_code \n        flow.response.content = ctx.options.AAAAA_addon_message.encode('utf-8')\n\naddons = [\n    MyAddon()\n]\nOpen the options with 'O' key binding and see the options AAAA_* are not editable\nAny other comments? What have you tried so far?\nmitmweb displays the options correctly:\nCould be related to the deferred options?\nThis affects the current version 4.0.1 as well as master.\nSystem information\n(venv) \u279c  mitmproxy git:(master) \u2717 mitmproxy --version\nMitmproxy: 5.0.0.dev12 (commit 7aaf495) \nPython:    3.6.5\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-05-22T05:11:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "296": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3146", "issue_id": "#3146", "issue_summary": "I close all the connections, but the Memory is not decreasing", "issue_description": "luckychelsea commented on 22 May 2018 \u2022\nedited\nSteps to reproduce the problem:\nand the memory will increase in a few minutes\ncpu 0.3 mem 35.3\n29863 root 25 5 1071m 348m 4992 S 0.3 35.3 3:22.70 mitmdump\nThere is no any connection now.\nSystem information\nMitmproxy: 4.0.1\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-2.6.32-431.el6.x86_64-x86_64-with-centos-6.5-Final", "issue_status": "Closed", "issue_reporting_time": "2018-05-22T02:21:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "297": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3145", "issue_id": "#3145", "issue_summary": "mitmweb - unexpected 500 error when doing flow dumps", "issue_description": "Contributor\ngcmurphy commented on 21 May 2018\nSteps to reproduce the problem:\nI've had some difficulty creating a standalone reproducer for this. In order to trigger it I changed some addon configuration option values, and then attempted to save the flow.\nERROR:tornado.application:Uncaught exception GET /flows/dump (127.0.0.1)\nHTTPServerRequest(protocol='http', host='127.0.0.1:8081', method='GET', uri='/flows/dump', version='HTTP/1.1', remote_ip='127.0.0.1')\nTraceback (most recent call last):\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/tornado/web.py\", line 1541, in _execute\n    result = method(*self.path_args, **self.path_kwargs)\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/mitmproxy/tools/web/app.py\", line 229, in get\n    fw.add(f)\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/mitmproxy/io/io.py\", line 26, in add\n    d = flow.get_state()\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/mitmproxy/flow.py\", line 94, in get_state\n    d = super().get_state()\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/mitmproxy/stateobject.py\", line 31, in get_state\n    state[attr] = get_state(cls, val)\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/mitmproxy/stateobject.py\", line 94, in get_state\n    return _process(typeinfo, val, False)\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/mitmproxy/stateobject.py\", line 77, in _process\n    for k, v in val.items()\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/mitmproxy/stateobject.py\", line 77, in <dictcomp>\n    for k, v in val.items()\n  File \"/Users/grantmurphy/.local/share/virtualenvs/mitmproxy-h3iGBSQq/lib/python3.6/site-packages/mitmproxy/stateobject.py\", line 81, in _process\n    assert isinstance(val, (int, str, bool, bytes))\nAssertionError\nERROR:tornado.access:500 GET /flows/dump (127.0.0.1) 5.16ms\nSystem information\nmitmproxy --version\nMitmproxy: 4.0.1\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-05-21T06:43:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "298": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3143", "issue_id": "#3143", "issue_summary": "SOCKS5 mode failure. Invalid SOCKS version.", "issue_description": "pratham2003 commented on 20 May 2018 \u2022\nedited\nSteps to reproduce the problem:\nRun mitmweb.exe --version --mode socks5 --listen-port 7878 --listen-host 127.0.0.1\nSetup firefox to use socks5\nTry to browse, mitmweb throws error SOCKS5 mode failure: SocksError('Invalid SOCKS version. Expected 0x05, got 0x47',) ... I tried to proxy other app it showed SocksError('Invalid SOCKS version. Expected 0x05, got 0x43',)\nSystem information\nMitmproxy: 3.0.4 binary\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-10-10.0.16299\nalso\nMitmproxy: 4.0.1 binary\nPython: 3.6.5\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-10-10.0.16299", "issue_status": "Closed", "issue_reporting_time": "2018-05-20T10:35:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "299": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3135", "issue_id": "#3135", "issue_summary": "Install is broken on Ubuntu 18.04", "issue_description": "Contributor\nFuzion24 commented on 17 May 2018\nSteps to reproduce the problem:\nInstall a clean 18.04 with libssl-dev // libxslt1-dev // libxml2-dev\nThe python package 'cryptography' fails to build because it's not compatible with the ssl version that is shipped with 18.04\nI think that dependency just needs updated", "issue_status": "Closed", "issue_reporting_time": "2018-05-17T15:07:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "300": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3134", "issue_id": "#3134", "issue_summary": "Release filenames are inconsistent", "issue_description": "Member\nmhils commented on 17 May 2018 \u2022\nedited\nSteps to reproduce the problem:\nRoll a new release\nSome releases have a \"v4.0.0\" version spec, others have a \"4.0.0\" version spec: https://snapshots.mitmproxy.org/v4.0.1/\nv4.0.0 is unexpected and breaks the Linux download link on mitmproxy.org.", "issue_status": "Closed", "issue_reporting_time": "2018-05-17T13:52:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "301": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3133", "issue_id": "#3133", "issue_summary": "mitmweb can't be closed by Ctrl+C on Windows anymore", "issue_description": "pravic commented on 17 May 2018 \u2022\nedited\nSteps to reproduce the problem:\nI even compared this behavior with 3.0.4.\n4.0.1:\nRun mitmweb\nPress Ctrl+C in console\nNothing happens.\nif you close web browser, you will get a warning:\nlib\\asyncio\\base_events.py:492: RuntimeWarning: coroutine 'Master._shutdown' was never awaited\nself._ready.clear()\nSo, you have to kill python.exe manually.\n3.0.4:\nRun mitmweb\nPress Ctrl+C in console\nmitmweb will be closed regardless of a browser.\nAny other comments? What have you tried so far?\n4.0.1 works fine on Linux. It may be connected with asyncio.\nAnd just a guess: https://gist.github.com/lambdalisue/05d5654bd1ec04992ad316d50924137c (Ctrl+C hotfix patch of asyncio on Windows)\nSystem information\nMitmproxy: 4.0.1\nPython: 3.6.2 (3.6.5 - the same issue)\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-7-6.1.7601-SP1", "issue_status": "Closed", "issue_reporting_time": "2018-05-17T12:00:44Z", "fixed_by": "#3172", "pull_request_summary": "Fix shutdown on Windows", "pull_request_description": "Member\nmhils commented on 28 May 2018\nThis fixes #3133. The current shutdown code is quite ugly really, we need to clean up here once the proxy server is asyncio-based as well.", "pull_request_status": "Merged", "issue_fixed_time": "2018-05-28T21:29:09Z", "files_changed": [["10", "mitmproxy/master.py"], ["12", "mitmproxy/tools/main.py"], ["2", "test/mitmproxy/proxy/test_server.py"]]}, "302": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3132", "issue_id": "#3132", "issue_summary": "4.0.0 No module named 'mitmproxy.contrib.kaitaistruct'", "issue_description": "ilovezfs commented on 17 May 2018\nSteps to reproduce the problem:\npip3 install mitmproxy\nmitmproxy --version\nAny other comments? What have you tried so far?\n(v) iMac-TMP:mymitmproxy400 joe$ ./v/bin/mitmproxy --version\nTraceback (most recent call last):\n  File \"./v/bin/mitmproxy\", line 7, in <module>\n    from mitmproxy.tools.main import mitmproxy\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/tools/main.py\", line 18, in <module>\n    from mitmproxy.tools import cmdline  # noqa\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/tools/cmdline.py\", line 3, in <module>\n    from mitmproxy.addons import core\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/addons/__init__.py\", line 1, in <module>\n    from mitmproxy.addons import anticache\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/addons/anticache.py\", line 1, in <module>\n    from mitmproxy import ctx\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/ctx.py\", line 1, in <module>\n    import mitmproxy.master  # noqa\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/master.py\", line 7, in <module>\n    from mitmproxy import addonmanager\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/addonmanager.py\", line 8, in <module>\n    from mitmproxy import eventsequence\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/eventsequence.py\", line 4, in <module>\n    from mitmproxy import flow\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/flow.py\", line 5, in <module>\n    from mitmproxy import connections\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/connections.py\", line 9, in <module>\n    from mitmproxy.net import tcp\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 12, in <module>\n    from mitmproxy.net import tls\n  File \"/Users/joe/Developer/mymitmproxy400/v/lib/python3.6/site-packages/mitmproxy/net/tls.py\", line 18, in <module>\n    from mitmproxy.contrib.kaitaistruct import tls_client_hello\nModuleNotFoundError: No module named 'mitmproxy.contrib.kaitaistruct'\n(v) iMac-TMP:mymitmproxy400 joe$ \nSystem information\npython 3.6.5 macOS", "issue_status": "Closed", "issue_reporting_time": "2018-05-17T04:34:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "303": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3129", "issue_id": "#3129", "issue_summary": "fix", "issue_description": "Christopher2691 commented on 16 May 2018\nSteps to reproduce the problem:\nSystem information\nMitmproxy: 3.0.3\nPython: 3.6.5\nOpenSSL: OpenSSL 1.0.2o 27 Mar 2018\nPlatform: Darwin-17.4.0-x86_64-i386-64bit\n2.\n3.\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-05-16T13:06:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "304": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3127", "issue_id": "#3127", "issue_summary": "400 BAD request, HttpException (on mitm.it)", "issue_description": "TonyStark commented on 16 May 2018 \u2022\nedited\nSteps to reproduce the problem:\nsudo sysctl -w net.ipv4.ip_forward=1\nsudo iptables -t nat -A PREROUTING -i enp3s0 -p tcp --dport 443 -j REDIRECT --to-port 8080\nsudo iptables -t nat -A PREROUTING -i enp3s0 -p tcp --dport 80 -j REDIRECT --to-port 8080\nsudo ./mitmproxy --mode transparent --showhost\nGetting Error while opening mitm.it from my Android\nError is--\n400 Bad Request\nHttpException('\\n Mitmproxy received an absolute-form request even though.......\nMy ifconfig is\nenp0s29f7u8 Link encap:Ethernet  HWaddr XXX  \n          inet addr:192.168.42.28  Bcast:192.168.42.255  Mask:255.255.255.0\n          inet6 addr: 2405:ccc:7306:4d8c/64 Scope:Global\n          inet6 addr: XXXea/64 Scope:Link\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:8112 errors:1 dropped:0 overruns:0 frame:0\n          TX packets:7987 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000 \n          RX bytes:6120219 (6.1 MB)  TX bytes:1588233 (1.5 MB)\n\nenp3s0    Link encap:Ethernet  HWaddr XXX  \n          inet addr:10.42.1.1  Bcast:10.42.1.255  Mask:255.255.255.0\n          inet6 addr: feXXXX5/64 Scope:Link\n          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1\n          RX packets:60978 errors:0 dropped:0 overruns:0 frame:0\n          TX packets:40965 errors:0 dropped:0 overruns:0 carrier:0\n          collisions:0 txqueuelen:1000 \n          RX bytes:66103467 (66.1 MB)  TX bytes:6917725 (6.9 MB)\nIn my android wifi, i added proxy as 10.42.1.1 port 8080\nAnd i cant find eventlog :(\nHow to make it work?\nAny other comments? What have you tried so far?\nAlso i tried with mitmweb and it worked, but after click on request i got blank page.\nAnd it seems mitmweb cant capture SSL(HSTS), is that true???\nDoes mitmproxy successfully capture HSTS request?\nSystem information\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription: Ubuntu 16.04.3 LTS\nRelease: 16.04\nCodename: xenial\nMitmproxy: 3.0.4 binary\nPython:    3.6.3\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Linux-4.13.0-41-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-05-15T19:43:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "305": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3122", "issue_id": "#3122", "issue_summary": "py3.7 incompatibility: urllib.parse.quote and ~", "issue_description": "Member\nKriechi commented on 13 May 2018\nTesting mitmproxy-master revealed a small issues with the way urllib.parse.quote escapes the full byte range:\nimport urllib.parse\nprint(urllib.parse.quote(bytes(range(125,128)).decode(\"utf8\", \"surrogateescape\")))\nOutput:\nPython 3.6: %7D%7E%7F\nPython 3.7-dev: %7D~%7F\nThis currently causes one of our tests to fail: test/mitmproxy/net/http/test_url.py:123.\nLooking through the Python bugtracker, I found:\nhttps://bugs.python.org/issue16285\npython/cpython@21024f0\nhttps://bugs.python.org/issue12910\nCan we safely update our code to ignore this, or do we generate a new pitfall by (not) handling this?\nWe could use the safe keyword-arg to include ~, which then results in the same behaviour on py36 an dpy37.\n1", "issue_status": "Closed", "issue_reporting_time": "2018-05-13T08:34:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "306": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3120", "issue_id": "#3120", "issue_summary": "mitmproxy 0.18.2 has requirement help me ?", "issue_description": "abkreno2530 commented on 12 May 2018\ni have this error please help me if you can", "issue_status": "Closed", "issue_reporting_time": "2018-05-12T16:01:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "307": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3118", "issue_id": "#3118", "issue_summary": "Error while read in output_file contains https", "issue_description": "fourirakbar commented on 12 May 2018 \u2022\nedited\nSteps to reproduce the problem:\nI start with mitmdump --anticache --anticomp -v -w bisa5.stream. I try to open HTTP web like http://if.its.ac.id/. Then type mitmdump -nr bisa5.stream --set flow_detail=2 --showhost > outfile3b it works fine\nThen I try to open HTTPS web like https://github.com/, there will be an error when I start mitmdump -nr bisa5.stream --set flow_detail=2 --showhost > outfile3c\nAddon error: Traceback (most recent call last):\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 239, in response\nself.echo_flow(f)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 222, in echo_flow\nself._echo_message(f.response)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 108, in _echo_message\nself.echo(content)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 69, in echo\nclick.secho(text, file=self.outfp, **style)\nFile \"/usr/local/lib/python3.5/dist-packages/click/termui.py\", line 420, in secho\nreturn echo(style(text, **styles), file=file, nl=nl, err=err, color=color)\nFile \"/usr/local/lib/python3.5/dist-packages/click/utils.py\", line 259, in echo\nfile.write(message)\nUnicodeEncodeError: 'ascii' codec can't encode character '\\u2019' in position 1510: ordinal not in range(128)\nAddon error: Traceback (most recent call last):\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 239, in response\nself.echo_flow(f)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 222, in echo_flow\nself._echo_message(f.response)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 108, in _echo_message\nself.echo(content)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 69, in echo\nclick.secho(text, file=self.outfp, **style)\nFile \"/usr/local/lib/python3.5/dist-packages/click/termui.py\", line 420, in secho\nreturn echo(style(text, **styles), file=file, nl=nl, err=err, color=color)\nFile \"/usr/local/lib/python3.5/dist-packages/click/utils.py\", line 259, in echo\nfile.write(message)\nUnicodeEncodeError: 'ascii' codec can't encode character '\\ufeff' in position 163: ordinal not in range(128)\nAddon error: Traceback (most recent call last):\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 239, in response\nself.echo_flow(f)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 215, in echo_flow\nself._echo_message(f.request)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 108, in _echo_message\nself.echo(content)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 69, in echo\nclick.secho(text, file=self.outfp, **style)\nFile \"/usr/local/lib/python3.5/dist-packages/click/termui.py\", line 420, in secho\nreturn echo(style(text, **styles), file=file, nl=nl, err=err, color=color)\nFile \"/usr/local/lib/python3.5/dist-packages/click/utils.py\", line 259, in echo\nfile.write(message)\nUnicodeEncodeError: 'ascii' codec can't encode character '\\u2019' in position 102: ordinal not in range(128)\nError in wsgi app. b'Traceback (most recent call last):\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 155, in serve\\n write(i)\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 124, in write\\n soc.write(\"HTTP/1.1 {status}\\r\\n\".format(status=state[\"status\"]).encode())\\nAttributeError: 'NoneType' object has no attribute 'write'\\n'\nError in wsgi app. b'Traceback (most recent call last):\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 155, in serve\\n write(i)\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 124, in write\\n soc.write(\"HTTP/1.1 {status}\\r\\n\".format(status=state[\"status\"]).encode())\\nAttributeError: 'NoneType' object has no attribute 'write'\\n'\nError in wsgi app. b'Traceback (most recent call last):\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 155, in serve\\n write(i)\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 124, in write\\n soc.write(\"HTTP/1.1 {status}\\r\\n\".format(status=state[\"status\"]).encode())\\nAttributeError: 'NoneType' object has no attribute 'write'\\n'\n404 GET /robots.txt (::ffff:192.168.0.15) 0.27ms\nError in wsgi app. b'Traceback (most recent call last):\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 155, in serve\\n write(i)\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 124, in write\\n soc.write(\"HTTP/1.1 {status}\\r\\n\".format(status=state[\"status\"]).encode())\\nAttributeError: 'NoneType' object has no attribute 'write'\\n'\nError in wsgi app. b'Traceback (most recent call last):\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 155, in serve\\n write(i)\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 124, in write\\n soc.write(\"HTTP/1.1 {status}\\r\\n\".format(status=state[\"status\"]).encode())\\nAttributeError: 'NoneType' object has no attribute 'write'\\n'\nError in wsgi app. b'Traceback (most recent call last):\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 155, in serve\\n write(i)\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 124, in write\\n soc.write(\"HTTP/1.1 {status}\\r\\n\".format(status=state[\"status\"]).encode())\\nAttributeError: 'NoneType' object has no attribute 'write'\\n'\nError in wsgi app. b'Traceback (most recent call last):\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 155, in serve\\n write(i)\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 124, in write\\n soc.write(\"HTTP/1.1 {status}\\r\\n\".format(status=state[\"status\"]).encode())\\nAttributeError: 'NoneType' object has no attribute 'write'\\n'\nError in wsgi app. b'Traceback (most recent call last):\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 155, in serve\\n write(i)\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 124, in write\\n soc.write(\"HTTP/1.1 {status}\\r\\n\".format(status=state[\"status\"]).encode())\\nAttributeError: 'NoneType' object has no attribute 'write'\\n'\nError in wsgi app. b'Traceback (most recent call last):\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 155, in serve\\n write(i)\\n File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/wsgi.py\", line 124, in write\\n soc.write(\"HTTP/1.1 {status}\\r\\n\".format(status=state[\"status\"]).encode())\\nAttributeError: 'NoneType' object has no attribute 'write'\\n'\nAny other comments? What have you tried so far?\nI follow cortesi answer from #2918.\nSystem information\nMitmproxy: 3.0.4\nPython: 3.5.2\nOpenSSL: OpenSSL 1.0.2g 1 Mar 2016\nPlatform: Linux-4.10.0-38-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-05-12T09:40:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "308": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3113", "issue_id": "#3113", "issue_summary": "tcp_message script not working", "issue_description": "cstefan2 commented on 11 May 2018 \u2022\nedited\nHi,\nI tried to execute the TCP message replace script from the doc but it seems is not working. I don't know if this is a issue with the doc script or with mitmproxy.\nThe script was unchanged.\nSteps to reproduce the problem:\nmitmdump --mode transparent --tcp-host \".*\" -k -s examples/complex/tcp_message.py\nLoading script: examples/tcp_message.py\nProxy server listening at http://:8080\n192.168.1.241:37604: clientconnect\n::ffff:192.168.1.241:37604: Certificate verification error for None: hostname 'no-hostname' doesn't match either of '.local.org', 'local.org'\n::ffff:192.168.1.241:37604: Ignoring server verification error, continuing with connection\nAddon error: Traceback (most recent call last):\nFile \"examples/tcp_message.py\", line 16, in tcp_message\nmodified_msg = tcp_msg.message.replace(\"foo\", \"bar\")\nAttributeError: 'TCPFlow' object has no attribute 'message'\n192.168.1.241:37604 -> tcp -> 10.0.0.2:5443\nAddon error: Traceback (most recent call last):\nFile \"examples/tcp_message.py\", line 16, in tcp_message\nmodified_msg = tcp_msg.message.replace(\"foo\", \"bar\")\nAttributeError: 'TCPFlow' object has no attribute 'message'\n192.168.1.241:37604 <- tcp <- 10.0.0.2:5443\nSystem information\nmitmdump --version\nMitmproxy: 3.0.4\nPython: 3.6.0\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-3.19.0-65-generic-x86_64-with-debian-jessie-sid", "issue_status": "Closed", "issue_reporting_time": "2018-05-11T09:10:47Z", "fixed_by": "#3114", "pull_request_summary": "fix tcp example", "pull_request_description": "Member\nKriechi commented on 11 May 2018\nfixes #3113\n@mhils: does this look right?", "pull_request_status": "Merged", "issue_fixed_time": "2018-05-11T22:44:27Z", "files_changed": [["23", "examples/complex/tcp_message.py"]]}, "309": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3112", "issue_id": "#3112", "issue_summary": "Proxy constantly erroring on \"HttpSyntaxExecption\"", "issue_description": "BlackHoleFox commented on 10 May 2018\nI'm currently trying to figure out how my Honeywell IoT thermostat talks home and I setup a MITMProxy instance to run all its traffic through, though all that ever appears are console errors saying\nHTTP Protocol error in client request: Bad HTTP request line: b&#x27;CBKPPR\\\\x05PB\\\\x00&amp;\\\\x00\\\\x00\\\\x00\\\\x00\\\\xd0-3\\\\xc1`a^\\\\xcdOF\\\\x93\\\\xe9\\\\x93\\\\xbf/\\\\xadTE\\\\xd4M\\\\xca&lt;\\\\xeb\\\\x97\\\\xe4\\\\xd7B^i}\\\\x05\\\\xbf\\\\xdf\\\\x85\\\\xd\nIt works fine off the proxy, and I have tried the proxy in both transparent and regular mode. I have the Thermostat's default gateway set to the IP of the MITMInstance. Wireshark analysis shows that Honeywell's server is returning a \"Bad Request\" and also a \"Bad Gateway\" to the IP of my Thermostat.\nIf anyone can shine some light on this topic, it would be greatly appreciated. (Don't you just love IoT?)\nSystem information\nMitmproxy: 3.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.13.0-41-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-05-10T09:27:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "310": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3111", "issue_id": "#3111", "issue_summary": "How to get the real client ip", "issue_description": "Totti0135 commented on 10 May 2018\nSteps to reproduce the problem:\nI use the redsocks as a transparent proxy and set the mitmproxy as a upstream-proxy.\nIn script, I use cli_ip = flow.client_conn.address,but the cli_ip is the redsocks's ip not the client ip.\nI want to know how can I get the real client ip?\nSystem information\nMitmproxy version: 2.0.2 (release version)\nUbuntu 3.19.0-25.26~14.04.1-generic 3.19.8-ckt2", "issue_status": "Closed", "issue_reporting_time": "2018-05-10T08:29:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "311": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3108", "issue_id": "#3108", "issue_summary": "the reverse mode proxy is classified as HTTPS protocol by default.", "issue_description": "luckychelsea commented on 8 May 2018\nSteps to reproduce the problem:\nhttp://192.168.88.128:8080\nThis page is originally HTTP protocol, but the reverse proxy is classified as HTTPS protocol by default.\nmitmdump -p 1234 --ssl-insecure --anticache -m reverse:192.168.88.128:8080\nProxy server listening at http://*:1234\n192.168.88.1:10977: clientconnect\n192.168.88.1:10977: GET https://192.168.88.128:8080/\n<< Cannot establish TLS with 192.168.88.128:8080 (sni: 192.168.88.128): TlsException(\"SSL handshake error: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",)\n192.168.88.1:10977: clientdisconnect\n2.\n3.\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-05-08T10:20:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "312": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3102", "issue_id": "#3102", "issue_summary": "Logs from done() events on proxy exit don't appear", "issue_description": "Member\nKriechi commented on 6 May 2018\n@mhils complained:\ndone() doesn't seem to get triggered on master anymore", "issue_status": "Closed", "issue_reporting_time": "2018-05-06T10:45:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "313": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3101", "issue_id": "#3101", "issue_summary": "Release Notes for v4.0", "issue_description": "Member\nKriechi commented on 6 May 2018\nThis is a work-in-progress write-up for the upcoming mitmproxy v4.0 release notes:\nFeatures:\nmitmproxy now requires Python 3.6!\nMoved the core to asyncio - which gives us a significant performance boost!\nReduce memory consumption by using SO_KEEPALIVE (#3076)\nExport request as httpie command (#3031)\nBreaking Changes:\nallow_remote got replaced by block_global and block_private (#3100)\nno more custom events (#3093)\nBugfixes:\nCorrectly block connections from remote clients with IPv4-mapped IPv6 client addresses (#3099)\nExpand ~ in paths during the cut command (#3078)\nRemove socket listen backlog constraint\nImprove handling of user script exceptions (#3050)\nIgnore signal errors on windows\nAnd lots of typos, docs improvements, revamped examples, and general fixes!", "issue_status": "Closed", "issue_reporting_time": "2018-05-06T10:23:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "314": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3096", "issue_id": "#3096", "issue_summary": "duplicate and replay example error", "issue_description": "turkogluc commented on 4 May 2018\nHello I am trying to understand duplicate and replay process so I tried to run dup_and_replay.py but there is something that I keep getting this error\nAddon error: Traceback (most recent call last):\nFile \"dup.py\", line 6, in request\nctx.master.view.add(f)\nAttributeError: 'DumpMaster' object has no attribute 'view'\nCould you please help me", "issue_status": "Closed", "issue_reporting_time": "2018-05-04T15:07:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "315": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3095", "issue_id": "#3095", "issue_summary": "ALPN not available", "issue_description": "johndoesenior commented on 3 May 2018\nSteps to reproduce the problem:\nrunning mitmproxy transparent mode with ssl on\ngoing to any website (HTTPS)\nresults in failure\nubuntu 16.04\npython 3.6\nError: 192.168.42.19:49597: Traceback (most recent call last):(more in eventlog)Traceback (most recent call last):\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 279, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 355, in _establish_tls_with_client_and_server\n    self._establish_tls_with_server()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 444, in _establish_tls_with_server\n    **args\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/connections.py\", line 292, in establish_tls\n    self.convert_to_tls(cert=client_cert, sni=sni, **kwargs)\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 388, in convert_to_tls\n    **sslctx_kwargs\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/net/tls.py\", line 285, in create_client_context\n    **sslctx_kwargs,\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/net/tls.py\", line 194, in _create_ssl_context\n    context.set_alpn_protos(alpn_protos)\n  File \"/usr/local/lib/python3.6/site-packages/OpenSSL/SSL.py\", line 654, in explode\n    raise NotImplementedError(error)\nNotImplementedError: ALPN not available\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nThanks", "issue_status": "Closed", "issue_reporting_time": "2018-05-03T11:31:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "316": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3088", "issue_id": "#3088", "issue_summary": "Improper typing signature in addon causes mitmproxy to fail silently", "issue_description": "Contributor\ngcmurphy commented on 30 Apr 2018\nSteps to reproduce the problem:\nCreate the following 'command addon'\n# example.py\nfrom mitmproxy import command, ctx\n\nclass Addon:\n    @command.command('example.command')\n    def example(self):\n        ctx.log.info(\"doesn't work\")\n\naddons = (\n    Addon(),\n)\nAttempt to start mitmproxy:\n# mitmproxy doesn't start and exits without printing an error\n$ mitmproxy --verbose -s example.py\n$ echo $?\nAny other comments? What have you tried so far?\nWhilst this is an error in the addon definition, it was actually quite annoying + difficult to track down.\n(The fix was to add -> None in the signature).\nSystem information\nmitmproxy --version\nMitmproxy: 3.0.4 \nPython:    3.6.5\nOpenSSL:   OpenSSL 1.1.0h  27 Mar 2018\nPlatform:  Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-04-30T01:06:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "317": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3085", "issue_id": "#3085", "issue_summary": "getting curl command from mitmproxy web", "issue_description": "Dauth commented on 28 Apr 2018 \u2022\nedited\nSteps to reproduce the problem:\nis there any way to extract post request as curl using mitmproxy web?\nAny other comments? What have you tried so far?\nSystem information\n2", "issue_status": "Closed", "issue_reporting_time": "2018-04-28T17:09:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "318": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3080", "issue_id": "#3080", "issue_summary": "Support IPv6 transparent proxying on Windows", "issue_description": "spozdnyakov commented on 26 Apr 2018 \u2022\nedited\nTransparent mode used to work OK on Windows in version 2.0.2. There was an issue with showing correct Host headers however, so I tried to upgrade to 3.0.4 and found that transparent mode now doesn't work at all. On every client request mitmweb shows the following error message:\nTransparent mode failure: RuntimeError('Cannot resolve original destination.',)\nI've tried previous mitmproxy releases and found that this functionality was broken starting from v3.0.0\nRC2. I do understand that this mode is not \"officially\" supported on Windows, but since it used to work, I hope it can be fixed :)\nSteps to reproduce the problem:\nEnable IP forwarding (https://gist.github.com/mhils/e9769fab7b1dd0775335)\nSet port redirection, e.g.:\nnetsh interface portproxy add v4tov4 listenport=80 connectaddress=192.168.0.90 connectport=8080\nnetsh interface portproxy add v4tov4 listenport=443 connectaddress=192.168.0.90 connectport=8080\nStart mitmproxy in transparent mode:\nmitmweb.exe --mode transparent --showhost\nInstall mitmproxy certificate on the phone\nSet default gateway in phone's Wi-Fi connection properties to the mitmproxy host (e.g. 192.168.0.90)\nOpen any website in phone's browser\nSystem information\nMitmproxy: 3.0.4 binary\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Windows-10-10.0.16299", "issue_status": "Closed", "issue_reporting_time": "2018-04-26T12:32:21Z", "fixed_by": "#3174", "pull_request_summary": "Add support for IPv6 transparent mode on Windows", "pull_request_description": "Member\nmhils commented on 28 May 2018\nThis fixes #3080.\n@spozdnyakov @Jazzelhawk: You both seem to be on Windows as well - could you please verify that this fixes all your issues?", "pull_request_status": "Merged", "issue_fixed_time": "2018-05-30T18:35:47Z", "files_changed": [["776", "mitmproxy/platform/windows.py"]]}, "319": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3079", "issue_id": "#3079", "issue_summary": "Tunneling RTSP over HTTP", "issue_description": "MarvinSmarDTV commented on 26 Apr 2018\nHi,\nI use your proxy in transparent mode for intercepting traffic between an IP camera and a client. I want to modify on the fly the ONVIF command sent to the camera.\nDuring my tests the client requests a RTSP stream over HTTP by sending a HTTP GET request to the server and the server respond with 200 OK without \"Content-Length\" header because it will send more data next. See https://opensource.apple.com/source/QuickTimeStreamingServer/QuickTimeStreamingServer-412.42/Documentation/RTSP_Over_HTTP.pdf for more details.\nThe problem is that mitmproxy doesn't forward the response to the client.\nThe response looks like this:\nHTTP/1.1 200 OK \nConnection: close \nContent-Type: application/x-rtsp-tunnelled \nHow can I handle this please ?\nSystem information\nMitmproxy: 3.0.4\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.14.0-kali3-amd64-x86_64-with-Kali-kali-rolling-kali-rolling", "issue_status": "Closed", "issue_reporting_time": "2018-04-26T11:50:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "320": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3074", "issue_id": "#3074", "issue_summary": "Command language", "issue_description": "Member\ncortesi commented on 24 Apr 2018\nThe aim of this ticket is to come up with an on-paper design for an extension to the mitmproxy command language, before @kajojify moves to implementation. This is a GSoC project, but anyone should feel free to contribute to the discussion.\nContext\nThe most significant change to mitmproxy in the last few years has been the shift to a modular core. Under this system, functionality is implemented in completely self-contained addons. Users interact with addons (and by extension with mitmproxy itself) ONLY through commands and options. Commands have globally unique names, a set of typed arguments, and a single typed return value. The command language we're discussing here is strictly the textual language users use to invoke and combine these typed addon commands.\nAt the moment, the command language is used in two places:\nThe interactive command prompt of the console app.\nConsole key bindings, where all user interaction occurs through commands bound to keys.\nIn coming releases, the command language will be even more prominent:\nThere will be a new key binding configuration file for customizing key bindings. #2963\nAll tools will support commands passed on the command-line, to be run at startup and shutdown. See discussion in #2963.\nWe're considering a new primitive called Actions. These are compound commands, like key bindings, but not bound to keys. See discussion in #2718.\nMitmweb will need to expose commands in some form to users. We'll have to discuss how to do this without re-implementing parsing on the client side.\nAims\nWhat we're trying to achieve here is a language that works at two extrema:\nOn the interactive prompt and the command-line, it has to be terse and minimal. Any extra keystroke here has to be very clearly motivated. The current expression for short commands is literally as simple as possible, and probably can't be improved.\nFor commands can be composed of multiple subcommands - we have examples of up to 4 combined commands in key bindings - the language has to be readable, clear and minimise error.\nWe should also keep in mind that it is explicitly not an aim to replace Python. Complicated commands are best expressed as full addons written in Python. This means that I want to be cautious about flow control in the command language - it might never be needed at all. There is a separate discussion to be had about making cross-addon invocation of commands better from within Python.\nCurrent language\nCommands support a small number of predefined argument and return value types. For each type, we define a parser, which converts a textual representation given by the user to the underlying type, a tab completer for interactive use, and a validator that checks whether an arbitrary Python value is a valid value. We know the arity of all functions up-front (with the exception of varargs as the last argument to a command). That lets us have a complete parser with no grouping operators.\nSyntactically, the language is very simple. It consists of a list of possibly quoted strings that can either be command names or arguments (as interpreted through the appropriate type parser).\nThe text representation of a type value can be expanded in complex ways. For instance, mitmproxy's core primitive is the flow, and the current language supports sophisticated ways to select flows from the current session on the command-line. Another example is the cuts mechanism, which will be much more prominent in future releases. This expressiveness is a critical feature that I would like to maintain.\nLet's structure discussion around a set of examples that cover common use-cases. Below, I give a set of definitions in terms of the current language, along with a motivation and explanation. Please accompany concrete language suggestions with a similar table expressing the same examples, and any new ones you think are relevant.\nCommand Description\nview.remove @marked Interactive. Remove all marked flows.\nreplay.client \"~h google.com\" Interactive. Replay all flows for host google.com.\ncut.save @all server_conn.address.host ~/hosts.csv Complex interactive. Select the server host from all flows, and save to file.\nconsole.choose.cmd Format export.formats console.command export.file {choice} @focus Complex key binding. This composes 4 commands - console.choose.cmd takes a prompt, a command to invoke to retrieve a set of options, and a command to invoke once the user has selected an option with a selected argument. A good example of something that is hard to parse in the current language, and which may in fact be hard in any variant. Anything much more complicated than this should be expressed in Python.\nImplementation\nImplementations should maintain current usability features like tab expansion and syntax highlighting for partial commands. This means that parsers must be incremental. It also means that a parser needs to be reversible - we should be able to parse a command string, annotate it with syntax highlighting, and then recompose it on the command line for the user to continue editing. Please see the current implementation for how all of this works.\nWe should aim to elaborate the language that's currently there step-by-step, rather than attempting a wholesale re-implementation. Please try to make proposals incremental, and tease separable ideas out into separate proposals.", "issue_status": "Closed", "issue_reporting_time": "2018-04-24T00:27:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "321": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3072", "issue_id": "#3072", "issue_summary": "query string arrays are not fully displayed", "issue_description": "Contributor\nStevenVanAcker commented on 23 Apr 2018 \u2022\nedited by Kriechi\nSteps to reproduce the problem:\nvisit through mitmproxy/mitmdump e.g. http://example.com/?first=value&arr[]=foo+bar&arr[]=baz\nCheck the query parameters in the request\nNotice that they contain more data than mitmproxy/mitmdump shows\nAny other comments? What have you tried so far?\nThe following script shows all the data:\n#!/usr/bin/env python3\n\nfrom urllib.parse import urlparse, parse_qs\n\nurl = \"http://example.com/?first=value&arr[]=foo+bar&arr[]=baz\"\nparts = urlparse(url)\nprint(parse_qs(parts.query))\nOutput:\n{'first': ['value'], 'arr[]': ['foo bar', 'baz']}\nBut mitmproxy/mitmdump only shows:\n    first: value\n    arr[]: foo bar\nSystem information\nMitmproxy: 3.0.4\nPython: 3.5.2\nOpenSSL: OpenSSL 1.0.2g 1 Mar 2016\nPlatform: Linux-4.10.0-42-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-04-23T09:04:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "322": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3068", "issue_id": "#3068", "issue_summary": "A New Logo Proposal", "issue_description": "LuigiBaute commented on 17 Apr 2018\nHello, I'd like to colaborate to this project by delivering a new logo proposal that is more alike with the mame of the proxy, I'm available if this is of your interest.", "issue_status": "Closed", "issue_reporting_time": "2018-04-17T17:44:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "323": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3067", "issue_id": "#3067", "issue_summary": "[mitmweb] CTRL-C not working", "issue_description": "CorTal commented on 17 Apr 2018\nSteps to reproduce the problem:\n1.Start mitmweb\n2.Try to shutdown with CTRL-C\n3.Nothing happens\nAny other comments? What have you tried so far?\nWith the signal handler not being implemented on Windows, CTRL-C on mitmweb is not doing anything. On top of that the message \"Proxy server listening on ...\" doesn't appear anymore.\nI found this workaround that I tested myself :\nhttps://stackoverflow.com/questions/27480967/why-does-the-asyncios-event-loop-suppress-the-keyboardinterrupt-on-windows\nIt's working, it's just that it's not a clean exit of the program\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-04-17T08:37:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "324": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3066", "issue_id": "#3066", "issue_summary": "[mitmweb] asyncio has no attribute call_soon", "issue_description": "CorTal commented on 17 Apr 2018\nSteps to reproduce the problem:\n1.Launch mitmweb\n2.Save some flow\n3.Load those flows\nAny other comments? What have you tried so far?\nmitmproxy/mitmproxy/tools/web/app.py\nLines 238 to 239 in 0fa1280\n for i in io.FlowReader(bio).stream(): \n     asyncio.call_soon(self.master.load_flow, i) \nI replaced this line with asyncio.ensure_future(self.master.load_flows(i)) to make the loading works.\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-04-17T08:21:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "325": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3065", "issue_id": "#3065", "issue_summary": "how to run mitmdump backend", "issue_description": "coderzhw commented on 17 Apr 2018 \u2022\nedited\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2018-04-17T05:15:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "326": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3061", "issue_id": "#3061", "issue_summary": "add_signal_handler is strictly UNIX only.", "issue_description": "Contributor\nfenilgandhi commented on 15 Apr 2018 \u2022\nedited\nmitmproxy/mitmproxy/tools/main.py\nLine 124 in 4e126c0\n loop.add_signal_handler(getattr(signal, signame), master.shutdown) \n\nAccording to the asyncio documentation for Python 3.6 , add_signal_handler is supported for UNIX system only. I haven't experienced or tested this issue but it maybe a potential risk since mitmproxy supports multiple platforms.\nIf someone has a Windows OS and/or some knowledge about asyncio maybe you could verify this.", "issue_status": "Closed", "issue_reporting_time": "2018-04-15T06:53:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "327": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3060", "issue_id": "#3060", "issue_summary": "har_dump.py does not convert the req-res in order they were exchanged.", "issue_description": "avee137 commented on 15 Apr 2018\nSteps to reproduce the problem:\n1.visit 10 sites one after other. capture the dump using mitmdump.\n2.convert the dump to har format using har_dump.py\n3.the order in which the GET request to sites appear in har is not same as the order they were visited,\nor the order which appears in mitmproxy console when we load the captured dump file\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 3.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.10.0-42-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-04-15T03:51:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "328": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3058", "issue_id": "#3058", "issue_summary": "save dump file per hour", "issue_description": "coderzhw commented on 14 Apr 2018\nSteps to reproduce the problem:\nI want to save the output file per hour,How can I do?\nmitmproxy -w output\nthis command just save one file,I want to save this file by hour,Can you help me?\nAny other comments? What have you tried so far?\nhttps://groups.google.com/forum/#!topic/mitmproxy/4C-4FiS4W94\nthis man has the same question,please help me ~\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-04-14T15:47:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "329": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3053", "issue_id": "#3053", "issue_summary": "Use Python 3.6 variable type annotations", "issue_description": "Member\nmhils commented on 13 Apr 2018\nA super easy task for someone who wants to get started working on mitmproxy: There are quite a few occasions in the codebase where we still use old-style variable type annotations, e.g. here:\nmitmproxy/mitmproxy/websocket.py\nLine 66 in 660aa87\n self.messages = []  # type: List[WebSocketMessage] \nIn Python 3.6 this can be expressed much more nicely without the use of a comment:\nself.messages: List[WebSocketMessage] = []\n(see https://docs.python.org/3.6/whatsnew/3.6.html#whatsnew36-pep526)\nA great beginner task to get familar with the whole development process would be to go through the codebase and replace all occurences of # type: with the proper new annotation form. That should be pretty straightforward to do, so this issue is strictly meant for first time contributors only.", "issue_status": "Closed", "issue_reporting_time": "2018-04-13T05:41:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "330": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3052", "issue_id": "#3052", "issue_summary": "GRPC proxy issue", "issue_description": "lars1298 commented on 11 Apr 2018 \u2022\nedited\nSteps to reproduce the problem:\nAttempt to proxy an SSL session over HTTP2\nSee that connection is dropped\nAny other comments? What have you tried so far?\nThe server is only requiring self-signed certificates installed on the client, so it really not a certificate issue. Is it possible the stream of data is too fast for a proxy interruption?\nSystem information\nKali Linux, Rolling\nroot@kali:~/Downloads# ./mitmproxy --version\nMitmproxy: 3.0.4 binary\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Linux-4.14.0-kali3-amd64-x86_64-with-debian-kali-rollin\n1", "issue_status": "Closed", "issue_reporting_time": "2018-04-10T23:58:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "331": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3051", "issue_id": "#3051", "issue_summary": "mitmdump v3.0.4 doesn't accept filter for positional argument", "issue_description": "kikuyan commented on 10 Apr 2018\nSteps to reproduce the problem:\nmitmdump '~u google.com'\nand I get:\nTraceback (most recent call last):\nFile \"release/specs/mitmdump\", line 3, in\nFile \"mitmproxy/tools/main.py\", line 155, in mitmdump\nFile \"mitmproxy/tools/main.py\", line 116, in run\nFile \"mitmproxy/optmanager.py\", line 212, in update\nKeyError: 'Unknown options: view_filter'\n[5149] Failed to execute script mitmdump\nAny other comments? What have you tried so far?\nmitmdump --set dumper_filter='~u google.com'\nworks, but not so handy like v3.0.3 or before.\nMaybe help text needs update, too. It is saying view_filter option.\nmitmdump --help\nusage: mitmdump [options] [filter]\npositional arguments:\nfilter_args Filter expression, equivalent to setting both the\nview_filter and save_stream_filter options.\nSystem information\nmitmdump --version\nMitmproxy: 3.0.4 binary\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0h 27 Mar 2018\nPlatform: Darwin-16.7.0-x86_64-i386-64bit\n1", "issue_status": "Closed", "issue_reporting_time": "2018-04-10T04:40:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "332": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3047", "issue_id": "#3047", "issue_summary": "spoof_source_address cannot work alone", "issue_description": "samiux commented on 6 Apr 2018\nThe mitmproxy version is 3.0.4\nThe python version is 3.6\nThe iptable rule :\nsudo iptables -t nat -A PREROUTING -i eth0 -p tcp --match multiport --dport 80,443 -j REDIRECT --to-port 8080\nThe command to run :\nmitmdump -p 8080 -s /etc/myscript/myscript.py -m transparent -q -k --certs *.mysite.com=/etc/mycert/mysite.pem --set spoof_source_address=true\nThe result :\n502 Bad Gateway\nProtocolException('Server connection to ('192.168.20.100', 443) failed: Error connecting to \"192.168.20.100\": [Errno 99] Cannot assign requested address',)\nThe findings :\nWhen \"spoof_source_address\" is used alone, it will crash with the captioned error.\nWhen \"spoof_source_address\" used with \"upstream_bind_address\" and \"upstream_bind_address\" not blanks, it will running smoothly.\nIf \"upstream_bind_address\" is blanked with \"spoof_source_address\", it will also crash with the captioned error.\nCan \"spoof_source_address\" work alone? In my understanding, \"spoof_source_address\" will show the original source client IP address. Am I right?", "issue_status": "Closed", "issue_reporting_time": "2018-04-06T03:52:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "333": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3043", "issue_id": "#3043", "issue_summary": "Random requests fail with \"Server disconnected, 502\"", "issue_description": "knlr commented on 5 Apr 2018\nRandom requests (~1 in 5) fail with the above message in the flow list in red.\nThe client receives the following response:\n{ Status Code: 502, Headers {\nConnection = (\nclose\n);\n\"Content-Length\" = (\n256\n);\n\"Content-Type\" = (\n\"text/html\"\n);\nServer = (\n\"mitmproxy 3.0.3\"\n);\n} }\nSteps to reproduce the problem:\nUse mitmproxy\nAny other comments? What have you tried so far?\nI'm developing iOS apps and have my device pointing to mitmproxy that runs on my Mac.\nTested without mitmproxy and all requests succeed.\nTried different web services (apps) and they all fail randomly.\nSystem information\nMitmproxy: 3.0.3\nPython: 3.6.5\nOpenSSL: OpenSSL 1.0.2o 27 Mar 2018\nPlatform: Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-04-05T11:52:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "334": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3042", "issue_id": "#3042", "issue_summary": "--set spoof_source_address does not work with -s switch", "issue_description": "samiux commented on 5 Apr 2018\nThe mitmproxy version is 3.0.3\nThe python version is 3.6\nThe iptable rule :\nsudo iptables -t nat -A PREROUTING -i eth0 -p tcp --match multiport --dport 80,443 -j REDIRECT --to-port 8080\nThe command to run :\nmitmdump -p 8080 -s /etc/myscript/myscript.py -m transparent -q -k --certs *.mysite.com=/etc/mycert/mysite.pem --set spoof_source_address=true\nThe result :\n502 Bad Gateway\nProtocolException('Server connection to ('192.168.20.100', 443) failed: Error connecting to \"192.168.20.100\": [Errno 99] Cannot assign requested address',)\nAny idea?", "issue_status": "Closed", "issue_reporting_time": "2018-04-05T02:22:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "335": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3040", "issue_id": "#3040", "issue_summary": "Bug Report: Crash when reading application/gzip encoded file", "issue_description": "afjoseph commented on 4 Apr 2018\nSteps to reproduce the problem:\nSetup Android with an SSL certificate and hook it up as a client on port 3223\nmitmproxy -p 3223\nSend a POST request with an application/gzip encoded body from the client (Android device) to a server\nThe POST request appears on mitmproxy. If I press enter on it, it crashes. Here's the crash log:\n~/Desktop/test \u00bb mitmproxy -p 3223                                                                                                 ab@391232\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 225, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 286, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 384, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 788, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 816, in _loop\n    self._entering_idle()\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 777, in _entering_idle\n    callback()\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 572, in entering_idle\n    self.draw_screen()\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 586, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/decoration.py\", line 226, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 1765, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1086, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/listbox.py\", line 501, in render\n    canvas = widget.render((maxcol,))\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 144, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 1004, in render\n    return apply_text_layout(text, attr, trans, maxcol)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/canvas.py\", line 1315, in apply_text_layout\n    return TextCanvas(t, a, c, maxcol=maxcol)\n  File \"/usr/local/Cellar/mitmproxy/3.0.3_2/libexec/lib/python3.6/site-packages/urwid/canvas.py\", line 358, in __init__\n    raise CanvasError(\"Canvas text is wider than the maxcol specified \\n%r\\n%r\\n%r\"%(maxcol,widths,text))\nurwid.canvas.CanvasError: Canvas text is wider than the maxcol specified\n146\n[146, 147, 146, 94, 146, 140]\n[b'an: .?........?Vm??8.?+(??Mj;/.?S?????e+]_.9?.?u??q?r???N??.?3?..?=?g?g????Fh?z?/????EE?\\t??Z{s?.???.????xs0.m??;?m?cB?8?)?,??HC??.?..???<$?', b\"?9?..gq??L.hD???Y?<.?H?..Q?'??,??t?R@?T^m??G?.b?R??4?/A)KPJ.?b?c<?.??.Fs<??.?0jEY??.?jmM?N^.=Y?5?m..??????CO????`... ??.???V?.;?BD?./f?I??o7???zzlL\", b\"]H%??h?..?;??X?{.7Tu??w.??F?..8@?.?JA?.?Ga?#???.g#/?B??x????@?>????<N?h?????gd|.T)..?.Yn'???.??A/?4w??.5F?sur????R#V??3?O??.?.,(A?Ae?=???B????N*>?\", b\"?.??.O??Ar!?=?k??h)?*zG?F>|}E..??/???N?o'?57??$@.??..?.?.}?\\\\?!??.?{.?q??cT??.f????v=?.??)T?`.?\", b'??.?Y???u?.}?>1??y??\\t??w?.??..tl?B??.?.8J9?k%?~?*E?u.h??8!?;?.?r]Q{\\\\I?`9???^qG.<C8qfX???DwJ?B.\\\\?V??x`..%(?^Y?.??B1??X.Y??Q??.DC?.t?i_??l?EPm?.~q??', b'???n???w?B?[?3u??r5??!r?]?u?DFyfd.?f\\\\?4W??,J?T{y.?7?$?.0Q?????k?.}.???W?(..:n?..Eu?A]G8?/.?<??bbO1?.?d.?..??u9?W?A??/v?.n??66?f?????.A?8<|..']\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n        https://github.com/mitmproxy/mitmproxy\nShutting down...\nSystem information\nMitmproxy: 3.0.3\nPython:    3.6.5\nOpenSSL:   OpenSSL 1.0.2o  27 Mar 2018\nPlatform:  Darwin-17.4.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-04-04T14:52:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "336": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3039", "issue_id": "#3039", "issue_summary": "High CPU usage while idling", "issue_description": "gusennan commented on 4 Apr 2018\nSteps to reproduce the problem:\nInstall mitmproxy on a Ubuntu Virtual Machine running in virtualbox\nStart TMUX and open a new window for mitmproxy\nRun mitmproxy with default settings\nRun top to monitor CPU usage, notice CPU usage for mitmproxy is around 20%. See captures from top here:\nafter-starting-mitmproxy.txt\nbefore-starting-mitmproxy.txt\n(note that the CPU usage of the top program is high in these captures since it ran in batch mode to capture savable output. Typically top drops to < 1% of CPU when run in interactive mode, but mitmproxy hovers around 20%)\nAny other comments? What have you tried so far?\nI took a look at #1112 and expected that the CPU usage would be under 1%.\nSystem information\ncode> mitmproxy --version\nMitmproxy: 3.0.3 binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-119-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-04-04T13:36:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "337": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3038", "issue_id": "#3038", "issue_summary": "Does not handle upstream closing the connection", "issue_description": "abridgett commented on 4 Apr 2018\nSteps to reproduce the problem:\nUse a setup such as redirect_requests.py\nSend a keepalive request into MITM\nThis is passed onto the upstream server and response returned (fine)\nWait a little while - upstream closes the connection with a FIN\n(MITMproxy did not respond to this)\nWait a bit longer and send another request to MITM\nMITM attempts to send this to the upstream which responds with a RST\nClient sees a 502 bad gateway error\nAny other comments? What have you tried so far?\nIn our case we were using https://www.npmjs.com/package/json-server#cli-usage as the upstream server but it appears to be complying with keepalive docs. Just very surprised we are the only people seeing this :-)\nWorkaround for us was to add flow.request.headers['Connection'] = 'close', this closed the upstream connection after each request.\nGET /config HTTP/1.1\nHost: 127.0.0.1\nConnection: keep-alive\nCache-Control: max-age=0\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Linux; Android 7.1.1; Android SDK built for x86 Build/NYC) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Mobile Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Encoding: identity\nAccept-Language: en-US,en;q=0.8\n\nHTTP/1.1 200 OK\nX-Powered-By: Express\nVary: Origin, Accept-Encoding\nAccess-Control-Allow-Credentials: true\nCache-Control: no-cache\nPragma: no-cache\nExpires: -1\nX-Content-Type-Options: nosniff\nContent-Type: application/json; charset=utf-8\nContent-Length: 4094\nETag: W/\"ffe-YXiFVkdRXmM5eFcp/fDfl4O1X+w\"\nDate: Wed, 04 Apr 2018 12:53:09 GMT\nConnection: keep-alive\n\n{\n  \"content\": {\n....\n}\n\n[ NB: FIN is sent by upstream and received by MITM here]\n\nGET /config HTTP/1.1\nHost: 127.0.0.1\nConnection: keep-alive\nCache-Control: max-age=0\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Linux; Android 7.1.1; Android SDK built for x86 Build/NYC) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.91 Mobile Safari/537.36\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Encoding: identity\nAccept-Language: en-US,en;q=0.8\nIf-None-Match: W/\"ffe-YXiFVkdRXmM5eFcp/fDfl4O1X+w\"\n \n[ RST now received]\nSystem information\nMitmproxy: 3.0.3\nPython: 3.6.5\nOpenSSL: OpenSSL 1.0.2o 27 Mar 2018\nPlatform: Darwin-17.5.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-04-04T12:56:37Z", "fixed_by": "#3044", "pull_request_summary": "fix http retry timeout", "pull_request_description": "Member\nmhils commented on 5 Apr 2018 \u2022\nedited\nThis fixes #3038. The problem with the old implementation is that self.send_request_headers(f.request) may not raise, which makes us fail in scenarios where we shouldn't.\nIf this is successful, we should roll a 3.0.x patch release.", "pull_request_status": "Merged", "issue_fixed_time": "2018-04-05T13:45:19Z", "files_changed": [["35", "mitmproxy/proxy/protocol/http.py"], ["44", "test/mitmproxy/proxy/test_server.py"]]}, "338": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3037", "issue_id": "#3037", "issue_summary": "Getting \"OSError: raw write() returned invalid length 2 (should have been between 0 and 1)\"", "issue_description": "YafimK commented on 4 Apr 2018\nGetting the following:\nTraceback (most recent call last):\nFile \"mitmproxy\\addons\\dumper.py\", line 218, in response\nFile \"mitmproxy\\addons\\dumper.py\", line 190, in echo_flow\nFile \"mitmproxy\\addons\\dumper.py\", line 138, in _echo_request_line\nFile \"mitmproxy\\addons\\dumper.py\", line 48, in echo\nFile \"site-packages\\click\\termui.py\", line 420, in secho\nFile \"site-packages\\click\\utils.py\", line 259, in echo\nFile \"site-packages\\click_compat.py\", line 577, in _safe_write\nFile \"site-packages\\colorama\\ansitowin32.py\", line 40, in write\nFile \"site-packages\\colorama\\ansitowin32.py\", line 141, in write\nFile \"site-packages\\colorama\\ansitowin32.py\", line 166, in write_and_convert\nFile \"site-packages\\colorama\\ansitowin32.py\", line 175, in write_plain_text\nOSError: raw write() returned invalid length 2 (should have been between 0 and 1)\nSteps to reproduce the problem:\nRecord any site using mitmdump 3 on windows 10 November's creators update\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 3.0.0 binary\nPython: 3.5.3\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Windows-10-10.0.16299", "issue_status": "Closed", "issue_reporting_time": "2018-04-04T12:04:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "339": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3036", "issue_id": "#3036", "issue_summary": "502 server disconnected response, SSL", "issue_description": "dsultanr commented on 4 Apr 2018 \u2022\nedited\nSteps to reproduce the problem:\nthe request must be repeated a few times (page reload), 10-15 times in chrome (mine is chromium 65.0.3325.181)\nhttps://search.tez-tour.com/tariffsearch/refs?callback=jsonp1522770924501&_=1522770924725&locale=ru&rfCityId=345\ncould be also reproduced on another host and url (ssl only)\nalso I can't reproduce the issue by curl\nHAR:\ndump.har.txt\npcap key\nCLIENT_RANDOM 73c073fb0b36203e0804d5b106daa69e827a28b8727d8f76636cf8a59a6dd729 595b421c229a47c77e5c44386070e1c630b6f249579479c38e14a334a44abb0b523dee9321cb11d1a498ae7ec74d8522\npcap from tcpdump is attached\nthere are a few successful requests and last one is unsuccessful in pcap\ncapture.zip\nchrome://net-internals output\nchrome-net-internals.txt\nfinally mitmdump -v output\nmitmdump0404.log\nSystem information\nMitmproxy: 3.0.3\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-3.10.0-693.17.1.el7.x86_64-x86_64-with-centos-7.4.1708-Core", "issue_status": "Closed", "issue_reporting_time": "2018-04-04T08:09:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "340": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3034", "issue_id": "#3034", "issue_summary": "mitm.it doesn't display any icons or allow clicking", "issue_description": "thex86guy commented on 4 Apr 2018 \u2022\nedited\nSteps to reproduce the problem:\nset up mitmproxy and visit mitm.it\nit loads but I can't click on anything nor view any icons (I do see the text though, like Windows, Android etc and the footer)\ntherefore I can't install certificates\ndoes this mean something is wrong with my setup?\nAny other comments? What have you tried so far?\nEven tried with a browser instead of mobile, didn't work\nSystem information\nmitmproxy --version\nMitmproxy: 3.0.3\nPython: 3.6.5\n2", "issue_status": "Closed", "issue_reporting_time": "2018-04-03T21:49:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "341": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3030", "issue_id": "#3030", "issue_summary": "AttributeError: 'FlowListWalker' object has no attribute 'positions'", "issue_description": "alxchk commented on 2 Apr 2018\nSteps to reproduce the problem:\nStart mitmproxy (git master, all deps are up2date)\nRecord some traffic\nPress \"End\" key\nSystem information\nVersion: b5c3883\n  File \"/home/user/Software/network/mitmproxy/mitmproxy/tools/console/master.py\", line 227, in run\n    self.loop.run()\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/main_loop.py\", line 286, in run\n    self._run()\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/main_loop.py\", line 384, in _run\n    self.event_loop.run()\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/main_loop.py\", line 788, in run\n    self._loop()\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/main_loop.py\", line 825, in _loop\n    self._watch_files[fd]()\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/raw_display.py\", line 404, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/raw_display.py\", line 502, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/main_loop.py\", line 411, in _update\n    self.process_input(keys)\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/main_loop.py\", line 511, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/user/Software/network/mitmproxy/mitmproxy/tools/console/window.py\", line 309, in keypress\n    k = super().keypress(size, k)\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/container.py\", line 1131, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/user/Software/network/mitmproxy/mitmproxy/tools/console/window.py\", line 44, in keypress\n    ret = super().keypress(size, key)\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/container.py\", line 1131, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/user/Software/network/mitmproxy/mitmproxy/tools/console/flowlist.py\", line 87, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/listbox.py\", line 1025, in keypress\n    return actual_key(self._keypress_max_right())\n  File \"/home/user/.local/lib/python3.6/site-packages/urwid/listbox.py\", line 1035, in _keypress_max_right\n    self.focus_position = next(iter(self.body.positions(reverse=True)))\nAttributeError: 'FlowListWalker' object has no attribute 'positions'", "issue_status": "Closed", "issue_reporting_time": "2018-04-02T07:57:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "342": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3024", "issue_id": "#3024", "issue_summary": "allow_remote=false does not prevent remote access", "issue_description": "vfaronov commented on 30 Mar 2018\nSteps to reproduce the problem:\nRun mitmproxy on a publicly routable host, with default configuration including listen_host=\"\", listen_port=8080, and allow_remote=false.\nFrom a host on a different network, send a request through that instance of mitmproxy, e.g. with curl --proxy http://your-host.example:8080\nThe default allow_remote=false should prevent this request from succeeding. However, it is served by mitmproxy just fine.\nAny other comments? What have you tried so far?\nI have a laptop sitting in the \u201cDMZ\u201d of a home router, which is globally IPv4 routable. I also have a VPS which is globally IPv4 routable. Both the laptop and the VPS are running Ubuntu 16.04 \u201cXenial Xerus\u201d. I can reproduce the problem with mitmproxy running on the VPS and curl on the laptop, as well as vice-versa.\nBoth tcpdump and mitmproxy\u2019s own Details pane show the request as originating from a remote network.\nI only noticed this because I saw strange flows in a mitmproxy instance that I spun up on the laptop.\nSystem information\nMitmproxy: 3.0.3 binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-116-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-03-30T14:37:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "343": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3023", "issue_id": "#3023", "issue_summary": "Custom keybindings with modifier keys don\u2019t work", "issue_description": "vfaronov commented on 30 Mar 2018\nSteps to reproduce the problem:\nRun mitmproxy\nType :console.key.bind global \"ctrl q\" console.exit to add a keybinding\nType ? to open the keybindings list\nScroll down to check that Ctrl+Q has been registered as a keybinding along with the built-in Ctrl+B and Ctrl+F\nPress Ctrl+Q\nThis should trigger the console.exit command and thus exit mitmproxy. Instead, nothing happens.\nAny other comments? What have you tried so far?\nSame if I replace ctrl q with shift pgup, so not limited to Ctrl.\nSystem information\nMitmproxy: 3.0.3 binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-116-generic-x86_64-with-debian-stretch-sid\nRunning in xfce4-terminal 0.6.3", "issue_status": "Closed", "issue_reporting_time": "2018-03-30T11:40:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "344": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3022", "issue_id": "#3022", "issue_summary": "Can\u2019t call commands from script under mitmdump", "issue_description": "vfaronov commented on 30 Mar 2018\nSteps to reproduce the problem:\nCreate /tmp/saveflows.py with the following text:\ndef done():\n    from mitmproxy import ctx\n    ctx.master.commands.call('save.file @all /tmp/all.flows')\nRun mitmdump -s /tmp/saveflows.py\nRun a few requests through this mitmdump instance.\nExit mitmdump with Ctrl+C.\nmitmdump should exit successfully and, by executing the script\u2019s done event handler, save all recorded flows into /tmp/all.flows. Instead, it crashes with a chain of tracebacks including:\nTraceback (most recent call last):\n  File \"mitmproxy/types.py\", line 359, in parse\n  File \"mitmproxy/command.py\", line 211, in call_args\nmitmproxy.exceptions.CommandError: Unknown command: view.resolve\nAny other comments? What have you tried so far?\nThe same script works as expected under mitmproxy instead of mitmdump.\nOf course, saving all flows can be accomplished with the built-in --save-stream-file option. But a general mechanism for running commands on mitmdump shutdown may be useful for purposes discussed in #2963 (comment)\nSystem information\nMitmproxy: 3.0.3 binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-116-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-03-30T10:39:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "345": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3020", "issue_id": "#3020", "issue_summary": "How to extract all content of http/https traffic flows to a txt file from mitmproxy's console view", "issue_description": "ma1vvare commented on 29 Mar 2018\nDear all,\nI'm using mitmproxy to realize man-in-the-middle attack in order to monitor the network behavior from my android emulator (API 23) on genymotion environment while opening some malware apps.\nIn the meantime, I wonder how to extract all http/https traffic flows to a txt file from mitmproxy's console view.\nI've executed \"sudo mitmdump -w outputfilePath\" but found that the mitmdump was listening on 0.0.0.0: 8080, which is out of my expect (my proxy is established on 211.21.X.XX:8887) so that the result txt file didn't meet our requirement.\nThanks for your kindly help : )", "issue_status": "Closed", "issue_reporting_time": "2018-03-29T09:22:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "346": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3019", "issue_id": "#3019", "issue_summary": "mitmproxy 3.0.3 doesn't work on \u201cFull\u201d transparent mode", "issue_description": "lovethink2 commented on 29 Mar 2018\nSteps to reproduce the problem:\nAccording to instruction at https://docs.mitmproxy.org/stable/howto-transparent/#full-transparent-mode-on-linux\nUse the command: ./mitmproxy_shim $(which mitmproxy) --mode transparent --set spoof_source_address=true\nGot an error: \"Server connection to ('xxx.xxx.xxx.xxx', 8086) failed: Error connecting to \"xxx.xxx.xxx.xxx\": [Errno 99] Cannot assign requested address\"\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 3.0.3 binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-3.10.0-514.el7.x86_64-x86_64-with-centos-7.4.1708-Core", "issue_status": "Closed", "issue_reporting_time": "2018-03-29T08:54:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "347": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3018", "issue_id": "#3018", "issue_summary": "Performance difference between mitmproxy and mitmdump", "issue_description": "pulkitsharma07 commented on 28 Mar 2018\nHi,\nI am building a tool to benchmark different mitm proxies. On initial runs, I am seeing difference between the performance of mitmproxy and mitmdump (v3.0.3).\nYou can find the entire report here: https://github.com/pulkitsharma07/proxybench#reporting\nFor the HTTPS Stress (over HTTP/2) test, which opens https://www.httpvshttps.com/, mitmproxy is 5 times slower than mitmdump. In other benchmarks too mitmproxy is slower than mitmdump.\nI need to understand, am I doing something wrong on my end ? or is this an expected behaviour ?\nI am launching both proxies similarly with the --listen-port argument.\nThanks.", "issue_status": "Closed", "issue_reporting_time": "2018-03-28T17:38:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "348": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3017", "issue_id": "#3017", "issue_summary": "On flow.kill(), I get AttributeError: 'NoneType' object has no attribute 'connected'", "issue_description": "paskyorg commented on 28 Mar 2018 \u2022\nedited\nI want to kill some type of requests, on request event when the flow is not json and is replay.\ndef request(flow):\n    print(\"URL: {}\".format(flow.request.path))\n    if flow.request.headers.get('Content-Type', None) != \"application/json\" and flow.request.is_replay:\n        flow.kill()\nThe exception is:\nException in thread RequestReplayThread:\nTraceback (most recent call last):\nFile \"c:\\program files (x86)\\python36-32\\lib\\threading.py\", line 916, in _bootstrap_inner\nself.run()\nFile \"c:\\program files (x86)\\python36-32\\lib\\site-packages\\mitmproxy\\proxy\\protocol\\http_replay.py\", line 116, in run\nif server.connected():\nAttributeError: 'NoneType' object has no attribute 'connected'\nI'm using mitmproxy 2.0.2 with Python 3.6, on Windows 10.", "issue_status": "Closed", "issue_reporting_time": "2018-03-28T16:18:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "349": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3016", "issue_id": "#3016", "issue_summary": "Error in loading msxml3.dll in vc2015", "issue_description": "shmaylibi commented on 28 Mar 2018\nSteps to reproduce the problem:\nI want to create an instance by this docPtr.CreateInstance(__uuidof(DOMDocument30)); but result is\nInformation not available, symbols not loaded for msxml3.dll\n#import \"C:\\Windows\\SysWOW64\\msxml3.dll\"\nusing namespace MSXML2;\nAfter doing this dll is not load.\nOS : window 10\nVisual studio: 2015\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-03-28T03:06:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "350": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3013", "issue_id": "#3013", "issue_summary": "Ignor regex exclude not working", "issue_description": "jarorg commented on 25 Mar 2018 \u2022\nedited\nI try to ignore all exclude example.com and use command:\n./mitmproxy --ignore-hosts '^(?!example\\.com)' --mode transparent\nMitmproxy: 3.0.3 binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nBut not work :-(\nCan you help me tanks.", "issue_status": "Closed", "issue_reporting_time": "2018-03-25T11:40:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "351": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3011", "issue_id": "#3011", "issue_summary": "Mitmproxy crashes, when trying to add something to options, which are supported by specific command", "issue_description": "Contributor\nkajojify commented on 24 Mar 2018 \u2022\nedited\nSteps to reproduce the problem:\nRun mitmproxy.\nPress :\nEnter one of these commands: view.order.options, console.edit.focus.options, console.flowview.mode.options, console.layout.options, console.bodyview.options, console.key.contexts. Press enter.\nYou will see something like:\nPress a button twice.\nThe traceback appears:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 227, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 286, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 384, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 788, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 825, in _loop\n    self._watch_files[fd]()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 404, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 502, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 411, in _update\n    self.process_input(keys)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 511, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 309, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1131, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 44, in keypress\n    ret = super().keypress(size, key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1131, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 595, in keypress\n    *self.calculate_padding_filler(size, True)), key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1590, in keypress\n    key = self.focus.keypress(tsize, key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 2271, in keypress\n    key = w.keypress((mc,) + size[1:], key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/decoration.py\", line 386, in keypress\n    return self._original_widget.keypress((maxcol, self.height), key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 342, in keypress\n    self._w.keypress(size, key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1131, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 999, in keypress\n    key = focus_widget.keypress((maxcol,),key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 107, in keypress\n    k = self.edit_col.keypress((w,), k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 1772, in <lambda>\n    keypress = property(lambda self:get_delegate(self).keypress)\nAttributeError: 'Text' object has no attribute 'keypress'\nSystem information\nMitmproxy: 4.0.0.dev154 (commit f34932c)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-116-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-03-24T14:10:05Z", "fixed_by": "#3028", "pull_request_summary": "Fix buggy keybindings in Data Viewer overlays", "pull_request_description": "Member\nmadt1m commented on 2 Apr 2018\nFixes #3011.\nI supposed that \"grideditor\" keybindings in DataViewerOverlay were unwanted.\nI thought that adding a new context (empty, actually) for Data Viewer widgets was in line with the approach followed in the codebase. If this does not apply, or there's some keybinding (not in global) that should be processed inside those overlay, let me know and I'll try to fix :)", "pull_request_status": "Merged", "issue_fixed_time": "2018-05-11T23:24:33Z", "files_changed": [["1", "mitmproxy/tools/console/keymap.py"], ["2", "mitmproxy/tools/console/overlay.py"]]}, "352": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3009", "issue_id": "#3009", "issue_summary": "Python H11 0.8.0 Breaks mitmproxy", "issue_description": "Contributor\nOliver-Fish commented on 23 Mar 2018\nSteps to reproduce the problem:\nUpgrade from Python-h11-0.7.0 to 0.8.0\nAny other comments? What have you tried so far?\nAfter Upgrading I get the following error (Please note that 0.8.0 is now being pushed by Arch Linux Repos)\nTraceback (most recent call last):\nFile \"/usr/lib/python3.6/site-packages/pkg_resources/init.py\", line 574, in _build_master\nws.require(requires)\nFile \"/usr/lib/python3.6/site-packages/pkg_resources/init.py\", line 892, in require\nneeded = self.resolve(parse_requirements(requirements))\nFile \"/usr/lib/python3.6/site-packages/pkg_resources/init.py\", line 783, in resolve\nraise VersionConflict(dist, req).with_context(dependent_req)\npkg_resources.ContextualVersionConflict: (h11 0.8.0 (/usr/lib/python3.6/site-packages), Requirement.parse('h11~=0.7.0'), {'wsproto'})\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/usr/bin/mitmproxy\", line 6, in\nfrom pkg_resources import load_entry_point\nFile \"/usr/lib/python3.6/site-packages/pkg_resources/init.py\", line 3088, in\n@_call_aside\nFile \"/usr/lib/python3.6/site-packages/pkg_resources/init.py\", line 3072, in _call_aside\nf(*args, **kwargs)\nFile \"/usr/lib/python3.6/site-packages/pkg_resources/init.py\", line 3101, in _initialize_master_working_set\nworking_set = WorkingSet._build_master()\nFile \"/usr/lib/python3.6/site-packages/pkg_resources/init.py\", line 576, in _build_master\nreturn cls._build_from_requirements(requires)\nFile \"/usr/lib/python3.6/site-packages/pkg_resources/init.py\", line 589, in _build_from_requirements\ndists = ws.resolve(reqs, Environment())\nFile \"/usr/lib/python3.6/site-packages/pkg_resources/init.py\", line 783, in resolve\nraise VersionConflict(dist, req).with_context(dependent_req)\npkg_resources.ContextualVersionConflict: (h11 0.8.0 (/usr/lib/python3.6/site-packages), Requirement.parse('h11~=0.7.0'), {'wsproto'})\nSystem information\nMitmproxy: 3.0.3\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.15.11-1-ARCH-x86_64-with-arch", "issue_status": "Closed", "issue_reporting_time": "2018-03-23T13:13:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "353": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3007", "issue_id": "#3007", "issue_summary": "mitmweb as a central transparent mode proxy", "issue_description": "hariszukanovic commented on 22 Mar 2018\nSteps to reproduce the problem:\nRun some traffic through it for a day or so... it seems to happen much quicker when passing bigger files through it (like video streaming)\nmitmweb uses up all available system memory and system starts swapping, I am even unable to ssh into it\nAny other comments? What have you tried so far?\nIs it possible to configure the mitmweb to avoid running out of memory so it can be run constantly as a central transparent mode proxy.\nI would like to use it for debugging purposes and it would be shared by different people.\nSince mitmweb seems to keep flows in the memory, is there an option to limit this memory and throw away oldest requests as the new ones come in?\nSystem information\nMitmproxy: 3.0.3\nPython: 3.5.5\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-3.10.0-693.21.1.el7.x86_64-x86_64-with-centos-7.4.1708-Core", "issue_status": "Closed", "issue_reporting_time": "2018-03-22T09:17:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "354": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3005", "issue_id": "#3005", "issue_summary": "open har file error with charles", "issue_description": "coderzhw commented on 21 Mar 2018 \u2022\nedited\nSteps to reproduce the problem:\nI use mitmdump and har_dump.py to convert the file to har,but when Iopen it with charles,it,s error,\nMalformedJson:Use JsonReader.setLenient(true) to accept malformed JSON\nMitmproxy: 3.0.3\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-2.6.32-431.el6.x86_64-x86_64-with-centos-6.5-Final\nthe har_dump.py is\nhttps://github.com/mitmproxy/mitmproxy/blob/master/examples/complex/har_dump.py\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-03-21T01:43:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "355": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3003", "issue_id": "#3003", "issue_summary": "Chrome HTTPS TlsException(\"(-1, \\'Unexpected EOF\\')\",) TlsException(\"(104, \\'ECONNRESET\\')\",)", "issue_description": "alekseynp commented on 20 Mar 2018 \u2022\nedited by mhils\nProblem\nI'm having trouble with HTTPS only partially working with Chrome.\nMy log is littered with:\n::1:59896: Failed to send error response to client: ClientHandshakeException('Cannot establish TLS with client (sni: mtalk.google.com): TlsException(\"(-1, \\'Unexpected EOF\\')\",)',)\nand alternatively:\n::1:60456: Failed to send error response to client: ClientHandshakeException('Cannot establish TLS with client (sni: translate.googleapis.com): TlsException(\"(104, \\'ECONNRESET\\')\",)',)\nThis is definitely a problem. For one it means a lot of pages I bring up are 502 Bad Gateway.\nNo one domain is consistently good or bad.\nTypical examples:\n[::1]:60452: clientconnect\n::1:60452: Set new server address: mtalk.google.com:5228\n::1:60452: Establish TLS with client\n::1:60452: Failed to send error response to client: ClientHandshakeException('Cannot establish TLS with client (sni: mtalk.google.com): TlsException(\"(-1, \\'Unexpected EOF\\')\",)',)\n[::1]:60452: CONNECT mtalk.google.com:5228\n    Host: mtalk.google.com:5228\n    Proxy-Connection: keep-alive\n << Cannot establish TLS with client (sni: mtalk.google.com): TlsException(\"(-1, 'Unexpected EOF')\",)\nAnd\n::1:60456: serverconnect\n  -> ('translate.googleapis.com', 443)\n::1:60456: Establish TLS with server\n::1:60456: ALPN selected by server: h2\n::1:60456: Establish TLS with client\n::1:60456: ALPN for client: b'h2'\n::1:60456: Failed to send error response to client: ClientHandshakeException('Cannot establish TLS with client (sni: translate.googleapis.com): TlsException(\"(104, \\'ECONNRESET\\')\",)',)\n[::1]:60456: CONNECT translate.googleapis.com:443\n    Host: translate.googleapis.com:443\n    Proxy-Connection: keep-alive\n    User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36\n << Cannot establish TLS with client (sni: translate.googleapis.com): TlsException(\"(104, 'ECONNRESET')\",)\nBut there are successes!\n::1:60464: serverconnect\n  -> ('translate.googleapis.com', 443)\n::1:60464: Establish TLS with server\n::1:60464: ALPN selected by server: h2\n::1:60464: Establish TLS with client\n::1:60464: ALPN for client: b'h2'\n::1:60464: HTTP2 Event from client\n  -> <RemoteSettingsChanged changed_settings:{ChangedSetting(setting=SettingCodes.HEADER_TABLE_SIZE, original_value=4096, new_value=65536), ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=None, new_value=1000), ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=6291456)}>\n::1:60464: HTTP2 Event from client\n  -> <WindowUpdated stream_id:0, delta:15663105>\n::1:60464: HTTP2 Event from client\n  -> <RequestReceived stream_id:1, headers:[(b':method', b'GET'), (b':authority', b'translate.googleapis.com'), (b':scheme', b'https'), (b':path', b'/translate_a/l?client=chrome&hl=en&key=AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw'), (b'user-agent', b'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36'), (b'accept-encoding', b'gzip, deflate, br')]>\n::1:60464: HTTP2 Event from client\n  -> <StreamEnded stream_id:1>\n::1:60464: HTTP2 Event from client\n  -> <PriorityUpdated stream_id:1, weight:147, depends_on:0, exclusive:True>\n::1:60464: HTTP/2 PRIORITY frame surpressed. Use --http2-priority to enable forwarding.\n::1:60464: HTTP2 Event from server\n  -> <RemoteSettingsChanged changed_settings:{ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=None, new_value=100), ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=1048576), ChangedSetting(setting=SettingCodes.MAX_HEADER_LIST_SIZE, original_value=None, new_value=16384)}>\n::1:60464: HTTP2 Event from server\n  -> <WindowUpdated stream_id:0, delta:983041>\n::1:60464: HTTP2 Event from client\n  -> <SettingsAcknowledged changed_settings:{ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=1048576), ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=100, new_value=100), ChangedSetting(setting=SettingCodes.MAX_HEADER_LIST_SIZE, original_value=65536, new_value=16384)}>\n::1:60464: HTTP2 Event from server\n  -> <SettingsAcknowledged changed_settings:{ChangedSetting(setting=SettingCodes.HEADER_TABLE_SIZE, original_value=4096, new_value=65536), ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=6291456), ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=100, new_value=1000)}>\n::1:60464: HTTP2 Event from server\n  -> <SettingsAcknowledged changed_settings:{}>\n::1:60464: HTTP2 Event from client\n  -> <SettingsAcknowledged changed_settings:{}>\n::1:60464: request\n  -> Request(GET translate.googleapis.com:443/translate_a/l?client=chrome&hl=en&key=AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw)\n::1:60464: HTTP/2 PRIORITY information in HEADERS frame surpressed. Use --http2-priority to enable forwarding.\n::1:60464: HTTP2 Event from server\n  -> <ResponseReceived stream_id:1, headers:[(b':status', b'200'), (b'date', b'Tue, 20 Mar 2018 05:33:04 GMT'), (b'expires', b'Tue, 20 Mar 2018 05:33:04 GMT'), (b'cache-control', b'private, max-age=86400'), (b'content-type', b'application/json; charset=UTF-8'), (b'content-language', b'en'), (b'x-content-type-options', b'nosniff'), (b'content-disposition', b'attachment; filename=\"f.txt\"'), (b'content-encoding', b'gzip'), (b'server', b'HTTP server (unknown)'), (b'content-length', b'880'), (b'x-xss-protection', b'1; mode=block'), (b'alt-svc', b'hq=\":443\"; ma=2592000; quic=51303431; quic=51303339; quic=51303335,quic=\":443\"; ma=2592000; v=\"41,39,35\"')]>\n::1:60464: HTTP2 Event from server\n  -> <DataReceived stream_id:1, flow_controlled_length:886, data:1f8b08000000000002ffed95db72db3610865f45>\n::1:60464: HTTP2 Event from server\n  -> <DataReceived stream_id:1, flow_controlled_length:49, data:>\n::1:60464: HTTP2 Event from server\n  -> <StreamEnded stream_id:1>\n::1:60464: response\n  -> Response(200 , application/json; charset=UTF-8, 880b)\n[::1]:60464: GET https://translate.googleapis.com/translate_a/l?client=chrome&hl=en&key=AIzaSyBOti4mM-6x9WDnZIjIeyEU21OpBXqWBgw HTTP/2.0\n    :authority: translate.googleapis.com\n    user-agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.162 Safari/537.36\n    accept-encoding: gzip, deflate, br\n << 200  880b\n    date: Tue, 20 Mar 2018 05:33:04 GMT\n    expires: Tue, 20 Mar 2018 05:33:04 GMT\n    cache-control: private, max-age=86400\n    content-type: application/json; charset=UTF-8\n    content-language: en\n    x-content-type-options: nosniff\n    content-disposition: attachment; filename=\"f.txt\"\n    content-encoding: gzip\n    server: HTTP server (unknown)\n    content-length: 880\n    x-xss-protection: 1; mode=block\n    alt-svc: hq=\":443\"; ma=2592000; quic=51303431; quic=51303339; quic=51303335,quic=\":443\"; ma=2592000; v=\"41,39,35\"\nI run mitmdump with:\nmitmdump -v > log.log &\nand then follow with:\ngoogle-chrome --proxy-server=localhost:8080 --ignore-certificate-errors --incognito https://github.com\nI have a more complex docker container in production, but the above is enough to reproduce the error. Trusting the CA certificate enables me to drop the --ignore-certificate-errors flag but does not remove the problem.\nSystem information\nmitmdump --version\nMitmproxy: 3.0.3\nPython:    3.6.3\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\nPlatform:  Linux-4.13.0-37-generic-x86_64-with-debian-stretch-sid\nIn case it will help...\nMassive Log\nhttps://gist.github.com/mhils/05ec80e1f60e4525cbfdb3e61011e074\n(edit by @mhils: happy to delete this at anytime, just moved it out of here to reduce length)\n1", "issue_status": "Closed", "issue_reporting_time": "2018-03-20T05:45:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "356": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3002", "issue_id": "#3002", "issue_summary": "commands taking a filename should expand home dir (tilde)", "issue_description": "majewsky commented on 19 Mar 2018\nSteps to reproduce the problem:\nOpen a flow on the response tab.\nPress \"b\".\nWhen prompted for a filename, enter ~/example.\nThis says \"No such file or directory\". Entering \"/home/username/example\" works.\nSystem information\nMitmproxy: 3.0.3\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.15.10-1-ARCH-x86_64-with-arch", "issue_status": "Closed", "issue_reporting_time": "2018-03-19T12:45:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "357": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3000", "issue_id": "#3000", "issue_summary": "Number of flows not updated after setting `view filters`", "issue_description": "Contributor\nfenilgandhi commented on 19 Mar 2018 \u2022\nedited\nSteps to reproduce the problem:\nAfter setting or removing the view_filter in flows list, the number of flows in the status bar is not updated.\nopen mitmproxy\nopen some url (populate flow list)\nWithout navigating through the list, set a view filter e.g. :set view_filter=google\nThe flow list is filtered but the status bar is not updated.\nOn navigating through the focus, the status is updated.\nTry removing the view_filter. Same thing happens.\nBefore pressing any key After pressing key\nSystem information\nMitmproxy: 4.0.0.dev103(commit 3c7725a)\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.14.21-1-MANJARO-x86_64-with-arch-Manjaro-Linux", "issue_status": "Closed", "issue_reporting_time": "2018-03-19T05:52:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "358": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2993", "issue_id": "#2993", "issue_summary": "Can I use mitmproxy as a upstream backend?", "issue_description": "kjkpoi commented on 16 Mar 2018 \u2022\nedited\nIn my job, mitmproxy speed is bottleneck.\nI try to make load balancer with nginx server.\nI set my mitmproxy processes as upstream back end\nBelow example setting is my nginx setting\nhttp{\n    upstream mymitmproxy {\n        server mitmproxy.example1.com;\n        server mitmproxy.example2.com;\n        server mitmproxy.example3.com;\n    }\n  \n    server {\n        listen 8080;\n\n        location / {\n            proxy_pass http://mymitmproxy;\n        }\n    }\n}\nI check the traffic is transffered to mitm proxies but there is an error occur.\n<< Invalid HTTP request form (expected: authority or absolute, got: relative)\nHTTP protocol error in client request: Invalid HTTP request form (expected: authority or absolute, got: relative)\nSomebody help me :)\nThanks.", "issue_status": "Closed", "issue_reporting_time": "2018-03-16T12:10:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "359": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2990", "issue_id": "#2990", "issue_summary": "Keybinding \u2018M\u2019 erroneously highlighted", "issue_description": "vfaronov commented on 15 Mar 2018\nSteps to reproduce the problem:\nrun mitmproxy\ntype O to open the options editor\nmove the cursor down to default_contentview and press Enter\ntype 4 to select json\ntype q to return to the flows list\nthe status bar now says \u201c[M:json]\u201d with the \u2018M\u2019 highlighted, as if it were a shortcut\nhowever, typing M invokes \u201cToggle viewing marked flows\u201d instead\nAny other comments? What have you tried so far?\nThis is similar to #2953.\nSystem information\nMitmproxy: 3.0.3 binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-116-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-03-15T11:28:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "360": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2987", "issue_id": "#2987", "issue_summary": "How to get the first real one url?", "issue_description": "luckychelsea commented on 12 Mar 2018\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-03-12T02:29:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "361": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2984", "issue_id": "#2984", "issue_summary": "Option to pause mitmproxy", "issue_description": "0x098912378 commented on 10 Mar 2018\nIs there a command to pause request logging (new entries to the flow table)?\nYou should really update the documentation ...", "issue_status": "Closed", "issue_reporting_time": "2018-03-10T12:59:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "362": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2983", "issue_id": "#2983", "issue_summary": "Possibility to change color-scheme", "issue_description": "0x098912378 commented on 10 Mar 2018\nmitmproxy doesn't use the default terminal layout (overwriting background-color etc.). It is possible to add custom color, or reset the background to the default terminal-background?", "issue_status": "Closed", "issue_reporting_time": "2018-03-10T11:27:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "363": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2982", "issue_id": "#2982", "issue_summary": "Bad HTTP request line: b'\\x00`\\x16...", "issue_description": "kenorb commented on 10 Mar 2018\nSteps to reproduce the problem:\nI've run mitmdump and I'm connected via app to localhost:443 and I've got this error:\n$ sudo mitmdump --mode reverse:https://173.234.x.x:443/ -p 443\nProxy server listening at http://*:443\n127.0.0.1:50566: clientconnect\n << Bad HTTP request line: b'\\x00`\\x16\\x95t\\x8e\\x93\\xcdw\\xae\\x0f\\xa6]\\xea\\xc7\\x83\\x88\\x7f\\x9d\\xc3\\x8e\\\\h\\xc8\\xf4-bj\\xd6'\n127.0.0.1:50566: HTTP protocol error in client request: Bad HTTP request line: b'\\x00`\\x16\\x95t\\x8e\\x93\\xcdw\\xae\\x0f\\xa6]\\xea\\xc7\\x83\\x88\\x7f\\x9d\\xc3\\x8e\\\\h\\xc8\\xf4-bj\\xd6'\n127.0.0.1:50566: clientdisconnect\n127.0.0.1:50592: clientconnect\nI'm using MetaTrader 4 platform to connect to the server and I'd like to see the traffic between the server. I believe it may use some custom binary protocol? Is there any way that I can dump the binary format instead?\nSystem information\n$ mitmdump --version\nMitmproxy: 3.0.3 \nPython:    3.6.4\nOpenSSL:   OpenSSL 1.0.2n  7 Dec 2017\nPlatform:  Darwin-17.3.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-03-09T22:43:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "364": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2981", "issue_id": "#2981", "issue_summary": "Icons on About Certificates page aren't clickable", "issue_description": "kenorb commented on 10 Mar 2018\nSteps to reproduce the problem:\nGo to: https://docs.mitmproxy.org/stable/concepts-certificates/\nClick on one of the icons in Quick Setup section.\nAny other comments? What have you tried so far?\nNothing happens. No errors in DevTools\nSystem information\nTested on Chrome 66.0.3350.0 and Firefox Quantum 60.0b1 on macOS High Sierra.", "issue_status": "Closed", "issue_reporting_time": "2018-03-09T21:56:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "365": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2979", "issue_id": "#2979", "issue_summary": "Log message encode error", "issue_description": "Gigiarum commented on 8 Mar 2018\nSteps to reproduce the problem:\nStart mitmdump with this script\nimport base64\n\nfrom mitmproxy import ctx\nfrom mitmproxy.utils import strutils\n\n\ndef response(flow):\n    ctx.log.info(\"url=[{}].\".format(flow.request.url))\n\n    mimeType = flow.response.headers.get('Content-Type', '')\n    ctx.log.info(\"mimeType=[{}]\".format(mimeType))\n\n    if strutils.is_mostly_bin(flow.response.content):\n        ctx.log.info(\"encoding=[base64]\")\n        text = base64.b64encode(flow.response.content).decode() # Store binary data as base64\n    else:\n        text = flow.response.get_text(strict=False)\n    ctx.log.info(\"text=[{}]\".format(text))\nConnect to this url\nThis exception will throw when the script tries to print text to log\nAddon error: Traceback (most recent call last):\n  File \"/root/.pyenv/versions/3.6.3/lib/python3.6/site-packages/mitmproxy/addons/termlog.py\", line 37, in log\n    err=(e.level == \"error\")\n  File \"/root/.pyenv/versions/3.6.3/lib/python3.6/site-packages/click/termui.py\", line 420, in secho\n    return echo(style(text, **styles), file=file, nl=nl, err=err, color=color)\n  File \"/root/.pyenv/versions/3.6.3/lib/python3.6/site-packages/click/utils.py\", line 259, in echo\n    file.write(message)\nUnicodeEncodeError: 'ascii' codec can't encode characters in position 37-40: ordinal not in range(128)\nAny other comments? What have you tried so far?\nIt seems the problem is in the get_text function of Message class.\nSame exception when you point to a url returned with mimeType \"text/html; charset=ISO-8859-1\".\nSystem information\nMitmproxy: 3.0.3\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-3.16.0-5-amd64-x86_64-with-debian-8.9\nI described partially the problem here.", "issue_status": "Closed", "issue_reporting_time": "2018-03-08T10:24:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "366": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2973", "issue_id": "#2973", "issue_summary": "Crash when scrolling to last line of the flow", "issue_description": "sebw commented on 7 Mar 2018\nSteps to reproduce the problem:\nOpen mitmproxy\nCreate some traffic\nTry to scroll down to the last line of the \"Flows\" by using the \"end\" key on the keyboard\nAny other comments? What have you tried so far?\nSystem information\n./mitmproxy --version\nMitmproxy: 3.0.3 binary\nPython:    3.5.2\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\nPlatform:  Linux-4.14.14-300.fc27.x86_64-x86_64-with-fedora-27-Twenty_Seven\nTraceback (most recent call last):\n  File \"mitmproxy/tools/console/master.py\", line 225, in run\n  File \"site-packages/urwid/main_loop.py\", line 286, in run\n  File \"site-packages/urwid/main_loop.py\", line 384, in _run\n  File \"site-packages/urwid/main_loop.py\", line 788, in run\n  File \"site-packages/urwid/main_loop.py\", line 825, in _loop\n  File \"site-packages/urwid/raw_display.py\", line 404, in <lambda>\n  File \"site-packages/urwid/raw_display.py\", line 502, in parse_input\n  File \"site-packages/urwid/main_loop.py\", line 411, in _update\n  File \"site-packages/urwid/main_loop.py\", line 511, in process_input\n  File \"mitmproxy/tools/console/window.py\", line 309, in keypress\n  File \"site-packages/urwid/container.py\", line 1131, in keypress\n  File \"mitmproxy/tools/console/window.py\", line 44, in keypress\n  File \"site-packages/urwid/container.py\", line 1131, in keypress\n  File \"mitmproxy/tools/console/flowlist.py\", line 87, in keypress\n  File \"site-packages/urwid/listbox.py\", line 1025, in keypress\n  File \"site-packages/urwid/listbox.py\", line 1035, in _keypress_max_right\nAttributeError: 'FlowListWalker' object has no attribute 'positions'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2018-03-07T12:09:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "367": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2970", "issue_id": "#2970", "issue_summary": "How can I speed up mimproxy", "issue_description": "kjkpoi commented on 7 Mar 2018\nIn my system, mitmproxy is a bottleneck.\nUsually, I visit websites through mitmproxy.\nI found cpu usage is really high (over 120% of linux 'top' command), it makes website connection slower.\nHow can I speed up mitmproxy.\nIn addition, I use mitmdump and scripting.\nThanks.", "issue_status": "Closed", "issue_reporting_time": "2018-03-07T06:33:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "368": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2969", "issue_id": "#2969", "issue_summary": "Setting View Filter shows Addon Error in Eventlog", "issue_description": "Contributor\nfenilgandhi commented on 7 Mar 2018\nerror: Addon error: Traceback (most recent call last):\n    File \"/home/coldfire/Projects/mitmproxy/mitmproxy/addons/view.py\", line 521, in update\n        idx = self._view.index(f)\n    File \"/home/coldfire/Projects/mitmproxy/venv/lib/python3.6/site-packages/sortedcontainers/sortedlist.py\", line 2343, in index\n        raise ValueError('{0!r} is not in list'.format(val))\n    File \"/home/coldfire/Projects/mitmproxy/mitmproxy/http.py\", line 182, in __repr__\n        return s.format(flow=self)\n    File \"/home/coldfire/Projects/mitmproxy/mitmproxy/connections.py\", line 215, in __repr__\n        host=self.address[0],\nTypeError: 'NoneType' object is not subscriptable\nSteps to reproduce the problem:\nOpen mitmproxy\nset a value for view_filter in Options or using the : set view_filter={str}\nOpen a attached browser and open any url\nQuit the browser and Open the Eventlog in mitmproxy.\nAny other comments? What have you tried so far?\nAnother error occuring for the view_filter option. I was working on a fix for #2801 #2951 when i noticed this other error occurs if any value is setup in view_filter. I think it requires a complete patch once and for all.\nSystem information\nMitmproxy: 4.0.0.dev103 (commit 77ed33b)\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.14.21-1-MANJARO-x86_64-with-arch-Manjaro-Linux", "issue_status": "Closed", "issue_reporting_time": "2018-03-07T06:22:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "369": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2967", "issue_id": "#2967", "issue_summary": "OSError: Binding to 'localhost' is prohibited. Please use '::1' or '127.0.0.1' directly.", "issue_description": "GHXST01 commented on 7 Mar 2018\nC:\\Users\\Admin>mitmweb\nTraceback (most recent call last):\n  File \"c:\\program files\\python36\\lib\\site-packages\\mitmproxy\\proxy\\server.py\", line 46, in __init__\n    (config.options.listen_host, config.options.listen_port)\n  File \"c:\\program files\\python36\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 559, in __init__\n    raise socket.error(\"Binding to 'localhost' is prohibited. Please use '::1' or '127.0.0.1' directly.\")\nOSError: Binding to 'localhost' is prohibited. Please use '::1' or '127.0.0.1' directly.\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"c:\\program files\\python36\\lib\\runpy.py\", line 193, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"c:\\program files\\python36\\lib\\runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Program Files\\Python36\\Scripts\\mitmweb.exe\\__main__.py\", line 9, in <module>\n  File \"c:\\program files\\python36\\lib\\site-packages\\mitmproxy\\tools\\main.py\", line 164, in mitmweb\n    run(web.master.WebMaster, cmdline.mitmweb, args)\n  File \"c:\\program files\\python36\\lib\\site-packages\\mitmproxy\\tools\\main.py\", line 97, in run\n    server = proxy.server.ProxyServer(pconf)\n  File \"c:\\program files\\python36\\lib\\site-packages\\mitmproxy\\proxy\\server.py\", line 51, in __init__\n    if self.socket:\nAttributeError: 'ProxyServer' object has no attribute 'socket'\nAs the error suggests, localhost should be replaced with 127.0.0.1 .\nThis is in the latest version 3.0.3", "issue_status": "Closed", "issue_reporting_time": "2018-03-06T19:04:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "370": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2965", "issue_id": "#2965", "issue_summary": "Error starting proxy server: gaierror(11001, 'getaddrinfo failed')", "issue_description": "GHXST01 commented on 6 Mar 2018\nSuddenly I am unable to launch mitmproxy, even after several reboots, besides my earlier issue it was working fine until I tried to launch it for a second time.\nmitmproxy-3.0.3-windows> .\\mitmdump.exe --set cadir=C:\\Users\\Admin\\Documents\\_custom_cert --\nshowhost --mode transparent\nError starting proxy server: gaierror(11001, 'getaddrinfo failed')\nThe error also happens with mitmweb and when there's no options supplied.", "issue_status": "Closed", "issue_reporting_time": "2018-03-06T17:32:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "371": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2964", "issue_id": "#2964", "issue_summary": "Transparent mode failure: AttributeError(\"'Resolver' object has no attribute 'wfile'\",)", "issue_description": "GHXST01 commented on 6 Mar 2018\nWhen trying to start mitmproxy in transparent mode and a custom CA directory as followed:\n.\\mitmweb.exe --set cadir=C:\\Users\\Admin\\Documents\\_custom_cert\nI get the following output:\n192.168.178.40:46345: Transparent mode failure: AttributeError(\"'Resolver' object has no attribute 'wfile'\",)\n192.168.178.40:46345: clientdisconnect\nI am forwarding port 80 and 443 from my custom router to mitmproxy listening on port 8080.\nAny idea what is causing this?", "issue_status": "Closed", "issue_reporting_time": "2018-03-06T17:00:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "372": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2963", "issue_id": "#2963", "issue_summary": "Persistence of key bindings", "issue_description": "dstd commented on 6 Mar 2018 \u2022\nedited\nEvery major release I get a broken UX due to a shortcuts change. Furthermore, when I upgraded to 3.0 I've lost my favorite feature - export to clipboard as curl command.\nBut I found that in 3.0 we have commands and configurable key bindings. So I could solve my issue with them. I thought that way, but I was wrong - all bindings I've updated got lost as soon as I quited.\nI had a quick peek into the source code, but the only explicit initialization of the keymap I found is defaultkeys.map(self.keymap) in master.py.\nIs there a way to keep the changes in key bindings between restarts, that I've missed?", "issue_status": "Closed", "issue_reporting_time": "2018-03-05T22:48:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "373": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2962", "issue_id": "#2962", "issue_summary": "User's script error handler function", "issue_description": "Contributor\narmudgal commented on 6 Mar 2018\nAs discussed with @cortesi on slack, right now whenever a user's script throws an error due to various reasons, it is being handled at different places differently.\nTherefore we can have a consistent error handler function which can be invoked whenever there is an error\nThis will also handle #2837 #2838 #2839\nFunction\nSignature\nscript_error(path, message, lineno, exception)\nWhat function will do\n\"Error in script XXX:NNN MMM\u201d where XXX is the path as specified by the user (the .path attribute of Script), NNN is a line number if we have one, and MMM is a short message\nThe idea here is to display the above mentioned message in the console app and display the traceback related to the error in the event log.", "issue_status": "Closed", "issue_reporting_time": "2018-03-05T21:38:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "374": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2960", "issue_id": "#2960", "issue_summary": "Transparent mode crashing with kernel update to 4.15.6-1", "issue_description": "kwitiii commented on 5 Mar 2018 \u2022\nedited\nSteps to reproduce the problem:\nHave an up to date arch linux machine\nrun mitmproxy or mitmdump with --mode transparent\nthe first request ushered through the application will cause it to halt\nAny other comments? What have you tried so far?\nThe offending line is dst = csock.getsockopt(socket.SOL_IP, SO_ORIGINAL_DST, 16) on line 27 of https://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/platform/linux.py\nKernel 4.15.3-1 is shown to be working still.\nOngoing forum discussion can be found here\nSystem information\nMitmproxy: 3.0.3\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.15.6-1-ARCH-x86_64-with-arch", "issue_status": "Closed", "issue_reporting_time": "2018-03-05T17:26:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "375": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2958", "issue_id": "#2958", "issue_summary": "Mysql Api", "issue_description": "c0rpse commented on 5 Mar 2018\nHow should I save flows into mysql?\nI want to save each flow in flow.response function.", "issue_status": "Closed", "issue_reporting_time": "2018-03-05T09:32:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "376": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2954", "issue_id": "#2954", "issue_summary": "Create flow Basic example", "issue_description": "RameshY703 commented on 5 Mar 2018 \u2022\nedited by mhils\nHow to create flow Basic example in latest mitmproxy.I am unable to view request and response method in master class which was available in version 2.0.2.\nThanks in advance for help.\nExample from previous version:\n#!/usr/bin/env python\n\"\"\"\n    This example shows how to build a proxy based on mitmproxy's Flow\n    primitives.\n    Heads Up: In the majority of cases, you want to use inline scripts.\n    Note that request and response messages are not automatically replied to,\n    so we need to implement handlers to do this.\n\"\"\"\nfrom mitmproxy import flow, controller, options\nfrom mitmproxy.proxy import ProxyServer, ProxyConfig\n\n\nclass MyMaster(flow.FlowMaster):\n    def run(self):\n        try:\n            flow.FlowMaster.run(self)\n        except KeyboardInterrupt:\n            self.shutdown()\n\n    @controller.handler\n    def request(self, f):\n        print(\"request\", f)\n\n    @controller.handler\n    def response(self, f):\n        print(\"response\", f)\n\n    @controller.handler\n    def error(self, f):\n        print(\"error\", f)\n\n    @controller.handler\n    def log(self, l):\n        print(\"log\", l.msg)\n\nopts = options.Options(cadir=\"~/.mitmproxy/\")\nconfig = ProxyConfig(opts)\nstate = flow.State()\nserver = ProxyServer(config)\nm = MyMaster(opts, server, state)\nm.run()", "issue_status": "Closed", "issue_reporting_time": "2018-03-04T18:44:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "377": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2953", "issue_id": "#2953", "issue_summary": "No shortcut for replacements editor", "issue_description": "vfaronov commented on 4 Mar 2018\nSteps to reproduce the problem:\nrun mitmproxy\ntype O to open the options editor\nmove the cursor down to replacements and press Enter\ntype a then /~s/foo/bar to add a replacement, and press Esc to commit\ntype q and again q to return to the flows list\nthe status bar now says \u201c[Replacing]\u201d with the \u2018R\u2019 highlighted, as if it were a shortcut\nhowever, typing R doesn\u2019t do anything\nAny other comments? What have you tried so far?\nIt seems like R was intended to be a shortcut for the replacements editor (which would be very convenient), but left out. It\u2019s not listed in the online help, either.\nIf it wasn\u2019t intended to be a shortcut, it shouldn\u2019t be highlighted in the status bar.\nSystem information\nMitmproxy: 3.0.3 binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-116-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-03-04T11:34:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "378": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2951", "issue_id": "#2951", "issue_summary": "Cannot filter by UTF-8 string", "issue_description": "vfaronov commented on 4 Mar 2018\nSteps to reproduce the problem:\nrun mitmproxy\ntype (in UTF-8) : set view_filter=~bs \u0422\u0440\u043e\u0446\u043a\u0438\u0439\n\u201cInvalid interception filter: ~bs \u0422\u0440\u043e\u0446\u043a\u0438\u0439\u201d\ntype : set view_filter=~bs trotskij\nthe filter is set and correctly limits the view to flows where response body contains \u201ctrotskij\u201d\nAny other comments? What have you tried so far?\nmitmproxy should make it possible to filter by arbitrary UTF-8 strings.\nI have LANG=en_US.UTF-8; setting LC_ALL=en_US.UTF-8 doesn\u2019t help.\nThese don\u2019t work, either:\n: set view_filter=~bs \"\u0422\u0440\u043e\u0446\u043a\u0438\u0439\" (the quotes are automatically removed after typing the second one)\n: set \"view_filter=~bs \u0422\u0440\u043e\u0446\u043a\u0438\u0439\"\n: set view_filter=~bs /\u0422\u0440\u043e\u0446\u043a\u0438\u0439/\nSystem information\nMitmproxy: 3.0.3 binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-116-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-03-04T11:21:50Z", "fixed_by": "#3486", "pull_request_summary": "filter unicode fix", "pull_request_description": "Contributor\nrjt-gupta commented on 24 Feb 2019 \u2022\nedited\nFixes #2951\nHi! Initially I thought this should be easy to fix but struggled due to wrong approach. Later I found that pyparsing included several unicode character ranges that can help to set non-ascii filters.\nWould be Glad to add if I missed something.", "pull_request_status": "Merged", "issue_fixed_time": "2019-09-28T09:44:16Z", "files_changed": [["23", "mitmproxy/flowfilter.py"], ["23", "test/mitmproxy/test_flowfilter.py"]]}, "379": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2942", "issue_id": "#2942", "issue_summary": "https only runs locally on the host.", "issue_description": "she40841 commented on 2 Mar 2018 \u2022\nedited\nSteps to reproduce the problem:\nFollow all the mitm installations - try connecting to a https website when it's done. (it wont run)\nAdd the certificate from mitm.it and try connecting to a https website again, it will connect.\nPort forward so you can you connect to the proxy on other IPs.\nWhen trying to connect to a https website on another IP you will recieve \"Your connection is not secure\" even when the certificate is installed. You will be able to connect to http links though.\nAny other comments? What have you tried so far?\nI've tried to get this to work for the past 2 days and no success. Is mitm not supposed to run on public net since i can only connect to http links.\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2018-03-02T16:01:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "380": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2940", "issue_id": "#2940", "issue_summary": "How to import bs4 in mitmproxy 3.0 scripting", "issue_description": "kjkpoi commented on 2 Mar 2018 \u2022\nedited\nSteps to reproduce the problem:\nI used to use bs4 module in mitmproxy scripting, but after 3.0 version, import bs4 makes error (ImportError: No module named 'bs4').\nIt seems to make error when import other modules.\nHow can i solve it?", "issue_status": "Closed", "issue_reporting_time": "2018-03-02T10:20:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "381": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2939", "issue_id": "#2939", "issue_summary": "Improve preformance", "issue_description": "cbenitez101 commented on 1 Mar 2018\nHi guys, I'm using the last version of MITM Proxy to inject advertisements to my hotspots users. The problem is that the performance is so poor. It takes like 2 mins. to load a webpage.\nI have the next code:\nfrom bs4 import BeautifulSoup # nice representation of the DOM\nfrom mitmproxy import flow\nfrom mitmproxy import ctx, http\nfrom mitmproxy.script import concurrent\n\"\"\"\ndef start(context, argv):\nif len(argv) < 2:\nraise ValueError(\"Script name must be provided as the first parameter\")\ncontext.script = argv[1]\n\"\"\"\nclass Injector:\ndef response(self, flow: http.HTTPFlow):\n        html = BeautifulSoup(flow.response.content, \"html.parser\")\n        if html.body and (\"text/html\" in flow.response.headers[\"content-type\"]):     # inject only for HTML resources\n       \n            if \"Content-Security-Policy\" in flow.response.headers:\n                del flow.response.headers[\"Content-Security-Policy\"]\n         \n\n\n            div = BeautifulSoup('<div id=\"advertisements\" style=\"background-color: #aaa; position:fixed; bottom:0; width:100%; height:15%; z-index:99999999999;\"><img src=\"somedir/publi-mock2.png\" style=\"min-width:100%; height:100%\"></div>', \"html.parser\")\n            html.body.insert(len(html.body.contents), div)\n\n            cdn = html.new_tag(\"script\", type=\"text/javascript\", src=\"http://code.jquery.com/jquery-3.3.1.min.js\")\n            html.body.insert(0, cdn)\n\n            cdn = html.new_tag(\"script\", type=\"text/javascript\", src=\"http://www.somedir/inject.js\")\n            html.body.insert(1, cdn)\n            flow.response.content = str(html).encode(\"utf8\")\n            print(\"script injected\")\naddons = [Injector()]\nAs you can see, I try to load an image, jquery and another js file. Any idea of how can I improve the performance?.\nThank's in advance!", "issue_status": "Closed", "issue_reporting_time": "2018-03-01T16:52:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "382": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2938", "issue_id": "#2938", "issue_summary": "Wire shark Captured TLS/SSL packet decryption using TLS master secrets with mitmproxy.(Windows 10)", "issue_description": "talhasgh commented on 1 Mar 2018\nActully in this question i'm only asking how can i decrypt the SSL packet using TLS master secrets with mitmproxy in windows 10.\nI uses the mitmproxy to capture traffic but it doesn't support .pcap format. Somewhere searching i see someone mention the this method\nuse log the TLS master secrets with mitmproxy\nWhen i dig deep into the method log the TLS master secrets with mitmproxy i get nothing that can help me understand how to use this.\nI'm asking in this form is there anyone who can help, if you tried can explain the procedure.\nI'll use wireshark to capture and decrypt the SSL and save in pcap. if you know better procedure to save data in pcap your idea will be strongly appreciated.\nWindows 10. or any version", "issue_status": "Closed", "issue_reporting_time": "2018-03-01T14:05:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "383": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2933", "issue_id": "#2933", "issue_summary": "MITMProxy Windows certificate issue... Browser revoking certificate", "issue_description": "talhasgh commented on 27 Feb 2018\nThe issue is :\nI've download the MITMProxy zip(windows exe) file from official site and install it on my pc and install.\nAfterward i tried to capture it works for HTTP but when i open any HTTPS site it show revoking certificate error.\nI dig deep into this error still facing same issue i install the certificate but never worked, or may be my methodology to use MITMProxy is not right.\nAnyone who work with MITMProxy windows can tell me the procedure and how to make MITMProxy works?\nWindows 10 OS", "issue_status": "Closed", "issue_reporting_time": "2018-02-27T17:06:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "384": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2930", "issue_id": "#2930", "issue_summary": "mitmproxy certificate directory not found and --set cadir not working on Windows", "issue_description": "CorTal commented on 26 Feb 2018 \u2022\nedited\nSteps to reproduce the problem:\n1.Install latest version of mitmproxy\n2. Try to run mitmdump without any arguments\nAny other comments? What have you tried so far?\nIn order to use mitmproxy and adapt it to my use, I did all the steps to start the development.\nI managed to make it work last Friday but now mitmdump says that it can't find the .mitmproxy repertory.\nIt might be a problem from my PATH or my environment, but then I tried to put directly the path to the file with the option \"--set cadir\", I tried to put directly in the command line the path and I got the same error.\n\nBecause of this error, I'm unable to see the --options display since it crashes before (Which can make it difficult to correct that issue).\nSo then, I went into the \"mitmproxy/options.py\" directly to put the path in the variable \"CA_DIR\", making it working.\n\nI used the working state of mitmdump to use the --options and put the output in a config file. In this config file, I modified directly the \"cadir\" line with the exact same path I wrote in the command line with --set.\n\nThen, reverted my modifications to \"options.py\" to return back to the initial state and gave my config file to the command line with --conf and made it work.\nSo I wondered that maybe the --set option wasn't working properly, but maybe I'm wrong. And I wondered too if any troubles with the Windows PATH handling got into the new updates of mitmproxy\nUPDATE 1\nAfter getting through to understand better what's going on, I realized that on start, the proxy is initiated first with default values from options.py, and then some lines after, the options are modified accordingly to the --set commands.\nSo, it may not be an issue here, but the thing is that if mitmproxy's default configuration of path to .mitmproxy is incorrect for the current system, it is not possible to put \"--set cadir='...'\" because it will crash before.\nSystem information\nMisc\nI use that issue to thank you for that amazing tool I will be using in my apprenticeship, you're doing an amazing work and I'm really grateful for giving us that tool.", "issue_status": "Closed", "issue_reporting_time": "2018-02-26T09:50:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "385": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2929", "issue_id": "#2929", "issue_summary": "WebSockets in UI", "issue_description": "kostyan5 commented on 26 Feb 2018\nAre WebSockets supported in flow view (mitmproxy or mitmweb)? I can only see websocket messages using mitmdump. Using Mitmproxy: 4.0.0.", "issue_status": "Closed", "issue_reporting_time": "2018-02-26T05:17:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "386": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2918", "issue_id": "#2918", "issue_summary": "how to write to file in mitmdump 3.02 ?", "issue_description": "StevenRoosa commented on 25 Feb 2018\nSteps to reproduce the problem:\nHow do I accomplish writing saved flows with mitmdump 3 on Linux, which would have been done in earlier versions with a command like this: ./mitmdump -nr infile_name -dddd --host > outfile_name\nAny other comments? What have you tried so far?\nI have looked in the --options, and I see reference to flow detail, but not the rest of the necessary options syntax\nSystem information\nMitmproxy: 3.0.2 binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.8.0-52-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-02-25T03:16:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "387": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2915", "issue_id": "#2915", "issue_summary": "Using external $EDITOR renders the console UI unusable", "issue_description": "philjackson commented on 25 Feb 2018\nSteps to reproduce the problem:\nSet intercept to google.com, get to the point you can edit the response.\nFrom the edit menu, pick 'a' (response body)\nEdit the body, saving the file and close the editor.\nNote that the mitmproxy UI will no longer respond to input.\nAny other comments? What have you tried so far?\nDifferent editors:\nEDITOR=emacsclient\nEDITOR=vi\nDifferent terminals: xterm, gnome-terminal\nSystem information\nMitmproxy: 3.0.2 binary\nPython:    3.5.2\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\nPlatform:  Linux-4.13.0-16-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-02-24T23:03:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "388": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2913", "issue_id": "#2913", "issue_summary": "New proxy mode documentation is outdated.", "issue_description": "Member\nmhils commented on 24 Feb 2018\nhttps://mitmproxy.org/docs/latest/concepts-modes/ still lists at least -R, which should be --mode reverse:.... This should be trivial to fix, one just needs to go through the whole document and check all proxy modes.", "issue_status": "Closed", "issue_reporting_time": "2018-02-24T17:20:47Z", "fixed_by": "#2914", "pull_request_summary": "Updating docs", "pull_request_description": "Contributor\narmudgal commented on 25 Feb 2018 \u2022\nedited\nThis fixes #2913 :)\nThe pictures also needs to be changed, is there any source of these images through which it can directly change? Otherwise I will go ahead and photoshop them.", "pull_request_status": "Merged", "issue_fixed_time": "2018-02-24T21:09:45Z", "files_changed": [["8", "docs/src/content/concepts-modes.md"]]}, "389": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2911", "issue_id": "#2911", "issue_summary": "Version 3.0.2 does not support script arguments.", "issue_description": "Contributor\nclyfish commented on 24 Feb 2018\nSteps to reproduce the problem:\n$ mitmdump -p 8080 -s './replace.py a'\nNo such script: \"./replace.py a\"\nAny other comments? What have you tried so far?\nhttps://mitmproxy.readthedocs.io/en/v2.0.2/scripting/overview.html#handling-arguments\nVersion 3.0.2 does not support script arguments.\nSystem information\nMitmproxy: 3.0.2\nPython: 3.6.1", "issue_status": "Closed", "issue_reporting_time": "2018-02-24T14:00:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "390": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2908", "issue_id": "#2908", "issue_summary": "from PIL has error in windows 8.1", "issue_description": "luochaolun commented on 24 Feb 2018\npip install pillow success,but use:\nfrom PIL import Image\nfrom mitmproxy import http\nhas error in windows 8.1", "issue_status": "Closed", "issue_reporting_time": "2018-02-24T08:07:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "391": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2906", "issue_id": "#2906", "issue_summary": "Update socks mode access commandline + documentation (v3.0.2)", "issue_description": "kaiof commented on 24 Feb 2018 \u2022\nedited\nSteps to reproduce the problem:\nmitmproxy --socks\n\"--socks is deprecated\nPlease use '--set socks=value' instead\"\nCheck online documentation at:\nhttps://mitmproxy.org/docs/latest/concepts-modes/#socks-proxy\nCheck mitmproxy --help\nAny other comments? What have you tried so far?\nThe advice given here doesn't appear to work (no combinations I tried were accepted).\nThe online documentation stops at Socks Proxy (no content)\nThe --help text shows the correct method (--mode socks5)\nSystem information\nMitmproxy: 3.0.2\nPython: 3.5.5rc1\nOpenSSL: OpenSSL 1.0.1f 6 Jan 2014\nPlatform: Linux-2.6.39.4-kat124-ga627d40-armv7l-with-debian-jessie-sid\n(Android: KatKiss Marshmallow hosting Linux Deploy: Ubuntu Trusty [armhf] using pyenv)", "issue_status": "Closed", "issue_reporting_time": "2018-02-24T00:54:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "392": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2901", "issue_id": "#2901", "issue_summary": "Body editing is broken.", "issue_description": "Member\nmhils commented on 23 Feb 2018\nFrom @kajojify:\nEnter request-body/response-body editor, then leave it and try to interact with mitmproxy.\nEverything was ok with v3.0.0rc2, but v3.0.1 stops reacting on any button.\nI can reproduce this on WSL - this needs to be fixed ASAP and probably warrants a bugfix release. I'm unfortunately super busy this weekend, so it'd be great if someone could take a closer look.", "issue_status": "Closed", "issue_reporting_time": "2018-02-23T17:33:20Z", "fixed_by": "#2902", "pull_request_summary": "Fix loss of keyboard control after spawn", "pull_request_description": "Member\ncortesi commented on 24 Feb 2018\nWe were stepping on this Urwid bug:\nurwid/urwid#285\nThe guys from pazz/alot found a fix, which I cribbed:\npazz/alot#1204\nFix #2901", "pull_request_status": "Merged", "issue_fixed_time": "2018-02-23T20:52:13Z", "files_changed": [["47", "mitmproxy/tools/console/master.py"]]}, "393": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2899", "issue_id": "#2899", "issue_summary": "Clean up dependencies", "issue_description": "Member\nmhils commented on 23 Feb 2018\nSpring cleaning! We currently declare some dependencies which are either unused or can easily be substituted:\nh11 - not used at all?\nrequests - tests + examples only.\nWe should IMHO also eventually consider removing the following dependencies, although that involves a bit of work and shouldn't be in scope for this issue:\npyasn1 - replace with asn1crypto, which is used by cryptography/pyOpenSSL\nldap3 - only used for ldap proxy auth, which should probably live outside of the core once we have a healthy addon system.\n1", "issue_status": "Closed", "issue_reporting_time": "2018-02-23T17:06:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "394": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2893", "issue_id": "#2893", "issue_summary": "docs are not working anymore", "issue_description": "ottens commented on 22 Feb 2018\nSteps to reproduce the problem:\ngo to http://docs.mitmproxy.org/en/stable/\nit shows an autogenerated index file, nothing else\n1", "issue_status": "Closed", "issue_reporting_time": "2018-02-22T14:17:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "395": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2892", "issue_id": "#2892", "issue_summary": "TestReverse.test_selfconnection is flaky.", "issue_description": "Member\nmhils commented on 22 Feb 2018\nhttps://travis-ci.org/mitmproxy/mitmproxy/jobs/344787113#L1805\nWe should make sure that has_log waits for the event queue to be empty.", "issue_status": "Closed", "issue_reporting_time": "2018-02-22T13:43:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "396": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2889", "issue_id": "#2889", "issue_summary": "Better error when a command's return type is not specified", "issue_description": "Member\ncortesi commented on 22 Feb 2018\nCurrently, when an addon command's return type is not specified, we exit silently without a visible error. This is bad.\nSo this causes mitmproxy to exit silently:\n    @command.command(\"mycommand.inc\")\n    def inc(self):\n        pass\nAnd this succeeds:\n    @command.command(\"mycommand.inc\")\n    def inc(self) -> None:\n        pass", "issue_status": "Closed", "issue_reporting_time": "2018-02-22T00:47:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "397": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2887", "issue_id": "#2887", "issue_summary": "pydoc fails on some modules", "issue_description": "Member\ncortesi commented on 22 Feb 2018\nSome of our modules fail to display in pydoc. I'd like us to be as pydoc-friendly as possible, because this is the easiest way to explore our APIs.\n> python -m pydoc mitmproxy.proxy   \nproblem in mitmproxy.proxy - AttributeError: module 'platform' has no attribute 'python_implementation'", "issue_status": "Closed", "issue_reporting_time": "2018-02-21T19:31:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "398": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2885", "issue_id": "#2885", "issue_summary": "Verbose mode not working in v3.0.0 RC2", "issue_description": "Gigiarum commented on 21 Feb 2018\nSteps to reproduce the problem:\nStart mitmdump with -v or --verbose flag\nNo DEBUG level logs prints on standard output\nAny other comments? What have you tried so far?\nIn old stable version (2.0.2) the same steps produce desired output.\nSystem information\nMitmproxy: 3.0.0.dev1136 (commit 15f525e)\nPython: 3.6.3\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-3.16.0-5-amd64-x86_64-with-debian-8.9", "issue_status": "Closed", "issue_reporting_time": "2018-02-21T09:24:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "399": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2883", "issue_id": "#2883", "issue_summary": "How can I capture all traffic network by mitmproxy ?", "issue_description": "AbedAlqaderSwedan1 commented on 20 Feb 2018 \u2022\nedited\nNot just HTTP OR HTTPS, I need to capture all traffic network, how can I do that by mitmproxy ? can I edit mitmproxy to do that?\nlike tcpdump, Wireshark captures all traffic network.", "issue_status": "Closed", "issue_reporting_time": "2018-02-20T13:23:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "400": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2882", "issue_id": "#2882", "issue_summary": "TestServerBind.test_bind failure on OSX", "issue_description": "Member\ncortesi commented on 20 Feb 2018\nI don't have time to dig into this right now, but I'm seeing the following failure on master. Perhaps related to recent IPv6 changes?\nself = <test.mitmproxy.net.test_tcp.TestServerBind object at 0x10f1fc828>\n\n    def test_bind(self):\n        \"\"\" Test to bind to a given random port. Try again if the random port turned out to be blocked. \"\"\"\n        for i in range(20):\n            random_port = random.randrange(1024, 65535)\n            try:\n                c = tcp.TCPClient(\n                    (\"127.0.0.1\", self.port), source_address=(\n                        \"127.0.0.1\", random_port))\n                with c.connect():\n>                   assert c.rfile.readline() == str((\"127.0.0.1\", random_port)).encode()\nE                   assert b\"('::ffff:12... 27754, 0, 0)\" == b\"('127.0.0.1', 27754)\"\nE                     At index 2 diff: 58 != 49\nE                     Left contains more items, first extra item: 32\nE                     Use -v to get the full diff", "issue_status": "Closed", "issue_reporting_time": "2018-02-19T20:39:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "401": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2879", "issue_id": "#2879", "issue_summary": "UI garbage appears, when we try to replay killed flow", "issue_description": "Contributor\nkajojify commented on 19 Feb 2018\nSteps to reproduce the problem:\nRun mitmproxy.\nPress i and set intercept to google.\n: set intercept=google\nTry to enter google.com in your browser.\nKill the corresponding flow by pressing X.\nPress r to replay this flow.\nSystem information\nMitmproxy: 3.0.0.dev113 (commit 93425d4)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-112-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-02-19T17:17:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "402": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2877", "issue_id": "#2877", "issue_summary": "Investigate contentview hotkeys", "issue_description": "Member\nmhils commented on 19 Feb 2018 \u2022\nedited\nAs noticed by @PaleNeutron in #2874, every contentview currently defines a hotkey, which however does not seem to be used anywhere:\nIn the script, prompt = (\"swap case text\", \"Z\") seems defined hotkey Z, but this one also not work.\nWe used to have these hotkeys to select a contentview when pressing m while viewing a flow, but we use console.choose there now, which doesn't have/need that. We need to:\nFind out if those contentview prompts are still used anywhere.\nIf not, remove them.", "issue_status": "Closed", "issue_reporting_time": "2018-02-19T14:01:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "403": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2874", "issue_id": "#2874", "issue_summary": "encoding/decoding hotkey \"z\" not actually work", "issue_description": "Contributor\nPaleNeutron commented on 19 Feb 2018\nSteps to reproduce the problem:\n1.go to flow view\n2.tap z to choose encode type or remove\n3.content-encoding header changed but the response body not\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.4\nPlatform: Darwin-17.4.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2n 7 Dec 2017\nMac version: 10.13.3 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2018-02-19T03:52:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "404": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2872", "issue_id": "#2872", "issue_summary": "Mitmproxy crashes, when we try to write a value from file into grideditor cell", "issue_description": "Contributor\nkajojify commented on 17 Feb 2018\nSteps to reproduce the problem:\nCreate a file. Put inside:\nabc\nRun mitmproxy.\nPress n -> Enter -> Enter -> e -> cookies. You will get into cookies grideditor.\nPress a -> Esc -> r (or R, also relevant for it).\nInput the path to the file with abc: console.grideditor.load ~/your_file_with_abc -> Enter.\nYou will see:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 710, in _loop\n    self._entering_idle()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 671, in _entering_idle\n    callback()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 564, in entering_idle\n    self.draw_screen()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 578, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 1750, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 1750, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 455, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 340, in calculate_visible\n    focus_widget, focus_pos = self.body.get_focus()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 227, in get_focus\n    self.lst[self.focus]\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 83, in __init__\n    w = self.editor.columns[i].Display(v)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/col_text.py\", line 18, in Display\n    return TDisplay(data, self.encoding_args)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/col_text.py\", line 31, in __init__\n    super().__init__(data.encode(*self.encoding_args))\nAttributeError: 'bytes' object has no attribute 'encode'\nAny other comments? What have you tried so far?\nThis bug is relevant for cookies, form, path, query and set-cookies grideditors.\nI didn't check carefully, but it seems to be relevant for v2.0.2 as well.\nSystem information\nMitmproxy: 3.0.0.dev113 (commit 93425d4)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-112-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-02-17T16:10:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "405": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2871", "issue_id": "#2871", "issue_summary": "Traceback during installation in Termux", "issue_description": "extbodyan commented on 17 Feb 2018 \u2022\nedited by mhils\nProcess of installation:\npip3 install mitmproxy\nCollecting mitmproxy\n  Using cached mitmproxy-2.0.2-py3-none-any.whl\nCollecting ruamel.yaml<0.14,>=0.13.2 (from mitmproxy)\n  Using cached ruamel.yaml-0.13.14.tar.gz\nCollecting kaitaistruct<0.7,>=0.6 (from mitmproxy)\n  Downloading kaitaistruct-0.6.tar.gz\nCollecting html2text<=2016.9.19,>=2016.1.8 (from mitmproxy)\n  Using cached html2text-2016.9.19.tar.gz\nCollecting pyperclip<1.6,>=1.5.22 (from mitmproxy)\n  Downloading pyperclip-1.5.32.tar.gz\nCollecting passlib<1.8,>=1.6.5 (from mitmproxy)\n  Downloading passlib-1.7.1-py2.py3-none-any.whl (498kB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 501kB 327kB/s\nCollecting pyOpenSSL<17.0,>=16.0 (from mitmproxy)\n  Downloading pyOpenSSL-16.2.0-py2.py3-none-any.whl (43kB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 51kB 722kB/s\nCollecting tornado<4.5,>=4.3 (from mitmproxy)\n  Using cached tornado-4.4.3.tar.gz\nCollecting watchdog<0.9,>=0.8.3 (from mitmproxy)\n  Using cached watchdog-0.8.3.tar.gz\nCollecting pyparsing<2.3,>=2.1.3 (from mitmproxy)\n  Using cached pyparsing-2.2.0-py2.py3-none-any.whl\nCollecting cssutils<1.1,>=1.0.1 (from mitmproxy)\n  Using cached cssutils-1.0.2-py3-none-any.whl\nCollecting h2<3,>=2.5.1 (from mitmproxy)\n  Using cached h2-2.6.2-py2.py3-none-any.whl\nRequirement already satisfied: certifi>=2015.11.20.1 in /data/data/com.termux/files/usr/lib/python3.6/site-packages (from mitmproxy)\nRequirement already satisfied: setuptools!=29.0.0,>=11.3 in /data/data/com.termux/files/usr/lib/python3.6/site-packages (from mitmproxy)\nCollecting cryptography<1.9,>=1.3 (from mitmproxy)\n  Using cached cryptography-1.8.2.tar.gz\nCollecting jsbeautifier<1.7,>=1.6.3 (from mitmproxy)\n  Using cached jsbeautifier-1.6.14.tar.gz\nCollecting hyperframe<5,>=4.0.1 (from mitmproxy)\n  Using cached hyperframe-4.0.2-py2.py3-none-any.whl\nCollecting pyasn1<0.3,>=0.1.9 (from mitmproxy)\n  Using cached pyasn1-0.2.3-py2.py3-none-any.whl\nCollecting urwid<1.4,>=1.3.1 (from mitmproxy)\n  Using cached urwid-1.3.1.tar.gz\nCollecting sortedcontainers<1.6,>=1.5.4 (from mitmproxy)\n  Using cached sortedcontainers-1.5.9-py2.py3-none-any.whl\nCollecting click<7,>=6.2 (from mitmproxy)\n  Using cached click-6.7-py2.py3-none-any.whl\nCollecting construct<2.9,>=2.8 (from mitmproxy)\n  Using cached construct-2.8.22.tar.gz\nCollecting blinker<1.5,>=1.4 (from mitmproxy)\n  Using cached blinker-1.4.tar.gz\nRequirement already satisfied: requests<3,>=2.9.1 in /data/data/com.termux/files/usr/lib/python3.6/site-packages (from mitmproxy)\nCollecting brotlipy<0.7,>=0.5.1 (from mitmproxy)\n  Using cached brotlipy-0.6.0.tar.gz\n    Complete output from command python setup.py egg_info:\n    c/_cffi_backend.c:15:10: fatal error: 'ffi.h' file not found\n    #include <ffi.h>\n             ^~~~~~~\n    1 error generated.\n    Traceback (most recent call last):\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/unixccompiler.py\", line 118, in _compile\n        extra_postargs)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/ccompiler.py\", line 909, in spawn\n_spawn_posix(cmd, search_path, dry_run=dry_run)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/spawn.py\", line 159, in _spawn_posix\n        % (cmd, exit_status))\n    distutils.errors.DistutilsExecError: command 'aarch64-linux-android-clang' failed with exit status 1\n\n    During handling of the above exception, another exception occurred:\n\n    Traceback (most recent call last):\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/core.py\", line 148, in setup\n        dist.run_commands()\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/dist.py\", line 955, in run_commands\n        self.run_command(cmd)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/dist.py\", line 974, in run_command\n        cmd_obj.run()\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/command/bdist_egg.py\", line 161, in run\n        cmd = self.call_command('install_lib', warn_dir=0)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/command/bdist_egg.py\", line 147, in call_command\n        self.run_command(cmdname)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/cmd.py\", line 313, in run_command\n        self.distribution.run_command(command)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/dist.py\", line 974, in run_command\n        cmd_obj.run()\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/command/install_lib.py\", line 11, in run\n        self.build()\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/command/install_lib.py\", line 107, in build\n        self.run_command('build_ext')\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/cmd.py\", line 313, in run_command\n        self.distribution.run_command(command)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/dist.py\", line 974, in run_command\n        cmd_obj.run()\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/command/build_ext.py\", line 75, in run\n        _build_ext.run(self)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/command/build_ext.py\", line 339, in run\n        self.build_extensions()\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/command/build_ext.py\", line 448, in build_extensions\n        self._build_extensions_serial()\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/command/build_ext.py\", line 473, in _build_extensions_serial\n        self.build_extension(ext)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/command/build_ext.py\", line 196, in build_extension\n        _build_ext.build_extension(self, ext)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/command/build_ext.py\", line 533, in build_extension\n        depends=ext.depends)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/ccompiler.py\", line 574, in compile\n        self._compile(obj, src, ext, cc_args, extra_postargs, pp_opts)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/unixccompiler.py\", line 120, in _compile\n        raise CompileError(msg)\n    distutils.errors.CompileError: command 'aarch64-linux-android-clang' failed with exit status 1\n\n    During handling of the above exception, another exception occurred:\n\n    Traceback (most recent call last):\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 157, in save_modules\n        yield saved\nFile \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 198, in setup_context\n        yield\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 248, in run_setup\n        DirectorySandbox(setup_dir).run(runner)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 278, in run\n        return func()\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 246, in runner\n        _execfile(setup_script, ns)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 47, in _execfile\n        exec(code, globals, locals)\n      File \"/data/data/com.termux/files/usr/tmp/easy_install-ovl76emg/cffi-1.11.4/setup.py\", line 236, in <module>\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/core.py\", line 163, in setup\n        raise SystemExit(\"error: \" + str(msg))\n    SystemExit: error: command 'aarch64-linux-android-clang' failed with exit status 1\n\n    During handling of the above exception, another exception occurred:\n\n    Traceback (most recent call last):\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 1101, in run_setup\n        run_setup(setup_script, args)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 251, in run_setup\n        raise\n      File \"/data/data/com.termux/files/usr/lib/python3.6/contextlib.py\", line 99, in __exit__\n        self.gen.throw(type, value, traceback)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 198, in setup_context\n        yield\n      File \"/data/data/com.termux/files/usr/lib/python3.6/contextlib.py\", line 99, in __exit__\n        self.gen.throw(type, value, traceback)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 169, in save_modules\n        saved_exc.resume()\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 144, in resume\n        six.reraise(type, exc, self._tb)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/pkg_resources/_vendor/six.py\", line 685, in reraise\n        raise value.with_traceback(tb)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 157, in save_modules\n        yield saved\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 198, in setup_context\n        yield\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 248, in run_setup\n        DirectorySandbox(setup_dir).run(runner)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 278, in run\n        return func()\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 246, in runner\n        _execfile(setup_script, ns)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/sandbox.py\", line 47, in _execfile\n        exec(code, globals, locals)\n      File \"/data/data/com.termux/files/usr/tmp/easy_install-ovl76emg/cffi-1.11.4/setup.py\", line 236, in <module>\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/core.py\", line 163, in setup\n        raise SystemExit(\"error: \" + str(msg))\n    SystemExit: error: command 'aarch64-linux-android-clang' failed with exit status 1\n\n    During handling of the above exception, another exception occurred:\n\n    Traceback (most recent call last):\nFile \"<string>\", line 1, in <module>\n      File \"/data/data/com.termux/files/usr/tmp/pip-build-u21q73o_/brotlipy/setup.py\", line 84, in <module>\n        \"Programming Language :: Python :: 3.5\",\n      File \"/data/data/com.termux/files/usr/lib/python3.6/distutils/core.py\", line 108, in setup\n        _setup_distribution = dist = klass(attrs)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/dist.py\", line 315, in __init__\n        self.fetch_build_eggs(attrs['setup_requires'])\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/dist.py\", line 361, in fetch_build_eggs\n        replace_conflicting=True,\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 850, in resolve\n        dist = best[req.key] = env.best_match(req, ws, installer)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 1122, in best_match\n        return self.obtain(req, installer)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 1134, in obtain\n        return installer(requirement)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/dist.py\", line 429, in fetch_build_egg\n        return cmd.easy_install(req)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 665, in easy_install\n        return self.install_item(spec, dist.location, tmpdir, deps)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 695, in install_item\n        dists = self.install_eggs(spec, download, tmpdir)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 876, in install_eggs\n        return self.build_and_install(setup_script, setup_base)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 1115, in build_and_install\n        self.run_setup(setup_script, setup_base, args)\n      File \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/setuptools/command/easy_install.py\", line 1103, in run_setup\n        raise DistutilsError(\"Setup script exited with %s\" % (v.args[0],))\n    distutils.errors.DistutilsError: Setup script exited with error: command 'aarch64-linux-android-clang' failed with exit status 1\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /data/data/com.termux/files/usr/tmp/pip-build-u21q73o_/brotlipy/", "issue_status": "Closed", "issue_reporting_time": "2018-02-17T16:03:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "406": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2869", "issue_id": "#2869", "issue_summary": "Inability to connect to ipv6 websites through mitmproxy from ipv6 network.", "issue_description": "Contributor\naniketpanjwani commented on 15 Feb 2018\nSteps to reproduce the problem:\nFollow instructions to setup transparent proxy on Linux on my own machine, substituting PREROUTING in the iptables ruleset with OUTPUT.\nRun mitmdump --mode transparent\nNavigate to ipv4 site (e.g. espn.com) and ipv6 site (e.g. facebook.com).\nI've done this from two networks. On one network, I have an ipv6 address (according to http://test-ipv6.com/). On the other network, I do not have an ipv6 address.\nipv4 network: Able to connect to both espn.com and facebook.com\nipv6 network: Only able to connect to espn.com. Additionally, when I use http://test-ipv6.com after doing the first two steps above, the website can no longer find my ipv6 address.\nOn the ipv6 network, I receive a message saying the following:\nClient connection was killed because allow_remote option is set to false, client IP was not a private IP and proxyauth was not set.\nTo allow remote connections set allow_remote option to true or set proxyauth option.\n[2601:246:100:cefc:7da3:3d6c:6195:5f1f]:42868: Connection killed\n[2601:246:100:cefc:7da3:3d6c:6195:5f1f]:42868: clientdisconnect\nWhen I set the allow_remote option to be true (mitmproxy --mode transparent --set allow_remote=true), I now receive the following message:\n[2601:246:100:cefc:7da3:3d6c:6195:5f1f]:57032: Transparent mode failure: FileNotFoundError(2, \u2018No such file or directory\u2019)\nAny other comments? What have you tried so far?\nI should try putting mitmproxy in a VM or Docker container. Then, I think I would instead have to use the PREROUTING chain. If the transparent proxy works from the VM/Docker container, this would indicate that the problem has to do with configuration when using the OUTPUT chain.\nI think it's reasonable that mitmproxy should support ipv6 when run on your own computer. If we can figure out what the problem is, I'd be happy to submit a pull request to the Linux transparent proxy documentation with more explicit instructions on how to set up mitmproxy. Apologies if this is a better fit in discourse, but I think this issue at the very least reflects something which could be improved in the transparent proxy documentation.\nOne hacky option would be to shut down ipv6 altogether through configuration, but I haven't figured out how to make it work. Another possibility is that this has to do with router advertisements, but simply setting the accept_ra flag to be equal to two did not work for me.\nSystem information\nMitmproxy: 3.0.0.dev1179 (commit 6d8731e)\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-21-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-02-15T15:15:35Z", "fixed_by": "#2870", "pull_request_summary": "Linux: support IPv6 destinations in transparent mode", "pull_request_description": "Member\nmhils commented on 16 Feb 2018\nThis fixes #2869 with the help of @aniketpanjwani.\n@aniketpanjwani: If you find some time could you check if this code works for you? I improved the IPv4 detection heuristic a bit. Pretty sure it should work, but I'm still mostly coding in the dark here as we can't write sensible tests for this.", "pull_request_status": "Merged", "issue_fixed_time": "2018-02-16T15:21:08Z", "files_changed": [["34", "mitmproxy/platform/linux.py"]]}, "407": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2867", "issue_id": "#2867", "issue_summary": "[Testing]test_xss_scanner.py fails without external communication", "issue_description": "Contributor\narmudgal commented on 15 Feb 2018\nSteps to reproduce the problem:\nTest your setup by typing tox without any internet connection\nAny other comments? What have you tried so far?\nThe obvious solution to this problem would be to mock the external communication that is happening here. This will also make the build slightly faster\nSystem information\nMitmproxy: 3.0.0.dev1212 (commit 6687d3f) \nPython:    3.5.2\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\nPlatform:  Linux-4.13.0-32-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-02-15T02:15:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "408": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2866", "issue_id": "#2866", "issue_summary": "Potential bug with options usage.", "issue_description": "Contributor\naniketpanjwani commented on 15 Feb 2018\nSteps to reproduce the problem:\nEnter mitmproxy --allow_remote in terminal.\nGet message:\nmitmproxy --allow_remote\nusage: mitmproxy [options]\nmitmproxy: error: unrecognized arguments: --allow_remote\nAny other comments? What have you tried so far?\nI expect to get a message telling me to enter one argument (either True or False), since allow_remote is specified as a boolean option in mitmproxy/options.py. I also see this same problem for another option - body_size_limit. Am I making a mistake in how I am using the option?\nSystem information\nMitmproxy: 3.0.0.dev1179 (commit 6d8731e)\nPython: 3.6.4\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-21-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-02-15T01:21:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "409": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2864", "issue_id": "#2864", "issue_summary": "Release mitmproxy 3.0", "issue_description": "Contributor\nasfaltboy commented on 12 Feb 2018 \u2022\nedited by mhils\nMajor items\nUpdate documentation: Scripting API, Options, Commands, ... (@cortesi)\nMinor Items\nComplete Changelog. (@mhils, @cortesi)\nFinish website. (@mhils)\nResolve remaining issues. (everyone)\n1", "issue_status": "Closed", "issue_reporting_time": "2018-02-12T17:44:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "410": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2862", "issue_id": "#2862", "issue_summary": "mitmdump 3.0.0rc2 doesn't accept arguments of script", "issue_description": "bobby7718 commented on 12 Feb 2018 \u2022\nedited\nSteps to reproduce the problem:\n1.install v3.0.0 RC2\nwget https://github.com/mitmproxy/mitmproxy/releases/download/v3.0.0rc2/mitmproxy-3.0.0.dev1136-0x15f525e-py3-none-any.whl\nsudo pip3 install mitmproxy-3.0.0.dev1136-0x15f525e-py3-none-any.whl\nMitmproxy: 3.0.0.dev1136 (commit 15f525e) \nPython:    3.5.2\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\nPlatform:  Linux-4.4.0-87-generic-x86_64-with-Ubuntu-16.04-xenial\n2.copy the example script(for 2.0) - https://github.com/mitmproxy/mitmproxy/blob/2.0.x/examples/simple/script_arguments.py\nimport argparse\n\n\nclass Replacer:\n    def __init__(self, src, dst):\n        self.src, self.dst = src, dst\n\n    def response(self, flow):\n        flow.response.replace(self.src, self.dst)\n\n\ndef start():\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"src\", type=str)\n    parser.add_argument(\"dst\", type=str)\n    args = parser.parse_args()\n    return Replacer(args.src, args.dst)\n3.run the command explained in the doc(still for 3.0) - https://github.com/mitmproxy/mitmproxy/blob/master/docs/scripting/overview.rst, see section Running scripts on saved flows.\nmitmdump -dd -s \"./script_arguments.py html fakehtml\"\nor use --flow-detail instead -dd, which seems not supported either.\nmitmdump --flow-detail 3 -s \"./script_arguments.py html fakehtml\"\noutputs of above command\n$ mitmdump -dd -s \"./script_arguments.py html fakehtml\"\nusage: mitmdump [options] [filter]\nmitmdump: error: unrecognized arguments: -dd\n\n#:~$ mitmdump --flow-detail 3 -s \"./script_arguments.py html fakehtml\"\n/usr/local/bin/mitmdump: No such script: ./script_arguments.py html fakehtml\nAny other comments? What have you tried so far?\nI checked the release notes for 3.0, don't see anything changed with regard to mitmdump's script arguments since 2.0.2.\nBelow is the output of the same command for mitmdump 2.0.2, which seems OK.\nIs there anything changed regarding mitmdump's command line options ?\n$ mitmdump -dd -s \"./script_arguments.py html fakehtml\"\nLoading script: ./script_arguments.py html fakehtml\nProxy server listening at http://0.0.0.0:8080\n\n$ mitmdump --version\nMitmproxy version: 2.0.2 (release version) \nPython version: 3.6.4\nPlatform: Darwin-16.1.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2n  7 Dec 2017\nMac version: 10.12.1 ('', '', '') x86_64\nSystem information\n#:~$ mitmdump --version\nMitmproxy: 3.0.0.dev1136 (commit 15f525e) \nPython:    3.5.2\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\nPlatform:  Linux-4.4.0-87-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-02-11T21:09:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "411": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2854", "issue_id": "#2854", "issue_summary": "Wrong behavior when specifying the configuration file", "issue_description": "LetMeR00t commented on 9 Feb 2018 \u2022\nedited\nSteps to reproduce the problem:\nContext :\nI set up a virtual machine on Windows 7 that can communicate with Internet on ports 80 and 443 only.\nMitmproxy is used as a transparent proxy for these communications in order to decrypt all HTTPS traffic. A redirection is made thanks to my iptables physical host that redirect the traffic on port 8080.\nI'm using Internet Explorer v11.0.49 and Mozilla Firefox v58.0.1 on the VM.\nI will explain 4 cases concerning this setup and the use of the configuration file :\nConfiguration for the both first tests : Cipher client used is AES256-SHA256\n1st test : browser is Firefox\nCommunication doesn't work, error on mitmproxy's interface\nit seems that mitmproxy doesn't answer to the client (that started the communication using TLSv1.0)\nThe chosen cipher is well proposed by the client in his list.\n2nd test : browser is Internet Explorer\nCommunication worked\nit seems that mitmproxy answered to the client (that started the communication using TLSv1.2)\nThe chosen cipher is well proposed by the client in his list. (of course)\nConfiguration for the both last tests : Cipher client used is ECDHE-ECDSA-AES128-SHA256\n3rd test : browser is Firefox (same behavior that the 1rst test)\nCommunication doesn't work, error on mitmproxy's interface\nit seems that mitmproxy doesn't answer to the client (that started the communication using TLSv1.0)\nThe chosen cipher seems to be proposed by the client in his list. I'm not sure regarding the last test however ...\n4th test : browser is Internet Explorer\nCommunication doesn't work, error on mitmproxy's interface\nit seems that mitmproxy doesn't answer to the client (that started the communication using TLSv1.2)\nThe chosen cipher is well proposed by the client in his list.\nAny other comments? What have you tried so far?\nAs you can see, most of the tests were unsuccessful but the context was not the problem because it's worked in test 2 as expected.\nI'm more worried about the fact that mitmproxy doesn't answer to the client ? Why did it do that ?\nMoreover, the client seems to be legitimate for the connection but he is refused ...\nI'm seeing in the code that the cipher suites are not so easily configurable as we can expect ... but the behavior of mitmproxy is very strange !\nCould you investigate on this to know if there is a bug ? In all the tests, mitmproxy should be working\nWhat I understand is that the handshake doesn't work because the server thinks that there is no cipher suite available for the client ... I would like to add that when I don't specify the cipher suite, it's working. But because I want to decrypt HTTPS using cuckoo and mitmproxy, I need to specify the cipher suites (AES GCM seems to be problematic for the decryption, see cuckoosandbox/cuckoo#2104)\nSystem information\nMitmproxy: 3.0.0.dev1180 (commit 957a630)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.13.0-32-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-02-08T20:46:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "412": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2853", "issue_id": "#2853", "issue_summary": "Transparent proxy crashes with \"too many open files\"", "issue_description": "huguesb commented on 9 Feb 2018\nSteps to reproduce the problem:\nhttps://www.digitalocean.com/community/tutorials/how-to-set-up-an-openvpn-server-on-ubuntu-16-04\nhttp://docs.mitmproxy.org/en/stable/transparent/linux.html\ncurl -v https://gutenberg.org\nSorry to post a screenshot. Somehow the dying process screws my terminal in a way that prevents me from copy/pasting the output...\nAny other comments? What have you tried so far?\nI've tried a bunch of variations of iptables rules. So far, either the vpn traffic bypasses mitmproxy entirely or mitmproxy dies... Running mitmproxy as unprivileged user or as root doesn't seem to make a difference either.\nSystem information\nmitmproxy 0.15\n$ sudo iptables -t nat -L\nChain PREROUTING (policy ACCEPT)\ntarget     prot opt source               destination\n\nChain INPUT (policy ACCEPT)\ntarget     prot opt source               destination\n\nChain OUTPUT (policy ACCEPT)\ntarget     prot opt source               destination\nREDIRECT   tcp  --  anywhere             anywhere             tcp dpt:https redir ports 8080\n\nChain POSTROUTING (policy ACCEPT)\ntarget     prot opt source               destination\nMASQUERADE  all  --  10.0.0.0/8           anywhere", "issue_status": "Closed", "issue_reporting_time": "2018-02-08T19:27:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "413": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2849", "issue_id": "#2849", "issue_summary": "import ctype error when used with --scripts SCRIPT option from mitmdump", "issue_description": "YuriyPryyma commented on 7 Feb 2018 \u2022\nedited by mhils\nSteps to reproduce the problem:\ninstall binary release\nrun mitmdump -s test.py (with import ctypes)\nOutput:\n  Addon error: Traceback (most recent call last):\n  File \"site-packages/PyInstaller/loader/pyiboot01_bootstrap.py\", line 149, in __init__\n  File \"ctypes/__init__.py\", line 347, in __init__\nOSError: command_path: cannot open shared object file: No such file or directory\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"mitmproxy/addonmanager.py\", line 67, in safecall\n  File \"mitmproxy/addons/script.py\", line 76, in tick\n  File \"mitmproxy/addonmanager.py\", line 177, in register\n  File \"mitmproxy/command.py\", line 134, in collect_commands\n  File \"ctypes/__init__.py\", line 417, in __getattr__\n  File \"site-packages/PyInstaller/loader/pyiboot01_bootstrap.py\", line 151, in __init__\nPyInstallerImportError: Failed to load dynlib/dll 'command_path'. Most probably this dynlib/dll was not found when the application was frozen.\nSystem information\nUBUNTU 16.04\nMitmproxy: 3.0.0.dev1136 (commit 15f525e) binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.13.0-32-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-02-07T11:42:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "414": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2845", "issue_id": "#2845", "issue_summary": "Problems during installation", "issue_description": "cbenitez101 commented on 6 Feb 2018\nI tried installing MITM proxy as in the documentation in an Ubuntu 16.04 system. I did exactly the same as it says in the documentation. The problem is that I'm not able to install some modules that I require like BeautifulSoup and netlib.\nIf I install MITM Proxy via apt-get I don't get those errors but it seems to use python2.7 instead of python3, giving me some other errors during the execution.\nAny ideas of how to fully install it with the dependencies I need?\nThanks!", "issue_status": "Closed", "issue_reporting_time": "2018-02-06T09:32:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "415": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2844", "issue_id": "#2844", "issue_summary": "mitmproxy crushes when duplicating flow", "issue_description": "pannzh commented on 6 Feb 2018\nSteps to reproduce the problem:\nStart mitmproxy as regular mode\nClient use it as http_proxy\nSelect the flow and press 'D' (duplicate flow), and mitmproxy throws following exception:\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/console/flowlist.py\", line 417, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/lib/python3.5/site-packages/urwid/listbox.py\", line 987, in keypress\n    self.make_cursor_visible((maxcol,maxrow))\n  File \"/usr/lib/python3.5/site-packages/urwid/listbox.py\", line 939, in make_cursor_visible\n    focus_widget, pos = self.body.get_focus()\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/console/flowlist.py\", line 284, in get_focus\n    f = FlowItem(self.master, self.master.view.focus.flow)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/console/flowlist.py\", line 123, in __init__\n    w = self.get_text()\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/console/flowlist.py\", line 132, in get_text\n    max_url_len=cols,\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/console/common.py\", line 427, in format_flow\n    acked = f.reply.state == \"committed\",\nAttributeError: 'NoneType' object has no attribute 'state'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments? What have you tried so far?\nSystem information\nI was using the latest docker images and here is the output of mitmproxy --version:\nMitmproxy version: 2.0.2 (release version) \nPython version: 3.5.2\nPlatform: Linux-4.9.0-4-amd64-x86_64-with\nSSL version: OpenSSL 1.0.2n  7 Dec 2017", "issue_status": "Closed", "issue_reporting_time": "2018-02-06T02:21:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "416": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2840", "issue_id": "#2840", "issue_summary": "sslv3 alert handshake failure", "issue_description": "zero-master commented on 4 Feb 2018 \u2022\nedited\nSteps to reproduce the problem:\nOpen https://ondemand.icicibank.com/\nYou'll get this error:\n502 Bad Gateway\nTlsProtocolException('Cannot establish TLS with ondemand.icicibank.com:443 (sni: ondemand.icicibank.com): TlsException(\"SSL handshake error: Error([(\\'SSL routines\\', \\'ssl3_read_bytes\\', \\'sslv3 alert handshake failure\\')],)\",)',)\nAny other comments? What have you tried so far?\nI really need some direction here.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.4\nPlatform: Linux-4.14.15-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.1.0g 2 Nov 2017\nLinux distro: arch", "issue_status": "Closed", "issue_reporting_time": "2018-02-04T08:49:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "417": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2839", "issue_id": "#2839", "issue_summary": "Different traceback messages appear, when try to run inappropriate file as a script", "issue_description": "Contributor\nkajojify commented on 3 Feb 2018\nSteps to reproduce the problem:\nRun mitmproxy.\nPress |(shift+\\). Input the path to not script file:\n: script.run @focus /home/kajoj/myphoto.JPG\nTraceback:\n2a. : script.run @focus /home/kajoj/passlist.txt\nTraceback:\nAny other comments? What have you tried so far?\nI think these aren't only traceback messages, which may appear.\nWe should take a look at this place: https://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/addons/script.py#L30\nSystem information\nMitmproxy: 3.0.0.dev79 (commit 957a630)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-112-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-02-03T13:52:33Z", "fixed_by": "#3050", "pull_request_summary": "Handling user script's exceptions, fix #2839", "pull_request_description": "Contributor\narmudgal commented on 10 Apr 2018\nHi,\nHave used script_error_handler to fix #2839.", "pull_request_status": "Merged", "issue_fixed_time": "2018-04-14T22:12:45Z", "files_changed": [["9", "mitmproxy/addons/script.py"], ["23", "test/mitmproxy/addons/test_script.py"], ["7", "test/mitmproxy/data/addonscripts/recorder/error.py"]]}, "418": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2838", "issue_id": "#2838", "issue_summary": "Undesirable traceback, when trying to run user's script on the specific flow twice.", "issue_description": "Contributor\nkajojify commented on 3 Feb 2018\nSteps to reproduce the problem:\nRun mitmproxy.\nPress | (shift + \\).\nInput the path to your script. Press Enter.\nRepeat steps 2-3 one more time.\nTraceback, wich souldn't appear:\nSystem information\nMitmproxy: 3.0.0.dev79 (commit 957a630)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-112-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-02-03T13:30:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "419": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2837", "issue_id": "#2837", "issue_summary": "Exceptions in users' scripts aren't handled properly", "issue_description": "Contributor\nkajojify commented on 3 Feb 2018\nSteps to reproduce the problem:\nRun mitmproxy.\nPress n -> Enter\nCreate the script in arbitrary directory:\ndef request(flow):\n    raise Exception\nRun this script on the focused flow.\nPress | (shift + \\) and input the path to the script, which raises an exception.\nFor example /home/kajoj/s.py\nI am seeing:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 309, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 150, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 104, in keypress\n    self.prompt_execute(self._w.get_edit_text())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 124, in prompt_execute\n    msg = p(txt)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/addons/script.py\", line 120, in script_run\n    ctx.master.addons.invoke_addon(s, evt, arg)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/addonmanager.py\", line 256, in invoke_addon\n    func(*args, **kwargs)\n  File \"/home/kajoj/s.py\", line 2, in request\n    raise Exception\nException\nAny other comments? What have you tried so far?\nI suppose, the preferable way to handle exceptions would be:\nSystem information\nMitmproxy: 3.0.0.dev79 (commit 957a630)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-112-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-02-03T13:17:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "420": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2832", "issue_id": "#2832", "issue_summary": "Invalid HTTP request form (expected: authority or absolute, got: relative)", "issue_description": "ddor254 commented on 1 Feb 2018\nSteps to reproduce the problem:\nmitmdump -p 9999\non the same machine:\n2.curl http://localhost:9999\nAny other comments? What have you tried so far?\nI get the \"127.0.0.1:60422: HTTP protocol error in client request: Invalid HTTP request form (expected: authority or absolute, got: relative)\" error,\nwhen running with the -T option i get the following error:\n\"127.0.0.1:60420: Transparent mode failure: OSError(92, 'Protocol not available')\"\nin mitmdump version 0.15 the same configuration and script with the -T option seems to work.\nSystem information\nMitmproxy version: 2.0.2\nPlatform: Linux-4.10.0-37-generic-x86_64-with-Ubuntu-16.04-xenial\n2", "issue_status": "Closed", "issue_reporting_time": "2018-02-01T08:27:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "421": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2831", "issue_id": "#2831", "issue_summary": "Form data being deleted, if tried to edit JSON form data", "issue_description": "Contributor\narmudgal commented on 1 Feb 2018\nSteps to reproduce the problem:\nRun mitmproxy\nCapture some flows with method POST and form in JSON, Example Website\nPress enter\nPress e -> form\nPress q\nAny other comments? What have you tried so far?\nI think the basic problem lies with JSON Parsing, Even if the form data is empty and you try to change mode by pressing m and selecting json . It says Couldn't parse: falling back to raw\nSystem information\nMitmproxy: 3.0.0.dev1176 (commit 02d2ef7)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.13.0-32-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-02-01T00:11:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "422": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2830", "issue_id": "#2830", "issue_summary": "How I can log the TLS master secrets with mitmproxy and use it in the wireshark", "issue_description": "Al-Anoud commented on 31 Jan 2018\nHi,\nI asked before a question about how can I save a mitmproxy data in a pcap format Issue #2806.\nSo based on the suggestion to (1) log the TLS master secrets with mitmproxy and (2) use a normal PCAP tool for packet capture, I tried to do it myself but unfortunately it did not work or maybe I did something wrong\nif some one did this process and it work with him, please help.\nThank you\nAnoud", "issue_status": "Closed", "issue_reporting_time": "2018-01-31T15:09:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "423": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2829", "issue_id": "#2829", "issue_summary": "Incorrect displaying of set-cookie attributes, if no name-value pairs were set in set-cookie header editor", "issue_description": "Contributor\nkajojify commented on 31 Jan 2018\nSteps to reproduce the problem:\nRun mitmproxy.\nPress n -> Enter -> Enter -> e -> set-cookies\nPress a to add a new row.\nChoose Attributes column and enter subeditor.\nAdd any name-value pair, for example a 1.\nGo to flowview tab by pressing q twice. You will see this in Response tab:\n\nI am not sure it is correct to display just = without anything\nPress e -> set-cookies. You will see, that name-value from Attributes column moved to high-level name-value:\nset-cookies was changed in Response tab as well.\nStrange behaviour.\nAny other comments? What have you tried so far?\nThis small bug is relevant for 2.0.x version as well.\nSystem information\nMitmproxy: 3.0.0.dev75 (commit 02d2ef7)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-112-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-31T13:18:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "424": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2828", "issue_id": "#2828", "issue_summary": "run mitmdump lead memory leaks...", "issue_description": "laurdawn commented on 31 Jan 2018\nSteps to reproduce the problem:\nI just want to run mitmdump with the default mode....\nFor example, just run it. \"mitmdump -p 8888\"\nSorry,,my English is so bad.\nAny other comments? What have you tried so far?\nI looked at all the problems, and there were a few of them, but they couldn't be solved.\nFor example, I try to add param \"-Z 0\" or \"--stream 0\" to avoid it,,,But it doesn't seem to work at all,.\nStill memory leaks, the memory has been increasing, until out of memory..\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.3\nPlatform: Linux-3.10.0-693.2.2.el7.x86_64-x86_64-with-centos-7.4.1708-Core\nSSL version: OpenSSL 1.0.2k-fips 26 Jan 2017\nLinux distro: CentOS Linux 7.4.1708 Core", "issue_status": "Closed", "issue_reporting_time": "2018-01-31T12:26:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "425": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2827", "issue_id": "#2827", "issue_summary": "Mitmproxy crashes, when setting only value in cookies/set-cookies grideditor", "issue_description": "Contributor\nkajojify commented on 31 Jan 2018 \u2022\nedited\nSteps to reproduce the problem:\nRun mitmproxy.\nPress n -> enter -> enter -> e -> cookies (or set-cookies)\nYou are in grideditor. Press a. Choose Value column and add any value.\nYou will see something like:\nPress q -> e -> cookies (or set-cookies if you're doing that for it)\nTraceback:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 710, in _loop\n    self._entering_idle()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 671, in _entering_idle\n    callback()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 564, in entering_idle\n    self.draw_screen()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 578, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 1750, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 1750, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 455, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 337, in calculate_visible\n    self._set_focus_complete( (maxcol, maxrow), focus )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 702, in _set_focus_complete\n    (maxcol,maxrow), focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 672, in _set_focus_first_selectable\n    (maxcol, maxrow), focus=focus)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 340, in calculate_visible\n    focus_widget, focus_pos = self.body.get_focus()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 227, in get_focus\n    self.lst[self.focus]\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 83, in __init__\n    w = self.editor.columns[i].Display(v)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/col_text.py\", line 18, in Display\n    return TDisplay(data, self.encoding_args)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/col_text.py\", line 31, in __init__\n    super().__init__(data.encode(*self.encoding_args))\nAttributeError: 'NoneType' object has no attribute 'encode'\nYou can also reproduce it for set-cookies attributes. Just add value without name into set-cookies attributes. Press q -> q to get into flowview tab. Press e -> set-cookies. You will see the same traceback.\nAny other comments? What have you tried so far?\nThis issue is relevant for 2.0.x as well.\nSystem information\nMitmproxy: 3.0.0.dev75 (commit 02d2ef7)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-112-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-30T20:46:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "426": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2824", "issue_id": "#2824", "issue_summary": "[Configuration file] keys are not used", "issue_description": "LetMeR00t commented on 30 Jan 2018\nSteps to reproduce the problem:\nCreate a configuration file at .mitmproxy/config.yaml\nSet this configuration:\nmode: \"transparent\"\nshowhost: true\nStart mitmproxy using this command : \"mitmproxy --conf config.yaml\" (I'm on the .mitmproxy folder of course)\nThe process is started but the traffic is not working\nStart mitmproxy using this command : \"mitmproxy -T --host\"\nThe process is started and the traffic is working\nAny other comments? What have you tried so far?\nI tried to use the \":\" and \"=\" as separator for the YAML file but only the \":\" is recognized apparently\nSystem information\nI have the last release of mitmproxy (v2.0.2)\nWell I've just notice that there is a v3 release, maybe this could help me ?\nI prefer to create this ticket if someone else has the same issue :)", "issue_status": "Closed", "issue_reporting_time": "2018-01-30T17:27:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "427": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2823", "issue_id": "#2823", "issue_summary": "Regular failure on mpeg-dash video seeking on http2", "issue_description": "nimatrueway commented on 30 Jan 2018 \u2022\nedited\nHey guys. Thanks for this incredible tool. I tried to write a script that manipulates SNI of TLS connections in all requests and got no problem regarding that.\nHowever when I load a page with video (MPEG-DASH) say a facebook video, the connection quality goes very bad. It takes a long time if it doesn't fail when you want to seek back and forth through a video. Can anybody explain why this happens ?\n1. Run mitmdump\nmitmdump --listen-port 9990 --ssl-insecure\n2. Open Firefox and set it's proxy to localhost:9990\n4. Open a video on facebook like this and try to seek randomly.", "issue_status": "Closed", "issue_reporting_time": "2018-01-30T16:14:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "428": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2822", "issue_id": "#2822", "issue_summary": "parentheses in print function and python version", "issue_description": "ddor254 commented on 30 Jan 2018\nSteps to reproduce the problem:\nrun mitmproxy/mitmdump with script -s \"script.py\"\nAny other comments? What have you tried so far?\nI'm using mitmproxy version 0.15, how do i know which python version does it use?\nI assumed that it uses python 2.7 from th docs.\nthe only problem i don't understand is why do we need parentheses in print function if it is python 2.7???\nthe print function gets overwritten somewhere??\nSystem information\noutput when i just do print without parentheses :\nprint jsonResponse ^\nSyntaxError: invalid syntax", "issue_status": "Closed", "issue_reporting_time": "2018-01-30T14:58:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "429": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2821", "issue_id": "#2821", "issue_summary": "Android nougat chrome \"NET_ERR_CERT_AUTHORITY_INVALID\"", "issue_description": "Yannik commented on 30 Jan 2018\nSteps to reproduce the problem:\nadd mitmproxy ca cert to system certificate store as described here: #2054 (comment)\nOpen https site on google chrome for android 63 on android 7.1.2\nerror shows up\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.4\nPlatform: Linux-4.14.13-300.fc27.x86_64-x86_64-with-fedora-27-Twenty_Seven\nSSL version: OpenSSL 1.1.0g-fips 2 Nov 2017\nLinux distro: Fedora 27 Twenty Seven", "issue_status": "Closed", "issue_reporting_time": "2018-01-30T02:07:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "430": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2818", "issue_id": "#2818", "issue_summary": "It is difficult to get information from request/response/detail tab, if url is very-very long", "issue_description": "Contributor\nkajojify commented on 29 Jan 2018\nSteps to reproduce the problem:\nRun mitmproxy.\nMake a request with pathoc: pathoc -c example.com:80 localhost:8080 'get:/SOMETHING VERY LONG'\nEnter the corresponding flow.\nYou won't be able to see request/response/detail of the flow without changing size of your window.\nBut if we decide to make a request with url over for example 10k length, even changing the size of window won't help you to see request/response/detail tab.\nAny other comments? What have you tried so far?\nAbout maximum length of a URL\nhttps://stackoverflow.com/questions/417142/what-is-the-maximum-length-of-a-url-in-different-browsers\nSystem information\nMitmproxy: 3.0.0.dev64 (commit 6dd336f)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-112-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-29T11:46:59Z", "fixed_by": "#2946", "pull_request_summary": "Fix for wrapping up extra-long urls in flowdetailview", "pull_request_description": "Contributor\nfenilgandhi commented on 3 Mar 2018\nWhile displaying extra-extra long urls in Flow Detail View, there was a no max_url_len value set causing a n overflow of url on the screen. The fixes get the max_cols from the ui and sets it to max_url_len\nFixes #2818", "pull_request_status": "Merged", "issue_fixed_time": "2018-03-04T18:46:44Z", "files_changed": [["4", "mitmproxy/tools/console/flowview.py"]]}, "431": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2816", "issue_id": "#2816", "issue_summary": "Mitmproxy crashes, when trying to send cuts to the clipboard without copy/paste mechanism for system", "issue_description": "Contributor\nkajojify commented on 27 Jan 2018\nSteps to reproduce the problem:\nRun mitmproxy.\nPress Ctrl l\nInput : cut.clip 1 2 . Press Enter.\nTraceback:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 309, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 149, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 104, in keypress\n    self.prompt_execute(self._w.get_edit_text())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 124, in prompt_execute\n    msg = p(txt)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n    self.gen.throw(type, value, traceback)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/master.py\", line 68, in handlecontext\n    yield\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/addons/cut.py\", line 139, in clip\n    pyperclip.copy(fp.getvalue())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/pyperclip/__init__.py\", line 574, in lazy_load_stub_copy\n    return copy(text)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/pyperclip/__init__.py\", line 284, in __call__\n    raise PyperclipException(EXCEPT_MSG)\npyperclip.PyperclipException: \n    Pyperclip could not find a copy/paste mechanism for your system.\n    For more information, please visit https://pyperclip.readthedocs.io/en/latest/introduction.html#not-implemented-error \nAny other comments? What have you tried so far?\nAs traceback says, the issue is relevant for Linux without installed copy/paste mechanism and can be fixed using this https://pyperclip.readthedocs.io/en/latest/introduction.html#not-implemented-error.\nI think we must just handle it properly.\nSystem information\nMitmproxy: 3.0.0.dev64 (commit 6dd336f)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-112-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-27T00:52:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "432": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2815", "issue_id": "#2815", "issue_summary": "Crash just by being used as a proxy.", "issue_description": "eldraco commented on 26 Jan 2018\nSteps to reproduce the problem:\nNot sure if possible.\nstart mitmproxy\nsomeone connected and used the proxy and triggered the error\nAny other comments? What have you tried so far?\nOutput of mitmproxy error\nTraceback (most recent call last): in HTTP connection: TcpDisconnect('[Errno 104] Connection reset by peer',)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/master.py\", line 281, in run\nself.loop.run()\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\nself.event_loop.run()\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\nself._loop()\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 715, in _loop\nalarm_callback()\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 164, in cb\ncallback(self, user_data)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/master.py\", line 242, in ticker\nself.loop.set_alarm_in(0.01, self.ticker)\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 165, in set_alarm_in\nreturn self.event_loop.alarm(sec, cb)\nFile \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 604, in alarm\nheapq.heappush(self._alarms, (tm, callback))\nTypeError: unorderable types: function() < function()\nmitmproxy has crashed!\nSystem information\nPython version: 3.5.3\nPlatform: Linux-4.12.0-1-amd64-x86_64-with-debian-buster-sid\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: debian buster/sid", "issue_status": "Closed", "issue_reporting_time": "2018-01-26T17:44:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "433": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2813", "issue_id": "#2813", "issue_summary": "mitmproxy transparent and upstream modes: mutually exclusive", "issue_description": "raulsiles commented on 25 Jan 2018\nSteps to reproduce the problem:\nI'm trying to run mitmproxy in transparent mode with an upstream proxy.\n# mitmproxy -T --host -U http://127.0.0.1:8081\nmitmproxy: Transparent, SOCKS5, reverse and upstream proxy mode are mutually exclusive. Read the docs on proxy modes to understand why.\nThe error message specifies both modes are mutually exclusive, although the documentation does not talk specifically about this scenario, where these two modes are combined:\nhttp://docs.mitmproxy.org/en/stable/modes.html\nI think there are scenarios where this setup might work, and could be required. Why are they mutually exclusive?\nAny other comments? What have you tried so far?\nSeveral other previous mitmproxy GitHub issues already reference chaining proxies. The idea is to intercept all the traffic (both HTTP and HTTPS) from a non-aware proxy client in transparent mode, via mitmproxy, and redirect all its traffic to Burp, as an upstream proxy:\nclient <---> mitmproxy <---> Burp <---> Internet <---> server\nThis could also be a very common scenario if you need to use mitmproxy in transparent mode, but you are forced to get out to the Internet through a corporate proxy:\nclient <---> mitmproxy <---> Corporate proxy <---> Internet <---> server\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.4\nPlatform: Linux-4.14.0-kali3-amd64-x86_64-with-Kali-kali-rolling-kali-rolling\nSSL version: OpenSSL 1.1.0g 2 Nov 2017\nLinux distro: Kali kali-rolling kali-rolling\n1", "issue_status": "Closed", "issue_reporting_time": "2018-01-25T11:02:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "434": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2812", "issue_id": "#2812", "issue_summary": "Google Summer of Code 2018: Getting Started", "issue_description": "Member\nmhils commented on 23 Jan 2018 \u2022\nedited\nMitmproxy is participating under the umbrella of the Honeynet project in the Google Summer of Code 2018. We have two exciting project proposals and are open for other ideas as well.\nThis issue is targeted at potential GSoC students to help them getting started and write a strong proposal. If there are any questions, please don't hesistate to get in touch.\nPicking the right students for a Google Summer of Code is hard - we really want to encourage all students to get involved with open source, but how do we determine who's best suited for a particular project? Here comes your part: Show us that you're super enthusiastic, autonomous and good at coding!\nMost importantly, your proposal should demonstrate two things: You have the required technical skills and you think that mitmproxy is a super interesting project to work on.\nDemonstrate that you are capable of fulfilling the project!\nWhile many of you probably have a good theoretical background from your university, you should show us that you can code as well:\nDo you have a cool/interesting side project or university project? Show it to us! Even better if it's open source and we can read the code!\nHave you contributed to an open source project before? Show us what you did!\nNo previous projects you could show? Add a feature and/or fix a small bug in mitmproxy!\nAs long as you have some code to show, please don't stress yourself about this part. We require a certain minimum level of technical proficiency so that GSoC is fun for everyone, but beyond that social components are way more important to us.\nDemonstrate that you really want to contribute to mitmproxy!\nThe brick walls are there for a reason. The brick walls are not there to keep us out; the brick walls are there to give us a chance to show how badly we want something. The brick walls are there to stop the people who don't want it badly enough. They are there to stop the other people! [1]\nGoogle accepts a variety of mentoring organizations every year, each of them with multiple projects. Now, why do you want to work on mitmproxy specifically? We do not just want to hear a chorus of praise here (\"mitmproxy is a great tool\"). Instead, play around with it and tell us about your experiences:\nUse mitmproxy to analyze a popular Android or iOS app or anything else. There are many hidden treasures/security issues to be found [2]! Show us what you analyzed (screenshots), what you found, where mitmproxy was good/not good etc! :-)\nWrite a nice script that does something cool with a webpage! For example, we have an example script that turns all PNGs upside down (src). Try to come up with something creative :-)\nAgain, a good way to show that you're a good candidate is to fix a bug, propose or implement a feature, add something that was unclear to you to the docs, etc.\nGet in touch!\nWe hang out on Slack (https://gsoc-slack.honeynet.org/ or the mitmproxy Slack) and our forums (https://discourse.mitmproxy.org/). Feel free to just get in touch!\nMake sure to have a plan!\nFor your GSoC proposal (please use the template!), you need to write down a roadmap/timeline for your project. Think about which features you need to develop to accomplish your goal, split your project into subtasks and make sure that you'll end up with a viable timeline. Having at least one dedicated task per week would be a good way to track the progress of your project as well. If you already identified potential issues/caveats for your endeavour, make sure to discuss them in the proposal as well!\nLast but not least: GSoC is fun. Enjoy it!\nFAQ\n1. There's a skilled and very motivated student already working hard on a proposal for the project I want to apply for. Should I even bother to apply?\nYes! First, if we get two convincing proposals for one project idea, we will try to just take both students\u00b9. Second, if we cannot take you for some reason, we will actively introduce you to other projects at Honeynet that match your skills and interests after the application deadline\u00b2. I can't stress this enough: Please do not worry about competition! If we see you cooperating with other contributors (students or not), this is a big plus.\n\u00b9) This requires that the project can be split (and extended) in a way that there are no critical interdependencies between the students. You will not get a project which depends on another student's work. This year, we can split both of our proposed projects.\n\u00b2) This is not just nice talk, we did this repeatedly with good outcomes. Some of those students are mentors now.\n2. I want to implement $MAJOR_FEATURE_X to show that I'm a super capable student!\nThis is great, but please please do not send us a single giant pull request! Please try to show us that you can split major tasks into small, (mostly) isolated parts. A PR is never to small for first time contributors.\n3. In the application template, there's a question about Windows, Unix or macOS development experience relevant to your chosen project. What do you expect me to write there?\nThe application template is shared by all Honeynet projects. Some of our projects may require knowledge of low-level OS internals (e.g. Cuckoo Sandbox), but for mitmproxy it does not really matter. Just mention the OS you develop on and you're good.\n4. What is the team's preferred style of communication?\nAnswering every student's questions in a private conversation is often overwhelming for mentors during the peak GSoC application period. We therefore appreciate it if you ask your question publicly on GitHub or in #general on Slack so that others can help out as well. You are of course welcome to message us directly for feedback on your (already submitted) proposal, or if you feel umcomfortable discussing something in the open.\n5. GSoC aside, how can I contribute to mitmproxy?\nCheck out https://github.com/mitmproxy/mitmproxy#contributing!\n8", "issue_status": "Closed", "issue_reporting_time": "2018-01-23T13:50:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "435": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2810", "issue_id": "#2810", "issue_summary": "Mitmproxy crashes, when trying to use command, which contains '\\'", "issue_description": "Contributor\nkajojify commented on 22 Jan 2018\nSteps to reproduce the problem:\nRun mitmproxy.\nPress :\nInput \\ and press Enter.\nI am seeing:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 308, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 149, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 104, in keypress\n    self.prompt_execute(self._w.get_edit_text())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 124, in prompt_execute\n    msg = p(txt)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 218, in call\n    parts = list(lexer(cmdstr))\n  File \"/usr/lib/python3.5/shlex.py\", line 263, in __next__\n    token = self.get_token()\n  File \"/usr/lib/python3.5/shlex.py\", line 90, in get_token\n    raw = self.read_token()\n  File \"/usr/lib/python3.5/shlex.py\", line 185, in read_token\n    raise ValueError(\"No escaped character\")\nValueError: No escaped character\nAny other comments? What have you tried so far?\nThe exception is raised each time, when command line contains \\ (no matter where it is located.)\nSystem information\nMitmproxy: 3.0.0.dev64 (commit 6dd336f)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-109-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-22T14:47:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "436": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2806", "issue_id": "#2806", "issue_summary": "Save mitmproxy encrypted traffics in a pcap format for further analysis", "issue_description": "Al-Anoud commented on 20 Jan 2018\nHi\nI have IoT device/s which I successfully managed to decrypt its traffic using mitmproxy. Now I want to save those traffic for further investigation and analysis. Indeed I saved it using ( -w output ) command but I could only open it in text a format and it seems a bit miss as well as it is difficult or let's say time consuming to analyze. So please could you advice if there is any way to save the decrypted traffic in a pcap file.\nThank you in advance , notice that this will help me a lot for completing my research\nAnoud", "issue_status": "Closed", "issue_reporting_time": "2018-01-20T13:40:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "437": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2805", "issue_id": "#2805", "issue_summary": "mitmproxy crashes when trying to edit NoneType response headers", "issue_description": "ankitsaini2609 commented on 20 Jan 2018 \u2022\nedited\nSteps to reproduce the problem:\nRun mitmproxy\nMake a new request using n press enter twice to create the request.\nGo to response tab in console view\nEdit the response using e and select response headers\nYou will get the following Screen\nReason :\nIt is due to the following line in mitmproxy/tools/console/consoleaddons.py\nelif part == \"response-headers\":\n            self.master.switch_view(\"edit_focus_response_headers\")\nSolution :\nI have added a check for flow.response being NoneType\nelif part == \"response-headers\":\n    message = flow.response\n    if not message:\n        raise exceptions.CommandError(\"Flow has no {}.\".format(part.split(\"-\")[0]))\n    self.master.switch_view(\"edit_focus_response_headers\")\nSystem information\nMitmproxy: 3.0.0.dev1147 (commit b7db304) \nPython:    3.6.4\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\nPlatform:  Linux-4.14.0-kali3-amd64-x86_64-with-Kali-kali-rolling-kali-rolling", "issue_status": "Closed", "issue_reporting_time": "2018-01-20T07:36:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "438": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2804", "issue_id": "#2804", "issue_summary": "mitmproxy==0.18.2 ImportError: cannot import name ssl_match_hostname", "issue_description": "gitxmax commented on 20 Jan 2018\nHello,\nInstalling mitmproxy 0.18.2, as WIFI-PUMPKIN dependency. Kali 2017.3 on Raspberry Pi3.\nThough, everything installs just fine, I get the following error, when starting mitmproxy:\n\"from backports import ssl_match_hostname\nImportError: cannot import name ssl_match_hostname\"\nTried reinstalling blackports.ssl_match_hostname many times over, followed by pip install -U mitmproxy==0.18.2\nBut, always ends up with this error.", "issue_status": "Closed", "issue_reporting_time": "2018-01-20T06:18:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "439": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2801", "issue_id": "#2801", "issue_summary": "Binary (unicode) replacements will crash mitmproxy", "issue_description": "M-DiMartino commented on 18 Jan 2018 \u2022\nedited\nSteps to reproduce the problem:\nAdd a regex replacement for responses (~s) with the regex containing unicode characters (for instance, '\\u0020\\u1200\\u1234'). The replacement can be anything. Note how mitmproxy changes all the '\\' to a double one, thinking it is matching the '\\' itself.\nIf mitmproxy receives a response, it will crash with the message: 'bad escape \\u at position 0'\nAny other comments? What have you tried so far?\nI have also tried to replace binary data by using '\\x20\\x12\\x00\\x12\\x34'. This will also crash the application, although with a different error message.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.3\nPlatform: Linux-4.9.0-kali3-amd64-x86_64-with-Kali-kali-rolling-kali-rolling\nSSL version: OpenSSL 1.1.0g 2 Nov 2017\nLinux distro: Kali kali-rolling kali-rolling\nComplete stack trace for using '\\u0123' as replacement.\nTraceback (most recent call last):\nFile \"/usr/lib/python3/dist-packages/mitmproxy/tools/console/master.py\", line 281, in run\nself.loop.run()\nFile \"/usr/lib/python3/dist-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/usr/lib/python3/dist-packages/urwid/main_loop.py\", line 376, in _run\nself.event_loop.run()\nFile \"/usr/lib/python3/dist-packages/urwid/main_loop.py\", line 682, in run\nself._loop()\nFile \"/usr/lib/python3/dist-packages/urwid/main_loop.py\", line 715, in _loop\nalarm_callback()\nFile \"/usr/lib/python3/dist-packages/urwid/main_loop.py\", line 164, in cb\ncallback(self, user_data)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/tools/console/master.py\", line 239, in ticker\nchanged = self.tick(timeout=0)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/master.py\", line 109, in tick\nhandle_func(obj)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/controller.py\", line 70, in wrapper\nmaster.addons(f.name, message)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addonmanager.py\", line 90, in call\nself.invoke(i, name, *args, **kwargs)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addonmanager.py\", line 85, in invoke\nfunc(*args, **kwargs)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addons/replace.py\", line 93, in response\nself.execute(flow)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addons/replace.py\", line 83, in execute\nself.replace(f.response, rex, s)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addons/replace.py\", line 100, in replace\nobj.replace(rex, s, flags=re.DOTALL)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/net/http/message.py\", line 263, in replace\npattern, repl, self.content, flags=flags, count=count\nFile \"/usr/lib/python3.6/re.py\", line 202, in subn\nreturn _compile(pattern, flags).subn(repl, string, count)\nFile \"/usr/lib/python3.6/re.py\", line 301, in _compile\np = sre_compile.compile(pattern, flags)\nFile \"/usr/lib/python3.6/sre_compile.py\", line 562, in compile\np = sre_parse.parse(p, flags)\nFile \"/usr/lib/python3.6/sre_parse.py\", line 855, in parse\np = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)\nFile \"/usr/lib/python3.6/sre_parse.py\", line 416, in _parse_sub\nnot nested and not items))\nFile \"/usr/lib/python3.6/sre_parse.py\", line 502, in _parse\ncode = _escape(source, this, state)\nFile \"/usr/lib/python3.6/sre_parse.py\", line 401, in _escape\nraise source.error(\"bad escape %s\" % escape, len(escape))\nsre_constants.error: bad escape \\u at position 0\nComplete stack trace for using '\\x12\\xe7' as replacement.\nTraceback (most recent call last):\nFile \"/usr/lib/python3/dist-packages/mitmproxy/tools/console/master.py\", line 281, in run\nself.loop.run()\nFile \"/usr/lib/python3/dist-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/usr/lib/python3/dist-packages/urwid/main_loop.py\", line 376, in _run\nself.event_loop.run()\nFile \"/usr/lib/python3/dist-packages/urwid/main_loop.py\", line 682, in run\nself._loop()\nFile \"/usr/lib/python3/dist-packages/urwid/main_loop.py\", line 715, in _loop\nalarm_callback()\nFile \"/usr/lib/python3/dist-packages/urwid/main_loop.py\", line 164, in cb\ncallback(self, user_data)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/tools/console/master.py\", line 239, in ticker\nchanged = self.tick(timeout=0)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/master.py\", line 109, in tick\nhandle_func(obj)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/controller.py\", line 70, in wrapper\nmaster.addons(f.name, message)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addonmanager.py\", line 90, in call\nself.invoke(i, name, *args, **kwargs)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addonmanager.py\", line 85, in invoke\nfunc(*args, **kwargs)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addons/replace.py\", line 93, in response\nself.execute(flow)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addons/replace.py\", line 83, in execute\nself.replace(f.response, rex, s)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addons/replace.py\", line 100, in replace\nobj.replace(rex, s, flags=re.DOTALL)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/net/http/message.py\", line 257, in replace\npattern = strutils.escaped_str_to_bytes(pattern)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/utils/strutils.py\", line 99, in escaped_str_to_bytes\nreturn codecs.escape_decode(data)[0]\nUnicodeEncodeError: 'utf-8' codec can't encode character '\\udce7' in position 8: surrogates not allowed", "issue_status": "Closed", "issue_reporting_time": "2018-01-18T16:53:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "440": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2800", "issue_id": "#2800", "issue_summary": "Mitmproxy crashes, when viewing response body in url-encoded mode", "issue_description": "Contributor\nkajojify commented on 18 Jan 2018\nSteps to reproduce the problem:\nRun mitmproxy.\nn -> Enter -> Enter -> m -> url-encoded\nI am seeing:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 308, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 44, in keypress\n    ret = super().keypress(size, key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 592, in keypress\n    *self.calculate_padding_filler(size, True)), key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/overlay.py\", line 130, in keypress\n    self.master.keymap.handle(\"global\", key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/keymap.py\", line 130, in handle\n    return self.executor(b.command)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 174, in nav_select\n    self.master.inject_key(\"m_select\")\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 181, in inject_key\n    self.loop.process_input([key])\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 308, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 44, in keypress\n    ret = super().keypress(size, key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 592, in keypress\n    *self.calculate_padding_filler(size, True)), key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/overlay.py\", line 121, in keypress\n    signals.pop_view_state.send(self)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/blinker/base.py\", line 267, in <listcomp>\n    for receiver in self.receivers_for(sender)]\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 244, in pop\n    self.focus_changed()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 209, in focus_changed\n    i.call(\"focus_changed\")\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 118, in call\n    getattr(self.top_window(), name)(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/flowview.py\", line 233, in focus_changed\n    self.body.focus_changed()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/flowview.py\", line 58, in focus_changed\n    self.show()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/tabs.py\", line 73, in show\n    body = self.tabs[self.tab_offset][1](),\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/flowview.py\", line 86, in view_request\n    return self.conn_text(self.flow.request)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/flowview.py\", line 185, in conn_text\n    msg, body = self.content_view(viewmode, conn)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/flowview.py\", line 112, in content_view\n    return self._get_content_view(viewmode, limit, flow_modify_cache_invalidation)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/flowview.py\", line 132, in _get_content_view\n    for line in lines:\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/contentviews/__init__.py\", line 85, in safe_to_print\n    for line in lines:\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/contentviews/base.py\", line 52, in format_dict\n    max_key_len = max(len(k) for k in d.keys())\nValueError: max() arg is an empty sequence\nAny other comments? What have you tried so far?\nThis issue is reproducible not only for request/response without body, but for query (maybe some others) content type as well. I continue digging.\nSystem information\nMitmproxy: 3.0.0.dev53 (commit 3b5237c)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-109-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-18T10:53:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "441": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2797", "issue_id": "#2797", "issue_summary": "What happened to Construct?", "issue_description": "arekbulski commented on 17 Jan 2018 \u2022\nedited\nI am the Construct maintainer (but also participate in Kaitai) and wanted to inquire, what happened to Construct? The way I understand, its no longer used in mitmproxy, superseded by Kaitai?", "issue_status": "Closed", "issue_reporting_time": "2018-01-17T01:58:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "442": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2794", "issue_id": "#2794", "issue_summary": "Mitmproxy with received random data crashes, when trying to edit a form", "issue_description": "Contributor\nkajojify commented on 14 Jan 2018\nSteps to reproduce the problem:\nRun mitmproxy.\npathoc -c example.com:80 localhost:8080 'post:/:b@200'\nChoose the corresponding flow.\nPress e.\nForm.\nTraceback:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 293, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 36, in keypress\n    ret = super().keypress(size, key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 592, in keypress\n    *self.calculate_padding_filler(size, True)), key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/overlay.py\", line 130, in keypress\n    self.master.keymap.handle(\"global\", key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/keymap.py\", line 130, in handle\n    return self.executor(b.command)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 174, in nav_select\n    self.master.inject_key(\"m_select\")\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 181, in inject_key\n    self.loop.process_input([key])\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 293, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 36, in keypress\n    ret = super().keypress(size, key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 592, in keypress\n    *self.calculate_padding_filler(size, True)), key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/overlay.py\", line 121, in keypress\n    signals.pop_view_state.send(self)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/blinker/base.py\", line 267, in <listcomp>\n    for receiver in self.receivers_for(sender)]\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 230, in pop\n    if self.focus_stack().pop():\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 98, in pop\n    self.call(\"layout_popping\")\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 110, in call\n    getattr(self.top_window(), name)(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 463, in layout_popping\n    self.call(self._w, \"layout_popping\")\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 441, in call\n    f(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 313, in layout_popping\n    self.callback(self.data_out(res), *self.cb_args, **self.cb_kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 456, in set_data_update\n    self.set_data(vals, flow)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/grideditor/editors.py\", line 65, in set_data\n    flow.request.urlencoded_form = vals\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/net/http/request.py\", line 462, in urlencoded_form\n    self._set_urlencoded_form(value)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/net/http/request.py\", line 444, in _set_urlencoded_form\n    self.content = mitmproxy.net.http.url.encode(form_data, self.content.decode()).encode()\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0xa8 in position 0: invalid start byte\nSystem information\nMitmproxy: 3.0.0.dev0004 (commit 68c32d8)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-109-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-14T12:59:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "443": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2788", "issue_id": "#2788", "issue_summary": "Store ClientHello Extensions", "issue_description": "Member\nmhils commented on 13 Jan 2018\n@0x4D31 was interested in adding JA3 hash support to mitmproxy, so we need to give him a way to access all TLS extensions sent during the initial handshake.\n1", "issue_status": "Closed", "issue_reporting_time": "2018-01-12T21:48:07Z", "fixed_by": "#2791", "pull_request_summary": "Store ClientHello extensions with client connection", "pull_request_description": "Member\nmhils commented on 13 Jan 2018\nThis fixes #2788.", "pull_request_status": "Merged", "issue_fixed_time": "2018-01-13T13:09:54Z", "files_changed": [["17", "mitmproxy/connections.py"], ["11", "mitmproxy/io/compat.py"], ["1", "mitmproxy/test/tflow.py"], ["2", "mitmproxy/tools/web/app.py"], ["2", "mitmproxy/version.py"], ["2", "test/mitmproxy/net/test_tls.py"], ["3", "test/mitmproxy/proxy/test_server.py"]]}, "444": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2787", "issue_id": "#2787", "issue_summary": "Can't run mitmproxy after adding a command without type annotations", "issue_description": "Contributor\nkajojify commented on 13 Jan 2018\nSteps to reproduce the problem:\nOpen mitmproxy/tools/console/consoleaddons.py\nAdd arbitrary command without type annotations. For example:\n    @command.command(\"console.mycommand\")\n    def mycommand(self, flow):\n        pass\nTry to run mitmproxy.\nNothing happens. Absolutely. No exceptions, no UI.\nAny other comments? What have you tried so far?\nIf you add a command with type annotations\n    @command.command(\"console.mycommand\")\n    def mycommand(self, flow: flow.Flow) -> None:\n        pass\neverything will work ok.\nSystem information\nMitmproxy: 3.0.0.dev0004 (commit 68c32d8)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-12T21:21:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "445": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2786", "issue_id": "#2786", "issue_summary": "Deleting the last flow from within the flowlist crashes mitmproxy", "issue_description": "Member\nmhils commented on 13 Jan 2018\nSteps to reproduce the problem:\nmitmproxy\nn enter enter d\nTraceback (most recent call last):\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()                                                                                       [*:8080]\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 312, in keypress\n    k\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/keymap.py\", line 130, in handle\n    return self.executor(b.command)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/addons/view.py\", line 413, in remove\n    self.sig_view_remove.send(self, flow=f, index=idx)\n  File \"/home/user/venv/lib/python3.5/site-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/home/user/venv/lib/python3.5/site-packages/blinker/base.py\", line 267, in <listcomp>\n    for receiver in self.receivers_for(sender)]\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/addons/view.py\", line 566, in _sig_view_remove\n    self.flow = None\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/addons/view.py\", line 547, in flow\n    self.sig_change.send(self)\n  File \"/home/user/venv/lib/python3.5/site-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/home/user/venv/lib/python3.5/site-packages/blinker/base.py\", line 267, in <listcomp>\n    for receiver in self.receivers_for(sender)]\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 209, in focus_changed\n    i.call(\"focus_changed\")\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 118, in call\n    getattr(self.top_window(), name)(*args, **kwargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/flowview.py\", line 231, in focus_changed\n    self.body.focus_changed()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/flowview.py\", line 58, in focus_changed\n    self.show()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/tabs.py\", line 52, in show\n    txt = self.tabs[i][0]()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/flowview.py\", line 69, in tab_request\n    if self.flow.intercepted and not self.flow.response:\nAttributeError: 'NoneType' object has no attribute 'intercepted'\nSystem information\nMitmproxy: 3.0.0.dev1147 (commit b7db304)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-12T19:52:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "446": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2785", "issue_id": "#2785", "issue_summary": "Editing message attributes is cumbersome on 3.0 / console.choose.cmd needs shortcuts.", "issue_description": "Member\nmhils commented on 13 Jan 2018\nSteps to reproduce the problem:\nEditing a flow's URL currently requires the following keystrokes:\ne -> down -> down -> down -> down -> down -> down -> down -> down -> down -> down -> down -> down -> enter.\nThis is a clear downgrade from 2.0 and before where each option in that dialog could be selected by pressing a specific key (e.g. u to edit the url). It'd be very useful to add these kinds of shortcuts to console.choose.cmd again. A bit tricky because we can't pass an explicit list as before, but still something we should do.\nSystem information\nMitmproxy: 3.0.0.dev1147 (commit b7db304)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-12T19:48:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "447": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2783", "issue_id": "#2783", "issue_summary": "Mitmproxy crashes, when trying to export something in the file with incorrect path", "issue_description": "Contributor\nkajojify commented on 11 Jan 2018\nRelated to #2750.\nSteps to reproduce the problem:\nRun mitmproxy.\nStart intercept something.\nPress e to export specific flow to the file.\ninput - the corresponding exception\n/file.txt - PermissionError: [Errno 13] Permission denied: '/file.txt'\n/home - IsADirectoryError: [Errno 21] Is a directory: '/home'\n/ome/file.txt - FileNotFoundError: [Errno 2] No such file or directory: '/ome/file.txt'\nThe same exceptions will be relevant, if you press b and try to save reponse body to the file with these incorect paths.\nAny other comments? What have you tried so far?\nPR for related #2750 - #2761\nSystem information\nMitmproxy: 3.0.0.dev0004 (com\nmit 68c32d8)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-11T10:23:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "448": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2782", "issue_id": "#2782", "issue_summary": "Add support for request content encodings", "issue_description": "Contributor\nFeeiCN commented on 11 Jan 2018 \u2022\nedited\nNow, -z option will try to convince servers to send us un-compressed data, but client send server un-compressed data not support.\n#7", "issue_status": "Closed", "issue_reporting_time": "2018-01-11T07:38:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "449": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2779", "issue_id": "#2779", "issue_summary": "Implement `share` command", "issue_description": "Member\nmhils commented on 10 Jan 2018\n@MatthewShao implemented a really cool static viewer based on mitmweb last summer: http://honeynet.org/node/1359.\nLong story short, one can upload a mitmproxy flow file at share.mitmproxy.org and will get a shareable link in return. To make this more accessible, I think it would be awesome to have a mitmproxy command that takes a bunch of flows as argument, uploads them directly from within mitmproxy, and returns a URL to share.", "issue_status": "Closed", "issue_reporting_time": "2018-01-10T17:37:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "450": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2777", "issue_id": "#2777", "issue_summary": "Flow filters don't persist between invocations of `f`", "issue_description": "fuho commented on 10 Jan 2018\nSteps to reproduce the problem:\n1 - Hit f type in filter, make a typo\n2 - Hit 'f' again to fix the typo\nExpected behaviour\nOn second hit of f, when filter in use already the command line shows the current filter.\nCurrent behaviour\nOn second hit of f, whn filter in use already, the filter is cleared.\nSystem information\nMitmproxy 3 RC2", "issue_status": "Closed", "issue_reporting_time": "2018-01-09T21:57:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "451": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2776", "issue_id": "#2776", "issue_summary": "AttributeError: 'Edit' object has no attribute 'get_value' crash", "issue_description": "fuho commented on 10 Jan 2018\nSteps to reproduce the problem:\n1.Run mitmproxy, capture some flows containing json\n2.Tab to go to Response to see the JSON\n3. Hit / to Search and type in something, hit Enter\nExpected behavior\nHighlight first found search term\nCurrent behavior\nMitmproxy crashes with Traceback (most recent call last):\n  File \"mitmproxy/tools/console/master.py\", line 216, in run\n  File \"site-packages/urwid/main_loop.py\", line 278, in run\n  File \"site-packages/urwid/main_loop.py\", line 376, in _run\n  File \"site-packages/urwid/main_loop.py\", line 682, in run\n  File \"site-packages/urwid/main_loop.py\", line 719, in _loop\n  File \"site-packages/urwid/raw_display.py\", line 393, in <lambda>\n  File \"site-packages/urwid/raw_display.py\", line 493, in parse_input\n  File \"site-packages/urwid/main_loop.py\", line 403, in _update\n  File \"site-packages/urwid/main_loop.py\", line 503, in process_input\n  File \"mitmproxy/tools/console/window.py\", line 308, in keypress\n  File \"site-packages/urwid/container.py\", line 1116, in keypress\n  File \"mitmproxy/tools/console/statusbar.py\", line 149, in keypress\n  File \"mitmproxy/tools/console/statusbar.py\", line 104, in keypress\nAttributeError: 'Edit' object has no attribute 'get_value'\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 3.0.0.dev1136 (commit 15f525e) binary\nPython:    3.5.3\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\nPlatform:  Darwin-16.7.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2018-01-09T21:33:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "452": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2775", "issue_id": "#2775", "issue_summary": "mitmproxy --version", "issue_description": "3thicalH4CK3R commented on 9 Jan 2018\nSteps to reproduce the problem:\nmitmproxy command gives traceback error. By itself or with any [options]\nAny other comments? What have you tried so far?\nNo matter what I do. I even upgraded my dist to the newest\nSystem information\nPRETTY_NAME=\"Kali GNU/Linux Rolling\"\nNAME=\"Kali GNU/Linux\"\nID=kali\nVERSION=\"2017.3\"\nVERSION_ID=\"2017.3\"\nID_LIKE=debian\nTraceback (most recent call last): File \"/usr/bin/mitmproxy\", line 11, in <module> load_entry_point('mitmproxy==2.0.2', 'console_scripts', 'mitmproxy')() File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 572, in load_entry_point return get_distribution(dist).load_entry_point(group, name) File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2752, in load_entry_point return ep.load() File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2405, in load return self.resolve() File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2411, in resolve module = __import__(self.module_name, fromlist=['__name__'], level=0) File \"/usr/lib/python3/dist-packages/mitmproxy/tools/main.py\", line 12, in <module> from mitmproxy.tools import cmdline # noqa File \"/usr/lib/python3/dist-packages/mitmproxy/tools/cmdline.py\", line 10, in <module> from mitmproxy.addons import view File \"/usr/lib/python3/dist-packages/mitmproxy/addons/__init__.py\", line 7, in <module> from mitmproxy.addons import onboarding File \"/usr/lib/python3/dist-packages/mitmproxy/addons/onboarding.py\", line 2, in <module> from mitmproxy.addons.onboardingapp import app File \"/usr/lib/python3/dist-packages/mitmproxy/addons/onboardingapp/app.py\", line 8, in <module> from mitmproxy.proxy import config File \"/usr/lib/python3/dist-packages/mitmproxy/proxy/__init__.py\", line 2, in <module> from .root_context import RootContext File \"/usr/lib/python3/dist-packages/mitmproxy/proxy/root_context.py\", line 3, in <module> from mitmproxy.proxy import protocol File \"/usr/lib/python3/dist-packages/mitmproxy/proxy/protocol/__init__.py\", line 39, in <module> from .tls import TlsClientHello File \"/usr/lib/python3/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 7, in <module> from mitmproxy.contrib import tls_parser File \"/usr/lib/python3/dist-packages/mitmproxy/contrib/tls_parser.py\", line 8, in <module> from construct import (Array, Bytes, Struct, UBInt16, UBInt32, UBInt8, PascalString, Embed, TunnelAdapter, GreedyRange, Switch, OptionalGreedyRange, Optional) ImportError: cannot import name 'UBInt16'", "issue_status": "Closed", "issue_reporting_time": "2018-01-09T05:17:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "453": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2774", "issue_id": "#2774", "issue_summary": "Traceback appears, when trying to create and then replay a flow with a request to mitm.it.", "issue_description": "Contributor\nkajojify commented on 8 Jan 2018 \u2022\nedited\nSteps to reproduce the problem:\nRun mitmproxy.\nCreate a new flow by pressing n: : view.create get http://mitm.it.\nTry to replay the corresponding flow by pressing r.\nSystem information\nMitmproxy: 3.0.0.dev0004 (commit 68c32d8)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-08T17:34:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "454": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2772", "issue_id": "#2772", "issue_summary": "Could I use socks proxy in upstream mode ?", "issue_description": "fztfztfztfzt commented on 8 Jan 2018\nSteps to reproduce the problem:\nCould I use socks proxy in upstream mode?\nlike,\nmitmproxy --mode upstream:socks://127.0.0.1:1080\nIt seems that mitmproxy doesn't support socks proxy yet?\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy: 3.0.0.dev27 (commit 1c769b0)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.10.0-42-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-08T11:03:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "455": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2771", "issue_id": "#2771", "issue_summary": "Traceback appears, when trying to scan myself with nmap.", "issue_description": "Contributor\nkajojify commented on 8 Jan 2018\nSteps to reproduce the problem:\nRun mitmproxy.\nScan yourself with nmap: nmap -sT localhost\nTraceback:\nSystem information\nMitmproxy: 3.0.0.dev0004 (commit 68c32d8)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-07T23:25:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "456": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2768", "issue_id": "#2768", "issue_summary": "Traceback appears, when trying to set mitmproxy's address as upstream server for reverse/upstream mode", "issue_description": "Contributor\nkajojify commented on 7 Jan 2018\nSteps to reproduce the problem:\nRun mitmproxy in reverse or upstream mode, using its own address as upstream server address:\nmitmproxy --mode reverse:http://127.0.0.1:8080 or\nmitmproxy --mode upstream:http://127.0.0.1:8080\nMake a request using pathoc pathoc 127.0.0.1:8080 \"get:/\" or a browser.\nI am seeing:\nAny other comments? What have you tried so far?\nhttps://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/proxy/protocol/base.py#L115\nshould be handled.\nSystem information\nMitmproxy: 3.0.0.dev1101 (commit d9d4d15) binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-01-06T21:38:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "457": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2767", "issue_id": "#2767", "issue_summary": "Traceback appears in Status Bar, when trying to run Mitmproxy with --proxyauth ldap (ldaps) argument", "issue_description": "Contributor\nkajojify commented on 6 Jan 2018 \u2022\nedited\nSteps to reproduce the problem:\nRun Mitmproxy with argument: mitmproxy --proxyauth ldap or mitmproxy --proxyauth ldaps\nI am seeing:\nAny other comments? What have you tried so far?\nThis issue is occured, because mitmproxy doesn't control the syntax of ldap authentication argument.\nhttps://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/addons/proxyauth.py#L147-L152\nSystem information\nMitmproxy: 3.0.0.dev1101 (commit d9d4d15) binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-01-06T14:09:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "458": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2766", "issue_id": "#2766", "issue_summary": "Traceback appears in Status Bar, when trying to replay live flow", "issue_description": "Contributor\nkajojify commented on 6 Jan 2018 \u2022\nedited\nSteps to reproduce the problem:\nRun pathod : pathod -a \"/=200:p0,10\"\nRun mitmproxy.\nSend get request to pathod through mitmproxy using pathoc:\npathoc -c localhost:9999 localhost:8080 'get:/'\nTry to replay the corresponding live flow in mitmproxy by pressing r.\nI am seeing:\nAny other comments? What have you tried so far?\nThis issue is relevant for the situations, when server didn't have time to send a response yet, but a user tries to replay the corresponding flow.\nI also faced this issue, when trying to replay mitm.it flow from onboardingapp.\nSystem information\nMitmproxy: 3.0.0.dev1101 (commit d9d4d15) binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-01-06T12:01:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "459": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2765", "issue_id": "#2765", "issue_summary": "Mitmproxy crashes, when giving it the file without flows data", "issue_description": "Contributor\nkajojify commented on 6 Jan 2018\nSteps to reproduce the problem:\nOpen mitmproxy.\nPress Shift L to load flows from the file.\nSet the filepath with any data excluding flows data. For example: /home/kajoj/myphoto.jpg\nI am seeing:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/io/io.py\", line 43, in stream\n    tnetstring.load(self.fo),\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/io/tnetstring.py\", line 178, in load\n    raise ValueError(\"not a tnetstring: missing or invalid length prefix\")\nValueError: not a tnetstring: missing or invalid length prefix\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 293, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 149, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 104, in keypress\n    self.prompt_execute(self._w.get_value())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 124, in prompt_execute\n    msg = p(txt)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/addons/view.py\", line 361, in load_file\n    for i in io.FlowReader(f).stream():\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/io/io.py\", line 55, in stream\n    raise exceptions.FlowReadException(\"Invalid data format.\")\nmitmproxy.exceptions.FlowReadException: Invalid data format.\nSystem information\nMitmproxy: 3.0.0.dev1101 (commit d9d4d15) binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-01-05T23:08:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "460": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2762", "issue_id": "#2762", "issue_summary": "Can't reverse flow list order by pressing v button", "issue_description": "Contributor\nkajojify commented on 6 Jan 2018 \u2022\nedited\nSteps to reproduce the problem:\nIntercept a few flows.\nPress v.\nI am seeing No such option console_order_reversed message in status bar.\nAny other comments? What have you tried so far?\nI could press v in Flows tab and change the order of flows in mitmproxy v2.0.2. Now I can't do this.\nSystem information\nMitmproxy: 3.0.0.dev1101 (commit d9d4d15) binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-01-05T18:54:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "461": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2760", "issue_id": "#2760", "issue_summary": "Mitmproxy crashes, when trying to create a new flow with incorrect url", "issue_description": "Contributor\nkajojify commented on 5 Jan 2018\nSteps to reproduce the problem:\nCreate a new flow by pressing n.\nFor getting ValueError: Invalid Host input https://google.com\\ as url.\nFor getting ValueError: No hostname given input https:// as url.\nI am getting:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 293, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 149, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 104, in keypress\n    self.prompt_execute(self._w.get_value())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 124, in prompt_execute\n    msg = p(txt)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/addons/view.py\", line 444, in create\n    req = http.HTTPRequest.make(method.upper(), url)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/net/http/request.py\", line 103, in make\n    req.url = url\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/net/http/request.py\", line 291, in url\n    self.scheme, self.host, self.port, self.path = mitmproxy.net.http.url.parse(url)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/net/http/url.py\", line 27, in parse\n    raise ValueError(\"No hostname given\")\nValueError: No hostname given\nAny other comments? What have you tried so far?\nRaised by unhandled:\nhttps://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/net/http/url.py#L50\nhttps://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/net/http/url.py#L27\nSystem information\nMitmproxy: 3.0.0.dev1101 (commit d9d4d15) binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-01-05T18:01:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "462": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2753", "issue_id": "#2753", "issue_summary": "Editing set-cookie attributes crashes mitmproxy", "issue_description": "Member\nmhils commented on 4 Jan 2018\nSteps to reproduce the problem:\nCreate a flow with response and edit its set-cookies\nPress enter on the Attributes column.\nTraceback (most recent call last):\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 303, in keypress\n    k\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/keymap.py\", line 130, in handle\n    return self.executor(b.command)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 174, in nav_select\n    self.master.inject_key(\"m_select\")\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 181, in inject_key\n    self.loop.process_input([key])\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 299, in keypress\n    k = super().keypress(size, k)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 2269, in keypress\n    key = w.keypress((mc,) + size[1:], key)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 36, in keypress\n    ret = super().keypress(size, key)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 356, in keypress\n    elif column.keypress(key, self) and not self.handle_key(key):\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/grideditor/col_subgrid.py\", line 30, in keypress\n    editor.master.view_grideditor(\nAttributeError: 'ConsoleMaster' object has no attribute 'view_grideditor'\nSystem information\nMitmproxy: 3.0.0.dev0002 (commit 299df48)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-04T12:05:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "463": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2752", "issue_id": "#2752", "issue_summary": "Editing set-cookies while no response is present crashes mitmproxy", "issue_description": "Member\nmhils commented on 4 Jan 2018 \u2022\nedited\nSteps to reproduce the problem:\nCreate a new flow by pressing n.\nEnter, e -> set-cookies\nTraceback (most recent call last):\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 299, in keypress\n    k = super().keypress(size, k)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 36, in keypress\n    ret = super().keypress(size, key)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 592, in keypress\n    *self.calculate_padding_filler(size, True)), key)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/overlay.py\", line 130, in keypress\n    self.master.keymap.handle(\"global\", key)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/keymap.py\", line 130, in handle\n    return self.executor(b.command)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 174, in nav_select\n    self.master.inject_key(\"m_select\")\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 181, in inject_key\n    self.loop.process_input([key])\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 299, in keypress\n    k = super().keypress(size, k)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 36, in keypress\n    ret = super().keypress(size, key)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 592, in keypress\n    *self.calculate_padding_filler(size, True)), key)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/overlay.py\", line 120, in keypress\n    self.callback(self.choices[self.walker.index])\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 264, in callback\n    self.master.commands.call(subcmd + \" \" + repl)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 409, in edit_focus\n    self.master.switch_view(\"edit_focus_setcookies\")\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 236, in switch_view\n    self.window.push(name)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 223, in push\n    self.focus_changed()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 200, in focus_changed\n    i.call(\"focus_changed\")\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 110, in call\n    getattr(self.top_window(), name)(*args, **kwargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 471, in focus_changed\n    self.get_data(self.master.view.focus.flow),\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/grideditor/editors.py\", line 149, in get_data\n    return self.data_in(flow.response.cookies.items(multi=True))\nAttributeError: 'NoneType' object has no attribute 'cookies'\nSystem information\nMitmproxy: 3.0.0.dev0002 (commit 299df48)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2018-01-04T12:03:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "464": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2751", "issue_id": "#2751", "issue_summary": "unable to run the proxy", "issue_description": "R-K07 commented on 4 Jan 2018\nSteps to reproduce the problem:\n1.mitmproxy --version\n2.\n3.\nAny other comments? What have you tried so far?\nSystem information\nTraceback (most recent call last):\nFile \"/usr/bin/mitmproxy\", line 11, in\nload_entry_point('mitmproxy==2.0.2', 'console_scripts', 'mitmproxy')()\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 572, in load_entry_point\nreturn get_distribution(dist).load_entry_point(group, name)\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 2752, in load_entry_point\nreturn ep.load()\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 2405, in load\nreturn self.resolve()\nFile \"/usr/lib/python3/dist-packages/pkg_resources/init.py\", line 2411, in resolve\nmodule = import(self.module_name, fromlist=['name'], level=0)\nFile \"/usr/lib/python3/dist-packages/mitmproxy/tools/main.py\", line 12, in\nfrom mitmproxy.tools import cmdline # noqa\nFile \"/usr/lib/python3/dist-packages/mitmproxy/tools/cmdline.py\", line 10, in\nfrom mitmproxy.addons import view\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addons/init.py\", line 7, in\nfrom mitmproxy.addons import onboarding\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addons/onboarding.py\", line 2, in\nfrom mitmproxy.addons.onboardingapp import app\nFile \"/usr/lib/python3/dist-packages/mitmproxy/addons/onboardingapp/app.py\", line 8, in\nfrom mitmproxy.proxy import config\nFile \"/usr/lib/python3/dist-packages/mitmproxy/proxy/init.py\", line 2, in\nfrom .root_context import RootContext\nFile \"/usr/lib/python3/dist-packages/mitmproxy/proxy/root_context.py\", line 3, in\nfrom mitmproxy.proxy import protocol\nFile \"/usr/lib/python3/dist-packages/mitmproxy/proxy/protocol/init.py\", line 39, in\nfrom .tls import TlsClientHello\nFile \"/usr/lib/python3/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 7, in\nfrom mitmproxy.contrib import tls_parser\nFile \"/usr/lib/python3/dist-packages/mitmproxy/contrib/tls_parser.py\", line 8, in\nfrom construct import (Array, Bytes, Struct, UBInt16, UBInt32, UBInt8, PascalString, Embed, TunnelAdapter, GreedyRange, Switch, OptionalGreedyRange, Optional)\nImportError: cannot import name 'UBInt16'", "issue_status": "Closed", "issue_reporting_time": "2018-01-04T02:55:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "465": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2750", "issue_id": "#2750", "issue_summary": "Mitmproxy crashes, when trying to export the flow in the folder with incorrect path", "issue_description": "Contributor\nkajojify commented on 4 Jan 2018\nSteps to reproduce the problem:\nRun mitmproxy without root privileges.\nStart intercepting something.\nChoose any flow.\nPress e. Choose a part of the flow - cookies for example.\nPress w to save cookies.\nTry to save cookies to the directory which requires only root permissions.\nI am getting:\nTraceback (most recent call last):\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/window.py\", line 318, in keypress\n    k = super().keypress(size, k)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 149, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 104, in keypress\n    self.prompt_execute(self._w.get_value())\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 124, in prompt_execute\n    msg = p(txt)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/commandexecutor.py\", line 17, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 221, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 212, in call_args\n    return self.commands[path].call(args)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 101, in call\n    ret = self.func(*pargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/command.py\", line 251, in wrapper\n    return function(*args, **kwargs)\n  File \"/home/kajoj/Mitmproxy/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 463, in grideditor_save\n    with open(path, \"w\", newline='', encoding=\"utf8\") as fp:\nPermissionError: [Errno 13] Permission denied: '/file.txt'\nSystem information\nMitmproxy: 3.0.0.dev1101 (commit d9d4d15) binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2018-01-03T22:12:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "466": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2749", "issue_id": "#2749", "issue_summary": "Unable to install mitmproxy", "issue_description": "R-K07 commented on 3 Jan 2018\nSteps to reproduce the problem:\n1.sudo apt-get install python3-dev python3-pip libffi-dev libssl-dev\n2.sudo pip3 install mitmproxy # or pip3 install --user mitmproxy\nAny other comments? What have you tried so far?\nSystem information\nsudo pip3 install mitmproxy\nCollecting mitmproxy\nUsing cached mitmproxy-0.18.3-py2.py3-none-any.whl\nRequirement already satisfied: configargparse<0.12,>=0.10 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: jsbeautifier<1.7,>=1.6.3 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: watchdog<0.9,>=0.8.3 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: Flask<0.12,>=0.10.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: pyperclip<1.6,>=1.5.22 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: tornado<4.5,>=4.3 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nCollecting pyOpenSSL<17.0,>=16.0 (from mitmproxy)\nUsing cached pyOpenSSL-16.2.0-py2.py3-none-any.whl\nRequirement already satisfied: backports.ssl-match-hostname<3.6,>=3.5.0.1 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nCollecting brotlipy<0.7,>=0.5.1 (from mitmproxy)\nUsing cached brotlipy-0.6.0-cp27-cp27mu-manylinux1_x86_64.whl\nCollecting passlib<1.7,>=1.6.5 (from mitmproxy)\nUsing cached passlib-1.6.5-py2.py3-none-any.whl\nCollecting blinker<1.5,>=1.4 (from mitmproxy)\nCollecting lxml<=3.6.0,>=3.5.0 (from mitmproxy)\nRequirement already satisfied: hyperframe<5,>=4.0.1 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: pyparsing<2.2,>=2.1.3 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nCollecting construct<2.6,>=2.5.2 (from mitmproxy)\nCollecting cryptography<1.6,>=1.3 (from mitmproxy)\nUsing cached cryptography-1.5.3.tar.gz\nRequirement already satisfied: six<1.11,>=1.10 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: click<7.0,>=6.2 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nCollecting requests<2.12,>=2.9.1 (from mitmproxy)\nUsing cached requests-2.11.1-py2.py3-none-any.whl\nRequirement already satisfied: html2text<=2016.9.19,>=2016.1.8 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: urwid<1.4,>=1.3.1 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: enum34<2,>=1.0.4; python_version == \"2.7\" in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: certifi>=2015.11.20.1 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: typing==3.5.2.2; python_version == \"2.7\" in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nCollecting cssutils<1.1,>=1.0.1 (from mitmproxy)\nCollecting Pillow<3.5,>=3.2 (from mitmproxy)\nUsing cached Pillow-3.4.2-cp27-cp27mu-manylinux1_x86_64.whl\nRequirement already satisfied: ipaddress<1.1,>=1.0.15; python_version == \"2.7\" in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: pyasn1<0.2,>=0.1.9 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nCollecting h2<2.5,>=2.4.1 (from mitmproxy)\nUsing cached h2-2.4.4-py2.py3-none-any.whl\nCollecting editorconfig>=0.12.0 (from jsbeautifier<1.7,>=1.6.3->mitmproxy)\nRequirement already satisfied: PyYAML>=3.10 in /usr/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy)\nRequirement already satisfied: argh>=0.24.1 in /usr/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy)\nRequirement already satisfied: pathtools>=0.1.1 in /usr/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy)\nRequirement already satisfied: Jinja2>=2.4 in /usr/lib/python2.7/dist-packages (from Flask<0.12,>=0.10.1->mitmproxy)\nRequirement already satisfied: Werkzeug>=0.7 in /usr/lib/python2.7/dist-packages (from Flask<0.12,>=0.10.1->mitmproxy)\nRequirement already satisfied: itsdangerous>=0.21 in /usr/lib/python2.7/dist-packages (from Flask<0.12,>=0.10.1->mitmproxy)\nRequirement already satisfied: backports-abc>=0.4 in /usr/lib/python2.7/dist-packages (from tornado<4.5,>=4.3->mitmproxy)\nRequirement already satisfied: singledispatch in /usr/lib/python2.7/dist-packages (from tornado<4.5,>=4.3->mitmproxy)\nRequirement already satisfied: cffi>=1.0.0 in /usr/local/lib/python2.7/dist-packages (from brotlipy<0.7,>=0.5.1->mitmproxy)\nRequirement already satisfied: idna>=2.0 in /usr/lib/python2.7/dist-packages (from cryptography<1.6,>=1.3->mitmproxy)\nRequirement already satisfied: setuptools>=11.3 in /usr/lib/python2.7/dist-packages (from cryptography<1.6,>=1.3->mitmproxy)\nCollecting hpack<3,>=2.2 (from h2<2.5,>=2.4.1->mitmproxy)\nUsing cached hpack-2.3.0-py2.py3-none-any.whl\nRequirement already satisfied: pycparser in /usr/local/lib/python2.7/dist-packages (from cffi>=1.0.0->brotlipy<0.7,>=0.5.1->mitmproxy)\nBuilding wheels for collected packages: cryptography\nRunning setup.py bdist_wheel for cryptography ... error\nComplete output from command /usr/bin/python -u -c \"import setuptools, tokenize;file='/tmp/pip-build-JOGF62/cryptography/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, file, 'exec'))\" bdist_wheel -d /tmp/tmpkLXe8Hpip-wheel- --python-tag cp27:\nrunning bdist_wheel\nrunning build\nrunning build_py\ncreating build\ncreating build/lib.linux-x86_64-2.7\ncreating build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/fernet.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/utils.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/init.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/about.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/exceptions.py -> build/lib.linux-x86_64-2.7/cryptography\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat\ncopying src/cryptography/hazmat/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat\ncreating build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/oid.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/extensions.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/base.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/init.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/general_name.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/name.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings\ncopying src/cryptography/hazmat/bindings/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/serialization.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/keywrap.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/cmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/constant_time.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/padding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/multibackend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/interfaces.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/binding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/_conditional.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncopying src/cryptography/hazmat/bindings/commoncrypto/binding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncopying src/cryptography/hazmat/bindings/commoncrypto/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/totp.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/hotp.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/hkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/pbkdf2.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/x963kdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/kbkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/concatkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/dh.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/rsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/dsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/ec.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/padding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/modes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/algorithms.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/base.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/interfaces\ncopying src/cryptography/hazmat/primitives/interfaces/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/interfaces\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/ciphers.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/decode_asn1.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/encode_asn1.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/rsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/cmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/backend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/dsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/ec.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/x509.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/ciphers.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/backend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\nrunning egg_info\nwriting requirements to src/cryptography.egg-info/requires.txt\nwriting src/cryptography.egg-info/PKG-INFO\nwriting top-level names to src/cryptography.egg-info/top_level.txt\nwriting dependency_links to src/cryptography.egg-info/dependency_links.txt\nwriting entry points to src/cryptography.egg-info/entry_points.txt\nreading manifest file 'src/cryptography.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nno previously-included directories found matching 'docs/_build'\nwarning: no previously-included files matching '*' found under directory 'vectors'\nwriting manifest file 'src/cryptography.egg-info/SOURCES.txt'\nrunning build_ext\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_padding.c'\ncreating build/temp.linux-x86_64-2.7\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_constant_time.c'\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_openssl.c'\nbuilding '_openssl' extension\ncreating build/temp.linux-x86_64-2.7/build\ncreating build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7\nx86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fno-strict-aliasing -Wdate-time -D_FORTIFY_SOURCE=2 -g -fdebug-prefix-map=/build/python2.7-j9xj4T/python2.7-2.7.14=. -fstack-protector-strong -Wformat -Werror=format-security -fPIC -I/usr/include/python2.7 -c build/temp.linux-x86_64-2.7/_openssl.c -o build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7/_openssl.o\nbuild/temp.linux-x86_64-2.7/_openssl.c:708:23: error: conflicting types for \u2018ASN1_TIME_to_generalizedtime\u2019\nASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(ASN1_TIME *,\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from build/temp.linux-x86_64-2.7/_openssl.c:517:0:\n/usr/include/openssl/asn1.h:628:23: note: previous declaration of \u2018ASN1_TIME_to_generalizedtime\u2019 was here\nASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(const ASN1_TIME *t,\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_ASN1_STRING_data\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:13445:3: warning: \u2018ASN1_STRING_data\u2019 is deprecated [-Wdeprecated-declarations]\nreturn ASN1_STRING_data(x0);\n^~~~~~\nIn file included from /usr/include/openssl/bn.h:31:0,\nfrom /usr/include/openssl/asn1.h:24,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:517:\n/usr/include/openssl/asn1.h:553:1: note: declared here\nDEPRECATEDIN_1_1_0(unsigned char *ASN1_STRING_data(ASN1_STRING *x))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_ASN1_STRING_data\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:13468:3: warning: \u2018ASN1_STRING_data\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = ASN1_STRING_data(x0); }\n^\nIn file included from /usr/include/openssl/bn.h:31:0,\nfrom /usr/include/openssl/asn1.h:24,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:517:\n/usr/include/openssl/asn1.h:553:1: note: declared here\nDEPRECATEDIN_1_1_0(unsigned char *ASN1_STRING_data(ASN1_STRING *x))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_f_buffer\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14808:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_f_buffer();\n^~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_f_buffer\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14818:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_f_buffer(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_f_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14832:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_f_null();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_f_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14842:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_f_null(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_fd\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16261:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_fd();\n^~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_fd\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16271:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_fd(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_file\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16285:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_file();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_file\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16295:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_file(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_mem\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16309:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_mem();\n^~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_mem\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16319:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_mem(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16333:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_null();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16343:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_null(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_socket\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16357:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_socket();\n^~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_socket\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16367:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_socket(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22839:3: warning: \u2018DTLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1644:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_client_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22849:3: warning: \u2018DTLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1644:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_client_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22863:3: warning: \u2018DTLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1642:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22873:3: warning: \u2018DTLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1642:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22887:3: warning: \u2018DTLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1643:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_server_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22897:3: warning: \u2018DTLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1643:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_server_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_OPENSSL_config\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:39568:3: warning: \u2018OPENSSL_config\u2019 is deprecated [-Wdeprecated-declarations]\nOPENSSL_config(x0);\n^~~~~~~~~~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/conf.h:92:1: note: declared here\nDEPRECATEDIN_1_1_0(void OPENSSL_config(const char *config_name))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_OPENSSL_config\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:39590:3: warning: \u2018OPENSSL_config\u2019 is deprecated [-Wdeprecated-declarations]\n{ OPENSSL_config(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/conf.h:92:1: note: declared here\nDEPRECATEDIN_1_1_0(void OPENSSL_config(const char *config_name))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52764:3: warning: \u2018TLSv1_1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1632:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_client_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52774:3: warning: \u2018TLSv1_1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1632:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_client_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52788:3: warning: \u2018TLSv1_1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1630:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52798:3: warning: \u2018TLSv1_1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1630:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52812:3: warning: \u2018TLSv1_1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1631:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_server_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52822:3: warning: \u2018TLSv1_1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1631:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_server_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52836:3: warning: \u2018TLSv1_2_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1638:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_client_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52846:3: warning: \u2018TLSv1_2_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1638:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_client_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52860:3: warning: \u2018TLSv1_2_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1636:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52870:3: warning: \u2018TLSv1_2_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1636:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52884:3: warning: \u2018TLSv1_2_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1637:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_server_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52894:3: warning: \u2018TLSv1_2_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1637:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_server_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52908:3: warning: \u2018TLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1626:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_client_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52918:3: warning: \u2018TLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1626:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_client_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52932:3: warning: \u2018TLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1624:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52942:3: warning: \u2018TLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1624:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52956:3: warning: \u2018TLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1625:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_server_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52966:3: warning: \u2018TLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1625:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_server_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_CRL_get_lastUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54001:3: warning: \u2018X509_CRL_get_lastUpdate\u2019 is deprecated [-Wdeprecated-declarations]\nreturn X509_CRL_get_lastUpdate(x0);\n^~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:708:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_lastUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_CRL_get_lastUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54024:3: warning: \u2018X509_CRL_get_lastUpdate\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = X509_CRL_get_lastUpdate(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:708:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_lastUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_CRL_get_nextUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54037:3: warning: \u2018X509_CRL_get_nextUpdate\u2019 is deprecated [-Wdeprecated-declarations]\nreturn X509_CRL_get_nextUpdate(x0);\n^~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:709:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_nextUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_CRL_get_nextUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54060:3: warning: \u2018X509_CRL_get_nextUpdate\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = X509_CRL_get_nextUpdate(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:709:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_nextUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_get0_signature\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:59497:23: warning: passing argument 1 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\nX509_get0_signature(x0, x1, x2);\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const ASN1_BIT_STRING ** {aka const struct asn1_string_st **}\u2019 but argument is of type \u2018ASN1_OCTET_STRING ** {aka struct asn1_string_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c:59497:27: warning: passing argument 2 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\nX509_get0_signature(x0, x1, x2);\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const X509_ALGOR ** {aka const struct X509_algor_st **}\u2019 but argument is of type \u2018X509_ALGOR ** {aka struct X509_algor_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_get0_signature\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:59549:25: warning: passing argument 1 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n{ X509_get0_signature(x0, x1, x2); }\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const ASN1_BIT_STRING ** {aka const struct asn1_string_st **}\u2019 but argument is of type \u2018ASN1_OCTET_STRING ** {aka struct asn1_string_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c:59549:29: warning: passing argument 2 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n{ X509_get0_signature(x0, x1, x2); }\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const X509_ALGOR ** {aka const struct X509_algor_st **}\u2019 but argument is of type \u2018X509_ALGOR ** {aka struct X509_algor_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nerror: command 'x86_64-linux-gnu-gcc' failed with exit status 1\nFailed building wheel for cryptography\nRunning setup.py clean for cryptography\nFailed to build cryptography\nInstalling collected packages: cryptography, pyOpenSSL, brotlipy, passlib, blinker, lxml, construct, requests, cssutils, Pillow, hpack, h2, mitmproxy, editorconfig\nFound existing installation: cryptography 2.1.4\nUninstalling cryptography-2.1.4:\nSuccessfully uninstalled cryptography-2.1.4\nRunning setup.py install for cryptography ... error\nComplete output from command /usr/bin/python -u -c \"import setuptools, tokenize;file='/tmp/pip-build-JOGF62/cryptography/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, file, 'exec'))\" install --record /tmp/pip-24YSPX-record/install-record.txt --single-version-externally-managed --compile:\nrunning install\nrunning build\nrunning build_py\ncreating build\ncreating build/lib.linux-x86_64-2.7\ncreating build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/fernet.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/utils.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/init.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/about.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/exceptions.py -> build/lib.linux-x86_64-2.7/cryptography\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat\ncopying src/cryptography/hazmat/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat\ncreating build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/oid.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/extensions.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/base.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/init.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/general_name.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/name.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings\ncopying src/cryptography/hazmat/bindings/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/serialization.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/keywrap.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/cmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/constant_time.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/padding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/multibackend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/interfaces.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/binding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/_conditional.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncopying src/cryptography/hazmat/bindings/commoncrypto/binding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncopying src/cryptography/hazmat/bindings/commoncrypto/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/totp.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/hotp.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/hkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/pbkdf2.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/x963kdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/kbkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/concatkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/dh.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/rsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/dsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/ec.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/padding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/modes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/algorithms.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/base.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/interfaces\ncopying src/cryptography/hazmat/primitives/interfaces/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/interfaces\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/ciphers.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/decode_asn1.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/encode_asn1.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/rsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/cmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/backend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/dsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/ec.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/x509.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/ciphers.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/backend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\nrunning egg_info\nwriting requirements to src/cryptography.egg-info/requires.txt\nwriting src/cryptography.egg-info/PKG-INFO\nwriting top-level names to src/cryptography.egg-info/top_level.txt\nwriting dependency_links to src/cryptography.egg-info/dependency_links.txt\nwriting entry points to src/cryptography.egg-info/entry_points.txt\nreading manifest file 'src/cryptography.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nno previously-included directories found matching 'docs/_build'\nwarning: no previously-included files matching '*' found under directory 'vectors'\nwriting manifest file 'src/cryptography.egg-info/SOURCES.txt'\nrunning build_ext\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_padding.c'\ncreating build/temp.linux-x86_64-2.7\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_constant_time.c'\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_openssl.c'\nbuilding '_openssl' extension\ncreating build/temp.linux-x86_64-2.7/build\ncreating build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7\nx86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fno-strict-aliasing -Wdate-time -D_FORTIFY_SOURCE=2 -g -fdebug-prefix-map=/build/python2.7-j9xj4T/python2.7-2.7.14=. -fstack-protector-strong -Wformat -Werror=format-security -fPIC -I/usr/include/python2.7 -c build/temp.linux-x86_64-2.7/_openssl.c -o build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7/_openssl.o\nbuild/temp.linux-x86_64-2.7/_openssl.c:708:23: error: conflicting types for \u2018ASN1_TIME_to_generalizedtime\u2019\nASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(ASN1_TIME *,\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from build/temp.linux-x86_64-2.7/_openssl.c:517:0:\n/usr/include/openssl/asn1.h:628:23: note: previous declaration of \u2018ASN1_TIME_to_generalizedtime\u2019 was here\nASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(const ASN1_TIME *t,\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_ASN1_STRING_data\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:13445:3: warning: \u2018ASN1_STRING_data\u2019 is deprecated [-Wdeprecated-declarations]\nreturn ASN1_STRING_data(x0);\n^~~~~~\nIn file included from /usr/include/openssl/bn.h:31:0,\nfrom /usr/include/openssl/asn1.h:24,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:517:\n/usr/include/openssl/asn1.h:553:1: note: declared here\nDEPRECATEDIN_1_1_0(unsigned char *ASN1_STRING_data(ASN1_STRING *x))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_ASN1_STRING_data\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:13468:3: warning: \u2018ASN1_STRING_data\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = ASN1_STRING_data(x0); }\n^\nIn file included from /usr/include/openssl/bn.h:31:0,\nfrom /usr/include/openssl/asn1.h:24,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:517:\n/usr/include/openssl/asn1.h:553:1: note: declared here\nDEPRECATEDIN_1_1_0(unsigned char *ASN1_STRING_data(ASN1_STRING *x))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_f_buffer\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14808:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_f_buffer();\n^~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_f_buffer\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14818:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_f_buffer(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_f_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14832:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_f_null();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_f_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14842:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_f_null(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_fd\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16261:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_fd();\n^~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_fd\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16271:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_fd(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_file\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16285:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_file();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_file\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16295:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_file(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_mem\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16309:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_mem();\n^~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_mem\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16319:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_mem(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16333:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_null();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16343:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_null(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_socket\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16357:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_socket();\n^~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_socket\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16367:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_socket(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22839:3: warning: \u2018DTLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1644:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_client_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22849:3: warning: \u2018DTLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1644:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_client_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22863:3: warning: \u2018DTLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1642:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22873:3: warning: \u2018DTLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1642:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22887:3: warning: \u2018DTLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1643:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_server_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22897:3: warning: \u2018DTLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1643:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_server_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_OPENSSL_config\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:39568:3: warning: \u2018OPENSSL_config\u2019 is deprecated [-Wdeprecated-declarations]\nOPENSSL_config(x0);\n^~~~~~~~~~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/conf.h:92:1: note: declared here\nDEPRECATEDIN_1_1_0(void OPENSSL_config(const char *config_name))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_OPENSSL_config\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:39590:3: warning: \u2018OPENSSL_config\u2019 is deprecated [-Wdeprecated-declarations]\n{ OPENSSL_config(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/conf.h:92:1: note: declared here\nDEPRECATEDIN_1_1_0(void OPENSSL_config(const char *config_name))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52764:3: warning: \u2018TLSv1_1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1632:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_client_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52774:3: warning: \u2018TLSv1_1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1632:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_client_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52788:3: warning: \u2018TLSv1_1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1630:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52798:3: warning: \u2018TLSv1_1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1630:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52812:3: warning: \u2018TLSv1_1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1631:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_server_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52822:3: warning: \u2018TLSv1_1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1631:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_server_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52836:3: warning: \u2018TLSv1_2_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1638:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_client_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52846:3: warning: \u2018TLSv1_2_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1638:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_client_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52860:3: warning: \u2018TLSv1_2_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1636:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52870:3: warning: \u2018TLSv1_2_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1636:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52884:3: warning: \u2018TLSv1_2_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1637:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_server_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52894:3: warning: \u2018TLSv1_2_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1637:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_server_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52908:3: warning: \u2018TLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1626:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_client_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52918:3: warning: \u2018TLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1626:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_client_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52932:3: warning: \u2018TLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1624:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52942:3: warning: \u2018TLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1624:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52956:3: warning: \u2018TLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1625:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_server_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52966:3: warning: \u2018TLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1625:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_server_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_CRL_get_lastUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54001:3: warning: \u2018X509_CRL_get_lastUpdate\u2019 is deprecated [-Wdeprecated-declarations]\nreturn X509_CRL_get_lastUpdate(x0);\n^~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:708:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_lastUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_CRL_get_lastUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54024:3: warning: \u2018X509_CRL_get_lastUpdate\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = X509_CRL_get_lastUpdate(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:708:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_lastUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_CRL_get_nextUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54037:3: warning: \u2018X509_CRL_get_nextUpdate\u2019 is deprecated [-Wdeprecated-declarations]\nreturn X509_CRL_get_nextUpdate(x0);\n^~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:709:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_nextUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_CRL_get_nextUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54060:3: warning: \u2018X509_CRL_get_nextUpdate\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = X509_CRL_get_nextUpdate(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:709:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_nextUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_get0_signature\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:59497:23: warning: passing argument 1 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\nX509_get0_signature(x0, x1, x2);\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const ASN1_BIT_STRING ** {aka const struct asn1_string_st **}\u2019 but argument is of type \u2018ASN1_OCTET_STRING ** {aka struct asn1_string_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c:59497:27: warning: passing argument 2 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\nX509_get0_signature(x0, x1, x2);\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const X509_ALGOR ** {aka const struct X509_algor_st **}\u2019 but argument is of type \u2018X509_ALGOR ** {aka struct X509_algor_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_get0_signature\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:59549:25: warning: passing argument 1 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n{ X509_get0_signature(x0, x1, x2); }\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const ASN1_BIT_STRING ** {aka const struct asn1_string_st **}\u2019 but argument is of type \u2018ASN1_OCTET_STRING ** {aka struct asn1_string_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c:59549:29: warning: passing argument 2 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n{ X509_get0_signature(x0, x1, x2); }\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const X509_ALGOR ** {aka const struct X509_algor_st **}\u2019 but argument is of type \u2018X509_ALGOR ** {aka struct X509_algor_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nerror: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n----------------------------------------\nRolling back uninstall of cryptography\nCommand \"/usr/bin/python -u -c \"import setuptools, tokenize;file='/tmp/pip-build-JOGF62/cryptography/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, file, 'exec'))\" install --record /tmp/pip-24YSPX-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-JOGF62/cryptography/\nroot@rk:~# mitmproxy -T --host", "issue_status": "Closed", "issue_reporting_time": "2018-01-03T16:37:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "467": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2747", "issue_id": "#2747", "issue_summary": "Just another error", "issue_description": "Mradr commented on 3 Jan 2018 \u2022\nedited\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\nJust reporting more errors in\nSystem information\n2.0.2 on windows", "issue_status": "Closed", "issue_reporting_time": "2018-01-03T01:12:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "468": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2743", "issue_id": "#2743", "issue_summary": "Bug in latest master - ModuleNotFoundError: No module named \u2018libmproxy\u2019", "issue_description": "caffeinatedMike commented on 2 Jan 2018\nI read in earlier issues (from 2016) that libmproxy was no longer used. I guess it was added back in recently? Anyway, that is the error I get when trying to run my mitmdump command.\nRundown:\nI want to turn my laptop into a hotspot and run mitmproxy on it, so that all devices that connect to it will have my script injected to every webpage they visit (it\u2019s a mining script). So, in exchange for the free WiFi I can earn some revenue. It is fully exposed that this will happen. Is the line I\u2019m using to run mitmproxy/mitmdump in this snapshot correct for this? Will this work as I intended it? Right now after I run the command and try to connect to the hotspot I can't get internet connection from it. I made sure to turn port forwarding on with\nsysctl -w net.ipv4.ip_forward=1\nThen I run\niptables -t nat -A PREROUTING -i wlan0 -p tcp --dport 80 -j REDIRECT --to-port 8080\niptables -t nat -A PREROUTING -i wlan0 -p tcp --dport 443 -j REDIRECT --to-port 8080\nThen I run the mitmproxy command as shown in the screenshot.\nmitmdump --mode transparent -p 8080 -s \"js_injector.js\"\nWhat am I doing wrong?", "issue_status": "Closed", "issue_reporting_time": "2018-01-02T12:54:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "469": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2740", "issue_id": "#2740", "issue_summary": "Possibly a bug? infinite clientconnect when trying to access http://IP:8080/ in trasnparent mode", "issue_description": "AntiverX commented on 1 Jan 2018\nUbuntu 17.10\nI'm using mimdump cloned from git.\nI have a vpn server and use the following command to set up a transparent proxy\nsudo iptables -t nat -A OUTPUT -p tcp -m owner ! --uid-owner antiver --dport 80 -j REDIRECT --to-port 8080\nIf my client access http://IP:8080/ directly from browser, the mitmdump will show infinite clientconnect until the server breaks down because of the shrotage of memory.", "issue_status": "Closed", "issue_reporting_time": "2018-01-01T01:59:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "470": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2739", "issue_id": "#2739", "issue_summary": "ImportError: cannot import name 'UBInt16'", "issue_description": "caffeinatedMike commented on 1 Jan 2018\nThe title explains the error I receive when trying to run the command\nmitmproxy -T --host -port 8080\nLooking at the Traceback it's pointing to the tls-parser.py file line 8, then provides\nfrom construct import (Array, Bytes, Struct, UBInt16, UBInt32, UBInt8, PascalString, Embed, TunnelAdapter, GreedyRange, Switch, OptionalGreedyRange, Optional)\nIs this a bug or is there something I can do to fix this issue myself?", "issue_status": "Closed", "issue_reporting_time": "2017-12-31T23:15:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "471": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2738", "issue_id": "#2738", "issue_summary": "Mitmproxy lets us interact with other tab, when focusing on the other one.", "issue_description": "Contributor\nkajojify commented on 1 Jan 2018 \u2022\nedited\nSteps to reproduce the problem:\nOpen mitmproxy.\nPress - to open two pane layout.\nStart intercepting something.\nChoose any flow to see Flow details.\nChange focus on other tab by pressing Shift+Tab.\nClick on \"Request\" or \"Response\" by pressing left button of mouse.\nI am getting:\nTraceback (most recent call last):\n  File \"mitmproxy/tools/console/master.py\", line 216, in run\n  File \"site-packages/urwid/main_loop.py\", line 278, in run\n  File \"site-packages/urwid/main_loop.py\", line 376, in _run\n  File \"site-packages/urwid/main_loop.py\", line 682, in run\n  File \"site-packages/urwid/main_loop.py\", line 719, in _loop\n  File \"site-packages/urwid/raw_display.py\", line 393, in <lambda>\n  File \"site-packages/urwid/raw_display.py\", line 493, in parse_input\n  File \"site-packages/urwid/main_loop.py\", line 403, in _update\n  File \"site-packages/urwid/main_loop.py\", line 500, in process_input\n  File \"mitmproxy/tools/console/window.py\", line 277, in mouse_event\n  File \"site-packages/urwid/container.py\", line 1169, in mouse_event\n  File \"site-packages/urwid/container.py\", line 1687, in mouse_event\n  File \"site-packages/urwid/container.py\", line 1169, in mouse_event\n  File \"site-packages/urwid/container.py\", line 1169, in mouse_event\n  File \"site-packages/urwid/container.py\", line 1148, in mouse_event\n  File \"site-packages/urwid/container.py\", line 2201, in mouse_event\n  File \"mitmproxy/tools/console/tabs.py\", line 19, in mouse_event\n  File \"mitmproxy/tools/console/tabs.py\", line 34, in change_tab\n  File \"mitmproxy/tools/console/tabs.py\", line 73, in show\n  File \"mitmproxy/tools/console/flowview.py\", line 86, in view_response\n  File \"mitmproxy/tools/console/flowview.py\", line 160, in conn_text\n  File \"mitmproxy/command.py\", line 221, in call\n  File \"mitmproxy/command.py\", line 212, in call_args\n  File \"mitmproxy/command.py\", line 101, in call\n  File \"mitmproxy/command.py\", line 251, in wrapper\n  File \"mitmproxy/tools/console/consoleaddons.py\", line 514, in flowview_mode\nmitmproxy.exceptions.CommandError: Not viewing a flow.\nAny other comments? What have you tried so far?\nI think the problem is mitmproxy lets us to interact with other tab, when focusing on other.\nSo, we can click on different stuff in not focused tab by pressing left button of mouse.\nIt is possible due to https://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/tools/console/tabs.py\n(in particular https://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/tools/console/tabs.py#L17).\ntabs.Tabs is the superclass for HelpView and FlowDetails classes, so the problem is relevant to \"Flow details\" and \"Help\" tabs. Continue to work on it.\nSystem information\nMitmproxy: 3.0.0.dev1101 (commit d9d4d15) binary\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.4.0-104-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2017-12-31T19:43:51Z", "fixed_by": "#2755", "pull_request_summary": "fix #2738", "pull_request_description": "Member\nmhils commented on 4 Jan 2018\nThis fixes #2738 by changing the semantics of Window.current and Window.current_window: If the focused pane shows a different widget, we now check if maybe the unfocused pane contains a matching widget and if so, return that. This is particularly nice because we can now use the command reference on the right pane to execute widget-specific actions on the left pane.", "pull_request_status": "Merged", "issue_fixed_time": "2018-01-04T15:36:24Z", "files_changed": [["34", "mitmproxy/tools/console/window.py"]]}, "472": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2737", "issue_id": "#2737", "issue_summary": "Update pysftp", "issue_description": "Member\nmhils commented on 31 Dec 2017\nThis requires that I update the snapshot server to have a consistent hostkey: This is now documented at https://hub.docker.com/r/atmoz/sftp/.", "issue_status": "Closed", "issue_reporting_time": "2017-12-31T16:38:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "473": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2731", "issue_id": "#2731", "issue_summary": "Connection reset during SSL handshake (or so it seems)", "issue_description": "aspyct commented on 29 Dec 2017\nSteps to reproduce the problem:\nNot sure how to reproduce that issue, but I believe it happened when I switched off the wifi on my android device. Said device was communicating with a server through mitmdump.\nThe issue occurred once, and mitmdump continued operating normally.\nAny other comments? What have you tried so far?\nNot a blocking issue, so I went on with business as usual, thankful that I didn't even have to restart mitmdump.\nSystem information\nmitmdump 1.0.2\nCrash log attached.\nmitmdump-log.txt", "issue_status": "Closed", "issue_reporting_time": "2017-12-29T15:52:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "474": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2730", "issue_id": "#2730", "issue_summary": "TestTCPClient.test_spoof_address and TestTCPClient.test_spoof_address errors found while tox testing", "issue_description": "Contributor\nbksahu commented on 28 Dec 2017 \u2022\nedited\nI tested with tox on my machine running Ubuntu 16.04 having both python 3.5 and 3.6 and got two commands failed errors TestTCPClient.test_spoof_address and TestTCPClient.test_spoof_address.\nSteps to reproduce the problem:\nI am using Ubuntu 16.04. I had both py35 and py36 installed.\nI clone the repo: git clone https://github.com/mitmproxy/mitmproxy\ncd mitmproxy\nRun the dev.sh from terminal\nsudo ./dev.sh\n. venv/bin/activate\ntox (Also tried tox -e py35/6)\nExpected behavior:\npy35: commands succeeded\npy36: commands succeeded\nError found:\n=================================== FAILURES ===================================\n___________________________ TestProxyServer.test_err ___________________________\nself = <test.mitmproxy.test_proxy.TestProxyServer object at 0x7fb3be65bac8>\n\n    @skip_windows\n    def test_err(self):\n        # binding to 0.0.0.0:1 works without special permissions on Windows\n        conf = ProxyConfig(options.Options(listen_port=1))\n        with pytest.raises(Exception, match=\"Error starting proxy server\"):\n>           ProxyServer(conf)\nE Failed: DID NOT RAISE <class 'Exception'> matching 'Error starting proxy server'\ntest/mitmproxy/test_proxy.py:65: Failed\n_______________________ TestTCPClient.test_spoof_address _______________________\nself = <test.mitmproxy.net.test_tcp.TestTCPClient object at 0x7fb3bd7cfba8>\n\n    def test_spoof_address(self):\n        c = tcp.TCPClient((\"127.0.0.1\", self.port), spoof_source_address=(\"127.0.0.1\", 0))\n        with pytest.raises(exceptions.TcpException, match=\"Failed to spoof\"):\n>           c.connect()\nE Failed: DID NOT RAISE <class 'mitmproxy.exceptions.TcpException'> matching 'Failed to spoof'\ntest/mitmproxy/net/test_tcp.py:628: Failed\n============== 2 failed, 1328 passed, 1 skipped in 90.52 seconds ===============\nERROR: InvocationError: '/home/bksahu/Documents/Github/mitmproxy/.tox/py35/bin/pytest --timeout 60 --cov-report= --cov=mitmproxy --cov=pathod --full-cov=mitmproxy/ --full-cov=pathod/'\nAny other comments? What have you tried so far?\nTried tox -e py35/6 and got the same error for both. I looked up the documentation of both mitmproxy and tox but I couldn't find anything relevant.\nSystem information\nMitmproxy: 3.0.0dev1082 (ddb8f43)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-4.10.0-28-generic-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2017-12-28T14:27:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "475": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2729", "issue_id": "#2729", "issue_summary": "how to use mitmproxy on a vpn server to manipulate the traffic", "issue_description": "AntiverX commented on 28 Dec 2017\nI have a vpn server and I want to monitor the traffic on the server using mitmproxy to see weather people connecting to the server is visiting some forbidden sites and modify the reponse to some kind of words like \"you are visiting illegal sites.\"\nThanks.", "issue_status": "Closed", "issue_reporting_time": "2017-12-28T07:13:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "476": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2726", "issue_id": "#2726", "issue_summary": "mitmproxy crashed when press D", "issue_description": "qingyunha commented on 26 Dec 2017\nSteps to reproduce the problem:\nstart mitmproxy, make some request\npress Shift-d or D\nTraceback (most recent call last):\n  File \"mitmproxy/tools/console/master.py\", line 281, in run\n  File \"site-packages/urwid/main_loop.py\", line 278, in run\n  File \"site-packages/urwid/main_loop.py\", line 376, in _run\n  File \"site-packages/urwid/main_loop.py\", line 682, in run\n  File \"site-packages/urwid/main_loop.py\", line 719, in _loop\n  File \"site-packages/urwid/raw_display.py\", line 393, in <lambda>\n  File \"site-packages/urwid/raw_display.py\", line 493, in parse_input\n  File \"site-packages/urwid/main_loop.py\", line 403, in _update\n  File \"site-packages/urwid/main_loop.py\", line 503, in process_input\n  File \"mitmproxy/tools/console/window.py\", line 84, in keypress\n  File \"site-packages/urwid/container.py\", line 1128, in keypress\n  File \"mitmproxy/tools/console/flowlist.py\", line 417, in keypress\n  File \"site-packages/urwid/listbox.py\", line 987, in keypress\n  File \"site-packages/urwid/listbox.py\", line 939, in make_cursor_visible\n  File \"mitmproxy/tools/console/flowlist.py\", line 284, in get_focus\n  File \"mitmproxy/tools/console/flowlist.py\", line 123, in __init__\n  File \"mitmproxy/tools/console/flowlist.py\", line 132, in get_text\n  File \"mitmproxy/tools/console/common.py\", line 427, in format_flow\nAttributeError: 'NoneType' object has no attribute 'state'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 2.0.2 (release version) Precompiled Binary\nPython version: 3.5.2\nPlatform: Linux-4.11.3-1-ARCH-x86_64-with-arch-Arch-Linux\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nLinux distro: arch Arch Linux", "issue_status": "Closed", "issue_reporting_time": "2017-12-26T03:54:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "477": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2725", "issue_id": "#2725", "issue_summary": "There is something wrong with dealing AMQP?", "issue_description": "a3135134 commented on 26 Dec 2017 \u2022\nedited\nSteps to reproduce the problem:\n1.I'm trying to see the Azure IoT SDK which supports AMQP on SSL (port 5671) and set up a MITM using command like\"mitmdump -T --raw-tcp\".\n2.There will be a HTTP parse error blocking the mitmdump.\n(BTW, I changed source code fixing the blocking problem(see below please). However, I still cannot see plain AMQP on SSL.)\nAny other comments? What have you tried so far?\nI looked into the sourcecode on github, it seems that file \"proxy/root_context.py\" line 113 \"Check for raw tcp mode\" is wrong. I think it should be \"if self.config.options.rawtcp or not is_ascii:\" , because AMQP starts with \"A\"? I changed that myself and mitmdump won't be blocked. Is it a bug?\n(However, I still cannot see plain AMQP on SSL by wireshark. Does anyone sniff AMQP on SSL successfully? I did the same experiment on MQTTS and it works well.)\nhttps://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/proxy/root_context.py\nSystem information\nmitmproxy version 2.0.2 (release version)\nPython version 3.6.4rc1\nPlatform: Linux-4.13.0-kali1-amd64-x86_64-with-Kali-kali-rolling-kali-rolling\nSSL version: OpenSSL 1.0.2n 7 Dec 2017", "issue_status": "Closed", "issue_reporting_time": "2017-12-26T03:14:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "478": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2724", "issue_id": "#2724", "issue_summary": "Proxy crashes on flow.kill()", "issue_description": "EugeneAbramchuk commented on 22 Dec 2017 \u2022\nedited\nSteps to reproduce the problem:\n(Sorry if this is my own mistake, I just started poking around with mitmproxy)\nLoad the proxy with the scenario which is supposed to kill every websocket request with 50% chance\nfrom mitmproxy import ctx, websocket\nimport random\n\n\ndef websocket_message(flow: websocket.WebSocketFlow) -> None:\n    ctx.log.info(flow.messages[-1].content.strip()[:20])\n    if random.random() < 50:\n        flow.kill()\nStart the test which opens a websocket connection through the proxy and sends several binary chunks of data.\n=> Proxy crashes\nTraceback (most recent call last):\n  File \"/Users/eugene/gitrepo/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/Users/eugene/gitrepo/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/Users/eugene/gitrepo/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/Users/eugene/gitrepo/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/Users/eugene/gitrepo/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 715, in _loop\n    alarm_callback()\n  File \"/Users/eugene/gitrepo/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 164, in cb\n    callback(self, user_data)\n  File \"/Users/eugene/gitrepo/mitmproxy/mitmproxy/tools/console/master.py\", line 175, in ticker\n    changed = self.tick(timeout=0)\n  File \"/Users/eugene/gitrepo/mitmproxy/mitmproxy/master.py\", line 109, in tick\n    self.addons.handle_lifecycle(mtype, obj)\n  File \"/Users/eugene/gitrepo/mitmproxy/mitmproxy/addonmanager.py\", line 234, in handle_lifecycle\n    message.reply.take()\n  File \"/Users/eugene/gitrepo/mitmproxy/mitmproxy/controller.py\", line 88, in take\n    \"Reply is {}, but expected it to be start.\".format(self.state)\nmitmproxy.exceptions.ControlException: Reply is committed, but expected it to be start.\n\nmitmproxy has crashed!\nMitmproxy: 3.0.0dev1075 (a6a4b1c3) \nPython:    3.6.3\nOpenSSL:   OpenSSL 1.1.0g  2 Nov 2017\nPlatform:  Darwin-17.2.0-x86_64-i386-64bit", "issue_status": "Closed", "issue_reporting_time": "2017-12-22T14:39:47Z", "fixed_by": "#2728", "pull_request_summary": "websocket: docs++ and kill messages", "pull_request_description": "Member\nKriechi commented on 28 Dec 2017\nfixes #2724", "pull_request_status": "Merged", "issue_fixed_time": "2017-12-29T09:55:29Z", "files_changed": [["12", "docs/scripting/api.rst"], ["4", "docs/scripting/events.rst"], ["9", "mitmproxy/proxy/protocol/websocket.py"], ["37", "mitmproxy/websocket.py"], ["21", "test/mitmproxy/test_websocket.py"]]}, "479": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2723", "issue_id": "#2723", "issue_summary": "UnicodeEncodeError visiting some random websites", "issue_description": "Contributor\nStevenVanAcker commented on 21 Dec 2017\nSteps to reproduce the problem:\nstart mitmdump with default parameters\npoint your browser through it\nvisit http://www.priceminister.com/\nmitmdump crashes with:\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmdump\", line 9, in\nload_entry_point('mitmproxy==2.0.2', 'console_scripts', 'mitmdump')()\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/main.py\", line 126, in mitmdump\nmaster.run()\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/dump.py\", line 69, in run\nsuper().run()\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/master.py\", line 84, in run\nself.tick(0.1)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/master.py\", line 109, in tick\nhandle_func(obj)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/controller.py\", line 70, in wrapper\nmaster.addons(f.name, message)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addonmanager.py\", line 90, in call\nself.invoke(i, name, *args, **kwargs)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addonmanager.py\", line 85, in invoke\nfunc(*args, **kwargs)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 224, in response\nself.echo_flow(f)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 203, in echo_flow\nself._echo_response_line(f)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 192, in _echo_response_line\nself.echo(line)\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/addons/dumper.py\", line 54, in echo\nclick.secho(text, file=self.outfp, **style)\nFile \"/usr/local/lib/python3.5/dist-packages/click/termui.py\", line 420, in secho\nreturn echo(style(text, **styles), file=file, nl=nl, err=err, color=color)\nFile \"/usr/local/lib/python3.5/dist-packages/click/utils.py\", line 259, in echo\nfile.write(message)\nUnicodeEncodeError: 'ascii' codec can't encode character '\\xe9' in position 58: ordinal not in range(128)\nAny other comments? What have you tried so far?\nthe issue can be resolved by setting the PYTHONIOENCODING env var to \"utf8\", but it would be nicer if the crash didn't happen ;)\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.10.0-42-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial\nI use the 2.0.x branch from github", "issue_status": "Closed", "issue_reporting_time": "2017-12-21T15:09:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "480": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2722", "issue_id": "#2722", "issue_summary": "ImportError: cannot import name basethread", "issue_description": "damadamn commented on 21 Dec 2017\nHello, I've got this problem when I try to import basethread module :\n1.Traceback (most recent call last):\nFile \"/home/.../mitm-proxy-server.py\", line 14, in\nfrom mitmproxy import controller, proxy, flow\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy/controller.py\", line 12, in\nfrom netlib import basethread\nImportError: cannot import name basethread\nI don't know why this problem occured, but I need to fix it if I want to use mitmproxy like I need", "issue_status": "Closed", "issue_reporting_time": "2017-12-21T12:57:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "481": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2720", "issue_id": "#2720", "issue_summary": "console: shift+tab is broken in WSL for some Windows terminals", "issue_description": "Member\ncortesi commented on 21 Dec 2017\nSee microsoft/WSL#1770. This seems to affect some but not all Windows terminals.\nWe use shift+tab by default to switch to the next pane in the console app. We can:\nSay that this is not our problem, and wait for upstream to fix it.\nFind a different binding for next pane - which would be a shame, because shit+tab is very natural.\n@mhils what say you?", "issue_status": "Closed", "issue_reporting_time": "2017-12-20T19:17:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "482": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2719", "issue_id": "#2719", "issue_summary": "Some traffics are lost in mitmproxy", "issue_description": "wimbledon commented on 20 Dec 2017\nSteps to reproduce the problem:\nI've been using mitmproxy for a while and it's been a great tool! However, today I came across this app where mitmproxy only shows some of the traffics but not all!\nI'm using an iOS 10 iPhone connected to same wifi network as my mac. I then proxyed the iPhone's traffic to mitmproxy. Of course, I went to mitm.it and installed the certificate. The command I used is mitmproxy -p 8090.\nThe issue is that some of the network requests are showing up fine, but some are not showing up! Nothing on the event log for the missing requests either. Yet, the app seems to be completely functional with perfect networking.\nAny other comments? What have you tried so far?\nCould it be certificate pinning? If the app has implemented certificate pinning or other security measures, then the app should not have perfect networking once the iPhone is proxied to mitmproxy.\nDo mitmproxy automatically ignore certain traffic?\nI tried --tcp '.*' option to see if anything came up in the event log, but nothing.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.2\nPlatform: Darwin-16.7.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f 25 May 2017\nMac version: 10.12.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-12-19T21:49:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "483": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2713", "issue_id": "#2713", "issue_summary": "Memory/Connection leaks under high traffic volumes", "issue_description": "Mradr commented on 19 Dec 2017 \u2022\nedited\nSteps to reproduce the problem:\nAfter a while with many devices on the proxy - the server slows down and then freezes.\nI really don't have a way to reproduce the steps, but I had similar issues a while back when I ran a public proxy and had many many bots connect and disconnect that resulted in errors of things not closing out correctly.\nWe have about 50 devices and it seems \"speed\" wise fine until about an hour or so in then it slows down and then stop functioning altogether with no error.\nSeems like it doesn't want to take on new connections - last we see are \"Disconnect\" over the last open connections.\nAny other comments? What have you tried so far?\nI put try/except around my code, but I don't see any errors with my code. This leads me to mitmproxy having the issues and not my personal code. I be more than happy to pull any information I can to help figure this problem out. Like I said, it seems to happen every hour or so. Right now I create a watchdog to help protect against it crashing like it was so by restarting the proxy software and it seems like it runs fine again for about an hour before it does it again.\nI understand Mitmproxy wasn't redesign for speed in mind, but seems like the more devices we do add - the shorter the time table before the proxy just freezes up. What steps can I take to future proof this just a bit? Thread count does reach into 400-600s or so when it last crash). It shouldn't be enough to really break Linux, but something I did notice.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-93-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: Ubuntu 16.04 xenial\nPast ticket\n#2575", "issue_status": "Closed", "issue_reporting_time": "2017-12-18T21:42:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "484": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2706", "issue_id": "#2706", "issue_summary": "Docs: Explain New iOS \"Certificate Trust Settings\"", "issue_description": "Contributor\njimhigson commented on 18 Dec 2017 \u2022\nedited\nIt took a while to work this out and I can't - installing the certificate on ios (don't know since what version) isn't from http://mitm.it isn't enough - you also need to enable full trust for the root certificate for it to actually work. Otherwise, Safari will ask if you want to go to a site every time and mitmproxy will report handshake errors with the client not trusting it's certificates - it looks like pinned certs but it isn't.\nIt would be great if you could update the docs with the following. Ideally, this would be mentioned in the html of the page at http://mitm.it or at least somewhere in the mitmproxy docs like maybe here\nOn the ios Device need to :\nInstall the mitm root cert as usual from http://mitm.it\nOpen the Settings app\nTap General\nTap About\nScroll to bottom. Tap Certificate Trust Settings\nTurn on the switch for mitmproxy\n17", "issue_status": "Closed", "issue_reporting_time": "2017-12-17T19:53:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "485": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2704", "issue_id": "#2704", "issue_summary": "`view.resolve @focus` crashes", "issue_description": "Member\nmhils commented on 17 Dec 2017\nSteps to reproduce the problem:\nOpen mitmproxy\nAdd a flow\nRun the following command: view.resolve @focus\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 216, in run\n    self.loop.run()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 710, in _loop\n    self._entering_idle()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 671, in _entering_idle\n    callback()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 564, in entering_idle\n    self.draw_screen()\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 578, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 780, in render\n    self.top_w_size(size, left, right, top, bottom), focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 1750, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 1750, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1520, in render\n    canv = w.render((maxcol,), focus=focus and item_focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 2085, in render\n    focus = focus and self.focus_position == i)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/decoration.py\", line 403, in render\n    canv = self._original_widget.render((maxcol, self.height), focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 1750, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 455, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 337, in calculate_visible\n    self._set_focus_complete( (maxcol, maxrow), focus )\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 702, in _set_focus_complete\n    (maxcol,maxrow), focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 672, in _set_focus_first_selectable\n    (maxcol, maxrow), focus=focus)\n  File \"/home/user/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 340, in calculate_visible\n    focus_widget, focus_pos = self.body.get_focus()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 227, in get_focus\n    self.lst[self.focus]\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 83, in __init__\n    w = self.editor.columns[i].Display(v)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/grideditor/col.py\", line 14, in Display\n    return Display(data)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/grideditor/col.py\", line 35, in __init__\n    escaped = data.encode()\nAttributeError: 'HTTPFlow' object has no attribute 'encode'\nSystem information\nMitmproxy: 3.0.0dev1041 (046151b)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.0.2g 1 Mar 2016\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2017-12-17T18:07:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "486": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2701", "issue_id": "#2701", "issue_summary": "print in addons", "issue_description": "Member\nKriechi commented on 17 Dec 2017\nprint(...) doesn't seem to work in addons. No error, no output.\nctx.log.warn(...) does print as expected.\nTested on git-master.", "issue_status": "Closed", "issue_reporting_time": "2017-12-17T17:27:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "487": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2697", "issue_id": "#2697", "issue_summary": "Horizontal view: Pressing up/down modifies non-focused pane.", "issue_description": "Member\nmhils commented on 17 Dec 2017 \u2022\nedited\nAs the title says - we just need to patch that out of urwid.Pile, and take a look at the situation with urwid.Columns.", "issue_status": "Closed", "issue_reporting_time": "2017-12-17T14:45:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "488": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2696", "issue_id": "#2696", "issue_summary": "Consider marking some commands as \"internal\"", "issue_description": "Member\nmhils commented on 17 Dec 2017\nPlaying with the command list a bit, I feel that our command list UX could benefit from not showing some commands by default. I feel a new mitmproxy user will be overwhelmed with many internal commands for which they have no immediate use.\nOf course, we can add a show_internal_commands option for advanced users.", "issue_status": "Closed", "issue_reporting_time": "2017-12-17T14:45:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "489": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2695", "issue_id": "#2695", "issue_summary": "Combine console.edit.focus and flow.set.options?", "issue_description": "Member\nmhils commented on 17 Dec 2017\nFrom an end user perspective, it is quite confusing that these two commands exist in different namespaces with slightly different choices. Put different, if I were to edit the query, but I'd only know flow.set (which doesn't support setting anything non-str), I'd assume that there is no other option.", "issue_status": "Closed", "issue_reporting_time": "2017-12-17T14:42:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "490": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2694", "issue_id": "#2694", "issue_summary": "Add command to edit flow body.", "issue_description": "Member\nmhils commented on 17 Dec 2017 \u2022\nedited\nconsole.edit.focus.options currently provides no option to edit the flow body. I then tried the bodyview feature, but that is read-only. In general, there seems to be no option to edit a flow body?", "issue_status": "Closed", "issue_reporting_time": "2017-12-17T14:29:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "491": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2693", "issue_id": "#2693", "issue_summary": "Flowview Keybindings are broken", "issue_description": "Member\nmhils commented on 17 Dec 2017 \u2022\nedited\nSteps to reproduce the problem:\nOpen flow\nPress e\nInvalid value type: ['console.edit.focus', '{choice}'] - expected <class 'mitmproxy.command.Arg'>\nv also doesn't work. o in the flowlist also does not work.\nSystem information\nMitmproxy: 3.0.0dev1042 (ef9ad11)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.0.2g 1 Mar 2016\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2017-12-17T14:24:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "492": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2692", "issue_id": "#2692", "issue_summary": "400 HTTP BAD REQUEST UPSTREAM PROXIES", "issue_description": "httpbob commented on 17 Dec 2017\nHi there,\nThanks a lot for this awesome project. I'm trying to achieve something with it but I have issues for the moment.\nBelow is what I'm trying to do:\nCLIENT APP -> MITMPROXY -> BUYPROXIES -> INTERNET\nWhy ?\nBecause I would like to modify/update the HTML content returned by the INTERNET thanks to MITMPROXY installed locally alongside my CLIENT APP.\nIMPORTANT: My CLIENT APP is connecting to BUYPROXIES directly from its code. That's why I use proxychain to create a tunnel\nWhat is BUYPROXIES ?\nBUYPROXIES are HTTP(S) proxies that my CLIENT APP is connecting to in order to do its job\nSystem information\n$ mitmproxy --version\nMitmproxy version: 2.0.2 (release version) \nPython version: 3.5.2\nPlatform: Linux-4.4.0-62-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g  1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial\nSteps to reproduce the problem:\nDepedencies/Requirements: curl, mitmproxy, proxychains installed on Linux + HTTP(S) Proxies\nProxychains configuration on local computer:\n$ cat /etc/proxychains.conf\nsocks5 127.0.0.1 9999\nRunning mitmdump(socks mode) on local computer & port 9999\n$ mitmdump --socks -p 9999\nProxy server listening at http://0.0.0.0:9999\nTesting that BUYPROXIES works with a DIRECT connection:\nDirect connection from CLIENT APP -> BUYPROXIES:\n$ curl -X GET -k -x 'https://xxx.xxx.xxx.xxx:80' -U 'proxyuser:proxypass' 'https://httpbin.org/ip'\n{\n\"origin\": \"xxx.xxx.xxx.xxx\"\n}\nIf it works then we try a connection through MITMPROXY before BUYPROXIES:\nChained connection from CLIENT APP -> MITMPROXY -> BUYPROXIES:\n$ proxychains curl -X GET -k -x 'https://xxx.xxx.xxx.xxx:80' -U 'proxyuser:proxypass' 'https://httpbin.org/ip'\nProxyChains-3.1 (http://proxychains.sf.net)\n|R-chain|-<>-127.0.0.1:9999-<><>-xxx.xxx.xxx.xxx:80-<><>-OK\ncurl: (56) Received HTTP code 400 from proxy after CONNECT\nNot working with the socks mode, let's try regular mode:\n$ cat /etc/proxychains.conf\nhttp 127.0.0.1 9999\nThen re-launching MITMPROXY\n$ mitmdump -p 9999\nProxy server listening at http://0.0.0.0:9999\nThen trying to connect via CURL:\n$ proxychains curl -X GET -k -x 'https://xxx.xxx.xxx.xxx:80' -U 'proxyuser:proxypass' 'https://httpbin.org/ip'\nProxyChains-3.1 (http://proxychains.sf.net)\n|R-chain|-<>-127.0.0.1:9999-<><>-xxx.xxx.xxx.xxx:80-<><>-OK\ncurl: (56) Received HTTP code 400 from proxy after CONNECT\nStill not working , let's try transparent mode:\n$ cat /etc/proxychains.conf\nhttp 127.0.0.1 9999\nThen re-launching MITMPROXY\n$ mitmdump -T -p 9999\nProxy server listening at http://0.0.0.0:9999\n127.0.0.1:51004: clientconnect\n127.0.0.1:51004: Transparent mode failure: OSError(92, 'Protocol not available')\n127.0.0.1:51004: clientdisconnect\nThe transparent mode returns an error so I gave up\nTrying the upstream mode:\n$ mitmdump -v --upstream 'http://xxx.xxx.xxx.xxx:80' --upstream-auth 'proxyuser:proxypass' -p 9999\nProxy server listening at http://0.0.0.0:9999\nThen I failed connecting with the following command ( CURL trying to connect through BUYPROXIES ):\n$ proxychains curl -X GET -k -x 'https://xxx.xxx.xxx.xxx:80' -U 'proxyuser:proxypass' 'https://httpbin.org/ip'\nProxyChains-3.1 (http://proxychains.sf.net)\n|R-chain|-<>-127.0.0.1:9999-<><>-xxx.xxx.xxx.xxx:80-<><>-OK\ncurl: (56) Received HTTP code 400 from proxy after CONNECT\nBut I make successful connection with this command ( CURL without proxy connections ):\n$ proxychains curl -X GET -k 'https://httpbin.org/ip'\nProxyChains-3.1 (http://proxychains.sf.net)\n|R-chain|-<>-127.0.0.1:9999-<><>-50.19.240.192:443-<><>-OK\n{\n  \"origin\": \"xxx.xxx.xxx.xxx\"\n}\nI know that I'm trying to build a Proxy connection inside another proxy connection.\nEarlier, i made it work with SSH via tunnels.\nDo you think it's doable through MITMPROXY technology ?\nThanks a lot for your time and help on this.\nBest regards,", "issue_status": "Closed", "issue_reporting_time": "2017-12-17T13:01:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "493": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2688", "issue_id": "#2688", "issue_summary": "console: ctx.log.alert output is not seen for comands", "issue_description": "Member\ncortesi commented on 17 Dec 2017\nIssue a command that emits an alert from the console commander. Note that the alert output doesn't appear.", "issue_status": "Closed", "issue_reporting_time": "2017-12-16T22:40:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "494": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2684", "issue_id": "#2684", "issue_summary": "Assemble 3.0 Changelog", "issue_description": "Member\nmhils commented on 16 Dec 2017\nI'll start this later today, but everyone is welcome to contribute: https://docs.google.com/document/d/1cjSb7iNcm-wkBoyovgCWqySRfTJyI6yaepvSzcdTjLs/", "issue_status": "Closed", "issue_reporting_time": "2017-12-16T18:16:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "495": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2681", "issue_id": "#2681", "issue_summary": "console.eventlog.clear command has disappeared", "issue_description": "Member\ncortesi commented on 16 Dec 2017\n@mhils zapped this in #2678, but we need it back.", "issue_status": "Closed", "issue_reporting_time": "2017-12-15T21:45:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "496": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2676", "issue_id": "#2676", "issue_summary": "Clicking on tab head does not focus tab", "issue_description": "Member\nmhils commented on 14 Dec 2017\nSteps to reproduce the problem:\nOpen mitmproxy\nPress - to open two pane layout.\nClick on the header of the \"Events\" tabs.\nThe \"Events\" tab does not get focus.\nAny other comments? What have you tried so far?\nThis is particularly annoying on Windows, where \"shift tab\" to switch tabs does not register under WSL. The only way to switch tabs under Windows right now is to open a command prompt and enter console.panes.next.\nSystem information\nMitmproxy: 3.0.0dev0994 (842c9f7)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.0.2g 1 Mar 2016\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2017-12-14T17:23:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "497": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2673", "issue_id": "#2673", "issue_summary": "Flowlist: Focus jumps to bottom of list when deleting flow", "issue_description": "Member\nmhils commented on 14 Dec 2017 \u2022\nedited\nSteps to reproduce the problem:\nCreate a flow in mitmproxy, duplicate it ten times.\nDelete flow number 5.\nCursor jumps to the last flow, instead to what previously was flow 6.\nSystem information\nMitmproxy: 3.0.0dev0989 (62561ed)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.0.2g 1 Mar 2016\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2017-12-14T13:37:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "498": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2672", "issue_id": "#2672", "issue_summary": "mitmproxy stuck on many connect", "issue_description": "gennadicho commented on 14 Dec 2017 \u2022\nedited\nSteps to reproduce the problem:\ninstall mitmproxy from master branch\nrun script with body modify and replay by beautifulsoup\nsend a 1000-2000 request to proxy\nmitmdump -p 30000 -k -w out.file -s bla1.py\nbla1.py: just insert in body one tag with bs4 and send it to client\nAny other comments? What have you tried so far?\nHello. mitmproxy not accepted new connection, and not working anymore, after 1000-2000 connect. And count of thread growing crazy:\n`810\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n819\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n829\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n^[[A846\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n846\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n1010\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n1023\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n1034\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n1042\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n1042\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n1177\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n1204\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n1218\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n1230\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n1238\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n1996\nroot@localhost:~# ps a -L|grep -i mitmproxy|wc -l\n`\nBut proxy not working, and connect failed after timeout :(\nSystem information\n(venv) koka@localhost:~$ mitmproxy --version\nMitmproxy: 3.0.0dev0976 (472d122)\nPython: 3.5.3\nOpenSSL: OpenSSL 1.1.0g 2 Nov 2017\nPlatform: Linux-3.16.0-4-amd64-x86_64-with-debian-8.0", "issue_status": "Closed", "issue_reporting_time": "2017-12-13T23:50:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "499": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2667", "issue_id": "#2667", "issue_summary": "mitmproxy ignores error on script load", "issue_description": "Member\nmhils commented on 13 Dec 2017\nSteps to reproduce the problem:\nfoo.py:\nraise ValueError(\"foo\")\nmitmdump -s foo.py  # works\nmitmproxy -s foo.py  # swallows error silently\nSystem information\nMitmproxy: 3.0.0dev0978 (8e9194c)\nPython: 3.5.2\nOpenSSL: OpenSSL 1.0.2g 1 Mar 2016\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2017-12-12T19:58:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "500": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2664", "issue_id": "#2664", "issue_summary": "Test failure with IPv6", "issue_description": "Member\nKriechi commented on 12 Dec 2017\nI'm getting this test failure on my macOS 10.13.2 system with the latest git-master branch:\nself = <test.mitmproxy.net.test_tcp.TestServerBind object at 0x113612240>\n\n    def test_bind(self):\n        \"\"\" Test to bind to a given random port. Try again if the random port turned out to be blocked. \"\"\"\n        for i in range(20):\n            random_port = random.randrange(1024, 65535)\n            try:\n                c = tcp.TCPClient(\n                    (\"127.0.0.1\", self.port), source_address=(\n                        \"127.0.0.1\", random_port))\n                with c.connect():\n>                   assert c.rfile.readline() == str((\"127.0.0.1\", random_port)).encode()\nE                   assert b\"('::ffff:12... 32413, 0, 0)\" == b\"('127.0.0.1', 32413)\"\nE                     At index 2 diff: 58 != 49\nE                     Left contains more items, first extra item: 32\nE                     Use -v to get the full diff\n\ntest/mitmproxy/net/test_tcp.py:110: AssertionError\nTravisCI doesn't show this error. I cleaned & recreated my whole environment - no improvement.", "issue_status": "Closed", "issue_reporting_time": "2017-12-12T12:37:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "501": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2660", "issue_id": "#2660", "issue_summary": "Shift serialisation format to protobuf", "issue_description": "Member\ncortesi commented on 11 Dec 2017\nI've been working on a number of projects that use protobufs and GRPC, and I've seen the light. I propose that in the next iteration of mitmproxy, we shift our serialisation format away from our custom bson to protocol buffers. This has a number of benefits:\nAt the moment, it's tough to know exactly what's in our serialisation format, because the relevant code is spread throughout our codebase. With protobufs, we'd have a single, concise specification for what's on disk.\nWe would immediately get the ability to read and write mitmproxy's dump format from nearly all other languages \"for free\".\nWe would get ready to possibly use GRPC down the track, both in mitmproxy itself, and in any auxiliary services around it.\nThis should be done at the same time as #2196.", "issue_status": "Closed", "issue_reporting_time": "2017-12-10T20:54:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "502": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2658", "issue_id": "#2658", "issue_summary": "Traceback when viewing certain gifs", "issue_description": "Member\ncortesi commented on 11 Dec 2017 \u2022\nedited by mhils\nOpen the attached flow dump in mitmproxy console. When viewing the content, observe the traceback that flashes to screen. A number of issues here:\nKaitai should be able to parse this gif. It's not technically correct, but I've seen this often, especially with single-pixel tracking gifs.\nEven if Kaitai fails, we shouldn't crash - the user should see an \"invalid image\" message (or something more informative). (#2698)\nEven if we crash, the traceback shouldn't be flashed to screen and disappear. This is an issue with the way we handle super-long error events in console. (#2699)\nbar.log", "issue_status": "Closed", "issue_reporting_time": "2017-12-10T19:12:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "503": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2657", "issue_id": "#2657", "issue_summary": "mitmproxy has crashed!", "issue_description": "ichux commented on 10 Dec 2017\nSteps to reproduce the problem:\nichux@ubuntu:~$ mitmproxy \nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/encoding.py\", line 48, in decode\n    decoded = custom_decode[encoding](encoded)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/encoding.py\", line 118, in decode_gzip\n    return gfile.read()\n  File \"/usr/lib/python3.5/gzip.py\", line 274, in read\n    return self._buffer.read(size)\n  File \"/usr/lib/python3.5/gzip.py\", line 480, in read\n    raise EOFError(\"Compressed file ended before the \"\nEOFError: Compressed file ended before the end-of-stream marker was reached\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/export.py\", line 82, in python_code\n    writearg(\"json\", json.loads(flow.request.text))\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/message.py\", line 195, in get_text\n    content = self.get_content(strict)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/message.py\", line 97, in get_content\n    content = encoding.decode(self.raw_content, ce)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/encoding.py\", line 61, in decode\n    repr(e),\nValueError: EOFError when decoding b'\\x1f\\x8b with 'gzip': EOFError('Compressed file ended before the end-of-stream marker was reached',)\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/encoding.py\", line 48, in decode\n    decoded = custom_decode[encoding](encoded)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/encoding.py\", line 118, in decode_gzip\n    return gfile.read()\n  File \"/usr/lib/python3.5/gzip.py\", line 274, in read\n    return self._buffer.read(size)\n  File \"/usr/lib/python3.5/gzip.py\", line 480, in read\n    raise EOFError(\"Compressed file ended before the \"\nEOFError: Compressed file ended before the end-of-stream marker was reached\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/statusbar.py\", line 155, in keypress\n    return self.master.ab.keypress(*args, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/statusbar.py\", line 108, in keypress\n    self.prompt_execute(k)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/statusbar.py\", line 133, in prompt_execute\n    msg = p(txt)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/statusbar.py\", line 31, in __call__\n    return self.callback(txt, *self.args)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/common.py\", line 328, in export_to_clip_or_file\n    writer(exporter(flow))\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/export.py\", line 84, in python_code\n    writearg(\"data\", flow.request.content)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/message.py\", line 97, in get_content\n    content = encoding.decode(self.raw_content, ce)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/encoding.py\", line 61, in decode\n    repr(e),\nValueError: EOFError when decoding b'\\x1f\\x8b with 'gzip': EOFError('Compressed file ended before the end-of-stream marker was reached',)\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments? What have you tried so far?\nI wanted to save to a python file with the E command but since the request contained bytes, the whole thing crashed.\nSystem information\nMitmproxy version: 2.0.2 (release version) \nPython version: 3.5.2\nPlatform: Linux-4.4.0-103-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g  1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-12-10T17:17:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "504": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2655", "issue_id": "#2655", "issue_summary": "commands: reassess console.flowview.mode.*", "issue_description": "Member\ncortesi commented on 10 Dec 2017\nThe .set command may need to be renamed to .prompt\nA .set command that takes an argument should probably be added\nWhy don't we follow the pattern where we have an .options command here?", "issue_status": "Closed", "issue_reporting_time": "2017-12-10T01:06:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "505": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2654", "issue_id": "#2654", "issue_summary": "commands: find a better way to handle long data in command outputs", "issue_description": "Member\ncortesi commented on 10 Dec 2017\nWe currently just print a message that the \"command returned too much data for display\". We can do better than that in a variety of ways.", "issue_status": "Closed", "issue_reporting_time": "2017-12-10T00:53:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "506": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2653", "issue_id": "#2653", "issue_summary": "commands: document and clarify console.edit.focus*", "issue_description": "Member\ncortesi commented on 10 Dec 2017 \u2022\nedited\nThese commands are not well documented.", "issue_status": "Closed", "issue_reporting_time": "2017-12-10T00:52:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "507": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2652", "issue_id": "#2652", "issue_summary": "command console.choose.cmd crashes when given no arguments", "issue_description": "Member\ncortesi commented on 10 Dec 2017\nEnter mitmproxy console, issue a command like:\nconsole.choose.cmd\n... and press return.", "issue_status": "Closed", "issue_reporting_time": "2017-12-09T22:30:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "508": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2651", "issue_id": "#2651", "issue_summary": "command \"console.bodyview\" crashes when given an invalid argument", "issue_description": "Member\ncortesi commented on 10 Dec 2017\nTriggered by entering a command like:\nconsole.bodyview @focus foo", "issue_status": "Closed", "issue_reporting_time": "2017-12-09T22:26:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "509": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2648", "issue_id": "#2648", "issue_summary": "Fresh Kali Install - ImportError: cannot import name 'UBInt16'", "issue_description": "Drakota commented on 5 Dec 2017\nSteps to reproduce the problem:\nInstall newest Kali Linux\napt-get update && apt-get dist-upgrade\nTry to open mitmproxy\nGets an error\nTraceback (most recent call last):\n  File \"/usr/bin/mitmproxy\", line 11, in <module>\n    load_entry_point('mitmproxy==2.0.2', 'console_scripts', 'mitmproxy')()\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 572, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2769, in load_entry_point\n    return ep.load()\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2422, in load\n    return self.resolve()\n  File \"/usr/lib/python3/dist-packages/pkg_resources/__init__.py\", line 2428, in resolve\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\n  File \"/usr/lib/python3/dist-packages/mitmproxy/tools/main.py\", line 12, in <module>\n    from mitmproxy.tools import cmdline  # noqa\n  File \"/usr/lib/python3/dist-packages/mitmproxy/tools/cmdline.py\", line 10, in <module>\n    from mitmproxy.addons import view\n  File \"/usr/lib/python3/dist-packages/mitmproxy/addons/__init__.py\", line 7, in <module>\n    from mitmproxy.addons import onboarding\n  File \"/usr/lib/python3/dist-packages/mitmproxy/addons/onboarding.py\", line 2, in <module>\n    from mitmproxy.addons.onboardingapp import app\n  File \"/usr/lib/python3/dist-packages/mitmproxy/addons/onboardingapp/app.py\", line 8, in <module>\n    from mitmproxy.proxy import config\n  File \"/usr/lib/python3/dist-packages/mitmproxy/proxy/__init__.py\", line 2, in <module>\n    from .root_context import RootContext\n  File \"/usr/lib/python3/dist-packages/mitmproxy/proxy/root_context.py\", line 3, in <module>\n    from mitmproxy.proxy import protocol\n  File \"/usr/lib/python3/dist-packages/mitmproxy/proxy/protocol/__init__.py\", line 39, in <module>\n    from .tls import TlsClientHello\n  File \"/usr/lib/python3/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 7, in <module>\n    from mitmproxy.contrib import tls_parser\n  File \"/usr/lib/python3/dist-packages/mitmproxy/contrib/tls_parser.py\", line 8, in <module>\n    from construct import (Array, Bytes, Struct, UBInt16, UBInt32, UBInt8, PascalString, Embed, TunnelAdapter, GreedyRange, Switch, OptionalGreedyRange, Optional)\nImportError: cannot import name 'UBInt16'\nAny other comments? What have you tried so far?\nReinstalling pip with easy_install\nSystem information\nKali Linux 2017.3\nmitmproxy 2.0.2", "issue_status": "Closed", "issue_reporting_time": "2017-12-05T02:45:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "510": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2647", "issue_id": "#2647", "issue_summary": "Request replaying fails when proxy is bound to local interface", "issue_description": "djfromlost commented on 4 Dec 2017\nWhen the proxy is bound to the local interface, replayed requests fail.\nExample that works:\nStart mitmproxy with no arguments. Proxy will listen on port 8080 of all interfaces.\n$ netstat -na | grep 8080\ntcp          0      0  *.8080                 *.*                    LISTEN\nMake a request through the proxy. Example: http_proxy=\"http://127.0.0.1:8080\" curl -v http://www.example.org. A response is received.\nModify or just resend the request in mitmproxy (key r). A new response is received, and everything works correctly.\nExample that fails:\nStart mitmproxy binding only to the local interface: mitmproxy --listen-host 127.0.0.1\n $ netstat -na | grep 8080\n tcp          0      0  127.0.0.1.8080         *.*                    LISTEN\nMake a request through the proxy, as before. A response is received.\nModify or just resend the request in mitmproxy (key r). Now the request fails after a while (some timeout?) with an error. At least one of the errors is Error connecting to \"www.example.org\": [Errno -5] no address associated with name.\nVersion tested:\n$ mitmproxy --version\nMitmproxy: 3.0.0dev0967 (5067438e) \nPython:    3.6.0\nOpenSSL:   LibreSSL 2.5.3\nPlatform:  OpenBSD-6.1-amd64-64bit", "issue_status": "Closed", "issue_reporting_time": "2017-12-04T14:23:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "511": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2645", "issue_id": "#2645", "issue_summary": "Mitmdump script doesn't catch all requests", "issue_description": "voider1 commented on 29 Nov 2017\ndef start():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('--fake', type=str)\n    args = parser.parse_args()\n    return Replacer(args.fake)\n\n\nclass Replacer:\n    def __init__(self, fake):\n        self.fake = fake\n\n    def request(self, flow):\n             ctx.log.info(\"HOST {}\".format(flow.request.host))\n\n\n    def response(self, flow):\n        if flow.request.host == self.fake:\n            ctx.log.info(\"HOST: {}\".format(flow.request.host))\n            ctx.log.info(\"PATH: {}\".format(flow.request.path))\n            ctx.log.info(\"REQUEST RAW_CONTENT: {}\".format(flow.request.raw_content))\n            ctx.log(\"RESPONSE: {}\".format(flow.response.content))\nFor some reason this script doesn't print the HOST at every request. Any ideas?", "issue_status": "Closed", "issue_reporting_time": "2017-11-29T15:19:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "512": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2644", "issue_id": "#2644", "issue_summary": "mitmdump not exiting after serving a request", "issue_description": "turowicz commented on 29 Nov 2017 \u2022\nedited\nSteps to reproduce the problem:\nHey I'm running mitmdump in a docker container on a VM. Over time, the memory overflows and disk swap starts, rendering the proxy unusable. This is easily fixed by a system reboot.\nI start the execution with the following command:\nsudo docker run -d --restart unless-stopped -p 80:8080 -v ~/HttpReorder.py:/tmp/HttpReorder.py mitmproxy/mitmproxy mitmdump -s /tmp/HttpReorder.py -R https://<my-url-here>:443 -p 8080\nand the script file's contents are:\ndef reorder(headers, header_order=[\"Date\", \"Server\", \"Connection\", \"Pragma\", \"Accept-Ranges\", \"Expires\", \"Cache-Control\", \"Content-Disposition\", \"Content-Length\", \"Vary\", \"Content-Range\", \"Content-Type\"]):\n    lines = []\n    for name in header_order:  # add existing headers in the specified order\n        if name in headers:\n            lines.append([name, headers[name]])\n            del headers[name]\n    #lines.extend(headers.fields)  # all other headers\n    return lines\n\ndef response(flow):\n\n    reordered = reorder(flow.response.headers)\n\n    for pair in reordered:\n        flow.response.headers[pair[0]] = pair[1]\n\n    if \"/download/\" in flow.request.path and \"Content-Type\" not in flow.response.headers:\n        flow.response.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\"\n\n\ndef requestheaders(flow):\n    flow.request.headers[\"NewHost\"] = flow.request.headers[\"Host\"]\n\ndef request(flow):\n    if \"NewHost\" in flow.request.headers:\n        requested = flow.request.headers[\"NewHost\"]\n\n        if \"dev.data.something\" in requested:\n            flow.request.host = \"dev.admin.something\"\n        elif \"data.something\" in requested:\n            flow.request.host = \"admin.something\"\n\n        del flow.request.headers[\"NewHost\"]\nWhat am I doing wrong? There seems to be a new python process in memory for each request. They never quit, only add up used memory.", "issue_status": "Closed", "issue_reporting_time": "2017-11-29T09:04:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "513": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2641", "issue_id": "#2641", "issue_summary": "Unable to import certificate in Chrome on Ubuntu 16.04", "issue_description": "ericstoekl commented on 25 Nov 2017 \u2022\nedited\nTrying to set up certificates, according to this post I should be able to go into the settings in chrome and import a certificate. I am trying to import the certificates that I generated by running mitmproxy for the first time. I converted the 1.pemfiles to.crt` format using the method recommended in the stackoverflow post here, which is referenced from the certificate manual installation guide here.\nI cannot import the private keys into chrome due to an error message that pops up when I try to import that says \"Incorrect private key\":\nScreenshot trying to import mitmproxy-ca-cert.crt\nScreenshot trying to import mitmproxy.ca.crt\nScreenshot trying to import mitmproxy-ca-cert.p12 (What is the correct password?)\nSteps to reproduce the problem:\nStart mitmproxy after installing on Ubuntu 16.04\nTry to import certificates manually into google chrome using the method recommended here\nStill get \" If you can see this, traffic is not passing through mitmproxy.\" on mitm.it\nAny other comments? What have you tried so far?\nAlso tried installing using certutil -d sql:$HOME/.pki/nssdb -A -t C -n mitmproxy -i ~/.mitmproxy/mitmproxy-ca-cert.pem, hasn't worked for me but maybe I need to restart?\nSystem information\nMitmproxy version: 2.0.2 (release version) \nPython version: 3.5.2\nPlatform: Linux-4.10.0-38-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g  1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-11-25T06:15:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "514": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2640", "issue_id": "#2640", "issue_summary": "Dump with websocket messages", "issue_description": "edi9999 commented on 24 Nov 2017 \u2022\nedited\nHello,\nI would like to record full http + websocket traffic including websocket messages.\nI have tried mitmdump -w dump\nHowever, it seems that in the recorded file, only the http requests+ responses are recorded, and the websocket initialisation, but not the separate websocket messages (called frames in chrome Dev tool).\nIs it possible to record the websocket frames too with the command line directly ?\nI am running master (46901d1)\nThanks in advance", "issue_status": "Closed", "issue_reporting_time": "2017-11-23T20:13:24Z", "fixed_by": "#2702", "pull_request_summary": "improve websocket dumps", "pull_request_description": "Member\nKriechi commented on 17 Dec 2017 \u2022\nedited\nwebsocket supports domain and url filters now\nfixes #2640", "pull_request_status": "Merged", "issue_fixed_time": "2017-12-18T20:31:01Z", "files_changed": [["9", "mitmproxy/addons/save.py"], ["13", "mitmproxy/contrib/wsproto/__init__.py"], ["2", "mitmproxy/contrib/wsproto/extensions.py"], ["2", "mitmproxy/contrib/wsproto/frame_protocol.py"], ["10", "mitmproxy/flowfilter.py"], ["30", "mitmproxy/master.py"], ["1", "mitmproxy/proxy/protocol/http.py"], ["10", "mitmproxy/proxy/protocol/websocket.py"], ["6", "mitmproxy/test/tflow.py"], ["18", "mitmproxy/websocket.py"], ["3", "setup.cfg"], ["13", "test/mitmproxy/addons/test_save.py"], ["16", "test/mitmproxy/test_flow.py"], ["14", "test/mitmproxy/test_flowfilter.py"]]}, "515": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2639", "issue_id": "#2639", "issue_summary": "Running custom server instead of running mitmdump/mitmproxy", "issue_description": "awdng commented on 22 Nov 2017\nFor a study project, i decided to build a GUI for mitmproxy as a learning project.\nI originall planned that his tool would run the ProxyServer itself instead of running another tool (mitmproxy) next to it and communicating with it, but seems like it recent versions this functionality has been mostly replaced and it is strongly encouraged to use mitmdump and the scripting api.\nNow, let's say in this GUI tool, users could see a list of Request and dynamically mark those to edit headers on the fly, how would i communicate this to the mitmdump script in realtime ? I can use command line arguments or start a lot of subprocesses per Request to be analyzed but that is not really a good solution.\nDo i have to use a shared database that the inline script as well as the GUI app would access to get dynamic data? Running the server inside the same process would make this easier.\nAny help much appreciated", "issue_status": "Closed", "issue_reporting_time": "2017-11-22T16:30:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "516": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2638", "issue_id": "#2638", "issue_summary": "Mitmproxy cannot decode WBXML", "issue_description": "elorz007 commented on 22 Nov 2017\nSteps to reproduce the problem:\nOn\nOpen a request that contains WBXML (for example, sync requests of Apple Mail app)\nIn both the request and response tabs I see Couldn\u2019t parse: falling back to raw\nAny other comments? What have you tried so far?\nI tried different versions of python with virtualenv, no difference.\nI tried installing from pip and from brew, no difference.\nI tried version 0.17.1 binary directly: worked (but I would prefer a not so old version)\nI tried version 2.0.2 binary directly: didn't work.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.3\nPlatform: Darwin-16.7.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f 25 May 2017\nMac version: 10.12.6 ('', '', '') x86_64\n(I only found this https://discourse.mitmproxy.org/t/cant-decode-wbxml/621 but there is no response there...)", "issue_status": "Closed", "issue_reporting_time": "2017-11-22T14:25:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "517": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2635", "issue_id": "#2635", "issue_summary": "mitmdump does not apply filter to saved data", "issue_description": "Sjord commented on 20 Nov 2017 \u2022\nedited\nSteps to reproduce the problem:\nI captured some traffic, and ran the following to filter it:\n$ mitmdump -r traffic.mitm -w out.mitm '~u main.css'\nProxy server listening at http://[::]:8080\n172.16.122.1:51049: GET https://www.sjoerdlangkemper.nl/css/main.css\n                 << 304 Not Modified 0b\n$\nIt displays only the matched URL, but it saves all traffic. When done, out.mitm contains the same requests and responses as traffic.mitm. I.e. mitmproxy -r out.mitm shows a lot of requests, where I would expect only the request for main.css.\nAny other comments? What have you tried so far?\nI tried this with release 2.0.2, and there it worked as expected. This issue seems to be similar to #1089.\nSystem information\n$ mitmdump --version\nMitmproxy version: 3.0.0 (2.0.0dev0965-0x168c72a) \nPython version: 3.5.2\nPlatform: Linux-4.4.0-98-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.1.0f  25 May 2017\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-11-20T10:38:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "518": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2634", "issue_id": "#2634", "issue_summary": "Stop traffic and send tcp answer", "issue_description": "skotti commented on 19 Nov 2017\nHello!\nI want to filter inside proxy the incoming traffic by some rule and drop packets where the traffic is not 'good' for me. Is it possible to stop everything and send back the message with failure? Or simply stop?", "issue_status": "Closed", "issue_reporting_time": "2017-11-19T07:19:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "519": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2633", "issue_id": "#2633", "issue_summary": "Message stopping", "issue_description": "skotti commented on 19 Nov 2017\nHi,\nI was able to successfully install launch mitmproxy how I wanted. Now a have a question about packages.\nAs I have found out mitmproxy doesn't do any assembling of messages. But I need to wait the very end of the message (suppose I know how it should end and maybe it can be large enough to be broken into peaces), check smth and only then send the whole stuff. Are the operations similar to these possible?", "issue_status": "Closed", "issue_reporting_time": "2017-11-18T20:16:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "520": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2632", "issue_id": "#2632", "issue_summary": "Random Error", "issue_description": "Mradr commented on 17 Nov 2017 \u2022\nedited by mhils\nSteps to reproduce the problem:\nRandom Error when working with a Samsung device\n Cannot parse Client Hello: TlsProtocolException('Cannot read raw Client Hello: TlsProtocolException(\\'Unexpected EOF in TLS handshake: b\"\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\xfc\\\\\\\\x03\\\\\\\\x03\\\\\\\\x16\\\\\\\\xc8\\\\\\\\xca\\\\\\\\x11\\\\\\\\x80\\\\\\\\x8a\\\\\\\\x87\\\\\\\\x80\\\\\\\\x98{S_d)p\\\\\\\\xb4\\\\\\\\x97f\\\\\\\\xaeJ}\\\\\\\\x94\\\\\\\\xcew\\\\\\\\x9b\\\\\\\\\\\\\\\\\\\\\\\\xee\\\\\\\\x8en\\\\\\\\x0e\\\\\\\\x0c\\\\\\\\x1b \\\\\\\\xad\\\\\\\\xc6!l\\\\\\\\xfeD\\\\\\\\x04\\\\\\\\x00\\\\\\\\n\\\\\\\\x8f+_ t\\\\\\\\xf8\\\\\\\\xc2\\\\\\\\xb9\\\\\\\\xab\\\\\\'4\\\\\\\\xf9\\\\\\\\xa1\\\\\\\\xd9\\\\\\\\xea\\\\\\\\xc6\\\\\\\\x16d\\\\\\\\xea\\\\\\\\x1b\\\\\\\\x8a\\\\\\\\x8e\\\\\\\\xdf\\\\\\\\x00(\\\\\\\\xc0+\\\\\\\\xc0,\\\\\\\\xcc\\\\\\\\xa9\\\\\\\\xc0/\\\\\\\\xc00\\\\\\\\xcc\\\\\\\\xa8\\\\\\\\x00\\\\\\\\x9e\\\\\\\\x00\\\\\\\\x9f\\\\\\\\xc0\\\\\\\\t\\\\\\\\xc0\\\\\\\\n\\\\\\\\xc0\\\\\\\\x13\\\\\\\\xc0\\\\\\\\x14\\\\\\\\x003\\\\\\\\x009\\\\\\\\x00\\\\\\\\x9c\\\\\\\\x00\\\\\\\\x9d\\\\\\\\x00/\\\\\\\\x005\\\\\\\\xc0\\\\\\\\x11\\\\\\\\x00\\\\\\\\x05\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\x8b\\\\\\\\xff\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x14\\\\\\\\x00\\\\\\\\x12\\\\\\\\x00\\\\\\\\x00\\\\\\\\x0fmail.mail01.org\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00#\\\\\\\\x00\\\\\\\\xb0\\\\\\\\xe8B\\\\\\\\xe8\\\\\\\\x03BX\\\\\\\\x8c\\\\\\\\xd1\\\\\\\\x19\\\\\\\\x8f=\\\\\\\\x83\\\\\\\\xadO\\\\\\\\xa0+\\\\\\\\x98J\\\\\\\\xdfR\\\\\\\\xffD\\\\\\\\xc3\\\\\\\\xea/3\\\\\\\\xd4\\\\\\\\xf37e\\\\\\\\xa3\\\\\\\\xde\\\\\\\\x07\\\\\\\\x19\\\\\\\\xd0\\\\\\\\xdf\\\\\\\\xcd|\\\\\\\\xdf$\\\\\\\\xceA\\\\\\\\t.`\\\\\\\\x94\\\\\\\\xf0\\\\\\\\x0c\\\\\\\\xef\\\\\\\\xf8\\\\\\\\x97:\\\\\\\\xadpV\\\\\\\\x8e\\\\\\\\x04\\\\\\\\xb04\\\\\\\\xb9\\\\\\\\xcd\\\\\\\\xafA\\\\\\\\xce\\\\\\\\xf6\\\\\\\\xacbHk\\\\\\\\xb2\\\\\\\\\\\\\\\\\\\\\\\\x9f\\\\\\\\x19\\\\\\\\xac\\\\\\\\xbd\\\\\\\\xf60\\\\\\\\xeb\\\\\\\\xa3\\\\\\\\xd2x\\\\\\\\xf2\\\\\\\\x18\\\\\\\\xed{\\\\\\\\xa2\\\\\\\\x8b\\\\\\\\xec\\\\\\\\x1a\\\\\\\\xfc\\\\\\\\xf1E\\\\\\\\xe5\\\\\\\\x1e\\\\\\\\xc8\\\\\\\\xd7\\\\\\\\xf5]\\\\\\\\xed\\\\\\\\xed\\\\\\\\xb2}\\\\\\\\xa3\\\\\\\\x90h\\\\\\\\xc4\\\\\\\\x1a\\\\\\\\xcc\\\\\\\\xf2%\\\\\\\\xba\\\\\\\\xfa\\\\\\\\x0c\\\\\\\\xd3q\\\\\\\\xe2\\\\\\\\xc2\\\\\\\\xdc\\\\\\'1\\\\\\\\xa4\\\\\\\\x8c\\\\\\\\xdc\\\\\\\\xa1}|Q\\\\\\\\xdf\\\\\\\\x8d\\\\\\\\x1b\\\\\\\\x90\\\\\\\\xd8>\\\\\\\\x032 \\\\\\\\x19\\\\\\\\nl\\\\\\\\xee\\\\\\\\x16\\\\\\\\xccC\\\\\\\\x81\\\\\\\\x96\\\\\\\\x842\\\\\\\\xcf\\\\\\\\xdb\\\\\\\\xe2*B\\\\\\\\xf6dk\\\\\\\\x9f\\\\\\\\x9c\\\\\\\\x9bvp\\\\\\\\x19\\\\\\\\xc67\\\\\\\\xaf\\\\\\\\xec#\\\\\\\\x82)\\\\\\\\xa2\\\\\\\\x183J\\\\\\\\x94\\\\\\\\x15\\\\\\\\x8bb\\\\\\\\x00\\\\\\\\r\\\\\\\\x00\\\\\\\\x16\\\\\\\\x00\\\\\\\\x14\\\\\\\\x06\\\\\\\\x01\\\\\\\\x06\\\\\\\\x03\\\\\\\\x05\\\\\\\\x01\\\\\\\\x05\\\\\\\\x03\\\\\\\\x04\\\\\\\\x01\\\\\\\\x04\\\\\\\\x03\\\\\\\\x03\\\\\\\\x01\\\\\\\\x03\\\\\\\\x03\\\\\\\\x02\\\\\\\\x01\\\\\\\\x02\\\\\\\\x03\\\\\\\\x00\\\\\\\\x10\\\\\\\\x00\\\\\\\\x0b\\\\\\\\x00\\\\\\\\t\\\\\\\\x08http/1.1\\\\\\\\x00\\\\\\\\x0b\\\\\\\\x00\\\\\\\\x02\\\\\\\\x01\\\\\\\\x00\\\\\\\\x00\\\\\\\\n\\\\\\\\x00\\\\\\\\x04\\\\\\\\x00\\\\\\\\x02\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00\\\\\\\\x15\\\\\\\\x00{\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\"\\',)',)\n172.56.10.210:48383: Cannot parse Client Hello: TlsProtocolException('Cannot read raw Client Hello: TlsProtocolException(\\'Unexpected EOF in TLS handshake: b\"\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\xfc\\\\\\\\x03\\\\\\\\x03\\\\\\\\x16\\\\\\\\xc8\\\\\\\\xca\\\\\\\\x11\\\\\\\\x80\\\\\\\\x8a\\\\\\\\x87\\\\\\\\x80\\\\\\\\x98{S_d)p\\\\\\\\xb4\\\\\\\\x97f\\\\\\\\xaeJ}\\\\\\\\x94\\\\\\\\xcew\\\\\\\\x9b\\\\\\\\\\\\\\\\\\\\\\\\xee\\\\\\\\x8en\\\\\\\\x0e\\\\\\\\x0c\\\\\\\\x1b \\\\\\\\xad\\\\\\\\xc6!l\\\\\\\\xfeD\\\\\\\\x04\\\\\\\\x00\\\\\\\\n\\\\\\\\x8f+_ t\\\\\\\\xf8\\\\\\\\xc2\\\\\\\\xb9\\\\\\\\xab\\\\\\'4\\\\\\\\xf9\\\\\\\\xa1\\\\\\\\xd9\\\\\\\\xea\\\\\\\\xc6\\\\\\\\x16d\\\\\\\\xea\\\\\\\\x1b\\\\\\\\x8a\\\\\\\\x8e\\\\\\\\xdf\\\\\\\\x00(\\\\\\\\xc0+\\\\\\\\xc0,\\\\\\\\xcc\\\\\\\\xa9\\\\\\\\xc0/\\\\\\\\xc00\\\\\\\\xcc\\\\\\\\xa8\\\\\\\\x00\\\\\\\\x9e\\\\\\\\x00\\\\\\\\x9f\\\\\\\\xc0\\\\\\\\t\\\\\\\\xc0\\\\\\\\n\\\\\\\\xc0\\\\\\\\x13\\\\\\\\xc0\\\\\\\\x14\\\\\\\\x003\\\\\\\\x009\\\\\\\\x00\\\\\\\\x9c\\\\\\\\x00\\\\\\\\x9d\\\\\\\\x00/\\\\\\\\x005\\\\\\\\xc0\\\\\\\\x11\\\\\\\\x00\\\\\\\\x05\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\x8b\\\\\\\\xff\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x14\\\\\\\\x00\\\\\\\\x12\\\\\\\\x00\\\\\\\\x00\\\\\\\\x0fmail.mail01.org\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00#\\\\\\\\x00\\\\\\\\xb0\\\\\\\\xe8B\\\\\\\\xe8\\\\\\\\x03BX\\\\\\\\x8c\\\\\\\\xd1\\\\\\\\x19\\\\\\\\x8f=\\\\\\\\x83\\\\\\\\xadO\\\\\\\\xa0+\\\\\\\\x98J\\\\\\\\xdfR\\\\\\\\xffD\\\\\\\\xc3\\\\\\\\xea/3\\\\\\\\xd4\\\\\\\\xf37e\\\\\\\\xa3\\\\\\\\xde\\\\\\\\x07\\\\\\\\x19\\\\\\\\xd0\\\\\\\\xdf\\\\\\\\xcd|\\\\\\\\xdf$\\\\\\\\xceA\\\\\\\\t.`\\\\\\\\x94\\\\\\\\xf0\\\\\\\\x0c\\\\\\\\xef\\\\\\\\xf8\\\\\\\\x97:\\\\\\\\xadpV\\\\\\\\x8e\\\\\\\\x04\\\\\\\\xb04\\\\\\\\xb9\\\\\\\\xcd\\\\\\\\xafA\\\\\\\\xce\\\\\\\\xf6\\\\\\\\xacbHk\\\\\\\\xb2\\\\\\\\\\\\\\\\\\\\\\\\x9f\\\\\\\\x19\\\\\\\\xac\\\\\\\\xbd\\\\\\\\xf60\\\\\\\\xeb\\\\\\\\xa3\\\\\\\\xd2x\\\\\\\\xf2\\\\\\\\x18\\\\\\\\xed{\\\\\\\\xa2\\\\\\\\x8b\\\\\\\\xec\\\\\\\\x1a\\\\\\\\xfc\\\\\\\\xf1E\\\\\\\\xe5\\\\\\\\x1e\\\\\\\\xc8\\\\\\\\xd7\\\\\\\\xf5]\\\\\\\\xed\\\\\\\\xed\\\\\\\\xb2}\\\\\\\\xa3\\\\\\\\x90h\\\\\\\\xc4\\\\\\\\x1a\\\\\\\\xcc\\\\\\\\xf2%\\\\\\\\xba\\\\\\\\xfa\\\\\\\\x0c\\\\\\\\xd3q\\\\\\\\xe2\\\\\\\\xc2\\\\\\\\xdc\\\\\\'1\\\\\\\\xa4\\\\\\\\x8c\\\\\\\\xdc\\\\\\\\xa1}|Q\\\\\\\\xdf\\\\\\\\x8d\\\\\\\\x1b\\\\\\\\x90\\\\\\\\xd8>\\\\\\\\x032 \\\\\\\\x19\\\\\\\\nl\\\\\\\\xee\\\\\\\\x16\\\\\\\\xccC\\\\\\\\x81\\\\\\\\x96\\\\\\\\x842\\\\\\\\xcf\\\\\\\\xdb\\\\\\\\xe2*B\\\\\\\\xf6dk\\\\\\\\x9f\\\\\\\\x9c\\\\\\\\x9bvp\\\\\\\\x19\\\\\\\\xc67\\\\\\\\xaf\\\\\\\\xec#\\\\\\\\x82)\\\\\\\\xa2\\\\\\\\x183J\\\\\\\\x94\\\\\\\\x15\\\\\\\\x8bb\\\\\\\\x00\\\\\\\\r\\\\\\\\x00\\\\\\\\x16\\\\\\\\x00\\\\\\\\x14\\\\\\\\x06\\\\\\\\x01\\\\\\\\x06\\\\\\\\x03\\\\\\\\x05\\\\\\\\x01\\\\\\\\x05\\\\\\\\x03\\\\\\\\x04\\\\\\\\x01\\\\\\\\x04\\\\\\\\x03\\\\\\\\x03\\\\\\\\x01\\\\\\\\x03\\\\\\\\x03\\\\\\\\x02\\\\\\\\x01\\\\\\\\x02\\\\\\\\x03\\\\\\\\x00\\\\\\\\x10\\\\\\\\x00\\\\\\\\x0b\\\\\\\\x00\\\\\\\\t\\\\\\\\x08http/1.1\\\\\\\\x00\\\\\\\\x0b\\\\\\\\x00\\\\\\\\x02\\\\\\\\x01\\\\\\\\x00\\\\\\\\x00\\\\\\\\n\\\\\\\\x00\\\\\\\\x04\\\\\\\\x00\\\\\\\\x02\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00\\\\\\\\x15\\\\\\\\x00{\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\"\\',)',)\n Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py\", line 257, in _process_flow\n    return self.handle_regular_connect(f)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\n    layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 365, in __call__\n    self._client_hello.alpn_protocols or\nAttributeError: 'NoneType' object has no attribute 'alpn_protocols'\nAny other comments? What have you tried so far?\nNothing yet, but looking into the problem. Figure I send in the log\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.3\nPlatform: Linux-4.10.0-38-generic-x86_64-with-Ubuntu-17.04-zesty\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 17.04 zesty", "issue_status": "Closed", "issue_reporting_time": "2017-11-17T16:22:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "521": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2631", "issue_id": "#2631", "issue_summary": "configure mitmproxy(2.0.2) as Upstream proxy to Charles()", "issue_description": "ifishchuk commented on 17 Nov 2017 \u2022\nedited\nHi,\nI tried to configure mitmproxy in upstream proxy mode to Charles(4.2) as was described here\nIn my case there is the following scheme:\nClient(Roku)<---https/http--->MITMproxy<----HTTP/HTTPS---> Charles\nI trusted the root CA cert in my keychain and even imported mitmproxy-ca-cert.p12 into Charles\nIf I run mitmproxy -T --host(in the transparent mode) without redirecting the request to Charles I'm able to view both http/https requests\nIf I send requests directly to Charles(\"Enable transparent HTTP proxying\" option is enabled) I can view HTTP traffic\nThe reason why I'm trying to put mitmproxy in the middle between my Roku device and Charles is to handle HTTPS traffic as well\nWhen I start mitmproxy in the upstream mode(mitmproxy -U \"http://localhost:8888\") and forward all the requests to Charles(\"Enable transparent HTTP proxying\" option is disabled) the Roku application simply crushes\nIn the even log I found - HTTP protocol error in client request: Invalid HTTP request form (expected: authority or absolute, got: relative)\nIn the Charles Contents tab - com.xk72.proxy.http.HttpFieldsException: Invalid first line in request\nCould you please advise if I can catch/handle HTTP/HTTPS traffic in the way described above?\n./mitmproxy --version\nMitmproxy version: 2.0.2 (release version) Precompiled Binary\nPython version: 3.5.2\nPlatform: Linux-4.10.0-38-generic-x86_64-with-debian-stretch-sid\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nLinux distro: debian stretch/sid", "issue_status": "Closed", "issue_reporting_time": "2017-11-17T12:38:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "522": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2630", "issue_id": "#2630", "issue_summary": "mitmweb shows nothing", "issue_description": "hryamzik commented on 15 Nov 2017\nSteps to reproduce the problem:\nRun on hight sierra\nmitmweb -nr some.dump\nAny other comments? What have you tried so far?\nWorks fine on sierra with the same version of mitmproxy.\nSystem information\nMitmproxy version: 2.0.2 (release version) \nPython version: 3.6.3\nPlatform: Darwin-17.0.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0g  2 Nov 2017\nMac version: 10.13 ('', '', '') x86_64\n1", "issue_status": "Closed", "issue_reporting_time": "2017-11-15T10:44:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "523": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2628", "issue_id": "#2628", "issue_summary": "har_dump: KeyError: 'log'", "issue_description": "robben1234 commented on 14 Nov 2017\nSteps to reproduce the problem:\nsave flow mitmproxy -w dump\ntry to convert it to har with mitmproxy -n -r dump -s har_dump.py\nwatch stacktrace instead of har file:\nScript error: TypeError: configure() takes 1 positional argument but 2 were given\n\nScript error: Traceback (most recent call last):\n  File \"har_dump.py\", line 148, in response\n    HAR[\"log\"][\"entries\"].append(entry)\nKeyError: 'log'\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.3\nPlatform: Darwin-17.2.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f 25 May 2017\nMac version: 10.13.1 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-11-14T15:49:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "524": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2627", "issue_id": "#2627", "issue_summary": "Allow to push/inject own WebSocket messages", "issue_description": "inmylo commented on 13 Nov 2017\nI inspect a HTTPS WebSocket traffic with Mitmproxy. Currently I can read/edit WS messages with:\n...\nclass Intercept:\n    def websocket_message(self, flow):\n        print(flow.messages[-1])\n        ...\n\ndef start():\n    return Intercept()\n\u2026 as attached script to Mitmproxy.\nPlease add a functionality to push/inject our own messages to the client/server. Not edit existing one, but send a new message.\n1", "issue_status": "Closed", "issue_reporting_time": "2017-11-13T08:05:56Z", "fixed_by": "#3119", "pull_request_summary": "websocket: inject messages via flow", "pull_request_description": "Member\nKriechi commented on 12 May 2018\ncloses #2627", "pull_request_status": "Merged", "issue_fixed_time": "2018-05-16T20:35:41Z", "files_changed": [["23", "examples/complex/websocket_inject_message.py"], ["17", "mitmproxy/proxy/protocol/websocket.py"], ["28", "mitmproxy/websocket.py"], ["43", "test/mitmproxy/proxy/protocol/test_websocket.py"], ["12", "test/mitmproxy/test_websocket.py"]]}, "525": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2625", "issue_id": "#2625", "issue_summary": "UnicodeError: label too long", "issue_description": "sc911 commented on 10 Nov 2017\nSteps to reproduce the problem:\nTwo Virtual-Box-VMs, Host: Win 8.1, Client: Win 10, ProxyVM: Ubuntu 16.04.3 LTS\nFollowed this guide: http://docs.mitmproxy.org/en/stable/tutorials/transparent-dhcp.html\nAs I want to capture traffic of a specific app I added the following entries to ip tables\n-A PREROUTING -i enp0s8 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 8888\n-A PREROUTING -i enp0s8 -p tcp -m tcp --dport 443 -j REDIRECT --to-ports 8888\n-A PREROUTING -i enp0s8 -p tcp -m tcp --dport 8080 -j REDIRECT --to-ports 8888\n-A PREROUTING -i enp0s8 -p tcp -m tcp --dport 8081 -j REDIRECT --to-ports 8888\nStarting mitmdump -T --insecure -p 8888 -w dumpfile\nOpening a browser and surfing works as expected\nOn Opening the app mitmproxy throws this:\n192.168.3.62:49847: clientconnect\n192.168.3.62:49847: Certificate Verification Error for XXX.XXX.XXX.XXX:8080: hostname 'no-hostname' doesn't match 'XXXXXXXXXX'\n192.168.3.62:49847: Ignoring server verification error, continuing with connection\n192.168.3.62:49847: Traceback (most recent call last):\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/rtool/lib/python3.5/encodings/idna.py\", line 167, in encode\nUnicodeError: label too long\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"mitmproxy/proxy/server.py\", line 119, in handle\n  File \"mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n  File \"mitmproxy/proxy/protocol/tls.py\", line 376, in __call__\n  File \"mitmproxy/proxy/protocol/tls.py\", line 462, in _establish_tls_with_client_and_server\n  File \"mitmproxy/proxy/protocol/tls.py\", line 466, in _establish_tls_with_client\n  File \"mitmproxy/proxy/protocol/tls.py\", line 583, in _find_cert\nUnicodeError: encoding with 'idna' codec failed (UnicodeError: label too long)\n\nTraceback (most recent call last):\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/rtool/lib/python3.5/encodings/idna.py\", line 167, in encode\nUnicodeError: label too long\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"mitmproxy/proxy/server.py\", line 119, in handle\n  File \"mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n  File \"mitmproxy/proxy/protocol/tls.py\", line 376, in __call__\n  File \"mitmproxy/proxy/protocol/tls.py\", line 462, in _establish_tls_with_client_and_server\n  File \"mitmproxy/proxy/protocol/tls.py\", line 466, in _establish_tls_with_client\n  File \"mitmproxy/proxy/protocol/tls.py\", line 583, in _find_cert\nUnicodeError: encoding with 'idna' codec failed (UnicodeError: label too long)\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n192.168.3.62:49847: clientdisconnect\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 2.0.2 (release version) Precompiled Binary\nPython version: 3.5.2\nPlatform: Linux-4.4.0-87-generic-x86_64-with-debian-stretch-sid\nSSL version: OpenSSL 1.1.0e  16 Feb 2017\nLinux distro: debian stretch/sid", "issue_status": "Closed", "issue_reporting_time": "2017-11-10T07:31:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "526": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2624", "issue_id": "#2624", "issue_summary": "Cannot connect to reCaptach", "issue_description": "RedDuckss commented on 9 Nov 2017\nSteps to reproduce the problem:\nSetup mitmproxy\nSetup SLL certs on Android device (I used this tutorial https://blog.heckel.xyz/2013/07/01/how-to-use-mitmproxy-to-read-and-modify-https-traffic-of-your-phone/#Install-mitmproxy-CA-certificate-in-the-phone)\nDownload Nintendo Switch Online app\nTry to login\nAny other comments? What have you tried so far?\nWhen trying to log in to services that utilize reCaptcha, mitmproxy seems to block the connection to the reCaptcha server, preventing the login from continuing. I was attempting to sniff the requests sent by the Switch app but was unable to login due to the reCaptcha failure.\nSystem information\nMitmproxy version: 2.0.2 (release version) Precompiled Binary\nPython version: 3.5.3\nPlatform: Windows-10-10.0.15063\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nWindows version: 10 10.0.15063 Multiprocessor Free\nAndroid phone is a Blu Advance 5.5 running Android 6.0", "issue_status": "Closed", "issue_reporting_time": "2017-11-08T21:24:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "527": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2622", "issue_id": "#2622", "issue_summary": "Console Options: Wrong help text shown when entering value.", "issue_description": "Member\nmhils commented on 7 Nov 2017\nSteps to reproduce the problem:\nUse arrow keys to navigate to random option, e.g. ciphers_client. The help string now is \"Set supported ciphers for client connections using OpenSSL syntax.\"\nPress enter twice to start and finish edit.\nThe help box now shows the help text of the first option (\"Add all certificates of the upstream server to the certificate chain that will be served to the proxy client, as extras.\")\nAny other comments? What have you tried so far?\nThe problem is that we have two OptionList instances, which in combination with blinker send conflicting signals to OptionHelp.\nThe following patch helps with debugging:\ndiff --git a/mitmproxy/tools/console/options.py b/mitmproxy/tools/console/options.py\nindex 4d55aee..9787343 100644\n--- a/mitmproxy/tools/console/options.py\n+++ b/mitmproxy/tools/console/options.py\n@@ -93,10 +93,17 @@ class OptionItem(urwid.WidgetWrap):\n\n\n class OptionListWalker(urwid.ListWalker):\n+    instances = []\n+\n     def __init__(self, master):\n         self.master = master\n\n-        self.index = 0\n+        import traceback; traceback.print_stack()\n+        input(\"Initialization of \" + repr(self))\n+\n+        self.changes = []\n+        self.instances.append(self)\n+        self._index = 0\n         self.focusobj = None\n\n         self.opts = sorted(master.options.keys())\n@@ -105,6 +112,16 @@ class OptionListWalker(urwid.ListWalker):\n         self.set_focus(0)\n         self.master.options.changed.connect(self.sig_mod)\n\n+    @property\n+    def index(self):\n+        return self._index\n+\n+    @index.setter\n+    def index(self, val):\n+        self.changes.append(val)\n+        self._index = val\n+        print(self, {i: i.changes for i in self.instances})\n+\n     def sig_mod(self, *args, **kwargs):\n         self._modified()\n         self.set_focus(self.index)\n(\nThe initial output of running mitmproxy with this looks as follows:\n\u03bb mitmproxy\n  File \"/home/user/venv/bin/mitmproxy\", line 11, in <module>\n    load_entry_point('mitmproxy', 'console_scripts', 'mitmproxy')()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/main.py\", line 137, in mitmproxy\n    run(console.master.ConsoleMaster, cmdline.mitmproxy, args)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/main.py\", line 119, in run\n    master.run()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 192, in run\n    self.window = window.Window(self)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 126, in __init__\n    WindowStack(master, \"flowlist\"),\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 37, in __init__\n    options = options.Options(master),\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/options.py\", line 269, in __init__\n    self.optionslist = OptionsList(master)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/options.py\", line 176, in __init__\n    self.walker = OptionListWalker(master)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/options.py\", line 101, in __init__\n    import traceback; traceback.print_stack()\nInitialization of <mitmproxy.tools.console.options.OptionListWalker object at 0x7f0f9f19e048>\n<mitmproxy.tools.console.options.OptionListWalker object at 0x7f0f9f19e048> {<mitmproxy.tools.console.options.OptionListWalker object at 0x7f0f9f19e048>: [0]}\n  File \"/home/user/venv/bin/mitmproxy\", line 11, in <module>\n    load_entry_point('mitmproxy', 'console_scripts', 'mitmproxy')()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/main.py\", line 137, in mitmproxy\n    run(console.master.ConsoleMaster, cmdline.mitmproxy, args)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/main.py\", line 119, in run\n    master.run()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 192, in run\n    self.window = window.Window(self)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 127, in __init__\n    WindowStack(master, \"eventlog\")\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 37, in __init__\n    options = options.Options(master),\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/options.py\", line 269, in __init__\n    self.optionslist = OptionsList(master)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/options.py\", line 176, in __init__\n    self.walker = OptionListWalker(master)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/options.py\", line 101, in __init__\n    import traceback; traceback.print_stack()\nInitialization of <mitmproxy.tools.console.options.OptionListWalker object at 0x7f0f9f1d5710>\n@cortesi: I'm not really into WindowStack, what is happening here?\nSystem information\nMitmproxy: 3.0.0dev0958 (4cb96de)\nPython:    3.5.2\nOpenSSL:   OpenSSL 1.0.2g  1 Mar 2016\nPlatform:  Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial", "issue_status": "Closed", "issue_reporting_time": "2017-11-07T11:28:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "528": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2620", "issue_id": "#2620", "issue_summary": "Mitmproxy odd UI behaviour", "issue_description": "Contributor\nritiek commented on 6 Nov 2017\nSteps to reproduce the problem:\nRun mitmproxy and start intercepting flows.\nLet the UI fill with flows and then goto the last flow.\nPress up key to go one flow above.\nThe UI shifts one flow downwards instead of marker going one flow upwards.\nAny other comments? What have you tried so far?\nThis is not a deal breaker or anything but a bit annoying. This seems to happen only with the last flow in UI.\nSystem information\nMitmproxy: 3.0.0 \nPython:    3.6.2\nOpenSSL:   OpenSSL 1.0.2g  1 Mar 2016\nPlatform:  Linux-4.8.0-53-generic-x86_64-with-debian-stretch-sid", "issue_status": "Closed", "issue_reporting_time": "2017-11-06T10:17:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "529": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2618", "issue_id": "#2618", "issue_summary": "Bug in expected_http_body_size", "issue_description": "pruzam commented on 3 Nov 2017\nSteps to reproduce the problem:\nAny response with more than one content-length header\nAny other comments? What have you tried so far?\nheaders is MultiDict so this:\nsize = int(headers[\"content-length\"])\ncan be change to:\nsize = int(headers.get_all(\"content-length\")[0])", "issue_status": "Closed", "issue_reporting_time": "2017-11-03T12:53:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "530": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2617", "issue_id": "#2617", "issue_summary": "Wrong value for flow address on successive requests", "issue_description": "hpello commented on 2 Nov 2017\nHi,\nI encountered a problem which I think is similar to #2567.\nI could easily reproduce it with my client (Alamofire on iOS), although it took me some time to reproduce it with curl.\nWhen my client tries to access https://my.api.com through mitmproxy, I want requests to be transferred to my server running on http://localhost:8080.\nTo do so, I have the following script:\nfrom mitmproxy import http\n\ndef request(flow: http.HTTPFlow) -> None:\n    if flow.request.pretty_host == \"my.api.com\":\n        original_host = flow.request.pretty_host\n        original_scheme = flow.request.scheme\n\n        flow.request.scheme = \"http\"\n        flow.request.host = \"localhost\"\n        flow.request.port = 8080\n\n        flow.request.headers[\"Host\"] = original_host\n        flow.request.headers[\"X-Forwarded-Proto\"] = original_scheme\n\n    if flow.request.pretty_host == \"localhost\":\n        print(\"bad!\")\nNow, what I started to observe, is that for successive requests (made on the same socket), the first request was correctly transferred to http://localhost:8080, but when my script is called during the second one, its scheme, host and port are oddly https://localhost:8080, and I eventually see in the logs the following error:\n << Cannot establish TLS with localhost:8080 (sni: localhost): TlsException(\"SSL handshake error: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",)\nBy digging a bit more, I found out that in protocol/http.py, on line 305 f.request.host = self.__initial_server_conn.address.host, __initial_server_conn was set to localhost:8080 for the second request, which I imagine is wrong.\nNow, I can only reproduce the problem when _client_tls and establish_server_tls_now is set to False in tls.py. I thought about setting this manually after having a look at the logs:\nverbose logs excerpt (happens with my client). Error !\n192.168.0.162:63994: clientconnect\n192.168.0.162:63994: Set new server address: ('my.api.com', 443)\n192.168.0.162:63994: Establish TLS with client\n192.168.0.162:63994: request\n192.168.0.162:63994: Set new server address: localhost:8080\n192.168.0.162:63994: serverconnect\n192.168.0.162:63994: response\n192.168.0.162:63994: GET http://localhost:8080/path\n192.168.0.162:63994: request\n192.168.0.162:63994: serverdisconnect\n192.168.0.162:63994: Set new server address: localhost:8080\n192.168.0.162:63994: serverconnect\n192.168.0.162:63994: Establish TLS with server\n192.168.0.162:63994: GET https://localhost:8080/path\n << Cannot establish TLS with localhost:8080 (sni: localhost): TlsException(\"SSL handshake error: Error([('SSL routines', 'ssl3_get_record', 'wrong version number')],)\",)\n192.168.0.162:63994: serverdisconnect\n192.168.0.162:63994: clientdisconnect\nverbose logs excerpt (happens when I use curl). No Error\n127.0.0.1:56369: clientconnect\n127.0.0.1:56369: Set new server address: ('my.api.com', 443)\n127.0.0.1:56369: serverconnect\n127.0.0.1:56369: Establish TLS with server\n127.0.0.1:56369: ALPN selected by server: http/1.1\n127.0.0.1:56369: Establish TLS with client\n127.0.0.1:56369: ALPN for client: b'http/1.1'\n127.0.0.1:56369: request\n127.0.0.1:56369: serverdisconnect\n127.0.0.1:56369: Set new server address: localhost:8080\n127.0.0.1:56369: serverconnect\n127.0.0.1:56369: response\n127.0.0.1:56369: GET http://localhost:8080/path\n127.0.0.1:56369: request\n127.0.0.1:56369: response\n127.0.0.1:56369: GET http://localhost:8080/path\n127.0.0.1:56369: serverdisconnect\n127.0.0.1:56369: clientdisconnect\nSteps to reproduce the problem:\nSet establish_server_tls_now to False in tls.py, e.g.:\n        # ...\n        # if self._client_tls and establish_server_tls_now:\n        if False:\n            self._establish_tls_with_client_and_server()\n        # ...\nrun a dummy server on localhost:8080\nrun mitmdump with the script (e.g. replacing my.api.com with google.com)\nmitmdump -v -p 9999 --no-http2 -s ./redirect_host.py\nmake 2 requests on the same connection with curl\ncurl --cacert ~/.mitmproxy/mitmproxy-ca.pem --proxy http://localhost:9999 https://google.com https://google.com\nobserve error on second request\n404 page not found # <- first request, this is expected\n<html>\n            <head>\n                <title>502 Bad Gateway</title>\n            </head>\n            <body>\n            <h1>502 Bad Gateway</h1>\n            <p>TlsProtocolException(&#x27;Cannot establish TLS with localhost:8080 (sni: localhost): TlsException(&quot;SSL handshake error: Error([(\\&#x27;SSL routines\\&#x27;, \\&#x27;ssl3_get_record\\&#x27;, \\&#x27;wrong version number\\&#x27;)],)&quot;,)&#x27;,)</p>\n            </body>\n        </html>\nDo you have any idea where this can come from?\nLet me know if you need more info!\nSystem information\n$ mitmdump --version\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.3\nPlatform: Darwin-17.0.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f  25 May 2017\nMac version: 10.13 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-11-02T18:18:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "531": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2616", "issue_id": "#2616", "issue_summary": "Complete Options & Commands Work", "issue_description": "Member\nmhils commented on 2 Nov 2017 \u2022\nedited by cortesi\nUmbrella issue for all the console-related improvements that are needed for 3.0. The command/options changes introduced a lot of changes here, and we need to make sure that the regressions aren't too severe:\nUX for Keyboard Shortcuts\nIf I press b in the flow list, :cut.save s.content|@focus appears. It's unclear what I as a user am supposed to do here. (#2650)\nSame for |, wherescript.run @focus appears. If I naively press enter it (too) briefly displays \"usage: script.run flowspec str\". It is at no point obvious that str is for a filename. Same goes for e export, w save file, etc. (#2198)\nctrl+l is a shortcut for \"send cuts to clipboard\" in the flow list. It is not really clear what that means. (#2650)\nCommand List (Shift+C) UX is a bit rough around the edges...\nconsole.bodyview - doesn't mention that str must be \"request\" or \"response\", crashes when I just try console.bodyview @focused vim. (#2651)\nconsole.choose/console.choose.cmd: Invoking them with zero parameters crashes mitmproxy. It's not clear how I can specify [str]. Where/how do I specify the command that is next invoked and how are args passed - positional? (#2652)\nconsole.edit.focus: Needs docs and an example - not sure what it does at the moment. (#2653)\nconsole.edit.focus.options -> Needs docs and an example - not sure what it does at the moment. \"Command returned too much data for display\". (#2653, #2654)\nconsole.flowview.mode.set is confusingly named, and should probably be .prompt. (#2655)\nKey binding issues\n\"shift tab\" to focus on the next pane doesn't work for me - microsoft/WSL#1770\nGiven that we really really want to get out 3.0 soon-ish, I would be strongly in favor of not exposing commands to users (of course continue using them internally) for 3.0 and ship it with 4.0. The changes for that would be negligible and we can really focus on getting commands right after that. There really is a lot lot lot of potential in the commands feature, and I think we'd do ourselves a favor if we introduce it in a state where it's not so easy to hate.\n@mitmproxy/devs, thoughts?", "issue_status": "Closed", "issue_reporting_time": "2017-11-02T12:30:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "532": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2614", "issue_id": "#2614", "issue_summary": "Configurable reverse proxying per site", "issue_description": "jamespo commented on 31 Oct 2017\nSimilar to\n-R http://example.com --setheader :~q:Host:example.com\nfrom the docs I'd like to forward all requests for eg http://a.com to http://b.com (with host header appropriately set for a.com) but all other requests to go to their \"proper\" destination?", "issue_status": "Closed", "issue_reporting_time": "2017-10-30T20:19:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "533": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2613", "issue_id": "#2613", "issue_summary": "TypeError: a bytes-like object is required, not 'str'", "issue_description": "nesttle commented on 30 Oct 2017\nSteps to reproduce the problem:\nscript.py:\ndef response(flow):\n   if \"customstring\" in flow.response.content:\n     >my code>\nTypeError: a bytes-like object is required, not 'str'\nI need to use b\"customstring\" instead \"customstring\". This script was working fine on mitmproxy 0.18 but fails on mitmproxy 2.0.0\nWant to use the same script because is very long and was stable on older mitm version. Any way to use strings instead bytes?\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0916-0x930d78b5)\nPython version: 3.5.3\nPlatform: Linux-4.9.0-3-amd64-x86_64-with-debian-9.1\nLinux distro: debian 9.1\nThanks!", "issue_status": "Closed", "issue_reporting_time": "2017-10-30T06:38:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "534": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2612", "issue_id": "#2612", "issue_summary": "pip install mitmproxy==0.16 failed error: command 'x86_64-linux-gnu-gcc' failed with exit status 1", "issue_description": "teguh24 commented on 29 Oct 2017\nbuild/temp.linux-x86_64-2.7/_openssl.c:59549:29: warning: passing argument 2 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n{ X509_get0_signature(x0, x1, x2); }\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const X509_ALGOR ** {aka const struct X509_algor_st **}\u2019 but argument is of type \u2018X509_ALGOR ** {aka struct X509_algor_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nerror: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n----------------------------------------\nCan't rollback cryptography, nothing uninstalled.\nCommand \"/usr/bin/python -u -c \"import setuptools, tokenize;file='/tmp/pip-build-Sw5H4e/cryptography/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, file, 'exec'))\" install --record /tmp/pip-F1G7pb-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-Sw5H4e/cryptography/", "issue_status": "Closed", "issue_reporting_time": "2017-10-29T03:21:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "535": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2611", "issue_id": "#2611", "issue_summary": "Failed building wheel for cryptography", "issue_description": "jeretc commented on 27 Oct 2017\nSteps to reproduce the problem:\nsudo pip install --user mitmproxy\nAny other comments? What have you tried so far?\nmitmproxy error shows failed building cryptography wheel ..error: command 'x86_64-linux-gnu-gcc' failed with exit status 1\ni have installed, cryptography without errors:\n\u2514\u2500\u2500\u257c $sudo pip install -U cryptography\nRequirement already up-to-date: cryptography in /usr/local/lib/python2.7/dist-packages\nCollecting six>=1.4.1 (from cryptography)\nUsing cached six-1.11.0-py2.py3-none-any.whl\nRequirement already up-to-date: cffi>=1.7; platform_python_implementation != \"PyPy\" in /usr/local/lib/python2.7/dist-packages (from cryptography)\nRequirement already up-to-date: enum34; python_version < \"3\" in /usr/lib/python2.7/dist-packages (from cryptography)\nRequirement already up-to-date: idna>=2.1 in /usr/local/lib/python2.7/dist-packages (from cryptography)\nRequirement already up-to-date: asn1crypto>=0.21.0 in /usr/local/lib/python2.7/dist-packages (from cryptography)\nRequirement already up-to-date: ipaddress; python_version < \"3\" in /usr/local/lib/python2.7/dist-packages (from cryptography)\nRequirement already up-to-date: pycparser in /usr/local/lib/python2.7/dist-packages (from cffi>=1.7; platform_python_implementation != \"PyPy\"->cryptography)\nInstalling collected packages: six\nFound existing installation: six 1.10.0\nUninstalling six-1.10.0:\nSuccessfully uninstalled six-1.10.0\nSuccessfully installed six-1.11.0\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.4\nPlatform: Linux-4.12.0-parrot6-amd64-x86_64-with-Parrot-3.9-intruder\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: Parrot 3.9 intruder\n$sudo pip install --user mitmproxy\nCollecting mitmproxy\nUsing cached mitmproxy-0.18.3-py2.py3-none-any.whl\nRequirement already satisfied: hyperframe<5,>=4.0.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: h2<2.5,>=2.4.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: Flask<0.12,>=0.10.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: tornado<4.5,>=4.3 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: configargparse<0.12,>=0.10 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: pyperclip<1.6,>=1.5.22 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: certifi>=2015.11.20.1 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: Pillow<3.5,>=3.2 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: watchdog<0.9,>=0.8.3 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: urwid<1.4,>=1.3.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: pyasn1<0.2,>=0.1.9 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: cssutils<1.1,>=1.0.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: passlib<1.7,>=1.6.5 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: click<7.0,>=6.2 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: html2text<=2016.9.19,>=2016.1.8 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nCollecting cryptography<1.6,>=1.3 (from mitmproxy)\nUsing cached cryptography-1.5.3.tar.gz\nRequirement already satisfied: construct<2.6,>=2.5.2 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nCollecting lxml<=3.6.0,>=3.5.0 (from mitmproxy)\nCollecting brotlipy<0.7,>=0.5.1 (from mitmproxy)\nUsing cached brotlipy-0.6.0-cp27-cp27mu-manylinux1_x86_64.whl\nRequirement already satisfied: requests<2.12,>=2.9.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: pyOpenSSL<17.0,>=16.0 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: pyparsing<2.2,>=2.1.3 in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: six<1.11,>=1.10 in /root/.local/lib/python2.7/site-packages (from mitmproxy)\nCollecting blinker<1.5,>=1.4 (from mitmproxy)\nRequirement already satisfied: enum34<2,>=1.0.4; python_version == \"2.7\" in /usr/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied: backports.ssl-match-hostname<3.6,>=3.5.0.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nCollecting typing==3.5.2.2; python_version == \"2.7\" (from mitmproxy)\nRequirement already satisfied: ipaddress<1.1,>=1.0.15; python_version == \"2.7\" in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nCollecting jsbeautifier<1.7,>=1.6.3 (from mitmproxy)\nRequirement already satisfied: hpack<3,>=2.2 in /usr/local/lib/python2.7/dist-packages (from h2<2.5,>=2.4.1->mitmproxy)\nRequirement already satisfied: itsdangerous>=0.21 in /usr/lib/python2.7/dist-packages (from Flask<0.12,>=0.10.1->mitmproxy)\nRequirement already satisfied: Werkzeug>=0.7 in /usr/lib/python2.7/dist-packages (from Flask<0.12,>=0.10.1->mitmproxy)\nRequirement already satisfied: Jinja2>=2.4 in /usr/lib/python2.7/dist-packages (from Flask<0.12,>=0.10.1->mitmproxy)\nRequirement already satisfied: singledispatch in /usr/lib/python2.7/dist-packages (from tornado<4.5,>=4.3->mitmproxy)\nRequirement already satisfied: backports-abc>=0.4 in /usr/lib/python2.7/dist-packages (from tornado<4.5,>=4.3->mitmproxy)\nRequirement already satisfied: PyYAML>=3.10 in /usr/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy)\nRequirement already satisfied: argh>=0.24.1 in /usr/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy)\nRequirement already satisfied: pathtools>=0.1.1 in /usr/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy)\nRequirement already satisfied: cffi>=1.4.1 in /usr/local/lib/python2.7/dist-packages (from cryptography<1.6,>=1.3->mitmproxy)\nRequirement already satisfied: idna>=2.0 in /usr/local/lib/python2.7/dist-packages (from cryptography<1.6,>=1.3->mitmproxy)\nRequirement already satisfied: setuptools>=11.3 in /usr/lib/python2.7/dist-packages (from cryptography<1.6,>=1.3->mitmproxy)\nCollecting editorconfig>=0.12.0 (from jsbeautifier<1.7,>=1.6.3->mitmproxy)\nRequirement already satisfied: pycparser in /usr/local/lib/python2.7/dist-packages (from cffi>=1.4.1->cryptography<1.6,>=1.3->mitmproxy)\nBuilding wheels for collected packages: cryptography\nRunning setup.py bdist_wheel for cryptography ... error\nComplete output from command /usr/bin/python -u -c \"import setuptools, tokenize;file='/tmp/pip-build-pnm9yn/cryptography/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, file, 'exec'))\" bdist_wheel -d /tmp/tmpwI_HEBpip-wheel- --python-tag cp27:\nrunning bdist_wheel\nrunning build\nrunning build_py\ncreating build\ncreating build/lib.linux-x86_64-2.7\ncreating build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/exceptions.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/fernet.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/init.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/utils.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/about.py -> build/lib.linux-x86_64-2.7/cryptography\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat\ncopying src/cryptography/hazmat/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat\ncreating build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/extensions.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/init.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/base.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/oid.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/general_name.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/name.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/interfaces.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/multibackend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings\ncopying src/cryptography/hazmat/bindings/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/cmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/serialization.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/constant_time.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/padding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/keywrap.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/cmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/encode_asn1.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/decode_asn1.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/rsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/ciphers.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/ec.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/dsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/backend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/x509.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/ciphers.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/backend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/binding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/_conditional.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncopying src/cryptography/hazmat/bindings/commoncrypto/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncopying src/cryptography/hazmat/bindings/commoncrypto/binding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/algorithms.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/modes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/base.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/hotp.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/totp.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/kbkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/hkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/pbkdf2.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/concatkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/x963kdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/interfaces\ncopying src/cryptography/hazmat/primitives/interfaces/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/interfaces\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/rsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/padding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/ec.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/dh.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/dsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\nrunning egg_info\nwriting requirements to src/cryptography.egg-info/requires.txt\nwriting src/cryptography.egg-info/PKG-INFO\nwriting top-level names to src/cryptography.egg-info/top_level.txt\nwriting dependency_links to src/cryptography.egg-info/dependency_links.txt\nwriting entry points to src/cryptography.egg-info/entry_points.txt\nreading manifest file 'src/cryptography.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nno previously-included directories found matching 'docs/_build'\nwarning: no previously-included files matching '*' found under directory 'vectors'\nwriting manifest file 'src/cryptography.egg-info/SOURCES.txt'\nrunning build_ext\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_padding.c'\ncreating build/temp.linux-x86_64-2.7\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_constant_time.c'\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_openssl.c'\nbuilding '_openssl' extension\ncreating build/temp.linux-x86_64-2.7/build\ncreating build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7\nx86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fno-strict-aliasing -Wdate-time -D_FORTIFY_SOURCE=2 -g -fdebug-prefix-map=/build/python2.7-HVkOs2/python2.7-2.7.13=. -fstack-protector-strong -Wformat -Werror=format-security -fPIC -I/usr/include/python2.7 -c build/temp.linux-x86_64-2.7/_openssl.c -o build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7/_openssl.o\nbuild/temp.linux-x86_64-2.7/_openssl.c:708:23: error: conflicting types for \u2018ASN1_TIME_to_generalizedtime\u2019\nASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(ASN1_TIME *,\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from build/temp.linux-x86_64-2.7/_openssl.c:517:0:\n/usr/include/openssl/asn1.h:628:23: note: previous declaration of \u2018ASN1_TIME_to_generalizedtime\u2019 was here\nASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(const ASN1_TIME *t,\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_ASN1_STRING_data\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:13445:3: warning: \u2018ASN1_STRING_data\u2019 is deprecated [-Wdeprecated-declarations]\nreturn ASN1_STRING_data(x0);\n^~~~~~\nIn file included from /usr/include/openssl/bn.h:31:0,\nfrom /usr/include/openssl/asn1.h:24,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:517:\n/usr/include/openssl/asn1.h:553:1: note: declared here\nDEPRECATEDIN_1_1_0(unsigned char *ASN1_STRING_data(ASN1_STRING *x))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_ASN1_STRING_data\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:13468:3: warning: \u2018ASN1_STRING_data\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = ASN1_STRING_data(x0); }\n^\nIn file included from /usr/include/openssl/bn.h:31:0,\nfrom /usr/include/openssl/asn1.h:24,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:517:\n/usr/include/openssl/asn1.h:553:1: note: declared here\nDEPRECATEDIN_1_1_0(unsigned char *ASN1_STRING_data(ASN1_STRING *x))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_f_buffer\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14808:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_f_buffer();\n^~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_f_buffer\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14818:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_f_buffer(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_f_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14832:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_f_null();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_f_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14842:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_f_null(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_fd\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16261:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_fd();\n^~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_fd\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16271:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_fd(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_file\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16285:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_file();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_file\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16295:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_file(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_mem\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16309:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_mem();\n^~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_mem\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16319:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_mem(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16333:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_null();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16343:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_null(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_socket\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16357:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_socket();\n^~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_socket\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16367:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_socket(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22839:3: warning: \u2018DTLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1632:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_client_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22849:3: warning: \u2018DTLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1632:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_client_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22863:3: warning: \u2018DTLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1630:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22873:3: warning: \u2018DTLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1630:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22887:3: warning: \u2018DTLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1631:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_server_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22897:3: warning: \u2018DTLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1631:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_server_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_OPENSSL_config\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:39568:3: warning: \u2018OPENSSL_config\u2019 is deprecated [-Wdeprecated-declarations]\nOPENSSL_config(x0);\n^~~~~~~~~~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/conf.h:92:1: note: declared here\nDEPRECATEDIN_1_1_0(void OPENSSL_config(const char *config_name))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_OPENSSL_config\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:39590:3: warning: \u2018OPENSSL_config\u2019 is deprecated [-Wdeprecated-declarations]\n{ OPENSSL_config(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/conf.h:92:1: note: declared here\nDEPRECATEDIN_1_1_0(void OPENSSL_config(const char *config_name))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52764:3: warning: \u2018TLSv1_1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1620:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_client_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52774:3: warning: \u2018TLSv1_1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1620:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_client_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52788:3: warning: \u2018TLSv1_1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1618:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52798:3: warning: \u2018TLSv1_1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1618:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52812:3: warning: \u2018TLSv1_1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1619:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_server_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52822:3: warning: \u2018TLSv1_1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1619:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_server_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52836:3: warning: \u2018TLSv1_2_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1626:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_client_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52846:3: warning: \u2018TLSv1_2_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1626:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_client_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52860:3: warning: \u2018TLSv1_2_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1624:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52870:3: warning: \u2018TLSv1_2_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1624:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52884:3: warning: \u2018TLSv1_2_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1625:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_server_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52894:3: warning: \u2018TLSv1_2_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1625:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_server_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52908:3: warning: \u2018TLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1614:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_client_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52918:3: warning: \u2018TLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1614:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_client_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52932:3: warning: \u2018TLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1612:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52942:3: warning: \u2018TLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1612:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52956:3: warning: \u2018TLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1613:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_server_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52966:3: warning: \u2018TLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1613:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_server_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_CRL_get_lastUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54001:3: warning: \u2018X509_CRL_get_lastUpdate\u2019 is deprecated [-Wdeprecated-declarations]\nreturn X509_CRL_get_lastUpdate(x0);\n^~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:708:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_lastUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_CRL_get_lastUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54024:3: warning: \u2018X509_CRL_get_lastUpdate\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = X509_CRL_get_lastUpdate(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:708:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_lastUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_CRL_get_nextUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54037:3: warning: \u2018X509_CRL_get_nextUpdate\u2019 is deprecated [-Wdeprecated-declarations]\nreturn X509_CRL_get_nextUpdate(x0);\n^~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:709:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_nextUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_CRL_get_nextUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54060:3: warning: \u2018X509_CRL_get_nextUpdate\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = X509_CRL_get_nextUpdate(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:709:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_nextUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_get0_signature\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:59497:23: warning: passing argument 1 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\nX509_get0_signature(x0, x1, x2);\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const ASN1_BIT_STRING ** {aka const struct asn1_string_st **}\u2019 but argument is of type \u2018ASN1_OCTET_STRING ** {aka struct asn1_string_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c:59497:27: warning: passing argument 2 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\nX509_get0_signature(x0, x1, x2);\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const X509_ALGOR ** {aka const struct X509_algor_st **}\u2019 but argument is of type \u2018X509_ALGOR ** {aka struct X509_algor_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_get0_signature\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:59549:25: warning: passing argument 1 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n{ X509_get0_signature(x0, x1, x2); }\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const ASN1_BIT_STRING ** {aka const struct asn1_string_st **}\u2019 but argument is of type \u2018ASN1_OCTET_STRING ** {aka struct asn1_string_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c:59549:29: warning: passing argument 2 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n{ X509_get0_signature(x0, x1, x2); }\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const X509_ALGOR ** {aka const struct X509_algor_st **}\u2019 but argument is of type \u2018X509_ALGOR ** {aka struct X509_algor_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nerror: command 'x86_64-linux-gnu-gcc' failed with exit status 1\nFailed building wheel for cryptography\nRunning setup.py clean for cryptography\nFailed to build cryptography\nInstalling collected packages: cryptography, lxml, brotlipy, blinker, typing, editorconfig, jsbeautifier, mitmproxy\nRunning setup.py install for cryptography ... error\nComplete output from command /usr/bin/python -u -c \"import setuptools, tokenize;file='/tmp/pip-build-pnm9yn/cryptography/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, file, 'exec'))\" install --record /tmp/pip-CuCMQF-record/install-record.txt --single-version-externally-managed --compile --user --prefix=:\nrunning install\nrunning build\nrunning build_py\ncreating build\ncreating build/lib.linux-x86_64-2.7\ncreating build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/exceptions.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/fernet.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/init.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/utils.py -> build/lib.linux-x86_64-2.7/cryptography\ncopying src/cryptography/about.py -> build/lib.linux-x86_64-2.7/cryptography\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat\ncopying src/cryptography/hazmat/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat\ncreating build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/extensions.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/init.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/base.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/oid.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/general_name.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncopying src/cryptography/x509/name.py -> build/lib.linux-x86_64-2.7/cryptography/x509\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/interfaces.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncopying src/cryptography/hazmat/backends/multibackend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings\ncopying src/cryptography/hazmat/bindings/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/cmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/serialization.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/constant_time.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/padding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/keywrap.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncopying src/cryptography/hazmat/primitives/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/cmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/encode_asn1.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/decode_asn1.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/rsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/ciphers.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/ec.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/dsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/backend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncopying src/cryptography/hazmat/backends/openssl/x509.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/openssl\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/hashes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/ciphers.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/hmac.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncopying src/cryptography/hazmat/backends/commoncrypto/backend.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/backends/commoncrypto\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/binding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncopying src/cryptography/hazmat/bindings/openssl/_conditional.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/openssl\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncopying src/cryptography/hazmat/bindings/commoncrypto/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncopying src/cryptography/hazmat/bindings/commoncrypto/binding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/bindings/commoncrypto\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/algorithms.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/modes.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncopying src/cryptography/hazmat/primitives/ciphers/base.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/ciphers\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/hotp.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncopying src/cryptography/hazmat/primitives/twofactor/totp.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/twofactor\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/kbkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/hkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/pbkdf2.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/concatkdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncopying src/cryptography/hazmat/primitives/kdf/x963kdf.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/kdf\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/interfaces\ncopying src/cryptography/hazmat/primitives/interfaces/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/interfaces\ncreating build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/init.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/rsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/padding.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/utils.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/ec.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/dh.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\ncopying src/cryptography/hazmat/primitives/asymmetric/dsa.py -> build/lib.linux-x86_64-2.7/cryptography/hazmat/primitives/asymmetric\nrunning egg_info\nwriting requirements to src/cryptography.egg-info/requires.txt\nwriting src/cryptography.egg-info/PKG-INFO\nwriting top-level names to src/cryptography.egg-info/top_level.txt\nwriting dependency_links to src/cryptography.egg-info/dependency_links.txt\nwriting entry points to src/cryptography.egg-info/entry_points.txt\nreading manifest file 'src/cryptography.egg-info/SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nno previously-included directories found matching 'docs/_build'\nwarning: no previously-included files matching '*' found under directory 'vectors'\nwriting manifest file 'src/cryptography.egg-info/SOURCES.txt'\nrunning build_ext\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_padding.c'\ncreating build/temp.linux-x86_64-2.7\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_constant_time.c'\ngenerating cffi module 'build/temp.linux-x86_64-2.7/_openssl.c'\nbuilding '_openssl' extension\ncreating build/temp.linux-x86_64-2.7/build\ncreating build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7\nx86_64-linux-gnu-gcc -pthread -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fno-strict-aliasing -Wdate-time -D_FORTIFY_SOURCE=2 -g -fdebug-prefix-map=/build/python2.7-HVkOs2/python2.7-2.7.13=. -fstack-protector-strong -Wformat -Werror=format-security -fPIC -I/usr/include/python2.7 -c build/temp.linux-x86_64-2.7/_openssl.c -o build/temp.linux-x86_64-2.7/build/temp.linux-x86_64-2.7/_openssl.o\nbuild/temp.linux-x86_64-2.7/_openssl.c:708:23: error: conflicting types for \u2018ASN1_TIME_to_generalizedtime\u2019\nASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(ASN1_TIME *,\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nIn file included from build/temp.linux-x86_64-2.7/_openssl.c:517:0:\n/usr/include/openssl/asn1.h:628:23: note: previous declaration of \u2018ASN1_TIME_to_generalizedtime\u2019 was here\nASN1_GENERALIZEDTIME *ASN1_TIME_to_generalizedtime(const ASN1_TIME *t,\n^~~~~~~~~~~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_ASN1_STRING_data\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:13445:3: warning: \u2018ASN1_STRING_data\u2019 is deprecated [-Wdeprecated-declarations]\nreturn ASN1_STRING_data(x0);\n^~~~~~\nIn file included from /usr/include/openssl/bn.h:31:0,\nfrom /usr/include/openssl/asn1.h:24,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:517:\n/usr/include/openssl/asn1.h:553:1: note: declared here\nDEPRECATEDIN_1_1_0(unsigned char *ASN1_STRING_data(ASN1_STRING *x))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_ASN1_STRING_data\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:13468:3: warning: \u2018ASN1_STRING_data\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = ASN1_STRING_data(x0); }\n^\nIn file included from /usr/include/openssl/bn.h:31:0,\nfrom /usr/include/openssl/asn1.h:24,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:517:\n/usr/include/openssl/asn1.h:553:1: note: declared here\nDEPRECATEDIN_1_1_0(unsigned char *ASN1_STRING_data(ASN1_STRING *x))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_f_buffer\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14808:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_f_buffer();\n^~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_f_buffer\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14818:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_f_buffer(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_f_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14832:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_f_null();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_f_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:14842:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_f_null(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_fd\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16261:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_fd();\n^~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_fd\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16271:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_fd(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_file\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16285:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_file();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_file\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16295:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_file(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_mem\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16309:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_mem();\n^~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_mem\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16319:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_mem(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16333:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_null();\n^~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_null\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16343:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_null(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_BIO_s_socket\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16357:10: warning: return discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\nreturn BIO_s_socket();\n^~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_BIO_s_socket\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:16367:12: warning: assignment discards \u2018const\u2019 qualifier from pointer target type [-Wdiscarded-qualifiers]\n{ result = BIO_s_socket(); }\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22839:3: warning: \u2018DTLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1632:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_client_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22849:3: warning: \u2018DTLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1632:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_client_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22863:3: warning: \u2018DTLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1630:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22873:3: warning: \u2018DTLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1630:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_DTLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22887:3: warning: \u2018DTLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn DTLSv1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1631:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_server_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_DTLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:22897:3: warning: \u2018DTLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = DTLSv1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1631:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD DTLSv1_server_method(void)) / DTLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_OPENSSL_config\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:39568:3: warning: \u2018OPENSSL_config\u2019 is deprecated [-Wdeprecated-declarations]\nOPENSSL_config(x0);\n^~~~~~~~~~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/conf.h:92:1: note: declared here\nDEPRECATEDIN_1_1_0(void OPENSSL_config(const char *config_name))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_OPENSSL_config\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:39590:3: warning: \u2018OPENSSL_config\u2019 is deprecated [-Wdeprecated-declarations]\n{ OPENSSL_config(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/conf.h:92:1: note: declared here\nDEPRECATEDIN_1_1_0(void OPENSSL_config(const char *config_name))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52764:3: warning: \u2018TLSv1_1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1620:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_client_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52774:3: warning: \u2018TLSv1_1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1620:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_client_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52788:3: warning: \u2018TLSv1_1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1618:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52798:3: warning: \u2018TLSv1_1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1618:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52812:3: warning: \u2018TLSv1_1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1619:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_server_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52822:3: warning: \u2018TLSv1_1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1619:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_1_server_method(void)) / TLSv1.1 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52836:3: warning: \u2018TLSv1_2_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1626:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_client_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52846:3: warning: \u2018TLSv1_2_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1626:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_client_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52860:3: warning: \u2018TLSv1_2_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1624:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52870:3: warning: \u2018TLSv1_2_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1624:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_2_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52884:3: warning: \u2018TLSv1_2_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_2_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1625:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_server_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_2_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52894:3: warning: \u2018TLSv1_2_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_2_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1625:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_2_server_method(void)) / TLSv1.2 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52908:3: warning: \u2018TLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_client_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1614:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_client_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_client_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52918:3: warning: \u2018TLSv1_client_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_client_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1614:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_client_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52932:3: warning: \u2018TLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1612:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52942:3: warning: \u2018TLSv1_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1612:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_TLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52956:3: warning: \u2018TLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\nreturn TLSv1_server_method();\n^~~~~~\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1613:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_server_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_TLSv1_server_method\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:52966:3: warning: \u2018TLSv1_server_method\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = TLSv1_server_method(); }\n^\nIn file included from /usr/include/openssl/ct.h:13:0,\nfrom /usr/include/openssl/ssl.h:61,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:601:\n/usr/include/openssl/ssl.h:1613:1: note: declared here\nDEPRECATEDIN_1_1_0(__owur const SSL_METHOD TLSv1_server_method(void)) / TLSv1.0 */\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_CRL_get_lastUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54001:3: warning: \u2018X509_CRL_get_lastUpdate\u2019 is deprecated [-Wdeprecated-declarations]\nreturn X509_CRL_get_lastUpdate(x0);\n^~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:708:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_lastUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_CRL_get_lastUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54024:3: warning: \u2018X509_CRL_get_lastUpdate\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = X509_CRL_get_lastUpdate(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:708:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_lastUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_CRL_get_nextUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54037:3: warning: \u2018X509_CRL_get_nextUpdate\u2019 is deprecated [-Wdeprecated-declarations]\nreturn X509_CRL_get_nextUpdate(x0);\n^~~~~~\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:709:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_nextUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_CRL_get_nextUpdate\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:54060:3: warning: \u2018X509_CRL_get_nextUpdate\u2019 is deprecated [-Wdeprecated-declarations]\n{ result = X509_CRL_get_nextUpdate(x0); }\n^\nIn file included from /usr/include/openssl/x509_vfy.h:20:0,\nfrom /usr/include/openssl/x509.h:309,\nfrom /usr/include/openssl/cms.h:16,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:709:1: note: declared here\nDEPRECATEDIN_1_1_0(ASN1_TIME *X509_CRL_get_nextUpdate(X509_CRL *crl))\n^\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_d_X509_get0_signature\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:59497:23: warning: passing argument 1 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\nX509_get0_signature(x0, x1, x2);\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const ASN1_BIT_STRING ** {aka const struct asn1_string_st **}\u2019 but argument is of type \u2018ASN1_OCTET_STRING ** {aka struct asn1_string_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c:59497:27: warning: passing argument 2 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\nX509_get0_signature(x0, x1, x2);\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const X509_ALGOR ** {aka const struct X509_algor_st **}\u2019 but argument is of type \u2018X509_ALGOR ** {aka struct X509_algor_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c: In function \u2018_cffi_f_X509_get0_signature\u2019:\nbuild/temp.linux-x86_64-2.7/_openssl.c:59549:25: warning: passing argument 1 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n{ X509_get0_signature(x0, x1, x2); }\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const ASN1_BIT_STRING ** {aka const struct asn1_string_st **}\u2019 but argument is of type \u2018ASN1_OCTET_STRING ** {aka struct asn1_string_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nbuild/temp.linux-x86_64-2.7/_openssl.c:59549:29: warning: passing argument 2 of \u2018X509_get0_signature\u2019 from incompatible pointer type [-Wincompatible-pointer-types]\n{ X509_get0_signature(x0, x1, x2); }\n^~\nIn file included from /usr/include/openssl/cms.h:16:0,\nfrom build/temp.linux-x86_64-2.7/_openssl.c:532:\n/usr/include/openssl/x509.h:552:6: note: expected \u2018const X509_ALGOR ** {aka const struct X509_algor_st **}\u2019 but argument is of type \u2018X509_ALGOR ** {aka struct X509_algor_st **}\u2019\nvoid X509_get0_signature(const ASN1_BIT_STRING **psig,\n^~~~~~~~~~~~~~~~~~~\nerror: command 'x86_64-linux-gnu-gcc' failed with exit status 1\n----------------------------------------\nCommand \"/usr/bin/python -u -c \"import setuptools, tokenize;file='/tmp/pip-build-pnm9yn/cryptography/setup.py';f=getattr(tokenize, 'open', open)(file);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, file, 'exec'))\" install --record /tmp/pip-CuCMQF-record/install-record.txt --single-version-externally-managed --compile --user --prefix=\" failed with error code 1 in /tmp/pip-build-pnm9yn/cryptography/", "issue_status": "Closed", "issue_reporting_time": "2017-10-27T17:26:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "536": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2609", "issue_id": "#2609", "issue_summary": "transparent mode and mitm certificate do not work.", "issue_description": "ddor254 commented on 26 Oct 2017 \u2022\nedited\nHi , i'm facing a problem when running transparent mode and mitm certificate is trusted in the proxied machine -\nwhen i'm running on regular mode and i do manual proxy on the proxied machine - all good and i can decrypt the https traffic with the mitm certificate. - see no problems and i'm entering https sites with no warnings.\nwhen changing that to -T option (transparent) and creating iptables rules, and removing the manual proxy configuration from the proxied device , but with the same certificates , every time that i'm entering https site i get \" your connection is not private\"\\ NET:ERR_CERT_AUTHORITY_INVALID , and the mitm proxy is still in the trusted CA.\nis this a feature or a bug?\nSteps to reproduce the problem:\n1.install certificate on mobile device\n2.set iptables rules in machine that redirect https traffic to port 8080\niptables --table nat --insert PREROUTING -p tcp --destination-port 443 -j REDIRECT --to-ports 8080\nrun mitmproxy : mitmproxy --host -T -p 8080\nAny other comments? What have you tried so far?\nI followed this manual : http://docs.mitmproxy.org/en/stable/transparent/linux.html\nSystem information\nSony Xperia , android version 7.1.1 as the proxied device\nUbuntu 16.04 as the proxy server\nMitmproxy version: 2.0.2 (release version)\nwhen running mitmdump instead of mitmproxy i get the following error :\n10.0.1.5:52341: Client Handshake failed. The client may not trust the proxy's certificate for cdn.taboola.com.\nso there must be something wrong with the certificate - but in regular mode with the same certificate it works !\n4", "issue_status": "Closed", "issue_reporting_time": "2017-10-26T06:48:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "537": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2607", "issue_id": "#2607", "issue_summary": "How to forward mitmproxy to other proxy?", "issue_description": "ghost commented on 25 Oct 2017 \u2022\nedited by ghost\nHi all. How to use mitproxy to forward proxy, modify and bypass request?\nMake forward mitmproxy (ex: 127.0.0.1:8080) to other proxy (ex:213.45.34.5:8999)\nMake modify request\nMake bypass SSL (tls_passthrough.py)\nAnyone. who can help me?\nThanks", "issue_status": "Closed", "issue_reporting_time": "2017-10-25T03:03:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "538": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2605", "issue_id": "#2605", "issue_summary": "Transparent proxy not catching responses", "issue_description": "james-88 commented on 24 Oct 2017 \u2022\nedited\nHello,\nI have a network of 2 devices, the network is configured to work as the following:\nDevice A Device B\n| GATEWAY | --------> | MITMPROXY | ------> | SOURCE |\nSo basically only data coming from the gateway to the source flow through the device where mitmproxy is running, now if I configure this network to work as a normal network then I can intercept data in both directions with no issues, all I have to do is redirect flows on port 80 to port 8080 using IP tables.\nThe problem is if I change my configuration as shown above, I should still be able to intercept data coming from the gateway to source through mitmproxy right? I tried it but it does not see any flows even though the data is flowing properly, so if I check with tcpdump and wireshark and I can see flows going from gateway to source, but mitmproxy can't see anything, is this an issue with mitmproxy or am I doing something wrong?", "issue_status": "Closed", "issue_reporting_time": "2017-10-24T18:09:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "539": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2600", "issue_id": "#2600", "issue_summary": "High Sierra Keychain hangs with mitmproxy cert", "issue_description": "fiery- commented on 22 Oct 2017 \u2022\nedited\nWhen opening Keychain app on High Sierra (with Supplemental Update), Keychain hangs (with rainbow mouse cursor) and Console fills up with more than 20000 messages like this one:\nCSSM Exception: -2147413750 CSSMERR_DL_INVALID_FIELD_NAME\nWhen I remove mitmproxy-2.0.2 certs, there is no problem opening the Keychain app. The process of removing both certs hangs Keychain for about 1-2 minutes as well. On El Capitan there was no such problem.", "issue_status": "Closed", "issue_reporting_time": "2017-10-22T14:38:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "540": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2598", "issue_id": "#2598", "issue_summary": "Sample wsgi_flask_app.py is wrong", "issue_description": "yeradis commented on 22 Oct 2017 \u2022\nedited\nSteps to reproduce the problem:\nmitmdump -s wsgi_flask_app.py\n2.\nGo to example.com and should appear Hello World!\n3.\nInstead, the original site is shown\nAny other comments? What have you tried so far?\nThe sample shows this:\ndef load(l):\n    return wsgiapp.WSGIApp(app, \"proxapp.local\", 80)\nbut should be:\ndef start():\n    return wsgiapp.WSGIApp(app, \"example.com\", 80)\nPlacing it inside the start() event, returns the expected result\nalso i\u00b4m unable to make the 443 sample to work", "issue_status": "Closed", "issue_reporting_time": "2017-10-22T09:06:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "541": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2595", "issue_id": "#2595", "issue_summary": "Raw tcp connection", "issue_description": "skotti commented on 20 Oct 2017\nHello,\nI am a little bit confused with catching tcp traffic with mitmproxy.\nI do like this:\nmitmdump(mitmproxy) --raw-tcp -p 5656\non my VM I do: netcat 192.168.50.10 5656\nmy machines are connected through bridge, so I can ping all VM's from host and in opposite direction as well.\nso, I want to simply record this tcp traffic , but every time I type something I get an error ( this does not happen if I type on host instead mitmdump --raw-tcp -p 5656 (or mitmproxy):\n192.168.20.1:45020: clientconnect\n192.168.20.1:45020: ProtocolException(\"Error in HTTP connection: HttpSyntaxException('Bad HTTP request line: 1',)\",)\n192.168.20.1:45020: clientdisconnect\nWhy I get a message about http? What I should do to parse , intercept and analyze raw tcp packets? And maybe some others , which have no relation to http at all and are unencrypted?", "issue_status": "Closed", "issue_reporting_time": "2017-10-20T06:31:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "542": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2594", "issue_id": "#2594", "issue_summary": "Transparent mode fail with looking up failure.", "issue_description": "Contributor\nGa-ryo commented on 20 Oct 2017\nSteps to reproduce the problem:\nLaunch Wifi Access Point(OS X)\nSetup pfctl configuration so that http packet will be forwarded.\nLaunch mitmproxy ( sudo mitmproxy -p 8080 -m transparent --showhost )\nAccess web page after connecting to AP which launched before.\nSee event log.\nAny other comments? What have you tried so far?\nWhen I tried to use transparent mode with OS X(10.11.6).\nRuntimeError(\"Could not resolve original destination.\") raised.\nI investigated this bug.\nAnd I found that this is caused by difference between AF_INET's and AF_INET6's peername.\nmitmproxy/mitmproxy/net/tcp.py\nLine 567 in de006ea\n self.socket = socket.socket(socket.AF_INET6, socket.SOCK_STREAM) \nIf we use AF_INET, getpeername() return string like \"192.168.2.5:45670\".\nBut if we use AF_INET6, getpeername() return string like \"::ffff:192.168.2.5:45670\".\npfctl -s state 's result is like below.\nALL tcp 192.168.2.5:45670 -> xx.xx.xx.xx:33291 -> xx.xx.xx.xx:443 ESTABLISHED:ESTABLISHED\nAs you see, ::ffff: doesn't exist.\nSo lookup function raises RuntimeError() because spec in i condition won't become true.\nSystem information\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.6.2\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2l 25 May 2017\nMac version: 10.11.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-10-20T05:30:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "543": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2590", "issue_id": "#2590", "issue_summary": "Included pyopenssl version not working - pkg_resources.DistributionNotFound: The 'pyOpenSSL<17.4,>=17.3' distribution was not found and is required by mitmproxy", "issue_description": "victorhooi commented on 17 Oct 2017\nSteps to reproduce the problem:\nInstall mitmproxy (HEAD - dd9f1b2) using homebrew on OSX\nRun \"mitmweb\"\nAny other comments? What have you tried so far?\nI just tried install mitmproxy using:\nbrew install --HEAD mitmproxy\nHowever, when I try to run it, it's complaining about the pyopenssl version - however, my understanding is that this is included with mitmproxy:\nvictorhooi@victorhooi-macbookpro ~> mitmproxy --version\nTraceback (most recent call last):\n  File \"/Users/victorhooi/homebrew/Cellar/mitmproxy/HEAD-dd9f1b2_1/libexec/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 664, in _build_master\n    ws.require(__requires__)\n  File \"/Users/victorhooi/homebrew/Cellar/mitmproxy/HEAD-dd9f1b2_1/libexec/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 981, in require\n    needed = self.resolve(parse_requirements(requirements))\n  File \"/Users/victorhooi/homebrew/Cellar/mitmproxy/HEAD-dd9f1b2_1/libexec/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 872, in resolve\n    raise VersionConflict(dist, req).with_context(dependent_req)\npkg_resources.ContextualVersionConflict: (pyOpenSSL 16.2.0 (/Users/victorhooi/homebrew/Cellar/mitmproxy/HEAD-dd9f1b2_1/libexec/lib/python3.6/site-packages), Requirement.parse('pyOpenSSL<17.4,>=17.3'), {'mitmproxy'})\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/victorhooi/homebrew/bin/mitmproxy\", line 6, in <module>\n    from pkg_resources import load_entry_point\n  File \"/Users/victorhooi/homebrew/Cellar/mitmproxy/HEAD-dd9f1b2_1/libexec/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 3142, in <module>\n    @_call_aside\n  File \"/Users/victorhooi/homebrew/Cellar/mitmproxy/HEAD-dd9f1b2_1/libexec/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 3126, in _call_aside\n    f(*args, **kwargs)\n  File \"/Users/victorhooi/homebrew/Cellar/mitmproxy/HEAD-dd9f1b2_1/libexec/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 3155, in _initialize_master_working_set\n    working_set = WorkingSet._build_master()\n  File \"/Users/victorhooi/homebrew/Cellar/mitmproxy/HEAD-dd9f1b2_1/libexec/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 666, in _build_master\n    return cls._build_from_requirements(__requires__)\n  File \"/Users/victorhooi/homebrew/Cellar/mitmproxy/HEAD-dd9f1b2_1/libexec/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 679, in _build_from_requirements\n    dists = ws.resolve(reqs, Environment())\n  File \"/Users/victorhooi/homebrew/Cellar/mitmproxy/HEAD-dd9f1b2_1/libexec/lib/python3.6/site-packages/pkg_resources/__init__.py\", line 867, in resolve\n    raise DistributionNotFound(req, requirers)\npkg_resources.DistributionNotFound: The 'pyOpenSSL<17.4,>=17.3' distribution was not found and is required by mitmproxy\nSystem information\nI'm on HEAD - version dd9f1b2 (dd9f1b2)\nThis is on OSX 10.12.6, with Python 3.6.3.", "issue_status": "Closed", "issue_reporting_time": "2017-10-16T20:37:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "544": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2588", "issue_id": "#2588", "issue_summary": "Anyone who can merge source code tls_passthrough.py to stickycookies?", "issue_description": "ghost commented on 15 Oct 2017\nI want use tls_passthrough.py in stickycookies file. But I don't know how to make it\nAnyone who can help me ?\nSource code:\nFile: tls_passthrough.py\nfrom __future__ import (absolute_import, print_function, division)\nimport collections\nimport random\n\nfrom enum import Enum\nfrom libmproxy.exceptions import TlsProtocolException\nfrom libmproxy.protocol import TlsLayer, RawTCPLayer\nclass InterceptionResult(Enum):\n    success = True\n    failure = False\n    skipped = None\nclass _TlsStrategy(object):\n    \"\"\"\n    Abstract base class for interception strategies.\n    \"\"\"\n    def __init__(self):\n        # A server_address -> interception results mapping\n        self.history = collections.defaultdict(lambda: collections.deque(maxlen=200))\n\n    def should_intercept(self, server_address):\n        \"\"\"\n        Returns:\n            True, if we should attempt to intercept the connection.\n            False, if we want to employ pass-through instead.\n        \"\"\"\n        raise NotImplementedError()\n\n    def record_success(self, server_address):\n        self.history[server_address].append(InterceptionResult.success)\n\n    def record_failure(self, server_address):\n        self.history[server_address].append(InterceptionResult.failure)\n\n    def record_skipped(self, server_address):\n        self.history[server_address].append(InterceptionResult.skipped)\nclass ConservativeStrategy(_TlsStrategy):\n    \"\"\"\n    Conservative Interception Strategy - only intercept if there haven't been any failed attempts\n    in the history.\n    \"\"\"\n    def should_intercept(self, server_address):\n        if InterceptionResult.failure in self.history[server_address]:\n            return False\n        return True\nclass ProbabilisticStrategy(_TlsStrategy):\n    \"\"\"\n    Fixed probability that we intercept a given connection.\n    \"\"\"\n    def __init__(self, p):\n        self.p = p\n        super(ProbabilisticStrategy, self).__init__()\n\n    def should_intercept(self, server_address):\n        return random.uniform(0, 1) < self.p\nclass TlsFeedback(TlsLayer):\n    \"\"\"\n    Monkey-patch _establish_tls_with_client to get feedback if TLS could be established\n    successfully on the client connection (which may fail due to cert pinning).\n    \"\"\"\n\n    def _establish_tls_with_client(self):\n        server_address = self.server_conn.address\n        tls_strategy = self.script_context.tls_strategy\n\n        try:\n            super(TlsFeedback, self)._establish_tls_with_client()\n        except TlsProtocolException as e:\n            tls_strategy.record_failure(server_address)\n            raise e\n        else:\n            tls_strategy.record_success(server_address)\ndef start(context, argv):\n    if len(argv) == 2:\n        context.tls_strategy = ProbabilisticStrategy(float(argv[1]))\n    else:\n        context.tls_strategy = ConservativeStrategy()\ndef next_layer(context, next_layer):\n    \"\"\"\n    This hook does the actual magic - if the next layer is planned to be a TLS layer,\n    we check if we want to enter pass-through mode instead.\n    \"\"\"\n    if isinstance(next_layer, TlsLayer) and next_layer._client_tls:\n        server_address = next_layer.server_conn.address\n\n        if context.tls_strategy.should_intercept(server_address):\n            # We try to intercept.\n            # Monkey-Patch the layer to get feedback from the TLSLayer if interception worked.\n            next_layer.__class__ = TlsFeedback\n            next_layer.script_context = context\n        else:\n            # We don't intercept - reply with a pass-through layer and add a \"skipped\" entry.\n            context.log(\"TLS passthrough for %s\" % repr(next_layer.server_conn.address), \"info\")\n            next_layer_replacement = RawTCPLayer(next_layer.ctx, logging=False)\n            next_layer.reply(next_layer_replacement)\n            context.tls_strategy.record_skipped(server_address)\nFile stickycookies:\nimport os\nfrom libmproxy import controller, proxy\nfrom libmproxy.proxy.server import ProxyServer\nclass StickyMaster(controller.Master):\n    def __init__(self, server):\n        controller.Master.__init__(self, server)\n        self.stickyhosts = {}\n\n    def run(self):\n        try:\n            return controller.Master.run(self)\n        except KeyboardInterrupt:\n            self.shutdown()\n\n    def handle_request(self, flow):\n        hid = (flow.request.host, flow.request.port)\n        if \"cookie\" in flow.request.headers:\n            self.stickyhosts[hid] = flow.request.headers.get_all(\"cookie\")\n        elif hid in self.stickyhosts:\n            flow.request.headers.set_all(\"cookie\", self.stickyhosts[hid])\n        flow.reply()\n\n    def handle_response(self, flow):\n        hid = (flow.request.host, flow.request.port)\n        if \"set-cookie\" in flow.response.headers:\n            self.stickyhosts[hid] = flow.response.headers.get_all(\"set-cookie\")\n        flow.reply()\nconfig = proxy.ProxyConfig(port=8080)\nserver = ProxyServer(config)\nm = StickyMaster(server)\nm.run()", "issue_status": "Closed", "issue_reporting_time": "2017-10-15T07:42:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "545": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2584", "issue_id": "#2584", "issue_summary": "mitmproxy 2.0.1 is failing for HTTPS requests", "issue_description": "krishnask7 commented on 10 Oct 2017 \u2022\nedited\nProblem:\nAll HTTPS requests are failing. But HTTP request responses are clearly failing\nSteps to reproduce the problem:\nCommand used:\nmitmdump -v -p 9001 -s \"D:\\Python\\Python35\\Scripts\\har_dump.py\" --cert \"C:\\Users\\Krishna.mitmproxy\\mitmproxy-ca-cert.pem\" -w \"mani.dump\"\nSet up manual proxy port on the android mobile device to 9001\nPython Version:: Python 3.5.0\nmitmproxy version: 2.0.1\nSame Request failing to receive response!\n192.168.0.37:48364: request\n-> Request(GET connectivitycheck.gstatic.com:80/generate_204)\n192.168.0.37:48364: response\n-> Response(204 No Content, no content)\n192.168.0.37:48364: GET http://connectivitycheck.gstatic.com/generate_204\n<< 204 No Content 0b\n192.168.0.37:48382: clientconnect\n192.168.0.37:48382: Set new server address: ('connectivitycheck.gstatic.com', 443)\n192.168.0.37:48382: serverconnect\n-> connectivitycheck.gstatic.com:443\n192.168.0.37:48382: Establish TLS with server\n192.168.0.37:48381: request\n-> Request(POST /auth)\n192.168.0.37:48382: ALPN selected by server: http/1.1\n192.168.0.37:48382: Establish TLS with client\n192.168.0.37:48382: ALPN for client: b'http/1.1'\n192.168.0.37:48382: Failed to send error response to client: ClientHandshakeException('Cannot establish TLS with client (sni: connectivitycheck.gstatic.com): TlsException(\"SSL hand\nshake error: SysCallError(-1, 'Unexpected EOF')\",)',)\n192.168.0.37:48382: CONNECT connectivitycheck.gstatic.com:443\n<< Cannot establish TLS with client (sni: connectivitycheck.gstatic.com): TlsException(\"SSL handshake error: SysCallError(-1, 'Unexpected EOF')\",)\n192.168.0.37:48382: serverdisconnect\n-> connectivitycheck.gstatic.com:443\n192.168.0.37:48382: clientdisconnect\n192.168.0.37:48381: response\n-> Response(400 Bad Request, text/plain; charset=utf-8, 59b)\n192.168.0.37:48381: POST https://android.clients.google.com/auth\n<< 400 Bad Request 59b\n192.168.0.37:48381: request\n-> Request(POST /auth)\n192.168.0.37:48381: response\n-> Response(400 Bad Request, text/plain; charset=utf-8, 59b)\n192.168.0.37:48381: POST https://android.clients.google.com/auth\n<< 400 Bad Request 59b\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2017-10-10T09:49:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "546": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2582", "issue_id": "#2582", "issue_summary": "Error in HTTP connection: ClientHandshakeException - \"Unexpected EOF\"", "issue_description": "nesttle commented on 9 Oct 2017 \u2022\nedited\nSteps to reproduce the problem:\nmitmproxy -p 1337\nRandomly crashes", "issue_status": "Closed", "issue_reporting_time": "2017-10-09T13:27:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "547": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2580", "issue_id": "#2580", "issue_summary": "400 Bad request after HTTP CONNECT", "issue_description": "seannexmo commented on 28 Sep 2017\nSteps to reproduce the problem:\nStart mitmproxy in normal mode using official docker container. Loaded one script, insecure mode, docker host networking, port 5050\nConfigure software under test to connect to proxy located at localhost 5050\nTrigger a request to fetch an XML file from github\nConnection fails with the following error:\n            <head>\n                <title>400 Bad Request</title>\n            </head>\n            <body>\n            <h1>400 Bad Request</h1>\n            <p>HttpSyntaxException(&quot;Bad HTTP request line: b&#x27;\\\\x80A\\\\x01\\\\x03\\\\x01\\\\x00\\\\x18\\\\x00\\\\x00\\\\x00 \\\\x00\\\\x00\\\\x13\\\\x00\\\\x00\\\\x16\\\\x00\\\\x00&#x27;&quot;,)</p>\n            </body>\n        </html>\nTracing reveals the following:\nT 2017/09/27 16:38:35.225917 127.0.0.1:59624 -> 127.0.0.1:5050 [AP]\nCONNECT gist.githubusercontent.com:443 HTTP/1.1.\nUser-Agent: OaklandSoftware/2.7.0.\nHost: gist.githubusercontent.com.\n.\n\n\nT 2017/09/27 16:38:35.267952 127.0.0.1:5050 -> 127.0.0.1:59624 [AP]\nHTTP/1.1 200 Connection established.\n.\n\n\nT 2017/09/27 16:38:35.271064 127.0.0.1:59624 -> 127.0.0.1:5050 [AP]\n.A........ ........\n........2..3../Y.....AY(s.WGN..t}G..O.6w$.\\..v.\n\nT 2017/09/27 16:38:35.288685 127.0.0.1:5050 -> 127.0.0.1:59624 [AP]\nHTTP/1.1 400 Bad Request.\nConnection: close.\nServer: mitmproxy 2.0.2.\nContent-Type: text/html.\nContent-Length: 361.\n.\n\n\nT 2017/09/27 16:38:35.288846 127.0.0.1:59624 -> 127.0.0.1:5050 [AP]\n......\n\n\nT 2017/09/27 16:38:35.288855 127.0.0.1:5050 -> 127.0.0.1:59624 [AP]\n<html>\n            <head>\n                <title>400 Bad Request</title>\n            </head>\n            <body>\n            <h1>400 Bad Request</h1>\n            <p>HttpSyntaxException(&quot;Bad HTTP request line: b&#x27;\\\\x80A\\\\x01\\\\x03\\\\x01\\\\x00\\\\x18\\\\x00\\\\x00\\\\x00 \\\\x00\\\\x00\\\\x13\\\\x00\\\\x00\\\\x16\\\\x00\\\\x00&#x27;&quot;,)</p>\n            </body>\n        </html>\nAny other comments? What have you tried so far?\nWe have tried running mitmproxy on docker in transparent mode, using instructions here:\nhttp://docs.mitmproxy.org/en/stable/transparent.html\nWe ensured iptables and route tables were updated to route port 80/443 traffic to 5050 via network layer. We disabled proxy settings on the software and attempted to repeat the exercise. When the proxy was restarted, the event log was full of the following messages during connection attempts:\nTransparent mode failure: FileNotFoundError(2, 'No such file or directory')\nSystem information\nPython version: 3.5.2\nPlatform: Linux-2.6.32-696.el6.x86_64-x86_64-with\nSSL version: OpenSSL 1.0.2k  26 Jan 2017", "issue_status": "Closed", "issue_reporting_time": "2017-09-28T16:16:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "548": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2579", "issue_id": "#2579", "issue_summary": "Docker image doesn't work", "issue_description": "sikmir commented on 27 Sep 2017\nSteps to reproduce the problem\n$ docker pull docker pull mitmproxy/mitmproxy:2.0.2\n$ cat << 'EOF' > docker-compose.yml\nversion: '3'\nservices:\n  mitmproxy:\n    image: mitmproxy/mitmproxy:2.0.2\n    container_name: mitmproxy\n    ports:\n      - 8080:8080\n    volumes:\n      - ~/.mitmproxy:/home/mitmproxy/.mitmproxy\nEOF\n$ docker-compose up -d mitmproxy\n$ docker-compose logs mitmproxy\nAttaching to mitmproxy\nmitmproxy    | Traceback (most recent call last):\nmitmproxy    |   File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\nmitmproxy    |     self.loop.run()\nmitmproxy    |   File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\nmitmproxy    |     self._run()\nmitmproxy    |   File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\nmitmproxy    |     self.event_loop.run()\nmitmproxy    |   File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\nmitmproxy    |     self._loop()\nmitmproxy    |   File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\nmitmproxy    |     self._watch_files[fd]()\nmitmproxy    |   File \"/usr/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\nmitmproxy    |     event_loop, callback, self.get_available_raw_input())\nmitmproxy    |   File \"/usr/lib/python3.5/site-packages/urwid/raw_display.py\", line 427, in get_available_raw_input\nmitmproxy    |     codes = self._get_gpm_codes() + self._get_keyboard_codes()\nmitmproxy    |   File \"/usr/lib/python3.5/site-packages/urwid/raw_display.py\", line 501, in _get_keyboard_codes\nmitmproxy    |     code = self._getch_nodelay()\nmitmproxy    |   File \"/usr/lib/python3.5/site-packages/urwid/raw_display.py\", line 635, in _getch_nodelay\nmitmproxy    |     return self._getch(0)\nmitmproxy    |   File \"/usr/lib/python3.5/site-packages/urwid/raw_display.py\", line 545, in _getch\nmitmproxy    |     return ord(os.read(self._term_input_file.fileno(), 1))\nmitmproxy    | TypeError: ord() expected a character, but string of length 0 found\nmitmproxy    |\nmitmproxy    | mitmproxy has crashed!\nmitmproxy    | Please lodge a bug report at:\nmitmproxy    |  https://github.com/mitmproxy/mitmproxy\nmitmproxy    | Shutting down...\nThe same problem with latest tag.", "issue_status": "Closed", "issue_reporting_time": "2017-09-27T16:49:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "549": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2578", "issue_id": "#2578", "issue_summary": "UnicodeEncodeError", "issue_description": "michaeladm commented on 22 Sep 2017 \u2022\nedited by mhils\nSteps to reproduce the problem:\nIn the cmd run mitmweb --replace-from-file :~s:\"</head\":2.txt\nIn Chrome http://some.site\nIts sems to work, but ...\nAny other comments? What have you tried so far?\n#-----------------------\n#File \"2.txt\"\n#<script type=\"text/javascript\">\n#</script>\n#</head\n#-----------------------\nC:\\>mitmweb --replace-from-file :~s:\"</head\":2.txt\nProxy server listening at http://0.0.0.0:8080/\nWeb   server listening at http://127.0.0.1:8081/\n127.0.0.1:61709: clientconnect\n127.0.0.1:61709: HTTP protocol error in client request: Bad HTTP request line: b'\\x05\\x01\\x00'\n127.0.0.1:61709: clientdisconnect\n127.0.0.1:61721: clientconnect\n127.0.0.1:61722: clientconnect\n127.0.0.1:61722: HTTP protocol error in client request: Bad HTTP request line: b'\\x05\\x01\\x00'\n127.0.0.1:61722: clientdisconnect\n127.0.0.1:62288: clientconnect\nERROR:tornado.application:Exception in callback <function WebMaster.run.<locals>.<lambda> at 0x04E81108>\nTraceback (most recent call last):\n  File \"site-packages\\tornado\\ioloop.py\", line 1041, in _run\n  File \"mitmproxy\\tools\\web\\master.py\", line 109, in <lambda>\n  File \"mitmproxy\\master.py\", line 109, in tick\n  File \"mitmproxy\\controller.py\", line 70, in wrapper\n  File \"mitmproxy\\addonmanager.py\", line 90, in __call__\n  File \"mitmproxy\\addonmanager.py\", line 85, in invoke\n  File \"mitmproxy\\addons\\replace.py\", line 93, in response\n  File \"mitmproxy\\addons\\replace.py\", line 83, in execute\n  File \"mitmproxy\\addons\\replace.py\", line 112, in replace\n  File \"mitmproxy\\net\\http\\message.py\", line 261, in replace\n  File \"mitmproxy\\net\\http\\message.py\", line 100, in get_content\nValueError: Invalid Content-Encoding: utf-8\n127.0.0.1:62293: clientconnect\n#-----------------------\n# script https://wiki.lkqd.com/pages/viewpage.action?pageId=852444\n#File \"1.txt\"\n#<script type=\"text/javascript\">\n#.... a lot of code with ....src=https://www.xxxxx.com/dfdf ...\n#</script>\n#</head\n#-----------------------\nC:\\>mitmweb --replace-from-file :~s:\"</head\":1.txt\nProxy server listening at http://0.0.0.0:8080/\nWeb   server listening at http://127.0.0.1:8081/\n127.0.0.1:61251: clientdisconnect\nERROR:tornado.application:Exception in callback <function WebMaster.run.<locals>.<lambda> at 0x04E81108>\nTraceback (most recent call last):\n  File \"site-packages\\tornado\\ioloop.py\", line 1041, in _run\n  File \"mitmproxy\\tools\\web\\master.py\", line 109, in <lambda>\n  File \"mitmproxy\\master.py\", line 109, in tick\n  File \"mitmproxy\\controller.py\", line 70, in wrapper\n  File \"mitmproxy\\addonmanager.py\", line 90, in __call__\n  File \"mitmproxy\\addonmanager.py\", line 85, in invoke\n  File \"mitmproxy\\addons\\termlog.py\", line 27, in log\n  File \"site-packages\\click\\termui.py\", line 420, in secho\n  File \"site-packages\\click\\utils.py\", line 259, in echo\n  File \"site-packages\\click\\_compat.py\", line 577, in _safe_write\n  File \"site-packages\\colorama\\ansitowin32.py\", line 40, in write\n  File \"site-packages\\colorama\\ansitowin32.py\", line 141, in write\n  File \"site-packages\\colorama\\ansitowin32.py\", line 166, in write_and_convert\n  File \"site-packages\\colorama\\ansitowin32.py\", line 174, in write_plain_text\n  File \"c:\\projects\\mitmproxy\\.tox\\rtool\\lib\\encodings\\cp437.py\", line 19, in encode\nUnicodeEncodeError: 'charmap' codec can't encode characters in position 75-83: character maps to <undefined>\n127.0.0.1:61319: clientdisconnect\nSystem information\nMitmproxy version: 2.0.2 (release version) Precompiled Binary\nPython version: 3.5.3\nPlatform: Windows-10-10.0.14393\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nWindows version: 10 10.0.14393 Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2017-09-22T15:41:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "550": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2577", "issue_id": "#2577", "issue_summary": "SSL sertificate not working with iOS 11", "issue_description": "FeBe95 commented on 21 Sep 2017\nSteps to reproduce the problem:\nrun mitmproxy and setup wifi proxy on iOS 11\nopen mitm.it and install \"Apple\" SSL certificate\nprofile installation works fine\nopen any https website\nSee the attached screenshots for details. They are in german, but you get the idea.\nError text is the same as for https://expired.badssl.com/ without the proxy.\n-> screenshot in english\nThe certificate doesn't seem to be expired though.\nAny other comments? What have you tried so far?\ninstalled and removed the certificate/profile multiple times\ninstalled the newest mitmproxy Windows version (2.0.2)\nSystem information\nWindows 10 64-bit\niPhone 6S iOS 11\nPS C:\\Program Files (x86)\\mitmproxy\\bin> .\\mitmweb.exe --version\nMitmproxy version: 2.0.2 (release version) Precompiled Binary\nPython version: 3.5.3\nPlatform: Windows-10-10.0.15063\nSSL version: OpenSSL 1.0.2j  26 Sep 2016\nWindows version: 10 10.0.15063  Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2017-09-21T18:29:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "551": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2576", "issue_id": "#2576", "issue_summary": "Performance degrade and errors", "issue_description": "Mradr commented on 15 Sep 2017 \u2022\nedited\nSteps to reproduce the problem:\n--set stream_websockets=true\nGot to google.com\nSearch Speed Test\nUse the google loaded Speed Test\nThe speed keeps dropping on each repeat until I see the following error:\nError in WebSocket connection to ndt-iupui-mlab1-ord03.measurement-lab.org:53829: WebSocket connection closed unexpectedly by client: TcpDisconnect(\"(104, 'ECONNRESET')\",)\nException in thread ServerThread (0.0.0.0:8080):\nTraceback (most recent call last):\nFile \"/usr/lib/python3.5/threading.py\", line 914, in _bootstrap_inner\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/master.py\", line 32, in run\nFile \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 951, in serve_forever\nconnection, client_address = self.socket.accept()\nFile \"/usr/lib/python3.5/socket.py\", line 195, in accept\nOSError: [Errno 24] Too many open files\nDid a bit more research : miguelgrinberg/python-socketio#108\nSeems like it's a problem with socket.py. Something about it being lazy:)\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-93-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-09-15T13:40:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "552": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2575", "issue_id": "#2575", "issue_summary": "Random Errors", "issue_description": "Mradr commented on 15 Sep 2017 \u2022\nedited by mhils\nSteps to reproduce the problem:\nError in processing of request from 43.243.130.81:44299\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 932, in connection_thread\n    self.handle_client_connection(connection, client_address)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py\", line 63, in handle_client_connection\n    self.channel\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py\", line 76, in __init__\n    None)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/connections.py\", line 33, in __init__\n    super().__init__(client_connection, address, server)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 795, in __init__\n    super().__init__(connection)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 455, in __init__\n    self.ip_address = Address(connection.getpeername())\nOSError: [Errno 107] Transport endpoint is not connected\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 211, in read\n    data = self.o.read(rlen)\n  File \"/usr/lib/python3.5/socket.py\", line 575, in readinto\n    return self._sock.recv_into(b)\nConnectionResetError: [Errno 104] Connection reset by peer\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py\", line 239, in _process_flow\n    request = self.read_request_headers(f)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 14, in read_request_headers\n    http1.read_request_head(self.client_conn.rfile)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/http1/read.py\", line 53, in read_request_head\n    headers = _read_headers(rfile)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/http1/read.py\", line 324, in _read_headers\n    line = rfile.readline()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 251, in readline\n    ch = self.read(1)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 229, in read\n    raise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: [Errno 104] Connection reset by peer\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n180.126.23.185:52715: Traceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 211, in read\n    data = self.o.read(rlen)\n  File \"/usr/lib/python3.5/socket.py\", line 575, in readinto\n    return self._sock.recv_into(b)\nConnectionResetError: [Errno 104] Connection reset by peer\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py\", line 239, in _process_flow\n    request = self.read_request_headers(f)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http1.py\", line 14, in read_request_headers\n    http1.read_request_head(self.client_conn.rfile)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/http1/read.py\", line 53, in read_request_head\n    headers = _read_headers(rfile)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/http1/read.py\", line 324, in _read_headers\n    line = rfile.readline()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 251, in readline\n    ch = self.read(1)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 229, in read\n    raise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: [Errno 104] Connection reset by peer\nAs far as what or why - I really don't know. I have my proxy open right now allowing basically random bots to find bugs and other issues with my script but I keep seeing errors like these popping up a lot.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-93-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-09-15T13:33:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "553": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2574", "issue_id": "#2574", "issue_summary": "MITMdump crashes with ValueError(\"unserializable object exception while loading page via https", "issue_description": "du-premraj commented on 15 Sep 2017\nSteps to reproduce the problem:\nRan the mitmdump in reverse proxy mode to intercept https messages and print the host, path and port in the request using an intercepting script\nTried to access the web server from chrome browser.\n3.While the web page was loading, encountered following exception. Please note that if i don't invoke the mitmdump with script, then the below exception did not occur.\nIgnoring server verification error, continuing with connection\nrequest path, host and ports are : b'/rest/messaging/cometd/ws' b' 488\nTraceback (most recent call last):\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/master.py\", line 84, in run\nself.tick(0.1)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/master.py\", line 109, in tick\nhandle_func(obj)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/controller.py\", line 70, in wrapper\nmaster.addons(f.name, message)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/addonmanager.py\", line 90, in call\nself.invoke(i, name, *args, **kwargs)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/addonmanager.py\", line 85, in invoke\nfunc(*args, **kwargs)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/addons/streamfile.py\", line 55, in response\nself.stream.add(flow)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/io.py\", line 63, in add\ntnetstring.dump(d, self.fo)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/contrib/tnetstring.py\", line 66, in dump\nfile_handle.write(dumps(value))\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/contrib/tnetstring.py\", line 57, in dumps\n_rdumpq(q, 0, value)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/contrib/tnetstring.py\", line 142, in _rdumpq\nsize = _rdumpq(q, size, v)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/contrib/tnetstring.py\", line 142, in _rdumpq\nsize = _rdumpq(q, size, v)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/contrib/tnetstring.py\", line 149, in _rdumpq\nraise ValueError(\"unserializable object: {} ({})\".format(value, type(value)))\nValueError: unserializable object: <WebSocketFlow (0 messages)> (<class 'mitmproxy.websocket.WebSocketFlow'>)\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/usr/bin/mitmdump\", line 11, in\nsys.exit(mitmdump())\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/tools/main.py\", line 126, in mitmdump\nmaster.run()\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/tools/dump.py\", line 69, in run\nsuper().run()\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/master.py\", line 86, in run\nself.shutdown()\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/master.py\", line 119, in shutdown\nself.addons.done()\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/addonmanager.py\", line 66, in done\nself.invoke_with_context(i, \"done\")\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/addonmanager.py\", line 76, in invoke_with_context\nself.invoke(addon, name, *args, **kwargs)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/addonmanager.py\", line 85, in invoke\nfunc(*args, **kwargs)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/addons/streamfile.py\", line 65, in done\nself.stream.add(flow)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/io.py\", line 63, in add\ntnetstring.dump(d, self.fo)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/contrib/tnetstring.py\", line 66, in dump\nfile_handle.write(dumps(value))\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/contrib/tnetstring.py\", line 57, in dumps\n_rdumpq(q, 0, value)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/contrib/tnetstring.py\", line 142, in _rdumpq\nsize = _rdumpq(q, size, v)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/contrib/tnetstring.py\", line 142, in _rdumpq\nsize = _rdumpq(q, size, v)\nFile \"/usr/lib/python3.5/site-packages/mitmproxy/contrib/tnetstring.py\", line 149, in _rdumpq\nraise ValueError(\"unserializable object: {} ({})\".format(value, type(value)))\nValueError: unserializable object: <WebSocketFlow (0 messages)> (<class 'mitmproxy.websocket.WebSocketFlow'>)\nAny other comments? What have you tried so far?\nSystem information\nmitmdump --version\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.1\nPlatform: Linux-2.6.32-573.3.1.el6.x86_64-x86_64-with-centos-6.7-Final\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: MgmtOS 6.7 Final\n[root@ci-005056ad472b rpm]#", "issue_status": "Closed", "issue_reporting_time": "2017-09-15T09:02:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "554": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2572", "issue_id": "#2572", "issue_summary": "MIT incompatible with GPL3", "issue_description": "yhack commented on 15 Sep 2017\nI was pleased to see mitmproxy is licensed under MIT. At least one dependency, html2text, is licensed under GPL3. This is a problem as per https://opensource.stackexchange.com/questions/1640/if-im-using-a-gpl-3-library-in-my-project-can-i-license-my-project-under-mit-l. Can we resolve this incompatible licensing issue? html2text is barely used. I think it could be removed.", "issue_status": "Closed", "issue_reporting_time": "2017-09-14T22:05:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "555": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2569", "issue_id": "#2569", "issue_summary": "How can I autosave every 1 minutes and clear the memory like the function autosave of Charles?", "issue_description": "Getyourneed commented on 13 Sep 2017\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2017-09-13T09:12:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "556": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2568", "issue_id": "#2568", "issue_summary": "How to direct traffic after through mitproxy to other proxy server ?", "issue_description": "ghost commented on 13 Sep 2017 \u2022\nedited by ghost\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2017-09-13T04:35:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "557": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2567", "issue_id": "#2567", "issue_summary": "Receiving wrong request from mitmproxy in 'def request(flow):'", "issue_description": "gkumarpatel commented on 13 Sep 2017 \u2022\nedited\nI am using mitmdump with python script to intercept https request and manipulate flow.request.host, flow.request.scheme, flow.request.port and flow.request.path with in def request(flow):. I have been able to achieve the same and get a response for the manipulated request. After first getting response for first request, my application send a second request. In the second request, instead of the host and port set by my application, I get the same previously manipulated host and port, that is flow.request.host and flow.request.port are from my last manipulated request but flow.request.scheme and flow.request.path are same as my application sets in second request.\nI am getting wrong request in def request(flow): for the second request.\nis there any keep-alive or caching thing that is manipulating my second request?\nfrom mitmproxy import http\nimport sys\n    \ndef request(flow):\n     print(\"\\nOriginal Request : \" + str(flow.request)+\"\\n\")\n     if flow.request.pretty_host.endswith(\"original.host.com\"):\n      flow.request.host = \"mock.host.com\"\n      flow.request.scheme = \"http\"\n      flow.request.port = 8081\n      flow.request.path = re.sub(r\"billing\",r\"moquer-0.0.2/mockbillingBinding\",flow.request.path)\n      print(\"Manipulated Request : \" + str(flow.request)+\"\\n\")\n    def response(flow):\n     print(\"Response : \" +str(flow.response)+\"\\n\")\nEdited : After debugging the python script, found that MITMProxy is not able to disconnect from client before the second request arrives. I think I might have to some how disconnect from client. is there any api for disconnecting MITMProxy from client and also from the sever? Thoughts please.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.2\nPlatform: Darwin-16.7.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f 25 May 2017\nMac version: 10.12.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-09-13T04:08:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "558": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2566", "issue_id": "#2566", "issue_summary": "Change upstream HTTPs proxy: HTTP2 layer should already have a connection", "issue_description": "zero-master commented on 10 Sep 2017\nSteps to reproduce the problem:\nWith 2 HTTPs proxies setup with https://tinyproxy.github.io/\nUse the code from here: https://github.com/mitmproxy/mitmproxy/blob/master/examples/complex/change_upstream_proxy.py\nUse mitmdump -U http://default-upstream-proxy.local:8080/ -s change_upstream_proxy.py`\nIt works fine on https://whatismyipaddress.com/ but it errors out on https://whoer.net/ and https://www.bing.com/\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.3\nPlatform: Linux-4.10.0-28-generic-x86_64-with-Ubuntu-17.04-zesty\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 17.04 zesty\nstdout:\n127.0.0.1:57574: ValueError('file descriptor cannot be a negative integer (-1)',)\n127.0.0.1:57574: clientdisconnect\n127.0.0.1:57548: HTTP/2 connection terminated by server: error code: 0, last stream id: 1, additional data: None\n127.0.0.1:57548: clientdisconnect\n127.0.0.1:57486: clientdisconnect\n127.0.0.1:57562: clientdisconnect\n127.0.0.1:57558: clientdisconnect\n127.0.0.1:57552: clientdisconnect\n127.0.0.1:57556: clientdisconnect\n127.0.0.1:57526: HTTP/2 connection terminated by client: error code: 0, last stream id: 0, additional data: None\n127.0.0.1:57560: clientdisconnect\n127.0.0.1:57526: clientdisconnect\n127.0.0.1:57554: clientdisconnect\n127.0.0.1:57532: HTTP/2 connection terminated by client: error code: 0, last stream id: 0, additional data: None\n127.0.0.1:57532: clientdisconnect\n127.0.0.1:57534: HTTP/2 connection terminated by client: error code: 0, last stream id: 0, additional data: None\n127.0.0.1:57534: clientdisconnect\n127.0.0.1:57488: HTTP/2 connection terminated by client: error code: 0, last stream id: 0, additional data: None\n127.0.0.1:57488: clientdisconnect", "issue_status": "Closed", "issue_reporting_time": "2017-09-10T14:19:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "559": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2565", "issue_id": "#2565", "issue_summary": "TCP", "issue_description": "du-premraj commented on 7 Sep 2017\nQuery on TCP\nIs it possible to capture and dump the messages exchanged between Server (for e.g. postgres or RabbitMQ) and the corresponding client running in the same CentOS host ?\nDoes it require any iptables PREROUTING ?\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2017-09-07T15:19:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "560": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2563", "issue_id": "#2563", "issue_summary": "Custom certificate is ignored in reverse proxy mode", "issue_description": "chorner commented on 7 Sep 2017\nhttps://github.com/mitmproxy/mitmproxy/blob/master/docs/certinstall.rst#using-a-custom-certificate\nFollowing the documentation, mitmproxy fails to use the provided custom certificate.\nSteps to reproduce the problem:\nopenssl genrsa -out cert.key 2048\nopenssl req -new -x509 -key cert.key -out cert.crt\n... <specify CSR>\ncat cert.key cert.crt > cert.pem\nmitmproxy -e -v --cert ./cert.pem -p 8000 -R https://www.google.com:443\necho | openssl s_client -connect 127.0.0.1:8000\n...\nCertificate chain\n0 s:/CN=www.google.com\ni:/CN=mitmproxy/O=mitmproxy\n1 s:/CN=mitmproxy/O=mitmproxy\ni:/CN=mitmproxy/O=mitmproxy\n(the self-signed CSR just created should appear here, rather than the default mitmproxy cert)", "issue_status": "Closed", "issue_reporting_time": "2017-09-07T06:25:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "561": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2562", "issue_id": "#2562", "issue_summary": "Getting an error when mitmproxy start using php program", "issue_description": "anbarasu-cloudnix commented on 6 Sep 2017 \u2022\nedited\nI am trying to start mitmproxy using my php program\n// step - 1 start mitm proxy server with port $executeCmd = 'mitmdump -v -p '.$mitmproxyPortNo.' -s \"'.$harFileGenerator.' '.$deviceName.'.har\" --cert \"'.$mitmCaCert.'\" -w \"'.$deviceName.'.dump\"'; system ($executeCmd,$command);\nbut after stopping the server using ctrl+c\nFile \"d:\\python\\python35\\lib\\site-packages\\mitmproxy\\master.py\", line 84, in run\nself.tick(0.1)\nFile \"d:\\python\\python35\\lib\\site-packages\\mitmproxy\\master.py\", line 93, in tick\nmtype, obj = self.event_queue.get(timeout=timeout)\nFile \"d:\\python\\python35\\lib\\queue.py\", line 173, in get\nself.not_empty.wait(remaining)\nFile \"d:\\python\\python35\\lib\\threading.py\", line 297, in wait\ngotit = waiter.acquire(True, timeout)\neyboardInterrupturing handling of the above exception, another exception occurred:raceback (most recent call last):\nFile \"D:\\Python\\Python35\\Scripts\\har_dump.py\", line 173, in done\nmitmproxy.ctx.log(\"done\")\nFile \"d:\\python\\python35\\lib\\site-packages\\mitmproxy\\log.py\", line 40, in call\nself.master.add_log(text, level)\nFile \"d:\\python\\python35\\lib\\site-packages\\mitmproxy\\master.py\", line 71, in add_log\nself.addons(\"log\", log.LogEntry(e, level))\nFile \"d:\\python\\python35\\lib\\site-packages\\mitmproxy\\addonmanager.py\", line 90, in _call\nself.invoke(i, name, *args, **kwargs)\nFile \"d:\\python\\python35\\lib\\site-packages\\mitmproxy\\addonmanager.py\", line 85, in invoke\nfunc(*args, **kwargs)\nFile \"d:\\python\\python35\\lib\\site-packages\\mitmproxy\\addons\\termlog.py\", line 27, in log\nerr=(e.level == \"error\")\nFile \"d:\\python\\python35\\lib\\site-packages\\click\\termui.py\", line 420, in secho\nreturn echo(style(text, **styles), file=file, nl=nl, err=err, color=color)\nFile \"d:\\python\\python35\\lib\\site-packages\\click\\utils.py\", line 260, in echo\nfile.flush()\nSError: [Errno 22] Invalid argument\nxception ignored in: <_io.TextIOWrapper name='' mode='w' encoding='cp1252'>\nSError: [Errno 22] Invalid\nhow to resolve this error?", "issue_status": "Closed", "issue_reporting_time": "2017-09-06T11:11:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "562": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2559", "issue_id": "#2559", "issue_summary": "Upstream proxy and PhantomJS", "issue_description": "nesttle commented on 2 Sep 2017\nSteps to reproduce the problem:\nStart mitmproxy with -U parameter (Upstream proxy)\nConnect to this proxy with PhantomJS\nConnection stucks/hangs\nAny other comments? What have you tried so far?\nUpstream proxy is working fine with Mozilla Firefox (after installing mitm.pem), and Chrome (sometimes, other times SSL certificate fails).\nUpstream proxy isn't working with PhantomJS (with Selenium Python), with or without --ignore-ssl-errors (true|false). Don't know if this issue is related to mitmproxy or PhantomJS.\nSystem information\nroot@mitm:~# mitmproxy --version\nMitmproxy version: 2.0.2 (release version) \nPython version: 3.5.3\nPlatform: Linux-4.10.0-33-generic-i686-with-Ubuntu-17.04-zesty\nSSL version: OpenSSL 1.0.2g  1 Mar 2016\nLinux distro: Ubuntu 17.04 zesty", "issue_status": "Closed", "issue_reporting_time": "2017-09-02T13:09:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "563": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2557", "issue_id": "#2557", "issue_summary": "Mitm crashed after device on iOS go to ppq.apple.com", "issue_description": "alter-al commented on 2 Sep 2017\nSteps to reproduce the problem:\nmitmproxy -s redirect.py (with own hosts)\nconnect iphone with mitmproxy via mitm.it\ntap on verify ios app (iphone tried to go on ppq.apple.com)\nActual result:\nmitmproxy has crashed\nAny other comments? What have you tried so far?\nIt happens rarely and, to fix, just restart the mitmproxy. I tried to --ignore ppq.apple.com and apple.com, but it didn't help.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.2\nPlatform: Darwin-16.7.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f 25 May 2017\nMac version: 10.12.6 ('', '', '') x86_64\nCrash log\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/server.py\", line 119, in handle\nroot_layer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\nlayer()\nError: 100.100.121.115:63386: Traceback (most recent call last):Traceback (most recent call last):ocol/http1.py\", line 72, in __call__\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/server.py\", line 119, in handleexec/lib/python3.6/site-packages/mi    root_layer()otocol/http.py\", line 188, in __call__\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__ython3.6/site-packages/milayer()xy/protocol/http.py\", line 257, in _process_flow\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__/python3.6/site-packages/mi    layer()xy/protocol/http.py\", line 206, in handle_regular_connect\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__python3.6/site-packages/milayer()xy/protocol/rawtcp.py\", line 34, in __call__\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__python3.6/site-packages/mi    if not self._process_flow(flow):l_read_select\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 257, in _process_flow\nreturn self.handle_regular_connect(f)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/rawtcp.py\", line 34, in __call__\nr = mitmproxy.net.tcp.ssl_read_select(conns, 10)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 387, in ssl_read_select\n] or select.select(rlist, (), (), timeout)[0]\nValueError: filedescriptor out of range in select()\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/server.py\", line 119, in handle\nroot_layer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\nError: 100.100.121.115:63388: Traceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/server.py\", line 119, in handle\nroot_layer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\nif not self._process_flow(flow):\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 257, in _process_flow\nreturn self.handle_regular_connect(f)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/server.py\", line 119, in handle\nroot_layer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 188, in __call__\nif not self._process_flow(flow):\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 257, in _process_flow\nreturn self.handle_regular_connect(f)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 206, in handle_regular_connect\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/proxy/protocol/rawtcp.py\", line 34, in __call__\nr = mitmproxy.net.tcp.ssl_read_select(conns, 10)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 387, in ssl_read_select\n] or select.select(rlist, (), (), timeout)[0]\nValueError: filedescriptor out of range in select()", "issue_status": "Closed", "issue_reporting_time": "2017-09-02T10:24:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "564": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2555", "issue_id": "#2555", "issue_summary": "Feature: warn/confirm if file exists when using `-w`", "issue_description": "Prinzhorn commented on 31 Aug 2017 \u2022\nedited\nI just ran mitmproxy -w existing-file and existing-file was overwritten with a 0 byte file. I guess it's my fault that I lost the session I recorded earlier, but I also believe mitmproxy (and ever other CLI) should catch user errors if possible. I don't know if this can be added in a backwards-compatible manner, because existing scripts might launch mitmproxy and don't expect a confirmation message when a file already exists. Anyway, I thought I'd ask what you think (basically I'm just sad I lost the file and wanted to share my loss :D).\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.3\nPlatform: Linux-4.10.0-33-generic-x86_64-with-Ubuntu-17.04-zesty\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 17.04 zesty", "issue_status": "Closed", "issue_reporting_time": "2017-08-31T13:15:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "565": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2554", "issue_id": "#2554", "issue_summary": "Not an issue: question about api", "issue_description": "securisec commented on 31 Aug 2017\nHey, while using mitmproxy, one can press E on a stream to export it to file as python code. See screenshot for reference.\n\nIs it possible to export all or some streams to a file as python code using the mitmproxy api?", "issue_status": "Closed", "issue_reporting_time": "2017-08-30T22:35:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "566": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2553", "issue_id": "#2553", "issue_summary": "HTTPS connection did not work through proxy", "issue_description": "du-premraj commented on 30 Aug 2017\nSteps to reproduce the problem:\nI have configured my system to use the MITM proxy in my Cent OS 6.7 VM appliance.\nCopied the mitmproxy-ca-cert.pem to /etc/pki/ca-trust/source/anchors/\nissued update-ca-trust force-enable and update-ca-trust extract commands\nStarted the MITMdump in upstream mode and tried to access the www.cisco.com. Segmentation fault occured as shown below. If I try non-https connection it went through fine.\nmitmdump -U http://:8080\nProxy server listening at http://0.0.0.0:8080\n127.0.0.1:46213: clientconnect\n127.0.0.1:46213: GET http://www.cisco.com/\n<< 301 Moved Permanently 0b\n127.0.0.1:46213: clientdisconnect\n127.0.0.1:46222: clientconnect\nSegmentation fault\nAny other comments? What have you tried so far?\nAlso tried below option to convert to .crt format using openssl and appended to ca-bundle.crt as shown below, it did not help to make the https work\nopenssl x509 -in mitmproxy-ca-cert.pem -inform PEM -out mitmproxy-ca-cert.crt\ncat mitmproxy-ca-cert.crt >>/etc/pki/tls/certs/ca-bundle.crt\nSystem information\nIts a VM running Cent OS\ncat /proc/version\nLinux version 2.6.32-573.3.1.el6.x86_64 (mockbuild@c6b8.bsys.dev.centos.org) (gcc version 4.4.7 20120313 (Red Hat 4.4.7-16) (GCC) ) #1 SMP Thu Aug 13 22:55:16 UTC 2015\ncat /etc/centos-release\nMgmtOS release 6.7 (Final)\n[root@ci-005056adb97e ~]# mitmdump --version\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.1\nPlatform: Linux-2.6.32-573.3.1.el6.x86_64-x86_64-with-centos-6.7-Final\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: MgmtOS 6.7 Final\nmitmproxy --version\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.1\nPlatform: Linux-2.6.32-573.3.1.el6.x86_64-x86_64-with-centos-6.7-Final\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: MgmtOS 6.7 Final", "issue_status": "Closed", "issue_reporting_time": "2017-08-30T15:59:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "567": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2552", "issue_id": "#2552", "issue_summary": "tlsv1 alert decrypt error", "issue_description": "nmiculinic commented on 30 Aug 2017\nI'm running mitmproxy in docker container and I get the following error:\n << Cannot establish TLS with client (sni: fb.com): TlsException(\"SSL handshake error: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert decrypt error')],)\",)\nSteps to reproduce the problem:\ndocker run --rm -it -p 8080:8080 mitmproxy/mitmproxy mitmdump -w /tmp/dump\nhttps_proxy=http://localhost:8080/ curl https://www.facebook.com\n172.17.0.1:47570: CONNECT www.facebook.com:443\n << Cannot establish TLS with client (sni: www.facebook.com): TlsException(\"SSL handshake error: Error([('SSL routines', 'ssl3_read_bytes', 'tlsv1 alert decrypt error')],)\",)\nhappened\nAny other comments? What have you tried so far?\nSystem information\nDocker, latest\n/home/mitmproxy/.mitmproxy # mitmproxy --version\nMitmproxy version: 2.0.2 (release version) \nPython version: 3.5.2\nPlatform: Linux-4.12.6-1-ARCH-x86_64-with\nSSL version: OpenSSL 1.0.2k  26 Jan 2017", "issue_status": "Closed", "issue_reporting_time": "2017-08-30T14:45:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "568": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2550", "issue_id": "#2550", "issue_summary": "Crash when trying to save listed Websocket flows", "issue_description": "securisec commented on 30 Aug 2017\nSteps to reproduce the problem:\nMake a websocket request with python websocket. Test url is ws://139.59.13.232:4200\nTry to write flow to disk\nCrash\nAny other comments? What have you tried so far?\nTraceback (most recent call last): File \"mitmproxy/tools/console/master.py\", line 281, in run File \"site-packages/urwid/main_loop.py\", line 278, in run File \"site-packages/urwid/main_loop.py\", line 376, in _run File \"site-packages/urwid/main_loop.py\", line 682, in run File \"site-packages/urwid/main_loop.py\", line 719, in _loop File \"site-packages/urwid/raw_display.py\", line 393, in <lambda> File \"site-packages/urwid/raw_display.py\", line 493, in parse_input File \"site-packages/urwid/main_loop.py\", line 403, in _update File \"site-packages/urwid/main_loop.py\", line 503, in process_input File \"mitmproxy/tools/console/window.py\", line 84, in keypress File \"site-packages/urwid/container.py\", line 1116, in keypress File \"mitmproxy/tools/console/statusbar.py\", line 155, in keypress File \"mitmproxy/tools/console/statusbar.py\", line 110, in keypress File \"mitmproxy/tools/console/statusbar.py\", line 133, in prompt_execute File \"mitmproxy/tools/console/statusbar.py\", line 21, in __call__ File \"mitmproxy/tools/console/master.py\", line 388, in save_flows File \"mitmproxy/tools/console/master.py\", line 382, in _write_flows File \"mitmproxy/io.py\", line 27, in add File \"mitmproxy/contrib/tnetstring.py\", line 66, in dump File \"mitmproxy/contrib/tnetstring.py\", line 57, in dumps File \"mitmproxy/contrib/tnetstring.py\", line 142, in _rdumpq File \"mitmproxy/contrib/tnetstring.py\", line 142, in _rdumpq File \"mitmproxy/contrib/tnetstring.py\", line 149, in _rdumpq ValueError: unserializable object: <WebSocketFlow (4 messages)> (<class 'mitmproxy.websocket.WebSocketFlow'>)\nSystem information\nMitmproxy version: 2.0.1 (release version) Precompiled Binary Python version: 3.5.2 Platform: Linux-4.4.0-89-generic-x86_64-with-debian-stretch-sid SSL version: OpenSSL 1.1.0e 16 Feb 2017 Linux distro: debian stretch/sid", "issue_status": "Closed", "issue_reporting_time": "2017-08-30T12:01:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "569": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2549", "issue_id": "#2549", "issue_summary": "TCP and TLS", "issue_description": "XueSeason commented on 30 Aug 2017\nCan this tool capture tcp data with SSL? Not specific http packet.", "issue_status": "Closed", "issue_reporting_time": "2017-08-30T08:47:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "570": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2548", "issue_id": "#2548", "issue_summary": "'typing==3.5.2.2' distribution was not found and is required by mitmproxy", "issue_description": "Astrades commented on 30 Aug 2017\nHey gus. So, I have a fresh kali-rolling installation and mitmproxy is a pre-installed tool. I've used it before and have never run into this issue. Every time I try to run it, I get a python error stating that my distribution is not found (error below).\n'typing==3.5.2.2' distribution was not found and is required by mitmproxy\nAlso, I am unable to look at the mitm version. Thanks for reading! I look forward to fixing this.", "issue_status": "Closed", "issue_reporting_time": "2017-08-30T01:07:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "571": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2547", "issue_id": "#2547", "issue_summary": "SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] with python requests library", "issue_description": "nmiculinic commented on 29 Aug 2017\nSteps to reproduce the problem:\nimport requests\nimport urllib.request\nwith urllib.request.urlopen('https://facebook.com/') as response:\n    print(len(response.read()))\nprint(len(requests.get('https://facebook.com').text))\nWithout mitm proxy:\n206541\n206809\nWith mitm proxy:\n206922\n---------------------------------------------------------------------------\nSSLError                                  Traceback (most recent call last)\n~/Desktop/proj/.venv/lib/python3.6/site-packages/requests/packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, **response_kw)\n    553             if is_new_proxy_conn:\n--> 554                 self._prepare_proxy(conn)\n    555 \n\n~/Desktop/proj/.venv/lib/python3.6/site-packages/requests/packages/urllib3/connectionpool.py in _prepare_proxy(self, conn)\n    749 \n--> 750         conn.connect()\n    751 \n\n~/Desktop/proj/.venv/lib/python3.6/site-packages/requests/packages/urllib3/connection.py in connect(self)\n    251                                     server_hostname=hostname,\n--> 252                                     ssl_version=resolved_ssl_version)\n    253 \n\n~/Desktop/proj/.venv/lib/python3.6/site-packages/requests/packages/urllib3/util/ssl_.py in ssl_wrap_socket(sock, keyfile, certfile, cert_reqs, ca_certs, server_hostname, ssl_version, ciphers, ssl_context, ca_cert_dir)\n    304     if HAS_SNI:  # Platform-specific: OpenSSL with enabled SNI\n--> 305         return context.wrap_socket(sock, server_hostname=server_hostname)\n    306 \n\n/usr/lib/python3.6/ssl.py in wrap_socket(self, sock, server_side, do_handshake_on_connect, suppress_ragged_eofs, server_hostname, session)\n    400                          server_hostname=server_hostname,\n--> 401                          _context=self, _session=session)\n    402 \n\n/usr/lib/python3.6/ssl.py in __init__(self, sock, keyfile, certfile, server_side, cert_reqs, ssl_version, ca_certs, do_handshake_on_connect, family, type, proto, fileno, suppress_ragged_eofs, npn_protocols, ciphers, server_hostname, _context, _session)\n    807                         raise ValueError(\"do_handshake_on_connect should not be specified for non-blocking sockets\")\n--> 808                     self.do_handshake()\n    809 \n\n/usr/lib/python3.6/ssl.py in do_handshake(self, block)\n   1060                 self.settimeout(None)\n-> 1061             self._sslobj.do_handshake()\n   1062         finally:\n\n/usr/lib/python3.6/ssl.py in do_handshake(self)\n    682         \"\"\"Start the SSL/TLS handshake.\"\"\"\n--> 683         self._sslobj.do_handshake()\n    684         if self.context.check_hostname:\n\nSSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)\n\nDuring handling of the above exception, another exception occurred:\n\nSSLError                                  Traceback (most recent call last)\n~/Desktop/proj/.venv/lib/python3.6/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\n    375                     retries=self.max_retries,\n--> 376                     timeout=timeout\n    377                 )\n\n~/Desktop/proj/.venv/lib/python3.6/site-packages/requests/packages/urllib3/connectionpool.py in urlopen(self, method, url, body, headers, retries, redirect, assert_same_host, timeout, pool_timeout, release_conn, **response_kw)\n    587             release_conn = True\n--> 588             raise SSLError(e)\n    589 \n\nSSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)\n\nDuring handling of the above exception, another exception occurred:\n\nSSLError                                  Traceback (most recent call last)\n<ipython-input-58-20b3921db13c> in <module>()\n      3 with urllib.request.urlopen('https://facebook.com/') as response:\n      4     print(len(response.read()))\n----> 5 print(len(requests.get('https://facebook.com').text))\n\n~/Desktop/proj/.venv/lib/python3.6/site-packages/requests/api.py in get(url, params, **kwargs)\n     65 \n     66     kwargs.setdefault('allow_redirects', True)\n---> 67     return request('get', url, params=params, **kwargs)\n     68 \n     69 \n\n~/Desktop/proj/.venv/lib/python3.6/site-packages/requests/api.py in request(method, url, **kwargs)\n     51     # cases, and look like a memory leak in others.\n     52     with sessions.Session() as session:\n---> 53         return session.request(method=method, url=url, **kwargs)\n     54 \n     55 \n\n~/Desktop/proj/.venv/lib/python3.6/site-packages/requests/sessions.py in request(self, method, url, params, data, headers, cookies, files, auth, timeout, allow_redirects, proxies, hooks, stream, verify, cert, json)\n    466         }\n    467         send_kwargs.update(settings)\n--> 468         resp = self.send(prep, **send_kwargs)\n    469 \n    470         return resp\n\n~/Desktop/proj/.venv/lib/python3.6/site-packages/requests/sessions.py in send(self, request, **kwargs)\n    574 \n    575         # Send the request\n--> 576         r = adapter.send(request, **kwargs)\n    577 \n    578         # Total elapsed time of the request (approximately)\n\n~/Desktop/proj/.venv/lib/python3.6/site-packages/requests/adapters.py in send(self, request, stream, timeout, verify, cert, proxies)\n    445         except (_SSLError, _HTTPError) as e:\n    446             if isinstance(e, _SSLError):\n--> 447                 raise SSLError(e, request=request)\n    448             elif isinstance(e, ReadTimeoutError):\n    449                 raise ReadTimeout(e, request=request)\n\nSSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:748)\nAny other comments? What have you tried so far?\nIt's visible from the logs using urllib works alright, but requests fail miserably.\nthis is output of pip freeze:\naiodns==1.1.1\naiohttp==2.2.3\nasync-timeout==1.2.1\nasyncio==3.4.3\nbeautifulsoup4==4.6.0\nbleach==2.0.0\ncchardet==2.1.1\nccxt==1.4.12\ncertifi==2017.7.27.1\nchardet==3.0.4\nclick==6.7\ncolorama==0.3.9\ncoloredlogs==7.1\nConfigArgParse==0.12.0\ncoverage==4.4.1\nCython==0.26\ndash==0.17.7\ndash-core-components==0.5.3\ndash-html-components==0.6.2\ndash-renderer==0.7.3\ndecorator==4.1.2\nentrypoints==0.2.3\nFlask==0.12.2\nFlask-Compress==1.4.0\nFlask-SeaSurf==0.2.2\nforex-python==0.3.2\ngevent==1.2.2\ngraypy==0.2.14\ngreenlet==0.4.12\ngunicorn==19.7.1\nhtml5lib==0.999999999\nhumanfriendly==4.4\nidna==2.6\nipykernel==4.6.1\nipython==6.1.0\nipython-genutils==0.2.0\nipywidgets==6.0.0\nitsdangerous==0.24\njedi==0.10.2\nJinja2==2.9.6\njsonschema==2.6.0\njupyter==1.0.0\njupyter-client==5.1.0\njupyter-console==5.1.0\njupyter-core==4.3.0\nlogging-tree==1.7\nlxml==3.8.0\nMarkupSafe==1.0\nmistune==0.7.4\nmultidict==3.1.1\nnbconvert==5.2.1\nnbformat==4.3.0\nnose==1.3.7\nnose2==0.6.5\nnotebook==5.0.0\nnumpy==1.13.1\noverrides==1.8\npandas==0.20.3\npandocfilters==1.4.1\npexpect==4.2.1\npg8000==1.10.6\npickleshare==0.7.4\nplotly==2.0.14\nprompt-toolkit==1.0.14\nprompter==0.3.10\npsycopg2==2.7.1\nptyprocess==0.5.2\npy==1.4.34\npycares==2.2.0\nPygments==2.2.0\npytest==3.2.1\npython-dateutil==2.6.1\npytz==2017.2\nPyYAML==3.12\npyzmq==16.0.2\nqtconsole==4.3.0\nrequests==2.9.0\nsh==1.12.14\nsimplegeneric==0.8.1\nsimplejson==3.11.1\nsix==1.10.0\nslack-logger==0.2.0\nslackclient==1.0.6\nSQLAlchemy==1.1.13\nSQLAlchemy-Utils==0.32.14\nterminado==0.6\ntestpath==0.3.1\ntoolz==0.8.2\ntornado==4.5.1\ntraitlets==4.3.2\nurllib3==1.22\nuvloop==0.8.0\nvoluptuous==0.10.5\nwcwidth==0.1.7\nwebencodings==0.5.1\nwebsocket==0.2.1\nwebsocket-client==0.44.0\nwebsockets==3.3\nWerkzeug==0.12.2\nwidgetsnbextension==2.0.0\nyarl==0.11.0\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.2\nPlatform: Linux-4.12.6-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: arch", "issue_status": "Closed", "issue_reporting_time": "2017-08-29T13:50:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "572": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2546", "issue_id": "#2546", "issue_summary": "Add delete all buttons in mitmweb interface for flow modification", "issue_description": "nmiculinic commented on 29 Aug 2017\nThis is simple enhancement proposal I'd be thankful if implemented. I use mitmproxy in debugging my application, and it would be useful being able to clear all historic flow data in one button.\nRight now I'm even unable to select multiple flow items and batch delete them.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.2\nPlatform: Linux-4.12.6-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: arch", "issue_status": "Closed", "issue_reporting_time": "2017-08-29T13:29:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "573": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2544", "issue_id": "#2544", "issue_summary": "Catching \"Client Handshake failed.\" with mitmdump script", "issue_description": "phros commented on 28 Aug 2017\nHey guys,\nI'm on the current master branch. I use mitmdump scripts for logging information about incoming connections. I wrote several addons which are used simultaneously.\nNow, I want to log hosts/targets for which a TLS Handshare could not be established. What is the best way to do this? Are there callbacks for this case, like there is for request and response?\nHelp is much appreciated!\nCheers", "issue_status": "Closed", "issue_reporting_time": "2017-08-28T10:04:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "574": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2541", "issue_id": "#2541", "issue_summary": "Handling arguments for mitmdump scripts", "issue_description": "phros commented on 22 Aug 2017\nHey,\nwhat is the current state of Handling arguments? The Readme states: FIXME. Is it currently possible to pass arguments to a python script for mitmdump?\nCheers", "issue_status": "Closed", "issue_reporting_time": "2017-08-22T07:51:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "575": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2538", "issue_id": "#2538", "issue_summary": "How to modify the mitmproxy lib to fake ip header packets on windows?", "issue_description": "ghost commented on 21 Aug 2017 \u2022\nedited by ghost\nI want use mitmproxy to make ip flooding. How to modify the mitmproxy lib to fake ip header packets on windows?\nThanks", "issue_status": "Closed", "issue_reporting_time": "2017-08-21T08:25:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "576": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2536", "issue_id": "#2536", "issue_summary": "Cannot modify/ insert header with fields", "issue_description": "ghost commented on 19 Aug 2017 \u2022\nedited by ghost\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2017-08-19T08:06:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "577": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2535", "issue_id": "#2535", "issue_summary": "OSError: [WinError 10022] An invalid argument was supplied", "issue_description": "ghost commented on 19 Aug 2017\nException in thread Thread-3:\nTraceback (most recent call last):\nFile \"C:\\Python35\\lib\\threading.py\", line 923, in _bootstrap_inner\nself.run()\nFile \"C:\\Python35\\lib\\threading.py\", line 871, in run\nself._target(*self._args, **self._kwargs)\nFile \"C:/Users/Gigabyte/PycharmProjects/untitled1/mitmproxy/platform/windows.py\", line 331, in request_local\nself._request(packet)\nFile \"C:/Users/Gigabyte/PycharmProjects/untitled1/mitmproxy/platform/windows.py\", line 359, in request\npacket.dst_addr, packet.dst_port = self.proxy_addr, self.proxy_port\nFile \"C:\\Python35\\lib\\site-packages\\pydivert\\packet_init.py\", line 257, in dst_addr\nself.ip.dst_addr = val\nFile \"C:\\Python35\\lib\\site-packages\\pydivert\\packet\\header.py\", line 43, in setattr\nreturn super(Header, self).setattr(key, value)\nFile \"C:\\Python35\\lib\\site-packages\\pydivert\\packet\\ip.py\", line 55, in dst_addr\nself.raw[self._dst_addr] = socket.inet_pton(self._af, val)\nOSError: [WinError 10022] An invalid argument was supplied", "issue_status": "Closed", "issue_reporting_time": "2017-08-19T07:12:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "578": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2532", "issue_id": "#2532", "issue_summary": "Support CONNECT method for upstream proxy", "issue_description": "splashx commented on 17 Aug 2017 \u2022\nedited\nSteps to reproduce the problem:\nHave a proxy in the environment which supports CONNECT method (this is the upstream proxy)\nRun mitmproxy with -U <proxy>:<port>\nSetup a iptables rule to forward any traffic locally generated to dst tcp/443 to mitmproxy localhost:8080\nAny other comments? What have you tried so far?\nThis happens because mitmproxy tries to stablish an SSL connection with a proxy which doesn't support it. When sniffing a working ssl request in this environment (https_proxy=http://10.17.70.70:3128 curl https://www.google.com) the following is seen in tcpdump:\nC->P: CONNECT www.google.com:443\nI would suggest to add a flag to upstream to use CONNECT tunnel for ssl destinations (-U proxy:port ---upstream-use-connect-ssl). It should work like this (C = client, M = mitmproxy, P = upstream proxy, S = https server):\nC: https://www.google.com\nC->M: certificate presented by MITM, auto-generated, trusted\nM->P: sends up CONNECT www.google.com:443 (this is just a tcp connection, all the handshake will happen here)\nP->S: blindly forwards the tcp connection request from M to S\nM--viaP-->S: SSL handshake using the CONNECT tunnel (P from now on everything is encrypted to P, P can't read anything)\nSystem information\n# mitmdump -U 10.17.70.70:3128\nmitmdump: Invalid server specification: 10.17.70.70:3128\nroot@cog:~# mitmdump -U http://10.17.70.70:3128\nProxy server listening at http://0.0.0.0:8080\n100.127.169.165:56054: clientconnect\n100.127.169.165:56054: Cannot establish TLS with 10.17.70.70:3128 (sni: www.google.com): TlsException(\"SSL handshake error: Error([('SSL routines', 'SSL23_GET_SERVER_HELLO', 'unknown protocol')],)\",)\n100.127.169.165:56054: clientdisconnect\n100.127.169.165:56056: clientconnect\n100.127.169.165:56056: Cannot establish TLS with 10.17.70.70:3128 (sni: www.google.com): TlsException(\"SSL handshake error: Error([('SSL routines', 'SSL23_GET_SERVER_HELLO', 'unknown protocol')],)\",)\n100.127.169.165:56056: clientdisconnect", "issue_status": "Closed", "issue_reporting_time": "2017-08-17T17:59:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "579": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2531", "issue_id": "#2531", "issue_summary": "Duplicating a flow crashes mitmproxy", "issue_description": "mictee commented on 17 Aug 2017\nSteps to reproduce the problem:\nStart mitmproxy with default configuration\nLog any traffic\nPress [D] to duplicate a flow\nTraceback (most recent call last):\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/lib/python3.6/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 417, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/lib/python3.6/site-packages/urwid/listbox.py\", line 987, in keypress\n    self.make_cursor_visible((maxcol,maxrow))\n  File \"/usr/lib/python3.6/site-packages/urwid/listbox.py\", line 939, in make_cursor_visible\n    focus_widget, pos = self.body.get_focus()\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 284, in get_focus\n    f = FlowItem(self.master, self.master.view.focus.flow)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 123, in __init__\n    w = self.get_text()\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 132, in get_text\n    max_url_len=cols,\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/common.py\", line 427, in format_flow\n    acked = f.reply.state == \"committed\",\nAttributeError: 'NoneType' object has no attribute 'state'\nAny other comments? What have you tried so far?\nI've tried duplicating different kinds of flows. As the final line in the traceback seems to hint that the selected flow's reply may be empty, I made sure to select flows with fully captured (not pending) responses.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.2\nPlatform: Linux-4.12.4-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: arch", "issue_status": "Closed", "issue_reporting_time": "2017-08-17T12:29:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "580": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2529", "issue_id": "#2529", "issue_summary": "crached when resumeall after duplicate flow", "issue_description": "tkkcc commented on 16 Aug 2017\nSteps to reproduce the problem:\n1.mitmproxy -p 7778\n2.chrome use proxy switchysharp to charge to 127.0.0.1:7778\n3.Intercept filter:~q\n4.Intercept a resquest,click into it,press shirt+d to duplicate one or more flow\uff0cpress shift+ato resume all\n5.carsh and show this\nTraceback (most recent call last):\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/master.py\", line 200, in run\n    self.loop.run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/window.py\", line 276, in keypress\n    return self.master.keymap.handle(fs.keyctx, k)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/keymap.py\", line 123, in handle\n    return self.executor(b.command)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/commandeditor.py\", line 24, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/command.py\", line 144, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/command.py\", line 135, in call_args\n    return self.commands[path].call(args)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/command.py\", line 106, in call\n    ret = self.func(*pargs)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/command.py\", line 197, in wrapper\n    return function(*args, **kwargs)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/addons/core.py\", line 34, in resume\n    f.resume()\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/flow.py\", line 182, in resume\n    self.reply.commit()\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/controller.py\", line 100, in commit\n    \"Reply is {}, but expected it to be taken.\".format(self.state)\nmitmproxy.exceptions.ControlException: Reply is start, but expected it to be taken.\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments? What have you tried so far?\nsearched but not help\nSystem information\nMitmproxy version: 3.0.0 (release version) \nPython version: 3.6.2\nPlatform: Linux-4.12.6-1-ARCH-x86_64-with-arch-Arch-Linux\nSSL version: OpenSSL 1.1.0f  25 May 2017\nLinux distro: arch Arch Linux", "issue_status": "Closed", "issue_reporting_time": "2017-08-16T01:38:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "581": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2528", "issue_id": "#2528", "issue_summary": "MITM Proxy stops working after connecting to VPN", "issue_description": "ldelossa commented on 15 Aug 2017\nSteps to reproduce the problem:\nConnect to vpn (this is palo alot)\nAny other comments? What have you tried so far?\nSorry that this is not an issue with mitmproxy per say, but I could use a little help. When I connect to my corporate VPN mitm-proxy stops intercepting traffic. I understand that when I connect to my corporate VPN my internal routing table on my workstation changes, and the default gateway may change also. However what I can't understand is that my (osx) system proxy settings are still sending everything to localhost:8080 where mitm proxy is still listening. I see no requests making it's way through it. I tried googling OSX related articles, but no luck. Making this ticket as last ditch effort.", "issue_status": "Closed", "issue_reporting_time": "2017-08-15T15:03:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "582": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2526", "issue_id": "#2526", "issue_summary": "Cannot access google play store when use mitmproxy", "issue_description": "ghost commented on 15 Aug 2017\nI installed the CA certificate . I cannot access some apps (ex: google play store)\nThanks", "issue_status": "Closed", "issue_reporting_time": "2017-08-15T14:11:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "583": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2524", "issue_id": "#2524", "issue_summary": "TypeError: response() takes exactly 1 argument (2 given)", "issue_description": "nesttle commented on 15 Aug 2017 \u2022\nedited\nSimilar related issue: #167\nSteps to reproduce the problem:\n-s script.py\nSystem information\nInstalling collected packages: mitmproxy, netlib\nSuccessfully installed mitmproxy-2.0.2 netlib-0.17\n\nroot@mitm:~# mitmproxy --version\nmitmproxy 0.15\nUnknown issue here with mitmproxy 2.0.2 and -s script.py argument:\nScript error:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/script/script.py\", line 93, in run\n    return f(self.ctx, *args, **kwargs)\nTypeError: request() takes exactly 1 argument (2 given)\n\nScript error:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/script/script.py\", line 93, in run\n    return f(self.ctx, *args, **kwargs)\nTypeError: response() takes exactly 1 argument (2 given)\nnetlib-0.17\nscript.py example\nimport io\nimport re\nimport requests\nimport time\n\ndef request(flow):\n   #ok\ndef response(flow):\n   #ok\nWorking nice on local! But fails on Debian server.\n(Sorry if duplicated)", "issue_status": "Closed", "issue_reporting_time": "2017-08-15T11:23:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "584": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2523", "issue_id": "#2523", "issue_summary": "How to Show local IP in console view?", "issue_description": "hhhaiai commented on 15 Aug 2017 \u2022\nedited by MatthewShao\n\n\u8fd9\u91cc\u7684*\u60f3\u6539\u6210\u672c\u5730IP\nWant to change * here to the local IP, what should I do?", "issue_status": "Closed", "issue_reporting_time": "2017-08-15T11:13:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "585": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2522", "issue_id": "#2522", "issue_summary": "Feature: Log size", "issue_description": "vdun commented on 15 Aug 2017\nAllow to specify number/size of logged requests with rotating.", "issue_status": "Closed", "issue_reporting_time": "2017-08-15T11:06:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "586": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2521", "issue_id": "#2521", "issue_summary": "error: The system detected an invalid pointer address in attempting to use a pointer argument in a call.", "issue_description": "ghost commented on 15 Aug 2017 \u2022\nedited by mhils\nExecute mitmproxy/platform/windows.py\nHere log:\n * Transparent proxy active.\n   Filter: tcp.DstPort == 80 or tcp.DstPort == 443\nException in thread Thread-3:\nTraceback (most recent call last):\n  File \"C:\\python32\\python-2.7.10\\lib\\threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"C:\\python32\\python-2.7.10\\lib\\threading.py\", line 763, in run\n    self.__target(*self.__args, **self.__kwargs)\n  File \"D:/source/SmartAuto/mitmproxy/platform/windows.py\", line 314, in request_local\n    client = (packet.src_addr, packet.src_port)\n  File \"C:\\python32\\python-2.7.10\\lib\\site-packages\\pydivert\\models.py\", line 416, in src_addr\n    return addr_to_string(self.address_family, src_addr, self.encoding)\n  File \"C:\\python32\\python-2.7.10\\lib\\site-packages\\pydivert\\winutils.py\", line 59, in addr_to_string\n    return inet_ntop(socket.AF_INET6, struct.pack(\"<IIII\", *value), encoding)\n  File \"C:\\python32\\python-2.7.10\\lib\\site-packages\\pydivert\\winutils.py\", line 119, in inet_ntop\n    raise socket.error(FormatError())\nerror: The system detected an invalid pointer address in attempting to use a pointer argument in a call.", "issue_status": "Closed", "issue_reporting_time": "2017-08-15T05:56:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "587": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2517", "issue_id": "#2517", "issue_summary": "mitmdump error message", "issue_description": "juamc2503 commented on 12 Aug 2017 \u2022\nedited by mhils\nSteps to reproduce the problem:\n1.why mitmdump is giving me this error after 5 mins connection??\nSystem information\n:~$ sudo su\n/home/ubuntu# mitmdump --host -dd -s \"./phone.py ALL\" -w logfile.txt | grep \"Tried to accept - code\"\n404 GET /favicon.ico (66.176.89.253) 0.26ms\nTried to accept - code 410\n----------------------------------------\nError in processing of request from 103.235.255.31:41455\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 932, in connection_thread\n    self.handle_client_connection(connection, client_address)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py\", line 63, in handle_client_connection\n    self.channel\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py\", line 76, in __init__\n    None)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/connections.py\", line 33, in __init__\n    super().__init__(client_connection, address, server)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 795, in __init__\n    super().__init__(connection)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py\", line 455, in __init__\n    self.ip_address = Address(connection.getpeername())\nOSError: [Errno 107] Transport endpoint is not connected\n\n----------------------------------------", "issue_status": "Closed", "issue_reporting_time": "2017-08-12T12:45:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "588": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2516", "issue_id": "#2516", "issue_summary": "ImportError: dlopen failed: cannot locate symbol \"log2\"", "issue_description": "Deathlive commented on 12 Aug 2017\nI install mitmproxy in Termux(emulator of android).\npip3 install mitmproxy\nFile \"/data/data/com.termux/files/usr/lib/python3.6/site-packages/brotli/brotli.py\", line 5, in <module>\n   from  ._brotli import ffi, lib\nImportError: dlopen failed: cannot locate symbol \"log2\" referenced by \"_brotli.abi3.so\" ...\nI install pip3 install brotli.", "issue_status": "Closed", "issue_reporting_time": "2017-08-12T11:25:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "589": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2515", "issue_id": "#2515", "issue_summary": "Mitmdump doesn't recognize python script", "issue_description": "juamc2503 commented on 11 Aug 2017\nSteps to reproduce the problem:\n1.i Have a script to send response to requests https via mitmdump in a digitalocean server.\n2.i have created one in google cloud the same version of linux the same commands of imtallation but apparently the python scripts doesn't run on this server dont know why\n3.\nmitmdump --host -dd -s \"./phone.py ALL\" -w logfile.txt | grep \"Tried to accept - code\"\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2017-08-11T11:40:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "590": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2508", "issue_id": "#2508", "issue_summary": "Can mitmdump autosave? I really need this function.", "issue_description": "Getyourneed commented on 9 Aug 2017\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2017-08-09T08:14:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "591": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2507", "issue_id": "#2507", "issue_summary": "openSLL proxy certificate confusing mitmproxy", "issue_description": "jtchilders commented on 8 Aug 2017\nHello,\nObviously, I cannot give you my certificate to create your own proxy certificate to test this failure, which probably makes things hard, but I'll submit this for your consideration. Perhaps I'm just misusing the tool somehow.\nSteps to reproduce the problem:\nCreate an SSL proxy certificate\nRun a curl using the following arguments\ncurl --silent --show-error --connect-timeout 100 --max-time 120 --compressed --capath ./certificates --cert myproxy --cacert myproxy --key myproxy --config data.txt https://yoursecureserver.com:port/path/command\nreceive error:\ncurl: (60) SSL certificate problem: self signed certificate in certificate chain\nMore details here: http://curl.haxx.se/docs/sslcerts.html\ncurl performs SSL certificate verification by default, using a \"bundle\"\nof Certificate Authority (CA) public keys (CA certs). If the default\nbundle file isn't adequate, you can specify an alternate file\nusing the --cacert option.\nIf this HTTPS server uses a certificate signed by a CA represented in\nthe bundle, the certificate verification probably failed due to a\nproblem with the certificate (it might be expired, or the name might\nnot match the domain name in the URL).\nIf you'd like to turn off curl's verification of the certificate, use\nthe -k (or --insecure) option.\nAny other comments? What have you tried so far?\nWithout the mitmproxy, this curl command works just fine with my server.\nI can get standard http calls without the proxy certificate to work.\nSystem information\nI've tested this on both my macbook and a linux cluster running RHEL6.5 with the same results. Both were using python3.5 and I used 'pip install --user git+git://github.com/mitmproxy/mitmproxy.git' to install the software.", "issue_status": "Closed", "issue_reporting_time": "2017-08-08T03:17:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "592": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2506", "issue_id": "#2506", "issue_summary": "304 [no content] on HTTP GET request (mitmproxy)", "issue_description": "nesttle commented on 7 Aug 2017 \u2022\nedited\nSteps to reproduce the problem:\nVisit any url with image inside or visit direct url image (i.e. http://i.imgur.com/rXodcGj.jpg)\nmimtproxy shows response code 304 [no content] randomly\nHTTP or HTTPS, same behavior (so it's not related to SSL Pinning)\nImage loads for 200 response code, also for 304 response code\nAny other comments? What have you tried so far?\nmitmproxy -p 1111 -U http://user:pass@x.x.x.x:8080 -s myscripttosaveimages.py\nSystem information\nPython version: 3.5.1\nPlatform: Linux-4.9.35-v7+-armv7l-with-debian-8.0\nSSL version: OpenSSL 1.0.1t  3 May 2016\nLinux distro: debian 8.0 \nmitmproxy debug/log", "issue_status": "Closed", "issue_reporting_time": "2017-08-07T13:52:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "593": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2498", "issue_id": "#2498", "issue_summary": "Options: Provide good upgrade experience from 2.0.x", "issue_description": "Member\nmhils commented on 3 Aug 2017 \u2022\nedited\nSteps to reproduce the problem:\nExisting mitmproxy users updates to 3.0 once it is released.\nUser invokes mitmproxy -R http://example.com\nMitmproxy returns cryptic \"Invalid replacement specifier:\" error.\nAny other comments? What have you tried so far?\nThe changes to the CLI in 3.0 are quite big, so we should try to provide a somewhat reasonable migration experience for existing users. As I see it, it would make sense to have a very dirty function that checks argv for common migration errors. We should at least provide useful hints for the following issues:\n-T\n-R (now repurposed, remove that?)\n-U\n--http2 / --no-http2 (#2500)\nAgain, implementation of this can be dirty, it's just useful to have for a while to ease migration.\n1", "issue_status": "Closed", "issue_reporting_time": "2017-08-03T14:11:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "594": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2495", "issue_id": "#2495", "issue_summary": "Keyerror in compat 0.17 - peer_address", "issue_description": "rabo-soc commented on 2 Aug 2017\nI get this error when loading an old 0.17 dump file:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/bin/mitmdump\", line 11, in <module>\n    load_entry_point('mitmproxy==2.0.2', 'console_scripts', 'mitmdump')()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/main.py\", line 120, in mitmdump\n    master = dump.DumpMaster(dump_options, server)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/dump.py\", line 55, in __init__\n    self.load_flows_file(options.rfile)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/master.py\", line 182, in load_flows_file\n    return self.load_flows(freader)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/master.py\", line 164, in load_flows\n    for i in fr.stream():\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/io.py\", line 42, in stream\n    data = io_compat.migrate_flow(data)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/io_compat.py\", line 152, in migrate_flow\n    flow_data = converters[flow_version[:2]](flow_data)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/io_compat.py\", line 61, in convert_017_018\n    data[\"server_conn\"][\"ip_address\"] = data[\"server_conn\"].pop(\"peer_address\")\nKeyError: 'peer_address'\nSteps to reproduce the problem:\nCreate an outfile with mitmproxy 0.17\nOpen with mitmdump 2.0.2\nGet a keyerror on \"peer_address\"\nAny other comments? What have you tried so far?\nWas told on slack to create an issue, however I can't supply the test files because they contain sensitive data.\nSystem information\n$ /usr/local/Cellar/mitmproxy/2.0.2/bin/mitmdump --version\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.2\nPlatform: Darwin-16.7.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f 25 May 2017\nMac version: 10.12.6 ('', '', '') x86_64\n1", "issue_status": "Closed", "issue_reporting_time": "2017-08-02T13:30:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "595": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2486", "issue_id": "#2486", "issue_summary": "cannot intercept insatgram's traffic", "issue_description": "wejdan commented on 30 Jul 2017\nI cannot intercept instagram ver 10.31.0 traffic on android .\n1-i used arpspoof to redirect android traffic to my laptop\n2-i installed mitmproxy certificate in android\n3-i can see all the traffic comming from all the other apps\nI know instagram uses ssl pinning.but the wired thing is the app work just fine and it is connected to the Internet.it as if mitmproxy ignore traffic comming from instagram?\n1", "issue_status": "Closed", "issue_reporting_time": "2017-07-30T13:38:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "596": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2479", "issue_id": "#2479", "issue_summary": "How to run mitmproxy source code on Windows 7 machine?", "issue_description": "abhineetagarwal commented on 28 Jul 2017\nIf anyone can help me with the dependency & steps involved for building the mitmproxy source code on Windows 7 platform.\nI have pulled the mitmproxy source code from the below location.\nhttps://github.com/mitmproxy/mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2017-07-28T09:01:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "597": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2477", "issue_id": "#2477", "issue_summary": "xss_scanner.py issue", "issue_description": "mojtabamarashee commented on 27 Jul 2017\nhi\nin the function test_query_injection the body is converted to lower case (line 153) but in the get_SQLi_data function it is compared with upper case words (line 187) that results in no match\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2017-07-27T16:46:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "598": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2472", "issue_id": "#2472", "issue_summary": "[Helper] copy paste ruestion. not bug", "issue_description": "hhhaiai commented on 26 Jul 2017\nenv:\nmac os all version\ncopy need Fn+mouse left. what need I doing if Iwant modify.", "issue_status": "Closed", "issue_reporting_time": "2017-07-26T03:49:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "599": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2470", "issue_id": "#2470", "issue_summary": "Transitive import of mitmproxy.version causes warning", "issue_description": "Member\nKriechi commented on 25 Jul 2017 \u2022\nedited\nSince #1837, we import .script, will imports .flow, which imports .version.\nThis causes the following warning in pytest:\ntest/mitmproxy/test_version.py::test_version\n  /Users/kriechi/.pyenv/versions/3.5.3/lib/python3.5/runpy.py:125: \nRuntimeWarning: 'mitmproxy.version' found in sys.modules after import of package \n'mitmproxy', but prior to execution of 'mitmproxy.version'; this may result in \nunpredictable behaviour\n    warn(RuntimeWarning(msg))\n\n-- Docs: http://doc.pytest.org/en/latest/warnings.html\nNote\nThis next trap exists in all current versions of Python, including 3.3, and can be summed up in the following general guideline: \u201cNever add a package directory, or any directory inside a package, directly to the Python path\u201d.\nThe reason this is problematic is that every module in that directory is now potentially accessible under two different names: as a top level module (since the directory is on sys.path) and as a submodule of the package (if the higher level directory containing the package itself is also on sys.path).\nMaybe using the approach described here works better?", "issue_status": "Closed", "issue_reporting_time": "2017-07-25T09:03:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "600": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2468", "issue_id": "#2468", "issue_summary": "CI tracbacks in web app", "issue_description": "Member\nKriechi commented on 25 Jul 2017\nhttps://travis-ci.org/mitmproxy/mitmproxy/jobs/257041450#L1245\nTests pass but print multiple tracebacks.\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_clear PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_err ----------------------------------------\nError in processing of request from ('127.0.0.1', 39347)\nTraceback (most recent call last):\n  File \"/home/[secure]/build/mitmproxy/mitmproxy/mitmproxy/net/tcp.py\", line 893, in connection_thread\n    self.handle_client_connection(connection, client_address)\n  File \"/home/[secure]/build/mitmproxy/mitmproxy/pathod/pathod.py\", line 387, in handle_client_connection\n    h.handle()\n  File \"/home/[secure]/build/mitmproxy/mitmproxy/pathod/pathod.py\", line 255, in handle\n    alpn_select=self.server.ssloptions.alpn_select,\n  File \"/home/[secure]/build/mitmproxy/mitmproxy/mitmproxy/net/tcp.py\", line 812, in convert_to_ssl\n    **sslctx_kwargs)\n  File \"/home/[secure]/build/mitmproxy/mitmproxy/mitmproxy/net/tcp.py\", line 779, in create_ssl_context\n    context.use_certificate(cert.x509)\n  File \"/home/[secure]/build/mitmproxy/mitmproxy/.tox/py36/lib/python3.6/site-packages/OpenSSL/SSL.py\", line 831, in use_certificate\n    _raise_current_error()\n  File \"/home/[secure]/build/mitmproxy/mitmproxy/.tox/py36/lib/python3.6/site-packages/OpenSSL/_util.py\", line 54, in exception_from_error_queue\n    raise exception_type(errors)\nOpenSSL.SSL.Error: [('SSL routines', 'SSL_CTX_use_certificate', 'ee key too small')]\n----------------------------------------\nERROR:tornado.application:Uncaught exception GET / (127.0.0.1)\nHTTPServerRequest(protocol='http', host='localhost:34333', method='GET', uri='/', version='HTTP/1.1', remote_ip='127.0.0.1', headers={'Connection': 'close', 'Host': 'localhost:34333', 'Accept-Encoding': 'gzip'})\nTraceback (most recent call last):\n  File \"/home/[secure]/build/mitmproxy/mitmproxy/.tox/py36/lib/python3.6/site-packages/tornado/web.py\", line 1509, in _execute\n    result = method(*self.path_args, **self.path_kwargs)\n  File \"/opt/python/3.6.2/lib/python3.6/unittest/mock.py\", line 939, in __call__\n    return _mock_self._mock_call(*args, **kwargs)\n  File \"/opt/python/3.6.2/lib/python3.6/unittest/mock.py\", line 995, in _mock_call\n    raise effect\nRuntimeError\nERROR:tornado.access:500 GET / (127.0.0.1) 2.58ms\nPASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_events PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_filter_help PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_flow_content WARNING:tornado.general:400 GET /flows/42/response/content (127.0.0.1): No content.\nWARNING:tornado.access:400 GET /flows/42/response/content (127.0.0.1) 1.10ms\nPASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_flow_content_view PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_flow_delete WARNING:tornado.general:404 DELETE /flows/1234 (127.0.0.1): Flow not found.\nWARNING:tornado.access:404 DELETE /flows/1234 (127.0.0.1) 1.10ms\nPASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_flow_duplicate PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_flow_replay WARNING:tornado.general:400 POST /flows/42/replay (127.0.0.1): out of replays\nWARNING:tornado.access:400 POST /flows/42/replay (127.0.0.1) 2.51ms\nPASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_flow_revert PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_flow_update WARNING:tornado.general:400 PUT /flows/42 (127.0.0.1): Unknown update foo: 42\nWARNING:tornado.access:400 PUT /flows/42 (127.0.0.1) 2.27ms\nWARNING:tornado.general:400 PUT /flows/42 (127.0.0.1): Unknown update request.foo: 42\nWARNING:tornado.access:400 PUT /flows/42 (127.0.0.1) 2.29ms\nWARNING:tornado.general:400 PUT /flows/42 (127.0.0.1): Unknown update response.foo: 42\nWARNING:tornado.access:400 PUT /flows/42 (127.0.0.1) 2.23ms\nWARNING:tornado.general:400 PUT /flows/42 (127.0.0.1): Invalid Content-Type, expected application/json.\nWARNING:tornado.access:400 PUT /flows/42 (127.0.0.1) 2.19ms\nWARNING:tornado.general:400 PUT /flows/42 (127.0.0.1): Malformed JSON: Expecting value: line 1 column 1 (char 0)\nWARNING:tornado.access:400 PUT /flows/42 (127.0.0.1) 2.39ms\nPASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_flows PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_flows_dump PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_generate_tflow_js PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_index PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_kill PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_option_update WARNING:tornado.general:400 PUT /options (127.0.0.1): 'Unknown options: wtf'\nWARNING:tornado.access:400 PUT /options (127.0.0.1) 0.98ms\nWARNING:tornado.general:400 PUT /options (127.0.0.1): Expected <class 'bool'> for anticache, but got <class 'str'>.\nWARNING:tornado.access:400 PUT /options (127.0.0.1) 5.97ms\nPASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_options PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_resume PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_settings PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_settings_update WARNING:tornado.general:400 PUT /settings (127.0.0.1): Unknown setting wtf\nWARNING:tornado.access:400 PUT /settings (127.0.0.1) 0.94ms\nPASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_update_flow_content PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_update_flow_content_multipart PASSED\ntest/mitmproxy/tools/web/test_app.py::TestApp::test_websocket {'resource': 'options', 'cmd': 'update', 'data': {'anticomp': {'type': 'bool', 'default': False, 'value': True, 'help': 'Try to convince servers to send us un-compressed data.', 'choices': None}}}\nPASSED\ntest/mitmproxy/tools/web/test_master.py::TestWebMaster::test_basic Addon error: Traceback (most recent call last):\n  File \"/home/[secure]/build/mitmproxy/mitmproxy/mitmproxy/addons/allowremote.py\", line 17, in clientconnect\n    address = layer.client_conn.address\nAttributeError: 'ClientConnection' object has no attribute 'client_conn'\nAddon error: Traceback (most recent call last):\n  File \"/home/[secure]/build/mitmproxy/mitmproxy/mitmproxy/addons/allowremote.py\", line 17, in clientconnect\n    address = layer.client_conn.address\nAttributeError: 'ClientConnection' object has no attribute 'client_conn'\nAddon error: Traceback (most recent call last):\n  File \"/home/[secure]/build/mitmproxy/mitmproxy/mitmproxy/addons/allowremote.py\", line 17, in clientconnect\n    address = layer.client_conn.address\nAttributeError: 'ClientConnection' object has no attribute 'client_conn'\nPASSED", "issue_status": "Closed", "issue_reporting_time": "2017-07-24T21:04:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "601": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2465", "issue_id": "#2465", "issue_summary": "Export flow as python code", "issue_description": "Contributor\nritiek commented on 24 Jul 2017\nAFAIK, there used to be this feature for exporting flow as python code using requests. I can't seem to find it now. I could only see options to export as curl or raw after pressing e. Did something happen to it or am I missing something?\nSystem information\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.5.3\nPlatform: Linux-4.10.0-28-generic-x86_64-with-Ubuntu-17.04-zesty\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 17.04 zesty", "issue_status": "Closed", "issue_reporting_time": "2017-07-24T13:59:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "602": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2464", "issue_id": "#2464", "issue_summary": "Postpone establishing connection with server", "issue_description": "Contributor\nmengbiping commented on 24 Jul 2017\nHi, I use mitmproxy in upstream mode as a flow replayer by loading a couple scripts and resource files. It's never intended to deliver a request to remote server. Everything is ok except that, although each of the canned responses (loaded from a file on the disk) is correctly returned to the client, it actually makes connection to remote server on each of the flow via the upstream proxy server I configured in the cmd line, which is totally unnecessary and time-wasting in my senario.\nWould it be possible to postpone the establishing of connection with server (after the request() hook has been revoked) so that my upstream mitmproxy server can run with a dummy -U flag, which don't have to be a real proxy server at all, as it never should really forward a request/establish a connection to remote server?", "issue_status": "Closed", "issue_reporting_time": "2017-07-24T11:12:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "603": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2461", "issue_id": "#2461", "issue_summary": "SSL cert not working for IE8 on windows XP", "issue_description": "mbande commented on 22 Jul 2017\nI installed the p12 cert to a windows XP virtual machine, but unfortunately https sites are not working\nthis is very strange, as mitmproxy is installed in Trusted Root CAs, but browser complains about the issuer.\nI wonder if it's related to windows XP only, or all versions of windows are affected.\nunder my linux box, everything is ok.", "issue_status": "Closed", "issue_reporting_time": "2017-07-22T06:17:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "604": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2458", "issue_id": "#2458", "issue_summary": "While Image Upload it Crashed", "issue_description": "amankumarjain commented on 21 Jul 2017\nRequest to send body with image file\nTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\nself.loop.run()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\nself.event_loop.run()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\nself._loop()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\nself._watch_filesfd\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in\nevent_loop, callback, self.get_available_raw_input())\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\ncallback(processed, processed_codes)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\nself.process_input(keys)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\nk = self._topmost_widget.keypress(self.screen_size, k)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\nk = super().keypress(size, k)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1128, in keypress\nreturn self.body.keypress( (maxcol, remaining), key )\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 417, in keypress\nreturn urwid.ListBox.keypress(self, size, key)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/listbox.py\", line 985, in keypress\nkey = focus_widget.keypress((maxcol,),key)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 238, in keypress\nself.master.view_flow(self.flow)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 374, in view_flow\nflowview.help_context\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/blinker/base.py\", line 267, in send\nfor receiver in self.receivers_for(sender)]\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/blinker/base.py\", line 267, in\nfor receiver in self.receivers_for(sender)]\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 141, in sig_push_view_state\nself.loop.draw_screen()\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 578, in draw_screen\ncanvas = self._topmost_widget.render(self.screen_size, focus=True)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 141, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1083, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 141, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/decoration.py\", line 225, in render\ncanv = self._original_widget.render(size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 141, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 1750, in render\ncanv = get_delegate(self).render(size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 141, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1083, in render\nfocus and self.focus_part == 'body')\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 141, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/listbox.py\", line 485, in render\ncanvas = widget.render((maxcol,))\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 141, in cached_render\ncanv = fn(self, size, focus=focus)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/widget.py\", line 1007, in render\nreturn apply_text_layout(text, attr, trans, maxcol)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/canvas.py\", line 1313, in apply_text_layout\nreturn TextCanvas(t, a, c, maxcol=maxcol)\nFile \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/canvas.py\", line 356, in init\nraise CanvasError(\"Canvas text is wider than the maxcol specified \\n%r\\n%r\\n%r\"%(maxcol,widths,text))\nurwid.canvas.CanvasError: Canvas text is wider than the maxcol specified", "issue_status": "Closed", "issue_reporting_time": "2017-07-20T20:23:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "605": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2456", "issue_id": "#2456", "issue_summary": "Embrace Cryptography 2.0: Drop Support for old OpenSSL", "issue_description": "Member\nmhils commented on 20 Jul 2017 \u2022\nedited by Kriechi\nNow that cryptography has shipped their fabulous 2.0 release with Linux/OSX wheels, I think we can drop everything that assumes old OpenSSL versions.\nRemove code specific to old OpenSSL versions, e.g. we can now assume ALPN support.\nRemove OPENSSL_OLD tests from CI (#2466)\n1\n1", "issue_status": "Closed", "issue_reporting_time": "2017-07-20T13:54:46Z", "fixed_by": "#2469", "pull_request_summary": "nuke old openssl", "pull_request_description": "Member\nKriechi commented on 25 Jul 2017\ncloses #2456", "pull_request_status": "Merged", "issue_fixed_time": "2017-07-25T19:57:55Z", "files_changed": [["2", "mitmproxy/addons/__init__.py"], ["17", "mitmproxy/addons/check_alpn.py"], ["47", "mitmproxy/net/tcp.py"], ["2", "mitmproxy/tools/main.py"], ["42", "mitmproxy/utils/version_check.py"], ["8", "pathod/pathoc.py"], ["13", "test/conftest.py"], ["23", "test/mitmproxy/addons/test_check_alpn.py"], ["96", "test/mitmproxy/data/no_common_name.pem"], ["41", "test/mitmproxy/net/test_tcp.py"], ["12", "test/mitmproxy/proxy/protocol/test_http2.py"], ["25", "test/mitmproxy/utils/test_version_check.py"], ["4", "test/pathod/protocols/test_http2.py"], ["15", "test/pathod/test_pathoc.py"], ["6", "test/pathod/test_pathod.py"]]}, "606": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2453", "issue_id": "#2453", "issue_summary": "raceback", "issue_description": "stempelo commented on 20 Jul 2017\nSteps to reproduce the problem:\nMitmproxy set with\n./mitmproxy -U http://AAAA.XXXX.it:82 -p 82\nraceback (most recent call last):\nFile \"mitmproxy/net/tcp.py\", line 190, in write\nGET http://XXXXXXXXXXXXXXX.trendmicro.com/T/128/XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\u2190 200 text/html 156b 147ms\nHEAD http://XXXXXXX.XXXXXXXXXX.it/OAB/XXXXXXXXXXXXXX477e-b272-0f36bb61aa01/oab.xml\n\u2190 503 text/html [no content] 158ms\nTraceback (most recent call last):\nFile \"mitmproxy/proxy/modes/http_proxy.py\", line 23, in call\nAny other comments? What have you tried so far?\nMitm continues to work, not crash\nSystem information\nMitmproxy version: 2.0.2 (release version) Precompiled Binary\nPython version: 3.5.2\nPlatform: Linux-4.8.0-58-generic-x86_64-with-debian-stretch-sid\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nLinux distro: debian stretch/sid", "issue_status": "Closed", "issue_reporting_time": "2017-07-20T08:03:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "607": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2450", "issue_id": "#2450", "issue_summary": "Options: Distinguish between user-set value and default.", "issue_description": "Member\nmhils commented on 19 Jul 2017 \u2022\nedited by MatthewShao\nIt would be very useful to distinguish between options that have been explicitly set by a user and options with default values. For example, Firefox's about:config prints all user-set options bold:\nThis distinction is useful so that we can offer a save button in mitmweb, that saves all user-set options into a config file on disk.\nSteps:\nSee how we can distinguish default from user-set options. Is it just enough to compare .default to .value or something like this?\nIndicate state in mitmproxy\nIndicate state in mitmweb\nOffer save button?", "issue_status": "Closed", "issue_reporting_time": "2017-07-19T14:06:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "608": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2448", "issue_id": "#2448", "issue_summary": "Options: Improve flow_detail and verbosity options.", "issue_description": "Member\nmhils commented on 19 Jul 2017\nflow_detail and verbosity are currently specified as being integers. The UX of those options is terrible at the moment: there's neither an indication of allowed values nor an explanation on what those values would do.\n$ mitmdump --options\n# Log verbosity. Type int.\nverbosity: 2\nI would propose to make them somewhat useful choices instead of ints. This can hardly be fixed by extending the help text alone, see the help text style guidelines.", "issue_status": "Closed", "issue_reporting_time": "2017-07-19T13:52:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "609": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2447", "issue_id": "#2447", "issue_summary": "WebSocket frame decoding issues", "issue_description": "hgarrereyn commented on 19 Jul 2017\nOverview\nI'm trying to proxy a websocket connection between my Slack web client (on Chrome) and the Slack servers.\nUsing the chrome dev tools, I can see JSON serialized text frames being sent back and forth over the socket connection. Eg:\nI've set up a simple script using the websocket api to log messages as they come through the proxy:\nfrom mitmproxy import ctx, websocket\n\ndef websocket_message(flow: websocket.WebSocketFlow) -> None:\n    ctx.log.info(flow.messages[-1])\nHowever, as the messages pass through the proxy, only messages I am receiving show up correctly.\nFrames that the client is about to send show up as raw binary data instead of the expected serialized json text data.\nHere is an excerpt of the logs for the same websocket connection as the image above:\n>> send: text message: b'\\xaaV*\\xa9,HU\\xb2\\x02Q\\x99y\\xe9J:J\\xc9\\x19\\x89yy\\xa99@!\\x173G\\x0f\\xafPo/G\\xa0hf\\x8a\\x92\\x95\\xa1\\x99\\x89\\xb9a-\\x00'\n>> send: text message: b'\\xaaV*\\xa9,HU\\xb2R\\xcaM-.NLOU\\xd2QJ\\xceH\\xcc\\xcbK\\xcd\\x01\\x8a\\xb9\\x989zx\\x85z{9\\x02EKR+J\\x80BYi@vf\\x8a\\x92\\x95\\xa1\\x99\\x89\\xb9Q-\\x00'\n<< recv: text message: b'{\"ok\":true,\"reply_to\":16472,\"ts\":\"1500471034.628876\",\"text\":\"jf\"}'\n>> send: text message: b'\\xaaV*\\xa9,HU\\xb2R*\\xc8\\xccKW\\xd2Q\\xcaLQ\\xb224317\\xae\\x05\\x00'\n<< recv: text message: b'{\"type\":\"pong\",\"reply_to\":16473}'\n>> send: text message: b'\\xaaV*\\xa9,HU\\xb2R*\\xc8\\xccKW\\xd2Q\\xcaLQ\\xb224317\\xa9\\x05\\x00'\n>> send: text message: b'\\xaaV*\\xa9,HU\\xb2R*\\xc9L\\xce\\xceIU\\xd2Q\\xcaLQ\\xb224317\\xad\\x05\\x00'\n<< recv: text message: b'{\"type\":\"pong\",\"reply_to\":16474}'\n>> send: text message: b'\\xaaV*\\xa9,HU\\xb2R*\\xc8\\xccKW\\xd2Q\\xcaLQ\\xb224317\\xab\\x05\\x00'\n<< recv: text message: b'{\"type\":\"pong\",\"reply_to\":16476}'\nWhen I tried proxying the same application with Charles, the frames appeared correctly both ways.\nSteps to reproduce the problem:\nRun mitmproxy with the script provided above\nOpen the Slack web client on Chrome and then open the network pane in dev tools\nMonitor the network pane and mitmproxy event log for discrepancies in frame encoding\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.2\nPlatform: Darwin-16.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f 25 May 2017\nMac version: 10.12.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-07-19T13:50:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "610": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2446", "issue_id": "#2446", "issue_summary": "The mitmproxy crashes with mouse handling on!", "issue_description": "amit-gshe commented on 19 Jul 2017\nHi all, the mitmproxy crashed when started it on my archlinux system and it details as follow:\n$ mitmproxy \nTraceback (most recent call last):\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 703, in _loop\n    ready, w, err = select.select(fds, [], fds, timeout)\nOSError: [Errno 9] Bad file descriptor\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments? What have you tried so far?\nThe mitmweb works well\nSystem information\n$ mitmproxy --version\nMitmproxy version: 2.0.2 (release version) \nPython version: 3.6.1\nPlatform: Linux-4.11.9-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.1.0f  25 May 2017\nLinux distro: arch\nPlease let me know how to provide more details. Thanks.", "issue_status": "Closed", "issue_reporting_time": "2017-07-19T02:01:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "611": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2445", "issue_id": "#2445", "issue_summary": "Problem with glibc", "issue_description": "paskyorg commented on 19 Jul 2017\nSteps to reproduce the problem:\nI downloaded mitmproxy-2.0.2-linux.tar.gz and untar it.\nI ran ./mitmdump or ./mitmproxy and I got error either with glibc-2.14 and glibc-2.15.\nAny other comments? What have you tried so far?\nAfter first problem, I downloaded glibc 2.14 and compiled it in /opt/glibc-2.14, because my linux has glibc-2.12. Before, when it fails again, I downloaded glibc 2.15, and it fails again.\nSystem information\nCentos 6.8 with Python 3.5.3 installed from sources.\n ./mitmproxy\nError loading Python lib '/tmp/_MEIydkhSO/libpython3.5m.so.1.0': /lib64/libc.so.6: version `GLIBC_2.14' not found (required by /tmp/_MEIydkhSO/libpython3.5m.so.1.0)\n\n# export LD_LIBRARY_PATH=/opt/glibc-2.14/lib\n# ./mitmproxy\nTraceback (most recent call last):\n  File \"site-packages/PyInstaller/loader/rthooks/pyi_rth_pkgres.py\", line 11, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/rtool/lib/python3.5/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 389, in load_module\n  File \"site-packages/pkg_resources/__init__.py\", line 33, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/rtool/lib/python3.5/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 389, in load_module\n  File \"platform.py\", line 117, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/rtool/lib/python3.5/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 389, in load_module\n  File \"subprocess.py\", line 438, in <module>\n  File \"/home/travis/build/mitmproxy/mitmproxy/.tox/rtool/lib/python3.5/site-packages/PyInstaller/loader/pyimod03_importers.py\", line 573, in load_module\nImportError: /opt/glibc-2.14/lib/libc.so.6: version `GLIBC_2.15' not found (required by /tmp/_MEI4qJfox/select.so)\nFailed to execute script pyi_rth_pkgres\n\n# export LD_LIBRARY_PATH=/opt/glibc-2.15/lib\n# ./mitmproxy\nError loading Python lib '/tmp/_MEIlZpAhU/libpython3.5m.so.1.0': /lib64/libc.so.6: version `GLIBC_2.14' not found (required by /tmp/_MEIlZpAhU/libpython3.5m.so.1.0)", "issue_status": "Closed", "issue_reporting_time": "2017-07-18T19:07:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "612": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2444", "issue_id": "#2444", "issue_summary": "Improve Option UX", "issue_description": "Member\nmhils commented on 18 Jul 2017\nI did some work on the mitmweb options today and noted the following things:\nI feel that we should make flow_detail and verbosity choices instead of ints to increase their usability. It's not really clear at the moment what \"verbosity=2\" even means.\nThere are a whole bunch of options in mitmweb now which don't make sense for mitmweb (view_filter, keepserving, flow_detail, ...). Do we want to keep and ignore them, or are there better solutions? Maybe it's just enough to move them into addons that are only loaded by the respective tools?\nQuite a few options still don't support live editing. We really should fix as many as possible before the next release (@ujjwal96, maybe some easy tasks for you if you want?), For the proxy server options, this refs #2185 and the sans-io work.\nmitmweb currently does live-editing, i.e. if you type a character, we immediately try to update the option at the backend (there is throttling, but that's it). That is great for most options, but I wonder how we should treat cadir, which, if we would naively implement live edit support, would create a new CA dir for each character that gets typed. Similarly, rfile, which currently only reacts to running at startup. Maybe mark some options readonly during execution?", "issue_status": "Closed", "issue_reporting_time": "2017-07-17T22:42:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "613": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2442", "issue_id": "#2442", "issue_summary": "mimt.it", "issue_description": "Perterually commented on 17 Jul 2017 \u2022\nedited\nSteps to reproduce the problem:\nWeb access error 502 bad requests\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 2.0.2 (1.1.0dev0000-0xbed627a)\nPython version: 3.6.1\nPlatform: Linux-4.11.0-10-generic-x86_64-with-debian-stretch-sid\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: debian stretch/sid", "issue_status": "Closed", "issue_reporting_time": "2017-07-17T11:40:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "614": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2441", "issue_id": "#2441", "issue_summary": "TypeError: %d format: a number is required, not NoneType", "issue_description": "chenzx commented on 14 Jul 2017\nWhen i try to access flow.request.url in requestheaders event, something wrong happened:\n    def requestheaders(self, flow):\n        print(repr(flow.request.headers))\n        if not flow.request.url:\n            print(\"flow.request.url is None\")\n            return\n        if not flow.request.path:\n            print(\"flow.request.path is None\")\n            return\n        print(\"flow.request.url={} flow.request.path={}\".format(flow.request.url, flow.request.path))", "issue_status": "Closed", "issue_reporting_time": "2017-07-14T02:18:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "615": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2440", "issue_id": "#2440", "issue_summary": "Failed to implement a HTTP ALG, which is a reverse proxy plus rewriting non-upstream urls", "issue_description": "chenzx commented on 13 Jul 2017 \u2022\nedited\nSteps to reproduce the problem:\nI want to implement a special http-ALG, on the base of a reverse proxy, plus rewriting non-upstream urls (including server's 302 redirect urls, and urls in JSON response), but i failed:\nAny other comments? What have you tried so far?\nCmd line: mitmdump -R http://api.music.163.com -p 8888 -s mitmproxy-addon-http-ALG.py\n& Script code here\uff1a\n    from urllib.parse import urlparse\n    from mitmproxy import ctx\n\n    HTTP_ALG_PREFIX = \"http://192.168.99.245:8888/\"\n\n    def addPrefix(url):\n        if url.startswith(\"http://\") and not url.startswith(HTTP_ALG_PREFIX):\n            url = HTTP_ALG_PREFIX + url\n        return url\n\n    def removePrefix(url):\n        if url.startswith(HTTP_ALG_PREFIX):\n            url = url[len(HTTP_ALG_PREFIX):]\n        return url\n\n    class HttpALGCustom_RewriteNonUpstreamHostUrls:\n        def requestheaders(self, flow):\n            print(repr(flow.request.headers))\n            print(\"flow.request.url={} flow.request.path={}\".format(flow.request.url, flow.request.path))\n            path = flow.request.path\n            if path.startswith(\"/http://\"):\n                new_url = path[1:]\n                print(\"new_url={}\".format(new_url))\n                flow.request.url = new_url\n                #TODO: set Host from url?\n                o = urlparse(new_url)\n                print(\"modify request.headers.Host to {}\".format(o.netloc))\n                flow.request.headers[b\"Host\"] = o.netloc #mitmproxy\u4e0d\u652f\u6301\u5728addon\u91cc\u9762\u4fee\u6539Host\u5417\uff1f\n        \n        def responseheaders(self, flow):\n            location = flow.response.headers.get(\"Location\")\n            if location:\n                flow.response.headers[\"Location\"] = HTTP_ALG_PREFIX + location\n        \n        def response(self, flow):\n            bytes_content = flow.response.content\n            str_content = bytes_content.decode(\"utf8\")\n            if flow.request.path.startswith(\"/openapi\"):\n                str_content = str_content.replace(\"http://\", HTTP_ALG_PREFIX+\"http://\")\n            flow.response.content = str_content.encode(\"utf8\")\n        \n        def error(self, flow):\n            print(\"error: {}\".format(flow.error))\n\n\n    def start():\n        return HttpALGCustom_RewriteNonUpstreamHostUrls()\n        ", "issue_status": "Closed", "issue_reporting_time": "2017-07-13T16:22:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "616": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2439", "issue_id": "#2439", "issue_summary": "Error starting proxy server: OSError(10013, '\u4ee5\u4e00\u79cd\u8bbf\u95ee\u6743\u9650\u4e0d\u5141\u8bb8\u7684\u65b9\u5f0f\u505a\u4e86\u4e00\u4e2a\u8bbf\u95ee\u5957\u63a5\u5b57\u7684\u5c1d\u8bd5\u3002', None, 10013, None)", "issue_description": "chenzx commented on 13 Jul 2017\nSteps to reproduce the problem:\nI downloaded the 2.0.2 exe installer, & try to run mitmdump under venv on Windows 10, but failed\n`D:\\repo\\py3-webservice-http-ALG>venv\\Scripts\\activate\n(venv) D:\\repo\\py3-webservice-http-ALG>mitmdump\nError starting proxy server: OSError(10013, '\u4ee5\u4e00\u79cd\u8bbf\u95ee\u6743\u9650\u4e0d\u5141\u8bb8\u7684\u65b9\u5f0f\u505a\u4e86\u4e00\u4e2a\u8bbf\u95ee\u5957\u63a5\u5b57\u7684\u5c1d\u8bd5\u3002', None, 10013, None)\n(venv) D:\\repo\\py3-webservice-http-ALG>`\nAny other comments? What have you tried so far?\nI have tried to install mitmproxy via pip, but a utf8 decoding error caused pip install to fail\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2017-07-13T11:26:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "617": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2438", "issue_id": "#2438", "issue_summary": "When mitmproxy does content modification, can it obey the server's original encoding settings?", "issue_description": "chenzx commented on 13 Jul 2017\nIf the original html/json response content is\nContent-Encoding: gzip\nTransfer-Encoding: chunked\nencoded, and if it's modified by mitmproxy using addon scripts, then does the new response data client receives obey the same encoding settings (gzip+chunked)?\nI can't configure the mitmproxy to run on Windows 10, so i just post the question here.", "issue_status": "Closed", "issue_reporting_time": "2017-07-13T08:53:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "618": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2437", "issue_id": "#2437", "issue_summary": "How to use mitmproxy/mitmdump as a lib, not a command line tool?", "issue_description": "chenzx commented on 13 Jul 2017 \u2022\nedited\nI've found that if i want to build a custom http ALG(app-layer-gateway), which can:\n1\u3001act like a reverse proxy,\n2\u3001can modify the Host\u3001Referer header field of client request\u3001and Location of server 302 redirect\n3\u3001can modify the content of JSON response, to prefix all the http://... url with http://< my-mitmproxy-ip-port >/http://...\n4\u3001log all the original client request data and server response data\nThe doc doesn't say how to do this. It seems mitmproxy/mitmdump is expected to be used as a cmd tool, not a lib.\nCan anyone show me how to do this? I need a simple python script as a main driver...", "issue_status": "Closed", "issue_reporting_time": "2017-07-13T08:46:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "619": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2434", "issue_id": "#2434", "issue_summary": "Attempting a Connecting on Snapchat through iOS 10.2 throws TLS error. I assume its SSL?", "issue_description": "ghost commented on 11 Jul 2017\nSteps to reproduce the problem:\nConnect to mitmproxy through your phone.\nInstall Certificate through Safari\nAttempt to open Snapchat causing failure.\nAny other comments? What have you tried so far?\nI'm brand new to project so maybe I might have missed something. So far I've gotten everything up and running (most connections work through safari). Here is a log from the console:\nProxy server listening at http://0.0.0.0:8080\n192.168.1.6:53270: clientconnect\n192.168.1.6:53270: CONNECT app.snapchat.com:443\n << Cannot establish TLS with client (sni: app.snapchat.com): TlsException(\"(-1, 'Unexpected EOF')\",)\n192.168.1.6:53270: clientdisconnect\n192.168.1.6:53271: clientconnect\nThanks for any help beforehand!\nSystem information\nMitmproxy version: 2.0.2 (release version) Precompiled Binary\nPython version: 3.5.3\nPlatform: Windows-10-10.0.15063\nSSL version: OpenSSL 1.0.2j  26 Sep 2016\nWindows version: 10 10.0.15063  Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2017-07-10T21:48:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "620": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2432", "issue_id": "#2432", "issue_summary": "Safari cannot open any pages when running mitmproxy", "issue_description": "fbessez commented on 9 Jul 2017\nSteps to reproduce the problem:\nrun mitmproxy from terminal\ngo to mitm.it to get certified --> Here it shows up as two GET requests to mitm.it as expected\nTHEN, I can't visit any other websites, as I just get a 'Safari cannot open the page because it could not establish a secure connection to the server'\nHow do I work around this??\nThank you very much!\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 2.0.2 (1.1.9dev0045-0xbef2c6c9b)\nPython version: 3.6.1\nPlatform: Darwin-16.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f 25 May 2017\nMac version: 10.12.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-07-09T12:13:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "621": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2425", "issue_id": "#2425", "issue_summary": "Linux issue", "issue_description": "NGTmeaty commented on 4 Jul 2017\nSteps to reproduce the problem:\n1.mitmproxy in terminal\n2.On mobile device, attempt to put proxy in.\n3.Device cannot connect to internet\nAny other comments? What have you tried so far?\nI've tried multiple wifis, a lot of things, also other proxy programs, I'm unsure what the problem is, any help would be awesome!\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.1\nPlatform: Linux-4.11.3-1-ARCH-x86_64-with-arch-17.1-ISO-Rolling\nSSL version: OpenSSL 1.1.0f 25 May 2017\nLinux distro: Antergos Linux 17.1 ISO-Rolling", "issue_status": "Closed", "issue_reporting_time": "2017-07-04T03:15:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "622": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2424", "issue_id": "#2424", "issue_summary": "Proxy the local loopback when machine is offline", "issue_description": "danielphillips commented on 4 Jul 2017\nI would love to be able to use mitmproxy whilst I am working on my local web server. The situations when I need this the most is for example when I'm offline (travelling by train home/to work), and I am running my mobile app on the simulator and have it pointed to a stubbing server which is running locally on my machine.\nMy server would be running on http://localhost:1338 and I am retrieving data from it to my app as expected.\nHowever having mitmproxy running I can't figure out how to capture that traffic (local loopback) things flow through mitmproxy if I'm connected to a network.\nSteps to reproduce the problem:\nDisconnect from your network (turn off wifi for example)\nRun a web server locally (say localhost:1338) with anything on it (placeholder file will do)\nRun mitmproxy\nGo to the browser/whatever rest client/app and hit the localhost to retrieve the file/endpoint\nAny other comments? What have you tried so far?\nN/A\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.1\nPlatform: Darwin-16.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.12.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-07-03T20:00:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "623": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2422", "issue_id": "#2422", "issue_summary": "Download Failed [iPhone 6S]", "issue_description": "Drakota commented on 1 Jul 2017 \u2022\nedited\nSteps to reproduce the problem:\nInstalled mitmproxy on Linux\nOpen it and assign proxy settings in iPhone\nGo to mitm.it (works), go to Apple, click Download -> Download Failed.\nHTTP domains works, but not HTTPS\nThanks for helping.\n2", "issue_status": "Closed", "issue_reporting_time": "2017-07-01T04:01:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "624": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2420", "issue_id": "#2420", "issue_summary": "Does mitmproxy provide something similar to apache httpd's ProxyPassReverseCookiePath", "issue_description": "ghost commented on 29 Jun 2017\nFirst of all thanks for the great piece of software. Makes reverse proxying so easy while testing dev environments.\nI am proxying a java application which uses jetty web server. I would like mitmproxy to rewrite my cookie path. So if the path of the java application is /dev and of the reverse proxy to be / I'd want this to be implcitly handled by mitmproxy like apache does. Is this already possible, did I miss an option? If not how could it be implemented?", "issue_status": "Closed", "issue_reporting_time": "2017-06-29T11:15:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "625": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2419", "issue_id": "#2419", "issue_summary": "Add an addon options example", "issue_description": "Member\nujjwal96 commented on 29 Jun 2017\nThe scripts_argument example was removed recently.\nAs discussed on slack, creating an issue so that this isn't overlooked", "issue_status": "Closed", "issue_reporting_time": "2017-06-28T18:46:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "626": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2417", "issue_id": "#2417", "issue_summary": "Console UI. Options help issue", "issue_description": "Member\nujjwal96 commented on 28 Jun 2017\nSteps to reproduce the problem:\nStart mitmproxy and go to options O\nSelect any option for which there's an overlay e.g. ignore_hosts, scripts\nPressing ? for help doesn't work. And when you press q\nIt will show the help for Options\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0647-0xbde6474)\nPython version: 3.5.2\nPlatform: Linux-4.9.0-040900-generic-x86_64-with-elementary-0.4.1-loki\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: \"elementary\" 0.4.1 loki", "issue_status": "Closed", "issue_reporting_time": "2017-06-27T22:06:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "627": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2415", "issue_id": "#2415", "issue_summary": "Portable version of mitmproxy - how to build a standalone package?", "issue_description": "grmpyninja commented on 27 Jun 2017\nIs it possible and how to approach creating a portable version of mitmproxy? I'd simply like to deploy it like e..g go binaries, without any additional dependencies and so on. Everything in a single package, dumped on a server and ready to go.\ndocker is good, but it requires installing docker itself\nI once tried pex to bundle everything, but it did not actually work - maybe I need to check it again if there is no other better alternative\nany other way to pack everything or build everything to a standalone package? How in general python packages should be deployed this way? without any dependencies and so on.", "issue_status": "Closed", "issue_reporting_time": "2017-06-27T12:55:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "628": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2414", "issue_id": "#2414", "issue_summary": "\"Palette\" function crashes application", "issue_description": "flarn2006 commented on 26 Jun 2017\nSteps to reproduce the problem:\nRun mitmproxy\nPress O, then P to select \"Palette\"\nObserve the crash.\nAny other comments? What have you tried so far?\nReally nothing else to say. Obvious bug, should be easily reproducible.\nSystem information\nMitmproxy version: 2.0.2 (release version) Precompiled Binary\nPython version: 3.5.2\nPlatform: Linux-4.4.0-75-generic-x86_64-with-debian-stretch-sid\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nLinux distro: debian stretch/sid", "issue_status": "Closed", "issue_reporting_time": "2017-06-26T15:14:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "629": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2409", "issue_id": "#2409", "issue_summary": "mitm.it different certs", "issue_description": "Contributor\nfulldecent commented on 24 Jun 2017\nPlease clarify, in program documentation, if mitm.it installs a certificate a different certificate for each user.\nIf not then basically anyone that also has the certificate can spoof any website on my phone.\nEither way is OK, but this should be clearly specified.", "issue_status": "Closed", "issue_reporting_time": "2017-06-23T19:38:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "630": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2407", "issue_id": "#2407", "issue_summary": "Add .ico content view", "issue_description": "Member\nmhils commented on 23 Jun 2017\n@GreyCat added a kaitai-struct parser for ICO files in kaitai-io/kaitai_struct_formats@22ecfbf.\nGiven that favicons are quite common in mitmproxy, adding this would be a fantastic addition to the project!", "issue_status": "Closed", "issue_reporting_time": "2017-06-23T09:31:10Z", "fixed_by": "#2411", "pull_request_summary": "ICO content view", "pull_request_description": "Member\nujjwal96 commented on 24 Jun 2017 \u2022\nedited\nAdded ico content view\ncloses #2407", "pull_request_status": "Merged", "issue_fixed_time": "2017-06-25T00:02:01Z", "files_changed": [["23", "mitmproxy/contentviews/image/image_parser.py"], ["10", "mitmproxy/contentviews/image/view.py"], ["90", "mitmproxy/contrib/kaitaistruct/ico.py"], ["2", "mitmproxy/contrib/kaitaistruct/make.sh"], ["0", "mitmproxy/contrib/tls_client_hello.ksy", "\u2192", "...contrib/kaitaistruct/tls_client_hello.ksy"], ["23", "test/mitmproxy/contentviews/image/test_image_parser.py"], ["3", "test/mitmproxy/contentviews/image/test_view.py"]]}, "631": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2405", "issue_id": "#2405", "issue_summary": "Pasting view filter with ~hq does not work", "issue_description": "idiotsavant commented on 21 Jun 2017 \u2022\nedited\nSteps to reproduce the problem:\nIn mitmproxy console, with a list of flows visible, press 'f' and type:\n~hq X-MyMessageTypes\nFlows are filtered as expected, to show only those where this request header is present.\npress 'f' again clear the filter so all flows are visible again\npress 'f' again and paste the following:\n~hq X-MyMessageTypes\nNo flows are displayed.\nTyping out the exact same filter works, whereas pasting it in does not. This isn't the case for other view filters such as ~d mydomain, which works either way.\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 2.0.1 (release version)\nPython version: 3.6.1\nPlatform: Darwin-16.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.12.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-06-20T23:52:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "632": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2404", "issue_id": "#2404", "issue_summary": "Limitations when using a GUI text editor with \"view body in external editor\" (v) option", "issue_description": "idiotsavant commented on 21 Jun 2017 \u2022\nedited\nSteps to reproduce the problem:\nOn MacOS, \"edit\" invokes TextWrangler from the terminal and \"atom\" invokes Atom. Both options work fine for opening files directly from the terminal.\nAfter setting $EDITOR and $PAGER in .bash_profile I can trigger both external editors from mitmproxy using 'v'. However, neither option works well.\n(A) using TextWrangler the contents of the body is correctly opened in TextWrangler. However, the file is read-only, making it impossible to apply JSON pretty-printing using a Text Filter without first doing a \"save as\".\n(B) using Atom the contents of the body do not arrive in Atom. An empty file opens in Atom instead, with a similar name and in the same directory as the one opened by TextWrangler. But the content is missing.\nAny other comments? What have you tried so far?\nThe reason I'm doing this is because I want to examine JSON from the body of particular requests in an external editor, and being able to pretty-print them easily (e.g. using the Beautify package for Atom) is key to being able to scan through the JSON quickly.\nSystem information\nMac OS Sierra 10.12.5\nmitmproxy installed via Homebrew\nMitmproxy version: 2.0.1 (release version)\nPython version: 3.6.1\nPlatform: Darwin-16.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.12.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-06-20T23:00:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "633": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2403", "issue_id": "#2403", "issue_summary": "TlsException (Unexpected EOF) when connecting to SSL", "issue_description": "SmashGuy2 commented on 20 Jun 2017\nHi, I've just install mitmproxy on Bananian. Using Python 3.5 and installed v2.0.2 release version via pip3. Connecting to non-SSL sites works just fine, but when I attempt to connect to SSL sites (google.com in this case), Chrome complains. mitmdump shows various TlsExceptions.\nI am posting the output below. The first errors were triggered as I was typing \"google.com\" into the address bar. When I pressed enter, I received a 301 error followed by the two final errors.\nAny help appreciated. Happy to provide whatever additional information I can.\nmitmdump -p 8181\nHTTP/2 is disabled because ALPN support missing!\nOpenSSL 1.0.2+ required to support HTTP/2 connections.\nUse --no-http2 to silence this warning.\nProxy server listening at http://0.0.0.0:8181\n192.168.101.154:52637: clientconnect\n192.168.101.154:52638: clientconnect\n192.168.101.154:52635: clientconnect\n192.168.101.154:52636: clientconnect\n192.168.101.154:52639: clientconnect\n192.168.101.154:52637: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52637: clientdisconnect\n192.168.101.154:52635: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52635: clientdisconnect\n192.168.101.154:52638: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52638: clientdisconnect\n192.168.101.154:52636: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52636: clientdisconnect\n192.168.101.154:52639: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52639: clientdisconnect\n192.168.101.154:52640: clientconnect\n192.168.101.154:52641: clientconnect\n192.168.101.154:52640: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52640: clientdisconnect\n192.168.101.154:52641: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52641: clientdisconnect\n192.168.101.154:52642: clientconnect\n192.168.101.154:52643: clientconnect\n192.168.101.154:52642: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52642: clientdisconnect\n192.168.101.154:52644: clientconnect\n192.168.101.154:52643: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52643: clientdisconnect\n192.168.101.154:52645: clientconnect\n192.168.101.154:52646: clientconnect\n192.168.101.154:52644: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52644: clientdisconnect\n192.168.101.154:52646: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52646: clientdisconnect\n192.168.101.154:52645: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52645: clientdisconnect\n192.168.101.154:52647: clientconnect\n192.168.101.154:52647: GET http://google.com/\n<< 301 Moved Permanently 219b\n192.168.101.154:52648: clientconnect\n192.168.101.154:52648: CONNECT www.google.com:443\n<< Cannot establish TLS with client (sni: www.google.com): TlsException(\"(-1, 'Unexpecte\nd EOF')\",)\n192.168.101.154:52648: clientdisconnect\n192.168.101.154:52649: clientconnect\n192.168.101.154:52649: CONNECT clients4.google.com:443\n<< Cannot establish TLS with client (sni: clients4.google.com): TlsException(\"(-1, 'Unex\npected EOF')\",)\n192.168.101.154:52649: clientdisconnect\nSystem information\n#mitmproxy --version\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.2\nPlatform: Linux-3.4.111-bananian-armv7l-with-debian-8.8\nSSL version: OpenSSL 1.0.1t 3 May 2016\nLinux distro: debian 8.8", "issue_status": "Closed", "issue_reporting_time": "2017-06-19T22:32:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "634": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2400", "issue_id": "#2400", "issue_summary": "Parallel usage of mode upstream and transparent", "issue_description": "mwiora commented on 14 Jun 2017\nHi all,\nI'm using the latest code version\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-62-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial\nand I have the following scenario:\n(www) <-- (proxy requiring auth) <-- (mitmproxy host) <-- (developer machine)\nTo achieve that the developer machine is not proxy-aware I would like to operate the mitmproxy host in transparent and upstream mode simultaneously.\nWith the current dev-version I'm able to operate the mitmproxy in upstream mode with the following command:\nmitmproxy -m upstream:http://x.x.x.x:8080\nbut as soon as I add \"-m transparent\" the upstream proxy setting is lost.\nIs there a way to combine both variants?\nCheers and thanks in advance for any reply,\nMatthias\n1", "issue_status": "Closed", "issue_reporting_time": "2017-06-14T12:16:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "635": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2399", "issue_id": "#2399", "issue_summary": "MITM Proxy Crashes on when editing a \"form\"", "issue_description": "Contributor\nograff commented on 14 Jun 2017 \u2022\nedited\nStack trace:\nTraceback (most recent call last):\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/master.py\", line 202, in run\n    self.loop.run()\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/window.py\", line 274, in keypress\n    k = fs.keypress(size, k)\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/urwid/container.py\", line 592, in keypress\n    *self.calculate_padding_filler(size, True)), key)\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/overlay.py\", line 117, in keypress\n    key = self.master.keymap.handle(\"chooser\", key)\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/keymap.py\", line 123, in handle\n    return self.executor(b.command)\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/commandeditor.py\", line 24, in __call__\n    ret = self.master.commands.call(cmd)\n  File \"/Users/ograff/mitmproxy/mitmproxy/command.py\", line 144, in call\n    return self.call_args(parts[0], parts[1:])\n  File \"/Users/ograff/mitmproxy/mitmproxy/command.py\", line 135, in call_args\n    return self.commands[path].call(args)\n  File \"/Users/ograff/mitmproxy/mitmproxy/command.py\", line 106, in call\n    ret = self.func(*pargs)\n  File \"/Users/ograff/mitmproxy/mitmproxy/command.py\", line 197, in wrapper\n    return function(*args, **kwargs)\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/consoleaddons.py\", line 125, in nav_select\n    self.master.inject_key(\"m_select\")\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/master.py\", line 178, in inject_key\n    self.loop.process_input([key])\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/window.py\", line 274, in keypress\n    k = fs.keypress(size, k)\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/urwid/container.py\", line 592, in keypress\n    *self.calculate_padding_filler(size, True)), key)\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/overlay.py\", line 120, in keypress\n    signals.pop_view_state.send(self)\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/Users/ograff/mitmproxy/venv/lib/python3.6/site-packages/blinker/base.py\", line 267, in <listcomp>\n    for receiver in self.receivers_for(sender)]\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/window.py\", line 207, in pop\n    if self.focus_stack().pop():\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/window.py\", line 81, in pop\n    self.call(\"layout_popping\")\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/window.py\", line 93, in call\n    getattr(self.top_window(), name)(*args, **kwargs)\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 463, in layout_popping\n    self.call(self._w, \"layout_popping\")\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 441, in call\n    f(*args, **kwargs)\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 313, in layout_popping\n    self.callback(self.data_out(res), *self.cb_args, **self.cb_kwargs)\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 456, in set_data_update\n    self.set_data(vals, flow)\n  File \"/Users/ograff/mitmproxy/mitmproxy/tools/console/grideditor/editors.py\", line 64, in set_data\n    flow.request.urlencoded_form = vals\n  File \"/Users/ograff/mitmproxy/mitmproxy/net/http/request.py\", line 462, in urlencoded_form\n    self._set_urlencoded_form(value)\n  File \"/Users/ograff/mitmproxy/mitmproxy/net/http/request.py\", line 444, in _set_urlencoded_form\n    self.content = mitmproxy.net.http.url.encode(form_data, self.content.decode()).encode()\n  File \"/Users/ograff/mitmproxy/mitmproxy/net/http/url.py\", line 81, in encode\n    if encoded[-1] == '=':\nIndexError: string index out of range\nmitmproxy has crashed!\nPlease lodge a bug report at:\nhttps://github.com/mitmproxy/mitmproxy\nShutting down...\nSteps to reproduce the problem:\nEnter a flow\nPress \"e\"\nSelect \"form\"\nAny other comments? What have you tried so far?\nencoded is an empty string but probably shouldn't be.\nChanging mitmproxy/net/http/url.py to just check for an empty string and not index into it if its empty results in an empty request body after exiting the editor.\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0631-0x30927468)\nPython version: 3.6.0\nPlatform: Darwin-16.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0f  25 May 2017\nMac version: 10.12.4 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-06-14T07:07:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "636": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2398", "issue_id": "#2398", "issue_summary": "mitmproxy always crashes", "issue_description": "mimizhang commented on 14 Jun 2017\nSteps to reproduce the problem:\nwhen I input big D(duplicate flow),the mitmproxy always crashes immediately,and throw errors like this:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 417, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/listbox.py\", line 987, in keypress\n    self.make_cursor_visible((maxcol,maxrow))\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/listbox.py\", line 939, in make_cursor_visible\n    focus_widget, pos = self.body.get_focus()\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 284, in get_focus\n    f = FlowItem(self.master, self.master.view.focus.flow)\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 123, in __init__\n    w = self.get_text()\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 132, in get_text\n    max_url_len=cols,\n  File \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/common.py\", line 427, in format_flow\n    acked = f.reply.state == \"committed\",\nAttributeError: 'NoneType' object has no attribute 'state'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...\nmy version information is:\nMitmproxy version: 2.0.1 (release version) \nPython version: 3.6.1\nPlatform: Darwin-16.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e  16 Feb 2017\nMac version: 10.12.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-06-14T02:21:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "637": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2396", "issue_id": "#2396", "issue_summary": "Better JavaScript beautification", "issue_description": "Member\ncortesi commented on 14 Jun 2017\nThe Javascript beautifier is currently very slow, and is a major performance/usability issue in the console app. What the user sees when switching to a JavaScript flow is a long - sometimes seconds-long - hang before responsiveness returns.\nWe have a plan to fix this - our contentviews should be lazy, and only prettify lines as requested. HTML has been fixed to work this way, and the implementation can be viewed here.", "issue_status": "Closed", "issue_reporting_time": "2017-06-13T19:52:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "638": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2391", "issue_id": "#2391", "issue_summary": "about libmproxy", "issue_description": "ldbfpiaoran commented on 12 Jun 2017\nSteps to reproduce the problem:\nI am going to do a passive scan project recently.So found this great third-party library.But I have a problem with calling pymproxy on the python3 extension api libmproxy. Unfortunately, I did not find it, but my English was bad. Would like to ask in python3 there is no similar api. Many thanks\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2017-06-12T07:56:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "639": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2383", "issue_id": "#2383", "issue_summary": "Get original host, scheme or url", "issue_description": "2tunnels commented on 9 Jun 2017\nI'm using mitmdump as reverse proxy with script. How can I get original (or incoming) request host.\nFor example: http://mysite.com/something => https://example.com/something\nNow flow.request.host == example.com, flow.request.url == https://example.com/something\nI need to get mysite.com and http://mysite.com/something as well.", "issue_status": "Closed", "issue_reporting_time": "2017-06-09T08:19:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "640": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2382", "issue_id": "#2382", "issue_summary": "Re-add --raw-tcp/--rawtcp functionality", "issue_description": "Caligatio commented on 8 Jun 2017\nIt appears that support for --raw-tcp (apparently now possibly renamed to --rawtcp) was removed in commit fbaade4 citing a move to \"explicit control\" instead. As far as I can tell it was just removed without a replacement. Was this intentional and, if so, is there any plan to re-add something like it?\nUnderstandably it's difficult to definitely say whether something is raw TCP vs. HTTP but you could check against standard HTTP verbs and fallback to TCP if they're not found.", "issue_status": "Closed", "issue_reporting_time": "2017-06-08T12:27:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "641": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2381", "issue_id": "#2381", "issue_summary": "Crash when trying to change ignore_hosts value", "issue_description": "Member\nujjwal96 commented on 6 Jun 2017\nSteps to reproduce the problem:\nStart mitmproxy\nPress O\nGo to ignore_hosts and press Enter\n...\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/window.py\", line 226, in keypress\n    k = fs.keypress(size, k)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/options.py\", line 299, in keypress\n    return self.focus_item.keypress(tsize, key)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/options.py\", line 235, in keypress\n    HELP_HEIGHT + 5\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/overlay.py\", line 131, in __init__\n    self.ge = grideditor.OptionsEditor(master, name, vals)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/grideditor/editors.py\", line 284, in __init__\n    super().__init__(master, [[i] for i in vals], self.callback)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 440, in __init__\n    **cb_kwargs\nTypeError: __init__() takes 2 positional arguments but 6 were given\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0572-0x60f2d37)\nPython version: 3.5.2\nPlatform: Linux-4.9.0-040900-generic-x86_64-with-elementary-0.4.1-loki\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: \"elementary\" 0.4.1 loki", "issue_status": "Closed", "issue_reporting_time": "2017-06-06T14:10:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "642": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2380", "issue_id": "#2380", "issue_summary": "AttributeError: cffi library '_openssl' has no function, constant or global variable named 'Cryptography_HAS_EVP_PKEY_DHX'", "issue_description": "timdp commented on 6 Jun 2017\nSteps to reproduce the problem:\npip3 install --upgrade mitmproxy\nmitmdump\nCrash with _AttributeError: cffi library 'openssl' has no function, constant or global variable named 'Cryptography_HAS_EVP_PKEY_DHX'\nSystem information\nPython 3.5.2 on Ubuntu 16.04\nOutput of pip3 install:\nSuccessfully installed PyYAML-3.12 argh-0.26.2 asn1crypto-0.22.0 blinker-1.4 brotlipy-0.6.0 certifi-2017.4.17 cffi-1.10.0 chardet-3.0.3 click-6.7 construct-2.8.12 cryptography-1.7.2 cssutils-1.0.1 editorconfig-0.12.1 h2-2.6.2 hpack-2.3.0 html2text-2016.9.19 hyperframe-4.0.2 idna-2.2 jsbeautifier-1.6.4 kaitaistruct-0.6 mitmproxy-1.0.2 packaging-16.8 passlib-1.7.1 pathtools-0.1.2 pyOpenSSL-16.2.0 pyasn1-0.1.9 pycparser-2.17 pyparsing-2.2.0 pyperclip-1.5.27 requests-2.13.0 ruamel.yaml-0.13.14 setuptools-34.1.0 six-1.10.0 sortedcontainers-1.5.7 tornado-4.4.2 urllib3-1.21.1 urwid-1.3.1 watchdog-0.8.3\nIt worked before, so I guess some dependency is outdated? Any suggestions on where to look? Thanks!", "issue_status": "Closed", "issue_reporting_time": "2017-06-06T14:00:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "643": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2377", "issue_id": "#2377", "issue_summary": "Crash when clearing event log", "issue_description": "Member\nujjwal96 commented on 6 Jun 2017 \u2022\nedited\nSteps to reproduce the problem:\nPress E\nPress z\n...\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/window.py\", line 226, in keypress\n    k = fs.keypress(size, k)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/eventlog.py\", line 26, in keypress\n    self.master.clear_events()\nAttributeError: 'ConsoleMaster' object has no attribute 'clear_events'\nAny other comments? What have you tried so far?\nCaused by:\n0f4d94b\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0564-0x0d7b718)\nPython version: 3.5.2\nPlatform: Linux-4.9.0-040900-generic-x86_64-with-elementary-0.4.1-loki\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: \"elementary\" 0.4.1 loki", "issue_status": "Closed", "issue_reporting_time": "2017-06-05T19:17:39Z", "fixed_by": "#2378", "pull_request_summary": "Fixes #2377 #2323", "pull_request_description": "Member\nujjwal96 commented on 6 Jun 2017 \u2022\nedited by Kriechi\nFixes issue of crash on clearing event log and using mouse to view flow details.\nfixes #2377\nfixes #2323", "pull_request_status": "Merged", "issue_fixed_time": "2017-06-05T22:33:58Z", "files_changed": [["2", "mitmproxy/tools/console/eventlog.py"], ["2", "mitmproxy/tools/console/flowlist.py"]]}, "644": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2372", "issue_id": "#2372", "issue_summary": "cffi library '_openssl' has no function, constant or global variable named 'Cryptography_HAS_...'", "issue_description": "mw3hner commented on 4 Jun 2017\nHello,\nbecause of some new features, which aren't in version 2.0.2,\nI installed mitmproxy from master by:\ngit clone https://github.com/mitmproxy/mitmproxy.git\ncd mitmproxy\npip install --src . -r requirements.txt\nBut when I start mitmproxy, I get:\nTraceback (most recent call last):\n  File \"/home/mitm/.local/bin/mitmproxy\", line 7, in <module>\n    from mitmproxy.tools.main import mitmproxy\n  File \"/home/mitm/.local/lib/python3.5/site-packages/mitmproxy/__init__.py\", line 3, in <module>\n    from . import script  # noqa\n  File \"/home/mitm/.local/lib/python3.5/site-packages/mitmproxy/script/__init__.py\", line 1, in <module>\n    from .concurrent import concurrent\n  File \"/home/mitm/.local/lib/python3.5/site-packages/mitmproxy/script/concurrent.py\", line 6, in <module>\n    from mitmproxy import eventsequence\n  File \"/home/mitm/.local/lib/python3.5/site-packages/mitmproxy/eventsequence.py\", line 2, in <module>\n    from mitmproxy import http\n  File \"/home/mitm/.local/lib/python3.5/site-packages/mitmproxy/http.py\", line 4, in <module>\n    from mitmproxy import flow\n  File \"/home/mitm/.local/lib/python3.5/site-packages/mitmproxy/flow.py\", line 6, in <module>\n    from mitmproxy import connections\n  File \"/home/mitm/.local/lib/python3.5/site-packages/mitmproxy/connections.py\", line 7, in <module>\n    from mitmproxy import certs\n  File \"/home/mitm/.local/lib/python3.5/site-packages/mitmproxy/certs.py\", line 11, in <module>\n    import OpenSSL\n  File \"/home/mitm/.local/lib/python3.5/site-packages/OpenSSL/__init__.py\", line 8, in <module>\n    from OpenSSL import rand, crypto, SSL\n  File \"/home/mitm/.local/lib/python3.5/site-packages/OpenSSL/rand.py\", line 12, in <module>\n    from OpenSSL._util import (\n  File \"/home/mitm/.local/lib/python3.5/site-packages/OpenSSL/_util.py\", line 6, in <module>\n    from cryptography.hazmat.bindings.openssl.binding import Binding\n  File \"/home/mitm/.local/lib/python3.5/site-packages/cryptography/hazmat/bindings/openssl/binding.py\", line 156, in <module>\n    Binding.init_static_locks()\n  File \"/home/mitm/.local/lib/python3.5/site-packages/cryptography/hazmat/bindings/openssl/binding.py\", line 137, in init_static_locks\n    cls._ensure_ffi_initialized()\n  File \"/home/mitm/.local/lib/python3.5/site-packages/cryptography/hazmat/bindings/openssl/binding.py\", line 124, in _ensure_ffi_initialized\n    cls.lib = build_conditional_library(lib, CONDITIONAL_NAMES)\n  File \"/home/mitm/.local/lib/python3.5/site-packages/cryptography/hazmat/bindings/openssl/binding.py\", line 84, in build_conditional_library\n    if not getattr(lib, condition):\nAttributeError: cffi library '_openssl' has no function, constant or global variable named 'Cryptography_HAS_X25519'\nAlso when I install it from wheel from: https://snapshots.mitmproxy.org/v3.0.0/\nDoes someone else get it too?\nSystem information\nUbuntu 16.04", "issue_status": "Closed", "issue_reporting_time": "2017-06-03T23:47:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "645": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2371", "issue_id": "#2371", "issue_summary": "Traceback (most recent call last):", "issue_description": "JonhSilver commented on 3 Jun 2017\nTraceback (most recent call last):\nFile \"pymultitor/examples/on_string/b.py\", line 117, in\nprocess = execute_pymultitor()\nFile \"pymultitor/examples/on_string/b.py\", line 23, in execute_pymultitor\npymultitor_module = imp.load_source('pymultitor', pymultitor_path)\nFile \"c:\\Python27\\pymultitor\\pymultitor.py\", line 19, in\nfrom mitmproxy.proxy import ProxyServer, ProxyConfig\nFile \"c:\\Python27\\lib\\site-packages\\mitmproxy\\proxy_init_.py\", line 4, in <\nmodule>\nfrom .root_context import RootContext\nFile \"c:\\Python27\\lib\\site-packages\\mitmproxy\\proxy\\root_context.py\", line 8,\nin\nfrom mitmproxy import controller\nFile \"c:\\Python27\\lib\\site-packages\\mitmproxy\\controller.py\", line 9, in\nfrom mitmproxy import addons\nFile \"c:\\Python27\\lib\\site-packages\\mitmproxy\\addons_init_.py\", line 3, in\n\nfrom mitmproxy.addons import check_alpn\nFile \"c:\\Python27\\lib\\site-packages\\mitmproxy\\addons\\check_alpn.py\", line 2, i\nn\nfrom mitmproxy.net import tcp\nFile \"c:\\Python27\\lib\\site-packages\\mitmproxy\\net\\tcp.py\", line 987\nprint(u'-' * 40, file=fp)\n^\nSyntaxError: invalid syntax", "issue_status": "Closed", "issue_reporting_time": "2017-06-03T14:04:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "646": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2370", "issue_id": "#2370", "issue_summary": "How to MITM specific domain?", "issue_description": "ghost commented on 3 Jun 2017\nHow can I MITM just one specific domain? I don't mean filtering out results just to show a single domain, I mean leaving all domain traffic untouched except for one domain.", "issue_status": "Closed", "issue_reporting_time": "2017-06-02T21:55:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "647": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2368", "issue_id": "#2368", "issue_summary": "https proxy Private certificate response 502 error", "issue_description": "topperun commented on 2 Jun 2017\nwhen i proxy a web like https://10.1.8.4:443 ,the server response \"TlsProtocolException(\"Cannot establish TLS with 10.1.8.4:443 (sni: None): TlsException('Cannot validate certificate hostname without SNI',)\",)\"\nI don't konw how to resolve this problem, It's my fault or the process bug?", "issue_status": "Closed", "issue_reporting_time": "2017-06-02T12:11:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "648": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2362", "issue_id": "#2362", "issue_summary": "How can I change the certificate name?", "issue_description": "ghost commented on 31 May 2017\nWhen downloading the certificate for decrying HTTPS decrypt on a device, the name of the certificate shows up as \"mitmproxy\" Is there any way to change its name?", "issue_status": "Closed", "issue_reporting_time": "2017-05-30T21:00:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "649": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2357", "issue_id": "#2357", "issue_summary": "Crash in flowfilter", "issue_description": "Member\nKriechi commented on 26 May 2017\nAddon error: Traceback (most recent call last):\n  File \"mitmproxy/addons/dumper.py\", line 212, in match\n    elif flowfilter.match(self.filter, f):\n  File \"mitmproxy/flowfilter.py\", line 537, in match\n    return flt(flow)\n  File \"mitmproxy/flowfilter.py\", line 55, in filter_types\n    return fn(self, flow)\n  File \"mitmproxy/flowfilter.py\", line 347, in __call__\n    return self.re.search(f.request.pretty_url)\nAttributeError: 'NoneType' object has no attribute 'pretty_url'\non git-master", "issue_status": "Closed", "issue_reporting_time": "2017-05-26T13:44:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "650": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2355", "issue_id": "#2355", "issue_summary": "Cannot Verify Server Identity", "issue_description": "wimbledon commented on 26 May 2017\nSteps to reproduce the problem:\nInstalled the mitm certificate profile from mitm.it successfully\nSeen mitmproxy event logs for plain http websites.\nWorks perfectly fine with my old iPhone 6, but not iPhone 7 (iOS 10.3.1) device.\nAny other comments? What have you tried so far?\nFacebook:\nGoogle Map:\n\n\n\n\nSystem information\nDevice: iPhone 7\niOS version 10.3.1\nChrome on iOS 58.0.3029.113\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.1\nPlatform: Darwin-16.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.12.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-05-26T00:04:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "651": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2352", "issue_id": "#2352", "issue_summary": "can't work on iPhone 6S (through Macbook)", "issue_description": "sgbookexchange commented on 25 May 2017 \u2022\nedited\nSteps to reproduce the problem:\ninstall mitmproxy through brew and then configure iPhone as per guide on http://jasdev.me/intercepting-ios-traffic. Try to install CA on iPhone 6S but can't connect to mitm.it (connection time out error) properly. Then install CA on Macbook (setting the proxy to 127.0.0.1:8080) and it works. Need some suggestion. Thanks.\nSystem information\niOS version 10.3.1\nChrome on iOS 58.0.3029.113\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.1\nPlatform: Darwin-16.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.12.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-05-25T09:32:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "652": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2349", "issue_id": "#2349", "issue_summary": "Private key is present in mitmproxy-ca-cert.p12", "issue_description": "tomlabaude commented on 23 May 2017\nSteps to reproduce the problem:\nPrivate key is inserted in .p12 file, although filename says \"mitmproxy-ca-cert.p12\"\nOutput can be verified with:\nopenssl pkcs12 -in mitmproxy-ca-cert.p12 -nocerts -nodes\nI don't have a Windows machine to test if a .p12 file would work without the private key inside.\nWe can generate a .p12 file without key with:\nopenssl pkcs12 -export -nokeys -in mitmproxy-ca-cert.pem -out mitmproxy-ca-cert.p12\n-> If private key is needed, file could be renamed \"mitmproxy-ca.p12\" for better understanding\n-> If private key is not needed, .p12 generation should be modified\nSystem information\nMitmproxy version: 2.0.1 (release version) Precompiled Binary\nPython version: 3.5.2\nPlatform: Darwin-16.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.12.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-05-23T16:48:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "653": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2345", "issue_id": "#2345", "issue_summary": "Crash when press shift + D", "issue_description": "shaynewang commented on 20 May 2017\nSteps to reproduce the problem:\nmitmproxy crashes when\nrun mitmproxy\nafter receive some packets\npress shift + D\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 417, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/listbox.py\", line 987, in keypress\n    self.make_cursor_visible((maxcol,maxrow))\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/urwid/listbox.py\", line 939, in make_cursor_visible\n    focus_widget, pos = self.body.get_focus()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 284, in get_focus\n    f = FlowItem(self.master, self.master.view.focus.flow)\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 123, in __init__\n    w = self.get_text()\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 132, in get_text\n    max_url_len=cols,\n  File \"/usr/local/Cellar/mitmproxy/2.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/common.py\", line 427, in format_flow\n    acked = f.reply.state == \"committed\",\nAttributeError: 'NoneType' object has no attribute 'state'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.1\nPlatform: Darwin-16.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e  16 Feb 2017\nMac version: 10.12.4 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-05-20T00:17:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "654": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2344", "issue_id": "#2344", "issue_summary": "Config file Error no such option \"view_filter\"", "issue_description": "shaynewang commented on 19 May 2017\nSteps to reproduce the problem:\nAdd a config.yaml file include view_filter: google\nrun mitmproxy\ngot error mitmproxy: Error reading /Users/Shayne/.mitmproxy/config.yaml: 'No such option: view_filter'\nAny other comments? What have you tried so far?\nThe option is in the source I don't know why it's not in the latest release\nSystem information\n .mitmproxy mitmproxy --version\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.1\nPlatform: Darwin-16.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e  16 Feb 2017\nMac version: 10.12.4 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-05-19T17:28:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "655": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2343", "issue_id": "#2343", "issue_summary": "Sniff all my own computer traffic", "issue_description": "john-bonachon commented on 19 May 2017\nWhat should I do to sniff my own computer traffic?\ni.e. it's easy to setup Chrome proxy to use mitmproxy localhost:port, but what if I need to sniff all traffic happening on my computer?\nShould I set my wifi gateway to my own address and put mitmproxy in transparent mode?", "issue_status": "Closed", "issue_reporting_time": "2017-05-19T04:09:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "656": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2341", "issue_id": "#2341", "issue_summary": "Unable to get mitmproxy working on Sierra", "issue_description": "prastut commented on 18 May 2017\nProblem:\nI have been trying to get mitmproxy to work on my macOS sierra and unable to do so.\nWhat have you tried so far?\nInstalled using Hombrew: brew install mitmproxy.\nBy running mitmproxy on the terminal it starts the application.\nAs the docs suggest, I now have to install certificates:\nWent to mitm.it. It shows: If you can see this, traffic is not passing through mitmproxy.\nGoogled if somebody else has this issue and followed the manual setup.\nRemoved ~./mitmproxy folder for a clean run. Restarted mitmproxy. The new cert's are created.\nCopied the entire folder ~./mitmproxy to the Keychain Access. For files with password entered nothing and continued. In the end Keychain Access gives me the results:\nAn error has occurred. Unable to import an item. \nThe contents of this item cannot be retrieved.\nStill I see an entry for mitmproxy certs in Keychain access with the following error with it:\n This root certificate is not trusted\nDouble clicking on the certificate -> Trust -> When using the certificate. Changed from Use System defaults to Always trust. The above error of not getting trusted get's removed.\nRestarted mitmproxy. No logs if I go to some website. mitm.it shows the same error.\nRestarted Mac for reloading certs, that also didn't solve the problem.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.1\nPlatform: Darwin-16.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.12.4 ('', '', '') x86_64\nThoughts\nRead the documentation again more closely in case that I might have missed something. In the Quick Setup it's mentioned\nstart mitmproxy and configure your target device with the correct proxy settings.\nHow does one configure my device with correct proxy settings?\n1", "issue_status": "Closed", "issue_reporting_time": "2017-05-18T17:27:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "657": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2339", "issue_id": "#2339", "issue_summary": "mitmproxy dosen't see android connections on transparent mode", "issue_description": "rafalbednarczuk commented on 18 May 2017\nSteps to reproduce the problem:\nInstall mitmproxy\nEdit rt_tables:\n#\n# reserved values\n#\n255 local\n254 main\n253 default\n0 unspec\n#\n# local\n#\n#1 inr.ruhep\n100 mitmproxy\nSetup config for transparent proxy\nrafal@rafalPL:~$ CLIENT_NET=192.168.0.103 /// My machine IP\nrafal@rafalPL:~$ TABLE_ID=100\nrafal@rafalPL:~$ MARK=1\nrafal@rafalPL:~$ sudo iptables -t mangle -A PREROUTING -d $CLIENT_NET -j MARK --set-mark $MARK\nrafal@rafalPL:~$ sudo iptables -t nat -A PREROUTING -p tcp -s $CLIENT_NET --match multiport --dports 80,443 -j REDIRECT --to-port 8080\nrafal@rafalPL:~$ sudo ip rule add fwmark $MARK lookup $TABLE_ID\nrafal@rafalPL:~$ sudo ip route add local $CLIENT_NET dev lo table $TABLE_ID\nCompile full_transparency_shim.c\nRun mitmproxy_shim\nrafal@rafalPL:~/mitmproxy-master$ sudo chown root:root mitmproxy_shim\nrafal@rafalPL:~/mitmproxy-master$ sudo chmod u+s mitmproxy_shim\nrafal@rafalPL:~/mitmproxy-master$ ./mitmproxy_shim /usr/local/bin/mitmproxy -T\nOpen event log\nConnect android device to gateway through wifi:\nProxy Server: NO\nStatic IP\nIPAdress: 192.168.1.128\nGateway: 192.168.0.103 //My PC's IP\n24\nDNS1: 8.8.8.8\nDNS2: 8.8.4.4\nOpen browser on android device\nNo internet conncetion\nNo event logs on mitmproxy\nAny other comments? What have you tried so far?\nRegular mode works well.\nConnect through proxy instead of gateway on android device with mitmproxy transparent mode:\n192.168.0.100:39826: clientconnect\n192.168.0.100:39826: HTTP protocol error in client request: Mitmproxy received\nan absolute-form request even though it is not running in regular mode. This\nusually indicates a misconfiguration, please see\nhttp://docs.mitmproxy.org/en/stable/modes.html for details.\n192.168.0.100:39826: clientdisconnect\nChanged CLIENT_NET to CLIENT_NET=192.168.0.103/24 results in:\nrafal@rafalPL:~$ sudo ip route add local $CLIENT_NET dev lo table $TABLE_ID\nRTNETLINK answers: Invalid argument\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.8.0-52-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial\nAndroid Device:\nNexus 5 android 7.1.1\nLineageOS:\n14.1-20170219-UNOFFICIAL-hammerheadcaf\n3.4.0-lineageos-g27406e90457510ga6c86d1\nexperience7@lineageos #1", "issue_status": "Closed", "issue_reporting_time": "2017-05-18T08:33:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "658": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2334", "issue_id": "#2334", "issue_summary": "Unable to use upstream proxy and proxy authentification", "issue_description": "Contributor\ncharlesdhdt commented on 12 May 2017\nSteps to reproduce the problem:\ngit clone https://github.com/mitmproxy/mitmproxy.git\ncd mitmproxy\n./dev.sh\n. venv/bin/activate\nmitmdump --proxyauth test:test -m upstream:http://10.7.0.225:8080/ --ssl-insecure\nOn 10.7.0.225, I have a VM that runs mitmproxy :\n6. mitmdump --insecure\nAny other comments? What have you tried so far?\nIt seems that each time you have a clientdisconnect/clientconnect, you get a new prompt to login (proxyauth). Basically for each domain you have to login to the proxyauth, here test/test.\nI wild guess would be that the information in the header to pass by the upstreamproxy somehow is not compatible with the header auth information\nSystem information\nHOST :\nMitmproxy version: 3.0.0 (2.0.0dev0435-0x1c6b33f) \nPython version: 3.6.0\nPlatform: Linux-4.9.0-0.bpo.2-amd64-x86_64-with-debian-8.7\nSSL version: OpenSSL 1.1.0e  16 Feb 2017\nLinux distro: debian 8.7 \nVM (10.7.0.225):\nMitmproxy version : 2.0.0 (release version)\nPython version : 3.5.2\nPlatform : Linux-4.4.0-75-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-05-12T13:33:21Z", "fixed_by": "#2490", "pull_request_summary": "fix #2334", "pull_request_description": "Member\nmhils commented on 2 Aug 2017\nfix #2334", "pull_request_status": "Merged", "issue_fixed_time": "2017-08-01T21:39:38Z", "files_changed": [["2", "mitmproxy/addons/proxyauth.py"]]}, "659": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2332", "issue_id": "#2332", "issue_summary": "MemoryError,mitmproxy has crashed!", "issue_description": "nmweizi commented on 12 May 2017 \u2022\nedited by Kriechi\nTraceback (most recent call last):\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\server.py\", line 119, in handle\n    root_layer()\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 9, in __call__\n    layer()\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\protocol\\tls.py\", line 398, in __call__\n    layer()\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\protocol\\http1.py\", line 72, in __call__\n    layer()\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\protocol\\http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\protocol\\http.py\", line 370, in _process_flow\n    self.read_response_body(f.request, f.response)\nMemoryError\n127.0.0.1:61302: Traceback (most recent call last):\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\server.py\", line 119, in handle\n    root_layer()\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 9, in __call__\n    layer()\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\protocol\\tls.py\", line 398, in __call__\n    layer()\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\protocol\\http1.py\", line 72, in __call__\n    layer()\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\protocol\\http.py\", line 188, in __call__\n    if not self._process_flow(flow):\n  File \"d:\\python35\\lib\\site-packages\\mitmproxy-3.0.0-py3.5.egg\\mitmproxy\\proxy\\protocol\\http.py\", line 370, in _process_flow\n    self.read_response_body(f.request, f.response)\nMemoryError\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.5.3\nPlatform: Windows-10-10.0.14393-SP0\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nWindows version: 10 10.0.14393 SP0 Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2017-05-12T03:31:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "660": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2330", "issue_id": "#2330", "issue_summary": "Some sites like facebook.com not working after login", "issue_description": "aniljava commented on 12 May 2017\nSummary:\nSite such as facebook.com does not work after login. ERR_CONNECTION_CLOSED error is shown in chrome. Further details below. Need pointers to debug further.\nProblem exists on pip version as well as the latest github trunk.\nMitmproxy version: 3.0.0 (2.0.0dev0435-0x1c6b33f5) \nPython version: 3.5.3\nPlatform: Linux-4.10.0-20-generic-x86_64-with-Ubuntu-17.04-zesty\nSSL version: OpenSSL 1.0.2g  1 Mar 2016\nLinux distro: Ubuntu 17.04 zesty\nSteps to reproduce the problem:\nStarted the proxy as:\n. venv/bin/activate\nmitmdump 2>&1 > logs.txt\n~/.mitmproxy/config.yaml is created by copying output of mitmdump --options\nchange made was verbosity: 4\nStarted chrome with following args:\n --proxy-server=127.0.0.1:8080\nExample problem:\nVisit facebook.com [ok]\nLogin [ok]\nERR_CONNECTION_CLOSED [Details\nRelevant details from logs.txt\nProxy server listening at http://127.0.0.1:8080\n127.0.0.1:50786: clientconnect\n127.0.0.1:50788: clientconnect\n127.0.0.1:50788: Set new server address: www.facebook.com:443\n127.0.0.1:50788: serverconnect\n  -> ('www.facebook.com', 443)\n127.0.0.1:50788: Establish TLS with server\n127.0.0.1:50788: ALPN selected by server: h2\n127.0.0.1:50788: Establish TLS with client\n127.0.0.1:50788: ALPN for client: b'h2'\n127.0.0.1:50788: HTTP2 Event from client\n  -> <RemoteSettingsChanged changed_settings:{ChangedSetting(setting=SettingCodes.HEADER_TABLE_SIZE, original_value=4096, new_value=65536), ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=None, new_value=1000), ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=6291456)}>\n127.0.0.1:50788: HTTP2 Event from server\n  -> <RemoteSettingsChanged changed_settings:{ChangedSetting(setting=SettingCodes.HEADER_TABLE_SIZE, original_value=4096, new_value=4096), ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=None, new_value=100), ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=65536), ChangedSetting(setting=SettingCodes.MAX_FRAME_SIZE, original_value=16384, new_value=16384), ChangedSetting(setting=SettingCodes.MAX_HEADER_LIST_SIZE, original_value=None, new_value=131072)}>\n127.0.0.1:50788: HTTP2 Event from server\n  -> <WindowUpdated stream_id:0, delta:10420225>\n127.0.0.1:50788: HTTP2 Event from client\n  -> <WindowUpdated stream_id:0, delta:15663105>\n127.0.0.1:50788: HTTP2 Event from client\n  -> <RequestReceived stream_id:1, headers:[(b':method', b'GET'), (b':authority', b'www.facebook.com'), (b':scheme', b'https'), (b':path', b'/'), (b'cache-control', b'max-age=0'), (b'upgrade-insecure-requests', b'1'), (b'user-agent', b'Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36'), (b'accept', b'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'), (b'dnt', b'1'), (b'accept-encoding', b'gzip, deflate, sdch, br'), (b'accept-language', b'en-US,en;q=0.8'), (b'cookie', b'datr=__REMOVED_FOR_PRIVACY__; dats=1; sb=__REMOVED_FOR_PRIVACY__; c_user=__REMOVED_FOR_PRIVACY__; xs=__REMOVED_FOR_PRIVACY__; fr=__REMOVED_FOR_PRIVACY__; pl=n; lu=__REMOVED_FOR_PRIVACY__; dpr=1.5')]>\n127.0.0.1:50788: HTTP2 Event from client\n  -> <StreamEnded stream_id:1>\n127.0.0.1:50788: HTTP2 Event from client\n  -> <PriorityUpdated stream_id:1, weight:256, depends_on:0, exclusive:True>\n127.0.0.1:50788: HTTP/2 PRIORITY frame surpressed. Use --http2-priority to enable forwarding.\n127.0.0.1:50788: HTTP2 Event from client\n  -> <SettingsAcknowledged changed_settings:{ChangedSetting(setting=SettingCodes.HEADER_TABLE_SIZE, original_value=4096, new_value=4096), ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=100, new_value=100), ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=65536), ChangedSetting(setting=SettingCodes.MAX_FRAME_SIZE, original_value=16384, new_value=16384), ChangedSetting(setting=SettingCodes.MAX_HEADER_LIST_SIZE, original_value=65536, new_value=131072)}>\n127.0.0.1:50788: request\n  -> Request(GET www.facebook.com:443/)\n127.0.0.1:50788: HTTP/2 PRIORITY information in HEADERS frame surpressed. Use --http2-priority to enable forwarding.\n127.0.0.1:50788: HTTP2 Event from server\n  -> <SettingsAcknowledged changed_settings:{ChangedSetting(setting=SettingCodes.HEADER_TABLE_SIZE, original_value=4096, new_value=65536), ChangedSetting(setting=SettingCodes.MAX_CONCURRENT_STREAMS, original_value=100, new_value=1000), ChangedSetting(setting=SettingCodes.INITIAL_WINDOW_SIZE, original_value=65535, new_value=6291456)}>\n127.0.0.1:50788: HTTP2 Event from client\n  -> <SettingsAcknowledged changed_settings:{}>\n127.0.0.1:50788: HTTP2 Event from server\n  -> <SettingsAcknowledged changed_settings:{}>\n127.0.0.1:50788: HTTP2 Event from server\n  -> <WindowUpdated stream_id:1, delta:10420224>\n127.0.0.1:50788: NoSuchStreamError(2,)\n127.0.0.1:50788: serverdisconnect\n  -> ('www.facebook.com', 443)\n127.0.0.1:50788: clientdisconnect", "issue_status": "Closed", "issue_reporting_time": "2017-05-12T01:04:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "661": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2329", "issue_id": "#2329", "issue_summary": "Support removing SSL/TLS from upstream https connection", "issue_description": "felixgr commented on 11 May 2017\nI'm trying to use an upstream proxy that expects plain HTTP bytes instead of TLS-encapsulated HTTP for HTTPS URLs. I've tried to modify the scheme and other things but mitmproxy still continues to send a TLS client hello after the initial upstream CONNECT.\nIt appears that this is currently unsupported in mitmproxy?\nSteps to reproduce the problem:\nuplink.py:\nfrom mitmproxy import ctx\n\ndef http_connect(flow):\n        flow.request.scheme = 'http'\n        flow.request.port = 80\n        ctx.log.info('script: connect '+repr(flow))\n\ndef request(flow):\n        flow.request.scheme = 'http'\n        flow.request.port = 80\n        ctx.log.info('script: request '+repr(flow))\nsocat -v tcp-listen:8082,reuseaddr,fork TCP:upstreamproxy:999\nmitmproxy -p 8081 -s uplink.py -U http://localhost:8082 --insecure --no-upstream-cert\ncurl -v -k -x http://127.0.0.1:8081 https://www.google.com\nThe output of socat is:\n> 2017/05/11 10:11:56.527763  length=119 from=0 to=118\nCONNECT www.google.com:80 HTTP/1.1\\r\nHost: www.google.com:443\\r\nUser-Agent: curl/7.51.0\\r\nProxy-Connection: Keep-Alive\\r\n\\r\n< 2017/05/11 10:11:56.720058  length=116 from=0 to=115\nHTTP/1.1 200 OK\\r\nContent-Length: 0\\r\nDate: Thu, 11 May 2017 08:11:56 GMT\\r\nContent-Type: text/plain; charset=utf-8\\r\n\\r\n> 2017/05/11 10:11:56.753419  length=164 from=119 to=282\n............i..RF+,Q..2.=.......\noA5T].Lt....2.,.+.$.#.\n.       .0./.(.'.........k.g.9.3.....=.<.5./.....@.\\v.......\n.......#...\\r. ........................................< 2017/05/11 10:11:56.753987  length=82 from=116 to=197\nHTTP/1.1 502 Uplink Bad Gateway\\r\nContent-Length: 131\\r\nContent-Type: text/plain\\r\n\\r\n< 2017/05/11 10:11:56.754159  length=131 from=198 to=328\nmalformed HTTP request \"\\\\x16\\\\x03\\\\x01\\\\x00\\\\x9f\\\\x01\\\\x00\\\\x00\\\\x9b\\\\x03\\\\x03\\\\xd2i\\\\xe3\\\\xacRF+,Q\\\\xa4\\\\xec2\\\\xfe=\\\\x11\\\\x11\\\\xf1\\\\xfe\\\\xcf\\\\x0e\\\\u007f\"^C\u23ce\nAs you can see above, the TLS client hello \\\\x16\\\\x03\\\\x01\\\\x00 is sent. The upstream proxy doesn't like it and replies with error 502.\nExpected behavior\nIf configured/scripted, mitmproxy should send upstream HTTP bytes for a HTTPS URL.\nAny other comments? What have you tried so far?\nI also tried some variants of uplink.py, also the script from issue #1731 for example. I also tried switching off --insecure or --no-upstream-cert. I'm currently using those flags because Burp (which I actually intend to use instead of curl) apparently doesn't send SNI properly.\nSystem information\nMitmproxy version: 2.0.2 (1.2.0dev0000-0x8cba0352e)\nPython version: 3.6.1\nPlatform: Darwin-16.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e  16 Feb 2017\nMac version: 10.12.4 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-05-11T08:32:32Z", "fixed_by": "#2367", "pull_request_summary": "Fix #2329", "pull_request_description": "Member\nmhils commented on 2 Jun 2017\nThis PR makes it possible to remove TLS from upstream proxy connections. An addon can now define\ndef http_connect(flow):\n    flow.request.scheme = \"http\"\nto disable TLS negotation with the upstream proxy. This should fix #2329.", "pull_request_status": "Merged", "issue_fixed_time": "2017-06-02T12:18:57Z", "files_changed": [["3", "mitmproxy/log.py"], ["10", "mitmproxy/proxy/root_context.py"], ["2", "mitmproxy/test/taddons.py"], ["55", "test/mitmproxy/proxy/test_server.py"], ["7", "test/mitmproxy/test_log.py"]]}, "662": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2326", "issue_id": "#2326", "issue_summary": "Is it possible to rebind the text selection key?", "issue_description": "BetaStrike commented on 11 May 2017\nSteps to reproduce the problem:\nTry to select parts of the text in mitmproxy on a mac with a windows keyboard\nFind out the selection override key is Fn\nKey does not exist on keyboard but is on laptop keyboard\nAny other comments? What have you tried so far?\nAt the time I am kind of just reaching over to the mac itself to hit the fn key, with 10.12 I can't even use karabiner to do some rebind action as it is broken with the new version of osx. So it would be great if I can use a cmd option / config file to make mitmproxy to react to a different key for text selection\nSystem information\nmackbook pro mid 2014, osx 10.12.4\nwindows keyboard, with control and command swapped in OS if that changes anything.\n1", "issue_status": "Closed", "issue_reporting_time": "2017-05-10T21:57:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "663": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2324", "issue_id": "#2324", "issue_summary": "HEAD method not allowed to access mitm.it", "issue_description": "tomlabaude commented on 9 May 2017\nSteps to reproduce the problem:\nUsing mitmdump in transparent mode, with on-boarding port on 6969 (did not test on 80)\n/mitmdump -T --host --insecure --onboarding-port 6969\nOn iPad + Chrome + Transparent mode, access to http://mitm.it:6969\nAn HEAD /cert/pem is sent, receive an \"405 Method Not Allowed\"\nAny idea of any workaround?\nAny other comments? What have you tried so far?\nExact packet:\nHypertext Transfer Protocol\nHEAD /cert/pem HTTP/1.1\\r\\n\nHost: mitm.it:6969\\r\\n\nConnection: keep-alive\\r\\n\nUser-Agent: Mozilla/5.0 (iPad; CPU OS 9_2 like Mac OS X) AppleWebKit/601.1 (KHTML, like Gecko) CriOS/55.0.2883.79 Mobile/13C75 Safari/601.1.46\\r\\n\nAccept-Encoding: gzip, deflate, sdch\\r\\n\nAccept-Language: fr-FR,fr;q=0.8,en-US;q=0.6,en;q=0.4\\r\\n\n\\r\\n\nAnswer:\nHypertext Transfer Protocol\nHTTP/1.1 405 Method Not Allowed\\r\\n\nServer: TornadoServer/4.4.2\\r\\n\nContent-Length: 87\\r\\n\nDate: Tue, 09 May 2017 13:35:38 GMT\\r\\n\nContent-Type: text/html; charset=UTF-8\\r\\n\n\\r\\n\nSystem information\nmitmdump --version\nMitmproxy version: 2.0.1 (release version) Precompiled Binary\nPython version: 3.5.2\nPlatform: Darwin-16.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.12.4 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-05-09T13:44:35Z", "fixed_by": "#2325", "pull_request_summary": "Handle head request on onboarding app: Fix #2324", "pull_request_description": "Member\nujjwal96 commented on 9 May 2017 \u2022\nedited by Kriechi\nfixes #2324\n@Kriechi The test is failing sometimes on my local machine.\nIt throws a TypeError TypeError: getsockaddrarg() takes exactly 2 arguments (4 given) in tcp.create_connection on this line when the af is AF_INET and source address is ('::1', 52418, 0, 0)\nIs it something wrong wtih the test or create_connection function?\nNone of the other test fail", "pull_request_status": "Merged", "issue_fixed_time": "2017-05-09T18:08:43Z", "files_changed": [["25", "mitmproxy/addons/onboardingapp/app.py"], ["22", "test/mitmproxy/addons/test_onboarding.py"]]}, "664": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2323", "issue_id": "#2323", "issue_summary": "Crash when using mouse in mitmproxy", "issue_description": "Member\nujjwal96 commented on 9 May 2017\nSteps to reproduce the problem:\n1.Open mitmproxy\n2.Click on any flow for flow details\n3.\n...\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/window.py\", line 206, in mouse_event\n    k = super().mouse_event(*args, **kwargs)\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1169, in mouse_event\n    event, button, col, row-htrim, focus )\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/listbox.py\", line 1566, in mouse_event\n    focus)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/flowlist.py\", line 72, in mouse_event\n    self.master.view_flow(self.flow)\nAttributeError: 'ConsoleMaster' object has no attribute 'view_flow'\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0424-0x81d68aa)\nPython version: 3.5.2\nPlatform: Linux-4.9.0-040900-generic-x86_64-with-elementary-0.4-loki\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: \"elementary\" 0.4 loki", "issue_status": "Closed", "issue_reporting_time": "2017-05-09T11:27:50Z", "fixed_by": "#2378", "pull_request_summary": "Fixes #2377 #2323", "pull_request_description": "Member\nujjwal96 commented on 6 Jun 2017 \u2022\nedited by Kriechi\nFixes issue of crash on clearing event log and using mouse to view flow details.\nfixes #2377\nfixes #2323", "pull_request_status": "Merged", "issue_fixed_time": "2017-06-05T22:33:58Z", "files_changed": [["2", "mitmproxy/tools/console/eventlog.py"], ["2", "mitmproxy/tools/console/flowlist.py"]]}, "665": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2321", "issue_id": "#2321", "issue_summary": "HttpException('Invalid HTTP request form (expected: authority or absolute, got: relative)',) and missing options.", "issue_description": "farmdve commented on 7 May 2017 \u2022\nedited\nAs with my previous issue, I have the following setup:\nI have a dns proxy server and mitmproxy sitting on one machine. The device(whose traffic is to be captured)'s DNS server is set to my own DNS server. There I spoof all domains I would like to point to the machine I have setup.\nHowever, I get the following error `HttpException('Invalid HTTP request form (expected: authority or absolute, got: relative)',).\nIf I use the -R command line options, which sets up a reverse proxy, e.g proxying to an upstream server, everything works, but this doesn't work for multiple domains.\nI am using the dns spoofing script, but it seems like it still doesn't work, I have noticed that modern browsers send the Host header with the domain name(or at least Chrome does), so mitmproxy can absolutely use the Host header to construct the proper requested resource, but it doesn't.\nAnd the --keep-host-header argument as described in https://github.com/mitmproxy/mitmproxy/blob/master/examples/complex/dns_spoofing.py is completely non-existant.\nI am using the latest code, version 3.0.0 according to mitmproxy --version.\nAny idea what can be done here?", "issue_status": "Closed", "issue_reporting_time": "2017-05-07T12:38:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "666": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2318", "issue_id": "#2318", "issue_summary": "\"No internet connection\" in Android app with using mitmproxy, but works fine with Charles", "issue_description": "mortenmoulder commented on 6 May 2017\nSteps to reproduce the problem:\nmitmproxy\nInstall the mitmproxy certificate through http://mitm.it/\nStart mitmproxy with mitmproxy -p 8080\nSet proxy settings on Android Marshmallow or Nougat\nOpen the application\nGet prompted with the error\nCharles\nInstall the Charles proxy certificate through http://chls.pro/ssl\nStart Charles\nSet proxy settings on Android Marshmallow or Nougat\nOpen the application\nSee traffic in Charles\nAny other comments?\nI cannot see any traffic from the application in mitmproxy what so ever. Nothing. Could this be because the application blocks the mitmproxy certificate somehow?\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.1\nPlatform: Darwin-15.0.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.11.1 ('', '', '') x86_64\nAlso installed and tried on an Ubuntu server.", "issue_status": "Closed", "issue_reporting_time": "2017-05-06T15:03:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "667": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2317", "issue_id": "#2317", "issue_summary": "SSL Socket option needed", "issue_description": "Supermilkycow commented on 6 May 2017\nI was trying to intercept the flow between a client and server using HTTP protocol. Everything was good before client set up another SSL-socket without HTTP header to the server.\nMitmproxy hints: \"HTTP protocol error in client request: Bad HTTP request\"\nClient sent JSON-like data could be decoded by mitmdump like:\" { \"request\":\"John\" , \"name\":\"foo\" }\".\nThen mitmproxy closed the connection.\nSo, is there any way to get an option to disable HTTP protocol parser and just forward these socket packets?", "issue_status": "Closed", "issue_reporting_time": "2017-05-06T09:05:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "668": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2315", "issue_id": "#2315", "issue_summary": "Script Reloader does not unload old script", "issue_description": "Member\nmhils commented on 5 May 2017\nSteps to reproduce the problem:\nmitmdump -s script.py\nModify script on disk.\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0407-0x315daa0)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-05-05T16:50:06Z", "fixed_by": "#2418", "pull_request_summary": "Fixes the issue of script reloader not unloading previous script", "pull_request_description": "Member\nujjwal96 commented on 28 Jun 2017\nFixes #2315\nWell, this was a tricky one.\nThe issue -\nWe use load_module to load the scripts. According to the docs -\nIf the requested module already exists in sys.modules, that module should be used and reloaded\nSo, the modified script was reloaded\nWhen a module is reloaded, its dictionary (containing the module\u2019s global variables) is retained. Redefinitions of names will override the old definitions, so this is generally not a problem. If the new version of a module does not define a name that was defined by the old version, the old definition remains.\nHow I solved it-\nBefore loading a script remove it from sys.modules.\nIf you have a better solution I'll implement that\nThis PR also fixes the issue caused when a script is deleted during execution", "pull_request_status": "Merged", "issue_fixed_time": "2017-06-28T18:51:18Z", "files_changed": [["10", "mitmproxy/addons/script.py"], ["15", "test/mitmproxy/addons/test_script.py"]]}, "669": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2314", "issue_id": "#2314", "issue_summary": "Feature request: Python api to pull details of server side ssl certificate", "issue_description": "securisec commented on 5 May 2017\nThis is not an issue but a feature request. I love how mitmproxy has the detail page that breaks down the ssl/tls certificate, and would love to see a python api that i can leverage to get parts of this data. I tried leveraging ssl lib, but the performance just isnt the same as mitmproxy.\nThanks!", "issue_status": "Closed", "issue_reporting_time": "2017-05-05T16:39:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "670": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2313", "issue_id": "#2313", "issue_summary": "Improve mitm.it", "issue_description": "Member\nmhils commented on 5 May 2017\nWe should do a better job at our magic cert install page mitm.it:\nAdd additional OSes/software to the list, e.g. Firefox.\nOpen more specific instructions when an Icon is clicked. For example, the Apple instructions should be shown after clicking on \"Apple\", and should also include the info from the docs: #2312", "issue_status": "Closed", "issue_reporting_time": "2017-05-05T12:30:40Z", "fixed_by": "#2745", "pull_request_summary": "Add additional OSes/software specific instructions on mitm.it", "pull_request_description": "Contributor\nbksahu commented on 2 Jan 2018\nfix #2313 (1st point).\nAdded instruction based on comments from the issue page and https://readthedocs.org/projects/mitmproxy/downloads/pdf/latest/\nMinor changes for beauty.\nThanks for mitmproxy.\nThanks!\nBK", "pull_request_status": "Merged", "issue_fixed_time": "2018-01-04T12:56:47Z", "files_changed": [["BIN", "+5.3", "KB", "mitmproxy/addons/onboardingapp/static/images/favicon.ico"], ["BIN", "+121", "KB", "mitmproxy/addons/onboardingapp/static/images/mitmproxy-long.png"], ["5", "mitmproxy/addons/onboardingapp/static/mitmproxy.css"], ["160", "mitmproxy/addons/onboardingapp/templates/index.html"], ["9", "mitmproxy/addons/onboardingapp/templates/layout.html"]]}, "671": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2310", "issue_id": "#2310", "issue_summary": "Unpacking request body (gzip) doesn't automatically update the Content-Length header", "issue_description": "wujek-srujek commented on 3 May 2017 \u2022\nedited\nSteps to reproduce the problem:\nSend a request with the body packed as gzip.\nEnter into the request in mitmproxy and notice Content-Length shows the packed length.\nUnpack the body (the z key) - notice the Content-Length header doesn't change, although the unpacked content length must be known at this point. Replying the request fails in my case as the server complains about the stream having more data than expected (the un-gzipped data has more bytes than gzipped).\nWhen the users goes into raw body edit mode ('e', than 'r') and just quits the editor, the Content-Length header is updated correctly.\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.1\nPlatform: Darwin-14.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.10.5 ('', '', '') x86_64\nThe same behavior observed on an up-to-date Arch linux.", "issue_status": "Closed", "issue_reporting_time": "2017-05-03T14:33:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "672": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2309", "issue_id": "#2309", "issue_summary": "Intermittent CI failure", "issue_description": "Member\ncortesi commented on 3 May 2017\nI'm seeing quite frequent intermittent CI failures, with the following exception sequence. The proximal error here is in the addonmanager, but it seems there's an underlying connection-related failure. Full example here.\ntest/mitmproxy/proxy/test_server.py::TestUpstreamProxySSL::test_ignore Exception in thread ProxyThread (:::42523):\nTraceback (most recent call last):\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/master.py\", line 80, in run\n    self.tick(0.1)\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/master.py\", line 88, in tick\n    self.addons.trigger(\"tick\")\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/test/taddons.py\", line 22, in trigger\n    super().trigger(event, *args, **kwargs)\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/addonmanager.py\", line 245, in trigger\n    with safecall():\n  File \"/opt/python/3.6.1/lib/python3.6/contextlib.py\", line 82, in __enter__\n    return next(self.gen)\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/addonmanager.py\", line 56, in safecall\n    stdout_replacement = StreamLog(ctx.log.warn)\nAttributeError: 'NoneType' object has no attribute 'warn'\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/opt/python/3.6.1/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\n    self.run()\n  File \"/home/travis/build/mitmproxy/mitmproxy/test/mitmproxy/tservers.py\", line 105, in run\n    self.tmaster.run()\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/master.py\", line 82, in run\n    self.shutdown()\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/master.py\", line 106, in shutdown\n    self.addons.trigger(\"done\")\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/test/taddons.py\", line 22, in trigger\n    super().trigger(event, *args, **kwargs)\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/addonmanager.py\", line 245, in trigger\n    with safecall():\n  File \"/opt/python/3.6.1/lib/python3.6/contextlib.py\", line 82, in __enter__\n    return next(self.gen)\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/addonmanager.py\", line 56, in safecall\n    stdout_replacement = StreamLog(ctx.log.warn)\nAttributeError: 'NoneType' object has no attribute 'warn'\nException in thread ProxyThread (:::36481):\nTraceback (most recent call last):\n  File \"/opt/python/3.6.1/lib/python3.6/threading.py\", line 916, in _bootstrap_inner\n    self.run()\n  File \"/home/travis/build/mitmproxy/mitmproxy/test/mitmproxy/tservers.py\", line 105, in run\n    self.tmaster.run()\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/master.py\", line 80, in run\n    self.tick(0.1)\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/master.py\", line 88, in tick\n    self.addons.trigger(\"tick\")\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/test/taddons.py\", line 22, in trigger\n    super().trigger(event, *args, **kwargs)\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/addonmanager.py\", line 245, in trigger\n    with safecall():\n  File \"/opt/python/3.6.1/lib/python3.6/contextlib.py\", line 82, in __enter__\n    return next(self.gen)\n  File \"/home/travis/build/mitmproxy/mitmproxy/mitmproxy/addonmanager.py\", line 56, in safecall\n    stdout_replacement = StreamLog(ctx.log.warn)\nAttributeError: 'NoneType' object has no attribute 'warn'\nFAILED\ntest/mitmproxy/proxy/test_server.py::TestUpstreamProxySSL::test_tcp FAILED\ntest/mitmproxy/proxy/test_server.py::TestUpstreamProxySSL::test_simple FAILED\ntest/mitmproxy/proxy/test_server.py::TestUpstreamProxySSL::test_change_upstream_proxy_connect FAILED \n=================================== FAILURES ===================================\n_______________________ TestUpstreamProxySSL.test_ignore _______________________\nrfile = <mitmproxy.net.tcp.Reader object at 0x7f1da1e1cb70>\n    def _read_response_line(rfile):\n        try:\n>           line = _get_first_line(rfile)\nmitmproxy/net/http/http1/read.py:288: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nrfile = <mitmproxy.net.tcp.Reader object at 0x7f1da1e1cb70>\n    def _get_first_line(rfile):\n        try:\n            line = rfile.readline()\n            if line == b\"\\r\\n\" or line == b\"\\n\":\n                # Possible leftover from previous message\n                line = rfile.readline()\n        except (exceptions.TcpDisconnect, exceptions.TlsException):\n            raise exceptions.HttpReadDisconnect(\"Remote disconnected\")\n        if not line:\n>           raise exceptions.HttpReadDisconnect(\"Remote disconnected\")\nE           mitmproxy.exceptions.HttpReadDisconnect: Remote disconnected\nmitmproxy/net/http/http1/read.py:233: HttpReadDisconnect\nDuring handling of the above exception, another exception occurred:\nself = <test.mitmproxy.proxy.test_server.TestUpstreamProxySSL object at 0x7f1da1f272e8>\n    def test_ignore(self):\n        n = self.pathod(\"304\")\n        self._ignore_on()\n        i = self.pathod(\"305\")\n        i2 = self.pathod(\"306\")\n        self._ignore_off()\n    \n        self.master.event_queue.join()\n    \n        assert n.status_code == 304\n        assert i.status_code == 305\n        assert i2.status_code == 306\n        assert any(f.response.status_code == 304 for f in self.master.state.flows)\n        assert not any(f.response.status_code == 305 for f in self.master.state.flows)\n        assert not any(f.response.status_code == 306 for f in self.master.state.flows)\n    \n        # Test that we get the original SSL cert\n        if self.ssl:\n            i_cert = certs.SSLCert(i.sslinfo.certchain[0])\n            i2_cert = certs.SSLCert(i2.sslinfo.certchain[0])\n            n_cert = certs.SSLCert(n.sslinfo.certchain[0])\n    \n            assert i_cert == i2_cert\n            assert i_cert != n_cert\n    \n        # Test Non-HTTP traffic\n        spec = \"200:i0,@100:d0\"  # this results in just 100 random bytes\n        # mitmproxy responds with bad gateway\n>       assert self.pathod(spec).status_code == 502\ntest/mitmproxy/proxy/test_server.py:158: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest/mitmproxy/tservers.py:214: in pathod\n    return p.request(q)\npathod/pathoc.py:495: in request\n    return self.http(r)\npathod/pathoc.py:457: in http\n    resp = self.protocol.read_response(self.rfile, dummy_req)\nmitmproxy/net/http/http1/read.py:65: in read_response\n    response = read_response_head(rfile)\nmitmproxy/net/http/http1/read.py:92: in read_response_head\n    http_version, status_code, message = _read_response_line(rfile)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nrfile = <mitmproxy.net.tcp.Reader object at 0x7f1da1e1cb70>\n    def _read_response_line(rfile):\n        try:\n            line = _get_first_line(rfile)\n        except exceptions.HttpReadDisconnect:\n            # We want to provide a better error message.\n>           raise exceptions.HttpReadDisconnect(\"Server disconnected\")\nE           mitmproxy.exceptions.HttpReadDisconnect: Server disconnected\nmitmproxy/net/http/http1/read.py:291: HttpReadDisconnect\n________________________ TestUpstreamProxySSL.test_tcp _________________________\nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da1ecafd0>\n    def connect(self):\n        try:\n>           connection = self.create_connection()\nmitmproxy/net/tcp.py:693: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da1ecafd0>\ntimeout = None\n    def create_connection(self, timeout=None):\n        # Based on the official socket.create_connection implementation of Python 3.6.\n        # https://github.com/python/cpython/blob/3cc5817cfaf5663645f4ee447eaed603d2ad290a/Lib/socket.py\n    \n        err = None\n        for res in socket.getaddrinfo(self.address[0], self.address[1], 0, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = self.makesocket(af, socktype, proto)\n                if timeout:\n                    sock.settimeout(timeout)\n                if self.source_address:\n                    sock.bind(self.source_address)\n                if self.spoof_source_address:\n                    try:\n                        if not sock.getsockopt(socket.SOL_IP, socket.IP_TRANSPARENT):\n                            sock.setsockopt(socket.SOL_IP, socket.IP_TRANSPARENT, 1)\n                    except Exception as e:\n                        # socket.IP_TRANSPARENT might not be available on every OS and Python version\n                        raise exceptions.TcpException(\n                            \"Failed to spoof the source address: \" + e.strerror\n                        )\n                sock.connect(sa)\n                return sock\n    \n            except socket.error as _:\n                err = _\n                if sock is not None:\n                    sock.close()\n    \n        if err is not None:\n>           raise err\nmitmproxy/net/tcp.py:687: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da1ecafd0>\ntimeout = None\n    def create_connection(self, timeout=None):\n        # Based on the official socket.create_connection implementation of Python 3.6.\n        # https://github.com/python/cpython/blob/3cc5817cfaf5663645f4ee447eaed603d2ad290a/Lib/socket.py\n    \n        err = None\n        for res in socket.getaddrinfo(self.address[0], self.address[1], 0, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = self.makesocket(af, socktype, proto)\n                if timeout:\n                    sock.settimeout(timeout)\n                if self.source_address:\n                    sock.bind(self.source_address)\n                if self.spoof_source_address:\n                    try:\n                        if not sock.getsockopt(socket.SOL_IP, socket.IP_TRANSPARENT):\n                            sock.setsockopt(socket.SOL_IP, socket.IP_TRANSPARENT, 1)\n                    except Exception as e:\n                        # socket.IP_TRANSPARENT might not be available on every OS and Python version\n                        raise exceptions.TcpException(\n                            \"Failed to spoof the source address: \" + e.strerror\n                        )\n>               sock.connect(sa)\nE               ConnectionRefusedError: [Errno 111] Connection refused\nmitmproxy/net/tcp.py:678: ConnectionRefusedError\nDuring handling of the above exception, another exception occurred:\nself = <test.mitmproxy.proxy.test_server.TestUpstreamProxySSL object at 0x7f1da3290940>\n    def test_tcp(self):\n>       n = self.pathod(\"304\")\ntest/mitmproxy/proxy/test_server.py:177: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest/mitmproxy/tservers.py:213: in pathod\n    with p.connect():\ntest/mitmproxy/tservers.py:183: in connect\n    return pathod.pathoc.Pathoc.connect(self, self.lazy_connect)\npathod/pathoc.py:312: in connect\n    with tcp.TCPClient.connect(self) as closer:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da1ecafd0>\n    def connect(self):\n        try:\n            connection = self.create_connection()\n        except (socket.error, IOError) as err:\n            raise exceptions.TcpException(\n                'Error connecting to \"%s\": %s' %\n>               (self.address[0], err)\n            )\nE           mitmproxy.exceptions.TcpException: Error connecting to \"localhost\": [Errno 111] Connection refused\nmitmproxy/net/tcp.py:697: TcpException\n_______________________ TestUpstreamProxySSL.test_simple _______________________\nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da31abbe0>\n    def connect(self):\n        try:\n>           connection = self.create_connection()\nmitmproxy/net/tcp.py:693: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da31abbe0>\ntimeout = None\n    def create_connection(self, timeout=None):\n        # Based on the official socket.create_connection implementation of Python 3.6.\n        # https://github.com/python/cpython/blob/3cc5817cfaf5663645f4ee447eaed603d2ad290a/Lib/socket.py\n    \n        err = None\n        for res in socket.getaddrinfo(self.address[0], self.address[1], 0, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = self.makesocket(af, socktype, proto)\n                if timeout:\n                    sock.settimeout(timeout)\n                if self.source_address:\n                    sock.bind(self.source_address)\n                if self.spoof_source_address:\n                    try:\n                        if not sock.getsockopt(socket.SOL_IP, socket.IP_TRANSPARENT):\n                            sock.setsockopt(socket.SOL_IP, socket.IP_TRANSPARENT, 1)\n                    except Exception as e:\n                        # socket.IP_TRANSPARENT might not be available on every OS and Python version\n                        raise exceptions.TcpException(\n                            \"Failed to spoof the source address: \" + e.strerror\n                        )\n                sock.connect(sa)\n                return sock\n    \n            except socket.error as _:\n                err = _\n                if sock is not None:\n                    sock.close()\n    \n        if err is not None:\n>           raise err\nmitmproxy/net/tcp.py:687: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da31abbe0>\ntimeout = None\n    def create_connection(self, timeout=None):\n        # Based on the official socket.create_connection implementation of Python 3.6.\n        # https://github.com/python/cpython/blob/3cc5817cfaf5663645f4ee447eaed603d2ad290a/Lib/socket.py\n    \n        err = None\n        for res in socket.getaddrinfo(self.address[0], self.address[1], 0, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = self.makesocket(af, socktype, proto)\n                if timeout:\n                    sock.settimeout(timeout)\n                if self.source_address:\n                    sock.bind(self.source_address)\n                if self.spoof_source_address:\n                    try:\n                        if not sock.getsockopt(socket.SOL_IP, socket.IP_TRANSPARENT):\n                            sock.setsockopt(socket.SOL_IP, socket.IP_TRANSPARENT, 1)\n                    except Exception as e:\n                        # socket.IP_TRANSPARENT might not be available on every OS and Python version\n                        raise exceptions.TcpException(\n                            \"Failed to spoof the source address: \" + e.strerror\n                        )\n>               sock.connect(sa)\nE               ConnectionRefusedError: [Errno 111] Connection refused\nmitmproxy/net/tcp.py:678: ConnectionRefusedError\nDuring handling of the above exception, another exception occurred:\nself = <test.mitmproxy.proxy.test_server.TestUpstreamProxySSL object at 0x7f1da31ab978>\n    def test_simple(self):\n        p = self.pathoc()\n>       with p.connect():\ntest/mitmproxy/proxy/test_server.py:980: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest/mitmproxy/tservers.py:183: in connect\n    return pathod.pathoc.Pathoc.connect(self, self.lazy_connect)\npathod/pathoc.py:312: in connect\n    with tcp.TCPClient.connect(self) as closer:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da31abbe0>\n    def connect(self):\n        try:\n            connection = self.create_connection()\n        except (socket.error, IOError) as err:\n            raise exceptions.TcpException(\n                'Error connecting to \"%s\": %s' %\n>               (self.address[0], err)\n            )\nE           mitmproxy.exceptions.TcpException: Error connecting to \"localhost\": [Errno 111] Connection refused\nmitmproxy/net/tcp.py:697: TcpException\n___________ TestUpstreamProxySSL.test_change_upstream_proxy_connect ____________\nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da30f19e8>\n    def connect(self):\n        try:\n>           connection = self.create_connection()\nmitmproxy/net/tcp.py:693: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da30f19e8>\ntimeout = None\n    def create_connection(self, timeout=None):\n        # Based on the official socket.create_connection implementation of Python 3.6.\n        # https://github.com/python/cpython/blob/3cc5817cfaf5663645f4ee447eaed603d2ad290a/Lib/socket.py\n    \n        err = None\n        for res in socket.getaddrinfo(self.address[0], self.address[1], 0, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = self.makesocket(af, socktype, proto)\n                if timeout:\n                    sock.settimeout(timeout)\n                if self.source_address:\n                    sock.bind(self.source_address)\n                if self.spoof_source_address:\n                    try:\n                        if not sock.getsockopt(socket.SOL_IP, socket.IP_TRANSPARENT):\n                            sock.setsockopt(socket.SOL_IP, socket.IP_TRANSPARENT, 1)\n                    except Exception as e:\n                        # socket.IP_TRANSPARENT might not be available on every OS and Python version\n                        raise exceptions.TcpException(\n                            \"Failed to spoof the source address: \" + e.strerror\n                        )\n                sock.connect(sa)\n                return sock\n    \n            except socket.error as _:\n                err = _\n                if sock is not None:\n                    sock.close()\n    \n        if err is not None:\n>           raise err\nmitmproxy/net/tcp.py:687: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da30f19e8>\ntimeout = None\n    def create_connection(self, timeout=None):\n        # Based on the official socket.create_connection implementation of Python 3.6.\n        # https://github.com/python/cpython/blob/3cc5817cfaf5663645f4ee447eaed603d2ad290a/Lib/socket.py\n    \n        err = None\n        for res in socket.getaddrinfo(self.address[0], self.address[1], 0, socket.SOCK_STREAM):\n            af, socktype, proto, canonname, sa = res\n            sock = None\n            try:\n                sock = self.makesocket(af, socktype, proto)\n                if timeout:\n                    sock.settimeout(timeout)\n                if self.source_address:\n                    sock.bind(self.source_address)\n                if self.spoof_source_address:\n                    try:\n                        if not sock.getsockopt(socket.SOL_IP, socket.IP_TRANSPARENT):\n                            sock.setsockopt(socket.SOL_IP, socket.IP_TRANSPARENT, 1)\n                    except Exception as e:\n                        # socket.IP_TRANSPARENT might not be available on every OS and Python version\n                        raise exceptions.TcpException(\n                            \"Failed to spoof the source address: \" + e.strerror\n                        )\n>               sock.connect(sa)\nE               ConnectionRefusedError: [Errno 111] Connection refused\nmitmproxy/net/tcp.py:678: ConnectionRefusedError\nDuring handling of the above exception, another exception occurred:\nself = <test.mitmproxy.proxy.test_server.TestUpstreamProxySSL object at 0x7f1da30f1b70>\n    def test_change_upstream_proxy_connect(self):\n        # skip chain[0].\n        self.proxy.tmaster.addons.add(\n            UpstreamProxyChanger(\n                (\"127.0.0.1\", self.chain[1].port)\n            )\n        )\n        p = self.pathoc()\n>       with p.connect():\ntest/mitmproxy/proxy/test_server.py:1005: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest/mitmproxy/tservers.py:183: in connect\n    return pathod.pathoc.Pathoc.connect(self, self.lazy_connect)\npathod/pathoc.py:312: in connect\n    with tcp.TCPClient.connect(self) as closer:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nself = <test.mitmproxy.tservers.LazyPathoc object at 0x7f1da30f19e8>\n    def connect(self):\n        try:\n            connection = self.create_connection()\n        except (socket.error, IOError) as err:\n            raise exceptions.TcpException(\n                'Error connecting to \"%s\": %s' %\n>               (self.address[0], err)\n            )\nE           mitmproxy.exceptions.TcpException: Error connecting to \"localhost\": [Errno 111] Connection refused\nmitmproxy/net/tcp.py:697: TcpException", "issue_status": "Closed", "issue_reporting_time": "2017-05-03T04:12:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "673": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2308", "issue_id": "#2308", "issue_summary": "Transparent mode failure: Runtime Error (could not resolve original destination) OS Sierra", "issue_description": "pgeorgan commented on 2 May 2017 \u2022\nedited\nSteps to reproduce the problem:\nFollowed these steps http://mitmproxy.org/doc/transparent/osx.html\nmitmproxy -T --host\nAny other comments? What have you tried so far?\nEverything has worked smoothly up until this point. Traffic is not reaching its original intended target, so all my apps are acting as if they have no internet connection when I attempt to snoop their traffic.\nsudo pfctl -s nat\nNo ALTQ support in kernel\nALTQ related functions disabled\nnat-anchor \"com.apple/\" all\nrdr-anchor \"com.apple/\" all\nrdr on en1 inet proto tcp from any to any port = 80 -> 127.0.0.1 port 8080\nrdr on en1 inet proto tcp from any to any port = 443 -> 127.0.0.1 port 8080\nSystem information\nMitmproxy version: 2.0.2 (release version)\nPython version: 3.6.1\nPlatform: Darwin-16.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e  16 Feb 2017\nMac version: 10.12.4 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-05-02T13:48:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "674": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2298", "issue_id": "#2298", "issue_summary": "Cannot kill flows", "issue_description": "Member\nmhils commented on 30 Apr 2017\nSteps to reproduce the problem:\nOpen mitmproxy\nPress \"X\" on a flow.\nNothing happens.\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0345-0x97a0072)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-04-30T13:28:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "675": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2292", "issue_id": "#2292", "issue_summary": "mitmproxy assumes klipper is running", "issue_description": "ilpianista commented on 29 Apr 2017\nSteps to reproduce the problem:\nUnder KDE Plasma 5, perform any request\nuse C to copy flow to clipboard\nI got this error: Export to clipboard (content,headers+content,url,as curl command,as python code,as locust code,as locust task)? Cannot find '.setClipboardContents' in object /klipper at org.kde.klipper\nSystem information\nMitmproxy version: 2.0.1 (release version)\nPython version: 3.6.1\nPlatform: Linux-4.10.13-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nLinux distro: arch\nSince KDE Plasma 5, klipper is not used by default. Instead the clipboard widget is used which unfortunately doesn't expose a DBus interface. Of course I can manually start klipper to get it working, but who's assuming klipper is running on my system?", "issue_status": "Closed", "issue_reporting_time": "2017-04-29T08:34:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "676": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2284", "issue_id": "#2284", "issue_summary": "mitmweb 2.0.1 not working under Chrome 58", "issue_description": "alexandrul commented on 28 Apr 2017\nSteps to reproduce the problem:\nstart mitmweb\nopen the mitmweb web page in Chrome 58\nno visible content\nAny other comments? What have you tried so far?\nIt's working fine under Chrome 57.0.2987.133 and Firefox\nI was able to show the interface by playing with the answers from http://stackoverflow.com/questions/31211359/ (added the meta tag from http://stackoverflow.com/a/35273628/19756 to the index.html template), but I still have some warnings in the console:\nWARNING:tornado.access:404 GET /static/vendor.js.map (10.162.60.254) 0.00ms\nWARNING:tornado.access:404 GET /static/app.js.map (10.162.60.254) 0.00ms\nWARNING:tornado.access:404 GET /static/vendor.css.map (10.162.60.254) 1.00ms\nWARNING:tornado.access:404 GET /static/app.css.map (10.162.60.254) 1.00ms\nSystem information\nChrome 58.0.3029.81 (64-bit)\nmitmweb --version\nMitmproxy version: 2.0.1 (release version)\nPython version: 3.5.2\nPlatform: Windows-8.1-6.3.9600-SP0\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nWindows version: 8.1 6.3.9600 SP0 Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2017-04-28T11:34:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "677": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2272", "issue_id": "#2272", "issue_summary": "url with Chinese query string return 400", "issue_description": "nmweizi commented on 27 Apr 2017 \u2022\nedited\nuse IE11,url with Chinese query string,return 400.\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.5.3\nPlatform: Windows-10-10.0.14393-SP0\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nWindows version: 10 10.0.14393 SP0 Multiprocessor Free\nchrome+mitmdump is fine.\nbut use IE11+mitmdump is error.\nuse IE11 + burpsuite is fine.\nmitmdump --listen-host 127.0.0.1 --listen-port 8080\nMitmproxy was no hint error, but query string lc_name was submitted to the charset difference.\nreturn HTTP 400.\nhtml charset is gb2312.\nIE11 developer tools see url http://wlpx.tax-edu.net/jsp/portal/PortalControl?flag=selectCourse&lc_id=42825&lc_name=\u00e9\ufffd\ufffd\u00e7\ufffd\u00a8\u00e7\ufffd\u00a5\u00e8\u00af\ufffd\u00e5\ufffd\ufffd\u00e8\ufffd\u00bd\u00e5\ufffd\ufffd\nchrome developer tools see url http://wlpx.tax-edu.net/jsp/portal/PortalControl?flag=selectCourse&lc_id=42825&lc_name=%CD%A8%D3%C3%D6%AA%CA%B6%BA%CD%C4%DC%C1%A6", "issue_status": "Closed", "issue_reporting_time": "2017-04-27T01:05:45Z", "fixed_by": "#3464", "pull_request_summary": "Non ascii characters in url", "pull_request_description": "Contributor\nrjt-gupta commented on 3 Feb 2019\nChecks non ascii characters in url and escapes/quotes them using urllib.parse.quote\nFixes #2272 and #3439", "pull_request_status": "Merged", "issue_fixed_time": "2019-09-28T09:46:59Z", "files_changed": [["21", "mitmproxy/net/http/url.py"], ["16", "test/mitmproxy/net/http/test_url.py"]]}, "678": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2266", "issue_id": "#2266", "issue_summary": "Upgrade to Python 3.6+", "issue_description": "Member\nmhils commented on 26 Apr 2017 \u2022\nedited\nThis issue tracks all roadblocks we need to overcome to make use of Python 3.6-exclusive features. There's not immediate need to upgrade right away, but it's useful to have an overview of what's left nonetheless.\nWindows\nWindows users can just install Python 3.6\nWindows Subsystem for Linux currently contains Ubuntu 16.04, but a do-release-upgrade can be used without problems\nmacOS\nHigh Sierra only has Python 2.7.10 and no Python 3\nHomebrew is already on Python 3.6.3\nUbuntu\nBionic 18.04 (next LTS release in April 2018) will have Python 3.6.3 (or a more recent patch-level)\nArtful 17.10 has Python 3.6.3\nZesty 17.04 has Python 3.5.3\nUbuntu 16.04 LTS is still on 3.5.1\nDebian\ntesting: Debian 10 (buster) currently contains Python 3.6.3 -- no release date yet\nstable: Debian 9 (stretch) is still on 3.5.3\nArch Linux\nrolling release: has Python 3.6.3 as python package\nFedora\nFedora 27 has Python 3.6.3\nFedora 26 has Python 3.6.3\nFedora 25 has Python 3.5.4\nKali Linux\nkali-roll has Python 3.6.3 -- rolling release since January 2016\nkali-dev has Python 3.6.3\nPyInstaller\nPyInstaller supports Python 3.6 since PyInstaller 3.3. We still have to upgrade to PyInstaller 3.3. Updating to PyInstaller 3.3.0 ends with a RecursionError within PyInstaller.", "issue_status": "Closed", "issue_reporting_time": "2017-04-26T08:30:16Z", "fixed_by": "#3025", "pull_request_summary": "Python 3.5 is dead -- long live Python 3.6!", "pull_request_description": "Member\nKriechi commented on 31 Mar 2018\nfixes #2266", "pull_request_status": "Merged", "issue_fixed_time": "2018-03-31T20:59:48Z", "files_changed": [["9", ".travis.yml"], ["8", "docs/src/content/overview-installation.md"], ["2", "mitmproxy/net/tcp.py"], ["4", "mitmproxy/tools/main.py"], ["15", "mitmproxy/utils/typecheck.py"], ["2", "release/README.md"], ["1", "setup.py"], ["2", "test/filename_matching.py", "100644", "\u2192", "100755"], ["2", "test/individual_coverage.py", "100644", "\u2192", "100755"], ["19", "test/mitmproxy/utils/test_typecheck.py"], ["6", "tox.ini"]]}, "679": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2260", "issue_id": "#2260", "issue_summary": "Cannot modify HTTP/2 responses", "issue_description": "NuSkooler commented on 25 Apr 2017\nSteps to reproduce the problem:\nPerhaps I'm missing something here, but I cannot seem to modify HTTP/2 responses. HTTP/1.1 works fine. The following script breaks when the browser attempts to use HTTP/2:\ndef response(flow):\n flow.response.headers['X-Filtered'] = 'true'\nInvoked with mitmproxy -T --host -s script.py.\nAny other comments? What have you tried so far?\nIf I additionally add --no-http2, the script works correctly. If the browser does not use HTTP/2, everything also works as expected.\nSystem information\nMitmproxy version: 2.0.1 (release version) Precompiled Binary\nPython version: 3.5.2\nPlatform: Linux-3.16.0-4-amd64-x86_64-with-debian-8.7\nSSL version: OpenSSL 1.1.0e  16 Feb 2017\nLinux distro: debian 8.7 ", "issue_status": "Closed", "issue_reporting_time": "2017-04-25T02:21:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "680": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2257", "issue_id": "#2257", "issue_summary": "crash when export flow to 'r' curl", "issue_description": "NormanOu commented on 23 Apr 2017\nSteps to reproduce the problem:\nenter a flow view\npress E and choose r\ncrash\nAny other comments? What have you tried so far?\nSystem information\nTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\nself.loop.run()\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\nself.event_loop.run()\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\nself._loop()\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\nself._watch_filesfd\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in\nevent_loop, callback, self.get_available_raw_input())\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\ncallback(processed, processed_codes)\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\nself.process_input(keys)\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\nk = self._topmost_widget.keypress(self.screen_size, k)\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\nk = super().keypress(size, k)\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1116, in keypress\nreturn self.footer.keypress((maxcol,),key)\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/statusbar.py\", line 155, in keypress\nreturn self.master.ab.keypress(*args, **kwargs)\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/statusbar.py\", line 108, in keypress\nself.prompt_execute(k)\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/statusbar.py\", line 133, in prompt_execute\nmsg = p(txt)\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/statusbar.py\", line 31, in call\nreturn self.callback(txt, *self.args)\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/common.py\", line 328, in export_to_clip_or_file\nwriter(exporter(flow))\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/export.py\", line 39, in curl_command\ndata += \" --data-binary '%s'\" % _native(request.content)\nFile \"/usr/local/Cellar/mitmproxy/2.0.1/libexec/lib/python3.6/site-packages/mitmproxy/export.py\", line 13, in _native\nreturn s.decode()\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x88 in position 188: invalid start byte\nMitmproxy version: 2.0.1 (release version)\nPython version: 3.6.1\nPlatform: Darwin-16.1.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.12.1 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-04-23T03:16:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "681": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2255", "issue_id": "#2255", "issue_summary": "Cannot load flows in mitmproxy", "issue_description": "Member\nmhils commented on 22 Apr 2017\nSteps to reproduce the problem:\nmitmproxy -> L\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 426, in load_flows_path\n    master.Master.load_flows_file(self, path)\nAttributeError: type object 'Master' has no attribute 'load_flows_file'\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0283-0x3d7cde0)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-04-22T00:53:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "682": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2254", "issue_id": "#2254", "issue_summary": "Can\u2019t use a custom certificate since python3", "issue_description": "mw3hner commented on 21 Apr 2017 \u2022\nedited\nHello.\nI have problems with using a costum certificate since version 1.0.0 (python3).\nSteps to reproduce the problem:\n(I set up two virtual machines like described here.)\nOn VM1: Create a costum certificate like described in: \"Using a custom certificate\"\nOn VM1: Start the mitmproxy (in transparent mode) with: mitmdump -T --cert example.com=cert.pem\nOn VM2: And on the other virtual machine i opened a browser with the url example.com (e.g. google.com).\nThe given certificate was always the default certificate created with the ca certificate of the mitmproxy. Also I didn't get any error message from the mitmproxy. I tested it with Version 1.0.0, 1.0.2, 2.0.0, 2.0.1 .\nWhen i do these steps with Version 0.18.2 (and python 2.7) everything works fine.\nSystem information\nmitmproxy >=1.0.0\nPython 3.5.2\nUbuntu 16.04.1 LTS\nMitmproxy version: 2.0.0 (release version) \nPython version: 3.5.2\nPlatform: Linux-4.4.0-31-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g  1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-04-21T08:09:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "683": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2253", "issue_id": "#2253", "issue_summary": "Upstream HTTPS", "issue_description": "JakeAustwick commented on 21 Apr 2017\nI also posted this on Discourse, but I'm posting it here because I believe it to be a bug.\nI have my script changing the upstream proxy for HTTP connections, but it seems to fail for HTTPS connections. Here's a basic stripped down example.\nhttps://gist.github.com/JakeAustwick/c3116d86f4483d1acede4420f02efb72\nThe script works fine for http://api.ipify.org/, but fails for https://api.ipify.org/. With HTTPS I see the following, which shows the upstream proxy wasn't changed.\nServer connection to default_proxy:8888 failed: Error connecting to \"default_proxy\": [Errno 8] nodename nor servname provided, or not known\nRunning Command:\nmitmdump -s utilities/proxy_redirects.py -U http://default_proxy:8888\nPlatform / Library Version ( I also tested on Ubuntu):\nmitmdump --version\nMitmproxy version: 2.0.1 (release version) \nPython version: 3.6.1\nPlatform: Darwin-14.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.10.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-04-21T02:45:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "684": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2250", "issue_id": "#2250", "issue_summary": "`refresh_set_cookie_header` raises an IndexError", "issue_description": "Member\nmhils commented on 20 Apr 2017\nSteps to reproduce the problem:\nrefresh_set_cookie_header(\"\", 42)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\net\\http\\response.py\", line 189, in refresh\n    refreshed = cookies.refresh_set_cookie_header(set_cookie_header, delta)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\net\\http\\cookies.py\", line 296, in refresh_set_cookie_header\n    name, value, attrs = parse_set_cookie_header(c)[0]\nIndexError: list index out of range\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0283-0x3d7cde0)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-43-Microsoft-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-04-20T00:02:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "685": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2247", "issue_id": "#2247", "issue_summary": "Not sure, but feels like Mitmproxy isn't clearing memory", "issue_description": "Mradr commented on 18 Apr 2017\nSteps to reproduce the problem:\nWhen editing my script, I will hit control + s to save my work. Mitmproxy (or dump) will reload the script this forces my script to load twice over (I have a save feature that will spit out that it is loading and saving). Checking memory, I see that the memory usage of Mitmproxy has double and the CPU usage has went up just a bit. Over time, if I continue to run Mitmproxy without closing it out and save/restarting it again, the memory will hit 80-100% causing the system to be unstable, slow, or full on freeze.\nAny other comments? What have you tried so far?\nNot sure what the problem is 100%, but I've seen this before with python garbage collection. Something not releasing access and so there for never gets garbage collected.\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2017-04-18T12:44:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "686": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2243", "issue_id": "#2243", "issue_summary": "Link to the right branch in the option documentation", "issue_description": "kden commented on 18 Apr 2017\nSteps to reproduce the problem:\nDesired outcome; to add a filter that executes at startup which is the equivalent of typing \"f\" and then \"'!(~d \"google\" | ~d \"gstatic\")'\" while running mitmproxy. (These filter is helpful in Android debugging because the emulator makes some calls back to the Google mothership I don't care about.)\nI decided to try to do this as part of a config file. I was referred to the code at https://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/options.py from the page at http://docs.mitmproxy.org/en/stable/config.html\nThe closest option I found to \"f\" was view_filter, which is line 405 in the version of options.py that is current for me (https://github.com/mitmproxy/mitmproxy/blob/b19fefd173637ef20b72da3a0a05715db27c74be/mitmproxy/options.py)\nI put the following in my ~/.mitmproxy/config.yaml\nview_filter: '!(~d \"google\" | ~d \"gstatic\")'\nStarting up mitmproxy gave the error\nmitmproxy: Error reading /home/caden/.mitmproxy/config.yaml: 'No such option: view_filter'\nI also tried \"intercept\" and that did not work.\nOn a whim I tried the following in ~/.mitmproxy/config.yaml\nfilter: '!(~d \"google\" | ~d \"gstatic\")'\nThis seemed to work!\nAny other comments? What have you tried so far?\nI'm not really sure what you will want to do with this information. I would think probably change line 405 in options.py to say filter instead of view_filter. But that's just a superficial suggestion.\nSystem information\nmitmproxy --version\nMitmproxy version: 2.0.1 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-72-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial\n1", "issue_status": "Closed", "issue_reporting_time": "2017-04-17T23:12:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "687": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2242", "issue_id": "#2242", "issue_summary": "Where is HTTPRequest.from_stream?", "issue_description": "alexsharoff commented on 17 Apr 2017\nI need a way to parse HTTPRequest from a stream (in-memory text chunk, actually). Google shows that such a method was available previously, but I can't find in mitmproxy v2.0.1. Was it removed? What should I use instead?", "issue_status": "Closed", "issue_reporting_time": "2017-04-17T15:34:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "688": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2238", "issue_id": "#2238", "issue_summary": "Using external libraries with mitmdump", "issue_description": "rikonor commented on 12 Apr 2017\nSteps to reproduce the problem:\nDevelop a need to use an external package in your mitmdump script, e.g BeautifulSoup.\nRealize it's not documented.\nAny other comments? What have you tried so far?\nThe only reference I was able to find online to this issue was on Discourse.\nAlthough the solution presented there did end up helping me solve the issue - the fact that this is not documented anywhere (as far as I could tell) in the official docs is not great.\nI would be happy to submit a PR in the Scripts part of the docs, but I don't think the solution I ended up using is very good - I just ran /path/to/mitmproxy/libexec/bin/pip3 install <libname>.\nSystem information\nUsing version 2.0.1 on OSX, installed via homebrew.", "issue_status": "Closed", "issue_reporting_time": "2017-04-12T01:59:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "689": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2237", "issue_id": "#2237", "issue_summary": "Errno 61 Connection refused", "issue_description": "PranavPrakash52 commented on 11 Apr 2017 \u2022\nedited\nSteps to reproduce the problem:\n1.Copy this script from the examples\n# This scripts demonstrates how mitmproxy can switch to a second/different upstream proxy\n# in upstream proxy mode.\n#\n# Usage: mitmdump -U http://default-upstream-proxy.local:8080/ -s change_upstream_proxy.py\n#\n# If you want to change the target server, you should modify flow.request.host and flow.request.port\n\n\ndef proxy_address(flow):\n   return (\"proxy-ip\", port)\n\n\ndef request(flow):\n    if flow.request.method == \"CONNECT\":\n        # If the decision is done by domain, one could also modify the server address here.\n        # We do it after CONNECT here to have the request data available as well.\n        return\n    address = proxy_address(flow)\n    if flow.live:\n        flow.live.change_upstream_proxy_server(address)\n2.Run the above script.\nAny other comments? What have you tried so far?\nI tried running but i am getting this error\n$ mitmdump -U http://127.0.0.1:8085/ -s update_mitmproxy.py --no-http2\nLoading script: update_mitmproxy.py\nProxy server listening at http://0.0.0.0:8080\nProxy server listening at http://0.0.0.0:8080\n127.0.0.1:58627: clientconnect\n127.0.0.1:58627: clientconnect\n127.0.0.1:58627: serverconnect\n  -> 127.0.0.1:8085\n127.0.0.1:58627: Server connection to 127.0.0.1:8085 failed: Error connecting to \"127.0.0.1\": [Errno 61] Connection refused\n127.0.0.1:58627: Server connection to 127.0.0.1:8085 failed: Error connecting to \"127.0.0.1\": [Errno 61] Connection refused\n127.0.0.1:58627: ProtocolException('Server connection to 127.0.0.1:8085 failed: Error connecting to \"127.0.0.1\": [Errno 61] Connection refused',)\n127.0.0.1:58627: clientdisconnect\n127.0.0.1:58627: clientdisconnect\n \nSystem information\nMitmproxy version: 2.0.1\nPython version: 3.5.2\nPlatform:Linux-4.4.0-51-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL Version:OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-04-11T06:25:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "690": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2236", "issue_id": "#2236", "issue_summary": "Server connection failed", "issue_description": "PranavPrakash52 commented on 11 Apr 2017 \u2022\nedited\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2017-04-11T06:20:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "691": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2233", "issue_id": "#2233", "issue_summary": "HAR export script problem", "issue_description": "tzvetkov75 commented on 9 Apr 2017\nHi, I have problem making HAR export to work at all\nUBUNTU 16.04. default python 3.5\nSteps\nWrote a flow to file mitmdump -r ./a.flow . used the binary\nTried to convert\nvesselin@aspirin:~/Downloads/mitmproxy-2.0.1-linux$ mitmdump -s \"./src/mitmproxy/examples/complex/har_dump.py test.har\" -r ./a.flow Loading script: ./src/mitmproxy/examples/complex/har_dump.py test.har Proxy server listening at http://0.0.0.0:8080 Script error: Traceback (most recent call last): File \"./src/mitmproxy/examples/complex/har_dump.py\", line 152, in response HAR[\"log\"][\"entries\"].append(entry) KeyError: 'log'\nCan you help?\nThx\nVesselin", "issue_status": "Closed", "issue_reporting_time": "2017-04-08T20:22:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "692": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2231", "issue_id": "#2231", "issue_summary": "Android application complain \"unknown CA\" in wireshark", "issue_description": "Kailiangying commented on 7 Apr 2017\nI install the update to data mitmproxy from github. I am using mitmproxy as transparent proxy for my android device. I install the mitmproxy certificate on my android as system certificate and run the facebook app. The wireshark on proxy shows \"Unknown CA\" sent from server. Following is the detail of how I tried.\nSteps to reproduce the problem:\nI. The proxy is running in transparent mode on an Ubuntu machine on the same network as the Android device\n2. I install the CA from: mitm.it from browser in the Ubuntu machine. This approach gives me the user CA.\n3. I then follow the approach here to install same CA as system CA on the Android device\nhttp://wiki.cacert.org/FAQ/ImportRootCert#Android_Phones_.26_Tablets\n4. When I run the facebook Android app and receive the fake facebook certificate from proxy, facebook throws ssl alert and shows unknown CA.\nAny other comments? What have you tried so far?\nAny suggestion how should I configure the Android to avoid the failure?\nThanks for any suggestion.\nSystem information\nI also attach the wireshark log for traffic information detail.\nwiresharkCapture-facebook.pcapng.zip", "issue_status": "Closed", "issue_reporting_time": "2017-04-06T22:18:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "693": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2230", "issue_id": "#2230", "issue_summary": "Cyrillic domains https problem", "issue_description": "ErDmKo commented on 5 Apr 2017\nSteps to reproduce the problem:\nStart http proxy\nGo to https://\u0444\u043e\u043d\u0434-\u0434\u043e\u0441\u0442\u043e\u0438\u043d\u0441\u0442\u0432\u043e.\u0440\u0444\nSee the problem Certificate Verification Error for \u0444\u043e\u043d\u0434-\u0434\u043e\u0441\u0442\u043e\u0438\u043d\u0441\u0442\u0432\u043e.\u0440\u0444: hostname '\u0444\u043e\u043d\u0434-\u0434\u043e\u0441\u0442\u043e\u0438\u043d\u0441\u0442\u0432\u043e.\u0440\u0444' doesn't match 'xn----dtbebu0aecead5adket.xn--p1ai'\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 2.0.1 (release version)\nPython version: 3.6.1\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.11.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-04-05T12:00:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "694": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2228", "issue_id": "#2228", "issue_summary": "Sticky cookies are improperly formatted.", "issue_description": "kitlith commented on 5 Apr 2017\nSteps to reproduce the problem:\nGo to http://www.html-kit.com/tools/cookietester/\nClick 'Set Test Cookie'\nObserve that one cookie is sent to the server.\nRemove the cookie.\nlaunch mitmproxy with mitmproxy -t html-kit\\.com and tell your browser to use it as a proxy\nReload the page.\nClick 'Set Test Cookie'\nObserve that two 'cookies' are sent to the server.\nAny other comments? What have you tried so far?\nThere appears to be a comma in the output of mitmproxy, even though it is surrounded by quotes. It's possible, then that this is a parsing fail on the tool's end caused by a difference in what's sent back for the format of the date. Still, should it really be changing that?\nSystem information\nArch Linux, freshly updated.\nMitmproxy version: 2.0.1 (release version)\nPython version: 3.6.0\nPlatform: Linux-4.10.6-1-ARCH-x86_64-with-glibc2.3.4\nSSL version: OpenSSL 1.0.2k 26 Jan 2017", "issue_status": "Closed", "issue_reporting_time": "2017-04-05T04:03:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "695": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2226", "issue_id": "#2226", "issue_summary": "Create docker image of mitmproxy", "issue_description": "monikasoni commented on 1 Apr 2017\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2017-03-31T21:24:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "696": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2225", "issue_id": "#2225", "issue_summary": "Not able to install mitmproxy on ubuntu", "issue_description": "michaelschem commented on 29 Mar 2017\nSteps to reproduce the problem:\ninstall mitmproxy with apt-get\nI realized this version was an old version so I uninstalled it\nTried to use the precompiled executables, but they don't work for me because I need to run python scripts with them that use 3rd party libraries\ninstalled with pip sudo pip3 install mitmproxy\nThe install seems to fail\nmitmproxy -bash: /home/mac/.local/bin/mitmproxy: No such file or directory\nAny other comments? What have you tried so far?\nThe install seems to have worked, here is the install log\nsudo pip3 install mitmproxy The directory '/home/mac/.cache/pip/http' or its parent directory is not owned by the current user and the cache has been disabled. Please check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag. The directory '/home/mac/.cache/pip' or its parent directory is not owned by the current user and caching wheels has been disabled. check the permissions and owner of that directory. If executing pip with sudo, you may want sudo's -H flag. Collecting mitmproxy Downloading mitmproxy-2.0.1-py3-none-any.whl (1.4MB) 100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.4MB 727kB/s Requirement already satisfied: pyperclip<1.6,>=1.5.22 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: tornado<4.5,>=4.3 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: hyperframe<5,>=4.0.1 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Collecting kaitaistruct<0.7,>=0.6 (from mitmproxy) Downloading kaitaistruct-0.6.tar.gz Requirement already satisfied: passlib<1.8,>=1.6.5 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: pyOpenSSL<17.0,>=16.0 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: brotlipy<0.7,>=0.5.1 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: h2<3,>=2.5.1 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: certifi>=2015.11.20.1 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: pyparsing<2.3,>=2.1.3 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: click<7,>=6.2 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: setuptools!=29.0.0,>=11.3 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: pyasn1<0.3,>=0.1.9 in /usr/lib/python3/dist-packages (from mitmproxy) Requirement already satisfied: cryptography<1.9,>=1.3 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: watchdog<0.9,>=0.8.3 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: blinker<1.5,>=1.4 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: urwid<1.4,>=1.3.1 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: html2text<=2016.9.19,>=2016.1.8 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: sortedcontainers<1.6,>=1.5.4 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: cssutils<1.1,>=1.0.1 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: ruamel.yaml<0.14,>=0.13.2 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: jsbeautifier<1.7,>=1.6.3 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: construct<2.9,>=2.8 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: requests<3,>=2.9.1 in /usr/local/lib/python3.5/dist-packages (from mitmproxy) Requirement already satisfied: six>=1.5.2 in /usr/lib/python3/dist-packages (from pyOpenSSL<17.0,>=16.0->mitmproxy) Requirement already satisfied: cffi>=1.0.0 in /usr/local/lib/python3.5/dist-packages (from brotlipy<0.7,>=0.5.1->mitmproxy) Requirement already satisfied: hpack<3,>=2.2 in /usr/local/lib/python3.5/dist-packages (from h2<3,>=2.5.1->mitmproxy) Requirement already satisfied: appdirs>=1.4.0 in /usr/local/lib/python3.5/dist-packages (from setuptools!=29.0.0,>=11.3->mitmproxy) Requirement already satisfied: packaging>=16.8 in /usr/local/lib/python3.5/dist-packages (from setuptools!=29.0.0,>=11.3->mitmproxy) Requirement already satisfied: idna>=2.0 in /usr/local/lib/python3.5/dist-packages (from cryptography<1.9,>=1.3->mitmproxy) Requirement already satisfied: PyYAML>=3.10 in /usr/local/lib/python3.5/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy) Requirement already satisfied: argh>=0.24.1 in /usr/local/lib/python3.5/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy) Requirement already satisfied: pathtools>=0.1.1 in /usr/local/lib/python3.5/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy) Requirement already satisfied: editorconfig>=0.12.0 in /usr/local/lib/python3.5/dist-packages (from jsbeautifier<1.7,>=1.6.3->mitmproxy) Requirement already satisfied: pycparser in /usr/local/lib/python3.5/dist-packages (from cffi>=1.0.0->brotlipy<0.7,>=0.5.1->mitmproxy) Installing collected packages: kaitaistruct, mitmproxy Running setup.py install for kaitaistruct ... done Successfully installed kaitaistruct-0.6 mitmproxy-2.0.1\nSystem information\nNo version of mitmproxy obviously because it's not installed yet.\nLinux DarkNetLab 4.4.0-59-generic #80-Ubuntu SMP Fri Jan 6 17:47:47 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux", "issue_status": "Closed", "issue_reporting_time": "2017-03-29T18:18:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "697": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2218", "issue_id": "#2218", "issue_summary": "Mitmproxy asking for a UTF console", "issue_description": "karthikbhata97 commented on 28 Mar 2017\nSteps to reproduce the problem:\nRun mitmproxy on the machine with non UTF console environment\nError message:\nError: mitmproxy requires a UTF console environment.\nSet your LANG enviroment variable to something like en_US.UTF-8\nAny other comments? What have you tried so far?\nFor the first timers it is a bit confusing (I have en_IN language)\nBecause one can't view anything (say options, version etc)\nMaybe choosing one from the existing UTF languages on the machine would be nice.\nNeed your suggestions.\nSystem information\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-62-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-03-28T12:25:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "698": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2216", "issue_id": "#2216", "issue_summary": "Error when using mitmdump with script with print() statements", "issue_description": "Member\nujjwal96 commented on 26 Mar 2017\nSteps to reproduce the problem:\nMake a script with print statement\ndef response(flow):\n    print(\"Test\")\nRun mitmdump. mitmdump -s script.py\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/addons/termlog.py\", line 27, in log\n   err=(e.level == \"error\")\n File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/click/termui.py\", line 420, in secho\n   return echo(style(text, **styles), file=file, nl=nl, err=err, color=color)\n File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/click/utils.py\", line 259, in echo\n   file.write(message)\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/addons/script.py\", line 78, in write\n   self.log(buf)\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/log.py\", line 31, in warn\n   self(txt, \"warn\")\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/log.py\", line 40, in __call__\n   self.master.add_log(text, level)\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/master.py\", line 67, in add_log\n   self.addons.trigger(\"log\", log.LogEntry(e, level))\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/addonmanager.py\", line 155, in trigger\n   return\n File \"/usr/lib/python3.5/contextlib.py\", line 77, in __exit__\n   self.gen.throw(type, value, traceback)\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/master.py\", line 49, in handlecontext\n   yield\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/addonmanager.py\", line 153, in trigger\n   self.invoke_addon(i, name, *args, **kwargs)\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/addonmanager.py\", line 144, in invoke_addon\n   func(*args, **kwargs)\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/addons/termlog.py\", line 21, in log\n   if self.options.verbosity >= log.log_tier(e.level):\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/optmanager.py\", line 165, in __getattr__\n   return self._options[attr].current()\n File \"/home/ujjwal/Github/mitmproxy/mitmproxy/optmanager.py\", line 51, in current\n   v = self.default\nRecursionError: maximum recursion depth exceeded\nAny other comments? What have you tried so far?\nIt is probably caused by #2207\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0255-0x6f00c1b)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-62-generic-x86_64-with-elementary-0.4-loki\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: \"elementary\" 0.4 loki", "issue_status": "Closed", "issue_reporting_time": "2017-03-26T14:17:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "699": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2214", "issue_id": "#2214", "issue_summary": "Remove watchdog dependency", "issue_description": "Member\nKriechi commented on 26 Mar 2017\nTaken from the GSoC 2017 ideas page, because this should really be an issue here.\nWe currently depend on the watchdog library to watch the filesystem and reload mitmproxy scripts automatically. Due to numerous bugs in watchdog, we have restricted ourselves to using only watchdogs's PollingObserver over time. Watchdog now is a large dependency with platform-specific binary components and multiple subdependencies which we do not really use, so we want reimplement the very small subset that is needed for mitmproxy in pure Python. This makes mitmproxy smaller and we don't have to worry about watchdog breaking mitmproxy installations anymore.", "issue_status": "Closed", "issue_reporting_time": "2017-03-26T12:31:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "700": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2210", "issue_id": "#2210", "issue_summary": "Crash with duplicate flow", "issue_description": "cym13 commented on 25 Mar 2017\nSteps to reproduce the problem:\nStart mitmproxy\nGo to any url such as https://github.com/mitmproxy/mitmproxy\nHit 'D' to duplicate the flow\nThe application crashes\nStacktrace\nDTraceback (most recent call last):\nFile \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\nself.loop.run()\nFile \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\nself.event_loop.run()\nFile \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\nself._loop()\nFile \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\nself._watch_filesfd\nFile \"/usr/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in\nevent_loop, callback, self.get_available_raw_input())\nFile \"/usr/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\ncallback(processed, processed_codes)\nFile \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\nself.process_input(keys)\nFile \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\nk = self._topmost_widget.keypress(self.screen_size, k)\nFile \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\nk = super().keypress(size, k)\nFile \"/usr/lib/python3.6/site-packages/urwid/container.py\", line 1128, in keypress\nreturn self.body.keypress( (maxcol, remaining), key )\nFile \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 417, in keypress\nreturn urwid.ListBox.keypress(self, size, key)\nFile \"/usr/lib/python3.6/site-packages/urwid/listbox.py\", line 987, in keypress\nself.make_cursor_visible((maxcol,maxrow))\nFile \"/usr/lib/python3.6/site-packages/urwid/listbox.py\", line 939, in make_cursor_visible\nfocus_widget, pos = self.body.get_focus()\nFile \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 284, in get_focus\nf = FlowItem(self.master, self.master.view.focus.flow)\nFile \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 123, in init\nw = self.get_text()\nFile \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 132, in get_text\nmax_url_len=cols,\nFile \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/common.py\", line 427, in format_flow\nacked = f.reply.state == \"committed\",\nAttributeError: 'NoneType' object has no attribute 'state'\nmitmproxy has crashed!\nPlease lodge a bug report at:\nhttps://github.com/mitmproxy/mitmproxy\nShutting down...\nSystem information\nMitmproxy version: 2.0.1 (release version)\nPython version: 3.6.0\nPlatform: Linux-4.10.2-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.0.2k 26 Jan 2017\nLinux distro: arch", "issue_status": "Closed", "issue_reporting_time": "2017-03-24T21:56:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "701": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2205", "issue_id": "#2205", "issue_summary": "Crash when opening detail view in master branch", "issue_description": "Contributor\ndequis commented on 23 Mar 2017\nSteps to reproduce the problem:\nHost in 10.0.0.1 with transparent proxy config and mitmproxy --mode transparent\nDevice with 10.0.0.1 example.net in /etc/hosts (not configured for transparent mitm)\nOpen example.net in device (should show bad gateway)\nOpen flow in mitmproxy\nPress tab twice to get to detail view\nCrash\nAny other comments? What have you tried so far?\n$ mitmproxy --mode transparent\nTraceback (most recent call last):\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/master.py\", line 295, in run\n    self.loop.run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/lib/python3.6/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/flowview.py\", line 502, in keypress\n    key = super().keypress(size, key)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/tabs.py\", line 38, in keypress\n    self.change_tab((self.tab_offset + 1) % n)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/tabs.py\", line 33, in change_tab\n    self.show()\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/tabs.py\", line 67, in show\n    body = self.tabs[self.tab_offset][1](),\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/flowview.py\", line 176, in view_details\n    return flowdetailview.flowdetails(self.view, self.flow)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy-3.0.0-py3.6.egg/mitmproxy/tools/console/flowdetailview.py\", line 34, in flowdetails\n    [\"Resolved Address\", \"{}:{}\".format(sc.ip_address[0], sc.ip_address[1])],\nTypeError: 'NoneType' object is not subscriptable\n\nmitmproxy has crashed!\nSystem information\nRevision 1e81747\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.6.0\nPlatform: Linux-4.9.11-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.0.2k 26 Jan 2017\nLinux distro: arch", "issue_status": "Closed", "issue_reporting_time": "2017-03-23T06:44:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "702": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2201", "issue_id": "#2201", "issue_summary": "Flaky Coverage for http2.py", "issue_description": "Member\nmhils commented on 22 Mar 2017\nSee codecov for #2200. Apparently that line is not triggered consistently in tests.", "issue_status": "Closed", "issue_reporting_time": "2017-03-22T14:10:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "703": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2198", "issue_id": "#2198", "issue_summary": "Teach options to know about a Path type", "issue_description": "Member\ncortesi commented on 22 Mar 2017\nAt the moment, the type we use for Path values is str. We use paths in many options, and we'd like to handle them specially in user interfaces (so we can, for instance, do path completion on tab).\nWe should teach optmanager to know about a Path type, which is treated just like a string. Ergonomically, I'd like user to still be able to say options.path = \"value\" rather than have to say options.path = types.Path(\"value\"), so it would be good to automatically handle type promotion.", "issue_status": "Closed", "issue_reporting_time": "2017-03-21T23:48:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "704": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2197", "issue_id": "#2197", "issue_summary": "Replay does not work with HTTP/2 flows.", "issue_description": "Member\nmhils commented on 22 Mar 2017\nSteps to reproduce the problem:\nReplay a HTTP/2 flow.\nNotice that the server fails because it expects a host header, but we only send an :authority header.\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0229-0x0c0c0d3)\nPython version: 3.5.2\nPlatform: Linux-3.4.0+-x86_64-with-Ubuntu-14.04-trusty\nSSL version: OpenSSL 1.0.2g-fips 1 Mar 2016\nLinux distro: Ubuntu 14.04 trusty", "issue_status": "Closed", "issue_reporting_time": "2017-03-21T23:29:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "705": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2194", "issue_id": "#2194", "issue_summary": "Extend mypy checking", "issue_description": "Member\ncortesi commented on 22 Mar 2017 \u2022\nedited by Kriechi\nA somewhat smaller amount of work than what was needed to cover the mitmproxy directory. I'd like to get us to the point where we have mypy checking for the entire codebase.\nmitmproxy\npathod\nexamples/simple\nexamples/complex\nexamples/pathod", "issue_status": "Closed", "issue_reporting_time": "2017-03-21T20:11:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "706": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2192", "issue_id": "#2192", "issue_summary": "full replace responce via script", "issue_description": "jake491 commented on 21 Mar 2017\nI want to replace status code, headers, content of response from server\nSteps to reproduce the problem:\nwrite script (see below)\nrun mitmdump -p 8080 -s myplugin.py\nopen browser and via mitmproxy go to example.com/dir1/?par1=100500 I got a blank screen (load a bit a page)\nopen example.com/dir1/?par1=100500 via curl with mitmproxy and get other bit of page\nWhat is the best practice for replace response from one server to other server.\nplugin code:\ndef response(flow):\n    new_resp = requests.get('https://google.com')\n\n    new_resp_headers=dict(new_resp.headers.items())\n    \n    #prepare byte headers\n    byte_headers = [(str.encode(k), str.encode(v)) for k, v in new_resp_headers.items()]\n\n    #replace responce\n    flow.response.status_code = new_resp.status_code\n    flow.response.content = new_resp.content\n    flow.response.data.headers = Headers(byte_headers)\nanother way is is\n....\n    new_resp = Response.make(200,authenticated_responce.content,byte_headers )\n    flow.response = new_resp\nAttributeError: 'Response' object has no attribute 'is_replay'\nSystem information\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.5.2", "issue_status": "Closed", "issue_reporting_time": "2017-03-21T11:54:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "707": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2184", "issue_id": "#2184", "issue_summary": "mitmweb -n: Proxy server listening at http://d:u/", "issue_description": "Member\nmhils commented on 19 Mar 2017\nSteps to reproduce the problem:\nmitmweb -n\nIncorrect information is displayed on the console: \"Proxy server listening at http://d:u/\"\nAny other comments? What have you tried so far?\nmitmweb should use the termstatus addon for printing this as well.\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0203-0xc088249)\nPython version: 3.5.2\nPlatform: Linux-3.4.0+-x86_64-with-Ubuntu-14.04-trusty\nSSL version: OpenSSL 1.0.2g-fips 1 Mar 2016\nLinux distro: Ubuntu 14.04 trusty", "issue_status": "Closed", "issue_reporting_time": "2017-03-18T23:17:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "708": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2181", "issue_id": "#2181", "issue_summary": "[Feature] Socks Mode With Upstream Proxy", "issue_description": "realgam3 commented on 18 Mar 2017\nFeatures Needed:\nSocks Mode With Upstream Proxy\nHTTP Mode With Socks Upstream Proxy\nBackground Story:\nWhile developing PyMultitor (Proxy Version) I used MitmProxy as a infrastructure,\nMy problem was that i couldn't use socks proxy on upstream mode,\nMy simple solution was to use requests + pySocks on request handler and then translate the response.\nThis solution will not work on tcp packets - that means that websockets won't work.\nI Hope in the future to remove the use of requests and i will be able to support websockets.", "issue_status": "Closed", "issue_reporting_time": "2017-03-17T19:57:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "709": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2180", "issue_id": "#2180", "issue_summary": "mitmproxy doesn't forward `Expect: 100-continue` headers to the end server", "issue_description": "alinpopa commented on 18 Mar 2017\nQuick description\nWhen using mitmproxy, and sending a large POST request using curl (which as well sets the Expect: 100-continue header), will strip out the expect header, and this will not get to the end server. When using a script to set the expect header, the request hangs.\nSteps to reproduce the problem:\nCreate a minimal http server that is capable of the followings:\naccept POST/PUT requests\nlogs out all the request headers, and the request body\nStart mitmproxy\nSend a POST request using curl, having a considerable large request body (I've used a json, Content-Length: 2017\nNotice the final server will not get the expect header.\nAny other comments? What have you tried so far?\nTried to use a script in order to set the expect header, but it looks like that the entire flow hangs.\nDue to this issue, we've noticed on a production servers (that are relying on this particular 100 Continue feature) that the request body gets truncated. Sure, we fixed this, but was thinking that this 100 Continue thing shouldn't be hidden by mitmproxy, but to be forwarded to the end server.\nSystem information\nMitmproxy version: 2.0.1 (release version)\nPython version: 3.6.0\nPlatform: Darwin-16.4.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.12.3 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-03-17T19:22:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "710": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2179", "issue_id": "#2179", "issue_summary": "Problems with certs - Error: certificate signature failure", "issue_description": "simov commented on 17 Mar 2017\nHi,\nI'm having problems with the certificates that mitmproxy generates for me:\nsudo cp ~/.mitmproxy/*.* /usr/share/ca-certificates/mitmproxy/\nsudo dpkg-reconfigure ca-certificates\nThen I'm using this script to proxy all requests to mitmproxy.\nThe error that I'm receiving from a Node app is:\n{ Error: certificate signature failure\n    at TLSSocket.<anonymous> (_tls_wrap.js:1084:38)\n    at emitNone (events.js:86:13)\n    at TLSSocket.emit (events.js:188:7)\n    at TLSSocket._finishInit (_tls_wrap.js:606:8)\n    at TLSWrap.ssl.onhandshakedone (_tls_wrap.js:436:38) code: 'CERT_SIGNATURE_FAILURE' }\nThe HTTPS requests fail from any other app too. I can verify that all traffic is indeed proxied to mitm, bacause all HTTP traffic is logged using the above script and also if I disable the TLS security in my test Node app the HTTPS requests are logged out too. Unfortunately I can't disable the TLS security for the app that I want to debug.\nSystem information:\nubuntu 16.10\nmitmproxy 0.15", "issue_status": "Closed", "issue_reporting_time": "2017-03-17T14:09:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "711": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2177", "issue_id": "#2177", "issue_summary": "Can't Set HTTP Proxy", "issue_description": "Contributor\nLuD1161 commented on 17 Mar 2017\nSteps to reproduce the problem:\nOpen in console mitmproxy to show options like : mitmproxy --options\nThere is an option upstream_bind_address\nBut when I try to set it up , I get error as :\nmitmproxy: error: unrecognized arguments: --upstream_bind_address\nIn the screenshot below.\nWhat I am trying to do\nMy college uses a proxy and so was trying to route my traffic through that, I have a proxy authentication and was trying to set it up\nAlso Another Issue I think worth mentioning\nWhen using help in terminal mitmproxy --help I get this output :\n(venv) root@Dell-PC:~/mitmproxy# mitmproxy --help\nusage: mitmproxy [options] [filter]\n\npositional arguments:\n  filter_args           Filter view expression, used to only show flows that\n                        match a certain filter. See help in mitmproxy for\n                        filter expression syntax.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version\n  --shortversion        show program's short version number and exit\n  --options             Show all options and their default values\n  --conf PATH           Read options from a configuration file\n  --set option[=value]  Set an option. When the value is omitted, booleans are\n                        set to true, strings and integers are set to None (if\n                        permitted), and sequences are emptied.\n  -q, --quiet           Quiet.\n  -v, --verbose         Increase log verbosity.\n  --mode MODE, -m MODE  Mode can be \"regular\", \"transparent\", \"socks5\",\n                        \"reverse:SPEC\", or \"upstream:SPEC\". For reverse and\n                        upstream proxy modes, SPEC is proxy specification in\n                        the form of \"http[s]://host[:port]\".\n  --no-anticache\n  --anticache           Strip out request headers that might cause the server\n                        to return 304-not-modified.\n  --no-showhost\n  --showhost            Use the Host header to construct URLs for display.\n  --rfile PATH, -r PATH\n                        Read flows from file.\n  --scripts SCRIPT, -s SCRIPT\n                        Execute a script. May be passed multiple times.\n  --stickycookie FILTER\n                        Set sticky cookie filter. Matched against requests.\n  --stickyauth FILTER   Set sticky auth filter. Matched against requests.\n  --streamfile PATH, -w PATH\n                        Write flows to file. Prefix path with + to append.\n  --no-anticomp\n  --anticomp            Try to convince servers to send us un-compressed data.\n  --flow-detail LEVEL   Flow detail display level.\n\nProxy Options:\n  --listen-host HOST    Address to bind proxy to.\n  --listen-port PORT, -p PORT\n                        Proxy service port.\n  --no-server, -n\n  --server              Start a proxy server.\n  --ignore-hosts HOST   Ignore host and forward all traffic without processing\n                        it. In transparent mode, it is recommended to use an\n                        IP address (range), not the hostname. In regular mode,\n                        only SSL traffic is ignored and the hostname should be\n                        used. The supplied value is interpreted as a regular\n                        expression and matched on the ip or the hostname. May\n                        be passed multiple times.\n  --tcp-hosts HOST      Generic TCP SSL proxy mode for all hosts that match\n                        the pattern. Similar to --ignore, but SSL connections\n                        are intercepted. The communication contents are\n                        printed to the log in verbose mode. May be passed\n                        multiple times.\n  --upstream-auth USER:PASS\n                        Add HTTP Basic authentcation to upstream proxy and\n                        reverse proxy requests. Format: username:password.\n  --proxyauth SPEC      Require authentication before proxying requests. If\n                        the value is \"any\", we prompt for authentication, but\n                        permit any values. If it starts with an \"@\", it is\n                        treated as a path to an Apache htpasswd file. If its\n                        is of the form \"username:password\", it is treated as a\n                        single-user credential.\n  --no-rawtcp\n  --rawtcp              Enable/disable experimental raw TCP support. Disabled\n                        by default.\n\nSSL:\n  --certs SPEC          SSL certificates. SPEC is of the form \"[domain=]path\".\n                        The domain may include a wildcard, and is equal to \"*\"\n                        if not specified. The file at path is a certificate in\n                        PEM format. If a private key is included in the PEM,\n                        it is used, else the default key in the conf dir is\n                        used. The PEM file should contain the full certificate\n                        chain, with the leaf certificate as the first entry.\n                        Can be passed multiple times. May be passed multiple\n                        times.\n  --no-ssl-insecure\n  --ssl-insecure, -k    Do not verify upstream server SSL/TLS certificates.\n\nClient Replay:\n  --client-replay PATH, -C PATH\n                        Replay client requests from a saved file. May be\n                        passed multiple times.\n\nServer Replay:\n  --server-replay PATH, -S PATH\n                        Replay server responses from a saved file. May be\n                        passed multiple times.\n  --no-replay-kill-extra\n  --replay-kill-extra   Kill extra requests during replay.\n  --no-server-replay-nopop\n  --server-replay-nopop\n                        Disable response pop from response flow. This makes it\n                        possible to replay same response multiple times.\n\nReplacements:\n  --replacements PATTERN, -R PATTERN\n                        Replacement patterns of the form\n                        \"/pattern/regex/replacement\", where the separator can\n                        be any character. May be passed multiple times.\n\nSet Headers:\n  --setheaders PATTERN, -H PATTERN\n                        Header set pattern of the form\n                        \"/pattern/header/value\", where the separator can be\n                        any character. May be passed multiple times.\n(venv) root@Dell-PC:~/mitmproxy# \nThere is an option of --upstream-auth but no upstream_proxy_address , which made me wonder and find out the first issue.\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0201-0x253fa950)\nPython version: 3.5.3\nPlatform: Linux-4.6.0-kali1-amd64-x86_64-with-Kali-kali-rolling-kali-rolling\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nLinux distro: Kali kali-rolling kali-rolling", "issue_status": "Closed", "issue_reporting_time": "2017-03-17T12:31:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "712": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2174", "issue_id": "#2174", "issue_summary": "No error/warning on setting invalid options", "issue_description": "Contributor\nkrsoninikhil commented on 17 Mar 2017\nSteps to reproduce the problem:\nStart with mitmproxy --set mode=transparen (with typo in value of mode)\nMitmproxy starts in regular mode without giving any error.\nAny other comments? What have you tried so far?\nIf you use mitmproxy --mode transparen (with typo in value of mode), it throws error Invalid mode specification: transparen.\nSystem information\nMitmproxy version: 3.0.0 (1.0.1dev0414-0xe755399d)\nPython version: 3.6.0\nPlatform: Linux-4.8.13-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nLinux distro: arch", "issue_status": "Closed", "issue_reporting_time": "2017-03-16T20:55:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "713": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2164", "issue_id": "#2164", "issue_summary": "mitmproxy crashes with error 'Reason: image not found' with brew install", "issue_description": "dclaze commented on 16 Mar 2017\nTried installing via Homebrew\nSteps to reproduce the problem:\nbrew install\nbrew install mitmproxy\n==> Installing dependencies for mitmproxy: libpng, freetype, jpeg\n==> Installing mitmproxy dependency: libpng\n==> Downloading https://homebrew.bintray.com/bottles/libpng-1.6.21.el_capitan.bo\n######################################################################## 100.0%\n==> Pouring libpng-1.6.21.el_capitan.bottle.tar.gz\nError: The `brew link` step did not complete successfully\nThe formula built, but is not symlinked into /usr/local\nCould not symlink include/libpng16\n/usr/local/include is not writable.\n\nYou can try again using:\n  brew link libpng\n==> Summary\n\ud83c\udf7a  /usr/local/Cellar/libpng/1.6.21: 25 files, 1.2M\n==> Installing mitmproxy dependency: freetype\n==> Downloading https://homebrew.bintray.com/bottles/freetype-2.6.3.el_capitan.b\n######################################################################## 100.0%\n==> Pouring freetype-2.6.3.el_capitan.bottle.tar.gz\nError: The `brew link` step did not complete successfully\nThe formula built, but is not symlinked into /usr/local\nCould not symlink include/freetype2\n/usr/local/include is not writable.\n\nYou can try again using:\n  brew link freetype\n==> Summary\n\ud83c\udf7a  /usr/local/Cellar/freetype/2.6.3: 61 files, 2.5M\n==> Installing mitmproxy dependency: jpeg\n==> Downloading https://homebrew.bintray.com/bottles/jpeg-8d.el_capitan.bottle.2\n######################################################################## 100.0%\n==> Pouring jpeg-8d.el_capitan.bottle.2.tar.gz\nError: The `brew link` step did not complete successfully\nThe formula built, but is not symlinked into /usr/local\nCould not symlink include/jconfig.h\n/usr/local/include is not writable.\n\nYou can try again using:\n  brew link jpeg\n==> Summary\n\ud83c\udf7a  /usr/local/Cellar/jpeg/8d: 19 files, 713.7K\n==> Installing mitmproxy\n==> Downloading https://homebrew.bintray.com/bottles/mitmproxy-0.16.el_capitan.b\n######################################################################## 100.0%\n==> Pouring mitmproxy-0.16.el_capitan.bottle.1.tar.gz\n\ud83c\udf7a  /usr/local/Cellar/mitmproxy/0.16: 1,317 files, 19.8M\nmitmproxy --version\nmitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/bin/mitmproxy\", line 9, in <module>\n    load_entry_point('mitmproxy==0.16', 'console_scripts', 'mitmproxy')()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/main.py\", line 45, in mitmproxy\n    from . import console\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 17, in <module>\n    from .. import controller, flow, script, contentviews\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/flow.py\", line 16, in <module>\n    from . import controller, tnetstring, filt, script, version, flow_format_compat\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/script/__init__.py\", line 2, in <module>\n    from .script_context import ScriptContext\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/script/script_context.py\", line 5, in <module>\n    from .. import contentviews\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/contentviews.py\", line 23, in <module>\n    from PIL import Image\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/PIL/Image.py\", line 66, in <module>\n    from PIL import _imaging as core\nImportError: dlopen(/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/PIL/_imaging.so, 2): Library not loaded: /usr/local/opt/jpeg/lib/libjpeg.8.dylib\n  Referenced from: /usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/PIL/_imaging.so\n  Reason: image not found\nSystem information\nSystem Version: OS X 10.11.6\nHomebrew 0.9.9\nmitmproxy/0.16", "issue_status": "Closed", "issue_reporting_time": "2017-03-15T21:53:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "714": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2162", "issue_id": "#2162", "issue_summary": "windows installer doesnt actually include mitmproxy", "issue_description": "trondhindenes commented on 15 Mar 2017\nAfter running the windows installer I have mitmdump and mitmweb, but not mitmproxy. How can I run it on Windows?", "issue_status": "Closed", "issue_reporting_time": "2017-03-15T16:13:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "715": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2154", "issue_id": "#2154", "issue_summary": "cryptography dependency update?", "issue_description": "DomT4 commented on 15 Mar 2017\nThe template here wasn't relevant so I cut it, apologies.\nmitmproxy currently mandates cryptography <1.8 which when built from source on macOS/OS X El Capitan (10.11) using Xcode 8 results in Symbol not found: _getentropy errors. Reported and explained in more detail here, hence my short summary. These issues were fixed in pyca/cryptography#3354, which was released in the 1.8 branch.\nThis is also currently causing some \"fun\" for downstream package managers having to carry their own somewhat hacky patches like this. The gist of my request is whether mitmproxy has plans to/would consider update/updating cryptography to use the latest release without these issues.", "issue_status": "Closed", "issue_reporting_time": "2017-03-15T05:19:09Z", "fixed_by": "#2155", "pull_request_summary": "bump cryptography", "pull_request_description": "Member\nKriechi commented on 15 Mar 2017\nfixes #2154", "pull_request_status": "Merged", "issue_fixed_time": "2017-03-15T09:43:49Z", "files_changed": [["2", "setup.py"]]}, "716": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2148", "issue_id": "#2148", "issue_summary": "TypeError: '<' not supported between instances of 'NoneType' and 'int'", "issue_description": "Member\nmhils commented on 14 Mar 2017\nSteps to reproduce the problem:\n$ mitmdump -r foo.mitm\nTraceback (most recent call last):\n  File \"C:/Users/user/git/mitmproxy/venv/Scripts/mitmdump-script.py\", line 11, in <module>\n    load_entry_point('mitmproxy', 'console_scripts', 'mitmdump')()\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\tools\\main.py\", line 112, in mitmdump\n    run(dump.DumpMaster, args)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\tools\\main.py\", line 74, in run\n    master = MasterKlass(opts, server)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\tools\\dump.py\", line 28, in __init__\n    self.load_flows_file(options.rfile)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\master.py\", line 186, in load_flows_file\n    return self.load_flows(freader)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\master.py\", line 170, in load_flows\n    self.load_flow(i)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\master.py\", line 161, in load_flow\n    getattr(self, e)(o)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\controller.py\", line 70, in wrapper\n    master.addons(f.__name__, message)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\addonmanager.py\", line 89, in __call__\n    self.invoke(i, name, *args, **kwargs)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\addonmanager.py\", line 84, in invoke\n    func(*args, **kwargs)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\addons\\dumper.py\", line 224, in response\n    self.echo_flow(f)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\addons\\dumper.py\", line 196, in echo_flow\n    self._echo_request_line(f)\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\addons\\dumper.py\", line 129, in _echo_request_line\n    if self.flow_detail < 1 and len(url) > terminalWidthLimit:\nTypeError: '<' not supported between instances of 'NoneType' and 'int'\nAny other comments? What have you tried so far?\nIt seems like the addon is not updated (it still has flow_details=None), if I step into the master in the debugger, flow_details is an int.\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0142-0x124a6c9)\nPython version: 3.5.2\nPlatform: Linux-3.4.0+-x86_64-with-Ubuntu-14.04-trusty\nSSL version: OpenSSL 1.0.2g-fips 1 Mar 2016\nLinux distro: Ubuntu 14.04 trusty", "issue_status": "Closed", "issue_reporting_time": "2017-03-14T01:06:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "717": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2146", "issue_id": "#2146", "issue_summary": "Can't filter by hostname when --host is used", "issue_description": "Contributor\ndequis commented on 14 Mar 2017 \u2022\nedited\nSteps to reproduce the problem:\nmitmproxy -T --host\nCapture something\nPress f and filter by something like ~d domain.com or ~u domain com\nAny other comments? What have you tried so far?\nGoing to detail view to get the resolved IP address and using it for the filter works, but it's uncomfortable when you want to match things like \"google.com\" (lots of IP ranges, lots of unrelated domains, but many mentioning google)\nSystem information\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.6.0\nPlatform: Linux-4.9.11-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.0.2k 26 Jan 2017\nLinux distro: arch", "issue_status": "Closed", "issue_reporting_time": "2017-03-14T00:04:17Z", "fixed_by": "#2150", "pull_request_summary": "Match ~d and ~u filters against pretty_host too", "pull_request_description": "Contributor\ndequis commented on 14 Mar 2017\nChanged the ~u filter in the console UI to match the behavior of\nmitmweb, which only matches against pretty_url, never against url.\nFixes #2146 (thanks mhils for the hint on where to fix it)", "pull_request_status": "Merged", "issue_fixed_time": "2017-03-14T13:31:12Z", "files_changed": [["8", "mitmproxy/flowfilter.py"], ["2", "web/src/js/filt/filt.peg"]]}, "718": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2144", "issue_id": "#2144", "issue_summary": "Reconsider addons API", "issue_description": "Member\ncortesi commented on 14 Mar 2017 \u2022\nedited\nThis is a discussion ticket to get input on our next steps with the addons API. This is a critical piece of our user-facing surface area, and we're very keen to have it be as fluid and usable as possible. The work done in #2129 has moved things to the point where a reassessment is in order.\nI'll outline the issues with the API as it stands here, and then I'll put my proposal for a refactoring in a comment on the ticket. If you have ideas, please respond below - I'll update the list of issues we should be thinking about as we go.\nThe startup event sequence for addons is quite confusing - we have start() -> configure() -> running(), all of which are called in different contexts, and have names that are close to each other semantically.\nThe start() method takes an options argument, but addons can only create new options at this point, not read and use option values. This is confusing.\nThe start() method can replace the current addon with a new addon by returning it. I feel this is too implicit, and isn't flexible enough. We also may want to expand what addons can do in this event later, and returning a value boxes us in.\nWhen we first designed this API, we felt that importing a context object (ctx) to do logging or access master was a good light-weight pattern, partly because this is similar to what flask does. It's time to think about this again, even if we decide to keep things as they are.\nThe addons API is extremely lightweight at the moment - just a sequence of events. This has many advantages, and some disadvantages. There are many common patterns that we could support better by having addons derive from a common class - for instance, enabling/disabling addons is very common, and has to be hand-coded every time at the moment. We could also have addons pre-declare the options that they are interested in, and then call configure() only when something relevant to the addon happens (as opposed to calling all configure() methods for all updates).\nWe need a custom events mechanism to allow addons to declare and handle one-off events. One example of this is triggering reading flows from a file. Doing this by having an addon handle an option change or retrieving and explicitly invoking a method on an addon is clumsy.\n1", "issue_status": "Closed", "issue_reporting_time": "2017-03-13T20:54:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "719": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2143", "issue_id": "#2143", "issue_summary": "Uniquely identify client connections from dumpfiles.", "issue_description": "Member\nmhils commented on 13 Mar 2017\nI'm currently running an issue where I read a saved flow file and I need to match flows to HTTP connections.\nThe intuitive way to do this would be to compare f.client_conn == f2.client_conn, which holds true for live connections but not for saved ones, because each flow has its own distinct ClientConnection object. Possible ways to fix this:\nAdd __eq__ implementation to ClientConnection (either by checking ip tuples + timestamp or by adding a unique id)\nEnhance FlowReader to re-use ClientConnections. I don't like this, but that would be more consistent with the live behavior.\n???\nThe same problem applies to ServerConnections.\n@mitmproxy/devs: thoughts?", "issue_status": "Closed", "issue_reporting_time": "2017-03-13T18:01:22Z", "fixed_by": "#2147", "pull_request_summary": "Add client/server connection ids", "pull_request_description": "Member\nmhils commented on 14 Mar 2017 \u2022\nedited\nThis PR adds connection IDs to ServerConnection and ClientConnection. This solves the issue that for two flows on the same connection, f.client_conn == f2.client_conn holds true for live flows (where we have object identity), but doesn't for recorded flows.\nWhen we implement __eq__, we also need __hash__ for e.g. the proxyauth addon.\nfixes #2143", "pull_request_status": "Merged", "issue_fixed_time": "2017-03-14T20:20:17Z", "files_changed": [["23", "mitmproxy/connections.py"], ["1", "mitmproxy/flow.py"], ["22", "mitmproxy/io_compat.py"], ["3", "mitmproxy/test/tflow.py"], ["6", "mitmproxy/types/serializable.py"], ["2", "mitmproxy/version.py"], ["25", "test/mitmproxy/test_connections.py"], ["19", "test/mitmproxy/types/test_serializable.py"]]}, "720": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2140", "issue_id": "#2140", "issue_summary": "mitmdump -nr does not exit automatically", "issue_description": "Member\nmhils commented on 13 Mar 2017\nSteps to reproduce the problem:\nUse mitmdump -nr foo.mitm to print some flows.\nMitmdump should exit automatically after printing, but it doesn't.\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0136-0x05e1154)\nPython version: 3.5.2\nPlatform: Linux-3.4.0+-x86_64-with-Ubuntu-14.04-trusty\nSSL version: OpenSSL 1.0.2g-fips 1 Mar 2016\nLinux distro: Ubuntu 14.04 trusty", "issue_status": "Closed", "issue_reporting_time": "2017-03-13T15:15:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "721": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2139", "issue_id": "#2139", "issue_summary": "mitmdump: unrecognized arguments: -dd", "issue_description": "Member\nmhils commented on 13 Mar 2017\nSteps to reproduce the problem:\nmitmdump -d -nr foo.mitm\nmitmdump: error: unrecognized arguments: -d\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0136-0x05e1154)\nPython version: 3.5.2\nPlatform: Linux-3.4.0+-x86_64-with-Ubuntu-14.04-trusty\nSSL version: OpenSSL 1.0.2g-fips 1 Mar 2016\nLinux distro: Ubuntu 14.04 trusty", "issue_status": "Closed", "issue_reporting_time": "2017-03-13T15:10:35Z", "fixed_by": "#2191", "pull_request_summary": "improve flow_detail help text", "pull_request_description": "Contributor\nLuD1161 commented on 20 Mar 2017 \u2022\nedited by Kriechi\nAdded the level definition that can be used\nfixes #2139", "pull_request_status": "Merged", "issue_fixed_time": "2017-05-22T10:06:08Z", "files_changed": [["8", "mitmproxy/options.py"]]}, "722": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2134", "issue_id": "#2134", "issue_summary": "mitmweb event log doesn\u2019t show messages at level higher than info", "issue_description": "vfaronov commented on 12 Mar 2017\nSteps to reproduce the problem:\nCreate the following script1.py:\nimport mitmproxy.ctx\n\ndef response(flow):\n    mitmproxy.ctx.log.info('this is an info')\n    mitmproxy.ctx.log.warn('this is a warning')\n    mitmproxy.ctx.log.error('this is an error')\nStart mitmweb with this script: mitmweb -s script1.py\nEnable Options \u2192 Display Event Log to show the event log pane.\nRun a flow through mitmweb, for example: curl -vx http://localhost:8080 http://httpbin.org/get/\nObserve that three messages are printed to the system console (\u201cthis is an info\u201d, \u201cthis is a warning\u201d, \u201cthis is an error\u201d), but only one of them is displayed in the event log pane in mitmweb (\u201cthis is an info\u201d).\nAny other comments? What have you tried so far?\nChecking the \u201cdebug\u201d checkbox at the top right-hand corner of the event log pane has no effect on this.\nSystem information\n(this is mitmproxy master)\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-66-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-03-12T13:20:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "723": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2132", "issue_id": "#2132", "issue_summary": "How to show custom decoded request and response in mitmproxy UI", "issue_description": "axot commented on 10 Mar 2017\nMy app used custom encryption for https communication.\nFor now I use mitmdump -s decode.py to show the decoded data for request and response.\nIs it possiable show decoded data in mitmproxy UI ?", "issue_status": "Closed", "issue_reporting_time": "2017-03-10T06:13:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "724": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2127", "issue_id": "#2127", "issue_summary": "Crash on adding a replacement pattern from editor", "issue_description": "Member\nujjwal96 commented on 9 Mar 2017\nSteps to reproduce the problem:\nStart mitmproxy\nGo to Replacement Editor and add a replacement\nPressing q crashes mitmproxy\nTraceback (most recent call last):\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/home/ujjwal/Github/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/tools/console/grideditor/base.py\", line 343, in keypress\n    self.callback(self.data_out(res), *self.cb_args, **self.cb_kwargs)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/optmanager.py\", line 198, in setter\n    setattr(self, attr, x)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/optmanager.py\", line 163, in __setattr__\n    self.update(**{attr: value})\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/optmanager.py\", line 185, in update\n    self._options[k].set(v)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/optmanager.py\", line 57, in set\n    typecheck.check_type(self.name, value, self.typespec)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/utils/typecheck.py\", line 65, in check_type\n    check_type(name, v, T)\n  File \"/home/ujjwal/Github/mitmproxy/mitmproxy/utils/typecheck.py\", line 72, in check_type\n    raise e\nTypeError: Expected <class 'str'> for replacements, but got ('.*', 'foo', 'bar').\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments? What have you tried so far?\nSeems to be caused by the latest commit.\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2017-03-09T16:18:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "725": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2126", "issue_id": "#2126", "issue_summary": "Websocket third party support", "issue_description": "teixeiras commented on 9 Mar 2017\nQuestion and not a issue:\nHi:\nI been looking for an integration using websocket. They should by default be enabled but it's only enabled in mitmweb. If the authentication on web socket is based on cookie, I can deduce, there is no other way to authenticate, without a web request, right?", "issue_status": "Closed", "issue_reporting_time": "2017-03-09T12:02:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "726": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2125", "issue_id": "#2125", "issue_summary": "Proxy for SSL connections", "issue_description": "mancubus77 commented on 9 Mar 2017\nI use mitmproxy to collect user-agents information from my network, thus the applications works in monitoring mode without any additional rules. For HTTP it works as expected, but HTTPS traffic doesn't load on some pages due to security issues. Of course client has certificate from MITM:\n\nAnd it's necessary to add the exception, but it's hard to make it every time for new SSL host. I would be grateful for any advices how to overcome this limitation for firefox?\nHere is mitmdump -v output:\n127.0.0.1:55318: clientconnect\n127.0.0.1:55318: request\n  -> Request(CONNECT s3-ap-southeast-1.amazonaws.com:443)\n127.0.0.1:55318: Set new server address: ('s3-ap-southeast-1.amazonaws.com', 443)\n127.0.0.1:55318: Parsed Client Hello: sni=s3-ap-southeast-1.amazonaws.com, alpn=['h2', 'http/1.1']\n127.0.0.1:55318: serverconnect\n  -> s3-ap-southeast-1.amazonaws.com:443\n127.0.0.1:55318: Establish TLS with server\n127.0.0.1:55318: ALPN selected by server: \n127.0.0.1:55318: Establish TLS with client\n127.0.0.1:55318: ALPN for client: http/1.1\n127.0.0.1:55318: serverdisconnect\n  -> s3-ap-southeast-1.amazonaws.com:443\n**127.0.0.1:55318: Client Handshake failed. The client may not trust the proxy's certificate for s3-ap-southeast-1.amazonaws.com.**\n127.0.0.1:55318: ClientHandshakeException('Cannot establish TLS with client (sni: s3-ap-southeast-1.amazonaws.com): TlsException(\"[(\\'SSL routines\\', \\'ssl3_read_bytes\\', \\'tlsv1 alert unknown ca\\')]\",)',)\n127.0.0.1:55318: clientdisconnect", "issue_status": "Closed", "issue_reporting_time": "2017-03-09T04:16:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "727": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2122", "issue_id": "#2122", "issue_summary": "Changing palette options has no effect", "issue_description": "Member\nujjwal96 commented on 8 Mar 2017\nSteps to reproduce the problem:\nStart mitmproxy\nPress O then P\nSelect any option, there is no change\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0068-0xcb62409)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-62-generic-x86_64-with-elementary-0.4-loki\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: \"elementary\" 0.4 loki", "issue_status": "Closed", "issue_reporting_time": "2017-03-08T15:57:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "728": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2119", "issue_id": "#2119", "issue_summary": "IPv6: HTTP protocol error in client request: Bad HTTP request line", "issue_description": "rbairwell commented on 8 Mar 2017\nSteps to reproduce the problem:\nRun MITMDump in a Vagrant powered virtual machine which only has an IPv4 address: mitmdump -p 5757\nConfigure Firefox to use it a proxy (Firefox is on a host which has IPv6)\nVisit http://[2a01:b000:d:dc1::2:cafe]/images-nc/bg.gif?&testdomain=test-ipv6.com&testname=test_ipv6_img\nReceive unexpected warning/error in mimdump console:\n10.0.2.2:61356: HTTP protocol error in client request: Bad HTTP request line: b'GET http://[2a01:b000:d:dc1::2:cafe]/images-nc/bg.gif?&testdomain=test-ipv6.com&testname=test_ipv6_img HTTP/1.1'\nand in Firefox:\n400 Bad Request\n\nHttpSyntaxException(\"Bad HTTP request line: b'GET http://[2a01:b000:d:dc1::2:cafe]/images-nc/bg.gif?&testdomain=test-ipv6.com&testname=test_ipv6_img HTTP/1.1'\",)\n[expected a graphic to be returned]\n(found when testing http://test-ipv6.com)\nAny other comments? What have you tried so far?\nI do not know the IPv4 limitation of the Vagrant machine running MITMDump is a contributing factor at this point.\nSystem information\nMitmproxy version: 2.0.0 (release version) Precompiled Binary\nPython version: 3.5.2\nPlatform: Linux-3.13.0-83-generic-x86_64-with-debian-jessie-sid\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nLinux distro: debian jessie/sid\n1", "issue_status": "Closed", "issue_reporting_time": "2017-03-08T11:37:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "729": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2116", "issue_id": "#2116", "issue_summary": "Support for cleartext HTTP/2 (h2c)", "issue_description": "vfaronov commented on 8 Mar 2017 \u2022\nedited\nSteps to reproduce the problem:\nStart listening on local port 8081 like this: nc -vl 8081\nStart mitmproxy like this: mitmdump --http2 --reverse http://localhost:8081\nUse nghttp to make a request like this: nghttp -v http://localhost:8080/\nPort 8081 receives the following:\nPRI * HTTP/2.0\n:authority: localhost\nhost: localhost:8081\nThis looks like the HTTP/2 connection preface interpreted by mitmproxy (?) as an actual HTTP/1.1 request.\nAny other comments? What have you tried so far?\nThe same happens if I use Hyper in direct mode (hyper --h2 GET http://localhost:8080/) instead of nghttp.\nI would expect mitmproxy to forward nghttp\u2019s request to port 8081 in direct cleartext HTTP/2, though cleartext HTTP/1.1 and upgrading cleartext HTTP/2 would also be understandable.\nSee also #2115.\nSystem information\n(this is mitmproxy master)\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-65-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-03-07T23:26:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "730": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2115", "issue_id": "#2115", "issue_summary": "reverse proxy mode for h2\u2192h2c connections not working", "issue_description": "vfaronov commented on 8 Mar 2017 \u2022\nedited\nSteps to reproduce the problem:\nStart listening on local port 8081 like this: nc -vl 8081\nStart mitmproxy like this: mitmdump --http2 --reverse http://localhost:8081\nUse nghttp to make a request like this: nghttp -v https://localhost:8080/\nmitmdump prints:\n('::ffff:127.0.0.1', 39950, 0, 0): clientconnect\n('::ffff:127.0.0.1', 39950, 0, 0): Traceback (most recent call last):\n  File \"/home/vasiliy/tmp/env8/lib/python3.5/site-packages/mitmproxy/proxy/server.py\", line 118, in handle\n    root_layer()\n  File \"/home/vasiliy/tmp/env8/lib/python3.5/site-packages/mitmproxy/proxy/modes/reverse_proxy.py\", line 13, in __call__\n    layer()\n  File \"/home/vasiliy/tmp/env8/lib/python3.5/site-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/home/vasiliy/tmp/env8/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http2.py\", line 325, in __call__\n    self._initiate_server_conn()\n  File \"/home/vasiliy/tmp/env8/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http2.py\", line 111, in _initiate_server_conn\n    self.connections[self.server_conn].initiate_connection()\nKeyError: <ServerConnection: localhost:8081>\n\nTraceback (most recent call last):\n  File \"/home/vasiliy/tmp/env8/lib/python3.5/site-packages/mitmproxy/proxy/server.py\", line 118, in handle\n    root_layer()\n  File \"/home/vasiliy/tmp/env8/lib/python3.5/site-packages/mitmproxy/proxy/modes/reverse_proxy.py\", line 13, in __call__\n    layer()\n  File \"/home/vasiliy/tmp/env8/lib/python3.5/site-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/home/vasiliy/tmp/env8/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http2.py\", line 325, in __call__\n    self._initiate_server_conn()\n  File \"/home/vasiliy/tmp/env8/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http2.py\", line 111, in _initiate_server_conn\n    self.connections[self.server_conn].initiate_connection()\nKeyError: <ServerConnection: localhost:8081>\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n('::ffff:127.0.0.1', 39950, 0, 0): clientdisconnect\nMeanwhile, nghttp prints that it has sent a bunch of HTTP/2 frames, but not received any.\nMeanwhile, no connections are made to port 8081.\nAny other comments? What have you tried so far?\nI\u2019m not sure what I would expect to happen. What I would like to happen is that mitmproxy talk cleartext HTTP/2 (direct or upgrading) to port 8081, and talk HTTP/2-over-TLS to nghttp.\nIf I use a Web browser instead of nghttp, then mitmproxy talks cleartext HTTP/1.1 to port 8081, and talks HTTP/1.1-over-TLS to the browser.\nSee also #2116.\nSystem information\n(this is mitmproxy master)\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-65-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-03-07T23:19:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "731": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2113", "issue_id": "#2113", "issue_summary": "Unserializable Object when writing out flow with WebSockets", "issue_description": "mrballcb commented on 7 Mar 2017 \u2022\nedited\nSteps to reproduce the problem:\nPreconfigured the ~/.mitmproxy/mitmproxy-ca-cert.pem into Mac's \"Keychain Access\" app in System, configured to \"Always Trust\".\nStart up mitmproxy with \"--host\".\nConfigure Mac to use 127.0.0.1 port 8080 for both http (80) and https (443).\nStart app that uses WebSockets.\nFind and select (move to) the flow with \"Connection: Upgrade\" header and same header in response.\nType \"w\" to write out flows, type \"t\" for this flow, and give it a filename. (Behaves the same if I write out all flows if one of them is websocket connection).\nmitmproxy does a stack dump and exits:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/statusbar.py\", line 155, in keypress\n    return self.master.ab.keypress(*args, **kwargs)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/statusbar.py\", line 110, in keypress\n    self.prompt_execute(self._w.get_edit_text())\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/statusbar.py\", line 133, in prompt_execute\n    msg = p(txt)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/statusbar.py\", line 21, in __call__\n    return self.callback(pth, *self.args)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 388, in save_flows\n    return self._write_flows(path, self.view)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 382, in _write_flows\n    fw.add(i)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/io.py\", line 27, in add\n    tnetstring.dump(d, self.fo)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/contrib/tnetstring.py\", line 66, in dump\n    file_handle.write(dumps(value))\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/contrib/tnetstring.py\", line 57, in dumps\n    _rdumpq(q, 0, value)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/contrib/tnetstring.py\", line 142, in _rdumpq\n    size = _rdumpq(q, size, v)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/contrib/tnetstring.py\", line 142, in _rdumpq\n    size = _rdumpq(q, size, v)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/contrib/tnetstring.py\", line 149, in _rdumpq\n    raise ValueError(\"unserializable object: {} ({})\".format(value, type(value)))\nValueError: unserializable object: <WebSocketFlow (69 messages)> (<class 'mitmproxy.websocket.WebSocketFlow'>)\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments? What have you tried so far?\nIf you run mitmproxy --host --no-websocket, this error writing out flows doesn't occur as the proxy doesn't honor the websocket upgrade. Operationally, I can't tell if mitmproxy filters out the upgrade header, or if it blocks the entire flow at the proxy. Either way, it doesn't have a problem when writing out the flows.\nOur ultimate goal is to harden our app by forcing it to fallback to older web technologies like long polling if the websocket upgrade is blocked, such as by a BlueCoat configured to block websockets (apparently common on enterprise networks). I'm trying to get mitmproxy to mimic that behavior. Using --no-websocket does seem to achieve that, but when I try to compare flows between websocket and non-websocket, mitmproxy stackdumps when dumping the websocket flow.\nSystem information\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.6.0\nPlatform: Darwin-16.4.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.12.3 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-03-07T16:24:41Z", "fixed_by": "#2114", "pull_request_summary": "make websocket flows serializable", "pull_request_description": "Member\nKriechi commented on 8 Mar 2017\nfixes #2113", "pull_request_status": "Merged", "issue_fixed_time": "2017-03-10T20:15:46Z", "files_changed": [["2", "mitmproxy/flow.py"], ["4", "mitmproxy/proxy/protocol/websocket.py"], ["8", "mitmproxy/stateobject.py"], ["1", "mitmproxy/test/tflow.py"], ["51", "mitmproxy/websocket.py"], ["22", "test/mitmproxy/test_stateobject.py"], ["15", "test/mitmproxy/test_websocket.py"]]}, "732": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2111", "issue_id": "#2111", "issue_summary": "Proxyauth metadata not present for HTTPS requests", "issue_description": "laurmurclar commented on 7 Mar 2017\nSteps to reproduce the problem:\nRun mitmproxy --nonanonymous\nSet up the proxy in System Preferences. Enter a username and password (here I used laura and pass respectively).\nNavigate to a HTTP site. Verify that you can see the proxyauth credentials in the Detail tab when viewing the request in mitmproxy. See image below:\n4. Navigate to a HTTPS site. Verify that the proxyauth credentials are not visible in the `Detail` tab. Example:\nAny other comments? What have you tried so far?\nThe proxyauth metadata is not present in the request method of inline scripts either. It is present when the request is HTTP. I have not checked other events. Adding\nmitmproxy.ctx.log(f.request.pretty_host + \"- Adding credientials to metadata\")\nto line 109 of the proxyauth addon, and using a simple inline script:\ndef request(self, flow):\n        ctx.log(\"Request recieved: \" + flow.request.pretty_host + \". Metadata: \" + str(flow.metadata))\nI get the following output in the event log:\nSystem information\nMitmproxy version: 3.0.0 (1.0.1dev0299-0x37c1c55)\nPython version: 3.6.0\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2k 26 Jan 2017\nMac version: 10.11.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-03-07T11:48:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "733": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2110", "issue_id": "#2110", "issue_summary": "`mitmdump --version` is confusing.", "issue_description": "Member\nmhils commented on 7 Mar 2017\nSteps to reproduce the problem:\nmitmdump --version\nThe output is\nMitmproxy version: 3.0.0.dev (2.0.0dev0064-0xbda3933)\nfor me, stating two conflicting versions. Not sure what we actually want to do here?", "issue_status": "Closed", "issue_reporting_time": "2017-03-07T11:32:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "734": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2109", "issue_id": "#2109", "issue_summary": "IPv6 IPs are not formatted properly in console output", "issue_description": "Member\nmhils commented on 7 Mar 2017\nSteps to reproduce the problem:\nmitmproxy -R http://example.com\ncurl https://[::1]:8080\nThe output currently looks like this:\n('::1', 56795, 0, 0): clientconnect\nBut should probably look more like this:\n[::1]:56795: clientconnect\nSystem information\nMitmproxy version: 3.0.0.dev (2.0.0dev0064-0xbda3933)\nPython version: 3.6.0\nPlatform: Windows-10-10.0.14393-SP0\nSSL version: OpenSSL 1.0.2k 26 Jan 2017\nWindows version: 10 10.0.14393 SP0 Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2017-03-07T11:30:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "735": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2103", "issue_id": "#2103", "issue_summary": "Make the eventlog more sticky", "issue_description": "vfaronov commented on 6 Mar 2017\nSteps to reproduce the problem:\nStart mitmproxy (console UI).\nPress E to show the eventlog.\nDo something to replace the entire view. For example, press ? to show help.\nPress Q to go back. The eventlog is gone.\nBut apparently its state is still remembered somewhere, because, to show the eventlog again, I have to press E twice.\nAny other comments?\nI think it would be better if the eventlog stayed on screen after returning from another view. If not, at least the double-E bug should be fixed.\nSystem information\n(this is mitmproxy master)\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-64-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-03-06T13:47:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "736": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2102", "issue_id": "#2102", "issue_summary": "Crash when pressing F with eventlog focused", "issue_description": "vfaronov commented on 6 Mar 2017\nSteps to reproduce the problem:\nStart mitmproxy (console UI).\nPress E to show the eventlog.\nPress Tab to focus the eventlog.\nPress F.\nTraceback (most recent call last):\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/mitmproxy/tools/console/flowlist.py\", line 116, in keypress\n    return self.focus_item.keypress(tsize, key)\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/mitmproxy/tools/console/flowlist.py\", line 71, in keypress\n    o.focus_follow = not o.focus_follow\n  File \"/home/vasiliy/tmp/env4/lib/python3.5/site-packages/mitmproxy/optmanager.py\", line 107, in __getattr__\n    raise AttributeError(\"No such option: %s\" % attr)\nAttributeError: No such option: focus_follow\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...\nSystem information\n(this is mitmproxy from master)\nMitmproxy version: 3.0.0 (release version)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-64-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-03-06T13:41:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "737": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2099", "issue_id": "#2099", "issue_summary": "WebSocket filter is broken in mitmweb", "issue_description": "Member\nmhils commented on 5 Mar 2017\nSteps to reproduce the problem:\nEnter ~websocket in the search field.\n\"SyntaxError: Expected filter expression but \"~\" found.\"\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0037-0x6a3497f)\nPython version: 3.6.0\nPlatform: Windows-10-10.0.14393-SP0\nSSL version: OpenSSL 1.0.2k 26 Jan 2017\nWindows version: 10 10.0.14393 SP0 Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2017-03-05T12:07:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "738": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2094", "issue_id": "#2094", "issue_summary": "Remove compiled JS from repo", "issue_description": "Member\nmhils commented on 4 Mar 2017\nWe currently host the compiled JavaScript code for mitmweb in https://github.com/mitmproxy/mitmproxy/tree/master/mitmproxy/tools/web/static so that one can use mitmweb directly from a repo checkout. This is quite useful, but on the other hand it tends to be annoying to have those files not in gitignore as their contents depend on the exact version of dependencies in node_modules. To mitigate this, I would propose to move the compiled files to .gitignore and then use a pattern like this in index.html where we try to use the local copy first but fall back to an online version alternatively:\n<script src=\"/static/vendor.js\"></script>\n<script src=\"/static/app.js\"></script>\n<script type=\"text/javascript\">\nif(!window.some_var_defined_by_scripts_above) {\n  console.warn(\"Falling back to precompiled JS copy...\")\n  document.write('\\x3Cscript type=\"text/javascript\" src=\"http://example.com/vendor.js\"\\x3E\\x3C/script\\x3E')\n  document.write('\\x3Cscript type=\"text/javascript\" src=\"http://example.com/app.js\"\\x3E\\x3C/script\\x3E')\n}\n</script>\nThere are a two tricky questions:\nWhere do we host the precompiled files? Dedicated GitHub, CI?\nHow do we make sure that our binaries still include those files? Make sure to download the online copy before compiling?", "issue_status": "Closed", "issue_reporting_time": "2017-03-04T11:10:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "739": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2093", "issue_id": "#2093", "issue_summary": "Setup JS Testing Infrastructure", "issue_description": "Member\nmhils commented on 4 Mar 2017\nI noticed that I'm a bit reluctant to quickly merge mitmweb PRs as our testing situation there is rather terrible and I have to be very careful when reviewing. As a first step to mitigate this, we should set up a Travis CI job that run the jest tests we have in https://github.com/mitmproxy/mitmproxy/tree/master/web/src/js/__tests__.\nNot sure if the existing tests even run - if not, it's okay to mark the travis job to allow failures and then fix the tests in a separate PR.", "issue_status": "Closed", "issue_reporting_time": "2017-03-04T10:39:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "740": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2089", "issue_id": "#2089", "issue_summary": "Inline certificate installation docs", "issue_description": "Member\nmhils commented on 2 Mar 2017\nWe currently link to a bunch of external places at http://docs.mitmproxy.org/en/stable/certinstall.html. Unfortunately, we had a bunch of cases where those links went dead and we didn't notice quickly. What's more, the instructions we link to are rather complicated sometimes. It would be nice if we could slowly start providing our own docs for this again, given that this is a rather important aspect needed to make mitmproxy work.", "issue_status": "Closed", "issue_reporting_time": "2017-03-02T18:13:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "741": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2086", "issue_id": "#2086", "issue_summary": "crash when trying to duplicate a flow", "issue_description": "majewsky commented on 2 Mar 2017\nSteps to reproduce the problem:\nStart as usual (i.e. mitmproxy -p $port).\nRecord at least one flow.\nPress ShiftD to duplicate a flow.\nCrashes every time. Stacktrace:\nTraceback (most recent call last):\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/lib/python3.6/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 417, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/lib/python3.6/site-packages/urwid/listbox.py\", line 987, in keypress\n    self.make_cursor_visible((maxcol,maxrow))\n  File \"/usr/lib/python3.6/site-packages/urwid/listbox.py\", line 939, in make_cursor_visible\n    focus_widget, pos = self.body.get_focus()\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 284, in get_focus\n    f = FlowItem(self.master, self.master.view.focus.flow)\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 123, in __init__\n    w = self.get_text()\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/flowlist.py\", line 132, in get_text\n    max_url_len=cols,\n  File \"/usr/lib/python3.6/site-packages/mitmproxy/tools/console/common.py\", line 427, in format_flow\n    acked = f.reply.state == \"committed\",\nAttributeError: 'NoneType' object has no attribute 'state'\nSystem information\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.6.0\nPlatform: Linux-4.9.11-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.0.2k 26 Jan 2017\nLinux distro: arch", "issue_status": "Closed", "issue_reporting_time": "2017-03-02T12:22:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "742": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2084", "issue_id": "#2084", "issue_summary": "mitmweb doesn't obey \"showhost\" directive", "issue_description": "wdormann commented on 1 Mar 2017\nSteps to reproduce the problem:\nLaunch mitmweb --host\nObserve IP addresses in traffic, rather than host\nAny other comments? What have you tried so far?\nmitmproxy with the same option behaves as expected. That is, host names are used rather than IP addresses.\nSystem information\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.5.2\nPlatform: Linux-3.10.0-514.6.1.el7.x86_64-x86_64-with-centos-7.3.1611-Core\nSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013\nLinux distro: CentOS Linux 7.3.1611 Core", "issue_status": "Closed", "issue_reporting_time": "2017-03-01T17:24:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "743": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2083", "issue_id": "#2083", "issue_summary": "Unable to scroll mitmweb details in Firefox", "issue_description": "wdormann commented on 1 Mar 2017 \u2022\nedited\nSteps to reproduce the problem:\nInstall Firefox ESR 45.7.0 on Linux\nCapture with mitmweb\nFind a message that requires scrolling on the right pane, and attempt to view all content.\nAny other comments? What have you tried so far?\nThis seems very similar to issue #615\nChromium scrolls fine.\nSystem information\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.5.2\nPlatform: Linux-3.10.0-514.6.1.el7.x86_64-x86_64-with-centos-7.3.1611-Core\nSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013\nLinux distro: CentOS Linux 7.3.1611 Core", "issue_status": "Closed", "issue_reporting_time": "2017-03-01T17:16:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "744": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2079", "issue_id": "#2079", "issue_summary": "Mitmproxy received an absolute-form request error", "issue_description": "axot commented on 1 Mar 2017\nSteps to reproduce the problem:\ntcpdump result:\nCONNECT sample.domain.com:80 HTTP/1.1\nProxy-Connection: Keep-Alive\nConnection: Keep-Alive\nHost: sample.domain.com:80\n\nHTTP/1.1 200 Connection established\n\nPOST http://sample.domain.com/ajax/info/info HTTP/1.1\nUser-Agent: Unity/5.4.3p4 (Mac OS X 10.12.3; MacBookPro12,1)\nHost: sample.domain.com\nAccept-Encoding: gzip, identity\nProxy-Connection: Keep-Alive\nConnection: Keep-Alive, TE\nTE: identity\nContent-Length: 0\nCookie: apv=1.0; abc=; abd=; abe=\n\nHTTP/1.1 400 Bad Request\nServer: mitmproxy 2.0.0\nConnection: close\nContent-Length: 436\nContent-Type: text/html\n\n<html>\n            <head>\n                <title>400 Bad Request</title>\n            </head>\n            <body>\n            <h1>400 Bad Request</h1>\n            <p>HttpException(&#x27;Mitmproxy received an absolute-form request even though it is not running in regular mode. This usually indicates a misconfiguration, please see http://docs.mitmproxy.org/en/stable/modes.html for details.&#x27;,)</p>\n            </body>\n        </html>HTTP/1.1 502 Bad Gateway\nServer: mitmproxy 2.0.0\nConnection: close\nContent-Length: 479\nContent-Type: text/html\n\n<html>\n            <head>\n                <title>502 Bad Gateway</title>\n            </head>\n            <body>\n            <h1>502 Bad Gateway</h1>\n            <p>ProtocolException(&#x27;HTTP protocol error in client request: Mitmproxy received an absolute-form request even though it is not running in regular mode. This usually indicates a misconfiguration, please see http://docs.mitmproxy.org/en/stable/modes.html for details.&#x27;,)</p>\n            </body>\n        </html>\nAny other comments? What have you tried so far?\nI fixed this temporarily with\nmitmproxy/mitmproxy/proxy/root_context.py\nLine 100 in 83f1e2e\n return protocol.Http1Layer(top_layer, http.HTTPMode.transparent) \n- return protocol.Http1Layer(top_layer, http.HTTPMode.transparent)\n+ return protocol.Http1Layer(top_layer, http.HTTPMode.regular)\nSystem information\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.6.0\nPlatform: Darwin-16.4.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.12.3 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-03-01T06:42:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "745": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2078", "issue_id": "#2078", "issue_summary": "Renaming of 'unicode' to 'str'", "issue_description": "Parth-Vader commented on 1 Mar 2017\nI installed mitmproxy==2.0.0 using pip3 and it was successfully installed, but when mitmproxy --version is given, I get the following error :\n  File \"/usr/local/bin/mitmproxy\", line 7, in <module>\n  from mitmproxy.tools.main import mitmproxy\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/__init__.py\", line 3, in <module>\n  from . import script  # noqa\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/script/__init__.py\", line 1, in <module>\n  from .concurrent import concurrent\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/script/concurrent.py\", line 6, in <module>\n  from mitmproxy import eventsequence\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/eventsequence.py\", line 2, in <module>\n  from mitmproxy import http\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/http.py\", line 2, in <module>\n  from typing import Optional\n  File \"/usr/local/lib/python2.7/dist-packages/typing.py\", line 471, in <module>\n  AnyStr = TypeVar('AnyStr', bytes, unicode)\n  NameError: name 'unicode' is not defined\nPython 3 renamed the unicode type to str, the old str type has been replaced by bytes.", "issue_status": "Closed", "issue_reporting_time": "2017-03-01T03:54:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "746": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2077", "issue_id": "#2077", "issue_summary": "Some requests not getting through on the app and not showing in mitmproxy", "issue_description": "pythonios commented on 1 Mar 2017\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\nIf I use mitmproxy to read traffic from my android, certain requests will not get through (looks like they are blocked or not executed at all on the app). For example: Want to load a certain area in the app which should load a list, list will not be loaded and also not shown in mitmproxy. As soon as I stop mitmproxy and remove proxy from settings on android the request works again. Some request work but not all (especially important ones do not work). Are there any tips on how to get it to work or what the problem could be?\nthanks in advance\nSystem information\nmitmproxy 0.18.1\nmacOS", "issue_status": "Closed", "issue_reporting_time": "2017-02-28T20:23:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "747": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2074", "issue_id": "#2074", "issue_summary": "Scripting Include Problems", "issue_description": "michaelschem commented on 28 Feb 2017 \u2022\nedited\nSteps to reproduce the problem:\nDownload precompiled version of mitmdump from https://github.com/mitmproxy/mitmproxy/releases as per installation instructions for linux\npip3 install ipwhois\nverify that install worked by running python3 then running from ipwhois import IPWhois (import works here)\nRun mitmproxy with a script as follows ~/mitmdump -s test_includes.py with the following in test_script.py\nfrom ipwhois import IPWhois\ngetting the following error:\nScript error: Traceback (most recent call last): File \"../mitm_script.py\", line 6, in <module> from ipwhois import IPWhois ImportError: No module named 'ipwhois'\nAny other comments? What have you tried so far?\nAfter installing ipwhois or any library to import into my script, the module cannot be found in the included script\nSystem information\nLinux DarkNetLab 4.4.0-59-generic #80-Ubuntu SMP Fri Jan 6 17:47:47 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux\n(Using the precompiled version I downloaded from link above)\n~/mitmproxy --version\nmitmproxy 1.0.2", "issue_status": "Closed", "issue_reporting_time": "2017-02-27T19:05:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "748": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2073", "issue_id": "#2073", "issue_summary": "Anticache is not set with config.yaml", "issue_description": "andrefreitas commented on 27 Feb 2017\nSteps to reproduce the problem:\nEdit ~/.mitmproxy/config.yaml\nSet anticache: true\nRun with mitmproxy\nAny other comments? What have you tried so far?\nI tried with True and true. It only works if I set --anticache as a command line option. Others params such web_port are correctly set from the config file.\nSystem information\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.6.0\nPlatform: Darwin-16.1.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e  16 Feb 2017\nMac version: 10.12.1 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-02-27T14:54:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "749": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2071", "issue_id": "#2071", "issue_summary": "[web] Failed to dump flows into json when visiting https website.", "issue_description": "Contributor\nMatthewShao commented on 27 Feb 2017\nSteps to reproduce the problem:\nstart mitmweb and set the correct proxy configuration in the browser.\nvisit github, or any other website with https\nmitmweb stuck and throw an exception:\nERROR:tornado.application:Exception in callback <function WebMaster.run.<locals>.<lambda> at 0x7f8871ebb378>\nTraceback (most recent call last):\n  File \"/home/matthew/Hack/mitmproxy/venv3.5/lib/python3.5/site-packages/tornado/ioloop.py\", line 1041, in _run\n    return self.callback()\n  File \"/home/matthew/Hack/mitmproxy/mitmproxy/tools/web/master.py\", line 109, in <lambda>\n    tornado.ioloop.PeriodicCallback(lambda: self.tick(timeout=0), 5).start()\n  File \"/home/matthew/Hack/mitmproxy/mitmproxy/master.py\", line 109, in tick\n    handle_func(obj)\n  File \"/home/matthew/Hack/mitmproxy/mitmproxy/controller.py\", line 70, in wrapper\n    master.addons(f.__name__, message)\n  File \"/home/matthew/Hack/mitmproxy/mitmproxy/addonmanager.py\", line 90, in __call__\n    self.invoke(i, name, *args, **kwargs)\n  File \"/home/matthew/Hack/mitmproxy/mitmproxy/addonmanager.py\", line 85, in invoke\n    func(*args, **kwargs)\n  File \"/home/matthew/Hack/mitmproxy/mitmproxy/addons/view.py\", line 327, in request\n    self.add(f)\n  File \"/home/matthew/Hack/mitmproxy/mitmproxy/addons/view.py\", line 255, in add\n    self.sig_view_add.send(self, flow=f)\n  File \"/home/matthew/Hack/mitmproxy/venv3.5/lib/python3.5/site-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/home/matthew/Hack/mitmproxy/venv3.5/lib/python3.5/site-packages/blinker/base.py\", line 267, in <listcomp>\n    for receiver in self.receivers_for(sender)]\n  File \"/home/matthew/Hack/mitmproxy/mitmproxy/tools/web/master.py\", line 58, in _sig_view_add\n    data=app.flow_to_json(flow)\n  File \"/home/matthew/Hack/mitmproxy/mitmproxy/tools/web/app.py\", line 197, in broadcast\n    message = json.dumps(kwargs, ensure_ascii=False).encode(\"utf8\", \"surrogateescape\")\n  File \"/usr/lib/python3.5/json/__init__.py\", line 237, in dumps\n    **kw).encode(obj)\n  File \"/usr/lib/python3.5/json/encoder.py\", line 198, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File \"/usr/lib/python3.5/json/encoder.py\", line 256, in iterencode\n    return _iterencode(o, 0)\n  File \"/usr/lib/python3.5/json/encoder.py\", line 179, in default\n    raise TypeError(repr(o) + \" is not JSON serializable\")\nTypeError: b'-----BEGIN CERTIFICATE-----\\nMIIC5jCCAc6gAwIBAgIGDYj0HL5MMA0GCSqGSIb3DQEBCwUAMCgxEjAQBgNVBAMM\\nCW1pdG1wcm94eTESMBAGA1UECgwJbWl0bXByb3h5MB4XDTE3MDIyNTA5MDM0M1oX\\nDTIwMDIyNzA5MDM0M1owFTETMBEGA1UEAwwKZ2l0aHViLmNvbTCCASIwDQYJKoZI\\nhvcNAQEBBQADggEPADCCAQoCggEBAMTLqdlVNA4h2xzkX5XhLO1wtqZX0X0JpsXC\\nHUO+KE3Pf2IBHWFAzeB3SVuaTSIa55UvRUDgZm+gYpl/qswf3MpPB8rkosLtwSJt\\ns7ziAYF0JlrwYW+ZBaH/baQZ4JmgpY3qFzrkNhXwrVW+Wg3uO47w/9GaIuUNVv5t\\nElfbCDBO0wvWt9tgEuaFNLVwOnibN4LEioQw/xnnUZu4JU6u+16rWasARxU7vlGs\\no+CB6wgoK62W4VnSK7aQv6PMAOR49tyzhLXO6LKHQtZA4DG34zXWTYfXhuTC7rnA\\nQ6haZ9qyVyeYclIXpJkmf10q2eJTjQbj8ff4Cj3LYlVmBtC2qbsCAwEAAaMpMCcw\\nJQYDVR0RBB4wHIIKZ2l0aHViLmNvbYIOd3d3LmdpdGh1Yi5jb20wDQYJKoZIhvcN\\nAQELBQADggEBABRJcH+lDB6ec343S+tNYDtr+wWgSiGw7WggKcUpMawBuqY61K4L\\nLoxous98ie5XFfLbZI2rW/sIbMEuhjjamEMNmt83ZmZxo/YzMTXO/HlmHZYm+Vjw\\nTdhGxe5cGTxjCwXhygRHX+IupDjanniwmh2jfg/0SlW7S4YE/MQJ1mcbGyzppwkg\\n4hZ6sEcGe+RC7Sn1tJWlVpA3V8a6udZE8ejlaZV0/PYbJUWyRxAl00PlvRG2sPu5\\nEJM7Xbd0TxtqVX7oagImBhqlhf0CyJfRMq0DU34j0oeUqtV/0FaapMumOODcnloI\\nJeldz1QeX2hHksE1hYeVjZNFNKQLtzvEpgg=\\n-----END CERTIFICATE-----\\n' is not JSON serializable\nAny other comments? What have you tried so far?\nFlow.client_conn.mitmcertis in the type of bytes, so json.dumps() could not handle it and throw an exception saying that it is not JSON serializable.\nI noticed that in flow_to_json() function, there is a comment say:\nRemove flow message content and cert to save transmission space.\nAnd we indeed remove the server_conn.cert from the returning dict, but left client_conn.mitmcert.\nI have tried to add one more line of code to remove client_conn.mitmcert from the returning dict and it solve this exception.\nHowever, I am not sure whether it is appropriate to remove this item. Or should we convert it into a string and keep it in the returning dict?\nSystem information\nMitmproxy version: 3.0.0 (2.0.0dev0028-0x0fdf2c0)\nPython version: 3.5.2\nPlatform: Linux-4.4.0-63-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2017-02-27T10:21:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "750": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2070", "issue_id": "#2070", "issue_summary": "AttributeError: 'NoneType' object has no attribute 'alpn_protocols'", "issue_description": "RhZjQyMWI commented on 27 Feb 2017 \u2022\nedited\nSimilar to issue: #1476\nSteps to reproduce the problem:\nmitmdump -T --host -a android4\nvisit location\nSystem information\nMitmproxy version: 2.0.0 (release version) \nPython version: 3.5.1\nPlatform: Linux-2.6.32-642.13.1.el6.x86_64-x86_64-with-centos-6.8-Final\nSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013\nLinux distro: CentOS 6.8 Final\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/proxy/protocol/tls.py\", line 365, in __call__\n    self._client_hello.alpn_protocols or\nAttributeError: 'NoneType' object has no attribute 'alpn_protocols'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n\nCannot parse Client Hello: TlsProtocolException('Cannot read raw Client Hello: TlsProtocolException(\\'Unexpected EOF in TLS handshake: b\"\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01\\\\\\\\xfc\\\\\\\\x03\\\\\\\\x03\\\\\\\\xac\\\\\\\\xf3\\\\\\\\xa4\\\\\\\\x86\\\\\\\\x07.$$\\\\\\\\xe0\\\\\\\\xb0#\\\\\\\\xc7~\\\\\\\\x7f%\\\\\\\\xf4\\\\\\\\xc0\\\\\\\\xce\\\\\\\\x1b\\\\\\\\xfc\\\\\\\\xd3s\\\\\\\\x82\\\\\\\\xdaKu/\\\\\\\\xe6\\\\\\\\xb6\\\\\\\\xc0\\\\\\\\xe3~\\\\\\\\x00\\\\\\\\x00v\\\\\\\\xc00\\\\\\\\xc0,\\\\\\\\xc0(\\\\\\\\xc0$\\\\\\\\xc0\\\\\\\\x14\\\\\\\\xc0\\\\\\\\n\\\\\\\\x00\\\\\\\\xa3\\\\\\\\x00\\\\\\\\x9f\\\\\\\\x00k\\\\\\\\x00j\\\\\\\\x009\\\\\\\\x008\\\\\\\\x00\\\\\\\\x88\\\\\\\\x00\\\\\\\\x87\\\\\\\\xc02\\\\\\\\xc0.\\\\\\\\xc0*\\\\\\\\xc0&\\\\\\\\xc0\\\\\\\\x0f\\\\\\\\xc0\\\\\\\\x05\\\\\\\\x00\\\\\\\\x9d\\\\\\\\x00=\\\\\\\\x005\\\\\\\\x00\\\\\\\\x84\\\\\\\\xc0/\\\\\\\\xc0+\\\\\\\\xc0\\\\\\'\\\\\\\\xc0#\\\\\\\\xc0\\\\\\\\x13\\\\\\\\xc0\\\\\\\\t\\\\\\\\x00\\\\\\\\xa2\\\\\\\\x00\\\\\\\\x9e\\\\\\\\x00g\\\\\\\\x00@\\\\\\\\x003\\\\\\\\x002\\\\\\\\x00\\\\\\\\x9a\\\\\\\\x00\\\\\\\\x99\\\\\\\\x00E\\\\\\\\x00D\\\\\\\\xc01\\\\\\\\xc0-\\\\\\\\xc0)\\\\\\\\xc0%\\\\\\\\xc0\\\\\\\\x0e\\\\\\\\xc0\\\\\\\\x04\\\\\\\\x00\\\\\\\\x9c\\\\\\\\x00<\\\\\\\\x00/\\\\\\\\x00\\\\\\\\x96\\\\\\\\x00A\\\\\\\\xc0\\\\\\\\x12\\\\\\\\xc0\\\\\\\\x08\\\\\\\\x00\\\\\\\\x16\\\\\\\\x00\\\\\\\\x13\\\\\\\\xc0\\\\\\\\r\\\\\\\\xc0\\\\\\\\x03\\\\\\\\x00\\\\\\\\n\\\\\\\\x00\\\\\\\\xff\\\\\\\\x01\\\\\\\\x00\\\\\\\\x01]\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x10\\\\\\\\x00\\\\\\\\x0e\\\\\\\\x00\\\\\\\\x00\\\\\\\\x0blocalhost.android\\\\\\\\x00\\\\\\\\x0b\\\\\\\\x00\\\\\\\\x04\\\\\\\\x03\\\\\\\\x00\\\\\\\\x01\\\\\\\\x02\\\\\\\\x00\\\\\\\\n\\\\\\\\x004\\\\\\\\x002\\\\\\\\x00\\\\\\\\x0e\\\\\\\\x00\\\\\\\\r\\\\\\\\x00\\\\\\\\x19\\\\\\\\x00\\\\\\\\x0b\\\\\\\\x00\\\\\\\\x0c\\\\\\\\x00\\\\\\\\x18\\\\\\\\x00\\\\\\\\t\\\\\\\\x00\\\\\\\\n\\\\\\\\x00\\\\\\\\x16\\\\\\\\x00\\\\\\\\x17\\\\\\\\x00\\\\\\\\x08\\\\\\\\x00\\\\\\\\x06\\\\\\\\x00\\\\\\\\x07\\\\\\\\x00\\\\\\\\x14\\\\\\\\x00\\\\\\\\x15\\\\\\\\x00\\\\\\\\x04\\\\\\\\x00\\\\\\\\x05\\\\\\\\x00\\\\\\\\x12\\\\\\\\x00\\\\\\\\x13\\\\\\\\x00\\\\\\\\x01\\\\\\\\x00\\\\\\\\x02\\\\\\\\x00\\\\\\\\x03\\\\\\\\x00\\\\\\\\x0f\\\\\\\\x00\\\\\\\\x10\\\\\\\\x00\\\\\\\\x11\\\\\\\\x00\\\\\\\\r\\\\\\\\x00 \\\\\\\\x00\\\\\\\\x1e\\\\\\\\x06\\\\\\\\x01\\\\\\\\x06\\\\\\\\x02\\\\\\\\x06\\\\\\\\x03\\\\\\\\x05\\\\\\\\x01\\\\\\\\x05\\\\\\\\x02\\\\\\\\x05\\\\\\\\x03\\\\\\\\x04\\\\\\\\x01\\\\\\\\x04\\\\\\\\x02\\\\\\\\x04\\\\\\\\x03\\\\\\\\x03\\\\\\\\x01\\\\\\\\x03\\\\\\\\x02\\\\\\\\x03\\\\\\\\x03\\\\\\\\x02\\\\\\\\x01\\\\\\\\x02\\\\\\\\x02\\\\\\\\x02\\\\\\\\x03\\\\\\\\x00\\\\\\\\x0f\\\\\\\\x00\\\\\\\\x01\\\\\\\\x01\\\\\\\\x00\\\\\\\\x15\\\\\\\\x00\\\\\\\\xdc\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\\\\\\\\x00\"\\',)',)\n\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/usr/local/lib/python3.5/site-packages/mitmproxy/proxy/protocol/tls.py\", line 365, in __call__\n    self._client_hello.alpn_protocols or\nAttributeError: 'NoneType' object has no attribute 'alpn_protocols'\nEdit: Found some information it might be because of old openssl version, ALPN support requires openssl 1.0.2. Will upgrade and retest.", "issue_status": "Closed", "issue_reporting_time": "2017-02-27T04:28:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "751": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2068", "issue_id": "#2068", "issue_summary": "Entering Palette options crashes mitmproxy", "issue_description": "Contributor\nJordanLoehr commented on 27 Feb 2017\nSteps to reproduce the problem:\nPress 'O' for options\nSelect 'Palette'\nmitmproxy will crash\nAny other comments? What have you tried so far?\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 281, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/select.py\", line 114, in keypress\n    self.get_focus()[0].option.activate()\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/palettepicker.py\", line 46, in <lambda>\n    lambda: setattr(self.master.options, \"palette\", name)\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/optmanager.py\", line 114, in __setattr__\n    self.update(**{attr: value})\n  File \"/usr/local/Cellar/mitmproxy/2.0.0/libexec/lib/python3.6/site-packages/mitmproxy/optmanager.py\", line 141, in update\n    raise KeyError(\"No such option: %s\" % k)\nKeyError: 'No such option: palette'\nThe option names in mitmproxy/options.py were prefixed with 'console_', but line 46 and line 62 of mitmproxy/tools/console/palettepicker.py were not updated to include this prefix.\nThis appears to have been broken by commit 35aff3b\nSystem information\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.6.0\nPlatform: Darwin-16.4.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0e 16 Feb 2017\nMac version: 10.12.3 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-02-26T23:52:51Z", "fixed_by": "#2069", "pull_request_summary": "Added console_ prefix to options in palettepicker to resolve issue #2068", "pull_request_description": "Contributor\nJordanLoehr commented on 27 Feb 2017\nAdded 'console_' prefix to mitmproxy/tools/console/palettepicker.py to fix #2068.", "pull_request_status": "Merged", "issue_fixed_time": "2017-02-27T04:37:27Z", "files_changed": [["4", "mitmproxy/tools/console/palettepicker.py"]]}, "752": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2065", "issue_id": "#2065", "issue_summary": "brotli encode/decode crash", "issue_description": "Contributor\nwhackashoe commented on 26 Feb 2017\nSteps to reproduce the problem:\nload google.com in browser\npress enter on GET https://www.google.com/ HTTP/2.0\npress z to select encoding in either Request or Response\npress b to select brotli\nAny other comments? What have you tried so far?\nTraceback (most recent call last):                                                                                                            \n  File \"/home/whackashoe/code/mitmproxy/mitmproxy/tools/console/master.py\", line 281, in run \n    self.loop.run()\n  File \"/home/whackashoe/code/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run \n    self._run()\n  File \"/home/whackashoe/code/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/whackashoe/code/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run \n    self._loop()\n  File \"/home/whackashoe/code/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/whackashoe/code/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/whackashoe/code/mitmproxy/venv/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/whackashoe/code/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/whackashoe/code/mitmproxy/venv/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/whackashoe/code/mitmproxy/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/home/whackashoe/code/mitmproxy/venv/lib/python3.5/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/home/whackashoe/code/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 155, in keypress\n    return self.master.ab.keypress(*args, **kwargs)\n  File \"/home/whackashoe/code/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 108, in keypress\n    self.prompt_execute(k)\n  File \"/home/whackashoe/code/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 133, in prompt_execute\n    msg = p(txt)\n  File \"/home/whackashoe/code/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 31, in __call__\n    return self.callback(txt, *self.args)\n  File \"/home/whackashoe/code/mitmproxy/mitmproxy/tools/console/flowview.py\", line 686, in encode_callback\n    conn.encode(encoding_map[key])\n  File \"/home/whackashoe/code/mitmproxy/mitmproxy/net/http/message.py\", line 245, in encode\n    raise ValueError(\"Invalid content encoding {}\".format(repr(e)))\nValueError: Invalid content encoding 'brotli'\nHere is a patch which suppresses the error:\ndiff --git a/mitmproxy/tools/console/flowview.py b/mitmproxy/tools/console/flowview.py                                          \nindex a97a9b3..650ef42 100644\n--- a/mitmproxy/tools/console/flowview.py\n+++ b/mitmproxy/tools/console/flowview.py\n@@ -683,5 +683,9 @@ class FlowView(tabs.Tabs):\n             \"d\": \"deflate\",\n             \"b\": \"brotli\",\n         }\n-        conn.encode(encoding_map[key])\n+        try:\n+            conn.encode(encoding_map[key])\n+        except ValueError:\n+            pass\n+\n         signals.flow_change.send(self, flow = self.flow)\nSystem information\n$ mitmproxy --version\nMitmproxy version: 3.0.0 (2.0.0dev0020-0x2aecffd) \nPython version: 3.5.0\nPlatform: Linux-3.13.0-107-generic-x86_64-with-Ubuntu-14.04-trusty\nSSL version: OpenSSL 1.0.2k  26 Jan 2017\nLinux distro: Ubuntu 14.04 trusty", "issue_status": "Closed", "issue_reporting_time": "2017-02-25T23:39:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "753": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2061", "issue_id": "#2061", "issue_summary": "Trying to run libmproxy code for Python 3", "issue_description": "Parth-Vader commented on 25 Feb 2017\nThe file had been using libmproxy (version 0.10) :-\nfrom libmproxy import controller, proxy\n\nclass HTTPSProxy(controller.Master, Thread):\n\ndef __init__(self, port):\n    password_manager = http_auth.PassManSingleUser('scrapy', 'scrapy')\n    authenticator = http_auth.BasicProxyAuth(password_manager, \"mitmproxy\")\n    cert_path = os.path.join(os.path.abspath(os.path.dirname(__file__)),\n        'keys', 'mitmproxy-ca.pem')\n    server = proxy.ProxyServer(proxy.ProxyConfig(\n        authenticator = authenticator,\n        cacert = cert_path),\n        port)\n    Thread.__init__(self)\n    controller.Master.__init__(self, server)\n`\nI want to run the code with python3, so I installed mitmproxy v0.18.2 and replaced libmproxy with mitmproxy.\nHow can I implement libmproxy.controller and libmproxy.proxy with mitmproxy?\nI'm using Ubuntu 16.04.\nAlso. doing mitmproxy --version gives ImportError: No module named 'mitmproxy.tools'.", "issue_status": "Closed", "issue_reporting_time": "2017-02-25T10:53:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "754": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2056", "issue_id": "#2056", "issue_summary": "Ignore filters do not seem to have any effect", "issue_description": "danhawkes commented on 24 Feb 2017\nSteps to reproduce the problem:\nmitmproxy -T --host\n^O -> Ignore patterns\nAdd regex: .*\nNavigate to example.com in browser, requests appear in log.\nSystem information\nmitmproxy 2.0.0", "issue_status": "Closed", "issue_reporting_time": "2017-02-24T11:05:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "755": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2052", "issue_id": "#2052", "issue_summary": "problem to install on Arch", "issue_description": "mostafaasadi commented on 22 Feb 2017\nHi\nI tried to install mitm on Arch Linux\nfrom pacman (orginal repo) it cause some errors about python packages\nfrom aur it give me error :\n==> ERROR: Failure while downloading http://effbot.org/downloads/Imaging-1.1.7.tar.gz\nAborting...\n==> ERROR: Makepkg was unable to build python2-imaging\nplease take look.", "issue_status": "Closed", "issue_reporting_time": "2017-02-22T11:07:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "756": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2049", "issue_id": "#2049", "issue_summary": "TlsException(\"SSL handshake error: SysCallError(-1, \\'Unexpected EOF\\')\",)',)", "issue_description": "straverso commented on 20 Feb 2017\nHey,\nI am running mitmproxy in my own python script.\nI am facing this issue when accessing few websites from Safari.\nFor instance, https://www.pec.it\nThe complete error provided by the browser is:\n502 Bad Gateway\nTlsProtocolException('Cannot establish TLS with www.pec.it:443 (sni: www.pec.it): TlsException(\"SSL handshake error: SysCallError(-1, \\'Unexpected EOF\\')\",)',) \nSteps to reproduce the problem:\nVisit https://www.pec.it from Safari, with mitmproxy in the middle.\nAny other comments? What have you tried so far?\nEverything works good using Chrome or Firefox.\nApparently, tested websites do not support TLSv1.2.\nIt happens that as soon as the mitmproxy sends the CHELO message, the server sends back a FIN message and interrupts the connection.\nSystem information\nHappens on MacOS Sierra Version 10.12.3, Safari Version 10.0.3 (12602.4.8) and mitmproxy (commit 337b1c9)\n$ mitmproxy --version\nMitmproxy version: 2.0.0 (release version)\nPython version: 3.5.2\nPlatform: Darwin-16.4.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j  26 Sep 2016\nMac version: 10.12.3 ('', '', '') x86_64\nThanks,\nStefano\n2", "issue_status": "Closed", "issue_reporting_time": "2017-02-20T17:01:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "757": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2044", "issue_id": "#2044", "issue_summary": "Which password use to import certificate into Chrome?", "issue_description": "SashaDesigN commented on 18 Feb 2017\nI`m trying to import .crt file into Chrome certificates list, but it asking me certificate password,", "issue_status": "Closed", "issue_reporting_time": "2017-02-18T18:28:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "758": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2042", "issue_id": "#2042", "issue_summary": "Teach upstream proxy (-U) mode to be able to ignore certain hosts or host/address-patterns", "issue_description": "Contributor\njavabrett commented on 18 Feb 2017\nThis is analogous to standard no-proxy functionality for a direct HTTP client - it should be possible to be able to specify hosts, host-patterns or even IP address ranges which mitmproxy will then proxy \"directly\" rather than forwarding via the configured upstream proxy. There is often no option to this if you are a) forced to work with an upstream proxy in order to access internet-hosts and b) also working with hosts e.g. localhost that are not known-to, or accessible from the upstream proxy.\nSteps to reproduce the problem:\nWork with an upstream proxy that you want to proxy requests to most, but not all hosts.\nReceive some redirect to http://localhost\nThe upstream proxy can't serve that request. Host \"localhost\" needs to be excluded from upstream proxying, and should instead be forwarded \"direct\", in this case, to localhost.\nAny other comments? What have you tried so far?\nI looked at filter-expressions but I don't think those fit.\nSystem information\nmitmproxy 1.0.2", "issue_status": "Closed", "issue_reporting_time": "2017-02-18T01:40:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "759": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2039", "issue_id": "#2039", "issue_summary": "Add --keep-host-header", "issue_description": "Member\nmhils commented on 18 Feb 2017\nSteps to reproduce the problem:\nmitmdump -R https://httpbin.org/\ncurl localhost:8080/headers\nThis returns \"Host\": \"httpbin.org\" instead of \"Host\": \"localhost\", which was what the original curl request sent. We want to add a --keep-host-header to disable our automatic host header rewrite here. For a discussion of the rationale, see #2034 (comment).\nOnce implemented, we should change the dns_spoofing example to use that instead of doing the requestheaders dance. First, however, let's keep the PR small and only add the switch.\n3\n1", "issue_status": "Closed", "issue_reporting_time": "2017-02-17T22:49:31Z", "fixed_by": "#2053", "pull_request_summary": "Adds --keep-host-header option (#2039)", "pull_request_description": "Contributor\nkrsoninikhil commented on 22 Feb 2017 \u2022\nedited by Kriechi\nAs per the discussion in #2034 (closed) and #2039 issue, this adds a --keep-host-header option to avoid auto header rewrite.\nfixes #2039", "pull_request_status": "Merged", "issue_fixed_time": "2017-03-04T10:42:46Z", "files_changed": [["5", "docs/features/reverseproxy.rst"], ["11", "examples/complex/dns_spoofing.py"], ["2", "mitmproxy/options.py"], ["2", "mitmproxy/proxy/protocol/http.py"], ["6", "mitmproxy/tools/cmdline.py"], ["20", "test/mitmproxy/proxy/test_server.py"], ["2", "test/mitmproxy/test_examples.py"]]}, "760": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2037", "issue_id": "#2037", "issue_summary": "Fix flaky coverage", "issue_description": "Member\nmhils commented on 18 Feb 2017\nCI is failing in #2032 because one line in http2.py apparently has flaky coverage: https://codecov.io/gh/mitmproxy/mitmproxy/compare/337b1c9399e525a23dc188ef5df1667f109b108e...6b22ca7a32252b5c5963704f6276eeac390a3622/changes\nWe should find out why this is happening and fix it. :)", "issue_status": "Closed", "issue_reporting_time": "2017-02-17T21:55:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "761": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2036", "issue_id": "#2036", "issue_summary": "Add `request.host_header`", "issue_description": "Member\nmhils commented on 18 Feb 2017\nThere are a bunch of places in the codebase where we use a hard-coded headers[\"Host\"] that now also have to deal with h2, see for example #2034. The question is how we handle this best:\nRewrite the special h2 headers starting with a colon to their h1 counterparts before we send them to the rest of mitmproxy (and undo that before sending them out). This would fix the symptoms we currently have, but we wouldn't display h2 flows accurately in the UI anymore (and the mapping would not be bijective). Sounds rather unconvincing to me.\nAdd a special request.host_header (or .authority_header?) property that proxies to the right header and use that instead of headers[\"Host\"].\nDistinguish between both headers everywhere. Nah.\nUnless somebody comes up with a better option, I'd propose we go an implement option 2 to tackle this. Implementation isn't entirely trivial, but I'd propose the following semantics:\nGet with no header present: None\nGet with (either Host or :authority) or matching Host and :authority: the correct header\nGet with different Host and :authority: Probably raise an exception?\nSet with existing: Update all the existing ones\nSet without existing: Use http_version and only set one of them.\n@Lukasa @Kriechi @yoavweiss, would that work for everyone?", "issue_status": "Closed", "issue_reporting_time": "2017-02-17T21:45:06Z", "fixed_by": "#2040", "pull_request_summary": "Add \"Request.host_header\"", "pull_request_description": "Member\nmhils commented on 18 Feb 2017 \u2022\nedited by Kriechi\nThis PR introduces request.host_header, which transparently maps between \"Host\" and \":authority\" headers.\nfixes #2034\nfixes #2036\ncloses #1791", "pull_request_status": "Merged", "issue_fixed_time": "2017-02-18T11:08:55Z", "files_changed": [["4", "examples/complex/dns_spoofing.py"], ["4", "mitmproxy/export.py"], ["3", "mitmproxy/net/http/http1/assemble.py"], ["47", "mitmproxy/net/http/request.py"], ["7", "mitmproxy/proxy/protocol/http.py"], ["47", "test/mitmproxy/net/http/test_request.py"]]}, "762": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2033", "issue_id": "#2033", "issue_summary": "Add PyInstaller indicator to `mitmproxy --version`", "issue_description": "Member\nmhils commented on 17 Feb 2017\nWe currently cannot distinguish if users use our precompiled binaries or if they installed mitmproxy using pip/brew/$packagemanager. It would be very useful to output if we are running the precompiled PyInstaller binary.\nhttps://pythonhosted.org/PyInstaller/runtime-information.html", "issue_status": "Closed", "issue_reporting_time": "2017-02-17T13:20:58Z", "fixed_by": "#2041", "pull_request_summary": "Adds PyInstaller build indicator to --version argument", "pull_request_description": "Contributor\nkrsoninikhil commented on 18 Feb 2017 \u2022\nedited\nI added \"Precompiled Binary\" along with the Mitmproxy version line, so the new output for binary uses will be:\n$ mitmproxy --version\nMitmproxy version: 2.0.0 (1.0.1dev0199-0x4cec88fc) Precompiled Binary\nPython version: 3.6.0\nPlatform: Linux-4.8.13-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.0.2j  26 Sep 2016\nLinux distro: arch\nThis closes #2033. Please let me know if any changes are required.\n1\n1", "pull_request_status": "Merged", "issue_fixed_time": "2017-02-20T09:29:16Z", "files_changed": [["6", "mitmproxy/utils/debug.py"], ["2", "test/mitmproxy/utils/test_debug.py"]]}, "763": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2031", "issue_id": "#2031", "issue_summary": "setting ssl_insecure: true on mitmproxy.yml doesn't work", "issue_description": "brunowowk commented on 15 Feb 2017\nSteps to reproduce the problem:\nCreate a mitmproxy.yml with:\nssl_insecure: true\nRun mitmdump (using docker) with said config:\ndocker run -p 8080:8080 -v $(pwd):/config mitmproxy/mitmproxy:1.0.2 mitmdump --conf /config/mitmproxy.yml\nTry accessing a site with invalid ssl certificate through the proxy:\nhttps_proxy=localhost:8080 curl -k https://wrong.host.badssl.com/\nExpected result:\nCertificate Verification Error for wrong.host.badssl.com: hostname 'wrong.host.badssl.com' doesn't match either of '*.badssl.com', 'badssl.com'\nIgnoring server verification error, continuing with connection\nGET https://wrong.host.badssl.com/\n               << 200 OK 475b\nActual result:\nCONNECT wrong.host.badssl.com:443\n << Certificate Verification Error for wrong.host.badssl.com: hostname 'wrong.host.badssl.com' doesn't match either of '*.badssl.com', 'badssl.com'\nAny other comments? What have you tried so far?\nRunning with --insecure flag works as expected:\ndocker run -p 8080:8080 -v $(pwd):/config mitmproxy/mitmproxy:1.0.2 mitmdump --insecure\nSystem information\nmitmdump 1.0.2\nUsing the docker hub image mitmproxy/mitmproxy:1.0.2", "issue_status": "Closed", "issue_reporting_time": "2017-02-15T15:06:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "764": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2030", "issue_id": "#2030", "issue_summary": "Support HAR dumping example script in standalone binaries", "issue_description": "mchr3k commented on 15 Feb 2017\nSteps to reproduce the problem:\nTry to run har_dump.py example with standalone mitmdump binary:\nmitmdump -s \"examples/complex/har_dump.py /tmp/out.har\"\nLoading script: examples/complex/har_dump.py /tmp/out.har\nScript error: Traceback (most recent call last):\nFile \"examples/complex/har_dump.py\", line 12, in <module>\nimport pytz\nImportError: No module named 'pytz'\n\nProxy server listening at http://0.0.0.0:8080\nAny other comments? What have you tried so far?\nI realize that har_dump.py is currently only an example script. However, it would be nice if it worked with the standalone binaries until/if you integrate it into the core of mitmproxy.\nI have been able to resolve this by rebuilding locally with a couple of small edits:\n> sudo apt-get install python3-pip python3-dev libffi-dev libssl-dev libtiff5-dev libjpeg8-dev zlib1g-dev libwebp-dev\n> git clone https://github.com/mitmproxy/mitmproxy.git\n> cd mitmproxy\n> git checkout tags/v1.0.2\n(edit two files)\n> git diff\ndiff --git a/release/specs/mitmdump b/release/specs/mitmdump\nindex 0aeac3c8..fd103525 100644\n--- a/release/specs/mitmdump\n+++ b/release/specs/mitmdump\n@@ -1,3 +1,4 @@\n#!/usr/bin/env python\nfrom mitmproxy.tools.main import mitmdump\n+import pytz\nmitmdump()\ndiff --git a/setup.py b/setup.py\nindex fa20e7cf..caf703f9 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -52,7 +52,7 @@ setup(\nentry_points={\n'console_scripts': [\n\"mitmproxy = mitmproxy.tools.main:mitmproxy\",\n- \"mitmdump = mitmproxy.tools.main:mitmdump\",\n+ \"mitmdump = mitmproxy.tools.main:mitmdump [examples]\",\n\"mitmweb = mitmproxy.tools.main:mitmweb\",\n\"pathod = pathod.pathod_cmdline:go_pathod\",\n\"pathoc = pathod.pathoc_cmdline:go_pathoc\"\n> ./dev.sh\n> . venv3.5/bin/activate\n> tox -e rtool -- bdist\n> deactivate\n> ls -lh release/build/binaries/linux/\nI don't think this is the correct fix. Ideally I would like to be able to tell pyinstaller about all of the \"examples\" dependencies for mitmdump specified in the root setup.py.\nDo you have any suggestions about how this could be achieved? That would be one small step towards making HAR dumping better supported by the next release of mitmproxy (see: #1477 ).\nSystem information\nI'm on Ubuntu 16.04 using mitmdump 1.0.2:\n> mitmdump --version\nmitmdump 1.0.2", "issue_status": "Closed", "issue_reporting_time": "2017-02-15T10:08:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "765": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2025", "issue_id": "#2025", "issue_summary": "vcruntime140.dll missing when running on windows", "issue_description": "JosePedroDiasSky commented on 14 Feb 2017\nSteps to reproduce the problem:\ntry to run mitmdump.exe or mimtproxy.exe on windows (tried on Windows 7 64 bits)\nan error dialog appears complaining about the lack of the vcruntime140.dll file.\nAny other comments? What have you tried so far?\nI managed to make it work by installing the Visual C++ Redistributable for Visual Studio 2015, x86 version, from here:\nhttps://www.microsoft.com/en-us/download/confirmation.aspx?id=48145\nSystem information\nmitmproxy release 1.0.2\n2", "issue_status": "Closed", "issue_reporting_time": "2017-02-14T13:56:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "766": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2021", "issue_id": "#2021", "issue_summary": "refactor protobuf contentview", "issue_description": "Member\nKriechi commented on 14 Feb 2017\nCurrently the protobuf contentview relies on the protoc compiler to be available as shell command (in $PATH).\nhttps://github.com/mitmproxy/mitmproxy/blob/75a0a4c09276ef2aa479c9ae9feab97f7803ed6d/mitmproxy/contentviews/protobuf.py\nHowever, it would be much cleaner to directly use the Python API provided by https://github.com/google/protobuf\nhttps://developers.google.com/protocol-buffers/docs/pythontutorial\nWe already have that package as dependency, so why not use it?", "issue_status": "Closed", "issue_reporting_time": "2017-02-14T09:47:06Z", "fixed_by": "#2427", "pull_request_summary": "Kaitai parser for protobuf", "pull_request_description": "Member\nujjwal96 commented on 5 Jul 2017 \u2022\nedited by Kriechi\nRefactor protobuf contentview. Use Kaitai parser to decode protobuf.\ncloses #2021\n1", "pull_request_status": "Merged", "issue_fixed_time": "2017-07-10T20:58:39Z", "files_changed": [["82", "mitmproxy/contentviews/protobuf.py"], ["124", "mitmproxy/contrib/kaitaistruct/google_protobuf.py"], ["2", "mitmproxy/contrib/kaitaistruct/make.sh"], ["94", "mitmproxy/contrib/kaitaistruct/vlq_base128_le.py"], ["65", "test/mitmproxy/contentviews/test_protobuf.py"], ["0", "test/mitmproxy/data/protobuf01", "\u2192", "...ontentviews/test_protobuf_data/protobuf01"], ["BIN", "+213", "Bytes", "test/mitmproxy/contentviews/test_protobuf_data/protobuf02"], ["65", "test/mitmproxy/contentviews/test_protobuf_data/protobuf02-decoded"], ["1", "test/mitmproxy/contentviews/test_protobuf_data/protobuf03"], ["4", "test/mitmproxy/contentviews/test_protobuf_data/protobuf03-decoded"]]}, "767": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2020", "issue_id": "#2020", "issue_summary": "mitmproxy crashed when switch tab to Detail Tab with UnicodeDecodeError 0x94", "issue_description": "itrmit commented on 14 Feb 2017 \u2022\nedited by mhils\nSteps to reproduce the problem:\nmitmproxy crash when switch tab to Detail Tab\nwhen I proxying 12306 iOS app for any Request.\n<!--\n    mitmproxy 1.0.2 (Python 3.6.0)\n   MAC: 10.11.6\n-->\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/1.0.2_1/libexec/lib/python3.6/site-packages/mitmproxy/tools/console/master.py\", line 292, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/1.0.2_1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/1.0.2_1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/1.0.2_1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/1.0.2_1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 710, in _loop\n    self._entering_idle()\n  File \"/usr/local/Cellar/mitmproxy/1.0.2_1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 671, in _entering_idle\n    callback()\n  File \"/usr/local/Cellar/mitmproxy/1.0.2_1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 564, in entering_idle\n    self.draw_screen()\n  File \"/usr/local/Cellar/mitmproxy/1.0.2_1/libexec/lib/python3.6/site-packages/urwid/main_loop.py\", line 579, in draw_screen\n    self.screen.draw_screen(self.screen_size, canvas)\n  File \"/usr/local/Cellar/mitmproxy/1.0.2_1/libexec/lib/python3.6/site-packages/urwid/raw_display.py\", line 838, in draw_screen\n    l = l.decode('utf-8')\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x94 in position 0: invalid start byte\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2017-02-14T03:53:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "768": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2019", "issue_id": "#2019", "issue_summary": "HTTPS not working with authentication", "issue_description": "laurmurclar commented on 14 Feb 2017\nSteps to reproduce the problem:\nmitmproxy --nonanonymous\nSet a proxy username and password in System Preferences -> Network -> Wifi -> Advanced -> Proxies for both HTTP and HTTPS.\nSave changes. A dialog appears:\n\nChoose Always Apply\nOpen browser and navigate to a HTTPS page eg. https://www.google.ie/. This appears:\nFill in username and password to match those entered earlier.\nGet the following error (ERR_SPDY_PROTOCOL_ERROR):\nAny other comments? What have you tried so far?\nAfter googling the error, I tried flushing the socket pools at chrome://net-internals/#sockets. I immediately got the same error after trying to access a HTTPS site again.\nPreviously I had been getting two dialog boxes; one requesting credentials for localhost:8080 and then another requesting credentials for google.ie:443 (or whatever site) directly after the localhost one.\nNot sure if it matters, but the proxy credentials in my keychain:\nSystem information\nMitmproxy version: 2.0.0 (1.0.1dev0129-0x919385d)\nPython version: 3.6.0\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2k 26 Jan 2017\nMac version: 10.11.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-02-13T20:21:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "769": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2014", "issue_id": "#2014", "issue_summary": "Remove pypy support", "issue_description": "Member\nKriechi commented on 12 Feb 2017\nOfficially mitmproxy still claims to support pypy. However, I can't remember seeing any test runs - let alone successful ones. mitmproxy requires Python 3.5+, but pypy currently only offers a Python3.3 compatible release.\nWe should therefore remove pypy-related things from setup.py and .travis.yml.", "issue_status": "Closed", "issue_reporting_time": "2017-02-12T11:20:49Z", "fixed_by": "#2015", "pull_request_summary": "nuke pypy", "pull_request_description": "Member\nKriechi commented on 12 Feb 2017 \u2022\nedited\nfixes #2014\nI didn't find any other references in this repo or the mitmproxy.org repo.", "pull_request_status": "Merged", "issue_fixed_time": "2017-02-13T10:16:03Z", "files_changed": [["3", ".travis.yml"], ["1", "setup.py"]]}, "770": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2013", "issue_id": "#2013", "issue_summary": "getrandom() initialization failed if run on boot", "issue_description": "laurentdinclaux commented on 12 Feb 2017 \u2022\nedited\nSteps to reproduce the problem:\nI created a systemd startup file:\n[Unit]\nDescription=Mitmproxy\nAfter=network.target\n\n[Service]\n#Type=simple\nType=idle\nEnvironmentFile=/etc/default/mitmproxy\nUser=mitmproxy\nGroup=mitmproxy\nLimitNOFILE=32768\nExecStart=/usr/local/bin/mitmdump $DAEMON_ARGS --conf=$CONFFILE --cadir=/etc/mitmproxy\n\n[Install]\nWantedBy=multi-user.target\nWhenever I reboot my ubuntu 16.04 VM, mitmdump runs, but throw error for SSL websites:\nCannot establish TLS with 216.58.204.104:443 (sni: ssl.google-analytics.com): TlsException(\"SSL handshake error: Error([('', 'osrandom_rand_bytes', 'getrandom() initialization failed.')],)\",)\nIf I log into ssh and restart the service manually it then runs fine.\nSystem information\nUbuntu 16.04 - mitmproxy 1.0.2", "issue_status": "Closed", "issue_reporting_time": "2017-02-12T05:01:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "771": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/2012", "issue_id": "#2012", "issue_summary": "DNS spoofing example doesn't work anymore", "issue_description": "greenboxal commented on 12 Feb 2017 \u2022\nedited\nSteps to reproduce the problem:\nUse the dns spoof example script\nSend a request with the correct Host header\nAny other comments? What have you tried so far?\nI needed to do two changes in order to get it working:\nComment around line 152 on master.py:\n                f.request.host = self.server.config.upstream_server.address.host\nAnd comment around line 281 proxy/protocol/http.py:\n             if self.config.options.mode == \"reverse\":\n             f.request.headers[\"Host\"] = self.config.upstream_server.address.host\nAlthough it works, those changes are absolutely invalid and will break a lot of other stuff.\nSeems like that example relied on the host header which is permanently changed before the script is executed when using reverse proxy mode.\nSystem information\nmitmproxy 1.0.2", "issue_status": "Closed", "issue_reporting_time": "2017-02-11T18:58:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "772": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1994", "issue_id": "#1994", "issue_summary": "Cannot bind mitmproxy to IPv6 address", "issue_description": "Member\nujjwal96 commented on 5 Feb 2017\nSteps to reproduce the problem:\nmitmproxy -b ::1\nError starting proxy server: gaierror(-9, 'Address family for hostname not supported')\nAny other comments? What have you tried so far?\nThe relevant code is probably hardcoded to IPv4\nmitmproxy/mitmproxy/net/tcp.py\nLine 921 in 2316c0f\n self.socket = socket.socket(self.address.family, socket.SOCK_STREAM) \nOriginal Discussion:\nhttps://discourse.mitmproxy.org/t/serving-on-ipv6/331", "issue_status": "Closed", "issue_reporting_time": "2017-02-05T13:00:48Z", "fixed_by": "#2050", "pull_request_summary": "nuke tcp.Address and add proper IPv6 support", "pull_request_description": "Member\nKriechi commented on 21 Feb 2017 \u2022\nedited\nThis PR helps us to get IPv6-ready.\nfixes #1994\ncloses #1995", "pull_request_status": "Merged", "issue_fixed_time": "2017-02-24T14:42:53Z", "files_changed": [["20", "mitmproxy/connections.py"], ["10", "mitmproxy/flowfilter.py"], ["4", "mitmproxy/http.py"], ["5", "mitmproxy/io_compat.py"], ["4", "mitmproxy/master.py"], ["18", "mitmproxy/net/socks.py"]]}, "773": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1992", "issue_id": "#1992", "issue_summary": "Protocol not available", "issue_description": "nekulin commented on 5 Feb 2017\nSteps to reproduce the problem:\nmitmproxy -T --host -p 3000\nconnect proxy\nget https://google.com\nProtocolException(\"Transparent mode failure: OSError(92, 'Protocol not available')\",)", "issue_status": "Closed", "issue_reporting_time": "2017-02-05T07:03:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "774": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1990", "issue_id": "#1990", "issue_summary": "Can mitmproxy handle SSLv2 ClientHello?", "issue_description": "whatisaphone commented on 5 Feb 2017\nI'm trying to intercept connections for an app that sends an SSLv2 ClientHello, then upgrades to TLSv1 for the handshake. It looks to me like mitmproxy can't handle that combination, or maybe I'm doing something wrong.\nMy command-line looks like this:\nmitmdump -T --tcp '.*' --insecure -v --ciphers-client RC4-MD5\nI need --insecure because this app doesn't support SNI, and the cipher is just a second easy way to tell whether mitmproxy is doing its job.\nThe connection with TLSv1 hello/TLSv1 handshake\nThis is the one that works as expected. It serves the client a certificate with an organization name of mitmproxy, and my one expected cipher. The log looks like this:\n192.168.56.101:3275: clientconnect\n192.168.56.101:3275: serverconnect\n  -> 1.2.3.4:443\n192.168.56.101:3275: Establish TLS with server\n192.168.56.101:3275: Certificate Verification Error for 1.2.3.4:443: hostname 'no-hostname' doesn't match either of '*.example.com', 'example.com'\n192.168.56.101:3275: Ignoring server verification error, continuing with connection\n192.168.56.101:3275: ALPN selected by server: -\n192.168.56.101:3275: Establish TLS with client\n192.168.56.101:3275 -> tcp -> 1.2.3.4:443\n192.168.56.101:3275 <- tcp <- 1.2.3.4:443\nThe connection with SSLv2 hello/TLSv1 handshake\nThis case fails. It serves the client the server's original cert with an organization name of GeoTrust, Inc., and ciphers other than the one I specified. The log looks like this:\n192.168.56.101:3277: clientconnect\n192.168.56.101:3277: serverconnect\n  -> 1.2.3.5:443\n192.168.56.101:3277 -> tcp -> 1.2.3.5:443\n192.168.56.101:3277 <- tcp <- 1.2.3.5:443\nSo mitmproxy can see the connection, but it decides not to do anything with it. I tried --ssl-version-client TLSv1 on a whim but it had no effect.\nDid I screw something up here?", "issue_status": "Closed", "issue_reporting_time": "2017-02-04T23:34:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "775": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1987", "issue_id": "#1987", "issue_summary": "mitmproxy 1.0.2 does not check for expired certs in ~/.mitmproxy", "issue_description": "rtoma commented on 4 Feb 2017\nSteps to reproduce the problem:\nhave expired certs in ~/.mitmproxy\nstart mitmdump/proxy\ntry to proxy https and it fails\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2017-02-03T21:34:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "776": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1986", "issue_id": "#1986", "issue_summary": "Cannot establish TLS with client - sslv3 alert certificate unknown", "issue_description": "rtoma commented on 4 Feb 2017 \u2022\nedited\nSteps to reproduce the problem:\nOutput of mitmdump -v --port 8080:\n192.168.27.109:53953: clientconnect\n192.168.27.109:53953: Set new server address: ('graph.facebook.com', 443)\n192.168.27.109:53953: serverconnect\n  -> graph.facebook.com:443\n192.168.27.109:53953: Establish TLS with server\n192.168.27.109:53953: ALPN selected by server: http/1.1\n192.168.27.109:53953: Establish TLS with client\n192.168.27.109:53953: ALPN for client: b'http/1.1'\n192.168.27.109:53953: CONNECT graph.facebook.com:443\n << Cannot establish TLS with client (sni: graph.facebook.com): TlsException(\"SSL handshake error: Error([('SSL routines', 'ssl3_read_bytes', 'sslv3 alert certificate unknown')],)\",)\n192.168.27.109:53953: serverdisconnect\n  -> graph.facebook.com:443\n192.168.27.109:53953: clientdisconnect\nAny other comments? What have you tried so far?\nI've verified my brew-installed python3 uses the brew-installed openssl lib:\n$ python3\nPython 3.6.0 (default, Dec 24 2016, 08:01:42)\n[GCC 4.2.1 Compatible Apple LLVM 8.0.0 (clang-800.0.42.1)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> import ssl\n>>> ssl.OPENSSL_VERSION\n'OpenSSL 1.0.2k  26 Jan 2017'\nI tried removing and installing the mitm.it cert on my iphone - no luck.\nUsing a brew-installed curl with openssl from my Macbook (so not my iphone) I am able to query a TLS resource. Below is a curl to google.com, but it also works for graph.facebook.com (the resource mentioned in the reproduction block above).\ncurl -kv --proxy localhost:8080 https://google.com\n* Rebuilt URL to: https://google.com/\n*   Trying ::1...\n* TCP_NODELAY set\n* Connection failed\n* connect to ::1 port 8080 failed: Connection refused\n*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to (nil) (127.0.0.1) port 8080 (#0)\n* Establish HTTP proxy tunnel to google.com:443\n> CONNECT google.com:443 HTTP/1.1\n> Host: google.nl:443\n> User-Agent: curl/7.52.1\n> Proxy-Connection: Keep-Alive\n>\n< HTTP/1.1 200 Connection established\n<\n* Proxy replied OK to CONNECT request\n* ALPN, offering http/1.1\n* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH\n* successfully set certificate verify locations:\n*   CAfile: /usr/local/etc/openssl/cert.pem\n  CApath: /usr/local/etc/openssl/certs\n* TLSv1.2 (OUT), TLS header, Certificate Status (22):\n* TLSv1.2 (OUT), TLS handshake, Client hello (1):\n* TLSv1.2 (IN), TLS handshake, Server hello (2):\n* TLSv1.2 (IN), TLS handshake, Certificate (11):\n* TLSv1.2 (IN), TLS handshake, Server key exchange (12):\n* TLSv1.2 (IN), TLS handshake, Server finished (14):\n* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):\n* TLSv1.2 (OUT), TLS change cipher, Client hello (1):\n* TLSv1.2 (OUT), TLS handshake, Finished (20):\n* TLSv1.2 (IN), TLS change cipher, Client hello (1):\n* TLSv1.2 (IN), TLS handshake, Finished (20):\n* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256\n* ALPN, server accepted to use http/1.1\n* Server certificate:\n*  subject: CN=*.google.com\n*  start date: Feb  1 21:09:31 2017 GMT\n*  expire date: Feb  3 21:09:31 2020 GMT\n*  issuer: CN=mitmproxy; O=mitmproxy\n*  SSL certificate verify result: self signed certificate in certificate chain (19), continuing anyway.\n> GET / HTTP/1.1\n> Host: google.nl\n> User-Agent: curl/7.52.1\n> Accept: */*\n>\n< HTTP/1.1 301 Moved Permanently\n< Location: https://www.google.com/\n< Content-Type: text/html; charset=UTF-8\n< Date: Fri, 03 Feb 2017 21:10:24 GMT\n< Expires: Sun, 05 Mar 2017 21:10:24 GMT\n< Cache-Control: public, max-age=2592000\n< Server: gws\n< Content-Length: 219\n< X-XSS-Protection: 1; mode=block\n< X-Frame-Options: SAMEORIGIN\n< Alt-Svc: quic=\":443\"; ma=2592000; v=\"35,34\"\n<\n<HTML><HEAD><meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8\">\n<TITLE>301 Moved</TITLE></HEAD><BODY>\n<H1>301 Moved</H1>\nThe document has moved\n<A HREF=\"https://www.google.com/\">here</A>.\n</BODY></HTML>\n* Curl_http_done: called premature == 0\n* Connection #0 to host (nil) left intact\nSystem information\nmitmproxy 1.0.2 on macOs Sierra 10.12.2 /w xcode-select version 2347\ntest device is a iphone 6s", "issue_status": "Closed", "issue_reporting_time": "2017-02-03T21:16:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "777": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1978", "issue_id": "#1978", "issue_summary": "Crash of har_dump.py", "issue_description": "Junkern commented on 1 Feb 2017 \u2022\nedited\nI sometimes get either b'' is not JSON serializable or Object of type 'bytes' is not JSON serializable\nI used mitmproxy to extract such a flow and uploaded it here\nSteps to reproduce the problem:\nAny other comments? What have you tried so far?\nIt seems, that the error mostly occurs for POST and HEAD requests. Sometimes with an empty response body, sometimes not. Seldomly a GET requests triggers this error\nSystem information\nmitmproxy 1.0.2\nmacOs Sierra 10.12.3\nEdit: Updated the Gist link to point to a working binary gist", "issue_status": "Closed", "issue_reporting_time": "2017-02-01T16:14:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "778": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1977", "issue_id": "#1977", "issue_summary": "Change view._store from dictionary to OrderedDict", "issue_description": "Contributor\nlymanZerga11 commented on 1 Feb 2017 \u2022\nedited\nSteps to reproduce the problem:\nMark multiple flows in the flow list using m key\nToggle to show-marked-only view using M\nmitmproxy rearranges flow list when M is toggled\nAny other comments? What have you tried so far?\nThis is an issue with the flow list mentioned earlier in #1960. The marked flows can get randomly rearranged whenever M or Z is pressed, as it iterates through view._store which is a dictionary, to refresh the view.\nSystem information\nMitmproxy version: 2.0.0 (v1.0.1-45-g0022c81)\nPython version: 3.5.3\nPlatform: Linux-4.8.2-c9-x86_64-with-debian-jessie-sid\nSSL version: OpenSSL 1.0.1f 6 Jan 2014\nLinux distro: debian jessie/sid", "issue_status": "Closed", "issue_reporting_time": "2017-02-01T15:46:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "779": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1972", "issue_id": "#1972", "issue_summary": "Use pytest.raises instead of our own tutils.raises", "issue_description": "Member\nKriechi commented on 31 Jan 2017\nUse pytest.raises instead of our own tutils.raises implementation which should be feature-compatible. At the moment we use both - with no real distinction or reasoning behind it.", "issue_status": "Closed", "issue_reporting_time": "2017-01-31T10:33:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "780": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1971", "issue_id": "#1971", "issue_summary": "Use 127.0.0.1 instead of localhost in tests", "issue_description": "Member\nKriechi commented on 31 Jan 2017\nUse 127.0.0.1 in all tests instead of localhost (which might not be available on all systems).\nref #1966", "issue_status": "Closed", "issue_reporting_time": "2017-01-31T10:30:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "781": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1969", "issue_id": "#1969", "issue_summary": "mitmproxy not working inside virtualenv, works fine as a regular installation", "issue_description": "Contributor\nmosajjal commented on 31 Jan 2017\nI've tried to install mitmproxy from the GitHub repo, mitmdump and mitmweb worked perfectly, but not mitmproxy. mitmproxy runs but doesn't show any traffic captured whatsoever.\nAfter running wireshark and analyzing the traffic, I saw the GET request with destination port of 8080 heading towards mitmproxy, but no response is captured by wireshark (captured on any interface and loopback with no luck).\nI've installed it using the tutorial provided so I'm confident I've installed it correctly.\nfor a test, I've installed the package provided in arch community repository. It works absolutely fine out of the box. So how can I debug what's wrong inside the virtualenv?\nSystem information\nInside venv:\nMitmproxy version: 2.0.0 (1.0.1dev0067-0x695cc236)\nPython version: 3.6.0\nPlatform: Linux-4.4.42-1-lts-x86_64-with-arch\nSSL version: OpenSSL 1.0.2k 26 Jan 2017\nLinux distro: arch\nOutside venv:\nmitmproxy 1.0.2", "issue_status": "Closed", "issue_reporting_time": "2017-01-31T07:48:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "782": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1966", "issue_id": "#1966", "issue_summary": "py.test fails with python 3.6", "issue_description": "Contributor\nmosajjal commented on 30 Jan 2017\nSteps to reproduce the problem:\nclone the repo\nrun dev.sh\nrun . venv3/bin/activate.fish\nrun py.test\nI had to edit dev.sh and rename 3.5 to 3 for it to run. Is mitmproxy incompatible with python3.6?\nrunning as root makes it freeze (waited for a couple hours)\nfull log:\nhttp://pastebin.com/M0BrcYK3\nMitmproxy version: 2.0.0 (1.0.1dev0067-0x695cc236)\nPython version: 3.6.0\nPlatform: Linux-4.4.42-1-lts-x86_64-with-arch\nSSL version: OpenSSL 1.0.2k 26 Jan 2017\nLinux distro: arch", "issue_status": "Closed", "issue_reporting_time": "2017-01-30T15:38:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "783": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1962", "issue_id": "#1962", "issue_summary": "Https traffic not being captured by mitmproxy", "issue_description": "kanikagupta17 commented on 28 Jan 2017 \u2022\nedited\nSteps to reproduce the problem:\nI am trying to intercept packets of my android phone on an ubuntu 16 machine. All the http:// traffic is intercepted but https:// traffic is Not. It is not even in the event logs. I think it is not recognizing the https traffic. Any ides how to resolve this issue ?\nAny other comments? What have you tried so far?\nDone updating pypy-pyasn1 but the issue persists.\nSystem information\nmitmproxy 1.0.2", "issue_status": "Closed", "issue_reporting_time": "2017-01-28T12:44:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "784": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1961", "issue_id": "#1961", "issue_summary": "Crash Report: OverflowError", "issue_description": "Contributor\nohhorob commented on 28 Jan 2017\n17.199.7.21:51633: Traceback (most recent call last):\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 176, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 245, in _process_flow\n    return self.handle_regular_connect(f)\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 194, in handle_regular_connect\n    layer()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 176, in __call__\n    if not self._process_flow(flow):\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 373, in _process_flow\n    self.send_response(f.response)\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http.py\", line 43, in send_response\n    self.send_response_body(response, [response.data.content])\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/proxy/protocol/http1.py\", line 48, in send_response_body\n    self.client_conn.wfile.write(chunk)\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/net/tcp.py\", line 188, in write\n    return self.o.sendall(v)\n  File \"/usr/local/lib/python3.6/site-packages/OpenSSL/SSL.py\", line 1285, in sendall\n    result = _lib.SSL_write(self._ssl, data + total_sent, left_to_send)\nOverflowError: integer 3114393428 does not fit '32-bit int'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nSteps to reproduce the problem:\nstart proxying iOS device streaming music\nleave session running a while\nobserve crash report\nSystem information\nMac OS X\n$ mitmproxy --version\nmitmproxy 1.0.2", "issue_status": "Closed", "issue_reporting_time": "2017-01-28T01:44:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "785": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1960", "issue_id": "#1960", "issue_summary": "Feature request: Preserve marked flows when clearing flow list", "issue_description": "danielphillips commented on 27 Jan 2017\nWhen I'm busy in mitmproxy, I often mark an important flow using m to preserve it for easy access; my flow list grows pretty quickly even when I'm using a filter, so I often clear the list using z to tidy up.\nUp until very recently clearing the list preserved my marked flows, this was very convenient because I could \"clean up\" my window and keep what's important (my marked flows) around and continue working.\nI've installed the latest version (mitmproxy 1.0.2) and I've just noticed that clearing the flow list also removes the marked flows.\nCould I request this be added as a feature if what I've described was occurring by coincidence, or to be fixed if this is a regression. It is a super handy feature for myself, and hopefully others too.\nThanks", "issue_status": "Closed", "issue_reporting_time": "2017-01-27T14:36:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "786": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1958", "issue_id": "#1958", "issue_summary": "UnicodeEncodeError: 'ascii' codec can't encode character u'\\x89' in position 64: ordinal not in range(128)", "issue_description": "michaelschem commented on 25 Jan 2017 \u2022\nedited\nSteps to reproduce the problem:\nstart mitmdump\nmitmdump -w dump -p 8080 --anticomp\nstart android emulator and point it to the same port\nemulator -avd emulator1 -http-proxy localhost:8080\nload a couple of https (I used facebook.com) web pages\nEventually this will happen.\nTraceback (most recent call last):\n  File \"/home/mac/.local/bin/mitmdump\", line 11, in <module>\n    sys.exit(mitmdump())\n  File \"/home/mac/.local/lib/python2.7/site-packages/mitmproxy/main.py\", line 108, in mitmdump\n    master.run()\n  File \"/home/mac/.local/lib/python2.7/site-packages/mitmproxy/dump.py\", line 89, in run\n    super(DumpMaster, self).run()\n  File \"/home/mac/.local/lib/python2.7/site-packages/mitmproxy/controller.py\", line 142, in run\n    self.tick(0.1)\n  File \"/home/mac/.local/lib/python2.7/site-packages/mitmproxy/controller.py\", line 163, in tick\n    handle_func(obj)\n  File \"/home/mac/.local/lib/python2.7/site-packages/mitmproxy/controller.py\", line 253, in wrapper\n    master.addons(f.__name__, message)\n  File \"/home/mac/.local/lib/python2.7/site-packages/mitmproxy/addons.py\", line 85, in __call__\n    self.invoke(i, name, *args, **kwargs)\n  File \"/home/mac/.local/lib/python2.7/site-packages/mitmproxy/addons.py\", line 81, in invoke\n    func(*args, **kwargs)\n  File \"/home/mac/.local/lib/python2.7/site-packages/mitmproxy/builtins/dumper.py\", line 233, in error\n    self.echo_flow(f)\n  File \"/home/mac/.local/lib/python2.7/site-packages/mitmproxy/builtins/dumper.py\", line 216, in echo_flow\n    self.echo(\" << {}\".format(msg), bold=True, fg=\"red\")\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\x89' in position 64: ordinal not in range(128)\nAny other comments? What have you tried so far?\nAfter googling the issue, there was a stack overflow that mentioned that this might be an issue with using str() vs encode().\nhttp://stackoverflow.com/questions/9942594/unicodeencodeerror-ascii-codec-cant-encode-character-u-xa0-in-position-20\nSystem information\nLinux DarkNetLab 4.4.0-31-generic #50-Ubuntu SMP Wed Jul 13 00:07:12 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\nmitmproxy 0.18.2", "issue_status": "Closed", "issue_reporting_time": "2017-01-24T20:28:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "787": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1946", "issue_id": "#1946", "issue_summary": "Use existing urlencoding conventions when re-encoding edited form", "issue_description": "Contributor\nmame82 commented on 20 Jan 2017\nmitmproxy 1.0.2 crashes trying to edit form data of facebook ajax POST request to facebook.com/ajax/updatestatus.php\nSteps to reproduce the problem:\nrun mitmproxy with\nmitmproxy -p <listenport> -T --cadir <dir with cert> --host -f \"updatestatus | sl/password\" -i updatestatus\nPost a message on facebook (acces https://www.facebook.com/ajax/updatestatus.php)\nTry to edit the intercepted flow body (key e) using form data view (key f)\nresults in crash\nCrash trace:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/master.py\", line 292, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/statusbar.py\", line 155, in keypress\n    return self.master.ab.keypress(*args, **kwargs)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/statusbar.py\", line 108, in keypress\n    self.prompt_execute(k)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/statusbar.py\", line 133, in prompt_execute\n    msg = p(txt)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/statusbar.py\", line 31, in __call__\n    return self.callback(txt, *self.args)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/flowview.py\", line 415, in edit\n    self.edit_form(message)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/flowview.py\", line 351, in edit_form\n    conn\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/master.py\", line 352, in view_grideditor\n    ge.make_help()\n  File \"/usr/local/lib/python3.5/dist-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/usr/local/lib/python3.5/dist-packages/blinker/base.py\", line 267, in <listcomp>\n    for receiver in self.receivers_for(sender)]\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/master.py\", line 144, in sig_push_view_state\n    self.loop.draw_screen()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 578, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 1750, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/listbox.py\", line 455, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/listbox.py\", line 337, in calculate_visible\n    self._set_focus_complete( (maxcol, maxrow), focus )\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/listbox.py\", line 702, in _set_focus_complete\n    (maxcol,maxrow), focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/listbox.py\", line 672, in _set_focus_first_selectable\n    (maxcol, maxrow), focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/listbox.py\", line 340, in calculate_visible\n    focus_widget, focus_pos = self.body.get_focus()\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/grideditor/base.py\", line 223, in get_focus\n    self.lst[self.focus]\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/grideditor/base.py\", line 77, in __init__\n    w = self.editor.columns[i].Display(v)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/grideditor/col_bytes.py\", line 33, in Display\n    return Display(data)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/tools/console/grideditor/col_bytes.py\", line 73, in __init__\n    escaped = strutils.bytes_to_escaped_str(data)\n  File \"/usr/local/lib/python3.5/dist-packages/mitmproxy/utils/strutils.py\", line 72, in bytes_to_escaped_str\n    raise ValueError(\"data must be bytes, but is {}\".format(data.__class__.__name__))\nValueError: data must be bytes, but is str\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nSystem information\nKali Linux (rollin)\ncurrent mitmproxy installed with pip3 (not from distribution package)", "issue_status": "Closed", "issue_reporting_time": "2017-01-20T14:22:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "788": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1943", "issue_id": "#1943", "issue_summary": "Question regarding certificates.", "issue_description": "farmdve commented on 19 Jan 2017\nI've been reading up on http://docs.mitmproxy.org/en/stable/certinstall.html and there are 4 certificate files.\nmitmproxy-ca.pem, mitmproxy-ca-cert.pem, mitmproxy-ca-cert.p12, mitmproxy-ca-cert.cer\nSince I am not very familiar with crypto, I wanted to ask, for Windows in particular, if the private key is required in order to install the certificate and for mitmproxy to function correctly?\nmitmproxy-ca-cert.p12 is a file that contains both public and private keys, but is the private key really required on Windows to install as a Trusted Root CA, or can I also use mitmproxy-ca-cert.cer which I presume is just the public key?", "issue_status": "Closed", "issue_reporting_time": "2017-01-19T14:42:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "789": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1942", "issue_id": "#1942", "issue_summary": "Google Summer of Code 2017: Getting Started", "issue_description": "Member\nmhils commented on 19 Jan 2017 \u2022\nedited\nMitmproxy is participating under the umbrella of the Honeynet project in the Google Summer of Code 2017. We have two exciting project proposals and are open for other ideas as well.\nThis issue is targeted at potential GSoC students to help them getting started and write a strong proposal. If there are any questions, please don't hesistate to get in touch.\nPicking the right students for a Google Summer of Code is hard - we really want to encourage all students to get involved with open source, but how do we determine who's best suited for a particular project? Here comes your part: Show us that you're super enthusiastic, autonomous and good at coding!\nMost importantly, your proposal should demonstrate two things: You have the required technical skills and you think that mitmproxy is a super interesting project to work on.\nDemonstrate that you are capable of fulfilling the project!\nWhile many of you probably have a good theoretical background from your university, you should show us that you can code as well:\nDo you have a cool/interesting side project or university project? Show it to us! Even better if it's open source and we can read the code!\nHave you contributed to an open source project before? Show us what you did!\nNo previous projects you could show? Add a feature and/or fix a small bug in mitmproxy!\nAs long as you have some code to show, please don't stress yourself about this part. We require a certain minimum level of technical proficiency so that GSoC is fun for everyone, but beyond that social components are way more important to us.\nDemonstrate that you really want to contribute to mitmproxy!\nThe brick walls are there for a reason. The brick walls are not there to keep us out; the brick walls are there to give us a chance to show how badly we want something. The brick walls are there to stop the people who don't want it badly enough. They are there to stop the other people! [1]\nGoogle accepts a variety of mentoring organizations every year, each of them with multiple projects. Now, why do you want to work on mitmproxy specifically? We do not just want to hear a chorus of praise here (\"mitmproxy is a great tool\"). Instead, play around with it and tell us about your experiences:\nUse mitmproxy to analyze a popular Android or iOS app or anything else. There are many hidden treasures/security issues to be found [2]! Show us what you analyzed (screenshots), what you found, where mitmproxy was good/not good etc! :-)\nWrite a nice script that does something cool with a webpage! For example, we have an example script that turns all PNGs upside down (src). Try to come up with something creative :-)\nAgain, a good way to show that you're a good candidate is to fix a bug, propose or implement a feature, add something that was unclear to you to the docs, etc.\nGet in touch!\nWe hang out on Slack (https://gsoc-slack.honeynet.org/ or the mitmproxy Slack) and our forums (https://discourse.mitmproxy.org/). Feel free to just get in touch!\nMake sure to have a plan!\nFor your GSoC proposal (please use the template!), you need to write down a roadmap/timeline for your project. Think about which features you need to develop to accomplish your goal, split your project into subtasks and make sure that you'll end up with a viable timeline. Having at least one dedicated task per week would be a good way to track the progress of your project as well. If you already identified potential issues/caveats for your endeavour, make sure to discuss them in the proposal as well!\nLast but not least: GSoC is fun. Enjoy it!\nFAQ\n1. There's a skilled and very motivated student already working hard on a proposal for the project I want to apply for. Should I even bother to apply?\nYes! First, if we get two convincing proposals for one project idea, we will try to just take both students\u00b9. Second, if we cannot take you for some reason, we will actively introduce you to other projects at Honeynet that match your skills and interests after the application deadline\u00b2. I can't stress this enough: Please do not worry about competition! If we see you cooperating with other contributors (students or not), this is a big plus.\n\u00b9) This requires that the project can be split (and extended) in a way that there are no critical interdependencies between the students. You will not get a project which depends on another student's work. This year, we can split both of our proposed projects.\n\u00b2) This is not just nice talk, we successfully did this last year.\n2. I want to implement $MAJOR_FEATURE_X to show that I'm a super capable student!\nThis is great, but please please do not send us a single giant pull request! Please try to show us that you can split major tasks into small, (mostly) isolated parts. A PR is never to small for first time contributors.\n3. In the application template, there's a question about Windows, Unix or Mac OS X development experience relevant to your chosen project. What do you expect me to write there?\nThe application template is shared by all Honeynet projects. Some of our projects may require knowledge of low-level OS internals (e.g. Cuckoo Sandbox), but for mitmproxy it does not really matter. Just mention the OS you develop on and you're good.\n7", "issue_status": "Closed", "issue_reporting_time": "2017-01-19T13:26:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "790": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1939", "issue_id": "#1939", "issue_summary": "Some critical errors on standard output instead of standard error", "issue_description": "tomlabaude commented on 18 Jan 2017\nSteps to reproduce the problem:\nI'm parsing output of mitmdump in Objective-C and some major errors appears on standard output.\nExample:\n\"Insufficient privileges to access pfctl. \" (osx.py:34 - Treated with raise RuntimeError)\n-> This appears on standard output, although it's a critical error on a configuration point of view\nInstead, example of a correct error output:\n\"Error starting proxy server: OSError(48, 'Address already in use')\" (server.py:51 - Treated with raise exceptions.ServerException)\n-> This \"correctly\" appears on standard error\nAny other comments? What have you tried so far?\nThis is just an example, there may be other critical errors which should be treated on standard error\nSystem information\nMitmproxy version: 1.0.2\nPython version: 3.5.2\nPlatform: Darwin-16.3.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.12.2 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-01-18T12:24:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "791": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1938", "issue_id": "#1938", "issue_summary": "Support absolute-form HTTP requests with IPv6 addresses", "issue_description": "Contributor\nFeeiCN commented on 18 Jan 2017\nSteps to reproduce the problem:\nMITMDump proxy IPv6 flow\nLog\n172.17.15.1:53074: HTTP protocol error in client request: Bad HTTP request line: b'GET http://[::ffff:180.97.8.37]/mmsns/9KavCVwReibwDKBMmibrWUdVZZbHCQ0bV3R89mboKO6QDls7Sxcl4tfbHvLIHFbj3NASftTH2VAGw/150?tp=wxpc&length=2208&width=1242&idx=1&token=WSEN6qDsKwV8A02w3onOGQYfxnkibdqSOkmHhZGNB4DGicdGyTltMQXCTF7lr4IJR8Jz4lKQBBW47EV1CP33SGjg HTTP/1.1'\n172.17.15.1:53075: HTTP protocol error in client request: Bad HTTP request line: b'GET http://[::ffff:b461:819]/mmcrhead/Q3auHgzwzM606QEH0kXoF60vMh5Iiay7B3DiauET3kCpbBwEfgzhNqOSeJ6y4geORGPxEcKf36Totd4sHQcwvBEg/0 HTTP/1.1'\nAny other comments? What have you tried so far?\nNo\nSystem information\nMitmproxy version: 1.0.2\nPython version: 3.6.0\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j  26 Sep 2016\nMac version: 10.11.6 ('', '', '') x86_6", "issue_status": "Closed", "issue_reporting_time": "2017-01-18T11:31:19Z", "fixed_by": "#2048", "pull_request_summary": "Absolute IPv6 addresses supported", "pull_request_description": "Member\nujjwal96 commented on 20 Feb 2017\nFixes #1938\nThere's another problem though which causes ProtocolException. I'll fix that and force push in this PR only", "pull_request_status": "Merged", "issue_fixed_time": "2017-02-22T12:17:53Z", "files_changed": [["14", "mitmproxy/net/check.py"], ["1", "test/mitmproxy/net/test_check.py"]]}, "792": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1937", "issue_id": "#1937", "issue_summary": "Request for insight", "issue_description": "PaulGWebster commented on 18 Jan 2017\nGood day I am using the latest version of mitmproxy, is it possible to use this application to watch a protocol negotiation for SSH (Notable SSH2/interactive-keyboard)", "issue_status": "Closed", "issue_reporting_time": "2017-01-18T07:49:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "793": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1936", "issue_id": "#1936", "issue_summary": "support reverse proxy to a unix socket", "issue_description": "vikstrous commented on 18 Jan 2017\nFor debugging docker things I use the following method in 3 shells right now:\nsocat tcp-listen:3000,bind=127.0.0.1,reuseaddr,fork UNIX-CONNECT:/var/run/docker.sock\nmitmproxy -R http://localhost:3000 -p 3001\nexport DOCKER_HOST=127.0.0.1:3001\ndocker service ps 53pr4a3e2zkj\nIt would be really cool if mitm proxy supported acting as a reverse proxy to a unix socket. That would remove the need for the socat. I imagine it working like this:\nmitmproxy -R unix:///var/run/docker.sock -p 3001", "issue_status": "Closed", "issue_reporting_time": "2017-01-18T03:41:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "794": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1933", "issue_id": "#1933", "issue_summary": "mitmdump - 'HTTPRequest' object has no attribute 'body'", "issue_description": "Miller1990 commented on 16 Jan 2017 \u2022\nedited\nAfter updating the mitdump version from version 0.8.12 to version 1.0.2 return me the follow error. I'm using the API (request, response) of mitmdump.\nThank you\nIs possible go back to an olde version ?\n\"is_body\": flow.response.body.decode('utf-8', errors='ignore').encode('utf-8'),\nAttributeError: 'HTTPResponse' object has no attribute 'body'\nmitmdump --version : 1.0.2", "issue_status": "Closed", "issue_reporting_time": "2017-01-16T17:11:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "795": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1930", "issue_id": "#1930", "issue_summary": "delete me please", "issue_description": "derboblan commented on 15 Jan 2017 \u2022\nedited\nomg this wasn't supposed to go here....", "issue_status": "Closed", "issue_reporting_time": "2017-01-15T12:03:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "796": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1928", "issue_id": "#1928", "issue_summary": "@concurrent annotation doesn't work in the OOP script method", "issue_description": "ColinChartier commented on 13 Jan 2017\nI.E:\nclass SomeClass:\n    @concurrent [doesn't work, 2 args]\n    def request(self, flow):\n        pass", "issue_status": "Closed", "issue_reporting_time": "2017-01-13T17:01:47Z", "fixed_by": "#2051", "pull_request_summary": "Fix #1928, @concurrent decorator in class", "pull_request_description": "Contributor\nMatthewShao commented on 21 Feb 2017 \u2022\nedited\nFixes #1928, I wrote a simple script to test how should we fix this:\nimport time\n\nfrom mitmproxy.script import concurrent\n\n\nclass ConcurrentClass:\n\n    @concurrent  # Remove this and see what happens\n    def request(flow):\n        # You don't want to use mitmproxy.ctx from a different thread\n        print(\"handle request: %s%s\" % (flow.request.host, flow.request.path))\n        time.sleep(5)\n        print(\"start  request: %s%s\" % (flow.request.host, flow.request.path))\n\n\ndef start():\n    return ConcurrentClass()\nIf we load this script and request a web page, it will throw something like \"take one positional argument but two were given\", it seems that the method in the class accept a hidden parameter self. The first things came out of my head is adding a decorator @staticmethod for the methods, but that's not neat enough and also increase the burden of script developers.\nThen I call the staticmethod() before returning the _concurrent, however, we should determine if the function is in a class or not. I tried to use the metadata __self__ or __class__, but unfortunately, the decorator does not preserve such metadata for us, so I look up all the thing we could use in dir(fn).\nI found the __qualname__ could be used, for example, for the script above, request.__qualname__ would be ConcurrentClass.request, but for a function out of class, the value would be simply request. A dot . is enough to judge these two situations.\nI know this is kind of strange, but it works fine. If you have any other idea, please do let me know.", "pull_request_status": "Merged", "issue_fixed_time": "2017-02-21T14:38:35Z", "files_changed": [["6", "mitmproxy/script/concurrent.py"], ["13", "test/mitmproxy/data/addonscripts/concurrent_decorator_class.py"], ["18", "test/mitmproxy/script/test_concurrent.py"]]}, "797": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1927", "issue_id": "#1927", "issue_summary": "No data capture in proxy", "issue_description": "tehseensagar commented on 13 Jan 2017\nGreetings,\nI just setup mitmproxy according to installation doc and ran following cmd.\nsysctl -w net.ipv4.ip_forward=1\niptables -t nat -A PREROUTING -i wlan0 -p tcp --dport 443 -j REDIRECT --to-port 8080\niptables -t nat -A PREROUTING -i wlan0 -p tcp --dport 80 -j REDIRECT --to-port 8080\n./mitmproxy -T --host -e\nIt start but no data show as in opened windows. Any idea what am I doing wrong.\nRegards", "issue_status": "Closed", "issue_reporting_time": "2017-01-13T14:07:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "798": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1925", "issue_id": "#1925", "issue_summary": "Crash JSON error", "issue_description": "yash0212 commented on 12 Jan 2017\nTraceback (most recent call last):\nFile \"mitmproxy/tools/console/master.py\", line 292, in run\nFile \"site-packages/urwid/main_loop.py\", line 278, in run\nFile \"site-packages/urwid/main_loop.py\", line 376, in _run\nFile \"site-packages/urwid/main_loop.py\", line 682, in run\nFile \"site-packages/urwid/main_loop.py\", line 719, in _loop\nFile \"site-packages/urwid/raw_display.py\", line 393, in\nFile \"site-packages/urwid/raw_display.py\", line 493, in parse_input\nFile \"site-packages/urwid/main_loop.py\", line 403, in _update\nFile \"site-packages/urwid/main_loop.py\", line 503, in process_input\nFile \"mitmproxy/tools/console/window.py\", line 84, in keypress\nFile \"site-packages/urwid/container.py\", line 1116, in keypress\nFile \"mitmproxy/tools/console/statusbar.py\", line 155, in keypress\nFile \"mitmproxy/tools/console/statusbar.py\", line 108, in keypress\nFile \"mitmproxy/tools/console/statusbar.py\", line 133, in prompt_execute\nFile \"mitmproxy/tools/console/statusbar.py\", line 31, in call\nFile \"mitmproxy/tools/console/common.py\", line 328, in export_to_clip_or_file\nFile \"mitmproxy/export.py\", line 82, in python_code\nFile \"json/init.py\", line 312, in loads\nTypeError: the JSON object must be str, not 'bytes'\nmitmproxy has crashed!\nSystem information\nMitmproxy version: 1.0.2\nPython version: 3.5.2\nPlatform: Linux-3.16.0-4-amd64-x86_64-with-debian-8.6\nSSL version: OpenSSL 1.1.0c 10 Nov 2016\nLinux distro: debian 8.6", "issue_status": "Closed", "issue_reporting_time": "2017-01-12T15:56:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "799": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1924", "issue_id": "#1924", "issue_summary": "Initial Update", "issue_description": "pyup-bot commented on 11 Jan 2017\nHi\nThis is my first visit to this fine repo, but it seems you have been working hard to keep all dependencies updated so far.\nOnce you have closed this issue, I'll create seperate pull requests for every update as soon as I find one.\nThat's it for now!\nHappy merging!", "issue_status": "Closed", "issue_reporting_time": "2017-01-11T01:20:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "800": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1921", "issue_id": "#1921", "issue_summary": "Transparent mode failure: RuntimeError on sierra", "issue_description": "mohitmun commented on 9 Jan 2017\nWhen I try to run mitmproxy --host -T it gives:\nWarn: 192.168.43.88:50510: Transparent mode failure: RuntimeError(\"Error getting pfctl state: CalledProcessError(1, ('sudo', '-n', '/sbin/pfctl', '-s','state')))\nHow can I solve it?", "issue_status": "Closed", "issue_reporting_time": "2017-01-09T08:29:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "801": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1916", "issue_id": "#1916", "issue_summary": "mitmproxy has crashed: ETIMEDOUT", "issue_description": "dmarcelino commented on 6 Jan 2017\nHi, I've been analysing an android app's traffic for a few weeks now without any problem and today mitmdump started crashing with the following stacktrace:\nmitmdump -T --host -s analysis.py \n\n192.168.0.103:49825: clientconnect\n192.168.0.103:36334: Traceback (most recent call last):\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/tcp.py\", line 211, in read\n    data = self.o.read(rlen)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/OpenSSL/SSL.py\", line 1304, in recv\n    self._raise_ssl_error(self._ssl, result)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/OpenSSL/SSL.py\", line 1166, in _raise_ssl_error\n    raise SysCallError(errno, errorcode.get(errno))\nOpenSSL.SSL.SysCallError: (60, 'ETIMEDOUT')\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http.py\", line 176, in __call__\n    if not self._process_flow(flow):\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http.py\", line 227, in _process_flow\n    request = self.read_request_headers(f)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http1.py\", line 14, in read_request_headers\n    http1.read_request_head(self.client_conn.rfile)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/http/http1/read.py\", line 52, in read_request_head\n    form, method, scheme, host, port, path, http_version = _read_request_line(rfile)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/http/http1/read.py\", line 240, in _read_request_line\n    line = _get_first_line(rfile)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/http/http1/read.py\", line 227, in _get_first_line\n    line = rfile.readline()\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/tcp.py\", line 251, in readline\n    ch = self.read(1)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/tcp.py\", line 233, in read\n    raise exceptions.TlsException(str(e))\nmitmproxy.exceptions.TlsException: (60, 'ETIMEDOUT')\n\nTraceback (most recent call last):\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/tcp.py\", line 211, in read\n    data = self.o.read(rlen)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/OpenSSL/SSL.py\", line 1304, in recv\n    self._raise_ssl_error(self._ssl, result)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/OpenSSL/SSL.py\", line 1166, in _raise_ssl_error\n    raise SysCallError(errno, errorcode.get(errno))\nOpenSSL.SSL.SysCallError: (60, 'ETIMEDOUT')\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http.py\", line 176, in __call__\n    if not self._process_flow(flow):\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http.py\", line 227, in _process_flow\n    request = self.read_request_headers(f)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/proxy/protocol/http1.py\", line 14, in read_request_headers\n    http1.read_request_head(self.client_conn.rfile)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/http/http1/read.py\", line 52, in read_request_head\n    form, method, scheme, host, port, path, http_version = _read_request_line(rfile)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/http/http1/read.py\", line 240, in _read_request_line\n    line = _get_first_line(rfile)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/http/http1/read.py\", line 227, in _get_first_line\n    line = rfile.readline()\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/tcp.py\", line 251, in readline\n    ch = self.read(1)\n  File \"/Users/mycomputer/development/python/analysis/.venv/lib/python3.5/site-packages/mitmproxy/net/tcp.py\", line 233, in read\n    raise exceptions.TlsException(str(e))\nmitmproxy.exceptions.TlsException: (60, 'ETIMEDOUT')\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nSince it nicely asked ti lodge a report, here I am.\nI was running v0.18.2 but after this I've tried the latest build (v1.0.2) and still experiencing the same issue.\nSteps to reproduce the problem:\nmitmdump -T --host -s analysis.py\nAny other comments? What have you tried so far?\nTried to run mitmproxy -T --host instead, same result.\nSystem information\n$ mitmdump --sysinfo\nMitmproxy version: 1.0.2\nPython version: 3.5.1\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.11.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-01-05T23:59:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "802": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1915", "issue_id": "#1915", "issue_summary": "[web]: body filter expressions are not working", "issue_description": "wdormann commented on 6 Jan 2017 \u2022\nedited\nSteps to reproduce the problem:\nRun mitmweb\nIn one of the \"Start\" boxes, start to type each of the filter expressions. e.g. \"~b asdf\"\nAny other comments? What have you tried so far?\nI realize that mitmweb is beta, but the documentation indicates \"We consider it stable for all features currently exposed in the UI\", so maybe this is an oversight. Filter expressions that cause the error: \"SyntaxError: Expected filter expression but \"~\" found\" include:\n~b\n~bq\n~bs\n~dst\n~http\n~marked\n~src\nSystem information\nMitmproxy version: 1.0.1\nPython version: 3.5.2\nPlatform: Linux-3.13.0-100-generic-i686-with-debian-jessie-sid\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: debian jessie/sid", "issue_status": "Closed", "issue_reporting_time": "2017-01-05T20:56:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "803": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1914", "issue_id": "#1914", "issue_summary": "Running in python 3.4 asks for typing module", "issue_description": "CMCDragonkai commented on 5 Jan 2017 \u2022\nedited\n0.18.2 asks for typing module even though it is installable in Python 3.4. See this issue: vorot93/obozrenie#4\nShouldn't there be a failure to install on python 3.4 if it cannot work on 3.4?", "issue_status": "Closed", "issue_reporting_time": "2017-01-05T10:54:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "804": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1913", "issue_id": "#1913", "issue_summary": "mitmproxy won't write MITMPROXY_SSLKEYLOGFILE ssl log file if it's started with sudo", "issue_description": "larryhou commented on 5 Jan 2017 \u2022\nedited\nSteps to reproduce the problem:\nRun in Terminal.app export MITMPROXY_SSLKEYLOGFILE=~/Downloads/mitm.log\nRun in Ternimal.appsudo mitmproxy -p 8888 --follow\nBrowse webpages with https enabled, then no related logs would be written in to ~/Downloads/mitm.log\nAny other comments? What have you tried so far?\nAll is fine without sudo.\nSystem information\nMitmproxy version: 1.0.1\nPython version: 3.6.0\nPlatform: Darwin-16.4.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.12.3 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2017-01-05T09:12:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "805": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1912", "issue_id": "#1912", "issue_summary": "ImportError: cannot import name 'contentviews'", "issue_description": "blshkv commented on 5 Jan 2017 \u2022\nedited\nThe latest release and the HEAD copy are affected:\nbash$ mitmproxy\n#################################################\n# mitmproxy only supports Python 3.5 and above! #\n#################################################\nTraceback (most recent call last):\n  File \"/usr/lib/python-exec/python3.4/mitmproxy\", line 9, in <module>\n    load_entry_point('mitmproxy==1.0.2', 'console_scripts', 'mitmproxy')()\n  File \"/usr/lib64/python3.4/site-packages/mitmproxy/tools/main.py\", line 58, in mitmproxy\n    from mitmproxy.tools import console\n  File \"/usr/lib64/python3.4/site-packages/mitmproxy/tools/console/__init__.py\", line 1, in <module>\n    from mitmproxy.tools.console import master\n  File \"/usr/lib64/python3.4/site-packages/mitmproxy/tools/console/master.py\", line 25, in <module>\n    from mitmproxy.tools.console import flowview\n  File \"/usr/lib64/python3.4/site-packages/mitmproxy/tools/console/flowview.py\", line 9, in <module>\n    from mitmproxy import contentviews\n  File \"/usr/lib64/python3.4/site-packages/mitmproxy/contentviews/__init__.py\", line 24, in <module>\n    from . import (\n  File \"/usr/lib64/python3.4/site-packages/mitmproxy/contentviews/auto.py\", line 1, in <module>\n    from mitmproxy import contentviews\nImportError: cannot import name 'contentviews'\nI dont think it is a python3.4 problem.\nThe commit in questions is below:\na7ba2f7\nmitmproxy/contentviews/auto.py\n+from mitmproxy import contentviews\nIt must be a typo here as I don't think it makes sense to import its own module. I have commented out this line and the tool started to work.", "issue_status": "Closed", "issue_reporting_time": "2017-01-05T08:26:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "806": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1910", "issue_id": "#1910", "issue_summary": "UnicodeEncodeError in console with mitmweb", "issue_description": "azixMcAze commented on 3 Jan 2017 \u2022\nedited\nI use mitmweb as a reverse proxy.\nI get an error message in the terminal console when the reason of the server's response contains an accent : \"201 Cr\u00e9e\"\nMessages in the terminal console:\n192.168.1.46:56261: clientconnect\nERROR:root:Error sending message\nTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/1.0.2/libexec/lib/python3.6/site-packages/mitmproxy/tools/web/app.py\", line 192, in broadcast\nconn.write_message(message)\nFile \"/usr/local/Cellar/mitmproxy/1.0.2/libexec/lib/python3.6/site-packages/tornado/websocket.py\", line 213, in write_message\nreturn self.ws_connection.write_message(message, binary=binary)\nFile \"/usr/local/Cellar/mitmproxy/1.0.2/libexec/lib/python3.6/site-packages/tornado/websocket.py\", line 681, in write_message\nmessage = tornado.escape.utf8(message)\nFile \"/usr/local/Cellar/mitmproxy/1.0.2/libexec/lib/python3.6/site-packages/tornado/escape.py\", line 200, in utf8\nreturn value.encode(\"utf-8\")\nUnicodeEncodeError: 'utf-8' codec can't encode character '\\udce9' in position 126: surrogates not allowed\nMessages in the event log in the browser:\n192.168.1.46:56261: clientconnect\n192.168.1.46:56261: request\n-> Request(POST /XXXX)\n192.168.1.46:56261: serverconnect\n-> 10.1.1.1:8080\n192.168.1.46:56261: response\n-> Response(201 Cr\ufffde, application/json, 369b)\nThe request is visible in the webpage, it looks like a minor issue.\nIt is the same server that caused #1849\nOn a sidenote, the accent is not displayed correctly neither in the response tab nor in the event log (it displays an unicode error box <?>)\nI have not checked if the server's response's reason is in utf8 or in another charset\nSystem information\nMitmproxy version: 1.0.2\nPython version: 3.6.0\nPlatform: Darwin-14.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0c 10 Nov 2016\nMac version: 10.10.5 ('', '', '') x86_64\nOSX in French", "issue_status": "Closed", "issue_reporting_time": "2017-01-03T16:11:31Z", "fixed_by": "#1917", "pull_request_summary": "Fix #1910", "pull_request_description": "Member\nmhils commented on 6 Jan 2017 \u2022\nedited\nThis PR fixes #1910 and improves the legibility of related code. The most important functional changes are that (1) the HTTP reason phrase is now treated as ISO-8859-1 (i.e. latin1) and (2) we now surrogate-encode before sending websocket data.\nThe commit history is kind of useful here, so no squashing please.", "pull_request_status": "Merged", "issue_fixed_time": "2017-01-07T22:08:51Z", "files_changed": [["4", "mitmproxy/io_compat.py"], ["13", "mitmproxy/net/http/message.py"], ["16", "mitmproxy/net/http/request.py"], ["6", "mitmproxy/net/http/response.py"], ["2", "mitmproxy/net/tcp.py"], ["18", "mitmproxy/net/wsgi.py"], ["26", "mitmproxy/tools/web/app.py"], ["34", "mitmproxy/utils/strutils.py"], ["2", "pathod/log.py"], ["18", "pathod/pathoc.py"], ["17", "test/mitmproxy/net/http/test_response.py"], ["4", "test/mitmproxy/test_web_app.py"], ["9", "test/mitmproxy/utils/test_strutils.py"]]}, "807": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1909", "issue_id": "#1909", "issue_summary": "crashed using invalid script path", "issue_description": "wbwkx commented on 3 Jan 2017\nSteps to reproduce the problem:\n1.start proxy from cli\n2.using \"|\" command to load a script and set an invalid path to it. like \"~/Desktop/\"\n3.hit Enter it will crash\nSystem information\ndemo \u00bb mitmproxy --version\nmitmproxy 2.0.0\ndemo \u00bb mitmproxy --sysinfo\nMitmproxy version: 2.0.0\nPython version: 3.5.0\nPlatform: Darwin-16.3.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j  26 Sep 2016\nMac version: 10.12.2 ('', '', '') x86_64\nCrash-Log trace\n   Traceback (most recent call last):\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy-2.0.0-py3.5.egg/mitmproxy/tools/console/master.py\", line 292, in run\n    self.loop.run()\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy-2.0.0-py3.5.egg/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy-2.0.0-py3.5.egg/mitmproxy/tools/console/statusbar.py\", line 155, in keypress\n    return self.master.ab.keypress(*args, **kwargs)\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy-2.0.0-py3.5.egg/mitmproxy/tools/console/statusbar.py\", line 110, in keypress\n    self.prompt_execute(self._w.get_edit_text())\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy-2.0.0-py3.5.egg/mitmproxy/tools/console/statusbar.py\", line 133, in prompt_execute\n    msg = p(txt)\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy-2.0.0-py3.5.egg/mitmproxy/tools/console/statusbar.py\", line 21, in __call__\n    return self.callback(pth, *self.args)\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy-2.0.0-py3.5.egg/mitmproxy/tools/console/master.py\", line 150, in run_script_once\n    sc.run_once(command, [f])\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy-2.0.0-py3.5.egg/mitmproxy/addons/script.py\", line 208, in run_once\n    sc = Script(command)\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy-2.0.0-py3.5.egg/mitmproxy/addons/script.py\", line 136, in __init__\n    self.path, self.args = parse_command(command)\n  File \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy-2.0.0-py3.5.egg/mitmproxy/addons/script.py\", line 37, in parse_command\n    raise exceptions.OptionsError(\"Not a file: %s\" % args[0])\nmitmproxy.exceptions.OptionsError: Not a file: /Users/wuten/Desktop\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2017-01-03T09:57:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "808": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1908", "issue_id": "#1908", "issue_summary": "Errno 111. Connection refused.", "issue_description": "farmdve commented on 1 Jan 2017 \u2022\nedited\nHello,\nI have setup the following environment. I have a dns proxy server and mitmproxy sitting on one machine. The device(whose traffic is to be captured)'s DNS server is set to my own DNS server. There I spoof all IP addresses to return the (public ip)address of mitmproxy.\nI run mitmproxy as such\nmitmproxy -T --host\nWhen I attempt to visit a website, I get this\nSo I see that mitmproxy correctly identified the domain it should connect to, however in the redacted part, the IP mitmproxy connects to is the proxy machine itself. So what can I do here so that it connects to the real domain?", "issue_status": "Closed", "issue_reporting_time": "2017-01-01T16:11:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "809": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1906", "issue_id": "#1906", "issue_summary": "Monitoring long haul sessions (multiple on a box): Error: [('system library', 'fopen', 'Too many open files'), ('BIO routines', 'BIO_new_file', 'system lib'), ('x509 certificate routines', 'X509_load_cert_crl_file', 'system lib')]", "issue_description": "seikojin commented on 30 Dec 2016\nSetup:\nRemote linux server with mitimproxy 0.18.2 installed\nMachines using ssh to remotely connect and start sessions. Usually 7-10 sessions at the same time.\nMultiple devices connected to each proxy\nI replaced some items with and for what I was filtering against and my install paths (which should be irrelevant).\nSteps to reproduce the problem:\nSsh to your remote monitor\nStart 7 sessions and connect 8 devices (2 of them to 1 session that did not crash)\nLet monitor for 72 hours\nSessions 4 and 5 crashed with the same error below. Those 2 sessions had single devices connected.\nTraceback (most recent call last):0.0.0.0:8084):\n  File \"<userpath>/.local/lib/python2.7/site-packages/mitmproxy/proxy/server.py\", line 120, in handle\n    root_layer()/python2.7/threading.py\", line 801, in __bootstrap_inner\n[0/767]  [f:<filter>]                                                                                                                                                                                                                                                                                                                        ?:help [*:8084]\nError: 10.0.2.245:43899: Traceback (most recent call last):\n  File \"<userpath>/.local/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 391, in __call__\n    layer()r/lib/python2.7/socket.py\", line 206, in accept\n  File \"<userpath>/.local/lib/python2.7/site-packages/mitmproxy/protocol/http1.py\", line 74, in __call____call__\n    layer()\n  File \"<userpath>/.local/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 184, in __call__\n    self.handle_regular_mode_connect(request)\n  File \"<userpath>/.local/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 283, in handle_regular_mode_connect\n    layer()\n  File \"<userpath>/.local/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 384, in __call___\n    self._establish_tls_with_client_and_server()\n  File \"<userpath>/.local/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 470, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"<userpath>/.local/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 467, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()nd_server()\n  File \"<userpath>/.local/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 492, in _establish_tls_with_client_and_server\n    extra_chain_certs=extra_certs,\n  File \"<userpath>/.local/lib/python2.7/site-packages/mitmproxy/models/connections.py\", line 99, in convert_to_ssl_client_and_server\n    super(ClientConnection, self).convert_to_ssl(*args, **kwargs)\n  File \"<userpath>/.local/lib/python2.7/site-packages/netlib/tcp.py\", line 857, in convert_to_sslstablish_tls_with_client\n    **sslctx_kwargs)s=extra_certs,\n  File \"<userpath>/.local/lib/python2.7/site-packages/netlib/tcp.py\", line 820, in create_ssl_contextonvert_to_ssl\n    context = self._create_ssl_context(ca_pemfile=chain_file, **sslctx_kwargs)\n  File \"<userpath>/.local/lib/python2.7/site-packages/netlib/tcp.py\", line 544, in _create_ssl_context\n    context.load_verify_locations(ca_pemfile, ca_path)\n  File \"<userpath>/.local/lib/python2.7/site-packages/OpenSSL/SSL.py\", line 525, in load_verify_locations\n    _raise_current_error()_ssl_context(ca_pemfile=chain_file, **sslctx_kwargs)\n  File \"<userpath>/.local/lib/python2.7/site-packages/OpenSSL/_util.py\", line 48, in exception_from_error_queue\n    raise exception_type(errors)s(ca_pemfile, ca_path)\nError: [('system library', 'fopen', 'Too many open files'), ('BIO routines', 'BIO_new_file', 'system lib'), ('x509 certificate routines', 'X509_load_cert_crl_file', 'system lib')]\n    _raise_current_error()\nmitmproxy has crashed!local/lib/python2.7/site-packages/OpenSSL/_util.py\", line 48, in exception_from_error_queue\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nError: [('system library', 'fopen', 'Too many open files'), ('BIO routines', 'BIO_new_file', 'system lib'), ('x509 certificate routines', 'X509_load_cert_crl_file', 'system lib')]\nAny other comments? What have you tried so far?\nUsing ctrl+C killed the proxy session and I was able to restart.\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2016-12-30T18:06:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "810": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1901", "issue_id": "#1901", "issue_summary": "ValueError: data must be bytes, but is str", "issue_description": "ghost commented on 29 Dec 2016\nHi ,\nWhen i use 'e' to edit form , sometimes i get this .\n\u279c  ~ mitmproxy -b 192.168.1.2 -p 8080\nTraceback (most recent call last):\n  File \"mitmproxy/tools/console/master.py\", line 292, in run\n  File \"site-packages/urwid/main_loop.py\", line 278, in run\n  File \"site-packages/urwid/main_loop.py\", line 376, in _run\n  File \"site-packages/urwid/main_loop.py\", line 682, in run\n  File \"site-packages/urwid/main_loop.py\", line 719, in _loop\n  File \"site-packages/urwid/raw_display.py\", line 393, in <lambda>\n  File \"site-packages/urwid/raw_display.py\", line 493, in parse_input\n  File \"site-packages/urwid/main_loop.py\", line 403, in _update\n  File \"site-packages/urwid/main_loop.py\", line 503, in process_input\n  File \"mitmproxy/tools/console/window.py\", line 84, in keypress\n  File \"site-packages/urwid/container.py\", line 1116, in keypress\n  File \"mitmproxy/tools/console/statusbar.py\", line 155, in keypress\n  File \"mitmproxy/tools/console/statusbar.py\", line 108, in keypress\n  File \"mitmproxy/tools/console/statusbar.py\", line 133, in prompt_execute\n  File \"mitmproxy/tools/console/statusbar.py\", line 31, in __call__\n  File \"mitmproxy/tools/console/flowview.py\", line 415, in edit\n  File \"mitmproxy/tools/console/flowview.py\", line 351, in edit_form\n  File \"mitmproxy/tools/console/master.py\", line 352, in view_grideditor\n  File \"site-packages/blinker/base.py\", line 267, in send\n  File \"site-packages/blinker/base.py\", line 267, in <listcomp>\n  File \"mitmproxy/tools/console/master.py\", line 144, in sig_push_view_state\n  File \"site-packages/urwid/main_loop.py\", line 578, in draw_screen\n  File \"site-packages/urwid/widget.py\", line 141, in cached_render\n  File \"site-packages/urwid/container.py\", line 1083, in render\n  File \"site-packages/urwid/widget.py\", line 141, in cached_render\n  File \"site-packages/urwid/decoration.py\", line 225, in render\n  File \"site-packages/urwid/widget.py\", line 141, in cached_render\n  File \"site-packages/urwid/widget.py\", line 1750, in render\n  File \"site-packages/urwid/widget.py\", line 141, in cached_render\n  File \"site-packages/urwid/container.py\", line 1083, in render\n  File \"site-packages/urwid/widget.py\", line 141, in cached_render\n  File \"site-packages/urwid/listbox.py\", line 455, in render\n  File \"site-packages/urwid/listbox.py\", line 337, in calculate_visible\n  File \"site-packages/urwid/listbox.py\", line 702, in _set_focus_complete\n  File \"site-packages/urwid/listbox.py\", line 672, in _set_focus_first_selectable\n  File \"site-packages/urwid/listbox.py\", line 340, in calculate_visible\n  File \"mitmproxy/tools/console/grideditor/base.py\", line 223, in get_focus\n  File \"mitmproxy/tools/console/grideditor/base.py\", line 77, in __init__\n  File \"mitmproxy/tools/console/grideditor/col_bytes.py\", line 33, in Display\n  File \"mitmproxy/tools/console/grideditor/col_bytes.py\", line 73, in __init__\n  File \"mitmproxy/utils/strutils.py\", line 72, in bytes_to_escaped_str\nValueError: data must be bytes, but is str\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...\nsysteminfo:\nMitmproxy version: 1.0.0\nPython version: 3.5.2\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.11.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-12-29T03:40:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "811": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1900", "issue_id": "#1900", "issue_summary": "Remove Pillow dependency", "issue_description": "Member\ncortesi commented on 29 Dec 2016\nPillow is a large dependency with a platform-specific binary components. We only use it to extract EXIF data for content views, and there are a number of pure-Python modules that can do this for us instead. This looks like a fairly well-tested alternative:\nhttps://github.com/hMatoba/Piexif\n1", "issue_status": "Closed", "issue_reporting_time": "2016-12-28T20:04:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "812": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1899", "issue_id": "#1899", "issue_summary": "Configuration file does not work for some options", "issue_description": "vfaronov commented on 28 Dec 2016\nIn mitmproxy 0.18, I could have a --conf with a line like this:\nreverse = http://server01.example.net:1181\nwhich caused mitmproxy to start in reverse proxy mode.\nBut I can\u2019t seem to find an equivalent in mitmproxy 1.0:\n$ mitmproxy --conf tools/mitmproxy/api.yaml \nTraceback (most recent call last):\n  File \"/home/vasiliy/env/mitmproxy/bin/mitmproxy\", line 11, in <module>\n    sys.exit(mitmproxy())\n  File \"/home/vasiliy/env/mitmproxy/lib/python3.5/site-packages/mitmproxy/tools/main.py\", line 68, in mitmproxy\n    console_options.load_paths(args.conf)\n  File \"/home/vasiliy/env/mitmproxy/lib/python3.5/site-packages/mitmproxy/optmanager.py\", line 245, in load_paths\n    self.load(txt)\n  File \"/home/vasiliy/env/mitmproxy/lib/python3.5/site-packages/mitmproxy/optmanager.py\", line 232, in load\n    self.update(**data)\n  File \"/home/vasiliy/env/mitmproxy/lib/python3.5/site-packages/mitmproxy/optmanager.py\", line 141, in update\n    raise KeyError(\"No such option: %s\" % k)\nKeyError: 'No such option: reverse'\nSo I have to specify --reverse on the command line every time, which is inconvenient.", "issue_status": "Closed", "issue_reporting_time": "2016-12-28T14:34:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "813": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1898", "issue_id": "#1898", "issue_summary": "iOS docs certinstall link no longer valid", "issue_description": "Member\ndweinstein commented on 28 Dec 2016 \u2022\nedited\nIt appears the link is no longer functional for documentation on iOS cert installation.\npossible alternative:\nhttp://web.archive.org/web/20150920082614/http://kb.mit.edu/confluence/pages/viewpage.action?pageId=152600377\nhttp://jasdev.me/intercepting-ios-traffic\nSteps to reproduce the problem:\ngo to http://docs.mitmproxy.org/en/stable/certinstall.html#ios\nclick link for ios http://kb.mit.edu/confluence/pages/viewpage.action?pageId=152600377\nuser presented w/ login prompt for MIT hermes:", "issue_status": "Closed", "issue_reporting_time": "2016-12-28T14:22:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "814": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1897", "issue_id": "#1897", "issue_summary": "SyntaxError: invalid syntax in cssutils", "issue_description": "theSoenke commented on 28 Dec 2016\nSteps to reproduce the problem:\nRunning mitmproxy results in this error. I'm using cssutils 1.0.1\n  File \"/usr/bin/mitmproxy\", line 9, in <module>\n    load_entry_point('mitmproxy==1.0.0', 'console_scripts', 'mitmproxy')()\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/main.py\", line 58, in mitmproxy\n    from mitmproxy.tools import console\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/console/__init__.py\", line 1, in <module>\n    from mitmproxy.tools.console import master\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/console/master.py\", line 25, in <module>\n    from mitmproxy.tools.console import flowview\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/tools/console/flowview.py\", line 9, in <module>\n    from mitmproxy import contentviews\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/contentviews/__init__.py\", line 24, in <module>\n    from . import (\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/contentviews/css.py\", line 3, in <module>\n    import cssutils\n  File \"/usr/lib/python3.5/site-packages/cssutils/__init__.py\", line 321\n    except xml.dom.HierarchyRequestErr, e:\n                                      ^\nSyntaxError: invalid syntax\nSystem information\nLinux\nPython 3.5.2\nmitmproxy: 1.0\nNot sure whether this is an issue with mitmproxy or just cssutils", "issue_status": "Closed", "issue_reporting_time": "2016-12-28T13:40:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "815": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1895", "issue_id": "#1895", "issue_summary": "Authenticating upstream server", "issue_description": "ja8zyjits commented on 28 Dec 2016\nSteps to reproduce the problem:\nCopy this script from the examples\n# This scripts demonstrates how mitmproxy can switch to a second/different upstream proxy\n# in upstream proxy mode.\n#\n# Usage: mitmdump -U http://default-upstream-proxy.local:8080/ -s change_upstream_proxy.py\n#\n# If you want to change the target server, you should modify flow.request.host and flow.request.port\n\n\ndef proxy_address(flow):\n   return (\"username:password@localhost\", 8081)\n\n\ndef request(flow):\n    if flow.request.method == \"CONNECT\":\n        # If the decision is done by domain, one could also modify the server address here.\n        # We do it after CONNECT here to have the request data available as well.\n        return\n    address = proxy_address(flow)\n    if flow.live:\n        flow.live.change_upstream_proxy_server(address)\n2] Run the above script.\nAny other comments? What have you tried so far?\n1] Iam trying to authenticate my proxy upstream server, but iam getting this error\n$mitmdump -s mitmproxy_tool/update_mitmproxy.py -U http://127.0.0.1:8085 --no-http2\nLoading script: mitmproxy_tool/update_mitmproxy.py\nProxy server listening at http://0.0.0.0:8080\n127.0.0.1:37582: clientconnect\n127.0.0.1:37582: GET http://www.httpbin.org/ip\n << Server connection to 127.0.0.1:8081 failed: Error connecting to \"127.0.0.1:8081\": [Errno -2] Name or service not known\n2] any help could be really great\nSystem information\nMitmproxy version: 0.18.2\nPython version: 2.7.12\nPlatform: Linux-4.4.0-51-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2016-12-28T07:13:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "816": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1894", "issue_id": "#1894", "issue_summary": "type object 'Sequence' has no attribute '__args__' using python3.5.0", "issue_description": "wbwkx commented on 28 Dec 2016 \u2022\nedited\nSteps to reproduce the problem:\n1.pyenv global 3.5.0\n2.pip3.5 install mitmproxy\n3.mitmproxy -b 10.19.84.140 -p 9999 --no-upstream-cert\nAny other comments? What have you tried so far?\ntrying to install from brew, and problem still by raising the py3.6.0 problem.\n0.15 runs perfectly under python2.7.10\nSystem information\nTraceback (most recent call last):\nFile \"/usr/local/var/pyenv/versions/3.5.0/bin/mitmproxy\", line 11, in\nsys.exit(mitmproxy())\nFile \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy/tools/main.py\", line 67, in mitmproxy\nconsole_options = options.Options()\nFile \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy/options.py\", line 117, in init\nself.client_replay = client_replay\nFile \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy/optmanager.py\", line 111, in setattr\nself._typecheck(attr, value)\nFile \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy/optmanager.py\", line 122, in _typecheck\ntypecheck.check_type(attr, value, expected_type)\nFile \"/usr/local/var/pyenv/versions/3.5.0/lib/python3.5/site-packages/mitmproxy/utils/typecheck.py\", line 55, in check_type\nT = typeinfo.args[0]\nAttributeError: type object 'Sequence' has no attribute 'args'", "issue_status": "Closed", "issue_reporting_time": "2016-12-28T02:55:26Z", "fixed_by": "#1896", "pull_request_summary": "Fix compat with Python 3.5.0", "pull_request_description": "Member\nmhils commented on 28 Dec 2016\nThis should fix #1894. Checking sys.version_info is a bit flaky as (if I interpret the reports correctly) one can still install the typing module from pypi on older versions.", "pull_request_status": "Merged", "issue_fixed_time": "2016-12-28T14:35:08Z", "files_changed": [["23", "mitmproxy/utils/typecheck.py"], ["17", "test/mitmproxy/utils/test_typecheck.py"]]}, "817": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1893", "issue_id": "#1893", "issue_summary": "Display Version in the Web UI", "issue_description": "Member\nmhils commented on 28 Dec 2016 \u2022\nedited\nThere's currently no version indication in mitmweb.", "issue_status": "Closed", "issue_reporting_time": "2016-12-27T18:40:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "818": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1892", "issue_id": "#1892", "issue_summary": "Doesn't work with Python 3.6.0", "issue_description": "dimaqq commented on 27 Dec 2016\nSteps to reproduce the problem:\npyenv install 3.6.0\npyenv virtualenv 3.6.0 mitm\n(activate mitm virtualenv)\npip install mitmproxy\nmitmproxy --host\nSuccessfully installed Flask-0.11.1 Jinja2-2.8 MarkupSafe-0.23 Pillow-3.4.2 PyYAML-3.12 Werkzeug-0.11.13 argh-0.26.2 blinker-1.4 brotlipy-0.6.0 certifi-2016.9.26 cffi-1.9.1 click-6.6 construct-2.8.8 cryptography-1.7.1 cssutils-1.0.1 editorconfig-0.12.1 h2-2.5.1 hpack-2.3.0 html2text-2016.9.19 hyperframe-4.0.1 idna-2.2 itsdangerous-0.24 jsbeautifier-1.6.4 mitmproxy-1.0.0 passlib-1.7.0 pathtools-0.1.2 pyOpenSSL-16.2.0 pyasn1-0.1.9 pycparser-2.17 pyparsing-2.1.10 pyperclip-1.5.27 requests-2.12.4 ruamel.yaml-0.13.6 six-1.10.0 sortedcontainers-1.5.7 tornado-4.4.2 urwid-1.3.1 watchdog-0.8.3\n ~/mitm\u25b6mitmproxy --host                                                                                                                                   1.1m \ue0b3 Tue 27 Dec 2016 15:20:29 CET\nTraceback (most recent call last):\n  File \"/dima/.pyenv/versions/mitm/bin/mitmproxy\", line 11, in <module>\n    sys.exit(mitmproxy())\n  File \"/dima/.pyenv/versions/3.6.0/envs/mitm/lib/python3.6/site-packages/mitmproxy/tools/main.py\", line 67, in mitmproxy\n    console_options = options.Options()\n  File \"/dima/.pyenv/versions/3.6.0/envs/mitm/lib/python3.6/site-packages/mitmproxy/options.py\", line 123, in __init__\n    self.rfile = rfile\n  File \"/dima/.pyenv/versions/3.6.0/envs/mitm/lib/python3.6/site-packages/mitmproxy/optmanager.py\", line 111, in __setattr__\n    self._typecheck(attr, value)\n  File \"/dima/.pyenv/versions/3.6.0/envs/mitm/lib/python3.6/site-packages/mitmproxy/optmanager.py\", line 122, in _typecheck\n    typecheck.check_type(attr, value, expected_type)\n  File \"/dima/.pyenv/versions/3.6.0/envs/mitm/lib/python3.6/site-packages/mitmproxy/utils/typecheck.py\", line 24, in check_type\n    if typeinfo.__qualname__ == \"Union\":\nAttributeError: '_Union' object has no attribute '__qualname__'\nAny other comments? What have you tried so far?\nSystem information\n# Cut and paste the output of \"mitmdump --sysinfo\".\n\nTraceback (most recent call last):\n  File \"/dima/.pyenv/versions/mitm/bin/mitmdump\", line 11, in <module>\n    sys.exit(mitmdump())\n  File \"/dima/.pyenv/versions/3.6.0/envs/mitm/lib/python3.6/site-packages/mitmproxy/tools/main.py\", line 106, in mitmdump\n    dump_options = options.Options()\n  File \"/dima/.pyenv/versions/3.6.0/envs/mitm/lib/python3.6/site-packages/mitmproxy/options.py\", line 123, in __init__\n    self.rfile = rfile\n  File \"/dima/.pyenv/versions/3.6.0/envs/mitm/lib/python3.6/site-packages/mitmproxy/optmanager.py\", line 111, in __setattr__\n    self._typecheck(attr, value)\n  File \"/dima/.pyenv/versions/3.6.0/envs/mitm/lib/python3.6/site-packages/mitmproxy/optmanager.py\", line 122, in _typecheck\n    typecheck.check_type(attr, value, expected_type)\n  File \"/dima/.pyenv/versions/3.6.0/envs/mitm/lib/python3.6/site-packages/mitmproxy/utils/typecheck.py\", line 24, in check_type\n    if typeinfo.__qualname__ == \"Union\":\nAttributeError: '_Union' object has no attribute '__qualname__'\n\n# If you're using an older version if mitmproxy, please specify the version and OS.", "issue_status": "Closed", "issue_reporting_time": "2016-12-27T14:24:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "819": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1891", "issue_id": "#1891", "issue_summary": "Connection to h2o.examp1e.net failed", "issue_description": "Contributor\nchhsiao90 commented on 27 Dec 2016\nIt's related to #1498\nSteps to reproduce the problem:\nmitmproxy --http2\nconnect to https://h2o.examp1e.net by Firefox\nFirefox show that connection failed\nAny other comments? What have you tried so far?\nI know that there are some website that suffer from receiving priority frame over idle/closed stream problem.\nBut I think that h2o.examp1e.net fixed that problem that I had test it by hyper-h2 client with code post at #1745.\nI'm not very familiar about how mitmproxy transform client h2 frame to server,\nso I still cannot reproduce by use hyper-h2 client.\nSystem information\nMitmproxy version: 1.0.0\nPython version: 3.5.2\nPlatform: Darwin-16.1.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.12.1 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-12-27T10:00:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "820": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1890", "issue_id": "#1890", "issue_summary": "Segfault when using binary", "issue_description": "shark0der commented on 27 Dec 2016\nSteps to reproduce the problem:\nDownload mitmproxy-1.0.0-linux.tar.gz from https://github.com/mitmproxy/mitmproxy/releases\ntar xf mitmproxy-1.0.0-linux.tar.gz\nRun it:\n$ ./mitmweb \n[1]    17398 segmentation fault (core dumped)  ./mitmweb\nAny other comments? What have you tried so far?\nInstalling using pip3 install https://github.com/mitmproxy/mitmproxy/archive/v1.0.zip worked.\nSystem information (for the pip installed version).\nMitmproxy version: 1.0.0\nPython version: 3.5.2\nPlatform: Linux-4.4.0-57-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g  1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2016-12-27T00:26:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "821": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1889", "issue_id": "#1889", "issue_summary": "Certificate Verification Error for 108.62.206.196:5222: hostname 'no-hostname' doesn't match either of '*.tktn.be', 'tktn.be'", "issue_description": "TelmoNeves commented on 27 Dec 2016\nSteps to reproduce the problem:\nInstall mitmweb on windows 7\nInstall mitm certificate on smartphone running android 4.3\nRun mitmweb --socks --insecure\nRun an app which connects to a xmpp server\nI get the following error:\nCertificate Verification Error for 108.62.206.196:5222: hostname 'no-hostname' doesn't match either of '*.tktn.be', 'tktn.be'\nIgnoring server verification error, continuing with connection\nSystem information\nMitmproxy version: 1.0.0\nPython version: 3.5.2\nPlatform: Windows-7-6.1.7601-SP1\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nWindows version: 7 6.1.7601 SP1 Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2016-12-26T23:15:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "822": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1886", "issue_id": "#1886", "issue_summary": "AttributeError: '_Union' object has no attribute '__qualname__'", "issue_description": "dserodio commented on 26 Dec 2016\nSteps to reproduce the problem:\npip3 install mitmproxy\nmitmproxy\nCrash (see below)\nAny other comments? What have you tried so far?\n$ mitmdump\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmdump\", line 11, in <module>\n    sys.exit(mitmdump())\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/tools/main.py\", line 106, in mitmdump\n    dump_options = options.Options()\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/options.py\", line 123, in __init__\n    self.rfile = rfile\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/optmanager.py\", line 111, in __setattr__\n    self._typecheck(attr, value)\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/optmanager.py\", line 122, in _typecheck\n    typecheck.check_type(attr, value, expected_type)\n  File \"/usr/local/lib/python3.6/site-packages/mitmproxy/utils/typecheck.py\", line 24, in check_type\n    if typeinfo.__qualname__ == \"Union\":\nAttributeError: '_Union' object has no attribute '__qualname__'\nSystem information\nmitmproxy 1.0.0\nPython 3.6.0\nOS X 10.11.6\n(mitmproxy --sysinfo gives the same traceback above)\n7", "issue_status": "Closed", "issue_reporting_time": "2016-12-26T18:03:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "823": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1885", "issue_id": "#1885", "issue_summary": "mitmproxy-1.0.0-windows-installer.exe Immediately Hangs", "issue_description": "Contributor\nBSalita commented on 26 Dec 2016 \u2022\nedited\nSteps to reproduce the problem:\nDouble click on mitmproxy-1.0.0-windows-installer.exe. No elevate prompt requested. Cursor shows busy (hour glass) forever. Same issue from admin mode. Same after reboot.\nAny other comments? What have you tried so far?\nSystem information\nWindows 10 Insider 14986 (slow ring).", "issue_status": "Closed", "issue_reporting_time": "2016-12-26T11:17:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "824": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1883", "issue_id": "#1883", "issue_summary": "AttributeError: 'NoneType' object has no attribute 'host'", "issue_description": "yowenter commented on 22 Dec 2016 \u2022\nedited\nSteps to reproduce the problem:\nHi, there,\nI start mitmproxy use ./mitmproxy --port=8081\nI add the /$HOME/.mitmproxy/mitmproxy-ca-cert.cer to the login keychain\nWhen I opened 'https://google.com' use chrome proxed by switch omega .It raise an error.\nTraceback (most recent call last):\nFile \"/Users/travis/build/mitmproxy/mitmproxy/libmproxy/proxy/server.py\", line 120, in handle\nFile \"/Users/travis/build/mitmproxy/mitmproxy/libmproxy/proxy/modes/http_proxy.py\", line 10, in call\nFile \"/Users/travis/build/mitmproxy/mitmproxy/libmproxy/protocol/tls.py\", line 267, in call\nFile \"/Users/travis/build/mitmproxy/mitmproxy/libmproxy/protocol/tls.py\", line 392, in _establish_tls_with_client_and_server\nFile \"/Users/travis/build/mitmproxy/mitmproxy/libmproxy/protocol/tls.py\", line 389, in _establish_tls_with_client_and_server\nFile \"/Users/travis/build/mitmproxy/mitmproxy/libmproxy/protocol/tls.py\", line 398, in _establish_tls_with_client\nFile \"/Users/travis/build/mitmproxy/mitmproxy/libmproxy/protocol/tls.py\", line 497, in _find_cert\nAttributeError: 'NoneType' object has no attribute 'host'\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nAny other comments? What have you tried so far?\nBut it works well on my iPhone .I installed the cert on my phone, and then I set the network proxy .\nI can visit https websites.\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2016-12-22T08:40:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "825": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1877", "issue_id": "#1877", "issue_summary": "Crash when opening specific flows", "issue_description": "anka-213 commented on 19 Dec 2016\nSteps to reproduce the problem:\nRecord a flow with mitmproxy -T --host from a specific application\nOpen one of the flows (I can mail you an example)\nWhole program closes with the following error message\nAny other comments? What have you tried so far?\nTraceback (most recent call last):                                                                   \n  File \"/usr/lib/python3.5/site-packages/mitmproxy/contentviews.py\", line 657, in get_content_view\n    ret = viewmode(data, **metadata)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/contentviews.py\", line 138, in __call__\n    return content_types_map[ct][0](data, **metadata)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/contentviews.py\", line 228, in __call__\n    pj = pretty_json(data)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/contentviews.py\", line 55, in pretty_json\n    p = json.loads(s.decode('utf-8'))\nAttributeError: 'str' object has no attribute 'decode'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/master.py\", line 482, in run\n    self.loop.run()\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/window.py\", line 86, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/flowlist.py\", line 385, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/lib/python3.5/site-packages/urwid/listbox.py\", line 985, in keypress\n    key = focus_widget.keypress((maxcol,),key)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/flowlist.py\", line 238, in keypress\n    self.master.view_flow(self.flow)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/master.py\", line 576, in view_flow\n    flowview.FlowView(self, self.state, flow, tab_offset),\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/flowview.py\", line 143, in __init__\n    tab_offset\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/tabs.py\", line 31, in __init__\n    self.show()\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/tabs.py\", line 69, in show\n    body = self.tabs[self.tab_offset][1](),\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/flowview.py\", line 166, in view_request\n    return self.conn_text(self.flow.request)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/flowview.py\", line 260, in conn_text\n    msg, body = self.content_view(viewmode, conn)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/flowview.py\", line 203, in content_view\n    flow_modify_cache_invalidation\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/utils.py\", line 32, in get\n    ret = gen(*args)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/flowview.py\", line 200, in <lambda>\n    lambda *args: self._get_content_view(message, *args),\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/console/flowview.py\", line 208, in _get_content_view\n    viewmode, message\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/contentviews.py\", line 635, in get_message_content_view\n    viewmode, content, headers=headers, query=query\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/contentviews.py\", line 665, in get_content_view\n    _, content = get(\"Raw\")(data, **metadata)\n  File \"/usr/lib/python3.5/site-packages/mitmproxy/contentviews.py\", line 156, in __call__\n    return \"Raw\", format_text(strutils.bytes_to_escaped_str(data, True))\n  File \"/usr/lib/python3.5/site-packages/netlib/strutils.py\", line 88, in bytes_to_escaped_str\n    raise ValueError(\"data must be bytes, but is {}\".format(data.__class__.__name__))\nValueError: data must be bytes, but is str\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n        https://github.com/mitmproxy/mitmproxy\nShutting down...\nOnly some of the Request/Response-pairs causes the crash. It also crashes when loading a saved version of the flow.\nSystem information\nMitmproxy version: 0.18.2\nPython version: 3.5.2\nPlatform: Linux-4.7.2-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.0.2h 3 May 2016\nLinux distro: arch", "issue_status": "Closed", "issue_reporting_time": "2016-12-19T08:48:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "826": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1869", "issue_id": "#1869", "issue_summary": "Traceback by running smoke tests", "issue_description": "Member\nKriechi commented on 17 Dec 2016\n127.0.0.1:38112: Traceback (most recent call last):\n  File \"/home/ubuntu/mitmproxy/mitmproxy/net/tcp.py\", line 763, in connect\n    connection.connect(self.address())\nTimeoutError: [Errno 110] Connection timed out\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/base.py\", line 180, in connect\n    self.server_conn.connect()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/connections.py\", line 206, in connect\n    tcp.TCPClient.connect(self)\n  File \"/home/ubuntu/mitmproxy/mitmproxy/net/tcp.py\", line 768, in connect\n    (self.address.host, err)\nmitmproxy.exceptions.TcpException: Error connecting to \"godaddy.com\": [Errno 110] Connection timed out\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 195, in handle_regular_connect\n    layer()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 376, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 451, in _establish_tls_with_client_and_server\n    self.ctx.connect()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 397, in connect\n    self.ctx.connect()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/base.py\", line 184, in connect\n    repr(self.server_conn.address), str(e)\nmitmproxy.exceptions.ProtocolException: Server connection to godaddy.com:443 failed: Error connecting to \"godaddy.com\": [Errno 110] Connection timed out\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/ubuntu/mitmproxy/mitmproxy/net/tcp.py\", line 190, in write\n    r = self.o.write(v)\n  File \"/usr/lib/python3.5/socket.py\", line 593, in write\n    return self._sock.send(b)\nBrokenPipeError: [Errno 32] Broken pipe\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 432, in send_error_response\n    self.send_response(response)\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 43, in send_response\n    self.send_response_headers(response)\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 43, in send_response_headers\n    self.client_conn.wfile.write(raw)\n  File \"/home/ubuntu/mitmproxy/mitmproxy/net/tcp.py\", line 194, in write\n    raise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: [Errno 32] Broken pipe\n127.0.0.1:38112: clientdisconnect\nmaybe related to #1867", "issue_status": "Closed", "issue_reporting_time": "2016-12-17T08:59:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "827": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1867", "issue_id": "#1867", "issue_summary": "Traceback when client disconnects before error message is sent.", "issue_description": "Member\nmhils commented on 17 Dec 2016\nsend_error_response does not catch all kinds of errors:\n127.0.0.1:52651: Traceback (most recent call last):\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\net\\tcp.py\", line 763, in connect\n    connection.connect(self.address())\nTimeoutError: [WinError 10060] Ein Verbindungsversuch ist fehlgeschlagen, da die Gegenstelle nach einer bestimmten Zeitspanne nicht richtig reagiert hat, oder die hergestellte Verbindung war fehlerhaft, da der verbundene Host nicht reagiert hat\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\base.py\", line 180, in connect\n    self.server_conn.connect()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\connections.py\", line 206, in connect\n    tcp.TCPClient.connect(self)\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\net\\tcp.py\", line 768, in connect\n    (self.address.host, err)\nmitmproxy.exceptions.TcpException: Error connecting to \"baidu.com\": [WinError 10060] Ein Verbindungsversuch ist fehlgeschlagen, da die Gegenstelle nach einer bestimmten Zeitspanne nicht richtig reagiert hat, oder die hergestellte Verbindung war fehlerhaft, da der verbundene Host nicht reagiert hat\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\http.py\", line 311, in _process_flow\n    f.request.scheme\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\http.py\", line 453, in establish_server_connection\n    self.connect()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\tls.py\", line 397, in connect\n    self.ctx.connect()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\tls.py\", line 397, in connect\n    self.ctx.connect()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\base.py\", line 184, in connect\n    repr(self.server_conn.address), str(e)\nmitmproxy.exceptions.ProtocolException: Server connection to baidu.com:443 failed: Error connecting to \"baidu.com\": [WinError 10060] Ein Verbindungsversuch ist fehlgeschlagen, da die Gegenstelle nach einer bestimmten Zeitspanne nicht richtig reagiert hat, oder die hergestellte Verbindung war fehlerhaft, da der verbundene Host nicht reagiert hat\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\net\\tcp.py\", line 188, in write\n    return self.o.sendall(v)\n  File \"c:\\python35\\lib\\site-packages\\OpenSSL\\SSL.py\", line 1286, in sendall\n    self._raise_ssl_error(self._ssl, result)\n  File \"c:\\python35\\lib\\site-packages\\OpenSSL\\SSL.py\", line 1166, in _raise_ssl_error\n    raise SysCallError(errno, errorcode.get(errno))\nOpenSSL.SSL.SysCallError: (10053, 'WSAECONNABORTED')\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\http.py\", line 432, in send_error_response\n    self.send_response(response)\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\http.py\", line 43, in send_response\n    self.send_response_headers(response)\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\http1.py\", line 43, in send_response_headers\n    self.client_conn.wfile.write(raw)\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\net\\tcp.py\", line 194, in write\n    raise exceptions.TcpDisconnect(str(e))\nmitmproxy.exceptions.TcpDisconnect: (10053, 'WSAECONNABORTED')", "issue_status": "Closed", "issue_reporting_time": "2016-12-17T02:31:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "828": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1866", "issue_id": "#1866", "issue_summary": "Options documentation", "issue_description": "Member\ncortesi commented on 17 Dec 2016\nWe now have a good, centralised account of all mitmproxy's options, along with the associated types. We should use this to generate Options documentation, and add a function to dump all default options in the terminal.", "issue_status": "Closed", "issue_reporting_time": "2016-12-16T21:54:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "829": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1859", "issue_id": "#1859", "issue_summary": "How to make mtmproxy as a \"normal proxy\" without middle man mode with https connection?", "issue_description": "JavaSCU commented on 15 Dec 2016 \u2022\nedited\nthks.", "issue_status": "Closed", "issue_reporting_time": "2016-12-15T05:20:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "830": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1858", "issue_id": "#1858", "issue_summary": "flow.request.urlencoded_form does not work with Unicode parameters in Python 3", "issue_description": "Contributor\nrofreg commented on 15 Dec 2016\nSteps to reproduce the problem:\nSave the following as test_script.py:\nimport mitmproxy\nimport json\n\ndef request(flow):\n  if flow.request.urlencoded_form:\n    mitmproxy.ctx.log(str(flow.request.urlencoded_form))\n  else:\n    mitmproxy.ctx.log(\"No form parameters found\")\nLaunch mitmdump with mitmdump -s test_script.py\nPoint your browser to https://secure.splitwise.com/login, and try to log in with any username or password (don't worry, you don't need an actual account)\nThe expected behavior is for flow.request.urlencoded_form to return a list of form parameters that includes ('utf8', '\u2713') (or (b'utf8', b'%E2%9C%93')). Instead, flow.request.urlencoded_form returns no parameters at all, because it throws an exception trying to process the Unicode \u2713 symbol that is included in the form.\nAny other comments? What have you tried so far?\nA semi-working fix is to update this line to the following:\nreturn tuple(mitmproxy.net.http.url.decode(str(self.content)))\nIt appears that mitmproxy.net.http.url.decode chokes when trying to process a parameter of the bytes type, but it succeeds when processing a parameter of the str type. Unfortunately, this also changes the type of the returned tuples from bytes to str, which probably isn't backwards-compatible with existing usage of mitmproxy. Not sure if there's an easy way to fix that \u2013 I plan to keep investigating, but if anyone has suggestions or expertise, I'd appreciate the help!\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.2\nPlatform: Darwin-16.1.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j  26 Sep 2016\nMac version: 10.12.1 ('', '', '') x86_64\n/cc @jhottenstein", "issue_status": "Closed", "issue_reporting_time": "2016-12-14T21:57:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "831": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1855", "issue_id": "#1855", "issue_summary": "Intercepting tcp connections with TLS 1.2 and custom certificates", "issue_description": "bottee commented on 14 Dec 2016\nWhen trying to intercept non HTTPS tcp connections with TLS 1.2 in a local network without DNS name, mitmproxy still creates and sends it's own certificate and following error happens:\nError in processing of request from xxx.xxx.xxx.xxx:49811\nTraceback (most recent call last):\nFile \"/usr/lib/python3.4/site-packages/mitmproxy/proxy/server.py\", line 120, in handle\nroot_layer()\nFile \"/usr/lib/python3.4/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 11, in call\nlayer()\nFile \"/usr/lib/python3.4/site-packages/mitmproxy/protocol/tls.py\", line 384, in call\nself._establish_tls_with_client_and_server()\nFile \"/usr/lib/python3.4/site-packages/mitmproxy/protocol/tls.py\", line 470, in _establish_tls_with_client_and_server\nsix.reraise(*sys.exc_info())\nFile \"/usr/lib/python3.4/site-packages/six.py\", line 686, in reraise\nraise value\nFile \"/usr/lib/python3.4/site-packages/mitmproxy/protocol/tls.py\", line 461, in _establish_tls_with_client_and_server\nself.ctx.connect()\nFile \"/usr/lib/python3.4/site-packages/mitmproxy/protocol/base.py\", line 181, in connect\nraise exceptions.ProtocolException(\"Cannot connect to server, no server address given.\")\nmitmproxy.exceptions.ProtocolException: Cannot connect to server, no server address given.\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/usr/lib/python3.4/site-packages/netlib/tcp.py\", line 918, in connection_thread\nself.handle_client_connection(connection, client_address)\nFile \"/usr/lib/python3.4/site-packages/mitmproxy/proxy/server.py\", line 66, in handle_client_connection\nh.handle()\nFile \"/usr/lib/python3.4/site-packages/mitmproxy/proxy/server.py\", line 144, in handle\nself.client_conn.send(http1.assemble_response(error_response))\nFile \"/usr/lib/python3.4/site-packages/netlib/http/http1/assemble.py\", line 24, in assemble_response\nhead = assemble_response_head(response)\nFile \"/usr/lib/python3.4/site-packages/netlib/http/http1/assemble.py\", line 30, in assemble_response_head\nfirst_line = _assemble_response_line(response.data)\nFile \"/usr/lib/python3.4/site-packages/netlib/http/http1/assemble.py\", line 97, in _assemble_response_line\nresponse_data.reason,\nTypeError: unsupported operand type(s) for %: 'bytes' and 'tuple'\nSteps to reproduce the problem:\ncreating self signed server cert.pem and client certificate client-cert.pem\n2.\nclient and server are running in local network without dns.\n3.\nmitmproxy --tcp xxx.xxx.xxx.xxx:yyyy --cert *=./cert.pem --client-cert ./client-cert.pem\nAny other comments? What have you tried so far?\nI also tried with -cadir ./ and a corresponding ca.pem but this should not be needed and it is in our real situation not available, also. Still I get the same error.\nSystem information\nMitmproxy version: 0.18.2\nPython version: 3.4.5\nPlatform: Linux-4.4.36-8-default-x86_64-with-SuSE-42.2-x86_64\nSSL version: OpenSSL 1.0.2j-fips 26 Sep 2016\nLinux distro: openSUSE 42.2 x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-12-14T14:45:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "832": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1854", "issue_id": "#1854", "issue_summary": "EINVAL [Error 22] when binding to loopback address", "issue_description": "ajxchapman commented on 14 Dec 2016\nmitmproxy and mitmdump error with Errno 22 (EINVAL) when proxying connections if bound to the loopback address (127.0.0.1).\nSteps to reproduce the problem:\nUsing mitmdump bound to 127.0.0.1\n# mitmdump -b 127.0.0.1 -p 8000\nProxy server listening at http://127.0.0.1:8000\n127.0.0.1:33764: clientconnect\n127.0.0.1:33764: GET http://www.example.com/\n << Server connection to www.example.com:80 failed: Error connecting to \"www.example.com\": [Errno 22] Invalid argument\n127.0.0.1:33764: clientdisconnect\nConnecting with wget\n# http_proxy=http://127.0.0.1:8000 wget http://www.example.com\n--2016-12-14 08:29:09--  http://www.example.com/\nConnecting to 127.0.0.1:8000... connected.\nProxy request sent, awaiting response... 502 Bad Gateway\n2016-12-14 08:29:10 ERROR 502: Bad Gateway.\nHowever, if you bind to 0.0.0.0 or a specific interface IP address it works as expected:\n# mitmdump -b 0.0.0.0 -p 8000\nProxy server listening at http://0.0.0.0:8000\n127.0.0.1:33766: clientconnect\n127.0.0.1:33766: GET http://www.example.com/\n              << 200 OK 1k\n127.0.0.1:33766: clientdisconnect\n# http_proxy=http://127.0.0.1:8000 wget http://www.example.com\n--2016-12-14 08:31:36--  http://www.example.com/\nConnecting to 127.0.0.1:8000... connected.\nProxy request sent, awaiting response... 200 OK\nLength: 1270 (1.2K) [text/html]\nSaving to: \u2018index.html.5\u2019\n\nindex.html.5                            100%[============================================================================>]   1.24K  --.-KB/s    in 0.001s\n\n2016-12-14 08:31:37 (2.32 MB/s) - \u2018index.html.5\u2019 saved [1270/1270]\nSystem information\nMitmproxy version: 0.18.2\nPython version: 2.7.12\nPlatform: Linux-4.4.0-53-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2016-12-14T08:36:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "833": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1853", "issue_id": "#1853", "issue_summary": "can you upload the source to pypi again?", "issue_description": "cytec commented on 14 Dec 2016\nI'm currently working on a Synology SPK for mitmproxy which will allow users of Synology Devices an easy installation. more info on that toppic can be found here: SynoCommunity/spksrc#2554 Sadly i noticed that you've stopped uploading the source code to pypi with version 0.15. Since spksrc (the framework im using) skips wheel files because pip isn't able to distinguish between the different types of wheels (pure-python, manylinux etc) as a temp fix for debugging i linked to the github release but it would be nice to see the source in pypi again.\nThank you!", "issue_status": "Closed", "issue_reporting_time": "2016-12-13T20:04:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "834": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1850", "issue_id": "#1850", "issue_summary": "mitmproxy appears to use sticky auth by default", "issue_description": "eltone commented on 13 Dec 2016\nSteps to reproduce the problem:\nStart mitmproxy with no flags\ncurl -v -u testuser:testpass --proxy localhost:8080 http://httpbin.org/basic-auth/testuser/testpass\ncurl -v --proxy localhost:8080 http://httpbin.org/get\nExpected Outcome\nThe second request does not contain an authorization header.\nActual Outcome\nThe second request does contain an authorization header.\nAny other comments? What have you tried so far?\nThis is causing issues when proxying requests to a domain where the auth type changes (context switching). The behaviour observed above does not occur when running curl without the proxy.\nSystem information\nMitmproxy version: 0.18.2\nPython version: 2.7.12\nPlatform: Darwin-14.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.10.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-12-13T12:46:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "835": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1849", "issue_id": "#1849", "issue_summary": "mitmproxy crash when viewing", "issue_description": "azixMcAze commented on 13 Dec 2016\nmitmproxy crash when inspecting some http requests. I saved one of the offending request in a file.\nSteps to reproduce the problem:\nPut this in a file and load it in mitmproxy :\n2209:8:response,654:6:reason,4:Cr\u00e9e,13:timestamp_end,17:1481577761.663623^12:http_version,8:HTTP/1.1,11:status_code,3:201#15:timestamp_start,17:1481577761.655837^7:headers,299:30:6:Server,17:Apache-Coyote/1.1,]35:27:Access-Control-Allow-Origin,1:*,]58:28:Access-Control-Allow-Methods,22:GET, POST, DELETE, PUT,]48:28:Access-Control-Allow-Headers,12:Content-Type,]36:12:Content-Type,16:application/json,]24:14:Content-Length,3:183,]40:4:Date,29:Mon, 12 Dec 2016 21:22:41 GMT,]]7:content,183:{\"kind\":null,\"date\":null,\"zone\":null,\"subzone\":null,\"productId\":\"dc16bb53-8ecb-475f-9cf2-505ec2198406.json\",\"content\":\"kind=test&zone=OR1&subzone=OR1&date=2016-12-12%2022%3A22%3A41Z\"},}4:type,4:http,5:error,0:~6:marked,5:false!7:version,13:1:0#2:18#1:2#]11:client_conn,215:15:ssl_established,5:false!10:clientcert,0:~13:timestamp_end,17:1481577762.199529^7:address,53:7:address,20:9:127.0.0.1,5:53415#]8:use_ipv6,5:false!}15:timestamp_start,17:1481577761.304023^19:timestamp_ssl_setup,0:~}2:id,36:03f12262-6ea4-4c97-b2f7-8a6abdd1de4a,11:intercepted,5:false!7:request,706:9:is_replay,5:false!4:port,4:8080#12:stickycookie,5:false!13:timestamp_end,17:1481577761.367619^4:path,37:/log_api/api/sessions/666667/products,15:timestamp_start,17:1481577761.365294^7:headers,294:97:6:Accept,84:application/json, application/xml, text/json, text/x-json, text/javascript, text/xml,]37:10:User-Agent,19:RestSharp/105.1.0.0,]53:12:Content-Type,33:application/x-www-form-urlencoded,]23:14:Content-Length,2:62,]24:4:Host,13:10.21.255.200,]36:15:Accept-Encoding,13:gzip, deflate,]]7:content,62:kind=test&zone=OR1&subzone=OR1&date=2016-12-12%2022%3A22%3A41Z,6:method,4:POST,4:host,13:10.21.255.200,17:first_line_format,8:relative,12:http_version,8:HTTP/1.1,6:scheme,4:http,10:stickyauth,5:false!}11:server_conn,426:15:ssl_established,5:false!14:source_address,56:7:address,23:11:10.57.11.92,5:53477#]8:use_ipv6,5:false!}13:timestamp_end,17:1481577762.199249^7:address,57:7:address,24:13:10.21.255.200;4:8080#]8:use_ipv6,5:false!}4:cert,0:~3:sni,0:~15:timestamp_start,17:1481577761.447825^19:timestamp_ssl_setup,0:~10:ip_address,57:7:address,24:13:10.21.255.200,4:8080#]8:use_ipv6,5:false!}3:via,0:~19:timestamp_tcp_setup,16:1481577761.44925^}}\nopen this flow with the key enter\nmitmproxy crashes with the following error :\nTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/master.py\", line 482, in run\nself.loop.run()\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\nself.event_loop.run()\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\nself._loop()\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 719, in _loop\nself._watch_filesfd\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/raw_display.py\", line 393, in\nevent_loop, callback, self.get_available_raw_input())\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/raw_display.py\", line 493, in parse_input\ncallback(processed, processed_codes)\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 403, in _update\nself.process_input(keys)\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 503, in process_input\nk = self._topmost_widget.keypress(self.screen_size, k)\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/window.py\", line 86, in keypress\nk = super(self.class, self).keypress(size, k)\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/container.py\", line 1128, in keypress\nreturn self.body.keypress( (maxcol, remaining), key )\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/flowlist.py\", line 385, in keypress\nreturn urwid.ListBox.keypress(self, size, key)\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/listbox.py\", line 987, in keypress\nkey = focus_widget.keypress((maxcol,),key)\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/flowlist.py\", line 238, in keypress\nself.master.view_flow(self.flow)\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/master.py\", line 577, in view_flow\nflowview.FlowViewHeader(self, flow),\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/flowview.py\", line 112, in init\nhostheader=self.master.options.showhost\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/common.py\", line 463, in format_flow\nreturn flowcache.get(raw_format_flow, tuple(sorted(d.items())))\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/utils.py\", line 32, in get\nret = gen(*args)\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/common.py\", line 394, in raw_format_flow\nresp.append(fcol(f[\"resp_reason\"], ccol))\nFile \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/common.py\", line 113, in fcol\ns = six.text_type(s)\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe9 in position 2: ordinal not in range(128)\nAny other comments? What have you tried so far?\nReplacing \"Cr\u00e9e\" with \"Cree\" in the file before loading it prevents the crash\nSystem information\nMitmproxy version: 0.18.2\nPython version: 2.7.12\nPlatform: Darwin-14.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.1.0c 10 Nov 2016\nMac version: 10.10.5 ('', '', '') x86_64\nOSX in French", "issue_status": "Closed", "issue_reporting_time": "2016-12-12T21:33:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "836": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1848", "issue_id": "#1848", "issue_summary": "mitmproxy sysinfo: show git tag/ref/commit", "issue_description": "Member\nKriechi commented on 12 Dec 2016\nIt would be nice if mitmproxy --sysinfo would also display the current git tag/ref/commit when running from source. Currently only 0.19 is displayed, which makes it a bit undeterministic what code is actually running. We can probably reuse some code from rtool here.\n1", "issue_status": "Closed", "issue_reporting_time": "2016-12-12T11:53:13Z", "fixed_by": "#1941", "pull_request_summary": "provide git information with --version", "pull_request_description": "Member\nKriechi commented on 19 Jan 2017\nfixes #1848\n1", "pull_request_status": "Merged", "issue_fixed_time": "2017-01-19T22:25:33Z", "files_changed": [["1", ".gitignore"], ["2", "docs/install.rst"], ["2", "issue_template.md"], ["8", "mitmproxy/test/tutils.py"], ["7", "mitmproxy/tools/cmdline.py"], ["5", "mitmproxy/tools/main.py"], ["10", "mitmproxy/utils/__init__.py"], ["2", "mitmproxy/utils/bits.py"], ["21", "mitmproxy/utils/debug.py"], ["5", "test/mitmproxy/addons/test_script.py"], ["8", "test/mitmproxy/utils/test_debug.py"], ["4", "tox.ini"]]}, "837": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1847", "issue_id": "#1847", "issue_summary": "Traceback: Connection timed out while running smoke tests", "issue_description": "Member\nKriechi commented on 12 Dec 2016\nThis was taken from the event log (self.proxy.tmaster.tlog)\n127.0.0.1:59424: clientconnect\n127.0.0.1:59424: Set new server address: ('nationalgeographic.com', 443)\n127.0.0.1:59424: serverconnect\n  -> nationalgeographic.com:443\n127.0.0.1:59386: Establish TLS with client\n127.0.0.1:59386: ALPN for client: b'http/1.1'\n127.0.0.1:59386: Server connection to sakura.ne.jp:443 failed: Error connecting to \"sakura.ne.jp\": [Errno 110] Connection timed out\n127.0.0.1:59386: Traceback (most recent call last):\n  File \"/home/ubuntu/mitmproxy/mitmproxy/net/tcp.py\", line 763, in connect\n    connection.connect(self.address())\nTimeoutError: [Errno 110] Connection timed out\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/base.py\", line 180, in connect\n    self.server_conn.connect()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/connections.py\", line 206, in connect\n    tcp.TCPClient.connect(self)\n  File \"/home/ubuntu/mitmproxy/mitmproxy/net/tcp.py\", line 768, in connect\n    (self.address.host, err)\nmitmproxy.exceptions.TcpException: Error connecting to \"sakura.ne.jp\": [Errno 110] Connection timed out\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 177, in __call__\n    if not self._process_flow(flow):\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 246, in _process_flow\n    return self.handle_regular_connect(f)\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 204, in handle_regular_connect\n    layer()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 376, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 451, in _establish_tls_with_client_and_server\n    self.ctx.connect()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 397, in connect\n    self.ctx.connect()\n  File \"/home/ubuntu/mitmproxy/mitmproxy/proxy/protocol/base.py\", line 184, in connect\n    repr(self.server_conn.address), str(e)\nmitmproxy.exceptions.ProtocolException: Server connection to sakura.ne.jp:443 failed: Error connecting to \"sakura.ne.jp\": [Errno 110] Connection timed out\n\n127.0.0.1:59386: clientdisconnect\nAny other comments? What have you tried so far?\nExpected behaviour:\nDon't show a traceback on this kind of error. Fail in more safe and descriptive manor.\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.2\nPlatform: Linux-4.4.0-47-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2016-12-12T11:50:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "838": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1846", "issue_id": "#1846", "issue_summary": "Cannot validate certificate hostname without SNI", "issue_description": "anka-213 commented on 12 Dec 2016\nI get the following error message (example.com replaced with actual website) and can't figure out why and what to do about it:\n<< Cannot establish TLS with webmail.chalmers.se:443 (sni: None): TlsException('Cannot validate certificate hostname without SNI',)\nSteps to reproduce the problem:\nmitmdump -vw filename\nConnect (add as proxy) with android phone and install certificate (using mitmproxy.it)\nConnect to some server\nAny other comments? What have you tried so far?\nIt seems to work for some https-sites but not others. Examples that cause the errors are webmail.chalmers.se and m.handelsbanken.se.\nSystem information\nMitmproxy version: 0.18.2\nPython version: 3.5.2\nPlatform: Linux-4.7.2-1-ARCH-x86_64-with-arch\nSSL version: OpenSSL 1.0.2h  3 May 2016\nLinux distro: arch  \n4", "issue_status": "Closed", "issue_reporting_time": "2016-12-12T11:39:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "839": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1844", "issue_id": "#1844", "issue_summary": "traceback while running smoke tests", "issue_description": "Member\nKriechi commented on 12 Dec 2016 \u2022\nedited\nThis was taken from the event log (self.proxy.tmaster.tlog)\n127.0.0.1:43900: clientconnect\n127.0.0.1:43900: Set new server address: ('cloudfront.net', 443)\n127.0.0.1:43900: serverconnect\n  -> cloudfront.net:443\n127.0.0.1:43900: Establish TLS with client\n127.0.0.1:43900: ALPN for client: b'http/1.1'\n127.0.0.1:43900: Server connection to cloudfront.net:443 failed: Error connecting to \"cloudfront.net\": [Errno -3] Temporary failure in name resolution\n127.0.0.1:43900: Traceback (most recent call last):\n  File \".../mitmproxy/mitmproxy/net/tcp.py\", line 763, in connect\n    connection.connect(self.address())\nsocket.gaierror: [Errno -3] Temporary failure in name resolution\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \".../mitmproxy/mitmproxy/proxy/protocol/base.py\", line 180, in connect\n    self.server_conn.connect()\n  File \".../mitmproxy/mitmproxy/connections.py\", line 206, in connect\n    tcp.TCPClient.connect(self)\n  File \".../mitmproxy/mitmproxy/net/tcp.py\", line 768, in connect\n    (self.address.host, err)\nmitmproxy.exceptions.TcpException: Error connecting to \"cloudfront.net\": [Errno -3] Temporary failure in name resolution\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \".../mitmproxy/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \".../mitmproxy/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \".../mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \".../mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \".../mitmproxy/mitmproxy/proxy/protocol/http.py\", line 177, in __call__\n    if not self._process_flow(flow):\n  File \".../mitmproxy/mitmproxy/proxy/protocol/http.py\", line 246, in _process_flow\n    return self.handle_regular_connect(f)\n  File \".../mitmproxy/mitmproxy/proxy/protocol/http.py\", line 204, in handle_regular_connect\n    layer()\n  File \".../mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 376, in __call__\n    self._establish_tls_with_client_and_server()\n  File \".../mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 451, in _establish_tls_with_client_and_server\n    self.ctx.connect()\n  File \".../mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 397, in connect\n    self.ctx.connect()\n  File \".../mitmproxy/mitmproxy/proxy/protocol/base.py\", line 184, in connect\n    repr(self.server_conn.address), str(e)\nmitmproxy.exceptions.ProtocolException: Server connection to cloudfront.net:443 failed: Error connecting to \"cloudfront.net\": [Errno -3] Temporary failure in name resolution\n\n127.0.0.1:43900: clientdisconnect\nAny other comments? What have you tried so far?\nExpected behaviour:\nDon't show a traceback on this kind of error. Fail in more safe and descriptive manor.\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.2\nPlatform: Linux-4.4.0-53-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2016-12-11T22:02:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "840": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1843", "issue_id": "#1843", "issue_summary": "Crash while running smoke tests", "issue_description": "Member\nKriechi commented on 12 Dec 2016\nTraceback (most recent call last):\n  File \"...mitmproxy/mitmproxy/net/tcp.py\", line 211, in read\n    data = self.o.read(rlen)\n  File \"...mitmproxy/venv3.5/lib/python3.5/site-packages/OpenSSL/SSL.py\", line 1304, in recv\n    self._raise_ssl_error(self._ssl, result)\n  File \"...mitmproxy/venv3.5/lib/python3.5/site-packages/OpenSSL/SSL.py\", line 1166, in _raise_ssl_error\n    raise SysCallError(errno, errorcode.get(errno))\nOpenSSL.SSL.SysCallError: (54, 'ECONNRESET')\n\nDuring handling of the above exception, another exception occurred:                                                                                   [59/220]\n\nTraceback (most recent call last):\n  File \"...mitmproxy/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"...mitmproxy/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"...mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"...mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"...mitmproxy/mitmproxy/proxy/protocol/http.py\", line 177, in __call__\n    if not self._process_flow(flow):\n  File \"...mitmproxy/mitmproxy/proxy/protocol/http.py\", line 246, in _process_flow\n    return self.handle_regular_connect(f)\n  File \"...mitmproxy/mitmproxy/proxy/protocol/http.py\", line 204, in handle_regular_connect\n    layer()\n  File \"...mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 383, in __call__\n    layer()\n  File \"...mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"...mitmproxy/mitmproxy/proxy/protocol/http.py\", line 177, in __call__\n    if not self._process_flow(flow):\n  File \"...mitmproxy/mitmproxy/proxy/protocol/http.py\", line 228, in _process_flow\n    request = self.read_request_headers(f)\n  File \"...mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 14, in read_request_headers\n    http1.read_request_head(self.client_conn.rfile)\n  File \"...mitmproxy/mitmproxy/net/http/http1/read.py\", line 52, in read_request_head\n    form, method, scheme, host, port, path, http_version = _read_request_line(rfile)\n  File \"...mitmproxy/mitmproxy/net/http/http1/read.py\", line 240, in _read_request_line\n    line = _get_first_line(rfile)\n  File \"...mitmproxy/mitmproxy/net/http/http1/read.py\", line 227, in _get_first_line\n    line = rfile.readline()\n  File \"...mitmproxy/mitmproxy/net/tcp.py\", line 251, in readline\n    ch = self.read(1)\n  File \"...mitmproxy/mitmproxy/net/tcp.py\", line 233, in read\n    raise exceptions.TlsException(str(e))\nmitmproxy.exceptions.TlsException: (54, 'ECONNRESET')\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.2\nPlatform: Darwin-16.1.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.12.1 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-12-11T20:31:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "841": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1833", "issue_id": "#1833", "issue_summary": "mitmproxy display \"\\t\" as \"?\" in request's UA", "issue_description": "hexucheng commented on 10 Dec 2016\nMy request's UA has \"\\t\" and mitmproxy display it as \"?\", usually it display as blank space like fiddler or charles.", "issue_status": "Closed", "issue_reporting_time": "2016-12-09T19:25:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "842": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1832", "issue_id": "#1832", "issue_summary": "Why HTTP/2 disabled while openssl version is 1.1.0 ?", "issue_description": "hexucheng commented on 10 Dec 2016\nubuntu 14.04.5\nopenssl 1.1.0c\nmitmproxy 0.18.2\npython 2.7.6\ncryptography 1.5.3\nI always receive the following warning:HTTP/2 disabled. OpenSSL 1.0.2+ required, it's confused me because my openssl version is 1.1.0, can someone tell me why ?", "issue_status": "Closed", "issue_reporting_time": "2016-12-09T18:38:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "843": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1830", "issue_id": "#1830", "issue_summary": "Pressing g/G crashes mitmproxy when flow list is empty", "issue_description": "Member\nmhils commented on 9 Dec 2016\nSteps to reproduce the problem:\nmitmproxy\ng or G\nTraceback (most recent call last):\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/master.py\", line 290, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/tools/console/flowlist.py\", line 360, in keypress\n    self.master.view.focus.index = len(self.master.view) - 1\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/addons/view.py\", line 364, in index\n    raise ValueError(\"Index out of view bounds\")\nValueError: Index out of view bounds", "issue_status": "Closed", "issue_reporting_time": "2016-12-09T17:56:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "844": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1829", "issue_id": "#1829", "issue_summary": "Console: Clearing content view crashes mitmproxy", "issue_description": "Member\nmhils commented on 9 Dec 2016\nSteps to reproduce the problem:\nmitmproxy\nn g enter r enter tab m C\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/tools/console/master.py\", line 290, in run\n    self.loop.run()\n  File \"/home/user/venv/lib64/python3.5/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/user/venv/lib64/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/user/venv/lib64/python3.5/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/user/venv/lib64/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/user/venv/lib64/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/user/venv/lib64/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/user/venv/lib64/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/user/venv/lib64/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/media/sf_git/mitmproxy/mitmproxy/tools/console/window.py\", line 84, in keypress\n    k = super().keypress(size, k)\n  File \"/home/user/venv/lib64/python3.5/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/media/sf_git/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 132, in keypress\n    return self.master.ab.keypress(*args, **kwargs)\n  File \"/media/sf_git/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 85, in keypress\n    self.prompt_execute(k)\n  File \"/media/sf_git/mitmproxy/mitmproxy/tools/console/statusbar.py\", line 110, in prompt_execute\n    msg = p(txt, *args)\n  File \"/media/sf_git/mitmproxy/mitmproxy/tools/console/flowview.py\", line 486, in change_this_display_mode\n    name = contentviews.get_by_shortcut(t).name\nAttributeError: 'NoneType' object has no attribute 'name'\nAny other comments? What have you tried so far?\nchange_this_display_mode has not logic to handle this case.\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.1\nPlatform: Linux-4.8.12-1-default-x86_64-with-glibc2.3.4\nSSL version: OpenSSL 1.0.2j-fips 26 Sep 2016", "issue_status": "Closed", "issue_reporting_time": "2016-12-09T17:52:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "845": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1828", "issue_id": "#1828", "issue_summary": "How to configure file system watchdog (away) for attached scripts", "issue_description": "RobbBienert commented on 9 Dec 2016\nHi folks,\nI upgraded my local mitmproxy using pip from 0.17 to 0.18.2 and now my script does not work anymore. The mitmproxy is used to connect a local machine with a corporate proxy and measure the traffic in between. The mitmproxy (to be exact, the mitmdump program) is called like this:\n/usr/local/bin/mitmdump -p 9090 -U 'http://proxy:8080' -s 'tracer.py argument'\nThe tracer.py has three functions implemented as described in the Events Documentation:\ndef start():\n    # should be called once on startup\n    # so do some initialization here\n\ndef response(flow):\n    # track the response information\n\ndef done():\n    # called at script shutdown\nIn the stdout I see a lot of lines telling me Reloading script: tracer.py and if I add a print('hello from start()') to the start() function I also see this message in stdout, which means that start() gets executed more than once. My search for Reloading script pointed me to the function tick in addons/script.py, which seems to be running in a certain interval. The problem I can address so far here is that what happens when self.should_reload.is_set() returns True while the proxy is running.\nshould_reloads internal state is set to False by clear() in line 187, but it could be set to True again by reload() in line 175. reload is passed as callback to a ReloadHandler in line 204, which is connected to a file system watchdog. This sounds similar to the Scripting Overview,\nMitmprxoy monitors scripts for modifications, and reloads them on change. When this happens, the script is shut down (the done event is called), and the new instance is started up as if the script had just been loaded (the start and configure events are called).\nwith the exception, that the ReloadHandler reloads the script if anything in the observed directory is changed. So I propose not only to filter directories and files starting with a ., but to watch only for files ending with .py.\nSystem information\nThe output of \"mitmdump --sysinfo\":\nMitmproxy version: 0.18.2\nPython version: 2.7.12\nPlatform: Linux-4.4.0-42-generic-x86_64-with-LinuxMint-18-sarah\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: LinuxMint 18 sarah", "issue_status": "Closed", "issue_reporting_time": "2016-12-09T17:28:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "846": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1825", "issue_id": "#1825", "issue_summary": "Tests from master failing with pyparsing error", "issue_description": "swiftugandan commented on 8 Dec 2016\nSteps to reproduce the problem:\ncloned repo\ninstalled and tried to run any of the executables (mitmproxy, mitmdump) ... failed\nrun py.test, failed\nAny other comments? What have you tried so far?\n================================================================================================= ERRORS =================================================================================================\n____________________________________________________________________________ ERROR collecting test/mitmproxy/test_cmdline.py _____________________________________________________________________________\ntest/mitmproxy/test_cmdline.py:2: in\nfrom mitmproxy.tools import cmdline\nmitmproxy/tools/cmdline.py:12: in\nfrom mitmproxy.addons import view\nmitmproxy/addons/view.py:91: in\nmatchall = flowfilter.parse(\".\")\nmitmproxy/flowfilter.py:503: in parse\nflt = bnf.parseString(s, parseAll=True)[0]\nvenv3.5/lib/python3.5/site-packages/pyparsing.py:1607: in parseString\nloc, tokens = self._parse( instring, 0 )\nvenv3.5/lib/python3.5/site-packages/pyparsing.py:1405: in _parseNoCache\ntokens = fn( instring, tokensStart, retTokens )\nvenv3.5/lib/python3.5/site-packages/pyparsing.py:1049: in wrapper\nret = func(*args[limit[0]:])\nE TypeError: () takes 1 positional argument but 3 were given\n_____________________________________________________________________________ ERROR collecting test/mitmproxy/test_proxy.py ______________________________________________________________________________\ntest/mitmproxy/test_proxy.py:7: in\nfrom mitmproxy.tools import cmdline\nmitmproxy/tools/cmdline.py:12: in\nfrom mitmproxy.addons import view\nmitmproxy/addons/view.py:91: in\nmatchall = flowfilter.parse(\".\")\nmitmproxy/flowfilter.py:503: in parse\nflt = bnf.parseString(s, parseAll=True)[0]\nvenv3.5/lib/python3.5/site-packages/pyparsing.py:1607: in parseString\nloc, tokens = self._parse( instring, 0 )\nvenv3.5/lib/python3.5/site-packages/pyparsing.py:1405: in _parseNoCache\ntokens = fn( instring, tokensStart, retTokens )\nvenv3.5/lib/python3.5/site-packages/pyparsing.py:1049: in wrapper\nret = func(*args[limit[0]:])\nE TypeError: () takes 1 positional argument but 3 were given\n____________________________________________________________________________ ERROR collecting test/mitmproxy/test_web_app.py _____________________________________________________________________________\ntest/mitmproxy/test_web_app.py:9: in\nfrom mitmproxy.tools.web import app\nmitmproxy/tools/web/init.py:1: in\nfrom mitmproxy.tools.web import master\nmitmproxy/tools/web/master.py:12: in\nfrom mitmproxy.addons import view\nmitmproxy/addons/view.py:91: in\nmatchall = flowfilter.parse(\".\")\nmitmproxy/flowfilter.py:503: in parse\nflt = bnf.parseString(s, parseAll=True)[0]\nvenv3.5/lib/python3.5/site-packages/pyparsing.py:1607: in parseString\nloc, tokens = self._parse( instring, 0 )\nvenv3.5/lib/python3.5/site-packages/pyparsing.py:1405: in _parseNoCache\ntokens = fn( instring, tokensStart, retTokens )\nvenv3.5/lib/python3.5/site-packages/pyparsing.py:1049: in wrapper\nret = func(*args[limit[0]:])\nE TypeError: () takes 1 positional argument but 3 were given\n___________________________________________________________________________ ERROR collecting test/mitmproxy/test_web_master.py ___________________________________________________________________________\ntest/mitmproxy/test_web_master.py:1: in\nfrom mitmproxy.tools.web import master\nmitmproxy/tools/web/init.py:1: in\nfrom mitmproxy.tools.web import master\nmitmproxy/tools/web/master.py:12: in\nfrom mitmproxy.addons import view\nmitmproxy/addons/view.py:91: in\nSystem information\n(venv3.5) osboxes@osboxes:/tmp/mitmproxy$ mitmdump --sysinfo\nTraceback (most recent call last):\nFile \"/tmp/mitmproxy/venv3.5/bin/mitmdump\", line 11, in\nload_entry_point('mitmproxy', 'console_scripts', 'mitmdump')()\nFile \"/tmp/mitmproxy/venv3.5/lib/python3.5/site-packages/pkg_resources/init.py\", line 561, in load_entry_point\nreturn get_distribution(dist).load_entry_point(group, name)\nFile \"/tmp/mitmproxy/venv3.5/lib/python3.5/site-packages/pkg_resources/init.py\", line 2627, in load_entry_point\nreturn ep.load()\nFile \"/tmp/mitmproxy/venv3.5/lib/python3.5/site-packages/pkg_resources/init.py\", line 2287, in load\nreturn self.resolve()\nFile \"/tmp/mitmproxy/venv3.5/lib/python3.5/site-packages/pkg_resources/init.py\", line 2293, in resolve\nmodule = import(self.module_name, fromlist=['name'], level=0)\nFile \"/tmp/mitmproxy/mitmproxy/tools/main.py\", line 12, in\nfrom mitmproxy.tools import cmdline # noqa\nFile \"/tmp/mitmproxy/mitmproxy/tools/cmdline.py\", line 12, in\nfrom mitmproxy.addons import view\nFile \"/tmp/mitmproxy/mitmproxy/addons/view.py\", line 91, in\nmatchall = flowfilter.parse(\".\")\nFile \"/tmp/mitmproxy/mitmproxy/flowfilter.py\", line 503, in parse\nflt = bnf.parseString(s, parseAll=True)[0]\nFile \"/tmp/mitmproxy/venv3.5/lib/python3.5/site-packages/pyparsing.py\", line 1607, in parseString\nloc, tokens = self._parse( instring, 0 )\nFile \"/tmp/mitmproxy/venv3.5/lib/python3.5/site-packages/pyparsing.py\", line 1405, in _parseNoCache\ntokens = fn( instring, tokensStart, retTokens )\nFile \"/tmp/mitmproxy/venv3.5/lib/python3.5/site-packages/pyparsing.py\", line 1049, in wrapper\nret = func(*args[limit[0]:])\nTypeError: () takes 1 positional argument but 3 were given\nOS - Linux osboxes 4.2.0-23-generic #28-Ubuntu SMP Sun Dec 27 17:47:31 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux", "issue_status": "Closed", "issue_reporting_time": "2016-12-08T13:04:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "847": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1824", "issue_id": "#1824", "issue_summary": "Can't connect to reddit with http/2", "issue_description": "MatsWillemsen commented on 8 Dec 2016\nSee #1310.\nSteps to reproduce the problem:\nOpen Firefox with mitmproxy active\nGo to reddit.com\nSee the error 'Secure Connection Failed'\nAny other comments? What have you tried so far?\nExactly the same problem as with #1310.\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.2\nPlatform: Darwin-16.1.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.12.1 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-12-08T10:15:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "848": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1820", "issue_id": "#1820", "issue_summary": "when run the mitmproxy on macos AttributeError: 'module' object has no attribute 'IntEnum'", "issue_description": "niasand commented on 7 Dec 2016\nSteps to reproduce the problem:\ninput the command mitmproxy on the iterm2\nand then, enter\nAny other comments? What have you tried so far?\nit seems that enum34 on python2.7.12 has no attribute IntEnum\nSystem information\nmasoc sierra\npip 9.0.1 from /usr/local/lib/python2.7/site-packages (python 2.7)\nreinstall the mitmproxy, the problem is still exists.\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 7, in\nfrom mitmproxy.main import mitmproxy\nFile \"/usr/local/lib/python2.7/site-packages/mitmproxy/main.py\", line 11, in\nfrom mitmproxy.proxy import config\nFile \"/usr/local/lib/python2.7/site-packages/mitmproxy/proxy/init.py\", line 4, in\nfrom .root_context import RootContext\nFile \"/usr/local/lib/python2.7/site-packages/mitmproxy/proxy/root_context.py\", line 10, in\nfrom mitmproxy import protocol\nFile \"/usr/local/lib/python2.7/site-packages/mitmproxy/protocol/init.py\", line 34, in\nfrom .http import UpstreamConnectLayer\nFile \"/usr/local/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 3, in\nimport h2.exceptions\nFile \"/usr/local/lib/python2.7/site-packages/h2/exceptions.py\", line 8, in\nimport h2.errors\nFile \"/usr/local/lib/python2.7/site-packages/h2/errors.py\", line 14, in\nclass ErrorCodes(enum.IntEnum):\nAttributeError: 'module' object has no attribute 'IntEnum'", "issue_status": "Closed", "issue_reporting_time": "2016-12-07T13:59:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "849": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1819", "issue_id": "#1819", "issue_summary": "mitmproxy API error Cannot establish TLS with client", "issue_description": "Miller1990 commented on 7 Dec 2016\nHow can I catch connection errors using API mitmproxy for example \"<< Cannot establish TLS with client (*********): TlsException(\"(54, 'ECONNRESET')\",)\" or \"error Cannot establish TLS with client\"\nthanks", "issue_status": "Closed", "issue_reporting_time": "2016-12-07T09:09:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "850": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1818", "issue_id": "#1818", "issue_summary": "TLS ServerHello sending extensions not in client's list", "issue_description": "yifanlu commented on 6 Dec 2016\nRFC 5246:\nextensions\nA list of extensions. Note that only extensions offered by the\nclient can appear in the server's list.\nHowever it appears mitmproxy is sending a renegotiation_info extension even though the ClientHello does not have it.", "issue_status": "Closed", "issue_reporting_time": "2016-12-05T21:01:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "851": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1816", "issue_id": "#1816", "issue_summary": "Error parsing TLSv1.2 ClientHello with no extensions", "issue_description": "yifanlu commented on 5 Dec 2016\n\u21e9 [0/0]    [showhost]                                                                                                                                                                        ?:help [*:8001]\nTraceback (most recent call last):\n  File \"/Users/yifanlu/Downloads/mitmproxy/venv3.5/lib/python3.5/site-packages/construct/core.py\", line 460, in _parse\n\u21e9 [0/0]    [showhost]                                                                                                                                                                        ?:help [*:8001]\nError: 192.168.2.28:54194: Traceback (most recent call last):\n  File \"/Users/yifanlu/Downloads/mitmproxy/venv3.5/lib/python3.5/site-packages/construct/core.py\", line 460, in _parse\n    return packer.unpack(self.fmtstr, _read_stream(stream, self.sizeof()))[0]\n  File \"/Users/yifanlu/Downloads/mitmproxy/venv3.5/lib/python3.5/site-packages/construct/core.py\", line 73, in _read_stream\n    raise FieldError(\"could not read enough bytes, expected %d, found %d\" % (length, len(data)))\nconstruct.core.FieldError: could not read enough bytes, expected 2, found 0\nTraceback (most recent call last):\nDuring handling of the above exception, another exception occurred:\n    return self.subcon._parse(stream, context, path)\nTraceback (most recent call last):\n  File \"/Users/yifanlu/Downloads/mitmproxy/venv3.5/lib/python3.5/site-packages/construct/core.py\", line 2696, in _parse\n    return self.subcon._parse(stream, context, path)\n  File \"/Users/yifanlu/Downloads/mitmproxy/venv3.5/lib/python3.5/site-packages/construct/core.py\", line 859, in _parse\n    subobj = sc._parse(stream, context, path)\n  File \"/Users/yifanlu/Downloads/mitmproxy/venv3.5/lib/python3.5/site-packages/construct/core.py\", line 462, in _parse\n    raise FieldError(\"packer %r error during parsing\" % self.fmtstr)\nconstruct.core.FieldError: packer '>H' error during parsing\nTraceback (most recent call last):\nDuring handling of the above exception, another exception occurred:\n    return cls(raw_client_hello)\nTraceback (most recent call last):\n  File \"/Users/yifanlu/Downloads/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 293, in from_client_conn\n    return cls(raw_client_hello)\n  File \"/Users/yifanlu/Downloads/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 251, in __init__\n    self._client_hello = _constructs.ClientHello.parse(raw_client_hello)\n  File \"/Users/yifanlu/Downloads/mitmproxy/venv3.5/lib/python3.5/site-packages/construct/core.py\", line 175, in parse\n    return self.parse_stream(BytesIO(data), context, **kw)\n  File \"/Users/yifanlu/Downloads/mitmproxy/venv3.5/lib/python3.5/site-packages/construct/core.py\", line 186, in parse_stream\n    return self._parse(stream, context, \"parsing\")\n  File \"/Users/yifanlu/Downloads/mitmproxy/venv3.5/lib/python3.5/site-packages/construct/core.py\", line 2696, in _parse\n    return self.subcon._parse(stream, context, path)\n  File \"/Users/yifanlu/Downloads/mitmproxy/venv3.5/lib/python3.5/site-packages/construct/core.py\", line 859, in _parse\n    subobj = sc._parse(stream, context, path)\n  File \"/Users/yifanlu/Downloads/mitmproxy/venv3.5/lib/python3.5/site-packages/construct/core.py\", line 2700, in _parse\n    raise e.__class__(\"%s\\n    %s\" % (e, path))\nconstruct.core.FieldError: packer '>H' error during parsing\n    parsing -> ClientHello -> extensions\nTraceback (most recent call last):\nDuring handling of the above exception, another exception occurred:\n    root_layer()\nTraceback (most recent call last):\n  File \"/Users/yifanlu/Downloads/mitmproxy/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/Users/yifanlu/Downloads/mitmproxy/mitmproxy/proxy/modes/transparent_proxy.py\", line 19, in __call__\n    layer()\n  File \"/Users/yifanlu/Downloads/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 338, in __call__\n    self._client_hello = TlsClientHello.from_client_conn(self.client_conn)\n  File \"/Users/yifanlu/Downloads/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 297, in from_client_conn\n    (repr(e), raw_client_hello.encode(\"hex\"))\nAttributeError: 'bytes' object has no attribute 'encode'\nHere is my ClientHello packet\nSecure Sockets Layer\n    SSL Record Layer: Handshake Protocol: Client Hello\n        Content Type: Handshake (22)\n        Version: TLS 1.1 (0x0302)\n        Length: 55\n        Handshake Protocol: Client Hello\n            Handshake Type: Client Hello (1)\n            Length: 51\n            Version: TLS 1.1 (0x0302)\n            Random\n                GMT Unix Time: Dec  4, 2016 22:44:19.000000000 PST\n                Random Bytes: 17991bbc1b718f75650857ad440fa366eae285337fa07c76...\n            Session ID Length: 0\n            Cipher Suites Length: 12\n            Cipher Suites (6 suites)\n                Cipher Suite: TLS_RSA_WITH_AES_256_CBC_SHA (0x0035)\n                Cipher Suite: TLS_RSA_WITH_AES_128_CBC_SHA (0x002f)\n                Cipher Suite: TLS_RSA_WITH_3DES_EDE_CBC_SHA (0x000a)\n                Cipher Suite: TLS_RSA_WITH_RC4_128_SHA (0x0005)\n                Cipher Suite: TLS_RSA_WITH_RC4_128_MD5 (0x0004)\n                Cipher Suite: TLS_EMPTY_RENEGOTIATION_INFO_SCSV (0x00ff)\n            Compression Methods Length: 1\n            Compression Methods (1 method)\n                Compression Method: null (0)\n\n0000   16 03 02 00 37 01 00 00 33 03 02 58 45 0c c3 17  ....7...3..XE...\n0010   99 1b bc 1b 71 8f 75 65 08 57 ad 44 0f a3 66 ea  ....q.ue.W.D..f.\n0020   e2 85 33 7f a0 7c 76 ce b5 79 99 00 00 0c 00 35  ..3..|v..y.....5\n0030   00 2f 00 0a 00 05 00 04 00 ff 01 00              ./..........\nSeems like in _constructs.py, ClientHello and ServerHello assumes the existence of extensions whereas the RFC allows for no extensions\n      struct {\n          ProtocolVersion client_version;\n          Random random;\n          SessionID session_id;\n          CipherSuite cipher_suites<2..2^16-2>;\n          CompressionMethod compression_methods<1..2^8-1>;\n          select (extensions_present) {\n              case false:\n                  struct {};\n              case true:\n                  Extension extensions<0..2^16-1>;\n          };\n      } ClientHello;", "issue_status": "Closed", "issue_reporting_time": "2016-12-05T07:05:38Z", "fixed_by": "#1817", "pull_request_summary": "tls_parser: allow optional extensions", "pull_request_description": "Member\nKriechi commented on 5 Dec 2016\nfixes #1816", "pull_request_status": "Merged", "issue_fixed_time": "2016-12-06T18:52:12Z", "files_changed": [["4", "mitmproxy/contrib/tls/__init__.py"], ["11", "mitmproxy/contrib/tls/_constructs.py", "\u2192", "mitmproxy/contrib/tls_parser.py"], ["32", "mitmproxy/proxy/protocol/tls.py"], ["38", "test/mitmproxy/contrib/test_tls_parser.py"], ["26", "test/mitmproxy/protocol/test_tls.py"]]}, "852": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1815", "issue_id": "#1815", "issue_summary": "[RFC] Installers for mitmproxy", "issue_description": "Member\nmhils commented on 5 Dec 2016 \u2022\nedited by Kriechi\nInstalling mitmproxy is currently not as easy as it could be:\npip suffers from a lot of issues: New releases of dependencies breaking installations (see e.g. #1533), lxml on Windows (#1444), additional dependencies for compilation on Linux...\nEach of our mitmproxy/mitmdump/mitmweb binaries contains all dependencies. This greatly adds to distribution size. On linux, mitmproxy,-dump, and -web are at 67mb now due to this.\nIt would be nice if our executables would just end up on the PATH.\nOn Windows, we currently don't have start menu integration. It would be very nice if mitmweb could just be started by clicking on an icon, without opening a command line.\nThere's no way for users to receive (auto-)updates. We need to be careful here of course, as we don't want any form of tracking.\nI stumbled upon https://installbuilder.bitrock.com/ today, which could potentially solve a lot of those issues:\nWindows/OSX/Linux installer generation\nThe usual installer stuff: Generation of shortcuts, install wizard, uninstaller, ...\n.deb generation for Linux. Having our own .deb repository would (1) solve the update problem for Linux and (2) we could directly specify our compilation dependencies this way\nAuto update and manual update functionality\nFree for open source projects\nWe can have PyInstaller in one-dir mode instead of one-file mode (https://pythonhosted.org/PyInstaller/operating-mode.html#how-the-one-file-program-works)\nAll together, it may be worth to explore this a bit more. @mitmproxy/devs, thoughts?", "issue_status": "Closed", "issue_reporting_time": "2016-12-04T21:06:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "853": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1812", "issue_id": "#1812", "issue_summary": "PyInstaller: OSX builds have mitmproxy_main executable, not mitmproxy", "issue_description": "Member\nmhils commented on 4 Dec 2016\nSteps to reproduce the problem:\nDownload snapshot from https://snapshots.mitmproxy.org/v0.19/", "issue_status": "Closed", "issue_reporting_time": "2016-12-04T17:28:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "854": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1809", "issue_id": "#1809", "issue_summary": "mitmdump throw ImportError: No module named 'mitmproxy.script'", "issue_description": "PartOfLife1221 commented on 3 Dec 2016\nSteps to reproduce the problem:\nDownload mitmproxy binary from https://github.com/mitmproxy/mitmproxy/releases/download/v0.18.2/mitmproxy-0.18.2-linux.tar.gz\nExtract and then run : ~$ ./mitmdump -T --host -s inline_script.py\nmitmdump throw exception:\nScript error: Traceback (most recent call last):\n  File \"/home/john/inline_script.py\", line 1, in <module>\n    from mitmproxy.script import concurrent\nImportError: No module named 'mitmproxy.script'\ninline_scripy.py content:\nfrom mitmproxy.script import concurrent\n\n@concurrent\ndef request(context, flow):\n   print(\"Request\")\nAny other comments? What have you tried so far?\nI tried to install mitmproxy from pip. And rerun with inline_script.py: ~$ mitmdump -T -s inline_script.py\nIt runs normally.\nSystem information\n./mitmdump --sysinfo\nMitmproxy version: 0.18.2\nPython version: 3.5.2\nPlatform: Linux-3.13.0-85-generic-x86_64-with-debian-jessie-sid\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nLinux distro: debian jessie/sid", "issue_status": "Closed", "issue_reporting_time": "2016-12-03T08:51:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "855": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1808", "issue_id": "#1808", "issue_summary": "Need mitmproxy to use different openssl", "issue_description": "SriVR commented on 2 Dec 2016\nHi\nI installed mitmproxy in redhat6 and I have two openssl version. I want mitmproxy to use OpenSSL 1.0.2j. what ever I try it keeps throwing me this warning. Could you please help with this issue.\nStandard :\nInstalled Packages\nName : openssl\nArch : i686\nVersion : 1.0.1e\nRelease : 48.el6_8.3\nSize : 3.9 M\nRepo : installed\nFrom repo : adn-rhel-x86_64-workstation-6\nSummary : A general purpose cryptography library with TLS implementation\nURL : http://www.openssl.org/\nLicense : OpenSSL\nDescription : The OpenSSL toolkit provides support for secure communications between\n: machines. OpenSSL includes a certificate management tool and shared\n: libraries which provide various cryptographic algorithms and\n: protocols.\nThe other one I installed\n/usr/bin> openssl version\nOpenSSL 1.0.2j 26 Sep 2016\nlrwxrwxrwx 1 root root 26 Dec 1 14:22 openssl -> /usr/local/ssl/bin/openssl\nThe python3.5 is using openssl 1.0.2j\n/usr/bin> python3.5 -c \"import ssl; print(ssl.OPENSSL_VERSION)\"\nOpenSSL 1.0.2j 26 Sep 2016\nmitmdump\nProxy server listening at http://0.0.0.0:8080\nALPN support missing (OpenSSL 1.0.2+ required)!\nHTTP/2 is disabled. Use --no-http2 to silence this warning.\n/usr/local/bin> mitmdump --sysinfo\nMitmproxy version: 0.18.2\nPython version: 3.5.2\nPlatform: Linux-2.6.32-642.4.2.el6.x86_64-x86_64-with-redhat-6.8-Santiago\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nLinux distro: Red Hat Enterprise Linux Workstation 6.8 Santiago", "issue_status": "Closed", "issue_reporting_time": "2016-12-02T14:17:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "856": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1805", "issue_id": "#1805", "issue_summary": "How to compile mitmdump statically under windows?", "issue_description": "networksys commented on 2 Dec 2016\nI'm compiling through dev.ps1 via power shell. The result is a python loader. How to compile the python scripts statically, the way the mitmdump is provided in release section?\nThanks", "issue_status": "Closed", "issue_reporting_time": "2016-12-01T21:17:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "857": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1803", "issue_id": "#1803", "issue_summary": "FlowView is not updating", "issue_description": "Member\nmhils commented on 1 Dec 2016\nSteps to reproduce the problem:\nOpen Flow Reponse View\nReplay Flow (r)\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.2\nPlatform: Windows-10-10.0.14393-SP0\nSSL version: OpenSSL 1.0.2h 3 May 2016\nWindows version: 10 10.0.14393 SP0 Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2016-12-01T14:23:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "858": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1802", "issue_id": "#1802", "issue_summary": "Proxy exceptions", "issue_description": "ja8zyjits commented on 1 Dec 2016\nSteps to reproduce the problem:\ncopy the script\ndef proxy_address(flow):\n    return (\"remote_ip\", 18002)\n\ndef request(flow):\n    address = proxy_address(flow)\n    if flow.live:\n        print(\"inside\")\n        flow.live.change_upstream_proxy_server(address)\ndef response(flow):\n    pdb.set_trace()\n    content = flow.response.headers.get(\"Content-Type\", [])\n    if [cont for cont in ('html', 'json') if cont in content]:\n        pass\n    elif  content:\n        pass\nrun mitmdump -s \"update_mitmproxy.py\"\ncopy this script and run\nfrom selenium import webdriver\n\ndef get_proxy():\n    from selenium.webdriver.common.proxy import Proxy, ProxyType\n    get_proxy = \"127.0.0.1:8080\" \n    proxy = Proxy({\n        'proxyType': ProxyType.MANUAL,\n        'httpProxy': get_proxy,\n        'sslProxy': get_proxy,\n        'ftpProxy': get_proxy,\n        'socksProxy':get_proxy,\n    })\n    return proxy\n\nif __name__ == '__main__':\n    response = webdriver.Firefox(proxy=get_proxy())\n    url = \"http://www.google.com\"\n    response.get(url)\nthe error that i get is\n(proxy_ui3) jitesh@jitesh-laptop:~/projects/proxy_ui3$ mitmdump -U \"http://localho:8085\" -s update_mitmproxy.py \nLoading script: update_mitmproxy.py\nProxy server listening at http://0.0.0.0:8080\n127.0.0.1:45158: clientconnect\n127.0.0.1:45160: clientconnect\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nremote_ip:18003\n(Pdb) c\n127.0.0.1:45160: GET http://www.google.com/\n              << 302 Found 231b\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nremote_ip:18003\n(Pdb) c\n127.0.0.1:45158: CONNECT tiles-cloudfront.cdn.mozilla.net:443\n              << 403 Forbidden 3k\n127.0.0.1:45160: clientdisconnect\n127.0.0.1:45162: clientconnect\n127.0.0.1:45158: clientdisconnect\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nremote_ip:18003\n(Pdb) c\n127.0.0.1:45162: CONNECT www.google.com:443\n              << 200 Connection established 0b\nScript error: Traceback (most recent call last):\n  File \"update_mitmproxy.py\", line 58, in request\n    flow.live.change_upstream_proxy_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 276, in change_upstream_proxy_server\n    return self.set_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http2.py\", line 413, in set_server\n    raise exceptions.SetServerNotAllowedException(repr(address))\nSetServerNotAllowedException: ('remote_ip', 18003)\n\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nwww.google.com:443\n(Pdb) c\n127.0.0.1:45162: GET https://www.google.com/?gws_rd=ssl HTTP/2.0\n              << 200  62k\nScript error: Traceback (most recent call last):\n  File \"update_mitmproxy.py\", line 58, in request\n    flow.live.change_upstream_proxy_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 276, in change_upstream_proxy_server\n    return self.set_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http2.py\", line 413, in set_server\n    raise exceptions.SetServerNotAllowedException(repr(address))\nSetServerNotAllowedException: ('remote_ip', 18003)\n\nScript error: Traceback (most recent call last):\n  File \"update_mitmproxy.py\", line 58, in request\n    flow.live.change_upstream_proxy_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 276, in change_upstream_proxy_server\n    return self.set_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http2.py\", line 413, in set_server\n    raise exceptions.SetServerNotAllowedException(repr(address))\nSetServerNotAllowedException: ('remote_ip', 18003)\n\nScript error: Traceback (most recent call last):\n  File \"update_mitmproxy.py\", line 58, in request\n    flow.live.change_upstream_proxy_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 276, in change_upstream_proxy_server\n    return self.set_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http2.py\", line 413, in set_server\n    raise exceptions.SetServerNotAllowedException(repr(address))\nSetServerNotAllowedException: ('remote_ip', 18003)\n\n127.0.0.1:45166: clientconnect\nScript error: Traceback (most recent call last):\n  File \"update_mitmproxy.py\", line 58, in request\n    flow.live.change_upstream_proxy_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 276, in change_upstream_proxy_server\n    return self.set_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http2.py\", line 413, in set_server\n    raise exceptions.SetServerNotAllowedException(repr(address))\nSetServerNotAllowedException: ('remote_ip', 18003)\n\nScript error: Traceback (most recent call last):\n  File \"update_mitmproxy.py\", line 58, in request\n    flow.live.change_upstream_proxy_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 276, in change_upstream_proxy_server\n    return self.set_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http2.py\", line 413, in set_server\n    raise exceptions.SetServerNotAllowedException(repr(address))\nSetServerNotAllowedException: ('remote_ip', 18003)\n\n127.0.0.1:45168: clientconnect\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nwww.google.com:443\n(Pdb) c\n127.0.0.1:45162: GET https://www.google.com/images/hpp/ic_wahlberg_product_core_48.png8.png HTTP/2.0\n              << 200  2k\n127.0.0.1:45170: clientconnect\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nwww.google.com:443\n(Pdb) c\n127.0.0.1:45162: GET https://www.google.com/images/branding/product/ico/googleg_lodp.ico HTTP/2.0\n              << 200  1k\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nwww.google.com:443\n(Pdb) c\n127.0.0.1:45162: GET https://www.google.com/images/nav_logo242.png HTTP/2.0\n              << 200  21k\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nremote_ip:18003\n(Pdb) c\n127.0.0.1:45166: CONNECT ssl.gstatic.com:443\n              << 200 Connection established 0b\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nwww.google.com:443\n(Pdb) c\n: GET https://www.google.com/xjs/_/js/k=xjs.s.en.uSOoTHNi41A.O/m=sx,c,sb,cdos,cr,elog,hsm,jsa,r,qsm,j,p,d,csi/am=AAiUdFzBAoj_h4C4hXAEqQADgw/rt=j/d=1/t=zcms/rs=ACT90oFM1AuVetyo5hzaw7QTff7TnRJZoQ HTTP/2.0\n              << 200  135k\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nwww.google.com:443\n(Pdb) c\n: GET https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png HTTP/2.0\n              << 200  13k\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nremote_ip:18003\n(Pdb) c\n127.0.0.1:45168: CONNECT www.gstatic.com:443\n              << 200 Connection established 0b\n127.0.0.1:45162: clientdisconnect\n127.0.0.1:45166: Error in HTTP connection: TlsProtocolException('Cannot establish TLS with ssl.gstatic.com:443 (sni: ssl.gstatic.com): TlsException(\"SSL handshake error: SysCallError(-1, \\'Unexpected EOF\\')\",)',)\n127.0.0.1:45166: clientdisconnect\n127.0.0.1:45168: Error in HTTP connection: TlsProtocolException('Cannot establish TLS with www.gstatic.com:443 (sni: www.gstatic.com): TlsException(\"SSL handshake error: SysCallError(-1, \\'Unexpected EOF\\')\",)',)\n127.0.0.1:45168: clientdisconnect\n127.0.0.1:45172: clientconnect\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nremote_ip:18003\n(Pdb) c\n127.0.0.1:45170: CONNECT aus4.mozilla.org:443\n              << 403 Forbidden 3k\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nremote_ip:18003\n(Pdb) c\n127.0.0.1:45172: CONNECT www.gstatic.com:443\n              << 200 Connection established 0b\n127.0.0.1:45170: Error in HTTP connection: TcpDisconnect('[Errno 32] Broken pipe',)\n127.0.0.1:45170: clientdisconnect\nScript error: Traceback (most recent call last):\n  File \"update_mitmproxy.py\", line 58, in request\n    flow.live.change_upstream_proxy_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 276, in change_upstream_proxy_server\n    return self.set_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http2.py\", line 413, in set_server\n    raise exceptions.SetServerNotAllowedException(repr(address))\nSetServerNotAllowedException: ('remote_ip', 18003)\n\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nwww.gstatic.com:443\n(Pdb) c\n127.0.0.1:45172: GET https://www.gstatic.com/og/_/js/k=og.og2.en_US.TQruUcVmySQ.O/rt=j/m=def/exm=in,fot/d=1/ed=1/rs=AA2YrTvgRViuC9GGCertnoy9cEgjABZj6Q HTTP/2.0\n              << 200  46k\n127.0.0.1:45174: clientconnect\n127.0.0.1:45176: clientconnect\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nremote_ip:18003\n(Pdb) c\n127.0.0.1:45176: CONNECT www.google.com:443\n              << 200 Connection established 0b\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nremote_ip:18003\n(Pdb) c\n127.0.0.1:45174: CONNECT apis.google.com:443\n              << 200 Connection established 0b\nScript error: Traceback (most recent call last):\n  File \"update_mitmproxy.py\", line 58, in request\n    flow.live.change_upstream_proxy_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 276, in change_upstream_proxy_server\n    return self.set_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http2.py\", line 413, in set_server\n    raise exceptions.SetServerNotAllowedException(repr(address))\nSetServerNotAllowedException: ('remote_ip', 18003)\n\nScript error: Traceback (most recent call last):\n  File \"update_mitmproxy.py\", line 58, in request\n    flow.live.change_upstream_proxy_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 276, in change_upstream_proxy_server\n    return self.set_server(address)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http2.py\", line 413, in set_server\n    raise exceptions.SetServerNotAllowedException(repr(address))\nSetServerNotAllowedException: ('remote_ip', 18003)\n\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\nwww.google.com:443\n(Pdb) c\n127.0.0.1:45176: POST https://www.google.com/_/og/promos/z HTTP/2.0\n              << 200  22b\n> /home/jitesh/projects/proxy_ui3/update_mitmproxy.py(67)response()\n-> content = flow.response.headers.get(\"Content-Type\", [])\n(Pdb) flow.server_conn.address\napis.google.com:443\n(Pdb) c\n127.0.0.1:45174: GET https://apis.google.com/_/scs/abc-static/_/js/k=gapi.gapi.en.U_ZjamIixkk.O/m=gapi_iframes,googleapis_client,plusone/rt=j/sv=1/d=1/ed=1/rs=AHpOoo-vbowTsdJgxjMinuRjWcqUL15H1g/cb=gapi.loaded_0 HTTP/2.0\n              << 200  41k\n127.0.0.1:45172: clientdisconnect\n127.0.0.1:45174: clientdisconnect\n127.0.0.1:45176: clientdisconnect\nAny other comments? What have you tried so far?\nwhen an exception is raised it re routes through local ip.\nIf that proxy fails, shouldn't it return error rather than routing through the local ip?\nI tested that Ip with normal browser, there seems to be no such error, also with python requests passing proxy ips.\nI could not find much info SetServerNotAllowedException\nAny help would be greatly appreciated.\nSystem information\n(proxy_ui3) jitesh@jitesh-laptop:~/projects/proxy_ui3$ mitmdump --sysinfo\nMitmproxy version: 0.18.2\nPython version: 2.7.12\nPlatform: Linux-4.4.0-47-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g  1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2016-12-01T13:22:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "859": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1800", "issue_id": "#1800", "issue_summary": "from libmproxy.protocol.http import decoded error", "issue_description": "cnscyy commented on 1 Dec 2016\nSteps to reproduce the problem:\n1.I have install mitmproxy using apt-get, when i from libmproxy.protocol.http import decoded, Traceback ImportError: cannot import name decoded.\n2.when i install mitmproxy using pip, from libmproxy import controller, proxy, Traceback ImportError: No module named libmproxy\n3.\nAny other comments? What have you tried so far?\nSystem information\nUbuntu 16.4\nmitmproxy version: 0.15, linux OS: Ubuntu 16.4", "issue_status": "Closed", "issue_reporting_time": "2016-12-01T03:12:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "860": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1798", "issue_id": "#1798", "issue_summary": "mitmproxy raises exception when editing unicode(Chinese) in query string", "issue_description": "yifeikong commented on 30 Nov 2016\nSteps to reproduce the problem:\nintercept a url with Chinese query string\ntry to edit the query string with e then q\nit crashes\nAny other comments? What have you tried so far?\nIt seems to be a simple decode issue\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/console/grideditor/base.py\", line 245, in get_next\n    return GridRow(None, False, self.editor, self.lst[pos + 1]), pos + 1\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/console/grideditor/base.py\", line 86, in __init__\n    w = self.editor.columns[i].Display(v)\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/console/grideditor/col_text.py\", line 19, in Display\n    return TDisplay(data, self.encoding_args)\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/console/grideditor/col_text.py\", line 33, in __init__\n    data = data.encode(*self.encoding_args)\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe3 in position 0: ordinal not in range(128)\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2016-11-30T07:33:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "861": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1796", "issue_id": "#1796", "issue_summary": "CanvasError: Canvas text is wider than the maxcol specified", "issue_description": "debugtalk commented on 29 Nov 2016\nTraceback (most recent call last):\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/mitmproxy/console/master.py\", line 482, in run\n    self.loop.run()\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 710, in _loop\n    self._entering_idle()\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 671, in _entering_idle\n    callback()\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 564, in entering_idle\n    self.draw_screen()\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 578, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/widget.py\", line 1751, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/listbox.py\", line 487, in render\n    canvas = widget.render((maxcol,))\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/widget.py\", line 1008, in render\n    return apply_text_layout(text, attr, trans, maxcol)\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/canvas.py\", line 1313, in apply_text_layout\n    return TextCanvas(t, a, c, maxcol=maxcol)\n  File \"/Users/Leo/.virtualenvs/mitmproxy/lib/python2.7/site-packages/urwid/canvas.py\", line 356, in __init__\n    raise CanvasError(\"Canvas text is wider than the maxcol specified \\n%r\\n%r\\n%r\"%(maxcol,widths,text))\nCanvasError: Canvas text is wider than the maxcol specified ", "issue_status": "Closed", "issue_reporting_time": "2016-11-29T04:35:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "862": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1795", "issue_id": "#1795", "issue_summary": "macOS Sierra brew install error", "issue_description": "askie commented on 29 Nov 2016 \u2022\nedited\nmacOS Sierra brew install :\nbrew install mitmproxy\nerror:\n==> Installing mitmproxy\n==> Downloading https://mitmproxy.org/download/mitmproxy-0.14.0.tar.gz\ncurl: (22) The requested URL returned error: 403 Forbidden\nError: Failed to download resource \"mitmproxy\"\nDownload failed: https://mitmproxy.org/download/mitmproxy-0.14.0.tar.gz", "issue_status": "Closed", "issue_reporting_time": "2016-11-29T02:02:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "863": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1786", "issue_id": "#1786", "issue_summary": "mitmweb error : AttributeError: 'WebMaster' object has no attribute 'start_stream_to_path'", "issue_description": "Miller1990 commented on 24 Nov 2016\nI'm trying to save the flow intercepted by the mitmproxy on the file using this:\nmitmweb --wfile out.txt\nwhen I run it returns me the following error:\nTraceback (most recent call last):\nFile \"/Library/Frameworks/Python.framework/Versions/2.7/bin/mitmweb\", line 11, in\nsys.exit(mitmweb())\nFile \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy/main.py\", line 139, in mitmweb\nm = web.master.WebMaster(server, web_options)\nFile \"/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy/web/master.py\", line 156, in init\nerr = self.start_stream_to_path(\nAttributeError: 'WebMaster' object has no attribute 'start_stream_to_path'", "issue_status": "Closed", "issue_reporting_time": "2016-11-24T16:06:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "864": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1784", "issue_id": "#1784", "issue_summary": "exit crash", "issue_description": "FarAwaytarget commented on 24 Nov 2016\nSteps to reproduce the problem:\n1.it's happend crash when I use 'q' exit\n2.\n3.\nAny other comments? What have you tried so far?\nSystem information\nFile \"/usr/local/Cellar/mitmproxy/0.17.1/libexec/lib/python2.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\nroot_layer()\nFile \"/usr/local/Cellar/mitmproxy/0.17.1/libexec/lib/python2.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 11, in call\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/0.17.1/libexec/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 358, in call\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/0.17.1/libexec/lib/python2.7/site-packages/mitmproxy/protocol/http1.py\", line 67, in call\nlayer()\nFile \"/usr/local/Cellar/mitmproxy/0.17.1/libexec/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 204, in call\nself.send_response_to_client(flow)\nFile \"/usr/local/Cellar/mitmproxy/0.17.1/libexec/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 270, in send_response_to_client\nif not flow.response.stream:\nAttributeError: 'NoneType' object has no attribute 'response'", "issue_status": "Closed", "issue_reporting_time": "2016-11-24T14:11:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "865": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1783", "issue_id": "#1783", "issue_summary": "Empty `--upstream-trusted-ca` file crashes mitmproxy.", "issue_description": "Member\nmhils commented on 24 Nov 2016 \u2022\nedited\nSteps to reproduce the problem:\ntouch foo\nmitmdump --upstream-trusted-ca foo\ncurl -x localhost:8080 https://example.com/\n127.0.0.1:61162: clientconnect\n127.0.0.1:61162: Traceback (most recent call last):\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/proxy/server.py\", line 115, in handle\n    root_layer()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/proxy/modes/http_proxy.py\", line 9, in __call__\n    layer()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 379, in __call__\n    layer()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/proxy/protocol/http1.py\", line 72, in __call__\n    layer()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 177, in __call__\n    if not self._process_flow(flow):\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 246, in _process_flow\n    return self.handle_regular_connect(f)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/proxy/protocol/http.py\", line 204, in handle_regular_connect\n    layer()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 372, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 448, in _establish_tls_with_client_and_server\n    self._establish_tls_with_server()\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/proxy/protocol/tls.py\", line 534, in _establish_tls_with_server\n    alpn_protos=alpn,\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/connections.py\", line 229, in establish_ssl\n    self.convert_to_ssl(cert=clientcert, sni=sni, **kwargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/net/tcp.py\", line 688, in convert_to_ssl\n    **sslctx_kwargs\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/net/tcp.py\", line 662, in create_ssl_context\n    **sslctx_kwargs)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/net/tcp.py\", line 554, in _create_ssl_context\n    context.load_verify_locations(ca_pemfile, ca_path)\n  File \"/usr/local/lib/python3.5/dist-packages/OpenSSL/SSL.py\", line 525, in load_verify_locations\n    _raise_current_error()\n  File \"/usr/local/lib/python3.5/dist-packages/OpenSSL/_util.py\", line 48, in exception_from_error_queue\n    raise exception_type(errors)\nOpenSSL.SSL.Error: []\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.2\nPlatform: Linux-3.4.0+-x86_64-with-Ubuntu-14.04-trusty\nSSL version: OpenSSL 1.0.2g-fips 1 Mar 2016\nLinux distro: Ubuntu 14.04 trusty", "issue_status": "Closed", "issue_reporting_time": "2016-11-24T11:34:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "866": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1782", "issue_id": "#1782", "issue_summary": "marked less than one item ,mitmproxy will broken", "issue_description": "wujunchuan commented on 24 Nov 2016 \u2022\nedited\nSteps to reproduce the problem:\nclick m toggle flow mark\nclick M toggle marked flow view\nonly 1 item had mark,then click m to cancel mark.\nclick M return back..mitmproxy will broken.\nin other words,when marked ** less than one item ** mitmproxy will broken\nSystem information\n    Traceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/master.py\", line 482, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/window.py\", line 86, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/flowlist.py\", line 385, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/urwid/listbox.py\", line 987, in keypress\n    key = focus_widget.keypress((maxcol,),key)\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/flowlist.py\", line 179, in keypress\n    self.state.disable_marked_filter()\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/master.py\", line 183, in disable_marked_filter\n    self.set_focus_flow(nearest_marked)\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/console/master.py\", line 107, in set_focus_flow\n    self.set_focus(self.view.index(f))\n  File \"/usr/local/Cellar/mitmproxy/0.18.2_1/libexec/lib/python2.7/site-packages/mitmproxy/flow/state.py\", line 36, in index\n    return self._list.index(f)\nValueError: None is not in list\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2016-11-24T06:32:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "867": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1780", "issue_id": "#1780", "issue_summary": "Inline script errors not thrown in eventlog", "issue_description": "Contributor\nphackt commented on 23 Nov 2016 \u2022\nedited\nSteps to reproduce the problem:\nedit any inline script and add an error (example sslstrip-test.py attached with function nothing())\nsslstrip-test.txt\nmitmproxy --script sslstrip-test.py --eventlog\nnothing in eventlog (see screenshot)\nAny other comments? What have you tried so far?\nRemember that it was working with v0.17.1, Maximilian said it was fixed from v0.18 to v0.18.2, so am i missing something here (a debug mode?)? Mitmproxy is still working, ignoring the script.\nThanks a lot,\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.2+\nPlatform: Linux-4.8.0-kali1-amd64-x86_64-with-Kali-kali-rolling-kali-rolling\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nLinux distro: Kali kali-rolling kali-rolling", "issue_status": "Closed", "issue_reporting_time": "2016-11-23T10:28:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "868": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1779", "issue_id": "#1779", "issue_summary": "mitmproxy-0.18.2-osx Error loading Python lib", "issue_description": "dvska commented on 23 Nov 2016\nSteps to reproduce the problem:\n1.mitmproxy-0.18.2-osx$ ./mitmdump\nError loading Python lib '/var/folders/fv/8s5nyv5d25x_bdf22mjbktd40000gn/T/_MEIsO6QsF/.Python': dlopen(/var/folders/fv/8s5nyv5d25x_bdf22mjbktd40000gn/T/_MEIsO6QsF/.Python, 10): Symbol not found: _faccessat\nReferenced from: /var/folders/fv/8s5nyv5d25x_bdf22mjbktd40000gn/T/_MEIsO6QsF/.Python\nExpected in: /usr/lib/libSystem.B.dylib\nin /var/folders/fv/8s5nyv5d25x_bdf22mjbktd40000gn/T/_MEIsO6QsF/.Python\nAny other comments? What have you tried so far?\nSystem information\nOS X 10.9.5", "issue_status": "Closed", "issue_reporting_time": "2016-11-23T10:25:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "869": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1776", "issue_id": "#1776", "issue_summary": "unable to use proxy upstream", "issue_description": "ja8zyjits commented on 22 Nov 2016 \u2022\nedited\nSteps to reproduce the problem:\ncopy following script\ndef proxy_address(flow):\n    return (\"remote_ip\", 18002)\n\ndef request(flow):\n    address = proxy_address(flow)\n    if flow.live:\n        print(\"inside\")\n        flow.live.change_upstream_proxy_server(address)\nrun mitmdump -s \"update_mitmproxy.py\"\nopen terminal\n>>> import requests\n>>> p = {\"http\":\"http://127.0.0.1:8080\",\"https\":\"http://127.0.0.1:8080\"}\n>>> response = requests.post(\"http://www.httpbin.org/post\", json={\"key\":\"value\"}, proxies=p)\n>>> response.json\n{u'args': {},\nu'data': u'{\"key\":\"value\"}',\nu'files': {},\nu'form': {},\nu'headers': {u'Accept': u'*/*',\n u'Accept-Encoding': u'gzip, deflate',\n u'Content-Length': u'19',\n u'Content-Type': u'application/json',\n u'Host': u'www.httpbin.org',\n u'User-Agent': u'python-requests/2.12.1'},\nu'json': {u\"key\":u\"value\"},\nu'origin': u'local_ip', #this is the problem, i need to get the upstream_server ip\nu'url': u'http://www.httpbin.org/post'}\nThe remote_proxy is working i tested it, but its not being used as an upstream server in this case you see the origin is still my local system not the proxy remote server\nAny other comments? What have you tried so far?\nThis script is from the examples, is it the right way to do?\nI am trying to do Browser <------> MITM <------> remote_proxy(forwards and not intercepts the ssl) <------> Server\nruning mitmdump -s \"update_mitmproxy.py\" -U http://remote_server:port this works properly, but i need to be able to dynamically change the upstream server.\nSystem information\nPython version: 2.7.12\nPlatform: Linux-4.4.0-47-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g  1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial```", "issue_status": "Closed", "issue_reporting_time": "2016-11-22T14:37:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "870": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1773", "issue_id": "#1773", "issue_summary": "mitmproxy run question", "issue_description": "YangShaoXiong commented on 22 Nov 2016\nSteps to reproduce the problem:\nprompt install success\n2.but run \"\u279c bin mitmdump --version\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmdump\", line 7, in\nfrom mitmproxy.main import mitmdump\nFile \"/Library/Python/2.7/site-packages/mitmproxy/main.py\", line 7, in\nfrom six.moves import _thread # PY3: We only need _thread.error, which is an alias of RuntimeError in 3.3+\nImportError: cannot import name _thread\"\nAny other comments? What have you tried so far?\nSystem information", "issue_status": "Closed", "issue_reporting_time": "2016-11-22T08:13:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "871": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1772", "issue_id": "#1772", "issue_summary": "cloudflare sites won't run", "issue_description": "networksys commented on 22 Nov 2016\nSteps to reproduce the problem:\nTurn on mitmdump and go to:\nhttps://blog.cloudflare.com/introducing-strict-ssl-protecting-against-a-man-in-the-middle-attack-on-origin-traffic/\nYou'll get a 400 error.\nAny other comments? What have you tried so far?\nIs that error related to certificate pinning? Is there a possibility to auto detect Cloudflare sites and ignore them for proxying. A way would be to read the cloudflare header and ignore if it appears but what if other CDN providers have that protection too?\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.2\nPlatform: Windows-7-6.1.7601-SP1\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nWindows version: 7 6.1.7601 SP1 Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2016-11-21T20:48:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "872": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1771", "issue_id": "#1771", "issue_summary": "android emulator http-proxy", "issue_description": "kobster1 commented on 21 Nov 2016\nInstalled Whatsapp on android emulator\nInstalled mitmproxy\nstarted Android emulator using adb with the http-proxy flag,\nTried browsing via emualtor browser works fine i can see the requests in mitmproxy, when I try registering Whatsapp/Viber I enter my phone number and press continue and then I get a \"No internet connection\" error.\nSo i tried port 80 as well as port 8080 as my http-proxy for the emulator still no success with Whatsapp/Viber but like i said I can browse the web from with in the emulaotr and see the requests in mitmproxy its just Whatsapp and Viber that I;ve tried and that did not work.\nSystem information\nMitmproxy version: 0.18.2\nPython version: 2.7.6\nPlatform: Linux-4.2.0-27-generic-x86_64-with-Ubuntu-14.04-trusty\nSSL version: OpenSSL 1.0.1f 6 Jan 2014\nLinux distro: Ubuntu 14.04 trusty\nEmulator versions tested on:\nAndroid 4.3.1 API 18\nAndroid 6.0 API 23\nplease help!!!!", "issue_status": "Closed", "issue_reporting_time": "2016-11-21T17:11:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "873": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1770", "issue_id": "#1770", "issue_summary": "flowbasic example is broken", "issue_description": "ja8zyjits commented on 21 Nov 2016\nSteps to reproduce the problem:\nCopy the following script\nfrom mitmproxy import controller, proxy\nfrom mitmproxy.proxy.server import ProxyServer\nfrom mitmproxy.options import Options\n\n\nclass MitmProxyServer(controller.Master):\n\n     def __init__(self, server_proxy):\n         self.server = None\n         self.server_proxy = server_proxy\n         self.create_server()\n         controller.Master.__init__(self, self.server)\n\n\n     def create_server(self):\n         host, port = self.server_proxy.split(':')\n         config = proxy.ProxyConfig(Options(listen_port=int(port), cadir=\"~/.mitmproxy/\"))\n         self.server = ProxyServer(config)\n\n     def run(self):\n         try:\n             controller.Master.run(self)\n         except KeyboardInterrupt:\n            self.shutdown()\n\n     def handle_request(self, f):\n         print \"In handle_request\"\n         f.reply()\n\n     def handle_response(self, f):\n         f.reply()\n\nif __name__ == \"__main__\":\n    m = MitmProxyServer('127.0.0.1:8081')\n    m.run()\nRun the above script\nFails with the following traceback\njitesh@jitesh-laptop:~/projects$ python mit_testing.py \nTraceback (most recent call last):\n  File \"mit_testing.py\", line 38, in <module>\n    m = MitmProxyServer('127.0.0.1:8081')\n  File \"mit_testing.py\", line 12, in __init__\n    controller.Master.__init__(self, self.server)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/controller.py\", line 92, in __init__\n    self.addons = addons.Addons(self)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/addons.py\", line 14, in __init__\n    master.options.changed.connect(self._options_update)\nAttributeError: 'ProxyServer' object has no attribute 'changed'\nAny other comments? What have you tried so far?\nI tried to go through the code but the code i have seems to be different from what i can see in the repo\nI cant see anything related to addons.py in the current repository\nCan we run mitmproxy server in this way?\nSystem information\njitesh@jitesh-laptop:~/projects$ mitmdump --sysinfo\nMitmproxy version: 0.18.2\nPython version: 2.7.12\nPlatform: Linux-4.4.0-47-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g  1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2016-11-21T15:37:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "874": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1764", "issue_id": "#1764", "issue_summary": "Overhaul Streaming Support", "issue_description": "Member\nKriechi commented on 20 Nov 2016 \u2022\nedited by dufferzafar\nref #856\nref #1147\nref #1506\nRecent core refactoring efforts touched our streaming support for large responses a couple of times.\nHere a couple of proposals which could improve things a lot:\nsupport request streaming\nuseful for file uploads, inspecting S3 clients and other HTTP-based storage APIs\nsee #1506 for an unfortunately now obsolete PR\nstream by default for files larger than X bytes\nAFAIK the current default is to just fail the request if the returned Content-Length is larger than --body-size-limit. This is not very convenient, nor intuitive.\nsupport WebSocket streaming for messages and/or frames\ntypical WebSocket messages are small JSON-ish things, but one could do large binary file transfers as well.\n2", "issue_status": "Closed", "issue_reporting_time": "2016-11-20T09:04:37Z", "fixed_by": "#2369", "pull_request_summary": "HTTP request & WebSocket message streaming", "pull_request_description": "Member\nujjwal96 commented on 2 Jun 2017 \u2022\nedited by Kriechi\nhttp1\nhttp1 tests\nhttp2\nhttp2 tests\nwebsockets\nwebsockets tests\ncloses #1764\nref #1147", "pull_request_status": "Merged", "issue_fixed_time": "2017-07-04T09:28:26Z", "files_changed": [["4", "docs/features/passthrough.rst"], ["68", "docs/features/responsestreaming.rst"], ["102", "docs/features/streaming.rst"], ["2", "docs/features/tcpproxy.rst"], ["2", "docs/index.rst"], ["2", "examples/complex/stream.py"], ["12", "mitmproxy/addons/streambodies.py"], ["7", "mitmproxy/options.py"], ["25", "mitmproxy/proxy/protocol/http.py"], ["10", "mitmproxy/proxy/protocol/http1.py"], ["42", "mitmproxy/proxy/protocol/http2.py"], ["77", "mitmproxy/proxy/protocol/websocket.py"], ["1", "mitmproxy/websocket.py"], ["6", "test/mitmproxy/addons/test_streambodies.py"], ["9", "test/mitmproxy/proxy/protocol/test_http1.py"], ["124", "test/mitmproxy/proxy/protocol/test_http2.py"], ["37", "test/mitmproxy/proxy/protocol/test_websocket.py"], ["47", "test/mitmproxy/proxy/test_server.py"]]}, "875": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1763", "issue_id": "#1763", "issue_summary": "Error loading Python DLL on Windows", "issue_description": "trilliput commented on 20 Nov 2016\nI can't run mitmdump 0.18.1 and 0.18.2, but 0.17 works fine.\nSteps to reproduce the problem:\nDownload binaries for windows\nRun .\\mitmdump.exe --help or .\\mitmdump.exe --sysinfo\nOutput: Error loading Python DLL: C:\\Users\\shmyg\\AppData\\Local\\Temp\\_MEI16602\\python35.dll (error code 126). There is no folder C:\\Users\\shmyg\\AppData\\Local\\Temp_MEI16602 at all.\nSystem information\nPretty fresh Windows 10 without antivirus in a virtual machine. No Python is installed.", "issue_status": "Closed", "issue_reporting_time": "2016-11-19T22:03:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "876": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1762", "issue_id": "#1762", "issue_summary": "Error loading Python DLL on Windows", "issue_description": "shmygol commented on 20 Nov 2016\nI can't run mitmdump 0.18.1 and 0.18.2, but 0.17 works fine.\nSteps to reproduce the problem:\nDownload binaries for windows\nRun .\\mitmdump.exe --help or .\\mitmdump.exe --sysinfo\nOutput: Error loading Python DLL: C:\\Users\\shmyg\\AppData\\Local\\Temp\\_MEI16602\\python35.dll (error code 126). There is no folder C:\\Users\\shmyg\\AppData\\Local\\Temp_MEI16602 at all.\nSystem information\nPretty fresh Windows 10 without antivirus in a virtual machine. No Python is installed.", "issue_status": "Closed", "issue_reporting_time": "2016-11-19T21:57:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "877": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1761", "issue_id": "#1761", "issue_summary": "vim-like left/right navigation between flowlist and flowview in mitmproxy", "issue_description": "Contributor\neboda commented on 20 Nov 2016\nWhat do you guys think about navigating left/right with h / l between flowlist and the tabs in flowview.\nBasically, when you are in the flowlist and have one flow selected, you could hit l to bring you to the flowview for that item (instead of using Enter). Then, once inside the flowview the navigation would be as it is now, except for when you are on the Request tab and hit h, which would bring you back to the flowlist (instead of going back to the Details tab).\nMaybe it's just me, but I think it is more natural and would allow faster navigation then with Enter and q. Even though we could of course keep the actions for Enter and q the same, just add the new ones in addition.\nWhat do you guys think?", "issue_status": "Closed", "issue_reporting_time": "2016-11-19T18:48:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "878": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1759", "issue_id": "#1759", "issue_summary": "Smoke Tests", "issue_description": "Member\nKriechi commented on 18 Nov 2016 \u2022\nedited\nweebly.com\ncurl -L -k -s -A 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:50.0) Gecko/20100101 Firefox/50.0' --proxy http://localhost:8080 http://weebly.com/ -v\ngives:\n127.0.0.1:60757: clientconnect\n127.0.0.1:60757: GET http://weebly.com/\n              << 301 Moved Permanently 230b\n127.0.0.1:60757: GET http://www.weebly.com/\n              << 302 Found 0b\n127.0.0.1:60757: GET http://www.weebly.com/dehttp://www.weebly.com:80/\n              << 301 Moved Permanently 661b\nafter which the client connection just hangs. This seems to be related to first-line format being absolute.\nSame for bbc.co.uk\naddthis.com\ncurl -L -k -s -A 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:50.0) Gecko/20100101 Firefox/50.0' --proxy http://localhost:8080 http://addthis.com/ -v\ngives:\n127.0.0.1:61559: clientconnect\n127.0.0.1:61559: GET http://addthis.com/\n              << 400 Bad Request 0b\n127.0.0.1:61559: clientdisconnect\n> GET http://addthis.com/ HTTP/1.1\n> Host: addthis.com\n> User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:50.0) Gecko/20100101 Firefox/50.0\n> Accept: */*\n> Proxy-Connection: Keep-Alive\n>\n< HTTP/1.1 400 Bad Request\n< Date: Fri, 18 Nov 2016 18:09:02 GMT\n< Transfer-Encoding: chunked\n< Connection: keep-alive\n< Server: cloudflare-nginx\n< CF-RAY: 303d5f05901763df-FRA\n<\nsame for soundcloud.com and www.huffingtonpost.com\nref #1754", "issue_status": "Closed", "issue_reporting_time": "2016-11-18T18:16:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "879": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1758", "issue_id": "#1758", "issue_summary": "Correct way to retry response on 503 in script?", "issue_description": "Contributor\nfotinakis commented on 18 Nov 2016 \u2022\nedited\nEnv: mitmdump 0.18.2 (trying to migrate a script from 0.16)\nHello!\nI'm trying to understand how I might use replay_request or something else to add proxy-level retries on certain errors, such as when a flaky backend throws a 503 error.\nI've tried this:\n$ mitmdump -p 8080 --no-http2 -s myscript.py\nmyscript.py:\nfrom mitmproxy import ctx\n\ndef response(flow):\n    # Retry once if the backend responded with 503:\n    if flow.response.status_code == 503:\n        f = ctx.master.duplicate_flow(flow)\n        ctx.master.replay_request(f, block=True)\n...but this seems to deadlock, I think because I don't understand the way the main thread processes flows (or how exactly to replace the current flow.response).\nCan you point me in the right direction here?", "issue_status": "Closed", "issue_reporting_time": "2016-11-18T00:54:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "880": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1756", "issue_id": "#1756", "issue_summary": "Cannot install on Windows with Python 3.5", "issue_description": "ghost commented on 18 Nov 2016\nSteps to reproduce the problem:\nInstall Python 3.5 on Windows\npip install mitmproxy\nBuilding lxml version 3.6.0.\nBuilding without Cython.\nERROR: b\"'xslt-config' is not recognized as an internal or external command,\\r\\noperable program or batch file.\nAny other comments? What have you tried so far?\nI attempted to install a binary version of lxml but it will not work because the oldest lxml version available for Python 3.5 on Windows is 3.6.4 but mitmproxy required 3.6.0.", "issue_status": "Closed", "issue_reporting_time": "2016-11-17T21:40:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "881": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1755", "issue_id": "#1755", "issue_summary": "SSLError in requirements.txt: hostname 'snapshots.mitmproxy.org' doesn't match 'slack.mitmproxy.org'", "issue_description": "silascutler commented on 17 Nov 2016\nSteps to reproduce the problem:\nrun pip install -r requirements.txt\nAny other comments? What have you tried so far?\nSystem information\nmitmproxy# pip install -r requirements.txt\nDownloading/unpacking https://snapshots.mitmproxy.org/misc/lxml-3.6.0-cp35-cp35m-win32.whl; sys_platform == 'win32' and python_version == '3.5' (from -r requirements.txt (line 1))\nCleaning up...\nException:\nTraceback (most recent call last):\nFile \"/usr/lib/python2.7/dist-packages/pip/basecommand.py\", line 122, in main\nstatus = self.run(options, args)\nFile \"/usr/lib/python2.7/dist-packages/pip/commands/install.py\", line 278, in run\nrequirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundle=self.bundle)\nFile \"/usr/lib/python2.7/dist-packages/pip/req.py\", line 1198, in prepare_files\ndo_download,\nFile \"/usr/lib/python2.7/dist-packages/pip/req.py\", line 1376, in unpack_url\nself.session,\nFile \"/usr/lib/python2.7/dist-packages/pip/download.py\", line 546, in unpack_http_url\nresp = session.get(target_url, stream=True)\nFile \"/usr/share/python-wheels/requests-2.2.1-py2.py3-none-any.whl/requests/sessions.py\", line 467, in get\nreturn self.request('GET', url, **kwargs)\nFile \"/usr/lib/python2.7/dist-packages/pip/download.py\", line 237, in request\nreturn super(PipSession, self).request(method, url, *args, **kwargs)\nFile \"/usr/share/python-wheels/requests-2.2.1-py2.py3-none-any.whl/requests/sessions.py\", line 455, in request\nresp = self.send(prep, **send_kwargs)\nFile \"/usr/share/python-wheels/requests-2.2.1-py2.py3-none-any.whl/requests/sessions.py\", line 558, in send\nr = adapter.send(request, **kwargs)\nFile \"/usr/share/python-wheels/requests-2.2.1-py2.py3-none-any.whl/requests/adapters.py\", line 385, in send\nraise SSLError(e)\nSSLError: hostname 'snapshots.mitmproxy.org' doesn't match 'slack.mitmproxy.org'\nStoring debug log for failure in /root/.pip/pip.log\npip freeze\nLandscape-Client==14.12\nMako==0.9.1\nMarkupSafe==0.18\nPAM==0.4.2\nTwisted-Core==13.2.0\napt-xapian-index==0.45\nargparse==1.2.1\nchardet==2.0.1\ncolorama==0.2.5\nconfigobj==4.7.2\nhtml5lib==0.999\npyOpenSSL==0.13\npygobject==3.12.0\npyserial==2.6\npython-apt==0.9.3.5ubuntu2\npython-debian==0.1.21-nmu2ubuntu2\nrequests==2.2.1\nsix==1.5.2\nssh-import-id==3.21\nurllib3==1.7.1\nwheel==0.24.0\nwsgiref==0.1.2\nzenmap==6.40\nzope.interface==4.0.5", "issue_status": "Closed", "issue_reporting_time": "2016-11-17T12:54:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "882": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1754", "issue_id": "#1754", "issue_summary": "Cannot open example.com", "issue_description": "Member\nmhils commented on 17 Nov 2016\nSteps to reproduce the problem:\ncurl -x localhost:8080 example.com\nReceive 400 - Bad Request response\nAny other comments? What have you tried so far?\n3958940 is the first bad commit\nSystem information\nMitmproxy version: master", "issue_status": "Closed", "issue_reporting_time": "2016-11-16T21:18:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "883": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1750", "issue_id": "#1750", "issue_summary": "Writing into file has impact on inline scripts", "issue_description": "Contributor\nphackt commented on 16 Nov 2016 \u2022\nedited\nSteps to reproduce the problem:\nWorking with with flowwriter.py template for version v0.18.2\nmitmproxy --script \"./flowwriter.py ./test.log\" --eventlog\nfull command is mitmproxy --anticache --host --anticomp --noapp --script \"./flowwriter.py ./requests.log\" --script ./sslstrip.py --eventlog\nAny other comments? What have you tried so far?\nflowwriter.py is not working in conjunction with an other script and with wb mode (nothing written in file).\nIt seems that this is a buffering matter, an f = open(path, \"ab\") will do the trick on my side, without any decoded(flow.request) function and without any other script loaded. Unfortunately the f = open(path, \"wb\", 0) is not doing the trick if i do not want to be in an append mode. But as mentioned another problem is that loading this script (flowwriter.py), or any file writing method (option -a, -w), will cause any other scripts unstable (like reloading several times) (ex: --script \"./flowwriter.py ./requests.log\" --script ./sslstrip.py). The same behavior occurs with mitmdump with --script ./sslstrip.py -a ./requests.log, but everything works fine (mitmproxy and mitmdump) if i do not write into files for logging.\nRegards,\nEDIT\na last thing:\nmitmproxy --script \"./sslstrip.py\" --eventlog -a requests.log ==> Does not work as expected\n(go on http://www.ameli.fr/, click on \"Mon compte ameli\", HttpReadDisconnect('Server disconnected',) error)\nmitmproxy --script \"./sslstrip.py\" --eventlog ==> Works as expected\n(go on http://www.ameli.fr/, click on \"Mon compte ameli\", page is well displayed)\nThanks,\nSystem information\nMitmproxy version: 0.18.2\nPython version: 2.7.12+\nPlatform: Linux-4.8.0-kali1-amd64-x86_64-with-Kali-kali-rolling-kali-rolling\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nLinux distro: Kali kali-rolling kali-rolling\n$ whereis mitmproxy\nmitmproxy: /usr/bin/mitmproxy /usr/share/man/man1/mitmproxy.1.gz", "issue_status": "Closed", "issue_reporting_time": "2016-11-16T11:54:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "884": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1749", "issue_id": "#1749", "issue_summary": "Update PyDivert", "issue_description": "Member\nmhils commented on 16 Nov 2016\nLong story short, we should upgrade to PyDivert 2.x!", "issue_status": "Closed", "issue_reporting_time": "2016-11-16T10:30:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "885": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1747", "issue_id": "#1747", "issue_summary": "Network is slow when reading file inside a script", "issue_description": "amirbilu commented on 16 Nov 2016\nHi,\nFirst of all, would like to thank anyone for this amazing project.\nI wrote a small script which gets a key-value json of url1->url2,\nAnd respond with url2 while trying to reach url1.\nThis is the script:\nimport argparse\nimport os\nimport json\nfrom mitmproxy import ctx\nfrom netlib.http import url\n\n\nclass Replacer:\n    def __init__(self, urls_mapping):\n        with open(os.path.expanduser(urls_mapping)) as urls_mapping_file:\n            self.urls_mapping = json.load(urls_mapping_file)\n        \n\n    def request(self, flow):\n        if not flow.request.url in self.urls_mapping:\n            return;\n\n        src = url.parse(flow.request.url)\n        dst = url.parse(self.urls_mapping[flow.request.url])\n\n        flow.request.path = dst[3]\n        flow.request.port = dst[2]\n        flow.request.host = dst[1]\n\n\ndef start():\n    parser = argparse.ArgumentParser()\n    parser.add_argument(\"urls_mapping\",type=str)\n    args = parser.parse_args()\n    return Replacer(args.urls_mapping)\nThe logic works good, but it seems to make the network much slower.\nIs the construction of the Replacer object made with every request? Making it reading the json file every time? Is there any way to optimize the script?\nThanks guys!", "issue_status": "Closed", "issue_reporting_time": "2016-11-16T07:40:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "886": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1746", "issue_id": "#1746", "issue_summary": "Can't run windows release 0.18.2", "issue_description": "remoe commented on 15 Nov 2016 \u2022\nedited\nAfter a first connection it throws the following error:\nTraceback (most recent call last):\n  File \"site-packages\\netlib\\tcp.py\", line 918, in connection_thread\n  File \"site-packages\\mitmproxy\\proxy\\server.py\", line 66, in handle_client_connection\n  File \"site-packages\\mitmproxy\\proxy\\server.py\", line 116, in handle\n  File \"site-packages\\mitmproxy\\proxy\\server.py\", line 96, in _create_root_layer\n  File \"site-packages\\mitmproxy\\proxy\\modes\\transparent_proxy.py\", line 12, in __init__\n  File \"site-packages\\mitmproxy\\platform\\windows.py\", line 22, in __init__\n  File \"site-packages\\mitmproxy\\platform\\windows.py\", line 235, in setup\n  File \"site-packages\\mitmproxy\\platform\\windows.py\", line 200, in __init__\n  File \"site-packages\\pydivert\\windivert.py\", line 112, in __init__\nValueError: Unable to find WinDivert.dll\nSteps to reproduce the problem:\ndownload release from https://github.com/mitmproxy/mitmproxy/releases/tag/v0.18.2\nrun mitmdump.exe -T --host\ncrash after first connection\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 0.18.2\nPython version: 3.5.2\nPlatform: Windows-7-6.1.7601-SP1\nSSL version: OpenSSL 1.0.2j  26 Sep 2016\nWindows version: 7 6.1.7601 SP1 Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2016-11-15T18:04:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "887": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1744", "issue_id": "#1744", "issue_summary": "mitmproxy update breaks global state", "issue_description": "escitalopram commented on 15 Nov 2016 \u2022\nedited\nI have an application where I need to count incoming requests, and I use global variables for that, like\nmyVariable=0\n\ndef responseheaders(flow):\n    #do something asynchronously and update myVariable\nWhich stopped working when I updated to 0.18.x, because it initializes myVariable over and over for each request :(\nIn case this is not a bug, what would the new designated facility to keep global state instead of global variables be?", "issue_status": "Closed", "issue_reporting_time": "2016-11-14T20:35:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "888": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1741", "issue_id": "#1741", "issue_summary": "Only show requests coming to interested", "issue_description": "hoangphuoc25 commented on 14 Nov 2016\nIs there anyway to log only requests coming to an URL of my interest? Currently there's an option to do exactly the opposite of that (--ignore). Our app sends a lot of requests to third party services for ad/app tracking and I just want to see what requests the app sends to our server.", "issue_status": "Closed", "issue_reporting_time": "2016-11-14T05:25:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "889": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1737", "issue_id": "#1737", "issue_summary": "Crash when connecting to HTTP/1.1 server via mitmdump and changing host to a server that supports h2", "issue_description": "muralisr commented on 13 Nov 2016\nSteps to reproduce the problem:\nRun mitmdump with a simple inline script that changes the host to one capable of h2.\nOpen https://holmusk.com (any website that only supports http1.1) via Chrome connected to proxy server\nObserve mitmdump stdout for error like below -\nAny other comments? What have you tried so far?\nHere is the script I am using to change the host -\nChanging host to a server that supports HTTP1.1 only helps to bypass the issue. So does passing in the disable http2 flag when starting mitmdump. Also force setting scheme and port to http and 80 helps to mask the issue (since h2 works on https only).\nI have already created an AWS CloudFront distribution that is capable of h2. flow.request.host = 'dvmu1lzlfqifb.cloudfront.net'. Please pass in the original website hostname as a request header flow.request.headers['Dex-Client-Domain'] = 'https://holmusk.com/' if you want to use my distribution.\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.2\nPlatform: Linux-4.4.0-45-generic-x86_64-with-Ubuntu-16.04-xenial\nSSL version: OpenSSL 1.0.2g 1 Mar 2016\nLinux distro: Ubuntu 16.04 xenial", "issue_status": "Closed", "issue_reporting_time": "2016-11-13T01:46:57Z", "fixed_by": "#1738", "pull_request_summary": "restrict ALPN offers if host changes", "pull_request_description": "Member\nKriechi commented on 13 Nov 2016\nfixes #1737\nIf the client has already negotiated an ALP, then force the server to use the same.\nOtherwise we get a protocol mismatch between client <-> server.\nBut in order for HTTP/2 to work properly we have to relay some messages directly between client and server.\nThis can only happen if the host gets changed after the initial connection was established.\nE.g.:\nClient tries to open an HTTPS url,\nthe client offers http/1.1 and h2,\nthe initial host is only capable of http/1.1,\nthen the first server connection negotiates http/1.1,\nbut after the server_conn change, the new host offers h2\nwhich results in garbage because the layers don' match.\n@muralisr can you please test if this patch fixes your problem?", "pull_request_status": "Merged", "issue_fixed_time": "2016-11-13T19:50:29Z", "files_changed": [["12", "mitmproxy/proxy/protocol/tls.py"]]}, "890": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1734", "issue_id": "#1734", "issue_summary": "Ensure that addons can access auth credentials from clients", "issue_description": "Member\ncortesi commented on 12 Nov 2016\nSee #1732 by @martyn-w for the motivation and discussion.", "issue_status": "Closed", "issue_reporting_time": "2016-11-12T01:22:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "891": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1731", "issue_id": "#1731", "issue_summary": "Add HTTP upstream", "issue_description": "pauldraper commented on 10 Nov 2016 \u2022\nedited\nI want to accept requests as an HTTPS proxy and forward them to an HTTP proxy.\nCurrently, -U always forwards the request as if the upsteam were an HTTPS proxy.\nEDIT: put another way, I want to use mitmproxy as an HTTPS proxy that strips the SSL/TLS for a HTTP proxy.", "issue_status": "Closed", "issue_reporting_time": "2016-11-10T17:38:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "892": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1730", "issue_id": "#1730", "issue_summary": "bug\uff1f", "issue_description": "wilson9x1 commented on 10 Nov 2016", "issue_status": "Closed", "issue_reporting_time": "2016-11-10T10:16:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "893": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1728", "issue_id": "#1728", "issue_summary": "Crash on www.evernote.com", "issue_description": "tomlabaude commented on 9 Nov 2016 \u2022\nedited\nSteps to reproduce the problem:\nLaunch mitmdump without argument, ./mitmdump\nSet HTTPS proxy as a general system proxy on Mac\nOn Chrome, visit https://www.evernote.com -> it crashes with traceback:\n127.0.0.1:55955: GET https://www.evernote.com/\nTraceback (most recent call last):\n  File \"<string>\", line 3, in <module>\n  File \"site-packages/mitmproxy/main.py\", line 108, in mitmdump\n  File \"site-packages/mitmproxy/dump.py\", line 89, in run\n  File \"site-packages/mitmproxy/controller.py\", line 142, in run\n  File \"site-packages/mitmproxy/controller.py\", line 163, in tick\n  File \"site-packages/mitmproxy/controller.py\", line 253, in wrapper\n  File \"site-packages/mitmproxy/addons.py\", line 85, in __call__\n  File \"site-packages/mitmproxy/addons.py\", line 81, in invoke\n  File \"site-packages/mitmproxy/builtins/dumper.py\", line 229, in response\n  File \"site-packages/mitmproxy/builtins/dumper.py\", line 211, in echo_flow\n  File \"site-packages/mitmproxy/builtins/dumper.py\", line 203, in _echo_response_line\n  File \"site-packages/mitmproxy/builtins/dumper.py\", line 46, in echo\n  File \"site-packages/click/termui.py\", line 420, in secho\n  File \"site-packages/click/utils.py\", line 259, in echo\nUnicodeEncodeError: 'utf-8' codec can't encode character '\\udce9' in position 57: surrogates not allowed\nmitmdump returned -1\nAny other comments? What have you tried so far?\nIt doesn't happen on https://evernote.com\nSystem information\n./mitmdump --sysinfo\nMitmproxy version: 0.18.2\nPython version: 3.5.2\nPlatform: Darwin-16.1.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j  26 Sep 2016\nMac version: 10.12.1 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-11-09T15:37:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "894": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1726", "issue_id": "#1726", "issue_summary": "--host option and pretty_host should also use \":authority\" header for HTTP2 requests", "issue_description": "tomlabaude commented on 9 Nov 2016\nSteps to reproduce the problem:\nConnect to https://http2.akamai.com/demo for HTTP2 tests\npretty_host = IP_ADDRESS, but :authority header contains http2.akamai.com\nAny other comments? What have you tried so far?\nSystem information\n./mitmdump --sysinfo\nMitmproxy version: 0.18.2\nPython version: 3.5.2\nPlatform: Darwin-16.1.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.12.1 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-11-09T12:08:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "895": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1722", "issue_id": "#1722", "issue_summary": "Proxy-Authentication does not work with HTTPS sites", "issue_description": "Member\nmhils commented on 5 Nov 2016 \u2022\nedited\nSteps to reproduce the problem:\nmitmdump --nonanonymous\ncurl -x localhost:8080 -k -U foo:bar http://example.com (works)\ncurl -x localhost:8080 -k -U foo:bar https://example.com (doesn't)\nAny other comments? What have you tried so far?\nThe problem is an invalid handling of http_authenticated.", "issue_status": "Closed", "issue_reporting_time": "2016-11-05T02:16:58Z", "fixed_by": "#2029", "pull_request_summary": "Improve ProxyAuth", "pull_request_description": "Member\nmhils commented on 15 Feb 2017\nThis PR fixes #1722 and #1734, and hopefully #2019 as well.\n@laurmurclar, can you check if that works for you?", "pull_request_status": "Merged", "issue_fixed_time": "2017-02-15T15:52:21Z", "files_changed": [["147", "mitmproxy/addons/proxyauth.py"], ["26", "mitmproxy/http.py"], ["50", "test/mitmproxy/addons/test_proxyauth.py"]]}, "896": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1719", "issue_id": "#1719", "issue_summary": "redirect_requests.py doesn't work( cannot import name 'http')", "issue_description": "Cojad commented on 4 Nov 2016\nLoading script: redirect_requests.py\nScript error: Traceback (most recent call last):\nFile \"redirect_requests.py\", line 4, in\nfrom mitmproxy import http\nImportError: cannot import name 'http'\nSteps to reproduce the problem:\nsimply execute script from examples(clone from github master)\nmitmdump -s redirect_requests.py.\nAny other comments? What have you tried so far?\nI tried both python 2.4.7/3.5 but in vain.\nSystem information\nMitmproxy version: 0.18.2\nPython version: 3.5.2\nPlatform: Linux-3.16.0-4-amd64-x86_64-with-debian-8.6\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nLinux distro: debian 8.6", "issue_status": "Closed", "issue_reporting_time": "2016-11-04T17:07:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "897": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1718", "issue_id": "#1718", "issue_summary": "mitmdump doesn't seem to work when bound to localhost", "issue_description": "virtuald commented on 4 Nov 2016\nSteps to reproduce the problem:\n$ mitmdump -b 127.0.0.1 -R https://example.com -p 1234 -s \"script.py arg\"\nProxy server listening at http://127.0.0.1:1234\n127.0.0.1:49415: clientconnect\n127.0.0.1:49415: GET https://example.com/page\n << Server connection to example.com:443 failed: Error connecting to \"example.com\": [Errno 49] Can't assign requested address\nAny other comments? What have you tried so far?\nWorks when bind argument isn't specified. Doesn't work on Windows either.\nSystem information\nMitmproxy version: 0.18.2\nPython version: 2.7.11\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.11.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-11-04T16:36:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "898": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1717", "issue_id": "#1717", "issue_summary": "Documentation for using mitmproxy as a library", "issue_description": "yifeikong commented on 4 Nov 2016\nHi, I really need to use mitmproxy as a library other that write scriptlet for mitmproxy, but I can't find any documentation on that, and the examples in the examples folder seems to be buggy and lack of update.\nThanks for your attention!", "issue_status": "Closed", "issue_reporting_time": "2016-11-04T07:00:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "899": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1703", "issue_id": "#1703", "issue_summary": "Allow addons to extend Options", "issue_description": "Member\ncortesi commented on 2 Nov 2016\nAddons need to be able to extend options, ideally with type assertions intact. Once we have an interface to do this, we can consider how to expose addon options on the command-line.\nThis should be considered in conjunction with the other Options changes we're discussing.", "issue_status": "Closed", "issue_reporting_time": "2016-11-01T23:52:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "900": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1699", "issue_id": "#1699", "issue_summary": "Serialise/deserialise Options", "issue_description": "Member\ncortesi commented on 1 Nov 2016\nWe need to add serialization and de-serialization for Options. This will let us move away from ConfigArgParser and give us a better configuration format.\nHere's one comparison of the options out there:\nhttps://gist.github.com/njsmith/78f68204c5d969f8c8bc645ef77d4a8f\nThere's some additional interesting context here:\navakar/pytoml#15\nAt this point, I think it's a tossup between yaml and toml. I'm slightly leaning towards toml.", "issue_status": "Closed", "issue_reporting_time": "2016-10-31T23:10:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "901": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1682", "issue_id": "#1682", "issue_summary": "Run 'basicflow' from 'examples/' fails at importing 'logging'", "issue_description": "strin commented on 28 Oct 2016\nSteps to reproduce the problem:\ngo to examples/\n2.run python basicflow\nyou'll get an error that says cannot import Handlers from logging.\nAny other comments? What have you tried so far?\nThis is because there's also another file called 'logging.py' in 'examples/'", "issue_status": "Closed", "issue_reporting_time": "2016-10-27T21:53:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "902": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1678", "issue_id": "#1678", "issue_summary": "/examples/nonblocking.py is broken.", "issue_description": "ghost commented on 27 Oct 2016 \u2022\nedited by ghost\nSteps to reproduce the problem:\nLoad the /examples/nonblocking.py script\naccess though mitmproxy, view some web pages.\npress E to see errors\nAny other comments? What have you tried so far?\nSystem information\n\u256d\u2500mindcat@mindcat-linux-pc /tmp  \n\u2570\u2500\u27a4  mitmdump --sysinfo\nMitmproxy version: 0.18.1\nPython version: 3.5.2\nPlatform: Linux-4.7.4-pf-x86_64-with-arch\nSSL version: OpenSSL 1.0.2h  3 May 2016\nLinux distro: arch  ", "issue_status": "Closed", "issue_reporting_time": "2016-10-27T01:35:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "903": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1676", "issue_id": "#1676", "issue_summary": "OpenSSL.crypto.Error: [('asn1 encoding routines', 'ASN1_mbstring_ncopy', 'string too long')]", "issue_description": "Member\nmhils commented on 26 Oct 2016\nSteps to reproduce the problem:\n???\n[1026/094737:ERROR:ssl_client_socket_openssl.cc(1149)] handshake failed; returned -1, SSL error code 1, net_error -100\nTraceback (most recent call last):\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\server.py\", line 115, in handle\n    root_layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 9, in __call__\n    layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\tls.py\", line 379, in __call__\n    layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\http1.py\", line 72, in __call__\n    layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\http.py\", line 173, in __call__\n    self.handle_regular_mode_connect(request)\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\http.py\", line 270, in handle_regular_mode_connect\n    layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\tls.py\", line 374, in __call__\n    self._establish_tls_with_client()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\tls.py\", line 463, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\proxy\\protocol\\tls.py\", line 580, in _find_cert\n    return self.config.certstore.get_cert(host, list(sans))\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\certs.py\", line 349, in get_cert\n    sans),\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\certs.py\", line 106, in dummy_cert\n    cert.get_subject().CN = commonname\n  File \"c:\\users\\user\\git\\mitmproxy\\venv\\lib\\site-packages\\OpenSSL\\crypto.py\", line 532, in __setattr__\n    _raise_current_error()\n  File \"c:\\users\\user\\git\\mitmproxy\\venv\\lib\\site-packages\\OpenSSL\\_util.py\", line 48, in exception_from_error_queue\n    raise exception_type(errors)\nOpenSSL.crypto.Error: [('asn1 encoding routines', 'ASN1_mbstring_ncopy', 'string too long')]\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nAny other comments? What have you tried so far?\nSystem information\nMitmproxy version: 0.19\nPython version: 3.5.2\nPlatform: Windows-10-10.0.14393-SP0\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nWindows version: 10 10.0.14393 SP0 Multiprocessor Free", "issue_status": "Closed", "issue_reporting_time": "2016-10-26T16:50:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "904": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1675", "issue_id": "#1675", "issue_summary": "SNI in ClientConnection that caused json.dumps broken", "issue_description": "Contributor\nchhsiao90 commented on 26 Oct 2016\nThe problem seems occurred after #1664 .\nIt seems that the Connection.get_servername() from OpenSSL return bytes.\nAnd that cause json dumps failed.\nI would like pick up this problem, and help display sni and cipher (from #582).\nIs that just used str(self.connection.get_servername()) to cast it into str is OK?\nSteps to reproduce the problem:\nmitmweb with latest master version\ncurl -x https://example.com\nmitmweb display error stacktrace\nTraceback (most recent call last):\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/tornado/ioloop.py\", line 1041, in _run\n    return self.callback()\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/tools/web/master.py\", line 172, in <lambda>\n    tornado.ioloop.PeriodicCallback(lambda: self.tick(timeout=0), 5).start()\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/master.py\", line 105, in tick\n    handle_func(obj)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/controller.py\", line 70, in wrapper\n    master.addons(f.__name__, message)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/addonmanager.py\", line 90, in __call__\n    self.invoke(i, name, *args, **kwargs)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/addonmanager.py\", line 85, in invoke\n    func(*args, **kwargs)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/addons/state.py\", line 285, in request\n    self.add_flow(f)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/addons/state.py\", line 205, in add_flow\n    self.flows._add(f)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/addons/state.py\", line 112, in _add\n    view._add(f)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/tools/web/master.py\", line 33, in _add\n    data=app.convert_flow_to_json_dict(f)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/tools/web/app.py\", line 174, in broadcast\n    message = json.dumps(kwargs, ensure_ascii=False)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/lib/python3.5/json/__init__.py\", line 237, in dumps\n    **kw).encode(obj)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/lib/python3.5/json/encoder.py\", line 198, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/lib/python3.5/json/encoder.py\", line 256, in iterencode\n    return _iterencode(o, 0)\n  File \"/Users/han-pc/.pyenv/versions/3.5.2/lib/python3.5/json/encoder.py\", line 179, in default\n    raise TypeError(repr(o) + \" is not JSON serializable\")\nTypeError: b'example.com' is not JSON serializable", "issue_status": "Closed", "issue_reporting_time": "2016-10-26T06:30:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "905": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1674", "issue_id": "#1674", "issue_summary": "Move interception into separate addon", "issue_description": "Member\nmhils commented on 26 Oct 2016\nThe logic for when we intercept and the corresponding option are currently duplicated between console and web:\nmitmproxy/tools/web/master.py#L181\nmitmproxy/tools/console/master.py#L662", "issue_status": "Closed", "issue_reporting_time": "2016-10-26T05:13:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "906": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1672", "issue_id": "#1672", "issue_summary": "You broken my plugin by change `def request(context, flow):` =(", "issue_description": "ghost commented on 26 Oct 2016\nWhere is the def request(context, flow):", "issue_status": "Closed", "issue_reporting_time": "2016-10-26T04:54:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "907": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1666", "issue_id": "#1666", "issue_summary": "mitmdump client replay is broken", "issue_description": "yifeikong commented on 25 Oct 2016\nSteps to reproduce the problem:\ndump flow to a file by mitmdump -p 10000 -w stats\nreplay it by mitmdump -nc stats\nthen it crashes\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmdump\", line 11, in <module>\n    sys.exit(mitmdump())\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/main.py\", line 102, in mitmdump\n    master = dump.DumpMaster(server, dump_options)\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/dump.py\", line 41, in __init__\n    self.addons.add(*builtins.default_addons())\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/addons.py\", line 51, in add\n    self.startup(i)\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/addons.py\", line 40, in startup\n    self.master.options.keys()\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/addons.py\", line 72, in invoke_with_context\n    self.invoke(addon, name, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/addons.py\", line 81, in invoke\n    func(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/builtins/clientplayback.py\", line 22, in configure\n    ctx.log.info(options.client_replay)\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/controller.py\", line 68, in info\n    self(txt, \"info\")\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/controller.py\", line 83, in __call__\n    self.master.add_log(text, level)\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/controller.py\", line 122, in add_log\n    self.addons(\"log\", LogEntry(e, level))\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/addons.py\", line 85, in __call__\n    self.invoke(i, name, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/addons.py\", line 81, in invoke\n    func(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/mitmproxy/builtins/termlog.py\", line 22, in log\n    err=(e.level == \"error\")\n  File \"/usr/local/lib/python2.7/site-packages/click/termui.py\", line 420, in secho\n    return echo(style(text, **styles), file=file, nl=nl, err=err, color=color)\n  File \"/usr/local/lib/python2.7/site-packages/click/termui.py\", line 393, in style\n    return ''.join(bits)\nTypeError: sequence item 1: expected string, list found\nAny other comments? What have you tried so far?\nhowever, mitmproxy -c stats works fine\nSystem information\non mac, with pip install mitmproxy, version 0.18.1", "issue_status": "Closed", "issue_reporting_time": "2016-10-25T07:24:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "908": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1665", "issue_id": "#1665", "issue_summary": "TypeError: __init__() got an unexpected keyword argument 'cadir", "issue_description": "t4mo commented on 25 Oct 2016\nSteps to reproduce the problem:\nI was using the python development agent to make an error.\npip install mimtproxy\n1.\nfrom mitmproxy import flow, proxy\nfrom mitmproxy.proxy.server import ProxyServer\n**\nconfig = proxy.ProxyConfig(\nport=8080,\n# use ~/.mitmproxy/mitmproxy-ca.pem as default CA file.\ncadir=\"./ssl/\",\n)\nstate = flow.State()\nserver = ProxyServer(config)\nm = MyMaster(server, state)\nm.run()\n2. python test.py\n3. Remind\uff1a\ncadir=\"./ssl/\",\nTypeError: init() got an unexpected keyword argument 'cadir'\nAny other comments? What have you tried so far?\nSystem information\npython2.7\ncentos6.5\nmitmproxy 0.1.8", "issue_status": "Closed", "issue_reporting_time": "2016-10-25T06:49:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "909": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1658", "issue_id": "#1658", "issue_summary": "Regular expressions are not working from the command line, and when loaded from a file.", "issue_description": "cyan1de commented on 23 Oct 2016 \u2022\nedited\nFirst thing is very simple, when im using mitmproxy, command like:mitmproxy -T \u2014port 8081 \u2014replace :~s:content:replace is not working.I replaced the word \"content\",restarted mitmproxy many times, but nothing has changed.\nSecond thing.\nWhen im using option --replace-from-file with regex <script((?!<script).|\\n)*?to\\x3A.*?\\x22(.*?)\\x22(.|\\n)*?new\\s(.|\\n)*?</script> websites that use http protocol do not work.\nAnd some https websites to...when im trying to access to yandex.ru for example.\nBut in this case,i do not have redirect to https://yandex.ru/\nWhen I delete a regular expression, it works.\nMitmproxy version: 0.18.1\nPython version: 3.5.2\nPlatform: Linux-2.6.32-642.3.1.el6.x86_64-x86_64-with-centos-6.8-Final\nSSL version: OpenSSL 1.0.1e-fips 11 Feb 2013\nLinux distro: CentOS 6.8 Final", "issue_status": "Closed", "issue_reporting_time": "2016-10-23T10:00:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "910": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1657", "issue_id": "#1657", "issue_summary": "Remove lxml dependency", "issue_description": "Member\nmhils commented on 23 Oct 2016 \u2022\nedited\nInstalling lxml is more or less painful on all the platforms we support. In particular, I tried for months to get the lxml maintainers to provide wheels for Windows, but to no avail.\nWe only use lxml for indenting the XML/HTML content views here. It would be interesting to see if we can just replace that with a more naive implementation that does indentation, so that we don't have to carry lxml with us.\nAs an additional benefit, doing this in Python instead of C should make the whole thing considerably safer.\nrefs #845", "issue_status": "Closed", "issue_reporting_time": "2016-10-23T04:13:29Z", "fixed_by": "#1831", "pull_request_summary": "Split contentviews.py into mitmproxy.contentviews", "pull_request_description": "Member\nmhils commented on 9 Dec 2016 \u2022\nedited by Kriechi\nAs a preparation for ditching lxml, this PR splits up mitmproxy/contentviews.py into ~ one file per view. Thinking forward, each view could actually be a separate addon in the future, but let's keep this minimally invasive for now.\nThe mitmproxy.contenviews API remains unchanged.\nfixes #845\nfixes #1657\nfixes #1444", "pull_request_status": "Merged", "issue_fixed_time": "2016-12-10T18:33:27Z", "files_changed": [["2", ".appveyor.yml"], ["2", "examples/simple/modify_body_inject_iframe.py"]]}, "911": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1652", "issue_id": "#1652", "issue_summary": "Replace mitmproxy.utils.lrucache with functools.lru_cache", "issue_description": "Member\nmhils commented on 23 Oct 2016\nWe have a custom Least Recently Used Cache implementation in mitmproxy, because functools.lru_cache did not exist before Python 3.2. It's time to just take that out and replace it with functools.lru_cache. The API is quite similar, so that should not be too hard to do and a good beginner task!", "issue_status": "Closed", "issue_reporting_time": "2016-10-23T00:05:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "912": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1651", "issue_id": "#1651", "issue_summary": "README is not rendered properly on PyPI", "issue_description": "Member\nmhils commented on 23 Oct 2016\nSteps to reproduce the problem:\nOpen https://pypi.python.org/pypi/mitmproxy\nNotice that README is broken.\nAny other comments? What have you tried so far?\nPyPI is super restrictive about restructuredText, we probably have some validation errors. Might make sense to have that checked on CI if possible without too much effort.", "issue_status": "Closed", "issue_reporting_time": "2016-10-22T23:13:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "913": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1646", "issue_id": "#1646", "issue_summary": "All tests fail running py.test on RaspberryPi3", "issue_description": "E3V3A commented on 22 Oct 2016\nHi,\nI'm trying to make this work on a RaspberryPi3 running latest Rasbian \"jessie\". I've eventually managed to install everything properly (without failures) but in the final step of running the py.test I get all errors.\n(venv3) pi@raspberrypi:~/Tools/mitmproxy $ py.test\n=========================================================== test session starts ============================================================\nplatform linux -- Python 3.4.2, pytest-3.0.3, py-1.4.31, pluggy-0.4.0\nrootdir: /home/pi/Tools/mitmproxy, inifile: setup.cfg\nplugins: xdist-1.15.0, timeout-1.0.0, faulthandler-1.3.0, cov-2.4.0\ncollected 10 items / 85 errors\n\n================================================================== ERRORS ==================================================================\n___________________________________________ ERROR collecting test/mitmproxy/test_addonmanager.py ___________________________________________\nImportError while importing test module '/home/pi/Tools/mitmproxy/test/mitmproxy/test_addonmanager.py'.\nOriginal error message:\n'No module named 'typing''\nMake sure your test modules/packages have valid Python names.\n______________________________________________ ERROR collecting test/mitmproxy/test_certs.py _______________________________________________\nImportError while importing test module '/home/pi/Tools/mitmproxy/test/mitmproxy/test_certs.py'.\nOriginal error message:\n'No module named 'typing''\nMake sure your test modules/packages have valid Python names.\n...\nI have no idea what is the problem and I also have no idea what are the correct dependencies and requirements. They are very vague at best. The project would certainly benefit from better installation instructions and clearly state the various dependencies. For example , there is no place mentioned that Pillow fails because, wheel fails, because libjpeg-dev is not mentioned as a dependency, nor automatically installed. There are several of these similar issues.\nSo what am I missing to get these tests working?", "issue_status": "Closed", "issue_reporting_time": "2016-10-21T21:42:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "914": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1645", "issue_id": "#1645", "issue_summary": "OSX: core dump on exit", "issue_description": "Member\ncortesi commented on 22 Oct 2016 \u2022\nedited by mhils\nSteps to reproduce the problem:\nRun mitmproxy console\nMuck about with some flows - it's not clear if there's a specific triggering action\nExit mitmproxy\nObserve that core has been dumped with the following error:\nillegal hardware instruction (core dumped) mitmproxy\nThe backtrace shows:\n* thread #1: tid = 0x0000, 0x0000000110402f60, stop reason = signal SIGSTOP\n  * frame #0: 0x0000000110402f60\n    frame #1: 0x00000001101fa5a2 _openssl.abi3.so`SSL_free + 49\n    frame #2: 0x000000011024b79a _openssl.abi3.so`_cffi_f_SSL_free + 138\n    frame #3: 0x000000010f077065 .Python`PyCFunction_Call + 276\n    frame #4: 0x000000010f03ed46 .Python`PyObject_Call + 101\n    frame #5: 0x000000010f03be65 .Python`PyObject_CallFunctionObjArgs + 190\n    frame #6: 0x00000001103e7d56 _cffi_backend.cpython-35m-darwin.so`gcp_finalize + 54\n    frame #7: 0x000000010f06eda8 .Python`dict_dealloc + 120\n    frame #8: 0x000000010f0847c7 .Python`subtype_dealloc + 662\n    frame #9: 0x000000010f06eda8 .Python`dict_dealloc + 120\n    frame #10: 0x000000010f0847c7 .Python`subtype_dealloc + 662\n    frame #11: 0x000000010f06eda8 .Python`dict_dealloc + 120\n    frame #12: 0x000000010f08ced3 .Python`subtype_clear + 145\n    frame #13: 0x000000010f10e1eb .Python`collect + 1855\n    frame #14: 0x000000010f10daa3 .Python`_PyGC_CollectNoFail + 43\n    frame #15: 0x000000010f0edb90 .Python`PyImport_Cleanup + 982\n    frame #16: 0x000000010f0f784c .Python`Py_Finalize + 98\n    frame #17: 0x000000010f0f7dd7 .Python`Py_Exit + 13\n    frame #18: 0x000000010f0fa34a .Python`handle_system_exit + 318\n    frame #19: 0x000000010f0f9fc0 .Python`PyErr_PrintEx + 41\n    frame #20: 0x000000010f0f9659 .Python`PyRun_SimpleFileExFlags + 908\n    frame #21: 0x000000010f10d36d .Python`Py_Main + 3301\n    frame #22: 0x000000010f030e3f python3.5`___lldb_unnamed_function1$$python3.5 + 224\n    frame #23: 0x00007fffb9297255 libdyld.dylib`start + 1\nMitmproxy version: 0.19\nPython version: 3.5.1\nPlatform: Darwin-16.0.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2j 26 Sep 2016\nMac version: 10.12 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-10-21T21:11:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "915": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1643", "issue_id": "#1643", "issue_summary": "any way to improve the proxy performance?", "issue_description": "yuankui commented on 21 Oct 2016\nSteps to reproduce the problem:\nproxy with mitmproxy with http/socks5\nset the proxy in chrome\nresponse is very slow\nproxy with charles\nset the proxy in chrome\nresponse is very fast\nWhat is the expected behavior?\nexpect the mitmproxy works almost the same proxy speed, at least now so much slower than charles\nWhat went wrong?\nwhen use mitmproxy, web pages took much more time to complete all the requests\nAny other comments? What have you tried so far?\nMitmproxy Version: mitmproxy 0.18.1\nOperating System: OS X 10.11.6 (15G1004)\n1", "issue_status": "Closed", "issue_reporting_time": "2016-10-20T22:46:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "916": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1640", "issue_id": "#1640", "issue_summary": "mitmproxy: event log stays empty", "issue_description": "Member\nmhils commented on 20 Oct 2016\nSteps to reproduce the problem:\nStart mitmproxy\nOpen event log\nWhat is the expected behavior?\nThere should be events\nWhat went wrong?\nNo events are displayed.\nAny other comments? What have you tried so far?\nmitmdump does work. Nonetheless, this seems severe enough to warrant a quick patch release.\nMitmproxy Version: 0.18 and master\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-10-20T11:22:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "917": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1639", "issue_id": "#1639", "issue_summary": "Display Server Name Indication in the UI", "issue_description": "Member\nmhils commented on 20 Oct 2016\nSteps to reproduce the problem:\nmitmproxy\ncurl -x localhost:8080 https://example.com/\nView Details Tab\nWhat is the expected behavior?\nThe Server Name Indication sent by the client should be displayed in the UI.\nWhat went wrong?\nThe SNI is not displayed in the \"Client Connection\" section.\nAny other comments? What have you tried so far?\nThe first step here is to make a .sni attribute in ClientConnection which also gets serialized. I'm happy to help if anyone wants to pick this issue up!\nMitmproxy Version: master\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-10-20T10:56:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "918": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1638", "issue_id": "#1638", "issue_summary": "Certificate Verification Error with -T, not in regular mode", "issue_description": "Contributor\nphackt commented on 20 Oct 2016\nSteps to reproduce the problem:\nMitmproxy v0.18.1\nHello Team, i'm creating a transparent proxy with a custom sslstrip.py script (keeping if possible clear connection between proxy and victim, and on the other side mitmproxy is replaying the https one on its side with the destination server).\nOn the routing machine with the mitmproxy running:\nsysctl -w net.ipv4.ip_forward=1\necho 0 | sudo tee /proc/sys/net/ipv4/conf/*/send_redirects\niptables -t nat -A PREROUTING -i wlan0 -p tcp --dport 80 -j REDIRECT --to-port 8080\nmitmproxy -T --anticache --host --anticomp --noapp --script ./sslstrip.py --eventlog\nVictim is configured to route on the routing machine with mitmproxy running.\nWhat is the expected behavior?\nWith regular proxy tests, everything is working fine, no certificate problem for mitmproxy when it's establishing the httpS connection.\nWhat went wrong?\nBut in transparent mode:\nGET https://assure.ameli.fr/\n\u2190 Certificate Verification Error for 93.174.145.36: hostname '93.174.145.36' doesn't match u'assure.ameli.fr'\nIt seems that it's expecting the hostname, not the ip address of the destination server. Don't know what could be the root cause of this problem. I will be glad if you have an idea, i will be able to investigate further.\nIf needed can find all the stuff for my test here, mainly the screenshots done:\nhttps://github.com/phackt/share/tree/master/mitmproxy\nThanks again for your work guyz,\nPhackt.\nMitmproxy Version: v0.18.1\nOperating System: Kali2 (Debian Jessie)", "issue_status": "Closed", "issue_reporting_time": "2016-10-20T09:05:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "919": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1623", "issue_id": "#1623", "issue_summary": "Better control of long output in mitmdump", "issue_description": "Member\ncortesi commented on 18 Oct 2016\nComments re #1621. Being able to see the full URL in the terminal is too valuable to lose entirely. A better version of this would:\n\u2022 Add a command-line flag to turn on full-width output (a la ``ps --ww). \u2022 Use the terminal width to determine the cutoff. See click.get_terminal_size()`.\n\u2022 Maybe make the cutoff marker clearer by making it a different colour.", "issue_status": "Closed", "issue_reporting_time": "2016-10-17T19:04:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "920": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1622", "issue_id": "#1622", "issue_summary": "Issue with some loaded content on youtube.", "issue_description": "Losiara commented on 17 Oct 2016 \u2022\nedited\nSteps to reproduce the problem:\nGo to www.youtube.com through mitmproxy and\nWatch some video.\nWhat is the expected behavior?\nLoad youtube video webpage the same way as during usual session. Without mitmproxy everything is allright.\nWhat went wrong?\nsome part of requests are not realised through mitmproxy. Comments are not loaded. Don't see on youtube's page.\nAny other comments? What have you tried so far?\nNot sure this place is appropriate for such issue. Will correct if wrong.\nMitmproxy Version: 0.17.1\nOperating System: Win7 x64, firefox nightly", "issue_status": "Closed", "issue_reporting_time": "2016-10-17T15:11:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "921": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1620", "issue_id": "#1620", "issue_summary": "StackTrace printed if you quit mitmproxy and any flow is in intercept mode", "issue_description": "Contributor\nmkagenius commented on 17 Oct 2016\nSteps to reproduce the problem:\nLaunch mitmproxy\nintercept any request\nquit mitmproxy while the request still intercept\nWhat is the expected behavior?\nDid not expect the stacktrace ... earlier it used to be no such error\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/Users/manish/Work/mitmproxy/venv/bin/mitmproxy\", line 11, in <module>\n    load_entry_point('mitmproxy', 'console_scripts', 'mitmproxy')()\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/main.py\", line 80, in mitmproxy\n    m.run()\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/console/master.py\", line 495, in run\n    self.shutdown()\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/console/master.py\", line 647, in shutdown\n    self.state.killall(self)\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/flow/state.py\", line 269, in killall\n    self.flows.kill_all(master)\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/flow/state.py\", line 182, in kill_all\n    f.kill(master)\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/models/flow.py\", line 176, in kill\n    master.error(self)\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/controller.py\", line 238, in wrapper\n    ret = f(master, message)\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/console/master.py\", line 692, in error\n    self.process_flow(f)\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/console/master.py\", line 681, in process_flow\n    f.intercept(self)\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/models/flow.py\", line 186, in intercept\n    self.reply.take()\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/controller.py\", line 314, in take\n    raise exceptions.ControlException(\"Reply is {}, but expected it to be handled.\".format(self.state))\nmitmproxy.exceptions.ControlException: Reply is committed, but expected it to be handled.\nAny other comments? What have you tried so far?\nThis may result in problems in saving flows to file? if any request is in intercept mode it might cause abort at that point .. only flows till that point gets saved.. i think, also, har dump may get problem due to this..\nMitmproxy Version: head, master\nOperating System: mac", "issue_status": "Closed", "issue_reporting_time": "2016-10-17T10:18:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "922": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1612", "issue_id": "#1612", "issue_summary": "flowbasic exaple doesn't work", "issue_description": "jsnjack commented on 15 Oct 2016 \u2022\nedited\nSteps to reproduce the problem:\nRun https://github.com/mitmproxy/mitmproxy/blob/master/examples/flowbasic example\nWhat is the expected behaviour?\nWorking example\nWhat went wrong?\n    from mitmproxy import flow, controller, options\nImportError: cannot import name options\nAny other comments? What have you tried so far?\nMitmproxy Version: 0.17\nOperating System: Fedora 24", "issue_status": "Closed", "issue_reporting_time": "2016-10-14T20:45:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "923": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1611", "issue_id": "#1611", "issue_summary": "Log could not be imported (cyclic?)", "issue_description": "Contributor\nmkagenius commented on 14 Oct 2016\nIn the file,\nhttps://github.com/mitmproxy/mitmproxy/blob/master/mitmproxy/protocol/http_replay.py\nline 101 & 104 (two places)\nfrom ..proxy.root_context import Log\nself.channel.tell(\"log\", Log(\"Connection killed\", \"info\"))\nbut this should be controller.Log, i guess, and no need to import anything\nMitmproxy Version: master, head\nOperating System: mac", "issue_status": "Closed", "issue_reporting_time": "2016-10-14T11:10:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "924": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1608", "issue_id": "#1608", "issue_summary": "Certificate Verification Error: unable to get local issuer certificate", "issue_description": "passos commented on 13 Oct 2016 \u2022\nedited\nSteps to reproduce the problem:\non CentOS 7, install all dependencies\ninstall mitmproxy from source code https://github.com/mitmproxy/mitmproxy.git, commit: 8be0d78\nsetup proxy server on mobile, install mitmproxy certificate from mitm.it\nopen https://baidu.com in browser\nWhat is the expected behavior?\nbrowser works\nWhat went wrong?\nbrowser shows an error message:\n502 Bad Gateway. Certificate Verification Error for www.baidu.com: unable to get local issuer certificate (errno: 20, depth: 2)\nHere is the log for https://www.baidu.com\n111.206.14.134:57025: GET https://www.baidu.com/\n << Certificate Verification Error for www.baidu.com: unable to get local issuer certificate (errno: 20, depth: 2)\nhttps://baidu.com or https://google.com doesn't work, but some https sites like github.com works. Here is the log for https://github.com\n111.206.15.132:52912: CONNECT github.com:443\n  << Cannot establish TLS with client (sni: github.com): TlsException(\"(-1, 'Unexpected EOF')\",)\nAny other comments? What have you tried so far?\nI tried to update the certificates on centos by yum install ca-certificates, doesn't work.\nI tried to verify the certificate by openssl on this centos server, it looks good\n$ openssl s_client -quiet -connect www.baidu.com:443\ndepth=3 C = US, O = \"VeriSign, Inc.\", OU = Class 3 Public Primary Certification Authority\nverify return:1\ndepth=2 C = US, O = \"VeriSign, Inc.\", OU = VeriSign Trust Network, OU = \"(c) 2006 VeriSign, Inc. - For authorized use only\", CN = VeriSign Class 3 Public Primary Certification Authority - G5\nverify return:1\ndepth=1 C = US, O = \"VeriSign, Inc.\", OU = VeriSign Trust Network, OU = Terms of use at https://www.verisign.com/rpa (c)10, CN = VeriSign Class 3 Secure Server CA - G3\nverify return:1\ndepth=0 C = CN, ST = Beijing, L = Beijing, O = \"BeiJing Baidu Netcom Science Technology Co., Ltd\", OU = service operation department, CN = baidu.com\nverify return:1\nI tried to deploy same version on my Macbook laptop, it works.\nMitmproxy Version: 0.18, commit: 8be0d78\nOperating System: CentOS 7", "issue_status": "Closed", "issue_reporting_time": "2016-10-13T05:04:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "925": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1607", "issue_id": "#1607", "issue_summary": "macOS 10.12 Crash.", "issue_description": "ximerus commented on 11 Oct 2016\nHi, guys. After update to macOS 10.12 mitmproxy don't work with anyone params or without params.\nHere is traceback:\n$ mitmproxy   \n\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 11, in <module>\n    sys.exit(mitmproxy())\n  File \"/Library/Python/2.7/site-packages/mitmproxy/main.py\", line 45, in mitmproxy\n    from . import console\n  File \"/Library/Python/2.7/site-packages/mitmproxy/console/__init__.py\", line 19, in <module>\n    from .. import controller, flow, script, contentviews\n  File \"/Library/Python/2.7/site-packages/mitmproxy/flow.py\", line 21, in <module>\n    from .onboarding import app\n  File \"/Library/Python/2.7/site-packages/mitmproxy/onboarding/app.py\", line 3, in <module>\n    import tornado.web\n  File \"/Library/Python/2.7/site-packages/tornado/web.py\", line 84, in <module>\n    from tornado import gen\n  File \"/Library/Python/2.7/site-packages/tornado/gen.py\", line 1236, in <module>\n    import tornado.platform.asyncio\n  File \"/Library/Python/2.7/site-packages/tornado/platform/asyncio.py\", line 33, in <module>\n    import asyncio\n  File \"/Library/Python/2.7/site-packages/asyncio/__init__.py\", line 9, in <module>\n    from . import selectors\n  File \"/Library/Python/2.7/site-packages/asyncio/selectors.py\", line 39\n    \"{!r}\".format(fileobj)) from None\n                               ^\nSyntaxError: invalid syntax", "issue_status": "Closed", "issue_reporting_time": "2016-10-11T10:08:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "926": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1606", "issue_id": "#1606", "issue_summary": "cannot import thirdparty python lib in inline script", "issue_description": "maricoliu commented on 11 Oct 2016\ncan i import thirdparty lib in script ? like redis , now it says \"no module named redis\"", "issue_status": "Closed", "issue_reporting_time": "2016-10-11T03:12:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "927": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1605", "issue_id": "#1605", "issue_summary": "Interception does not work", "issue_description": "Member\nmhils commented on 9 Oct 2016\nSteps to reproduce the problem:\nmitmproxy -i '.*'\ncurl -x localhost:8080 example.com\nWhat is the expected behavior?\nRequest should be intercepted\nWhat went wrong?\nRequest is not intercepted.\nAny other comments? What have you tried so far?\nhttps://discourse.mitmproxy.org/t/is-intercept-working-in-the-head-of-master/186\nMitmproxy Version: master\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-10-09T02:11:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "928": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1604", "issue_id": "#1604", "issue_summary": "Mitmproxy crashes after launch", "issue_description": "ChillarAnand commented on 6 Oct 2016\nSteps to reproduce the problem:\nInstall and start proxy, it crashes\nTraceback (most recent call last)\nmitmproxy has crashed!nand/.virtualenvs/27/local/lib/python2.7/site-packages/mitmproxy/proxy/server.py\", line 121,\n  File \"/home/chillaranand/.virtualenvs/27/local/lib/python2.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 11,\n    layer()\n  File \"/home/chillaranand/.virtualenvs/27/local/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 358, in __call__fd1e393e7c236376641880238704883349a222f7e02b8accb4973e4ba3fa010b999d9b980d52570b268a9\n    layer()\n  File \"/home/chillaranand/.virtualenvs/27/local/lib/python2.7/site-packages/mitmproxy/protocol/http1.py\", line 67, in __call__a4bd37164054eb3fc7d25f30812060c03e6007c9bed294782f986e33de89beb1f6f77214d55645cf78aa\n    layer()\n  File \"/home/chillaranand/.virtualenvs/27/local/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 171, in __call__efc8ca5ae2da4c034788a6dc037bcb8a59c4a\n    self.handle_regular_mode_connect(request)\n  File \"/home/chillaranand/.virtualenvs/27/local/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 263, in handle_regular_mode_connect\n    layer()\n  File \"/home/chillaranand/.virtualenvs/27/local/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 358, in __call__ndroid&action=session&advertiser_id=189774&package_name=is.shortcut&data=9eef909e4dfd\n    layer()\n  File \"/home/chillaranand/.virtualenvs/27/local/lib/python2.7/site-packages/mitmproxy/protocol/http2.py\", line 238, in __call__3944bfc0abcfcc7d9b3b15fcf6a6bfe8a65088ad6d575d7ff49443a6ceb9cf5d290620a873e1c51a998\n    if not self._handle_event(event, source_conn, other_conn, is_server):\n  File \"/home/chillaranand/.virtualenvs/27/local/lib/python2.7/site-packages/mitmproxy/protocol/http2.py\", line 199, in _handle_eventcd0a29a0da96368d36e804c783d181a744b7a22556b0788b142276bda1d6de8c6639872de0a7bf\n    raise NotImplementedError()\nNotImplementedError\nWhat is the expected behavior?\nWhat went wrong?\nAny other comments? What have you tried so far?\nMitmproxy Version:\nmitmproxy 0.17\nOperating System:\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription: Ubuntu 16.04 LTS\nRelease: 16.04\nCodename: xenial", "issue_status": "Closed", "issue_reporting_time": "2016-10-06T13:21:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "929": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1595", "issue_id": "#1595", "issue_summary": "HTTP2 issue with Amazon Cloudfront", "issue_description": "ravidamani commented on 4 Oct 2016\nAmazon Cloudfront has recently added HTTP2 support. Sorry, if this isn't an issue with mitmproxy and is with Amazon Cloudfront.\nSteps to reproduce the problem:\nMake a request to https://s.yo.tv/v2/WCF/uk.svc/GS2?sT=201609240013&nNs=1&s=k9Ia4cM790llrCuBshmvDQ==&t=n&sL=1535&a=a.js\nWorks directly in Android app with HTTP 1.1 and HTTP 2. Works with HTTP 1.1 using mitmproxy but fails with HTTP 2.\nCloudfront returns error - The request could not be satisfied\nWe've tried multiple URLs that also use Cloudfront and get the same error.\nMitmproxy Version:0.17.1\nOperating System: MacOX", "issue_status": "Closed", "issue_reporting_time": "2016-10-03T23:55:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "930": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1589", "issue_id": "#1589", "issue_summary": "View TLS version in Details", "issue_description": "fiery- commented on 30 Sep 2016\nIs there any way to view TLS version in the Details tab?\nI use mitmproxy 0.17.1 and Details tab shows certificate info and TLS timings, but not TLS version. Many sites enforce TLS 1.2 (or 1.1) and finding which version is in use is essential for debugging.\nI'm not sure if that is possible, but if client -> proxy connection uses one TLS version and proxy -> server another, please add both versions in Details tab. BTW, this would be a very helpful feature if older clients (i.e. TLS 1.0) are able to connect to newer servers (TLS 1.2).\nThanks,", "issue_status": "Closed", "issue_reporting_time": "2016-09-30T17:55:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "931": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1586", "issue_id": "#1586", "issue_summary": "Organize Examples", "issue_description": "Member\nmhils commented on 29 Sep 2016\nSteps to reproduce the problem:\nVisit https://github.com/mitmproxy/mitmproxy/tree/master/examples for the first time.\nBe overwhelmed. (@mitmproxy/devs may not be able to reproduce this)\nWhat went wrong?\nOur examples directory has grown organically and I feel there are too many too complex examples in there that scare users away. It's not really clear where to start.\nWhat is the expected behavior?\nWe should guide users to the simpler, more frequently used examples like add_header.py, filt.py, modify_response_body.py or redirect_requests.py and hide the more complex ones.\nAny other comments? What have you tried so far?\nI would propose to split the examples folder into \"beginner\" and \"complex\" and (after this, in a second PR) add a README in the examples folder that guides the user. The beginner examples don't have to be trivial, but they should have a high usefulness/complexity ratio.\nI'd be more than happy if a new contributor wants to pick that up and let us know which examples are helpful for mitmproxy beginners and which aren't!", "issue_status": "Closed", "issue_reporting_time": "2016-09-29T01:55:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "932": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1585", "issue_id": "#1585", "issue_summary": "Issue w/ trusted SSL intermediate certs in Safari", "issue_description": "Contributor\nrofreg commented on 29 Sep 2016\nSteps to reproduce the problem:\nGet a trusted SSL certificate issued by Comodo (let's say it's for www.rofreg.com), and convert it into a .pem file that includes all intermediate certs\nUpdate your /etc/hosts file to redirect www.rofreg.com to 127.0.0.1\nRun mitmproxy --cert=your_cert.pem -R https://www.example.com\nOpen https://localhost:8080 in Safari\nWhat is the expected behavior?\nThe page should load without any SSL issues.\nWhat went wrong?\nSafari does not trust the intermediate certificates, and the request is blocked.\nAny other comments? What have you tried so far?\nThis one is baffling me pretty good, but I've confirmed that the exact same .pem file DOES work in Safari when served up by a plain Rails server. My hunch is that something is going wrong with the intermediate certs in the .pem file, such that they don't get properly delivered during the handshake, but I'm not yet familiar enough with mitmproxy to know where I should start looking. Any thoughts? I'd be happy to dig into this further myself (especially since I have a valid .pem file that can reproduce the problem), just hoping for some guidance :)\nMitmproxy Version: 0.18\nOperating System: OS X 10.11.6", "issue_status": "Closed", "issue_reporting_time": "2016-09-29T00:39:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "933": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1580", "issue_id": "#1580", "issue_summary": "Provide a better error message for proxy mode misconfigurations", "issue_description": "Member\nmhils commented on 26 Sep 2016\nSteps to reproduce the problem:\nmitmproxy -T\ncurl -x localhost:8080 example.com\nWhat is the expected behavior?\nmitmproxy should provide a warning that you want to run either transparent mode or configure an explicit proxy.\nWhat went wrong?\nmitmproxy complains about \"Invalid HTTP request form (expected: relative, got: authority)\"\nAny other comments? What have you tried so far?\nWe should just detect this very specific case (expected: relative, got: authority) and provide a better error message for it.\nSee #1579 for a confused user.\nMitmproxy Version: master\nOperating System: Ubuntu 16.04", "issue_status": "Closed", "issue_reporting_time": "2016-09-26T02:15:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "934": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1579", "issue_id": "#1579", "issue_summary": "Invalid HTTP request form (expected: relative, got: authority)", "issue_description": "d3xt3r01 commented on 25 Sep 2016 \u2022\nedited\nSteps to reproduce the problem:\nmitmproxy -T --no-http2 -p 8888 -v -e --no-mouse\ncurl https://google.com --proxy http://127.0.0.1:8888 -v -k\nWhat is the expected behavior?\nPage would show up !\nWhat went wrong?\n127.0.0.1:39126: clientconnect\n127.0.0.1:39126: HTTP protocol error in client request: Invalid HTTP request form (expected: relative, got: authority)\n127.0.0.1:39126: Traceback (most recent call last):\n  File \"/usr/lib64/python2.7/site-packages/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/usr/lib64/python2.7/site-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 22, in __call__\n    layer()\n  File \"/usr/lib64/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 391, in __call__\n    layer()\n  File \"/usr/lib64/python2.7/site-packages/mitmproxy/protocol/http1.py\", line 75, in __call__\n    layer()\n  File \"/usr/lib64/python2.7/site-packages/mitmproxy/protocol/http.py\", line 159, in __call__\n    sys.exc_info()[2]\n  File \"/usr/lib64/python2.7/site-packages/mitmproxy/protocol/http.py\", line 146, in __call__\n    self.validate_request(request)\n  File \"/usr/lib64/python2.7/site-packages/mitmproxy/protocol/http.py\", line 411, in validate_request\n    raise netlib.exceptions.HttpException(err_message)\nProtocolException: HTTP protocol error in client request: Invalid HTTP request form (expected: relative, got: authority)\n\n127.0.0.1:39126: clientdisconnect\n$ curl https://google.com --proxy http://127.0.0.1:8888 -v -k\n* Rebuilt URL to: https://google.com/\n*   Trying 127.0.0.1...\n* TCP_NODELAY set\n* Connected to 127.0.0.1 (127.0.0.1) port 8888 (#0)\n* Establish HTTP proxy tunnel to google.com:443\n> CONNECT google.com:443 HTTP/1.1\n> Host: google.com:443\n> User-Agent: curl/7.50.3\n> Proxy-Connection: Keep-Alive\n>\n< HTTP/1.1 400 Bad Request\n< Content-Length: 214\n< Content-Type: text/html\n< Connection: close\n< Server: mitmproxy 0.18\n<\n* Received HTTP code 400 from proxy after CONNECT\n* Curl_http_done: called premature == 0\n* Closing connection 0\ncurl: (56) Received HTTP code 400 from proxy after CONNECT\nAny other comments? What have you tried so far?\nI've tried 0.11.3 and hit a too many files open bug .. I've tried 0.17.1 with same issue ... then moved to master.\nMitmproxy Version: mitmproxy 0.18\nOperating System: Gentoo", "issue_status": "Closed", "issue_reporting_time": "2016-09-25T11:59:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "935": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1572", "issue_id": "#1572", "issue_summary": "Missing documentation about unit testing inline scripts", "issue_description": "migueleliasweb commented on 24 Sep 2016 \u2022\nedited\nAt the company I work on we are developing some inline scripts to use internally.\nWe are struggling to create test for our scripts because the only code we found to test scripts are the ones at /mitmproxy/mitmproxy/blob/v0.17/test/mitmproxy/test_examples.py.\nThe examples are quite good but real documentation is missing for the ones who wants to unit test.\nIs there another place where I can find better (maybe more advanced) test examples ?", "issue_status": "Closed", "issue_reporting_time": "2016-09-23T22:32:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "936": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1570", "issue_id": "#1570", "issue_summary": "Upgrade Construct Dependency", "issue_description": "arekbulski commented on 24 Sep 2016\nI thought that I would let you know. 2.8 is out of beta and there are significant changes. First of all, fields are name-less and the \"name\" / Bytes(2) syntax is used. Secondly, pretty much EVERY class redesigned so nothing works exactly as it used to. (It works better.) I wanted to know if you are going to transition, if and how.\nIn 2.10 there will be cython depenedncy. All you will need to do is sudo apt-get install python{,3}-cython but that is just a heads up on my part.\nPlease voice any concerns openly.", "issue_status": "Closed", "issue_reporting_time": "2016-09-23T19:30:45Z", "fixed_by": "#1810", "pull_request_summary": "upgrade to construct 2.8 and new API", "pull_request_description": "Member\nKriechi commented on 4 Dec 2016\nfixes #1570", "pull_request_status": "Merged", "issue_fixed_time": "2016-12-04T17:43:20Z", "files_changed": [["243", "mitmproxy/contrib/tls/_constructs.py"], ["22", "mitmproxy/contrib/tls/utils.py"], ["10", "mitmproxy/proxy/protocol/tls.py"], ["2", "setup.py"]]}, "937": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1569", "issue_id": "#1569", "issue_summary": "Publish mitmproxy 0.17.1 on pypi for Python3", "issue_description": "migueleliasweb commented on 22 Sep 2016\nAfter a lot o struggle running `'pip install mitmproxy`` I discovered that the version from pip is outdated (somehow) on python3.\nA quick check was:\n$ python --version\nPython 3.4.3\n$ pip install mitmproxy==\nCollecting mitmproxy==\n  Could not find a version that satisfies the requirement mitmproxy== (from versions: 0.8, 0.8.1, 0.9, 0.9.1, 0.9.2, 0.10, 0.10.1, 0.11, 0.11.1, 0.11.2, 0.11.3, 0.12.0, 0.12.1, 0.13, 0.14.0, 0.15)\nNo matching distribution found for mitmproxy==\nAnother check, this time for python2.7:\n$ python --version\nPython 2.7.11\n$ pip install mitmproxy==9999\nCollecting mitmproxy==9999\n  Could not find a version that satisfies the requirement mitmproxy==9999 (from versions: 0.8, 0.8.1, 0.9, 0.9.1, 0.9.2, 0.10, 0.10.1, 0.11, 0.11.1, 0.11.2, 0.11.3, 0.12.0, 0.12.1, 0.13, 0.14.0, 0.15, 0.16, 0.17)\nNo matching distribution found for mitmproxy==9999\nCan you update the version on pypi for python3 ?\nPs: For now i'm developing with ``pip install git+https://github.com/mitmproxy/mitmproxy.git@v0.17.1`", "issue_status": "Closed", "issue_reporting_time": "2016-09-22T17:14:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "938": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1562", "issue_id": "#1562", "issue_summary": "mitmproxy crash", "issue_description": "christypriory commented on 21 Sep 2016\nSteps to reproduce the problem:\nTesting samsung swiftkey exploit here https://github.com/nowsecure/samsung-ime-rce-poc/\nExecute mitmproxy --ignore swiftkey.net --host -s samsung_keyboard_mitmproxy_exploit.py -p 8080\nConfigure the Android device proxy with IP and Port 8080.\nVisit http://apple.com\nCrash Log\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/proxy/modes/http_proxy.py\", line 11, in __call__\n    layer()\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/tls.py\", line 358, in __call__\n    layer()\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/http1.py\", line 67, in __call__\n    layer()\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 204, in __call__\n    self.send_response_to_client(flow)\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 274, in send_response_to_client\n    self.send_response(flow.response)\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 55, in send_response\n    self.send_response_headers(response)\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/http1.py\", line 37, in send_response_headers\n    raw = http1.assemble_response_head(response)\n  File \"/usr/lib/python2.7/dist-packages/netlib/http/http1/assemble.py\", line 31, in assemble_response_head\n    headers = _assemble_response_headers(response.data)\n  File \"/usr/lib/python2.7/dist-packages/netlib/http/http1/assemble.py\", line 102, in _assemble_response_headers\n    return bytes(response.headers)\n  File \"/usr/lib/python2.7/dist-packages/netlib/http/headers.py\", line 107, in __bytes__\n    return b\"\\r\\n\".join(b\": \".join(field) for field in self.fields) + b\"\\r\\n\"\n  File \"/usr/lib/python2.7/dist-packages/netlib/http/headers.py\", line 107, in <genexpr>\n    return b\"\\r\\n\".join(b\": \".join(field) for field in self.fields) + b\"\\r\\n\"\nTypeError: sequence item 1: expected string, list found\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nMitmproxy Version: 0.17.1\nOperating System: Kali Linux", "issue_status": "Closed", "issue_reporting_time": "2016-09-20T21:33:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "939": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1561", "issue_id": "#1561", "issue_summary": "Identify Pushed H2-Flows", "issue_description": "worenga commented on 20 Sep 2016 \u2022\nedited\nIn previous versions, one could identify pushed flows by checking for the custom x-mitmproxy-pushed header\nHowever, in 1c4e1e0 it was removed. Is there a way to classify in a script whether or not a flow has been pushed by the server?", "issue_status": "Closed", "issue_reporting_time": "2016-09-20T09:54:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "940": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1560", "issue_id": "#1560", "issue_summary": "Reverse-proxy should create cert for requested host name", "issue_description": "sabberworm commented on 19 Sep 2016 \u2022\nedited\nSteps to reproduce the problem:\nRun mitmdump -R http://host1.example.com -p 8080\nEdit /etc/hosts to let host2.example.com point to the host/interface running mitmdump, e.g. 127.0.0.1\nConnect to https://host2.example.com:8080 using a browser that has the mitmproxy root CA installed\nWhat is the expected behavior?\nmitmdump should create a certificate for the SNI host that the client requested, host2.example.com.\nWhat went wrong?\nmitmdump sends a certificate that is valid for the configured upstream host name, host1.example.com.\nAny other comments? What have you tried so far?\nThis behaviour change could also be implemented behind a command-line option to not break existing workflows.\nMitmproxy Version: mitmdump 0.17\nOperating System: alpine:3.4 docker image", "issue_status": "Closed", "issue_reporting_time": "2016-09-19T09:30:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "941": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1557", "issue_id": "#1557", "issue_summary": "Dealing with upgrade-insecure-requests policy in request and response headers with inline script sslstrip.py", "issue_description": "Contributor\nphackt commented on 16 Sep 2016\nSteps to reproduce the problem:\nGoogle Chrome is automatically adding request header Upgrade-Insecure-Requests:1\nSome websites are using Content-Security-Policy: 'upgrade-insecure-requests' to avoid warning on mix secured / insecured content\nContent-Security-Policy: 'upgrade-insecure-requests' forces the user agent to request on TLS/SSL in a transparent way\nWhat is the expected behavior?\nupgrade-insecure-requests policy in request and response headers should be stripped, the same with the HTML meta tag.\nWhat went wrong?\nOnly headers Strict-Transport-Security and Public-Key-Pins are stripped.\nAny other comments? What have you tried so far?\nhttps://www.w3.org/TR/upgrade-insecure-requests/#upgrading\nMitmproxy Version: 0.17.1\nOperating System: SMP Debian 4.6.4-1kali1 x86_64 GNU/Linux", "issue_status": "Closed", "issue_reporting_time": "2016-09-15T19:39:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "942": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1555", "issue_id": "#1555", "issue_summary": "sslstrip.py processes flow.request.content instead of flow.response.content", "issue_description": "Contributor\nphackt commented on 15 Sep 2016\nSteps to reproduce the problem:\nhttps://github.com/mitmproxy/mitmproxy/blob/v0.17.1/examples/sslstrip.py\nhttps://github.com/mitmproxy/mitmproxy/blob/master/examples/sslstrip.py\nWhat is the expected behavior?\nShould pop headers from response (flow.response.headers) instead of request.\nWhat went wrong?\ndef response(flow):\nflow.request.headers.pop('Strict-Transport-Security', None)\nflow.request.headers.pop('Public-Key-Pins', None)\nAny other comments? What have you tried so far?\nIssue created in order to track discussion https://discourse.mitmproxy.org/t/inline-script-sslstrip-py-with-flow-request-headers-in-response-function/169\nMitmproxy Version: 0.17.1\nOperating System: #1 SMP Debian 4.6.4-1kali1 x86_64 GNU/Linux", "issue_status": "Closed", "issue_reporting_time": "2016-09-15T17:12:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "943": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1549", "issue_id": "#1549", "issue_summary": "mitmdump error logging is broken.", "issue_description": "Member\nmhils commented on 10 Sep 2016\nSteps to reproduce the problem:\nmitmdump\ncurl -x localhost:8080 example!!.com\nWhat is the expected behavior?\nProper console output\nWhat went wrong?\n\u03bb mitmdump\n127.0.0.1:56178: clientconnect\n127.0.0.1:56178: request\n  -> H\n  -> T\n  -> T\n  -> P\n  ->\n  -> p\n  -> r\n  -> o\n  -> t\n  -> o\n  -> c\n  -> o\n  -> l\n  ->\n  -> e\n  -> r\n  -> r\n  -> o\n  -> r\n  ->\n  -> i\n  -> n\n  ->\n  -> c\n  -> l\n  -> i\n  -> e\n  -> n\n  -> t\n  ->\n  -> r\n  -> e\n  -> q\n  -> u\n  -> e\n  -> s\n  -> t\n  -> :\n  ->\n  -> B\n  -> a\n  -> d\n  ->\n  -> H\n  -> T\n  -> T\n  -> P\n  ->\n  -> r\n  -> e\n  -> q\n  -> u\n  -> e\n  -> s\n  -> t\n  ->\n  -> l\n  -> i\n  -> n\n  -> e\n  -> :\n  ->\n  -> b\n  -> '\n  -> G\n  -> E\n  -> T\n  ->\n  -> H\n  -> T\n  -> T\n  -> P\n  -> :\n  -> /\n  -> /\n  -> e\n  -> x\n  -> a\n  -> m\n  -> p\n  -> l\n  -> e\n  -> !\n  -> !\n  -> .\n  -> c\n  -> o\n  -> m\n  -> /\n  ->\n  -> H\n  -> T\n  -> T\n  -> P\n  -> /\n  -> 1\n  -> .\n  -> 1\n  -> '\n127.0.0.1:56178: clientdisconnect\nMitmproxy Version: master\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-09-10T01:07:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "944": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1547", "issue_id": "#1547", "issue_summary": "WebSocket Messages should be shown to the user.", "issue_description": "Member\nmhils commented on 10 Sep 2016\nSteps to reproduce the problem:\nRun mitmproxy\nVisit https://www.websocket.org/echo.html\nSend some messages\nWhat is the expected behavior?\nThe Websocket activity should be reflected in the UI.\nWhat went wrong?\nThere is no UI indication that any activity is ongoing after the initial 101 Upgrade.\nAny other comments? What have you tried so far?\nSimilar to our TCP mode, the easiest thing to do for now is just to display messages in the event log. Do we just want to do the same for now in builtins/dumper and console/master for now?\nMitmproxy Version: master\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-09-09T22:17:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "945": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1546", "issue_id": "#1546", "issue_summary": "WebSocket Support needs an on/off switch.", "issue_description": "Member\nmhils commented on 10 Sep 2016\nSteps to reproduce the problem:\nRun mitmproxy\nVisit https://www.websocket.org/echo.html\nSend some messages\nWhat is the expected behavior?\nThe Websocket activity should be reflected in the UI.\nWhat went wrong?\nThere is no UI indication that any activity is ongoing after the initial 101 Upgrade.\nAny other comments? What have you tried so far?\nSimilar to our TCP mode, we should have a --websocket/--no-websocket switch to control if the WS protocol is enabled. As we don't have a UI integration for this either, I would suggest to keep it turned off by default.\nSetting this as a release blocker because the current master version swallows WS contents without showing something.\nMitmproxy Version: master\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-09-09T22:13:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "946": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1541", "issue_id": "#1541", "issue_summary": "pathoc does not accept `:pa,f` to pause forever at end of message", "issue_description": "timmc commented on 9 Sep 2016 \u2022\nedited\nSteps to reproduce the problem:\npathoc www.example.com 'get:/:pa,f'\nWhat is the expected behavior?\nSend request, but pause forever after sending.\nWhat went wrong?\nI get a stack trace with \"a float is required\".\n$ pathoc www.example.com 'get:/:pa,f'\n08-09-16 16:59:41: >> 'GET':/:pa,f\nTraceback (most recent call last):\n  File \"/usr/local/bin/pathoc\", line 11, in <module>\n    sys.exit(go_pathoc())\n  File \"/usr/local/lib/python2.7/dist-packages/pathod/pathoc_cmdline.py\", line 226, in go_pathoc\n    pathoc.main(args)\n  File \"/usr/local/lib/python2.7/dist-packages/pathod/pathoc.py\", line 522, in main\n    ret = p.request(spec)\n  File \"/usr/local/lib/python2.7/dist-packages/pathod/pathoc.py\", line 452, in request\n    return self.http(r)\n  File \"/usr/local/lib/python2.7/dist-packages/pathod/pathoc.py\", line 432, in http\n    return resp\n  File \"/usr/local/lib/python2.7/dist-packages/pathod/pathoc.py\", line 411, in http\n    req = language.serve(r, self.wfile, self.settings)\n  File \"/usr/local/lib/python2.7/dist-packages/pathod/language/__init__.py\", line 105, in serve\n    disconnect = writer.write_values(fp, vals, actions[:])\n  File \"/usr/local/lib/python2.7/dist-packages/pathod/language/writer.py\", line 61, in write_values\n    time.sleep(a[2])\nTypeError: a float is required\nAny other comments? What have you tried so far?\nAll other combinations of pause flags work as expected:\n$ pathoc www.example.com 'get:/:p2,5'\n08-09-16 17:05:07: >> 'GET':/:p2,5\n<< 200 OK: 1270 bytes\n$ pathoc www.example.com 'get:/:pr,5'\n08-09-16 17:05:21: >> 'GET':/:pr,5\n<< 200 OK: 1270 bytes\n$ pathoc www.example.com 'get:/:pa,5'\n08-09-16 17:05:41: >> 'GET':/:pa,5\n<< 200 OK: 1270 bytes\n$ pathoc www.example.com 'get:/:p2,f'\n^C08-09-16 17:04:46: >> 'GET':/:p2,f\n$ pathoc www.example.com 'get:/:pr,f'\n^C08-09-16 17:04:55: >> 'GET':/:pr,f\npathoc version: 0.17\nOperating System: Debian Linux 8.5 \"Jessie\" x64", "issue_status": "Closed", "issue_reporting_time": "2016-09-08T21:07:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "947": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1540", "issue_id": "#1540", "issue_summary": "Getting 'unicode' object has no attribute 'reply'", "issue_description": "shrikantkaramkar commented on 9 Sep 2016 \u2022\nedited\nI am redirecting the requests and changing the response body as well.\nresp = Response(200 OK, application/json; v=2, 222B)\nand on flow.reply(resp), I am getting error: 'unicode' object has no attribute 'reply'\nHow to resolve this error?", "issue_status": "Closed", "issue_reporting_time": "2016-09-08T21:00:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "948": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1539", "issue_id": "#1539", "issue_summary": "pathod.net index page outdated (says current version is 0.13)", "issue_description": "timmc commented on 9 Sep 2016 \u2022\nedited\nhttp://pathod.net/ says:\nsource\nCurrent release: pathod 0.13\nGitHub: github.com/mitmproxy/pathod\n...but pathod is now at least 0.17 and integrated into the mitmproxy repo itself.\nI'd submit a PR, but it looks like that page is no longer managed the way I remember.", "issue_status": "Closed", "issue_reporting_time": "2016-09-08T20:57:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "949": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1538", "issue_id": "#1538", "issue_summary": "proxapp.py from examples does not work", "issue_description": "xrd commented on 8 Sep 2016\nSteps to reproduce the problem:\nInstall mitmproxy\nRun mitmproxy -s examples/proxyapp.py\nSee error below:\n$ mitmproxy -s examples/proxyapp.py \nScript load error: Traceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/flow.py\", line 694, in load_script\n    s.load()\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/script/script.py\", line 89, in load\n    return self.run(\"start\", self.args)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/script/script.py\", line 118, in run\n    sys.exc_info()[2]\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/script/script.py\", line 113, in run\n    return f(self.ctx, *args, **kwargs)\nScriptException: start() takes no arguments (2 given)\nWhat is the expected behavior?\nmitmproxy should start a webserver listening inside the mitmproxy process.\nWhat went wrong?\nComplains of bad argument error.\nAny other comments? What have you tried so far?\nI can run mitmproxy successfully without the script.\nMitmproxy Version: mitmproxy 0.17\nOperating System: Ubuntu\nLinux 2abe27cac38e 4.4.17-boot2docker #1 SMP Mon Aug 15 17:12:38 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\nubuntu:16.04 (Docker image).", "issue_status": "Closed", "issue_reporting_time": "2016-09-08T18:03:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "950": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1537", "issue_id": "#1537", "issue_summary": "mitmproxy crashes after typing 'mitmproxy' in terminal", "issue_description": "yychun1990 commented on 8 Sep 2016\nSteps to reproduce the problem:\nfollow the Hacking method in README until 'py.test'\nenter 'mitmproxy' in terminal\nmitmproxy crashes\nWhat is the expected behavior?\nCertificate should have been installed\nWhat went wrong?\nTraceback (most recent call last):\nFile \"/Users/xxx/mitmproxy/mitmproxy/console/master.py\", line 537, in run\nself.loop.run()\nFile \"/Users/xxx/mitmproxy/venv/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/Users/yychun1217/mitmproxy/venv/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\nself.event_loop.run()\nFile \"/Users/xxx/mitmproxy/venv/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\nself._loop()\nFile \"/Users/xxx/mitmproxy/venv/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\nalarm_callback()\nFile \"/Users/xxx/mitmproxy/venv/lib/python2.7/site-packages/urwid/main_loop.py\", line 164, in cb\ncallback(self, user_data)\nFile \"/Users/xxx/mitmproxy/mitmproxy/console/master.py\", line 532, in\nlambda *args: self.view_flowlist()\nFile \"/Users/xxx/mitmproxy/mitmproxy/console/master.py\", line 620, in view_flowlist\nstatusbar.StatusBar(self, flowlist.footer),\nFile \"/Users/xxx/mitmproxy/mitmproxy/console/statusbar.py\", line 128, in init\nself.redraw()\nFile \"/Users/xxx/mitmproxy/mitmproxy/console/statusbar.py\", line 246, in redraw\nt.extend(self.get_status())\nFile \"/Users/xxx/mitmproxy/mitmproxy/console/statusbar.py\", line 151, in get_status\nif self.master.server_playback:\nAttributeError: 'ConsoleMaster' object has no attribute 'server_playback'\nmitmproxy has crashed!\nPlease lodge a bug report at:\nhttps://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments? What have you tried so far?\nMitmproxy Version: 0.18\nOperating System: Mac El Capitan 10.11.6", "issue_status": "Closed", "issue_reporting_time": "2016-09-08T03:49:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "951": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1536", "issue_id": "#1536", "issue_summary": "Question: speeding up Construct", "issue_description": "arekbulski commented on 7 Sep 2016\nWould this project benefited if Construct was moved to using Cython? I am the maintener.", "issue_status": "Closed", "issue_reporting_time": "2016-09-07T11:48:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "952": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1535", "issue_id": "#1535", "issue_summary": "Segfault running test suite concurrently on Python 3", "issue_description": "Member\ncortesi commented on 7 Sep 2016\nSteps to reproduce the problem:\nSet up a Python3.5 venv\npy.test -n8 ./test\nWhat is the expected behavior?\nNo segfault.\nWhat went wrong?\nFatal Python error: Segmentation fault\n\nThread 0x0000700002816000 (most recent call first):\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 297 in wait\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/queue.py\", line 173 in get\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 360 in dispatch_events\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 199 in run\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914 in _bootstrap_inner\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 882 in _bootstrap\n\nThread 0x0000700001e10000 (most recent call first):\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 297 in wait\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 549 in wait\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/polling.py\", line 82 in queue_events\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 146 in run\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914 in _bootstrap_inner\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 882 in _bootstrap\n\nThread 0x0000700004125000 (most recent call first):\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/OpenSSL/SSL.py\", line 1301 in recv\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/tcp.py\", line 210 in read\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/tcp.py\", line 250 in readline\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/http/http1/read.py\", line 228 in _get_first_line\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/http/http1/read.py\", line 241 in _read_request_line\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/http/http1/read.py\", line 53 in read_request_head\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/http/http1/read.py\", line 27 in read_request\n  File \"/Users/cortesi/mitmproxy/mitmproxy/pathod/protocols/http.py\", line 47 in read_request\n  File \"/Users/cortesi/mitmproxy/mitmproxy/pathod/pathod.py\", line 131 in handle_http_request\n  File \"/Users/cortesi/mitmproxy/mitmproxy/pathod/pathod.py\", line 284 in handle\n  File \"/Users/cortesi/mitmproxy/mitmproxy/pathod/pathod.py\", line 386 in handle_client_connection\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/tcp.py\", line 907 in connection_thread\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 862 in run\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914 in _bootstrap_inner\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 882 in _bootstrap\n\nThread 0x0000700003c22000 (most recent call first):\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/OpenSSL/SSL.py\", line 1301 in recv\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/tcp.py\", line 210 in read\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/tcp.py\", line 250 in readline\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/http/http1/read.py\", line 228 in _get_first_line\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/http/http1/read.py\", line 241 in _read_request_line\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/http/http1/read.py\", line 53 in read_request_head\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/http/http1/read.py\", line 27 in read_request\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/protocol/http1.py\", line 16 in read_request\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/protocol/http.py\", line 245 in get_request_from_client\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/protocol/http.py\", line 146 in __call__\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/protocol/http1.py\", line 75 in __call__\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/protocol/tls.py\", line 391 in __call__\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/protocol/http.py\", line 271 in handle_regular_mode_connect\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/protocol/http.py\", line 178 in __call__\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/protocol/http1.py\", line 75 in __call__\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/protocol/tls.py\", line 391 in __call__\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/proxy/modes/http_proxy.py\", line 11 in __call__\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/proxy/server.py\", line 119 in handle\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/proxy/server.py\", line 65 in handle_client_connection\n  File \"/Users/cortesi/mitmproxy/mitmproxy/netlib/tcp.py\", line 907 in connection_thread\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 862 in run\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914 in _bootstrap_inner\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 882 in _bootstrap\n\nThread 0x000070000371f000 (most recent call first):\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 297 in wait\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/queue.py\", line 173 in get\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 360 in dispatch_events\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 199 in run\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914 in _bootstrap_inner\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 882 in _bootstrap\n\nThread 0x000070000321c000 (most recent call first):\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 297 in wait\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 549 in wait\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/polling.py\", line 82 in queue_events\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 146 in run\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914 in _bootstrap_inner\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 882 in _bootstrap\n\nThread 0x000070000190d000 (most recent call first):\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 297 in wait\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/queue.py\", line 173 in get\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 360 in dispatch_events\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 199 in run\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914 in _bootstrap_inner\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 882 in _bootstrap\n\nThread 0x000070000140a000 (most recent call first):\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 297 in wait\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 549 in wait\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/polling.py\", line 82 in queue_events\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 146 in run\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914 in _bootstrap_inner\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 882 in _bootstrap\n\nThread 0x0000700000f07000 (most recent call first):\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 297 in wait\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/queue.py\", line 173 in get\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 360 in dispatch_events\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 199 in run\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914 in _bootstrap_inner\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 882 in _bootstrap\n\nThread 0x0000700000a04000 (most recent call first):\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 297 in wait\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 549 in wait\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/polling.py\", line 82 in queue_events\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/watchdog/observers/api.py\", line 146 in run\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914 in _bootstrap_inner\n  File \"/usr/local/Cellar/python3/3.5.2_1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 882 in _bootstrap\n\nCurrent thread 0x00007fff75211000 (most recent call first):\nAny other comments? What have you tried so far?\nMitmproxy version: 0.18\nPython version: 3.5.2\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2h 3 May 2016\nMac version: 10.11.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-09-07T00:22:12Z", "fixed_by": "#1545", "pull_request_summary": "Roll out synchronisation for mitmproxy tests", "pull_request_description": "Member\ncortesi commented on 10 Sep 2016\nThis extends some of the work I did for pathod and netlib to the mitmproxy test\nsuite. It also fixes what may be a leak in replays.\nFailing on connection leak is disabled on Windows for the moment.\nFixes #1535", "pull_request_status": "Merged", "issue_fixed_time": "2016-09-09T22:07:11Z", "files_changed": [["20", "mitmproxy/addons.py"], ["13", "mitmproxy/builtins/serverplayback.py"], ["18", "mitmproxy/console/master.py"], ["10", "mitmproxy/console/statusbar.py"], ["20", "mitmproxy/console/window.py"], ["3", "mitmproxy/protocol/http_replay.py"], ["12", "test/mitmproxy/protocol/test_http1.py"], ["4", "test/mitmproxy/test_addons.py"], ["9", "test/mitmproxy/test_fuzzing.py"], ["333", "test/mitmproxy/test_server.py"], ["49", "test/mitmproxy/tservers.py"]]}, "953": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1533", "issue_id": "#1533", "issue_summary": "Construct 2.5.5 changed API", "issue_description": "Member\ndwfreed commented on 6 Sep 2016\nConstruct 2.5.5 decided to change the length_field argument to lengthfield which breaks mitmproxy (both release and HEAD):\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 7, in <module>\n    from mitmproxy.main import mitmproxy\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/main.py\", line 7, in <module>\n    from . import version, cmdline\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/cmdline.py\", line 11, in <module>\n    from .proxy import config\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/proxy/__init__.py\", line 3, in <module>\n    from .server import ProxyServer, DummyServer\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/proxy/server.py\", line 12, in <module>\n    from ..protocol import Kill\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/__init__.py\", line 30, in <module>\n    from .tls import TlsLayer\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/tls.py\", line 11, in <module>\n    from ..contrib.tls._constructs import ClientHello\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/contrib/tls/_constructs.py\", line 69, in <module>\n    PascalString(\"name\", length_field=UBInt16(\"length\")),\nTypeError: __init__() got an unexpected keyword argument 'length_field'\nI filed construct/construct#92 to get this fixed. Reported by @jackmiller334 in the IRC channel.\n2", "issue_status": "Closed", "issue_reporting_time": "2016-09-06T16:19:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "954": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1530", "issue_id": "#1530", "issue_summary": "Handle print() statements for inline scripts", "issue_description": "Member\ncortesi commented on 5 Sep 2016\nprint() statements in inline scripts should be suppressed, and produce into ctx.log.warn() calls instead.", "issue_status": "Closed", "issue_reporting_time": "2016-09-04T23:46:55Z", "fixed_by": "#2207", "pull_request_summary": "scripts: redirect stdout to ctx.log.warn", "pull_request_description": "Contributor\nnikofil commented on 24 Mar 2017\nRedirect messages written to stdout in scripts to ctx.log.warn.\n(closes #1530)", "pull_request_status": "Merged", "issue_fixed_time": "2017-03-24T01:58:34Z", "files_changed": [["16", "mitmproxy/addons/script.py"], ["27", "test/mitmproxy/addons/test_script.py"], ["2", "test/mitmproxy/data/addonscripts/print.py"]]}, "955": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1529", "issue_id": "#1529", "issue_summary": "Gracefully handle underscores in hostnames", "issue_description": "Member\ncortesi commented on 5 Sep 2016\nWe need to handle invalid hostnames more gracefully. See the discussion here:\nhttps://discourse.mitmproxy.org/t/mitmproxy-not-working-with-urls-which-have-under-scores/\nSteps to reproduce the problem:\nmitmdump -vv\nenv http_proxy=http://localhost:8080 curl \"http://foo_bar.com\"\nMy inclination here is to make the host matching more liberal, and pass this sort of error upstream. Basically, if I'm using mitmproxy in an analysis situation, and the client is exhibiting this behaviour, I want to see what the server does with it rather than see an error.\nEither way, we certainly shouldn't be spewing a user-visible traceback to the logs for this kind of protocol error.", "issue_status": "Closed", "issue_reporting_time": "2016-09-04T23:12:38Z", "fixed_by": "#1905", "pull_request_summary": "Allow underscore in hostname", "pull_request_description": "Contributor\nchhsiao90 commented on 30 Dec 2016\nResolved #1529\nUpdate the regular expression to allow underscore in hostname.\nThe user-visible traceback mentioned at the issue seems to be fixed.\nThough underscore is not recommended be part of hostname,\nnot sure that to display some warning message about it will help or make it better?", "pull_request_status": "Merged", "issue_fixed_time": "2016-12-30T20:19:26Z", "files_changed": [["3", "mitmproxy/net/check.py"], ["2", "test/mitmproxy/net/test_check.py"]]}, "956": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1528", "issue_id": "#1528", "issue_summary": "Please support python-hyperframe 4.x", "issue_description": "sdelafond commented on 4 Sep 2016\nRight now setup.py mentions:\n\"hyperframe>=3.2.0, <4.0\"", "issue_status": "Closed", "issue_reporting_time": "2016-09-04T08:43:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "957": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1527", "issue_id": "#1527", "issue_summary": "Please support python-cryptography 1.5", "issue_description": "sdelafond commented on 4 Sep 2016\nThe test suite currently fails with that version:\nAttributeError: '_cffi_backend.CDataGCP' object has no attribute 'cert_info'", "issue_status": "Closed", "issue_reporting_time": "2016-09-04T08:40:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "958": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1526", "issue_id": "#1526", "issue_summary": "Mitmproxy CLI tools", "issue_description": "Member\nKriechi commented on 4 Sep 2016\nSimilar to #1521, I'd like to open a discussion about the mitmproxy command line interface tools:\nAt the moment we have three core applications:\nmitmproxy - a curses-based terminal UI / \"frontend\" to inspect, manipulate HTTP flows, etc.\nmitmdump - basically only the proxy part of mitmproxy, without any interaction or \"frontend\"\nmitmweb - serves a similar use case as mitmproxy, but through a HTTP-JS \"frontend\"\nSince the main project is called mitmproxy, as well as the GitHub organisation, and the main repository, it was always a bit unintuitive how the actual binaries are called.\nTherefore I'd like to propose that we change the naming of the three main applications (i.e. the words we type into our terminal to start one of the three \"frontends\") to:\nmitmproxy - same as before, starts the curses-based UI\nmitmproxy dump behaves as the old mitmdump\nmitmproxy web behaves as the old mitmweb\nNow, in this case the first argument would determine the frontend to be started. By default (i.e. without a first argument) the curses-based frontend should be started. However, we could also change that, if we detect we are running without a tty (or the screen is too small) and simply fallback to dump mode.\nOr maybe instead of introducing a new argument, we could use mitmproxy-dump and mitmproxy-web as binary names. This probably requires one or two more keystrokes to autocomplete though.\nFor backward compatibility we should still ship the old binaries as well -and add a notification about the rename, so users can adapt their aliases / workflows / scripts.\nWhat do you think?\nI'm open for other naming conventions or even completely different names.\n/cc @mitmproxy/devs", "issue_status": "Closed", "issue_reporting_time": "2016-09-03T18:41:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "959": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1524", "issue_id": "#1524", "issue_summary": "Vim Style Command Interface", "issue_description": "Contributor\ndufferzafar commented on 3 Sep 2016\nCurrently we use keybinding to perform actions (on flows etc.) but some of them have too much hierarchy.\nHaving vim-like commands for all actions that we can perform would be amazing.\nSome examples: :filter-view <filter>, :delete-matching <filter>, :export python.\nOf course the commands (& their arguments) will have autocompletion.\nI think this will improve our keybinding system too & make them configurable.\nranger is file-manager written in python that has this vim style shell, so we could look at how they handle things etc.\n1", "issue_status": "Closed", "issue_reporting_time": "2016-09-03T10:20:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "960": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1521", "issue_id": "#1521", "issue_summary": "Mitmproxy Slogan", "issue_description": "Member\ncortesi commented on 3 Sep 2016\nWe need a better project slogan. This should be a short, pithy way of describing what mitmproxy does. The problem is that mitmproxy does so much that it's hard to be specific without rattling off a long list of supported protocols. Let's discuss.\nTo get things started, one possibility is to keep the slogan very simple:\nmitmproxy: a man-in-the-middle proxy\nAnd then list our protocol support prominently on the webpage, readme, etc:\nSupports HTTP, HTTP2, Websockets and generic TCP connections. Intercepts traffic encrypted\nwith SSLv3, TLS 1.0, TLS 1.1, and TLS 1.2.", "issue_status": "Closed", "issue_reporting_time": "2016-09-02T22:03:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "961": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1520", "issue_id": "#1520", "issue_summary": "Decoding an empty string fails with \"deflate\" and \"br\"", "issue_description": "Contributor\nSchamper commented on 1 Sep 2016\nSteps to reproduce the problem:\nIn [15]: from netlib import encoding\n\nIn [16]: encoding.decode('', 'deflate')\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-16-074267748746> in <module>()\n----> 1 encoding.decode('', 'deflate')\n\n/home/ames/dev/mitmproxy/netlib/encoding.pyc in decode(encoded, encoding, errors)\n     54             type(e).__name__,\n     55             repr(encoded)[:10],\n---> 56             repr(encoding),\n     57         ))\n     58 \n\nValueError: error when decoding '' with 'deflate'\nWhat is the expected behavior?\nReturn an empty string. gzip works as expected:\nIn [18]: encoding.decode('', 'gzip')\nOut[18]: ''\nWhat went wrong?\ndeflate and br are unable to decode empty strings.\nAny other comments? What have you tried so far?\nNot sure what the preferred way of solving this is. Possibly a check to return an empty string if an empty string is attempted to be decoded?\nMitmproxy Version: master (0.18)\nOperating System: Ubuntu 16.04", "issue_status": "Closed", "issue_reporting_time": "2016-09-01T12:28:39Z", "fixed_by": "#1515", "pull_request_summary": "bump brotli dependency", "pull_request_description": "Member\nKriechi commented on 31 Aug 2016 \u2022\nedited\nfixes #1520\nfixes #1502", "pull_request_status": "Merged", "issue_fixed_time": "2016-09-04T22:15:23Z", "files_changed": [["23", "netlib/encoding.py"], ["2", "setup.py"], ["49", "test/netlib/test_encoding.py"]]}, "962": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1519", "issue_id": "#1519", "issue_summary": "Improve mitmdump's memory usage", "issue_description": "Contributor\nSchamper commented on 1 Sep 2016\nSteps to reproduce the problem:\nStart mitmdump/own proxy similar to this example. Note that in the \"own proxy\" the flow was also deleted, similar to mitmdump.\nStart browsing (a lot).\nObserve memory usage growing steadily with each request, reaching multiple GBs within a couple minutes, never coming back down.\nWhat is the expected behavior?\nMemory usage should ideally stay relatively the same over time.\nWhat went wrong?\nMemory is being held hostage somewhere.\nAny other comments? What have you tried so far?\nI'm also using a modified version of the har_dump script, but it doesn't matter if I have it enabled or disabled, suggesting the issue is somewhere in mitmproxy.\nTried inspecting heap memory using guppy, but I've never really used it so I didn't get very far with it. Printing the summary using guppy/other similar memory inspection libraries show that an insanely high number of dict and str objects are kept in memory, which seem to never stop growing.\nI've tried digging into the source of mitmproxy but I'm not too familiar with it so I'm not able to pinpoint where the issue might be.\nMitmproxy Version: master (0.18)\nOperating System: Ubuntu 16.04", "issue_status": "Closed", "issue_reporting_time": "2016-09-01T12:19:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "963": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1518", "issue_id": "#1518", "issue_summary": "Improve WebSockets", "issue_description": "Member\nKriechi commented on 1 Sep 2016 \u2022\nedited\nTake from #1488:\nframe continuation: abstract frames to messages and provide them to the user\nrespect --body_size_limit SIZE and --stream SIZE\nimplement compression extensions https://tools.ietf.org/html/rfc7692\nadd hooks for inline scripts", "issue_status": "Closed", "issue_reporting_time": "2016-09-01T09:44:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "964": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1516", "issue_id": "#1516", "issue_summary": "HttpSyntaxException during transparent proxy with ca installed on client", "issue_description": "pgconlin commented on 1 Sep 2016 \u2022\nedited by Kriechi\nSteps to reproduce the problem:\ninstall ca.pem on client machine\nmitmproxy -T --ciphers-client ALL --ciphers-server ALL --cert ../certificate-authority/ca.pem -b 192.168.2.200 --conf ../.mitmproxy/standard.conf\nWhat is the expected behavior?\nSuccessful interception\nWhat went wrong?\n192.168.2.101:55347: ProtocolException('Error in HTTP connection: HttpSyntaxException(\\'Bad HTTP request line:`\n{\"content\":{\"type\":\"fallback_url\"},\"operation\":\"Request\"}\\',)',)`\n192.168.2.101:55347: Traceback (most recent call last):`\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/proxy/server.py\", line 121, in handle`\n    root_layer()`\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 22, in __call__  layer()`\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/tls.py\", line 358, in __call__`\n    layer()`\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/http1.py\", line 67, in __call__`\n    layer()`\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 180, in __call__`\n    \"Error in HTTP connection: %s\" % repr(e)), sys.exc_info()[2])`\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 156, in __call__`\n    request = self.get_request_from_client()`\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 238, in get_request_from_client`\n    request = self.read_request()`\n  File \"/usr/lib/python2.7/dist-packages/mitmproxy/protocol/http1.py\", line 17, in read_request`\n    req = http1.read_request(self.client_conn.rfile, body_size_limit=self.config.body_size_limit)`\n  File \"/usr/lib/python2.7/dist-packages/netlib/http/http1/read.py\", line 12, in read_request`\n    request = read_request_head(rfile)`\n  File \"/usr/lib/python2.7/dist-packages/netlib/http/http1/read.py\", line 38, in read_request_head`\n    form, method, scheme, host, port, path, http_version = _read_request_line(rfile)`\n  File \"/usr/lib/python2.7/dist-packages/netlib/http/http1/read.py\", line 247, in _read_request_line\n    raise HttpSyntaxException(\"Bad HTTP request line: {}\".format(line))`\nProtocolException: Error in HTTP connection: HttpSyntaxException('Bad HTTP request line: {\"content\":{\"type\":\"fallback_url\"},\"operation\":\"Request\"}',)`\nAny other comments? What have you tried so far?\nMitmproxy Version:\nmitmproxy 0.17.1\nOperating System:\nLinux 4.6.0-kali1-amd64 #1 SMP Debian 4.6.4-1kali1 (2016-07-21) x86_64 GNU/Linux", "issue_status": "Closed", "issue_reporting_time": "2016-08-31T22:27:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "965": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1514", "issue_id": "#1514", "issue_summary": "replay request method's block argument causes infinite loop", "issue_description": "Contributor\nmkagenius commented on 30 Aug 2016 \u2022\nedited\nTo test this bug, edit the code in flowlist.py from\nr = self.master.replay_request(self.flow) to r = self.master.replay_request(self.flow, block=True)\nAnd then run mitmproxy and try to replay any request. Mitmproxy will halt and nothing will happen ever.\nIn master.py, the parameter block if given True, causes mitmproxy to halt (waiting in an infinite loop, see below)\ndef replay_request(self, f, block=False):\nThe function gets stuck because the ask method goes in an infinite loop\nfile: http_replay.py line no: around 45\nrequest_reply = self.channel.ask(\"request\", self.flow)\nThe ask method in controller.py goes in an infinite loop because the queue.Empty always comes true (I checked):\n        while not self.should_exit.is_set():\n            try:\n                # The timeout is here so we can handle a should_exit event.\n                g = m.reply.q.get(timeout=0.5)\n                print(g,\"----000---\")\n            except queue.Empty:  # pragma: no cover\n                print(\"continue\")\n                continue\nAny idea why this calling of join() in case of block=True will cause the queue to be empty and if block is False, queue gets some element in it after few milliseconds (as I saw) and hence breaks out of the infinite loop.\nMy guess is that:\nhandler(f) function in controller.py gets executed in case of block=False (causes commit message an population of queue with the HTTPFlow) and not in case of block=True", "issue_status": "Closed", "issue_reporting_time": "2016-08-30T08:51:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "966": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1508", "issue_id": "#1508", "issue_summary": "\"zombie stream\" exception while loading twitter.com", "issue_description": "qwert-z commented on 25 Aug 2016\n`ip:[port]: clientconnect\nGET https://twitter.com/push_service_worker.js HTTP/2.0\n:authority: twitter.com\n[user_agent]\naccept-language: en-US,en;q=0.5\naccept-encoding: gzip, deflate, br\nservice-worker: script\n[cookies]\npragma: no-cache\ncache-control: no-cache\n<< 200 3k\ncache-control: no-cache, no-store, must-revalidate, pre-check=0, post-check=0\ncontent-encoding: gzip\ncontent-length: 3533\ncontent-type: application/javascript;charset=utf-8\ndate: Thu, 25 Aug 2016 12:44:49 GMT\netag: 146cdcb3dfe4cfbe78b0381ef41f0ce6\nexpires: Tue, 31 Mar 1981 05:00:00 GMT\nlast-modified: Thu, 25 Aug 2016 12:44:49 GMT\npragma: no-cache\nserver: tsa_o\nset-cookie: fm=0; Expires=Thu, 25 Aug 2016 12:44:39 GMT; Path=/; Domain=.twitter.com; Secure; HTTPOnly\nset-cookie: _twitter_sess=[session id]; Path=/; Domain=.twitter.com; Secure; HTTPOnly\nstatus: 200 OK\nstrict-transport-security: max-age=631138519\nx-connection-hash: 54fa38e56afa79d4d1238249f1d18bfd\nx-content-type-options: nosniff\nx-frame-options: SAMEORIGIN\nx-response-time: 105\nx-transaction: 00732d8a00ba9b70\nx-twitter-response-tags: BouncerCompliant\nx-ua-compatible: IE=edge,chrome=1\nx-xss-protection: 1; mode=block\nip:[port]: ProtocolException(\"Error in HTTP connection: Http2ProtocolException('Zombie Stream',)\",)\n`", "issue_status": "Closed", "issue_reporting_time": "2016-08-25T12:49:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "967": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1507", "issue_id": "#1507", "issue_summary": "Could not find a version that satisfies the requirement mitmproxy>=0.18", "issue_description": "loretoparisi commented on 25 Aug 2016\nCould not find a version that satisfies the requirement mitmproxy>=0.18 (from -r requirements.txt (line 1)) (from versions: 0.8, 0.8.1, 0.9, 0.9.1, 0.9.2, 0.10, 0.10.1, 0.11, 0.11.1, 0.11.2, 0.11.3, 0.12.0, 0.12.1, 0.13, 0.14.0, 0.15, 0.16, 0.17)\nNo matching distribution found for mitmproxy>=0.18 (from -r requirements.txt (line 1))\nwhere\n$ cat requirements.txt \nmitmproxy>=0.18", "issue_status": "Closed", "issue_reporting_time": "2016-08-25T09:41:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "968": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1505", "issue_id": "#1505", "issue_summary": "mitmdump should display \"ready\" message after start.", "issue_description": "Member\nmhils commented on 24 Aug 2016\nSteps to reproduce the problem:\nmitmdump\nWhat is the expected behavior?\nmitmdump should print some notification that it is running and ready to receive traffic.\nWhat went wrong?\nmitmdump just displays nothing, it looks like it hangs.\nAny other comments? What have you tried so far?\nIdeally we'd only show that if mitmdump is invoked in a tty?\nMitmproxy Version: 0.18\nOperating System: Win10 x64\n1", "issue_status": "Closed", "issue_reporting_time": "2016-08-24T06:46:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "969": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1504", "issue_id": "#1504", "issue_summary": "Crash when editing Set-Cookie attributes", "issue_description": "Member\nmhils commented on 24 Aug 2016\nSteps to reproduce the problem:\nHave a response with a Set-Cookie header that specifies HttpOnly\nTry to edit the cookie.\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/console/master.py\", line 537, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/console/window.py\", line 78, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/console/grideditor/base.py\", line 370, in keypress\n    elif column.keypress(key, self) and not self.handle_key(key):\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/console/grideditor/col_subgrid.py\", line 37, in keypress\n    editor.walker.focus_col\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/console/master.py\", line 596, in view_grideditor\n    ge.make_help()\n  File \"/usr/local/lib/python3.5/dist-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/usr/local/lib/python3.5/dist-packages/blinker/base.py\", line 267, in <listcomp>\n    for receiver in self.receivers_for(sender)]\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/console/master.py\", line 333, in sig_push_view_state\n    self.loop.draw_screen()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 578, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 1750, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/listbox.py\", line 455, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/listbox.py\", line 337, in calculate_visible\n    self._set_focus_complete( (maxcol, maxrow), focus )\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/listbox.py\", line 702, in _set_focus_complete\n    (maxcol,maxrow), focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/listbox.py\", line 672, in _set_focus_first_selectable\n    (maxcol, maxrow), focus=focus)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/listbox.py\", line 400, in calculate_visible\n    next, pos = self.body.get_next( pos )\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/console/grideditor/base.py\", line 245, in get_next\n    return GridRow(None, False, self.editor, self.lst[pos + 1]), pos + 1\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/console/grideditor/base.py\", line 86, in __init__\n    w = self.editor.columns[i].Display(v)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/console/grideditor/col_text.py\", line 19, in Display\n    return TDisplay(data, self.encoding_args)\n  File \"/mnt/c/Users/user/git/mitmproxy/mitmproxy/console/grideditor/col_text.py\", line 33, in __init__\n    data = data.encode(*self.encoding_args)\nAttributeError: 'NoneType' object has no attribute 'encode'\nMitmproxy Version: 0.18\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-08-24T06:18:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "970": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1503", "issue_id": "#1503", "issue_summary": "s", "issue_description": "fsareshwala commented on 23 Aug 2016\nSteps to reproduce the problem:\nWhat is the expected behavior?\nWhat went wrong?\nAny other comments? What have you tried so far?\nMitmproxy Version:\nOperating System:", "issue_status": "Closed", "issue_reporting_time": "2016-08-23T18:24:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "971": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1502", "issue_id": "#1502", "issue_summary": "har_dump throwing error when body content has weird characters", "issue_description": "Contributor\nmkagenius commented on 23 Aug 2016\nSteps to reproduce the problem:\nUse har_dump.py as script\nBrowser lot of things\nEventually you will errors like this\nError: Script error: Traceback (most recent call last):\n  File \"/Users/manish/Work/mitmproxy/mitmproxy/builtins/script.py\", line 146, in run\n    return func(*args, **kwargs)\n  File \"har_dump.py\", line 96, in response\n    response_body_decoded_size = len(flow.response.content)\n  File \"/Users/manish/Work/mitmproxy/netlib/http/message.py\", line 115, in get_content\n    return encoding.decode(self.raw_content, ce)\n  File \"/Users/manish/Work/mitmproxy/netlib/encoding.py\", line 56, in decode\n    repr(encoding),\nValueError: AssertionError when decoding \"\\x87-\\x00 with 'br'\nWhat is the expected behavior?\nNot throw error\nWhat went wrong?\nThese characters are weird, i hate them\nAny other comments? What have you tried so far?\nnone\nMitmproxy Version: Head (1.8 i guess)\nOperating System: mac", "issue_status": "Closed", "issue_reporting_time": "2016-08-23T15:34:17Z", "fixed_by": "#1515", "pull_request_summary": "bump brotli dependency", "pull_request_description": "Member\nKriechi commented on 31 Aug 2016 \u2022\nedited\nfixes #1520\nfixes #1502", "pull_request_status": "Merged", "issue_fixed_time": "2016-09-04T22:15:23Z", "files_changed": [["23", "netlib/encoding.py"], ["2", "setup.py"], ["49", "test/netlib/test_encoding.py"]]}, "972": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1501", "issue_id": "#1501", "issue_summary": "Divide by Zero error", "issue_description": "Contributor\nmkagenius commented on 23 Aug 2016\nIts in netlib/strutils.py\nThis line # around 126 :\n    for i in six.iterbytes(s[:100])\n) / len(s[:100]) > 0.3\nif s is empty, it gives this error in the mitmproxy, (doesn't crash though due to recent improvements in mitmproxy i guess..)", "issue_status": "Closed", "issue_reporting_time": "2016-08-23T14:37:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "973": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1498", "issue_id": "#1498", "issue_summary": "Connection to \"python.org\" failed", "issue_description": "qwert-z commented on 22 Aug 2016\nSteps to reproduce the problem:\nStart mitmdump on my server\nConfigure Browser \"Firefox 38\"\nNavigate in Browser to website \"www.python.org\"\nWhat is the expected behavior?\nWebsite should be loaded\nWhat went wrong?\nFirefox error: \"Your connection is no secure\"\nAny other comments? What have you tried so far?\nOther websites like google.com or facebook.com work properly.\nMitmdump output:\n[my ip]:[my port]: clientconnect\n[my ip]:[my port]: clientdisconnect\n: GET https://www.python.org/ HTTP/2.0\n<< Zombie Stream\n[my ip]:[my port]: clientconnect\n[my ip]:[my port]: clientdisconnect\n: GET https://www.python.org/ HTTP/2.0\n<< Zombie Stream\n[my ip]:[my port]: clientconnect\n[my ip]:[my port]: clientdisconnect\n: GET https://www.python.org/ HTTP/2.0\n<< Zombie Stream\nMitmproxy Version: 0.18\nOperating System: Ubuntu 16.04", "issue_status": "Closed", "issue_reporting_time": "2016-08-22T14:17:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "974": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1497", "issue_id": "#1497", "issue_summary": "mitmdump crashes on start of server-replay: KeyError: 'marked'", "issue_description": "markus-kusano commented on 21 Aug 2016\nrec.zip\nSteps to reproduce the problem:\nRun mitmdump with the attached recording: mitmdump --server-replay findastation.out\nAn exception is thrown:\nTraceback (most recent call last):\n  File \"/home/markus/src/mitmproxy/venv3.5/bin/mitmdump\", line 11, in <module>\n    load_entry_point('mitmproxy', 'console_scripts', 'mitmdump')()\n  File \"/home/markus/src/mitmproxy/mitmproxy/main.py\", line 102, in mitmdump\n    master = dump.DumpMaster(server, dump_options)\n  File \"/home/markus/src/mitmproxy/mitmproxy/dump.py\", line 64, in __init__\n    self._readflow(options.server_replay),\n  File \"/home/markus/src/mitmproxy/mitmproxy/dump.py\", line 96, in _readflow\n    return flow.read_flows_from_paths(paths)\n  File \"/home/markus/src/mitmproxy/mitmproxy/flow/io.py\", line 83, in read_flows_from_paths\n    flows.extend(FlowReader(f).stream())\n  File \"/home/markus/src/mitmproxy/mitmproxy/flow/io.py\", line 49, in stream\n    yield models.FLOW_TYPES[data[\"type\"]].from_state(data)\n  File \"/home/markus/src/mitmproxy/mitmproxy/models/flow.py\", line 112, in from_state\n    f.set_state(state)\n  File \"/home/markus/src/mitmproxy/mitmproxy/models/flow.py\", line 107, in set_state\n    super(Flow, self).set_state(state)\n  File \"/home/markus/src/mitmproxy/mitmproxy/stateobject.py\", line 55, in set_state\n    val = state.pop(attr)\nKeyError: 'marked'\nWhat is the expected behavior?\nmitmdump continues running and the replayed page is served\nAny other comments? What have you tried so far?\nNote that this is a recording made with an olderversion of mitmproxy, probably from about 2 months ago. Other recordings do not crash similarly.\nRunning on commit 62ab2f2 with Python 3.5 on Linux.\nThanks :)", "issue_status": "Closed", "issue_reporting_time": "2016-08-21T18:10:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "975": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1495", "issue_id": "#1495", "issue_summary": "Add max replacements/count argument to flow.replace", "issue_description": "LopoEvil commented on 20 Aug 2016 \u2022\nedited\nSteps to reproduce the problem:\n regex1 = r'\\d+\\#\\d+\\#\\d+\\#\\d+\\#(\\d+)\\#\\d+\\#\\d+\\#\\d+\\#\\d+\\#'\n re.compile(regex1)\n flow.response.replace(regex1, r'444#5555#66#77#\\1#0#0#0#0#', 10)\nWhat is the expected behavior?\nflow.response.replace(regex1, r'444#5555#66#77#\\1#0#0#0#0#', 10)\nThe 10 used should be Max Count or Max Replace\nWhat went wrong?\nIn flow.response.replace(old, new[, maxreplace])\nis no longer working, all my older scripts are now broken; this used to work fine.\nAny other comments? What have you tried so far?\nI have tried changing my replace to a variable, changing the long regex and replace with something very small and simple.\nWork Great on my other servers that run MITMProxy 0.15 and i think 0.16 was working too.\n*When i updated to 0.17 or 0.18 it then no longer works and my scripts are broken.\nMitmproxy Version: 0.17 and 0.18\nOperating System: Ubuntu 14.04 and 16.04", "issue_status": "Closed", "issue_reporting_time": "2016-08-20T18:20:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "976": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1492", "issue_id": "#1492", "issue_summary": "mitm.it is broken in snapshot binaries", "issue_description": "Member\nmhils commented on 20 Aug 2016\nSteps to reproduce the problem:\nUse binary from snapshots.mitmproxy.org\nVisit mitm.it", "issue_status": "Closed", "issue_reporting_time": "2016-08-20T08:40:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "977": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1491", "issue_id": "#1491", "issue_summary": "hack for a non-concurrent mitmproxy", "issue_description": "tgianko commented on 19 Aug 2016\nHi everybody,\nI am trying to change default mitmproxy behavior. I am writing here in the hope that I would get suggestions on how to do this better.\nSo here is what I need. I need to run a couple of checks on a web server after it processes a request. In this project, it is important that request, response, and check are atomic and in that order, i.e., no interleaving requests.\nIn my understanding, mitmproxy can generate concurrent requests. While this is what everybody wants and expects from mitmproxy, in my case it creates misattrubution of request<->check.\nSo, I decided to make mitmproxy behave like if it is single threaded. This is my first attempt with in mitmproxy 10.1. I used a local lock variable and a decorator to intercept calls to ServerConnection.send. Before releasing the lock, I call a callback of the inline script to do the analysis:\nproxy.ServerConnection._send = proxy.ServerConnection.send\n\nlock = threading.Lock()\n\ndef _send_decorator(self, request):\n    with lock:\n        proxy.ServerConnection._send(self, request)\n        for s in master.scripts:\n            nobody_cares,ret = s.run('sync_http_req',request)\n\nproxy.ServerConnection.send = _send_decorator\nThis allows me to run a check after mitmproxy sends a request to the upstream server. But I need to run a check also after the response.\nNow, the code above is for 10.1 and I'd like to redo this and finish it for the 0.15.\nWhich point of the workflow of mitmproxy do you think I should intercept to place this ugly lock?\nThanks in advance guys :)", "issue_status": "Closed", "issue_reporting_time": "2016-08-19T14:26:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "978": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1487", "issue_id": "#1487", "issue_summary": "how can I save only request and response json body", "issue_description": "s9umurun commented on 18 Aug 2016\nHi,\nI want to save all request and response JSON body, how can I do that?\nThanks in advance.", "issue_status": "Closed", "issue_reporting_time": "2016-08-17T22:12:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "979": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1485", "issue_id": "#1485", "issue_summary": "View only a part of the URL", "issue_description": "Contributor\ndufferzafar commented on 18 Aug 2016 \u2022\nedited\nI'm currently dealing with an app that has very looooong urls (see screenshots.)\nThis makes the UI look crappy. I understand that there's not much we can do in cases in like these.\nBut having an option to only view part of the URL, such as everything but the query string, or only the first 100 characters etc. in the flowlist, and then showing the entire URL when user presses a key (in the flowview) would be nice.\n1", "issue_status": "Closed", "issue_reporting_time": "2016-08-17T18:35:24Z", "fixed_by": "#1493", "pull_request_summary": "Truncate URLs in console", "pull_request_description": "Contributor\ndufferzafar commented on 20 Aug 2016\nAn attempt to fix #1485\nCurrently, URLs are shortened in the flowlist, but are displayed as-is in the flowview.\nI'd actually prefer to shorten them in both the views, but then we need to come up with a way to view the full URL.\nIt could be via an option in the UI like we have Show Host or a hotkey that toggles the behaviour in both the views.", "pull_request_status": "Merged", "issue_fixed_time": "2016-08-26T14:44:44Z", "files_changed": [["26", "mitmproxy/console/common.py"], ["4", "mitmproxy/console/flowlist.py"]]}, "980": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1476", "issue_id": "#1476", "issue_summary": "AttributeError: 'NoneType' object has no attribute 'alpn_protocols'", "issue_description": "hynguyen2610 commented on 11 Aug 2016 \u2022\nedited by dufferzafar\nSteps to reproduce the problem:\nI am following http://docs.mitmproxy.org/en/stable/features/setheaders.html to set header for a page in mitmdump.\nI want to set \"Host\" request header of page https://tinhte.vn to \"127.0.0.1., so I run the mitmdump command with --setheader, this in my proxy computer.\nmitmdump -R https://tinhte.vn --setheader :~q:Host:127.0.0.1\nIn my victim computer, I browse to https://tinhte.vn (page above)\nI got the error AttributeError: 'NoneType' object has no attribute 'alpn_protocols'\nWhat is the expected behavior?\nThe page will load successful in victim browser with HOST request header is set to \"127.0.0.1\"\nWhat went wrong?\nMitmdump crash with this message:\n192.168.6.179:49564: clientconnect\nTraceback (most recent call last):\n  File \"/home/hynguyen/mitmproxy/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/home/hynguyen/mitmproxy/mitmproxy/proxy/modes/reverse_proxy.py\", line 15, in __call__\n    layer()\n  File \"/home/hynguyen/mitmproxy/mitmproxy/protocol/tls.py\", line 372, in __call__\n    self._client_hello.alpn_protocols or\nAttributeError: 'NoneType' object has no attribute 'alpn_protocols'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n192.168.6.179:49564: Traceback (most recent call last):\n  File \"/home/myname/mitmproxy/mitmproxy/proxy/server.py\", line 119, in handle\n    root_layer()\n  File \"/home/myname/mitmproxy/mitmproxy/proxy/modes/reverse_proxy.py\", line 15, in __call__\n    layer()\n  File \"/home/hynguyen/mitmproxy/mitmproxy/protocol/tls.py\", line 372, in __call__\n    self._client_hello.alpn_protocols or\nAttributeError: 'NoneType' object has no attribute 'alpn_protocols'\nAny other comments? What have you tried so far?\nNope\nMitmproxy Version: 0.18\nOperating System: LinuxMint 18", "issue_status": "Closed", "issue_reporting_time": "2016-08-11T08:18:27Z", "fixed_by": "#1484", "pull_request_summary": "fix #1476", "pull_request_description": "Member\nKriechi commented on 16 Aug 2016 \u2022\nedited\nfixes #1476\nadd regression tests", "pull_request_status": "Merged", "issue_fixed_time": "2016-08-16T20:18:54Z", "files_changed": [["34", "mitmproxy/protocol/tls.py"], ["26", "test/mitmproxy/test_proxy.py"], ["5", "test/mitmproxy/test_server.py"]]}, "981": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1475", "issue_id": "#1475", "issue_summary": "Script error: __init__() takes at least 6 arguments (5 given)", "issue_description": "shrikantkaramkar commented on 10 Aug 2016\nI am using redirect_request.py to redirect multiple urls.\nOn executing this py I am getting following error:\nScript error:\ninit() takes at least 6 arguments (5 given)\nI am using following mitm method to redirect:\nfrom mitmproxy.models import HTTPResponse\nfrom netlib.http import Headers\ndef request(flow):\n# pretty_host takes the \"Host\" header of the request into account,\n# which is useful in transparent mode where we usually only have the IP\n# otherwise.\n# Method 1: Answer with a locally generated response\nif flow.request.pretty_host.endswith(\"example.com\"):\n    resp = HTTPResponse(\n        b\"HTTP/1.1\", 200, b\"OK\",\n        Headers(Content_Type=\"text/html\"),\n        b\"helloworld\"\n    )\n    flow.reply.send(resp)\nmitmproxy version: 0.17\nOS: MAC OSX Yosemite 10.10.5", "issue_status": "Closed", "issue_reporting_time": "2016-08-10T15:33:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "982": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1472", "issue_id": "#1472", "issue_summary": "mitmproxy crashes after prolonged usage", "issue_description": "paragordius commented on 5 Aug 2016 \u2022\nedited\nSteps to reproduce the problem:\nStart mimtproxy withe the -T --host flags\nRun a video streaming application through it for 8+ hours (such as a fireTV channel or AppleTV app)\nWhat is the expected behavior?\nmitmproxy remains stable\nWhat went wrong?\nTraceback (most recent call last):                                                                                                                            \n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/proxy/server.py\", line 121, in handle                                                                \n    root_layer()                                                                                                                                              \n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 22, in __call__                                              \n    layer()                                                                                                                                                   \n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/rawtcp.py\", line 43, in __call__                                                            \n    r = ssl_read_select(conns, 10)                                                                                                                              File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 389, in ssl_read_select                                                                   \n    ] or select.select(rlist, (), (), timeout)[0]                                                                                                             \nValueError: filedescriptor out of range in select()                                                                                                           \n\nmitmproxy has crashed!                                                                                                                                        \nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nAny other comments? What have you tried so far?\nI have an inline script running that streams \"Content-Type\" that starts with \"video/\". This is to keep RAM usage and log sizes sane (I'm more interested in HTTP errors and latency than actual video chunks). I was running into the Too many open files error, but I set * - nofile 100000 in /etc/security/limits.conf.\nOutput of lsof -n -p $(pgrep mitmproxy) in case it is needed: http://pastebin.com/raw/CtYaShmG\nMitmproxy Version: mitmproxy 0.17\nOperating System: \"Linux Mint 18 Sarah\"", "issue_status": "Closed", "issue_reporting_time": "2016-08-05T13:45:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "983": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1471", "issue_id": "#1471", "issue_summary": "Make `.*` match the whole body for replacements.", "issue_description": "Member\nmhils commented on 5 Aug 2016\nSee https://discourse.mitmproxy.org/t/emulate-charles-proxys-map-local/116 for context - specifying .* as a replacement pattern currently replaces every single line in the message body. It feels more natural if that would replace the whole body altogether. We can accomplish this behaviour by passing re.DOTALL as a flag for FBod/FBodRequest/FBodResponse in mitmproxy/filt.py.\nThis issue should be pretty straightforward to implement, so I'll leave this for newcomers who are interested in contributing to mitmproxy. Feel free to ask here or on Slack if you have any further questions!", "issue_status": "Closed", "issue_reporting_time": "2016-08-04T21:58:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "984": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1470", "issue_id": "#1470", "issue_summary": "Cannot login to facebook", "issue_description": "hynguyen2610 commented on 4 Aug 2016 \u2022\nedited\nHi mitmproxy team,\nYour tool is a great effort. I tried it for a month. Most of pages are working smooth under mitmproxy. But I cannot login to Facebook in both mode Rugular and Transparent.\nSteps to reproduce the problem:\nStart mitmproxy using Regular mode: mitmproxy\nConfig the Windows-running victim proxy (IP: 192.168.6.181 to use proxy as my computer 192.168.6.211, port 8080)\nVisit mitm.it on the victim computer, download and install the .p12 (user certificate) file.\nVisit www.facebook.com\nEnter valid login information (username, password) and press Enter.\nWhat is the expected behavior?\nI thought it will login to facebook successfully.\nWhat went wrong?\nThe login is not success, the browser redirect to login page again with no notification. In another Facebook logged in device, I seen one new notification say \"Your account was logged in to from an unrecognized browser or device. Please review this login...\".\nI click the notification, chose \"This was me\" and remember the device. But the next time I try to loggin in victim computer, every is repeat. I cannot login to facebook when mitmproxy is on. I guess this is due to Certificate pinning. Is there a workaround like \"ignore the login phase\" or something? Is mitmproxy official support/not support Facebook page?\nAny other comments? What have you tried so far?\nI tried to ignore the facebook login when start mitmproxy\nmitmproxy --ignore '^(.+\\.)?facebook\\.com:443$'\nAfter that, I can login to facebook, but when I clear the ignore pattern and F5 the facebook page, nothing was intercepted except images request.\nMitmproxy Version: 0.17\nOperating System: Linux Mint 18 (base on Ubuntu 16.04)", "issue_status": "Closed", "issue_reporting_time": "2016-08-04T09:03:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "985": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1468", "issue_id": "#1468", "issue_summary": "controller.handler race condition", "issue_description": "Member\nmhils commented on 4 Aug 2016\nSteps to reproduce the problem:\nCall reply.send()\nWhat went wrong?\nIn a handler, we send a reply to the connection thread using reply.send(). The handler thread pauses.\nThe proxy thread does some stuff and asks for new info from the master.\nIn the main thread, we are still in the handler from step 1. The handler now calls a child handler (e.g. by calling super() in one of our masters).\ncontroller.handler determines if it is the topmost handler by checking not message.reply.handled. However, message.reply has already been updated to the new reply object which has been set by the connection thread in 2, so the sub handler believes nobody is handling and starts handling the completely different event.\n@cortesi: How do we solve this?\n(For reference, I reproduced this by swapping the calls to master.addons() and f(master,message) in controller.handler while having an inline script that kills requests)\nMitmproxy Version: master\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-08-04T02:53:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "986": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1467", "issue_id": "#1467", "issue_summary": "No stacktrace for errors in done() hook.", "issue_description": "Member\nmhils commented on 4 Aug 2016\nSteps to reproduce the problem:\nCreate inline script which raises in done()\nmitmdump -s script.py -n -r foo\nWhat is the expected behavior?\nShould print error message.\nWhat went wrong?\nOnly displays \"mitmdump: errors occurred during run\"\nMitmproxy Version: master\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-08-04T00:24:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "987": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1465", "issue_id": "#1465", "issue_summary": "Option updates do not update UI", "issue_description": "Member\nmhils commented on 3 Aug 2016\nSteps to reproduce the problem:\nmitmproxy\nOpen options, go to \"Show host\"\nPress Enter\nWhat is the expected behavior?\nText should change color to indicate toggle.\nWhat went wrong?\nNothing happens.\nAny other comments? What have you tried so far?\nPressing the arrow keys updates the screen correctly.\nMitmproxy Version: master\nOperating System: cygwin", "issue_status": "Closed", "issue_reporting_time": "2016-08-03T02:24:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "988": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1462", "issue_id": "#1462", "issue_summary": "Error in HTTP connection", "issue_description": "neurobin commented on 2 Aug 2016\nSteps to reproduce the problem:\nRun mitmproxy/mitmdump\nVisit http://ip-check.info/?lang=en\nClick on the START TEST! link\nWhat is the expected behavior?\nShouldn't show errors\nWhat went wrong?\nThese are the errors I got in a session:\n127.0.0.1:40514: ProtocolException(\"Error in HTTP connection: HttpException('Invalid request scheme: ftp',)\",)\n\n127.0.0.1:40534: ProtocolException(\"Error in HTTP connection: HttpException('Invalid request scheme: ftp',)\",)\n\n127.0.0.1:40546: ProtocolException(\"Error in HTTP connection: HttpException('Invalid request scheme: ftp',)\",)\n\n127.0.0.1:40472: ProtocolException('Error in HTTP connection: TcpDisconnect(\"(32, \\'EPIPE\\')\",)',)\n\n127.0.0.1:40606: ProtocolException('Error in HTTP connection: TcpDisconnect(\"(32, \\'EPIPE\\')\",)',)\nMitmproxy Version: 0.18 (latest pull from master branch)\nOperating System: Xubuntu 16.04 LTS\nPython 3.5.1+\nPip 8.1.2", "issue_status": "Closed", "issue_reporting_time": "2016-08-02T09:32:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "989": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1461", "issue_id": "#1461", "issue_summary": "custom certificate used for all domains instead of CN specified domain only", "issue_description": "markraemer commented on 2 Aug 2016\nSteps to reproduce the problem:\nfollowing the guide for custom certificates at http://docs.mitmproxy.org/en/stable/certinstall.html\nuse openssl as described to create a certificate for a specific domain\nstart mitmproxy with --cert=cert.pem\nmitmproxy intercepts all https connections using that certificate\nWhat is the expected behavior?\nmitmproxy would use that certificate just for the domain specified in the certificate's CN\nWhat went wrong?\nmitmproxy uses this very same certificate for all https connections, I think defeating the CN mapping\nAny other comments? What have you tried so far?\nverified that this certificate is used instead of mitmproxy generated and self signed for another domain then specified\nMitmproxy Version: v0.17.1\nOperating System: Kali Linux 2.0", "issue_status": "Closed", "issue_reporting_time": "2016-08-02T08:50:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "990": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1458", "issue_id": "#1458", "issue_summary": "Add Replace from file to Replacement Editor", "issue_description": "Contributor\ndufferzafar commented on 1 Aug 2016\nWe have a replacement editor (press o then R in mitmproxy) that allows us to add replacement patterns for flows.\nThere's also a --replace-from-file cmdline option that gets the replacement text from a local file.\nBut this functionality can't be used from the replacement editor itself.\nA user tried to enter the path to file in the Replacement text field: https://discourse.mitmproxy.org/t/emulate-charles-proxys-map-local/116\n1", "issue_status": "Closed", "issue_reporting_time": "2016-08-01T10:28:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "991": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1456", "issue_id": "#1456", "issue_summary": "Can't view options", "issue_description": "Contributor\ndufferzafar commented on 1 Aug 2016\nSteps to reproduce the problem:\nmitmproxy\nPress o\nWhat is the expected behavior?\nNo Crash!\nWhat went wrong?\nmitmproxy crashed!\n~/dev/mitmproxy (master) > env/bin/mitmproxy                                                                                                                                          03:29:44\nTraceback (most recent call last):\n  File \"/home/dufferzafar/dev/mitmproxy/mitmproxy/console/master.py\", line 537, in run\n    self.loop.run()\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/dufferzafar/dev/mitmproxy/mitmproxy/console/window.py\", line 89, in keypress\n    self.master.view_options()\n  File \"/home/dufferzafar/dev/mitmproxy/mitmproxy/console/master.py\", line 572, in view_options\n    options.help_context,\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/home/dufferzafar/dev/mitmproxy/mitmproxy/console/master.py\", line 333, in sig_push_view_state\n    self.loop.draw_screen()\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 578, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/widget.py\", line 1751, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/listbox.py\", line 457, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/listbox.py\", line 339, in calculate_visible\n    self._set_focus_complete( (maxcol, maxrow), focus )\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/listbox.py\", line 704, in _set_focus_complete\n    (maxcol,maxrow), focus)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/listbox.py\", line 674, in _set_focus_first_selectable\n    (maxcol, maxrow), focus=focus)\n  File \"/home/dufferzafar/dev/mitmproxy/env/lib/python2.7/site-packages/urwid/listbox.py\", line 402, in calculate_visible\n    next, pos = self.body.get_next( pos )\n  File \"/home/dufferzafar/dev/mitmproxy/mitmproxy/console/select.py\", line 57, in get_next\n    return self.options[pos + 1].render(False), pos + 1\n  File \"/home/dufferzafar/dev/mitmproxy/mitmproxy/console/select.py\", line 94, in render\n    self.getstate(),\n  File \"/home/dufferzafar/dev/mitmproxy/mitmproxy/console/options.py\", line 97, in <lambda>\n    lambda: master.server.config.ssl_insecure,\nAttributeError: ProxyConfig instance has no attribute 'ssl_insecure'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2016-08-01T10:02:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "992": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1455", "issue_id": "#1455", "issue_summary": "mitmproxy install problem", "issue_description": "shrikantkaramkar commented on 1 Aug 2016 \u2022\nedited\nI am trying to install mitmproxy by: sudo pip install mitmproxy\nGetting error:\n mitmproxy --version\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 7, in <module>\n    from mitmproxy.main import mitmproxy\n  File \"/Library/Python/2.7/site-packages/mitmproxy/main.py\", line 5, in <module>\n    from six.moves import _thread  # PY3: We only need _thread.error, which is an alias of RuntimeError in 3.3+\nImportError: cannot import name _thread\nOS: OSX 10.10.5\nPython version: Python 2.7.10\nTried to remove this error but did not get access.", "issue_status": "Closed", "issue_reporting_time": "2016-07-31T23:19:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "993": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1448", "issue_id": "#1448", "issue_summary": "strutils.bytes_to_escaped_str: Add option to not escape quotes at all", "issue_description": "Member\nmhils commented on 29 Jul 2016 \u2022\nedited\nAs the title says. This is useful e.g. in the raw view, where these don't need to be replaced. I believe this should just be\nret = re.sub(r\"(?<!\\\\)(\\\\\\\\)*\\\\'\", lambda m: (m.group(1) or \"\") + \"'\", ret)", "issue_status": "Closed", "issue_reporting_time": "2016-07-29T04:48:04Z", "fixed_by": "#1449", "pull_request_summary": "Add escape_single_quotes=False arg to bytes_to_escaped_str", "pull_request_description": "Member\nmhils commented on 30 Jul 2016\nThis fixes #1448. Without this change applied, we'd see ' escaped as \\' in a couple of places (especially the raw view), which might be confusing.", "pull_request_status": "Merged", "issue_fixed_time": "2016-07-30T22:56:55Z", "files_changed": [["4", "netlib/strutils.py"], ["8", "pathod/language/base.py"], ["2", "pathod/pathoc.py"], ["5", "test/netlib/test_strutils.py"]]}, "994": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1445", "issue_id": "#1445", "issue_summary": "Script/Addon Documentation", "issue_description": "Member\nmhils commented on 28 Jul 2016\nWe need to document the changes to the scripting API.", "issue_status": "Closed", "issue_reporting_time": "2016-07-27T21:47:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "995": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1444", "issue_id": "#1444", "issue_summary": "Wait for lxml release with wheels", "issue_description": "Member\nmhils commented on 28 Jul 2016\nFor the next mitmproxy release, we want to recommend Python 3.5 by default. While this is not ultimately blocking, it would be ideal to have a lxml release with Python 3.5 wheels on PyPI for this. I did some work to make that happen in lxml/lxml#200, so this hopefully can be resolved rather soon.", "issue_status": "Closed", "issue_reporting_time": "2016-07-27T21:43:48Z", "fixed_by": "#1831", "pull_request_summary": "Split contentviews.py into mitmproxy.contentviews", "pull_request_description": "Member\nmhils commented on 9 Dec 2016 \u2022\nedited by Kriechi\nAs a preparation for ditching lxml, this PR splits up mitmproxy/contentviews.py into ~ one file per view. Thinking forward, each view could actually be a separate addon in the future, but let's keep this minimally invasive for now.\nThe mitmproxy.contenviews API remains unchanged.\nfixes #845\nfixes #1657\nfixes #1444", "pull_request_status": "Merged", "issue_fixed_time": "2016-12-10T18:33:27Z", "files_changed": [["2", ".appveyor.yml"], ["2", "examples/simple/modify_body_inject_iframe.py"]]}, "996": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1443", "issue_id": "#1443", "issue_summary": "Wait for new cryptography release", "issue_description": "Member\nmhils commented on 28 Jul 2016\nFor the next mitmproxy release, we want to recommend Python 3.5 by default. This requires a cryptography release which includes pyca/cryptography#3063.", "issue_status": "Closed", "issue_reporting_time": "2016-07-27T21:41:14Z", "fixed_by": "#1513", "pull_request_summary": "cryptography 1.5", "pull_request_description": "Member\nKriechi commented on 28 Aug 2016 \u2022\nedited\nfixes #1443", "pull_request_status": "Merged", "issue_fixed_time": "2016-09-02T23:08:53Z", "files_changed": [["2", ".travis.yml"], ["2", "setup.py"]]}, "997": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1439", "issue_id": "#1439", "issue_summary": "Scripts: \"done\" hook is not executed.", "issue_description": "Member\nmhils commented on 27 Jul 2016\nSteps to reproduce the problem:\ntouch foo\nmitmdump -r foo -s examples\\stub.py\nWhat is the expected behavior?\nstart\nconfigure\ndone\nWhat went wrong?\nstart\nconfigure\nAny other comments? What have you tried so far?\nSomewhat related: Rename it to stop ?\nMitmproxy Version: master\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-27T02:28:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "998": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1438", "issue_id": "#1438", "issue_summary": "mitmproxy crashed.", "issue_description": "shrikantkaramkar commented on 26 Jul 2016\nOn redirecting request using method 1 from examples section, when I am killing mitmproxy, getting following error:\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/mitmproxy-0.17.1-py2.7.egg/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\nTypeError: 'NoneType' object is not callable\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n----------------------------------------\nError in processing of request from 10.36.81.212:60796\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/mitmproxy-0.17.1-py2.7.egg/netlib/tcp.py\", line 854, in connection_thread\n    self.handle_client_connection(connection, client_address)\n  File \"/Library/Python/2.7/site-packages/mitmproxy-0.17.1-py2.7.egg/mitmproxy/proxy/server.py\", line 64, in handle_client_connection\n    h.handle()\n  File \"/Library/Python/2.7/site-packages/mitmproxy-0.17.1-py2.7.egg/mitmproxy/proxy/server.py\", line 152, in handle\n    self.channel.tell(\"clientdisconnect\", root_layer)\n  File \"/Library/Python/2.7/site-packages/mitmproxy-0.17.1-py2.7.egg/mitmproxy/controller.py\", line 68, in tell\n    m.reply = DummyReply()\nAttributeError: 'NoneType' object has no attribute 'reply'", "issue_status": "Closed", "issue_reporting_time": "2016-07-26T15:36:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "999": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1437", "issue_id": "#1437", "issue_summary": "Installation problems with cryptography module (Arch linux)", "issue_description": "riston commented on 26 Jul 2016 \u2022\nedited\nSteps to reproduce the problem:\npip install --user mitmproxy\nWhat is the expected behavior?\nLatest installed version of mitmproxy\nWhat went wrong?\n    running egg_info\n    writing requirements to src/cryptography.egg-info/requires.txt\n    writing top-level names to src/cryptography.egg-info/top_level.txt\n    writing entry points to src/cryptography.egg-info/entry_points.txt\n    writing src/cryptography.egg-info/PKG-INFO\n    writing dependency_links to src/cryptography.egg-info/dependency_links.txt\n    warning: manifest_maker: standard file '-c' not found\n\n    reading manifest file 'src/cryptography.egg-info/SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    no previously-included directories found matching 'docs/_build'\n    warning: no previously-included files matching '*' found under directory 'vectors'\n    writing manifest file 'src/cryptography.egg-info/SOURCES.txt'\n    running build_ext\n    generating cffi module 'build/temp.linux-x86_64-3.5/_padding.c'\n    creating build/temp.linux-x86_64-3.5\n    generating cffi module 'build/temp.linux-x86_64-3.5/_constant_time.c'\n    generating cffi module 'build/temp.linux-x86_64-3.5/_openssl.c'\n    building '_openssl' extension\n    creating build/temp.linux-x86_64-3.5/build\n    creating build/temp.linux-x86_64-3.5/build/temp.linux-x86_64-3.5\n    gcc -pthread -Wno-unused-result -Wsign-compare -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector-strong -fPIC -I/usr/include/python3.5m -c build/temp.linux-x86_64-3.5/_openssl.c -o build/temp.linux-x86_64-3.5/build/temp.linux-x86_64-3.5/_openssl.o\n    build/temp.linux-x86_64-3.5/_openssl.c:724:6: error: conflicting types for \u2018BIO_new_mem_buf\u2019\n     BIO *BIO_new_mem_buf(void *, int);\n          ^~~~~~~~~~~~~~~\n    In file included from /usr/include/openssl/asn1.h:65:0,\n                     from build/temp.linux-x86_64-3.5/_openssl.c:440:\n    /usr/include/openssl/bio.h:692:6: note: previous declaration of \u2018BIO_new_mem_buf\u2019 was here\n     BIO *BIO_new_mem_buf(const void *buf, int len);\n          ^~~~~~~~~~~~~~~\n    build/temp.linux-x86_64-3.5/_openssl.c:2103:15: error: \u2018SSLv2_method\u2019 redeclared as different kind of symbol\n     SSL_METHOD* (*SSLv2_method)(void) = NULL;\n                   ^~~~~~~~~~~~\n    In file included from build/temp.linux-x86_64-3.5/_openssl.c:526:0:\n    /usr/include/openssl/ssl.h:2349:19: note: previous declaration of \u2018SSLv2_method\u2019 was here\n     const SSL_METHOD *SSLv2_method(void); /* SSLv2 */\n                       ^~~~~~~~~~~~\n    build/temp.linux-x86_64-3.5/_openssl.c:2104:15: error: \u2018SSLv2_client_method\u2019 redeclared as different kind of symbol\n     SSL_METHOD* (*SSLv2_client_method)(void) = NULL;\n                   ^~~~~~~~~~~~~~~~~~~\n    In file included from build/temp.linux-x86_64-3.5/_openssl.c:526:0:\n    /usr/include/openssl/ssl.h:2351:19: note: previous declaration of \u2018SSLv2_client_method\u2019 was here\n     const SSL_METHOD *SSLv2_client_method(void); /* SSLv2 */\n                       ^~~~~~~~~~~~~~~~~~~\n    build/temp.linux-x86_64-3.5/_openssl.c:2105:15: error: \u2018SSLv2_server_method\u2019 redeclared as different kind of symbol\n     SSL_METHOD* (*SSLv2_server_method)(void) = NULL;\n                   ^~~~~~~~~~~~~~~~~~~\n    In file included from build/temp.linux-x86_64-3.5/_openssl.c:526:0:\n    /usr/include/openssl/ssl.h:2350:19: note: previous declaration of \u2018SSLv2_server_method\u2019 was here\n     const SSL_METHOD *SSLv2_server_method(void); /* SSLv2 */\n                       ^~~~~~~~~~~~~~~~~~~\n    error: command 'gcc' failed with exit status 1\nerror\n  Rolling back uninstall of cryptography\n  Replacing /home/risto/.local/lib/python3.5/site-packages/cryptography-1.4-py3.5.egg-info\n  Replacing /home/risto/.local/lib/python3.5/site-packages/cryptography/__about__.py\n  Replacing /home/risto/.local/lib/python3.5/site-packages/cryptography/__init__.py\n  Replacing /home/risto/.local/lib/python3.5/site-packages/cryptography/__pycache__/__about__.cpython-35.pyc\n  Replacing /home/risto/.local/lib/python3.5/site-packages/cryptography/__pycache__/__init__.cpython-35.pyc\n  Replacing /home/risto/.local/lib/python3.5/site-packages/cryptography/__pycache__/exceptions.cpython-35.pyc\n  Replacing /home/risto/.local/lib/python3.5/site-packages/cryptography/__pycache__/fernet.cpython-35.pyc\n .....................\nCleaning up...\n  Removing source in /tmp/pip-build-spwlkgyj/mitmproxy\n  Removing source in /tmp/pip-build-spwlkgyj/netlib\n  Removing source in /tmp/pip-build-spwlkgyj/cryptography\nCommand \"/usr/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-spwlkgyj/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-ad0decf1-record/install-record.txt --single-version-externally-managed --compile --user --prefix=\" failed with error code 1 in /tmp/pip-build-spwlkgyj/cryptography/\nException information:\nTraceback (most recent call last):\n  File \"/usr/lib/python3.5/site-packages/pip/basecommand.py\", line 215, in main\n    status = self.run(options, args)\n  File \"/usr/lib/python3.5/site-packages/pip/commands/install.py\", line 317, in run\n    prefix=options.prefix_path,\n  File \"/usr/lib/python3.5/site-packages/pip/req/req_set.py\", line 742, in install\n    **kwargs\n  File \"/usr/lib/python3.5/site-packages/pip/req/req_install.py\", line 880, in install\n    spinner=spinner,\n  File \"/usr/lib/python3.5/site-packages/pip/utils/__init__.py\", line 718, in call_subprocess\n    % (command_desc, proc.returncode, cwd))\nAny other comments? What have you tried so far?\nInstalling only cryptography module causes no failures.\nVersions: Python 3.5, OpenSSL 1.0.2h 3 May 2016\nMitmproxy Version: Latest\nOperating System: Arch Linux", "issue_status": "Closed", "issue_reporting_time": "2016-07-26T08:22:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1000": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1434", "issue_id": "#1434", "issue_summary": "cookies: support multi-cookie, comma-separated header variant", "issue_description": "Member\ncortesi commented on 26 Jul 2016\nAt the moment, we only support strictly compliant cookies, where each cookie is in a separate header. The justification for this we give in the module docstring is that \"violations of RFC6265 that makes the parsing problem indeterminate are much more common than genuine occurences of the multi-cookie variants\". However, a recent sample from Netograph shows old-style cookies in ~9% of sites, with many high-profile sources like DoubleClick. There's no way around it - we simply must correctly parse this variant.", "issue_status": "Closed", "issue_reporting_time": "2016-07-26T02:20:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1001": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1433", "issue_id": "#1433", "issue_summary": "console: notifications cope very poorly with long data", "issue_description": "Member\ncortesi commented on 26 Jul 2016\nSteps to reproduce the problem:\nWhen we send a long notification to the statusbar - e.g. a traceback from some internal error - the statusbar gets messed up. We should snip this to the first line, and invite the user to view the rest in the event log.\nThis behaviour can be seen in, e.g. #1431", "issue_status": "Closed", "issue_reporting_time": "2016-07-26T01:42:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1002": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1432", "issue_id": "#1432", "issue_summary": "console: editing query in external editor is broken", "issue_description": "Member\ncortesi commented on 26 Jul 2016\nSteps to reproduce the problem:\nUse mitmproxy Python 3\nTry to edit a query component (\"e\" -> \"q\" -> etc.)\nWhat is the expected behavior?\nNo crash\nWhat went wrong?\nTraceback (most recent call last): File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/console/master.py\", line 515, in run self.loop.run() File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/urwid/main_loop.py\", line 278, in run self._run() File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/urwid/main_loop.py\", line 376, in _run self.event_loop.run() File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/urwid/main_loop.py\", line 682, in run self._loop() File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/urwid/main_loop.py\", line 719, in _loop self._watch_files[fd]() File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/urwid/raw_display.py\", line 393, in <lambda> event_loop, callback, self.get_available_raw_input()) File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/urwid/raw_display.py\", line 493, in parse_input callback(processed, processed_codes) File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/urwid/main_loop.py\", line 403, in _update self.process_input(keys) File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/urwid/main_loop.py\", line 503, in process_input k = self._topmost_widget.keypress(self.screen_size, k) File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/console/window.py\", line 42, in keypress k = super(self.__class__, self).keypress(size, k) File \"/Users/cortesi/mitmproxy/mitmproxy/venv3.5/lib/python3.5/site-packages/urwid/container.py\", line 1128, in keypress return self.body.keypress( (maxcol, remaining), key ) File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/console/grideditor/base.py\", line 370, in keypress elif column.keypress(key, self) and not self.handle_key(key): File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/console/grideditor/col_bytes.py\", line 63, in keypress n = editor.master.spawn_editor(o) File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/console/master.py\", line 395, in spawn_editor os.write(fd, data) TypeError: a bytes-like object is required, not 'str'\nmitmproxy --sysinfo\nMitmproxy version: 0.18\nPython version: 3.5.1\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2h 3 May 2016\nMac version: 10.11.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-07-26T01:41:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1003": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1431", "issue_id": "#1431", "issue_summary": "console: Javascript content view broken", "issue_description": "Member\ncortesi commented on 26 Jul 2016\nSteps to reproduce the problem:\nUse Python3 to view application/javascript data\nWhat is the expected behavior?\nNo crash\nWhat went wrong?\nContent viewer failed:\nTraceback (most recent call last):\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/contentviews.py\", line 634, in get_content_view\n    ret = viewmode(data, **metadata)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/contentviews.py\", line 151, in __call__\n    return content_types_map[ct][0](data, **metadata)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/contentviews.py\", line 401, in __call__\n    res = jsbeautifier.beautify(data, opts)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/contrib/jsbeautifier/__init__.py\", line 93, in beautify\n    return b.beautify(string, opts)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/contrib/jsbeautifier/__init__.py\", line 218, in beautify\n    token_text, token_type = self.get_next_token()\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/contrib/jsbeautifier/__init__.py\", line 443, in\nget_next_token\n    if c in self.wordchar:\nTypeError: 'in <string>' requires string as left operand, not int\nMitmproxy version: 0.18\nPython version: 3.5.1\nPlatform: Darwin-15.6.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2h 3 May 2016\nMac version: 10.11.6 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-07-26T01:27:54Z", "fixed_by": "#1436", "pull_request_summary": "Use jsbeautifier from pip", "pull_request_description": "Contributor\ndufferzafar commented on 26 Jul 2016 \u2022\nedited\nThis will fix #1431\nThings still left to do:\nUse proper decode or _native etc. which will fix the Travis failure.\nDelete jsbeautifier files from repo\nUse cssbeautifier instead of cssutils?", "pull_request_status": "Merged", "issue_fixed_time": "2016-07-28T22:37:06Z", "files_changed": [["31", "mitmproxy/contentviews.py"], ["1,153", "mitmproxy/contrib/jsbeautifier/__init__.py"], ["25", "mitmproxy/contrib/jsbeautifier/unpackers/README.specs.mkd"], ["66", "mitmproxy/contrib/jsbeautifier/unpackers/__init__.py"], ["39", "mitmproxy/contrib/jsbeautifier/unpackers/evalbased.py"], ["58", "mitmproxy/contrib/jsbeautifier/unpackers/javascriptobfuscator.py"], ["86", "mitmproxy/contrib/jsbeautifier/unpackers/myobfuscate.py"], ["103", "mitmproxy/contrib/jsbeautifier/unpackers/packer.py"], ["34", "mitmproxy/contrib/jsbeautifier/unpackers/urlencode.py"], ["3", "setup.py"], ["8", "test/mitmproxy/test_contentview.py"]]}, "1004": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1430", "issue_id": "#1430", "issue_summary": "HTTP2: Cannot change host in-flight", "issue_description": "Member\nmhils commented on 26 Jul 2016 \u2022\nedited by Kriechi\nSteps to reproduce the problem:\nStart mitmdump with the following inline script:\ndef request(flow):\n    if flow.request.host == \"google.com\":\n        flow.request.host = \"example.com\"\nUse a HTTP2-capable browser to open https://google.com\nWhat is the expected behavior?\nRequests should be redirected to example.com.\nWhat went wrong?\nRequests are answered by google.com, even though the UI indicates example.com.\nAny other comments? What have you tried so far?\nThis issue can be mitigated by passing --no-http2.\nImplementing host change for HTTP2 is super tricky, so we may not go for this right now.\nHowever, the user should get a visible notification when changing hosts and the request should probably be aborted.\nMitmproxy Version: master\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-25T20:21:22Z", "fixed_by": "#1479", "pull_request_summary": "fix #1430", "pull_request_description": "Member\nKriechi commented on 13 Aug 2016 \u2022\nedited\nfixes #1430 by raising a SetServerNotAllowedException and writing an entry to the eventlog.", "pull_request_status": "Merged", "issue_fixed_time": "2016-08-13T15:17:50Z", "files_changed": [["4", "mitmproxy/exceptions.py"], ["24", "mitmproxy/protocol/http2.py"]]}, "1005": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1424", "issue_id": "#1424", "issue_summary": "Cannot clear flows", "issue_description": "Member\nmhils commented on 25 Jul 2016\nSteps to reproduce the problem:\nStart mitmproxy\nPress z\nWhat is the expected behavior?\nNo crash\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 515, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/window.py\", line 42, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/flowlist.py\", line 361, in keypress\n    self.master.clear_flows()\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 686, in clear_flows\n    self.state.clear()\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 185, in clear\n    marked_flows = [f for f in self.state.view if f.marked]\nAttributeError: 'ConsoleState' object has no attribute 'state'\n@dufferzafar, can you fix this?\nMitmproxy Version: master\nOperating System: Ubuntu 14.04 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-25T01:31:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1006": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1419", "issue_id": "#1419", "issue_summary": "AttributeError: 'NoneType' object has no attribute 'response'", "issue_description": "shrikantkaramkar commented on 24 Jul 2016 \u2022\nedited\nOn stopping mitmproxy getting below error:\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/modes/http_proxy.py\", line 10, in __call__\n    layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 272, in __call__\n    layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 130, in __call__\n    layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 323, in __call__\n    self.handle_regular_mode_connect(request)\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 409, in handle_regular_mode_connect\n    layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 272, in __call__\n    layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 130, in __call__\n    layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 340, in __call__\n    self.get_response_from_server(flow)\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 471, in get_response_from_server\n    if flow.response.stream:\nAttributeError: 'NoneType' object has no attribute 'response'", "issue_status": "Closed", "issue_reporting_time": "2016-07-23T22:24:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1007": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1418", "issue_id": "#1418", "issue_summary": "console: run_script_once is broken", "issue_description": "Member\nmhils commented on 24 Jul 2016\nSteps to reproduce the problem:\nmitmproxy\nn g enter\n| script.py\nWhat is the expected behavior?\nNo crash.\nWhat went wrong?\nuser@user-ubuntu:~$ mitmproxy\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 317, in run_script_once\n    s = script.Script(command)\nAttributeError: module 'mitmproxy.script' has no attribute 'Script'\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 498, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/window.py\", line 42, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 134, in keypress\n    return self.master.ab.keypress(*args, **kwargs)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 89, in keypress\n    self.prompt_execute(self._w.get_edit_text())\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 112, in prompt_execute\n    msg = p(txt, *args)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 319, in run_script_once\n    except script.ScriptException as e:\nAttributeError: module 'mitmproxy.script' has no attribute 'ScriptException'\nMitmproxy Version: master\nOperating System: Ubuntu 14.04 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-23T20:57:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1008": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1417", "issue_id": "#1417", "issue_summary": "[PY3] Search does not work", "issue_description": "Member\nmhils commented on 24 Jul 2016\nSteps to reproduce the problem:\nView a flow\nPress /\nWhat is the expected behavior?\nNo crash.\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 498, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/window.py\", line 42, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 134, in keypress\n    return self.master.ab.keypress(*args, **kwargs)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 89, in keypress\n    self.prompt_execute(self._w.get_edit_text())\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 112, in prompt_execute\n    msg = p(txt, *args)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/searchable.py\", line 52, in set_search\n    self.find_next(False)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/searchable.py\", line 83, in find_next\n    rng = xrange(1, len(self.body) + 1)\nNameError: name 'xrange' is not defined\nMitmproxy Version: master\nOperating System: Ubuntu 14.04 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-23T20:56:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1009": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1414", "issue_id": "#1414", "issue_summary": "mitmproxy weird behaviour", "issue_description": "shrikantkaramkar commented on 23 Jul 2016 \u2022\nedited\nSteps to reproduce the problem:\n1. Redirecting multiple request in my app.\n2. all my redirections are: pointing server URL to local folders having stored data in files\n3. When I start the mitmproxy with all redirection then as per code url's are redirecting to expected \n4. the problem I am facing is application is not loading, and to load the application I need to stop the mitmproxy.\n5. Why should I need to stop the MITMPROXY to load the application.\nFor example\nif flow.request.pretty_url.endswith(\"prompt=login&ui_locales=en\"):\n\n            print(\"In First Request If: \")\n            resp = HTTPResponse(\n                                 \"HTTP/1.1\",\n                                 302,\n                                 \"Moved Temporarily\",\n                                 Headers([\n                                            [\"Server\", \"Apache\"],\n                                            [\"Date\", \"Wed, 21 Jul 2016 23:23:48 GMT\"],\n                                            [\"Location\", \"https://login.xxxxx.net/oauth/authorize\"],\n                                            [\"Set-Cookie\", \"abc\"],\n                                            [\"Vary\", \"Accept-Encoding\"],\n                                            [\"Content-Encoding\", \"gzip\"],\n                                            [\"Keep-Alive\", \"timeout=5, max=448\"],\n                                            [\"Connection\", \"Keep-Alive\"],\n                                            [\"Transfer-Encoding\", \"chunked\"],\n                                            [\"Content-Type\", \"text/html\"]\n                                ]),\n                                (\"<html><head><title>302 Moved Temporarily</title></head>\"\n\"<body bgcolor=\"#FFFFFF\">\"\n\"<p>This document you requested has moved temporarily.</p>\"\n\"<p>It's now at <a href=\\\"https://login.xxxxxx.net/oauth/authorize</a>.</p>\"\n\"</body></html>\")\n            )\n            flow.reply(resp)\n @mhils\n mitmproxy member\nMitmproxy Version: 0.15\nOperating System: OSX", "issue_status": "Closed", "issue_reporting_time": "2016-07-23T18:11:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1010": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1409", "issue_id": "#1409", "issue_summary": "mitmproxy has crashed! AttributeError: 'NoneType' object has no attribute 'host'", "issue_description": "shrikantkaramkar commented on 23 Jul 2016\nSteps to reproduce the problem:\nRedirect multiple requests requests\nWhat is the expected behavior?\nWhat went wrong?\nAny other comments? What have you tried so far?\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/modes/http_proxy.py\", line 10, in __call__\n    layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 267, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 392, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 389, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 398, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 497, in _find_cert\n    host = self.server_conn.address.host\nAttributeError: 'NoneType' object has no attribute 'host'\nMitmproxy Version:\nOperating System:", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T22:20:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1011": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1408", "issue_id": "#1408", "issue_summary": "mitmproxy has crashed!Error: [('system library', 'fopen', 'Too many open files'), ('BIO routines', 'BIO_new_file', 'system lib'), ('x509 certificate routines', 'X509_load_cert_crl_file', 'system lib')]", "issue_description": "shrikantkaramkar commented on 23 Jul 2016 \u2022\nedited\nSteps to reproduce the problem:\nRedirecting few requests\nWhat is the expected behavior?\nIt should not crash, it should be running all the time\nWhat went wrong?\nmitmproxy crashed\nAny other comments? What have you tried so far?\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxyTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/modes/http_proxy.py\", line 10, in __call__\n    layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 272, in __call__\n    layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 130, in __call__\n    layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 323, in __call__\n    self.handle_regular_mode_connect(request)\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 409, in handle_regular_mode_connect\n    layer()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 267, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 392, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 389, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/tls.py\", line 408, in _establish_tls_with_client\n    alpn_select_callback=self.__alpn_select_callback,\n  File \"/Library/Python/2.7/site-packages/libmproxy/models/connections.py\", line 82, in convert_to_ssl\n    super(ClientConnection, self).convert_to_ssl(*args, **kwargs)\n  File \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 759, in convert_to_ssl\n    **sslctx_kwargs)\n  File \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 722, in create_ssl_context\n    context = self._create_ssl_context(**sslctx_kwargs)\n  File \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 504, in _create_ssl_context\n    context.load_verify_locations(ca_pemfile, ca_path)\n  File \"build/bdist.macosx-10.9-intel/egg/OpenSSL/SSL.py\", line 528, in load_verify_locations\n    _raise_current_error()\n  File \"build/bdist.macosx-10.9-intel/egg/OpenSSL/_util.py\", line 48, in exception_from_error_queue\n    raise exception_type(errors)\nError: [('system library', 'fopen', 'Too many open files'), ('BIO routines', 'BIO_new_file', 'system lib'), ('x509 certificate routines', 'X509_load_cert_crl_file', 'system lib')]\nMitmproxy Version:\nOperating System:", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T18:34:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1012": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1407", "issue_id": "#1407", "issue_summary": "mitmdump has weird spacing", "issue_description": "Member\nmhils commented on 22 Jul 2016\nSteps to reproduce the problem:\nmitmdump -nddr dumpfile-011\nWhat is the expected behavior?\nProper indentation\nWhat went wrong?\nRequest and response line have weird indentation:\nMitmproxy Version: master\nOperating System: Win10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T17:35:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1013": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1405", "issue_id": "#1405", "issue_summary": "Consolidate Replay under R", "issue_description": "Contributor\ndufferzafar commented on 22 Jul 2016\nWe have c for client replay and S for server replay. It seems like a good idea to join them rather than dedicate two precious keybindings.\nSo, user presses R. Gets prompted for client/server. Gets prompted for file.", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T05:53:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1014": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1403", "issue_id": "#1403", "issue_summary": "[PY3] Cannot modify \"Set Header\" patterns", "issue_description": "Member\nmhils commented on 22 Jul 2016\nSteps to reproduce the problem:\nmitmproxy\no enter a\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 498, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/window.py\", line 42, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/grideditor.py\", line 441, in keypress\n    self.walker.add()\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/grideditor.py\", line 257, in add\n    return self._insert(min(self.focus + 1, len(self.lst)))\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/grideditor.py\", line 251, in _insert\n    self.start_edit()\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/grideditor.py\", line 263, in start_edit\n    self.focus_col, True, self.editor, self.lst[self.focus]\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/grideditor.py\", line 144, in __init__\n    self.editing = SEdit(v)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/grideditor.py\", line 123, in __init__\n    txt = txt.encode(\"string-escape\")\nLookupError: unknown encoding: string-escape\nMitmproxy Version: master\nOperating System: Ubuntu 14.04 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T03:38:42Z", "fixed_by": "#1427", "pull_request_summary": "Refactor GridEditor", "pull_request_description": "Member\nmhils commented on 25 Jul 2016\nThis PR refactors the console GridEditor to support both text and bytes inputs, which is necessary for Python 3 compatibility.\nfixes #1403", "pull_request_status": "Merged", "issue_fixed_time": "2016-07-26T01:38:04Z", "files_changed": [["4", "mitmproxy/builtins/replace.py"], ["719", "mitmproxy/console/grideditor.py"], ["2", "mitmproxy/console/grideditor/__init__.py"], ["425", "mitmproxy/console/grideditor/base.py"], ["103", "mitmproxy/console/grideditor/col_bytes.py"], ["51", "mitmproxy/console/grideditor/col_subgrid.py"], ["55", "mitmproxy/console/grideditor/col_text.py"], ["239", "mitmproxy/console/grideditor/editors.py"], ["14", "mitmproxy/console/master.py"]]}, "1015": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1401", "issue_id": "#1401", "issue_summary": "Set Default Body View Mode does not work.", "issue_description": "Member\nmhils commented on 22 Jul 2016\nSteps to reproduce the problem:\nPress M in the flow view.\nWhat went wrong?\nNothing happens.\nMitmproxy Version: master\nOperating System: Ubuntu 14.04 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T03:21:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1016": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1398", "issue_id": "#1398", "issue_summary": "[PY3] TestDumpMaster.test_basic: Un-acked message <Mock>", "issue_description": "Member\nmhils commented on 22 Jul 2016 \u2022\nedited by dufferzafar\nSteps to reproduce the problem:\n(python3) py.test -k TestDumpMaster -v\nWhat is the expected behavior?\nNo console output.\nWhat went wrong?\ntest/mitmproxy/test_dump.py::TestDumpMaster::test_basic Exception ignored in: <bound method Reply.__del__ of <mitmproxy.controller.Reply object at 0x04E10570>>\nTraceback (most recent call last):\n  File \"C:\\Users\\user\\git\\mitmproxy\\mitmproxy\\controller.py\", line 267, in __del__\n    raise exceptions.ControlException(\"Un-acked message: %s\" % self.obj)\nmitmproxy.exceptions.ControlException: Un-acked message: <Mock id='81855280'>\nPASSED\nMitmproxy Version: master\nOperating System: Windows x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T01:57:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1017": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1396", "issue_id": "#1396", "issue_summary": "Error when killing finished flow.", "issue_description": "Member\nmhils commented on 22 Jul 2016\nSteps to reproduce the problem:\nmitmproxy\nRecord flow.\nPress X on finished flow.\nWhat is the expected behavior?\nNo crash.\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 502, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/window.py\", line 42, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/flowlist.py\", line 408, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/listbox.py\", line 985, in keypress\n    key = focus_widget.keypress((maxcol,),key)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/flowlist.py\", line 258, in keypress\n    self.flow.kill(self.master)\n  File \"/media/sf_git/mitmproxy/mitmproxy/models/flow.py\", line 154, in kill\n    self.reply.kill()\n  File \"/media/sf_git/mitmproxy/mitmproxy/controller.py\", line 255, in kill\n    self.send(exceptions.Kill)\n  File \"/media/sf_git/mitmproxy/mitmproxy/controller.py\", line 262, in send\n    raise exceptions.ControlException(\"Message already acked.\")\nmitmproxy.exceptions.ControlException: Message already acked.\nMitmproxy Version: master\nOperating System: Ubuntu 14.04 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T01:25:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1018": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1395", "issue_id": "#1395", "issue_summary": "Error when killing HTTP/2 Flow", "issue_description": "Member\nmhils commented on 22 Jul 2016\nSteps to reproduce the problem:\nmitmproxy\nAdd catch-all interception filter\nVisit HTTP/2 URL\nPress X\nWhat is the expected behavior?\nFlow should be killed.\nWhat went wrong?\nAny other comments? What have you tried so far?\nWhen fixing this, let's make sure that killing responses works as well.\nMitmproxy Version: master\nOperating System: Ubuntu 14.04 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T01:22:16Z", "fixed_by": "#1413", "pull_request_summary": "http2: fix kill", "pull_request_description": "Member\nKriechi commented on 23 Jul 2016\nfixes #1395\nNot sure if this will do the trick...", "pull_request_status": "Merged", "issue_fixed_time": "2016-07-23T18:11:45Z", "files_changed": [["2", "mitmproxy/protocol/http2.py"]]}, "1019": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1394", "issue_id": "#1394", "issue_summary": "Status bar state confusion", "issue_description": "Member\nmhils commented on 22 Jul 2016\nSteps to reproduce the problem:\nmitmproxy\nn g enter e\nWhat is the expected behavior?\nEvent log should show.\nWhat went wrong?\nI'm also getting a Quit (yes, no)? prompt.\nMitmproxy Version: master\nOperating System: Ubuntu 14.04 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T01:18:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1020": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1393", "issue_id": "#1393", "issue_summary": "Holding down \"r\" crashes mitmproxy", "issue_description": "Member\nmhils commented on 22 Jul 2016\nSteps to reproduce the problem:\nmitmproxy\nn g enter\nHold down r\nWhat is the expected behavior?\nNo crash\nWhat went wrong?\nuser@user-ubuntu:~$ mitmproxy\nException ignored in: <bound method Reply.__del__ of <mitmproxy.controller.Reply object at 0x7f69de8646a0>>\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/controller.py\", line 269, in __del__\n    raise exceptions.ControlException(\"Un-acked message: %s\" % self.obj)\nmitmproxy.exceptions.ControlException: Un-acked message: <HTTPFlow\n  request = Request(GET www.example.com:80/)\n  server_conn = <ServerConnection: www.example.com:80>>\nException ignored in: <bound method Reply.__del__ of <mitmproxy.controller.Reply object at 0x7f69de864da0>>\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/controller.py\", line 269, in __del__\n    raise exceptions.ControlException(\"Un-acked message: %s\" % self.obj)\nmitmproxy.exceptions.ControlException: Un-acked message: <HTTPFlow\n  request = Request(GET www.example.com:80/)\n  response = Response(200 OK, text/html, 1.24k)\n  server_conn = <ServerConnection: www.example.com:80>>\nrTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 502, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 715, in _loop\n    alarm_callback()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 164, in cb\n    callback(self, user_data)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 448, in ticker\n    changed = self.tick(timeout=0)\n  File \"/media/sf_git/mitmproxy/mitmproxy/flow/master.py\", line 140, in tick\n    return super(FlowMaster, self).tick(timeout)\n  File \"/media/sf_git/mitmproxy/mitmproxy/controller.py\", line 136, in tick\n    handle_func(obj)\n  File \"/media/sf_git/mitmproxy/mitmproxy/controller.py\", line 219, in wrapper\n    master.addons(f.__name__, message)\n  File \"/media/sf_git/mitmproxy/mitmproxy/addons.py\", line 64, in __call__\n    self.invoke(i, name, *args, **kwargs)\n  File \"/media/sf_git/mitmproxy/mitmproxy/addons.py\", line 60, in invoke\n    func(*args, **kwargs)\n  File \"/media/sf_git/mitmproxy/mitmproxy/builtins/setheaders.py\", line 39, in response\n    self.run(flow, flow.response.headers)\nAttributeError: 'NoneType' object has no attribute 'headers'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...\nrrrrrrrrrrException ignored in: <bound method Reply.__del__ of <mitmproxy.controller.Reply object at 0x7f69df0c2c18>>\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/controller.py\", line 269, in __del__\nmitmproxy.exceptions.ControlException: Un-acked message: <HTTPFlow\n  request = Request(GET www.example.com:80/)\n  response = Response(200 OK, text/html, 1.24k)\n  error = Connection killed\n  server_conn = <ServerConnection: www.example.com:80>>\nuser@user-ubuntu:~$ mitmproxy\nrException ignored in: <bound method Reply.__del__ of <mitmproxy.controller.Reply object at 0x7f17c5270ac8>>\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/controller.py\", line 269, in __del__\n    raise exceptions.ControlException(\"Un-acked message: %s\" % self.obj)\nmitmproxy.exceptions.ControlException: Un-acked message: <HTTPFlow\n  request = Request(GET www.example.com:80/)\n  response = Response(200 OK, text/html, 1.24k)\n  server_conn = <ServerConnection: www.example.com:80>>\nrException ignored in: <bound method Reply.__del__ of <mitmproxy.controller.Reply object at 0x7f17c5291908>>\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/controller.py\", line 269, in __del__\n    raise exceptions.ControlException(\"Un-acked message: %s\" % self.obj)\nmitmproxy.exceptions.ControlException: Un-acked message: <HTTPFlow\n  request = Request(GET www.example.com:80/)\n  response = Response(200 OK, text/html, 1.24k)\n  server_conn = <ServerConnection: www.example.com:80>>\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 502, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 715, in _loop\n    alarm_callback()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 164, in cb\n    callback(self, user_data)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 448, in ticker\n    changed = self.tick(timeout=0)\n  File \"/media/sf_git/mitmproxy/mitmproxy/flow/master.py\", line 140, in tick\n    return super(FlowMaster, self).tick(timeout)\n  File \"/media/sf_git/mitmproxy/mitmproxy/controller.py\", line 136, in tick\n    handle_func(obj)\n  File \"/media/sf_git/mitmproxy/mitmproxy/controller.py\", line 219, in wrapper\n    master.addons(f.__name__, message)\n  File \"/media/sf_git/mitmproxy/mitmproxy/addons.py\", line 64, in __call__\n    self.invoke(i, name, *args, **kwargs)\n  File \"/media/sf_git/mitmproxy/mitmproxy/addons.py\", line 60, in invoke\n    func(*args, **kwargs)\n  File \"/media/sf_git/mitmproxy/mitmproxy/builtins/setheaders.py\", line 39, in response\n    self.run(flow, flow.response.headers)\nAttributeError: 'NoneType' object has no attribute 'headers'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...\nMitmproxy Version: master\nOperating System: Ubuntu 14.04 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T01:15:59Z", "fixed_by": "#1574", "pull_request_summary": "Fix #1393", "pull_request_description": "Member\nmhils commented on 24 Sep 2016\nThis PR fixes #1393.", "pull_request_status": "Merged", "issue_fixed_time": "2016-09-24T16:41:32Z", "files_changed": [["6", "mitmproxy/console/flowlist.py"], ["6", "mitmproxy/console/flowview.py"], ["4", "mitmproxy/exceptions.py"], ["33", "mitmproxy/flow/master.py"], ["2", "mitmproxy/protocol/http_replay.py"]]}, "1021": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1392", "issue_id": "#1392", "issue_summary": "Crash when saving body in flowview", "issue_description": "Member\nmhils commented on 22 Jul 2016\nSteps to reproduce the problem:\nAdd flow\nView flow\nSave body\nWhat is the expected behavior?\nNo crash.\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 502, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/window.py\", line 42, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/flowview.py\", line 609, in keypress\n    \"q\", self.master, self.state, self.flow\nTypeError: ask_save_body() takes 2 positional arguments but 4 were given\nAny other comments? What have you tried so far?\nMitmproxy Version:\nOperating System:", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T00:44:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1022": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1391", "issue_id": "#1391", "issue_summary": "[PY3] Saving both bodies fails.", "issue_description": "Member\nmhils commented on 22 Jul 2016\nSteps to reproduce the problem:\nAdd flow with both request and response body.\nPress b\nSelect \"both\"\nWhat is the expected behavior?\nNo crash\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 502, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/window.py\", line 42, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 134, in keypress\n    return self.master.ab.keypress(*args, **kwargs)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 87, in keypress\n    self.prompt_execute(k)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 112, in prompt_execute\n    msg = p(txt, *args)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/common.py\", line 296, in ask_save_body\n    (flow.request.get_content(strict=False) + \"\\n\" +\nTypeError: can't concat bytes to str\nMitmproxy Version: master\nOperating System: Ubuntu 14.04 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T00:44:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1023": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1390", "issue_id": "#1390", "issue_summary": "[PY3] Crash when removing limit", "issue_description": "Member\nmhils commented on 22 Jul 2016\nSteps to reproduce the problem:\nmitmproxy\nAdd flow\nSpecify filter/limit that matches no flows\nRemove filter\nWhat is the expected behavior?\nNo crash.\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 502, in run\n    self.loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/window.py\", line 42, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python3.5/dist-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 134, in keypress\n    return self.master.ab.keypress(*args, **kwargs)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 89, in keypress\n    self.prompt_execute(self._w.get_edit_text())\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/statusbar.py\", line 112, in prompt_execute\n    msg = p(txt, *args)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 648, in set_limit\n    v = self.state.set_limit(txt)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 79, in set_limit\n    self.set_focus(self.focus)\n  File \"/media/sf_git/mitmproxy/mitmproxy/console/master.py\", line 89, in set_focus\n    if idx >= len(self.view):\nTypeError: unorderable types: NoneType() >= int()\nMitmproxy Version: master\nOperating System: Ubuntu 14.04 x64", "issue_status": "Closed", "issue_reporting_time": "2016-07-22T00:28:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1024": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1389", "issue_id": "#1389", "issue_summary": "mitmproxy has crashed! NameError: global name 'http_cookies' is not defined", "issue_description": "shrikantkaramkar commented on 22 Jul 2016\nSteps to reproduce the problem:\nOpen mitmproxy\ncapture a call\ngo to response\nTo edit the cookies press c\nWhat is the expected behavior?\nIt should display all available cookies\nWhat went wrong?\nmitmdump crashed\nAny other comments? What have you tried so far?\nMitmproxy Version:\nOperating System:", "issue_status": "Closed", "issue_reporting_time": "2016-07-21T22:26:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1025": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1387", "issue_id": "#1387", "issue_summary": "AttributeError: 'NoneType' object has no attribute 'reply'", "issue_description": "marjomercado commented on 21 Jul 2016 \u2022\nedited by dufferzafar\nSteps to reproduce the problem:\nRun something like \"mitmproxy --cert \"example1.org=sslcerts/example1.org.pem\" --cert \"example2.org=sslcerts/example2.org.pem\" --no-http2 --ignore devbox.com\nWhat is the expected behavior?\nNo crash.\nWhat went wrong?\nTraceback (most recent call last):\nFile \"/usr/lib/python2.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\nroot_layer()\nTypeError: 'NoneType' object is not callable\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nError in processing of request from 10.161.129.35:38896\nTraceback (most recent call last):\nFile \"/usr/lib/python2.7/site-packages/netlib/tcp.py\", line 854, in connection_thread\nself.handle_client_connection(connection, client_address)\nFile \"/usr/lib/python2.7/site-packages/mitmproxy/proxy/server.py\", line 64, in handle_client_connection\nh.handle()\nFile \"/usr/lib/python2.7/site-packages/mitmproxy/proxy/server.py\", line 152, in handle\nself.channel.tell(\"clientdisconnect\", root_layer)\nFile \"/usr/lib/python2.7/site-packages/mitmproxy/controller.py\", line 68, in tell\nm.reply = DummyReply()\nAttributeError: 'NoneType' object has no attribute 'reply'\nAny other comments? What have you tried so far?\nNone.\nMitmproxy Version: 0.17\nOperating System: Centos 7", "issue_status": "Closed", "issue_reporting_time": "2016-07-21T15:44:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1026": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1386", "issue_id": "#1386", "issue_summary": "mitmproxy with modify_response_body.py produces a ScriptException.", "issue_description": "davidmurray commented on 21 Jul 2016\nSteps to reproduce the problem:\nStart mitmproxy with the -s option, like this for example:\n./mitmproxy -s \"./examples/modify_response_body.py abc def\"\nWhat went wrong?\ndavidsmbp:mitmproxy-0.17.1-osx cykey$ ./mitmproxy -s \"./examples/modify_response_body.py abc def\"\nScript load error: Traceback (most recent call last):\n  File \"site-packages/mitmproxy/flow.py\", line 694, in load_script\n  File \"site-packages/mitmproxy/script/script.py\", line 89, in load\n  File \"site-packages/mitmproxy/script/script.py\", line 118, in run\n  File \"site-packages/mitmproxy/script/script.py\", line 113, in run\nScriptException: start() takes no arguments (2 given)\nMitmproxy Version: 0.17.1\nOperating System: osx", "issue_status": "Closed", "issue_reporting_time": "2016-07-21T14:31:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1027": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1384", "issue_id": "#1384", "issue_summary": "You are using an outdated version of pyOpenSSL", "issue_description": "loretoparisi commented on 20 Jul 2016\nI get this error\nmacbookproloreto:~ admin$ mitmproxy\nYou are using an outdated version of pyOpenSSL: mitmproxy requires pyOpenSSL 0.14 or greater.\nYour pyOpenSSL 0.13.1 installation is located at /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/OpenSSL\nmacbookproloreto:~ admin$ \nfor\nmacbookproloreto:~ admin$ sw_vers \nProductName:    Mac OS X\nProductVersion: 10.11.5\nBuildVersion:   15F34", "issue_status": "Closed", "issue_reporting_time": "2016-07-20T11:05:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1028": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1381", "issue_id": "#1381", "issue_summary": "Documentation for New Developers", "issue_description": "Contributor\ndufferzafar commented on 18 Jul 2016 \u2022\nedited\nI think we should have some doc pages targetting new contributors.\nI was once talking with @s4chin and he had a very simple question \"How do I understand mitmproxy's codebase? It's huge and I have no idea where to start.\"\nUnderstanding new codebases isn't an easy task, but we can surely tell people where to start.\nSome contents (off the top of my head):\nThe Hacking & Testing section from the Readme\nDescribe the basic folder structure\nwhat is where\nwhat are netlib/pathoc etc.\nhow they fit into mitmproxy\n'Suggested/Further Readings' for topics like HTTP/2 etc.\nThere are a lot of people who just know python and want to contribute to open source projects but may not know all the advanced networking topics involved.\nI didn't understand 70% of what is on the How mitmproxy works when I read it for the first time.\nSome of the files already have a top-level docstring. Extending this to every file would be great.\nThoughts?\nSeeing Anaconda's Developer Docs finally made me open this issue.\n2", "issue_status": "Closed", "issue_reporting_time": "2016-07-18T10:25:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1029": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1377", "issue_id": "#1377", "issue_summary": "Occasional HTTP2-related traceback when exiting mitmproxy console", "issue_description": "Member\ncortesi commented on 18 Jul 2016\nSteps to reproduce the problem:\nI see this when viewing live HTTP2 traffic, after quitting the program normally with the keyboard shortcut.\nWhat is the expected behavior?\nNo traceback.\nWhat went wrong?\nException in thread Http2SingleStreamLayer-15:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python3/3.5.1/Frameworks/Python.framework/Versions/3.5/lib/python3.5/threading.py\", line 914, in _bootstrap_inner\n    self.run()\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/protocol/http2.py\", line 576, in run\n    layer()\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/protocol/http.py\", line 185, in __call__\n    flow = self.channel.ask(\"response\", flow)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/controller.py\", line 188, in ask\n    raise exceptions.Kill()\nmitmproxy.exceptions.Kill\nMitmproxy version: 0.18\nPython version: 3.5.1\nPlatform: Darwin-15.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2h 3 May 2016\nMac version: 10.11.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-07-17T22:17:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1030": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1375", "issue_id": "#1375", "issue_summary": "mitmproxy issues with gmail (cert installed) in firefox", "issue_description": "fliespl commented on 17 Jul 2016\nSteps to reproduce the problem:\nInstall certificate from mitm.it in Firefox (Other option with websites checked)\nstart in socks mode mitmproxy -p 8888 --socks\nTry to login in gmail\nWhat is the expected behavior?\nSuccessful login\nWhat went wrong?\nGmail fails with \"Invalid requests\"\nAny other comments? What have you tried so far?\nSetting up socks proxy using ssh command works correctly: ssh -f -N -D 0.0.0.0:8888 localhost\nMitmproxy Version: 0.17\nOperating System: ubuntu 16.04", "issue_status": "Closed", "issue_reporting_time": "2016-07-17T15:00:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1031": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1374", "issue_id": "#1374", "issue_summary": "Attempting to delete a flow that has finished crashes mitmproxy", "issue_description": "rubenvereecken commented on 17 Jul 2016\nI often hit d as a way to navigate downward, a behavior instilled by less and my browser's navigation. However, when I do so I get ControlException: Message already acked and mitmproxy shuts down. Don't feel like I should be punished so badly. d should let me know less forcefully.\nMitmproxy Version: Fresh from the press.\nI'll get around to looking into this.", "issue_status": "Closed", "issue_reporting_time": "2016-07-17T09:36:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1032": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1373", "issue_id": "#1373", "issue_summary": "Global display mode key not working anymore", "issue_description": "rubenvereecken commented on 17 Jul 2016\nM does not allow me to set global display mode, m still works on a per-request/response basis. Tried from within the flow view.\nMitmproxy Version: The hottest and latest.\nI don't mind having a look at this once I have some time", "issue_status": "Closed", "issue_reporting_time": "2016-07-17T09:33:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1033": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1366", "issue_id": "#1366", "issue_summary": "exception from netlib - reason not well formated get request", "issue_description": "dervagabund commented on 16 Jul 2016\nSteps to reproduce the problem:\nI had a problem with a client that sent a \"wrong\" GET request: GET HTTP/1.1 with 2 spaces between and HTTP/1.1\nWhat went wrong?\nexception from netlib/http/http1/read.py on line 247 because split in line 232\nmethod, path, http_version = line.split(b\" \")\nseems to be wrong. I have fixed it for me be changing the split to\nmethod, path, http_version = line.split()\nThen it worked.\nBest regards,\nThomas", "issue_status": "Closed", "issue_reporting_time": "2016-07-16T11:35:50Z", "fixed_by": "#1367", "pull_request_summary": "fix-1366", "pull_request_description": "Member\nKriechi commented on 16 Jul 2016\nfixes #1366", "pull_request_status": "Merged", "issue_fixed_time": "2016-07-17T03:06:58Z", "files_changed": [["5", "netlib/http/http1/read.py"], ["26", "test/netlib/http/http1/test_read.py"]]}, "1034": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1364", "issue_id": "#1364", "issue_summary": "Installation problem in El Capitan Mac", "issue_description": "ghost commented on 16 Jul 2016 \u2022\nedited by ghost\nI was trying to install mitmproxy using pip but I get a build error.\nWhat went wrong?\n error: command '/usr/local/bin/gcc-4.2' failed with exit status 1\n\n  ----------------------------------------\n  Failed building wheel for watchdog\n  Running setup.py clean for watchdog\nFailed to build watchdog\nInstalling collected packages: watchdog, mitmproxy\n  Running setup.py install for watchdog ... error\n    Complete output from command /Library/Frameworks/Python.framework/Versions/3.4/bin/python3 -u -c \"import setuptools, tokenize;__file__='/private/var/folders/5n/6wblsmz51ll_gbhv2d_bkw3h0000gn/T/pip-build-ev6ibqgz/watchdog/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/5n/6wblsmz51ll_gbhv2d_bkw3h0000gn/T/pip-mp83y29k-record/install-record.txt --single-version-externally-managed --compile:\n    running install\n    running build\n    running build_py\n    creating build\n    creating build/lib.macosx-10.6-intel-3.4\n    creating build/lib.macosx-10.6-intel-3.4/watchdog\n    copying src/watchdog/__init__.py -> build/lib.macosx-10.6-intel-3.4/watchdog\n    copying src/watchdog/events.py -> build/lib.macosx-10.6-intel-3.4/watchdog\n    copying src/watchdog/version.py -> build/lib.macosx-10.6-intel-3.4/watchdog\n    copying src/watchdog/watchmedo.py -> build/lib.macosx-10.6-intel-3.4/watchdog\n    creating build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    copying src/watchdog/observers/__init__.py -> build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    copying src/watchdog/observers/api.py -> build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    copying src/watchdog/observers/fsevents.py -> build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    copying src/watchdog/observers/fsevents2.py -> build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    copying src/watchdog/observers/inotify.py -> build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    copying src/watchdog/observers/inotify_buffer.py -> build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    copying src/watchdog/observers/inotify_c.py -> build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    copying src/watchdog/observers/kqueue.py -> build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    copying src/watchdog/observers/polling.py -> build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    copying src/watchdog/observers/read_directory_changes.py -> build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    copying src/watchdog/observers/winapi.py -> build/lib.macosx-10.6-intel-3.4/watchdog/observers\n    creating build/lib.macosx-10.6-intel-3.4/watchdog/tricks\n    copying src/watchdog/tricks/__init__.py -> build/lib.macosx-10.6-intel-3.4/watchdog/tricks\n    creating build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/__init__.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/bricks.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/compat.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/decorators.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/delayed_queue.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/dirsnapshot.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/echo.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/event_backport.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/importlib2.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/platform.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/unicode_paths.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    copying src/watchdog/utils/win32stat.py -> build/lib.macosx-10.6-intel-3.4/watchdog/utils\n    running egg_info\n    writing requirements to src/watchdog.egg-info/requires.txt\n    writing dependency_links to src/watchdog.egg-info/dependency_links.txt\n    writing src/watchdog.egg-info/PKG-INFO\n    writing entry points to src/watchdog.egg-info/entry_points.txt\n    writing top-level names to src/watchdog.egg-info/top_level.txt\n    warning: manifest_maker: standard file '-c' not found\n\n    reading manifest file 'src/watchdog.egg-info/SOURCES.txt'\n    reading manifest template 'MANIFEST.in'\n    warning: no files found matching '*.h' under directory 'src'\n    writing manifest file 'src/watchdog.egg-info/SOURCES.txt'\n    running build_ext\n    building '_watchdog_fsevents' extension\n    creating build/temp.macosx-10.6-intel-3.4\n    creating build/temp.macosx-10.6-intel-3.4/src\n    /usr/local/bin/gcc-4.2 -fno-strict-aliasing -fno-common -dynamic -DNDEBUG -g -fwrapv -O3 -Wall -Wstrict-prototypes -arch i386 -arch x86_64 -g -DWATCHDOG_VERSION_STRING=\"0.8.3\" -DWATCHDOG_VERSION_MAJOR=0 -DWATCHDOG_VERSION_MINOR=8 -DWATCHDOG_VERSION_BUILD=3 -I/Library/Frameworks/Python.framework/Versions/3.4/include/python3.4m -c src/watchdog_fsevents.c -o build/temp.macosx-10.6-intel-3.4/src/watchdog_fsevents.o -std=c99 -pedantic -Wall -Wextra -fPIC -Wno-error=unused-command-line-argument-hard-error-in-future\n    cc1: error: -Werror=unused-command-line-argument-hard-error-in-future: No option -Wunused-command-line-argument-hard-error-in-future\n    cc1: error: -Werror=unused-command-line-argument-hard-error-in-future: No option -Wunused-command-line-argument-hard-error-in-future\n    fatal error: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: can't figure out the architecture type of: /var/folders/5n/6wblsmz51ll_gbhv2d_bkw3h0000gn/T//cc0XFAdA.out\n    error: command '/usr/local/bin/gcc-4.2' failed with exit status 1\n\n    ----------------------------------------\nCommand \"/Library/Frameworks/Python.framework/Versions/3.4/bin/python3 -u -c \"import setuptools, tokenize;__file__='/private/var/folders/5n/6wblsmz51ll_gbhv2d_bkw3h0000gn/T/pip-build-ev6ibqgz/watchdog/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /var/folders/5n/6wblsmz51ll_gbhv2d_bkw3h0000gn/T/pip-mp83y29k-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /private/var/folders/5n/6wblsmz51ll_gbhv2d_bkw3h0000gn/T/pip-build-ev6ibqgz/watchdog/\nAny other comments? What have you tried so far?\nI have tried installing other modules but they did not throw any sort of error.\nMitmproxy Version:\nOperating System:", "issue_status": "Closed", "issue_reporting_time": "2016-07-16T09:12:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1035": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1361", "issue_id": "#1361", "issue_summary": "mitmdump -r shows all flows as [replay]", "issue_description": "Member\ncortesi commented on 16 Jul 2016\nSteps to reproduce the problem:\nSave some flows to file\nRun mitmdump -nr file\nWhat went wrong?\nFlows are not replayed and shouldn't be marked as such\nmitmdump --sysinfo\nMitmproxy version: 0.18\nPython version: 2.7.11\nPlatform: Darwin-15.5.0-x86_64-i386-64bit\nSSL version: OpenSSL 1.0.2h 3 May 2016\nMac version: 10.11.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-07-15T22:47:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1036": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1360", "issue_id": "#1360", "issue_summary": "Tutorial about game center, typo?", "issue_description": "macdonjo commented on 15 Jul 2016\nI\u2019ll beat your game center score on any game http://docs.mitmproxy.org/en/stable/tutorials/gamecenter.html?highlight=phone\nThe score in the plist is 0, but the text says 55. Is this a typo? Kind of confusing.", "issue_status": "Closed", "issue_reporting_time": "2016-07-15T06:30:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1037": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1359", "issue_id": "#1359", "issue_summary": "How to enter in regex filter?", "issue_description": "macdonjo commented on 15 Jul 2016\nSteps to reproduce the problem:\nType: ~d regex\nNotice that it doesn't filter anything.\nWhat is the expected behavior?\nIt's supposed to filter.\nHow do I filter with this? I see the instructions, but I don't know how I can enter this filter in?", "issue_status": "Closed", "issue_reporting_time": "2016-07-15T03:58:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1038": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1358", "issue_id": "#1358", "issue_summary": "Mitmproxy crashes on startup", "issue_description": "rubenvereecken commented on 15 Jul 2016 \u2022\nedited\nmitmproxy\nNets me this hairy beast:\nTraceback (most recent call last):\n  File \"/home/ruben/anaconda/lib/python2.7/site-packages/mitmproxy-0.18-py2.7.egg/mitmproxy/console/master.py\", line 529, in run\n    self.loop.run()\n  File \"/home/ruben/anaconda/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/ruben/anaconda/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/home/ruben/anaconda/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/home/ruben/anaconda/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\n    alarm_callback()\n  File \"/home/ruben/anaconda/lib/python2.7/site-packages/urwid/main_loop.py\", line 164, in cb\n    callback(self, user_data)\n  File \"/home/ruben/anaconda/lib/python2.7/site-packages/mitmproxy-0.18-py2.7.egg/mitmproxy/console/master.py\", line 524, in <lambda>\n    lambda *args: self.view_flowlist()\n  File \"/home/ruben/anaconda/lib/python2.7/site-packages/mitmproxy-0.18-py2.7.egg/mitmproxy/console/master.py\", line 612, in view_flowlist\n    statusbar.StatusBar(self, flowlist.footer),\n  File \"/home/ruben/anaconda/lib/python2.7/site-packages/mitmproxy-0.18-py2.7.egg/mitmproxy/console/statusbar.py\", line 126, in __init__\n    self.redraw()\n  File \"/home/ruben/anaconda/lib/python2.7/site-packages/mitmproxy-0.18-py2.7.egg/mitmproxy/console/statusbar.py\", line 249, in redraw\n    t.extend(self.get_status())\n  File \"/home/ruben/anaconda/lib/python2.7/site-packages/mitmproxy-0.18-py2.7.egg/mitmproxy/console/statusbar.py\", line 227, in get_status\n    if self.master.stream:\nAttributeError: 'ConsoleMaster' object has no attribute 'stream'\nMitmproxy Version: 0.18 - fresh off of master\nOperating System: Let's say Ubuntu 14.04 and lie\nI installed by running python setup.py install", "issue_status": "Closed", "issue_reporting_time": "2016-07-14T21:26:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1039": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1357", "issue_id": "#1357", "issue_summary": "mitmproxy crash", "issue_description": "Michagogo commented on 15 Jul 2016\nSteps to reproduce the problem:\nadd stream.twitter.com to /etc/hosts, pointing to 127.0.0.1\nrun sudo mitmproxy -R https://stream.twitter.com -p 443\nattempt to connect to the Twitter Streaming API using tweepy\nWhat is the expected behavior?\nStream connects, data is captured for analysis\nWhat went wrong?\nmitmproxy crashes. The error is attached -- it does something to the terminal that prevents me from selecting the text and copying it.\nAny other comments? What have you tried so far?\nMitmproxy Version: whatever pip installs right now\nOperating System: Ubuntu Trusty Server", "issue_status": "Closed", "issue_reporting_time": "2016-07-14T21:11:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1040": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1346", "issue_id": "#1346", "issue_summary": "virtualenv --always-copy fails", "issue_description": "ntulele commented on 12 Jul 2016 \u2022\nedited by Kriechi\nSteps to reproduce the problem:\nI attempted to follow the [Hacking instructions]:\nAttempt to execute dev.sh -- or more specifically, the virtualenv setup portion: virtualenv venv --always-copy\nWhat is the expected behavior?\nSuccessful virtualenv setup\nWhat went wrong?\nMany \"Operation not permitted\" errors\nTraceback (most recent call last):\n  File \"/usr/local/bin/virtualenv\", line 11, in <module>\n    sys.exit(main())\n  File \"/Library/Python/2.7/site-packages/virtualenv.py\", line 711, in main\n    symlink=options.symlink)\n  File \"/Library/Python/2.7/site-packages/virtualenv.py\", line 924, in create_environment\n    site_packages=site_packages, clear=clear, symlink=symlink))\n  File \"/Library/Python/2.7/site-packages/virtualenv.py\", line 1129, in install_python\n    copyfile(join(stdlib_dir, fn), join(lib_dir, fn), symlink)\n  File \"/Library/Python/2.7/site-packages/virtualenv.py\", line 355, in copyfile\n    copyfileordir(src, dest, symlink)\n  File \"/Library/Python/2.7/site-packages/virtualenv.py\", line 327, in copyfileordir\n    shutil.copytree(src, dest, symlink)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py\", line 208, in copytree\n    raise Error, errors\nshutil.Error: [('/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_AE.so',  \"[Errno 1] Operation not permitted: '/Users/paul.poling/mitmproxy/venv/lib/python2.7/lib-dynload/_AE.so'\"),\n. . . ~100 more \"Operation not permitted\" errors \nAny other comments? What have you tried so far?\nvirtualenv venv works, so it's only the \"always-copy\" that's failing.\nShould I expect issues due to my virtualenv using symlinks instead of copies?\nPermissions on files in /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7 are 744 and owned by root, e.g.:\n-rwxr-xr-x 1 root wheel 77248 Mar 12 00:06 /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload/_AE.so\nI tried executing as sudo, but that caused permissions issues later on.\nI don't have another clean Mac env to test on, so I'm unsure if this is just an issue with my python install -- perhaps I did sudo pip install at some point, which is evidently incorrect for El Capitan.\nMitmproxy Version: master @ 427ba\nOperating System: OSX El Capitan 10.11.4", "issue_status": "Closed", "issue_reporting_time": "2016-07-12T14:57:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1041": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1340", "issue_id": "#1340", "issue_summary": "Script Reloader fails crashes on Ubuntu on Windows 10", "issue_description": "kuza55 commented on 11 Jul 2016\nSteps to reproduce the problem:\nInstall mitmproxy on ubuntu on windows 10\nrun mitmdump\nWhat is the expected behavior?\nmitmdump runs\nWhat went wrong?\nmitmdump crashes because inotify is not supported on ubuntu on windows 10\nAny other comments? What have you tried so far?\nI set use_relader=False in mitmdump.py to fix this for myself.", "issue_status": "Closed", "issue_reporting_time": "2016-07-11T17:32:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1042": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1339", "issue_id": "#1339", "issue_summary": "MitmProxy crashes", "issue_description": "kuza55 commented on 11 Jul 2016 \u2022\nedited by Kriechi\nSteps to reproduce the problem:\nI'm not sure what is causing this error, I was running mitmdump to mitm chrome like so:\nmitmdump --stream 10k -q -s \"myscript.py\"\nI don't get this error without both --stream and -q\nWhat went wrong?\nI got this stack trace:\n127.0.0.1:50357: Traceback (most recent call last):\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\mitmproxy\\proxy\\server.py\", line 121, in handle\n    root_layer()\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\mitmproxy\\proxy\\modes\\http_proxy.py\", line 11, in __call__\n    layer()\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\mitmproxy\\protocol\\tls.py\", line 358, in __call__\n    layer()\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\mitmproxy\\protocol\\http1.py\", line 67, in __call__\n    layer()\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\mitmproxy\\protocol\\http.py\", line 171, in __call__\n    self.handle_regular_mode_connect(request)\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\mitmproxy\\protocol\\http.py\", line 263, in handle_regular_mode_connect\n    layer()\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\mitmproxy\\protocol\\tls.py\", line 358, in __call__\n    layer()\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\mitmproxy\\protocol\\http2.py\", line 234, in __call__\n    events = source_conn.h2.receive_data(raw_frame)\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\h2\\connection.py\", line 1143, in receive_data\n    events.extend(self._receive_frame(frame))\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\h2\\connection.py\", line 1166, in _receive_frame\n    frames, events = self._frame_dispatch_table[frame.__class__](frame)\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\h2\\connection.py\", line 1234, in _receive_headers_frame\n    headers = validate_headers(headers)\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\h2\\utilities.py\", line 167, in validate_headers\n    return list(headers)\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\h2\\utilities.py\", line 221, in _reject_pseudo_header_fields\n    for header in headers:\n  File \"c:\\users\\alex\\anaconda2\\lib\\site-packages\\h2\\utilities.py\", line 206, in _reject_connection_header\n    \"Connection-specific header field present: %s.\" % header[0]\nProtocolError: Connection-specific header field present: connection.\nmitmproxy has crashed!", "issue_status": "Closed", "issue_reporting_time": "2016-07-11T16:35:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1043": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1337", "issue_id": "#1337", "issue_summary": "Snapshots have weird filename due to py3", "issue_description": "Member\nKriechi commented on 10 Jul 2016\nSteps to reproduce the problem:\nLook at https://snapshots.mitmproxy.org/v0.18/\nmitmproxy-0.18dev0636-0xg588dad1-py2-none-any.whl  26-Jun-2016 21:55    985K\nmitmproxy-0.18dev0759-0xg22c0db3-win32.zip         09-Jul-2016 20:45     35M\nmitmproxy-0.18dev0775-0xb'g6bb267c'-osx.tar.gz     10-Jul-2016 09:29     35M\nmitmproxy-0.18dev0775-0xb'g6bb267c'-py2.py3-non..> 10-Jul-2016 09:28    986K\npathod-0.18dev0759-0xg22c0db3-win32.zip            09-Jul-2016 20:46     12M\npathod-0.18dev0775-0xb'g6bb267c'-osx.tar.gz        10-Jul-2016 09:28     13M\nWhat is the expected behavior?\nHave proper filename.\nWhat went wrong?\nSome files contain e.g. 0xb'g6bb267c', others contain 0xg22c0db3. The 0x part is ok, but the other thing looks like a bytes vs. str problem introduced by creating snapshots with Python 3.", "issue_status": "Closed", "issue_reporting_time": "2016-07-10T10:23:57Z", "fixed_by": "#1336", "pull_request_summary": "rtool hotfix", "pull_request_description": "Contributor\ndufferzafar commented on 10 Jul 2016 \u2022\nedited by Kriechi\nfixes #1337", "pull_request_status": "Merged", "issue_fixed_time": "2016-07-10T10:24:10Z", "files_changed": [["2", "release/rtool.py"]]}, "1044": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1333", "issue_id": "#1333", "issue_summary": "Update Windows builds to Python 3", "issue_description": "Member\nmhils commented on 9 Jul 2016\nWe should adjust the AppVeyor builds to produce Python 3.5 binaries.", "issue_status": "Closed", "issue_reporting_time": "2016-07-09T08:22:43Z", "fixed_by": "#1365", "pull_request_summary": "add Windows py3 builds", "pull_request_description": "Member\nKriechi commented on 16 Jul 2016\nfixes #1333", "pull_request_status": "Merged", "issue_fixed_time": "2016-07-19T03:48:46Z", "files_changed": [["2", ".appveyor.yml"]]}, "1045": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1332", "issue_id": "#1332", "issue_summary": "Update OSX builds to Python 3", "issue_description": "Member\nmhils commented on 9 Jul 2016\nWe can move the whole travis OSX tests to Python 3 (only), which will then also create Python 3 binaries.", "issue_status": "Closed", "issue_reporting_time": "2016-07-09T08:22:11Z", "fixed_by": "#1335", "pull_request_summary": "move OSX Travis job to py3 for snapshots", "pull_request_description": "Member\nKriechi commented on 10 Jul 2016\n@mhils is this everything need to fix #1332?", "pull_request_status": "Merged", "issue_fixed_time": "2016-07-10T11:17:42Z", "files_changed": [["33", ".travis.yml"]]}, "1046": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1326", "issue_id": "#1326", "issue_summary": "HTTP2 Error when opening news.ycombinator.com", "issue_description": "Member\nmhils commented on 8 Jul 2016\nSteps to reproduce the problem:\nOpen news.ycombinator.com in Firefox\nWhat is the expected behavior?\nNo errors.\nWhat went wrong?\nTraceback (most recent call last):\n  File \"c:\\python27\\Lib\\threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\protocol\\http2.py\", line 512, in run\n    self()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\protocol\\http2.py\", line 518, in __call__\n    layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\protocol\\http.py\", line 178, in __call__\n    self.get_response_from_server(flow)\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\protocol\\http.py\", line 276, in get_response_from_server\n    get_response()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\protocol\\http.py\", line 272, in get_response\n    self.send_request(flow.request)\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\protocol\\http2.py\", line 429, in send_request\n    raise e\nProtocolError: Stream 3 may not depend on itself\nMitmproxy Version: master\nOperating System: Win64", "issue_status": "Closed", "issue_reporting_time": "2016-07-08T03:07:46Z", "fixed_by": "#1328", "pull_request_summary": "http2: fix self-depended streams", "pull_request_description": "Member\nKriechi commented on 8 Jul 2016\nfixes #1326", "pull_request_status": "Merged", "issue_fixed_time": "2016-07-08T09:31:07Z", "files_changed": [["45", "mitmproxy/protocol/http2.py"]]}, "1047": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1320", "issue_id": "#1320", "issue_summary": "HAR Export", "issue_description": "Member\nmhils commented on 7 Jul 2016 \u2022\nedited\nWe used to have a har_extractor.py inline script which converted a mitmproxy dump to a har file. Unfortunately, that script depends on the harparser library, which is Python 2 only. It'd be great to add support for HAR export again, ideally without depending on harparser.\n1", "issue_status": "Closed", "issue_reporting_time": "2016-07-07T00:01:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1048": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1314", "issue_id": "#1314", "issue_summary": "Cannot install mitmproxy 0.18 on Cywgin", "issue_description": "Member\nmhils commented on 5 Jul 2016\nSteps to reproduce the problem:\npip install -U psutil\nWhat is the expected behavior?\npsutil gets installed\nWhat went wrong?\n~ $ pip install -U psutil\nCollecting psutil\n  Downloading psutil-4.3.0.tar.gz (316kB)\n    100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 317kB 1.3MB/s\n    Complete output from command python setup.py egg_info:\n    platform cygwin is not supported\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /cygdrive/c/Users/user/AppData/Local/Temp/pip-build-MAxy7J/psutil/\nI proposed removing psutil as a required dependency before, but I'd be open to any other solution. @cortesi?\nMitmproxy Version: master\nOperating System: Windows 10 & Cygwin", "issue_status": "Closed", "issue_reporting_time": "2016-07-04T21:54:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1049": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1311", "issue_id": "#1311", "issue_summary": "Can not login to facebook/google with http2", "issue_description": "mike820324 commented on 3 Jul 2016\nSteps to reproduce the problem:\nUse firefox and connect to mitmproxy with socks mode.\nConnect to https://www.facebook.com or https://accounts.google.com .\nTry to login.\nWhat is the expected behavior?\nShould get 200 OK and login to the website.\nWhat went wrong?\nGet 302 redirect from both sites and redirect to the original login site.\nAny other comments? What have you tried so far?\nThe behavior will be normal if we disable http2.\nMitmproxy Version: 0.17.0\nOperating System: osx 10.11", "issue_status": "Closed", "issue_reporting_time": "2016-07-03T05:18:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1050": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1310", "issue_id": "#1310", "issue_summary": "Cannot connect to twitter with http2.", "issue_description": "mike820324 commented on 3 Jul 2016\nSteps to reproduce the problem:\nUse firefox to connect to mitmproxy with socks mode.\nConnect to https://twitter.com\nWhat is the expected behavior?\nTwitter will response with 200 OK.\nWhat went wrong?\nTwitter response with 400 bad request\nAny other comments? What have you tried so far?\nIf disable http2 the behavior will be normal.\nMitmproxy Version: 0.17.0\nOperating System: Max osx 10.10", "issue_status": "Closed", "issue_reporting_time": "2016-07-03T05:05:06Z", "fixed_by": "#1245", "pull_request_summary": "http2: handle priority information better", "pull_request_description": "Member\nKriechi commented on 11 Jun 2016 \u2022\nedited\nwait for hyper-h2 2.4.0 to be released\nfixes #1310", "pull_request_status": "Merged", "issue_fixed_time": "2016-07-05T18:56:01Z", "files_changed": [["65", "mitmproxy/protocol/http2.py"], ["2", "setup.py"]]}, "1051": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1309", "issue_id": "#1309", "issue_summary": "TlsProtocolException", "issue_description": "NajiMir commented on 2 Jul 2016 \u2022\nedited\nWhen I was getting a page on assetscdn.stackla.com through mitmdump, I got the following exception:\n127.0.0.1:45960: TlsProtocolException('Cannot establish TLS with assetscdn.stackla.com:443 (sni: None): TlsException(\"SSL handshake error: Error([(\\'SSL routines\\', \\'SSL23_GET_SERVER_HELLO\\', \\'sslv3 alert handshake failure\\')],)\",)',)\nIt looks like the SNI is None which raises the above exception. Is there any fix for this problem?\nMitmproxy Version: mitmdump 0.15\nOperating System: Ubuntu 140.0.4", "issue_status": "Closed", "issue_reporting_time": "2016-07-02T16:36:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1052": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1304", "issue_id": "#1304", "issue_summary": "Please create a hook for intercepting and modifying CONNECT requests", "issue_description": "pwnall commented on 30 Jun 2016\nThe request hook for inline scripts appears to not be invoked at all for some CONNECT requests:\nSpecifically, this branch does not call the request hook at all.", "issue_status": "Closed", "issue_reporting_time": "2016-06-30T17:11:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1053": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1303", "issue_id": "#1303", "issue_summary": "Installation from master branch fails", "issue_description": "neurobin commented on 30 Jun 2016 \u2022\nedited\nSteps to reproduce the problem:\nInstall with sudo -H pip install git+https://github.com/mitmproxy/mitmproxy.git\nRun mitmproxy --version\nWhat is the expected behavior?\nShould run without any error\nWhat went wrong?\nIt shows the following error:\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 5, in <module>\n    from pkg_resources import load_entry_point\n  File \"/usr/local/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 2927, in <module>\n    @_call_aside\n  File \"/usr/local/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 2913, in _call_aside\n    f(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 2940, in _initialize_master_working_set\n    working_set = WorkingSet._build_master()\n  File \"/usr/local/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 635, in _build_master\n    ws.require(__requires__)\n  File \"/usr/local/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 943, in require\n    needed = self.resolve(parse_requirements(requirements))\n  File \"/usr/local/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 829, in resolve\n    raise DistributionNotFound(req, requirers)\npkg_resources.DistributionNotFound: The 'typing==3.5.2.2' distribution was not found and is required by mitmproxy\nAny other comments? What have you tried so far?\nI have tried to pip uninstall netlib and pip install netlib, but the uninstall command shows Can't uninstall 'netlib'. No files were found to uninstall.\nI have tried to install it by downloading the source and following the hacking section in the README, but get this error:\nTraceback (most recent call last):\n  File \"/home/jahid/softs/mitmproxy-master/venv/bin/pip\", line 7, in <module>\n    from pip import main\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/__init__.py\", line 11, in <module>\n    from pip.vcs import git, mercurial, subversion, bazaar  # noqa\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/vcs/mercurial.py\", line 9, in <module>\n    from pip.download import path_to_url\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/download.py\", line 22, in <module>\n    from pip._vendor import requests, six\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/_vendor/requests/__init__.py\", line 58, in <module>\n    from . import utils\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/_vendor/requests/utils.py\", line 25, in <module>\n    from .compat import parse_http_list as _parse_list_header\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/_vendor/requests/compat.py\", line 7, in <module>\n    from .packages import chardet\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/_vendor/requests/packages/__init__.py\", line 3, in <module>\n    from . import urllib3\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/_vendor/requests/packages/urllib3/__init__.py\", line 16, in <module>\n    from .connectionpool import (\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/_vendor/requests/packages/urllib3/connectionpool.py\", line 33, in <module>\n    from .connection import (\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/_vendor/requests/packages/urllib3/connection.py\", line 41, in <module>\n    from .util import (\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/_vendor/requests/packages/urllib3/util/__init__.py\", line 5, in <module>\n    from .response import is_fp_closed\n  File \"/home/jahid/softs/mitmproxy-master/venv/lib/python2.7/site-packages/pip/_vendor/requests/packages/urllib3/util/response.py\", line 4, in <module>\n    from ..exceptions import HeaderParsingError\nImportError: cannot import name HeaderParsingError\nMitmproxy Version: master branch\nOperating System: Xubuntu 14.04.4\nPython version: 2.7.6", "issue_status": "Closed", "issue_reporting_time": "2016-06-30T11:03:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1054": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1300", "issue_id": "#1300", "issue_summary": "Intermittent Travis failure: File exists: '/tmp/mitmproxy'", "issue_description": "Member\nmhils commented on 29 Jun 2016\nSteps to reproduce the problem:\nMake a commit\nObserve that Travis fails sometimes\nRebuild\nObserve that it succeeds sometimes\nWhat is the expected behavior?\nConsistent error results\nWhat went wrong?\nInconsistent error results.\nhttps://travis-ci.org/mitmproxy/mitmproxy/jobs/140982887\nMy guess would be that the test multithreading kills us here.", "issue_status": "Closed", "issue_reporting_time": "2016-06-29T04:36:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1055": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1298", "issue_id": "#1298", "issue_summary": "mitmproxy has crashed!", "issue_description": "FreelancePentester commented on 28 Jun 2016 \u2022\nedited by Kriechi\nSteps to reproduce the problem:\nWhat is the expected behavior?\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/http_proxy.py\", line 11, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 345, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 427, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 424, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 433, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 566, in _find_cert\n    return self.config.certstore.get_cert(host, list(sans))\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/certutils.py\", line 341, in get_cert\n    sans),\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/certutils.py\", line 96, in dummy_cert\n    ipaddress.ip_address(i.decode(\"ascii\"))\nAttributeError: 'NoneType' object has no attribute 'decode'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/http_proxy.py\", line 11, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 345, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 427, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 424, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 433, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 566, in _find_cert\n    return self.config.certstore.get_cert(host, list(sans))\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/certutils.py\", line 341, in get_cert\n    sans),\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/certutils.py\", line 96, in dummy_cert\n    ipaddress.ip_address(i.decode(\"ascii\"))\nAttributeError: 'NoneType' object has no attribute 'decode'\nWhat went wrong?\nAny other comments? What have you tried so far?\nMitmproxy Version: 0.16\nOperating System: Linuxt Mint 18 beta", "issue_status": "Closed", "issue_reporting_time": "2016-06-28T14:12:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1056": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1295", "issue_id": "#1295", "issue_summary": "error Installing in Ubuntu 16.04", "issue_description": "FreelancePentester commented on 26 Jun 2016\nSteps to reproduce the problem:\nsudo pip install mitmproxy==0.16\nWhat is the expected behavior?\nCollecting mitmproxy==0.16\nDownloading mitmproxy-0.16-py2-none-any.whl (1.4MB)\n100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.4MB 110kB/s\nRequirement already satisfied (use --upgrade to upgrade): click<7.0,>=6.2 in /usr/lib/python2.7/dist-packages (from mitmproxy==0.16)\nException:\nTraceback (most recent call last):\nFile \"/usr/lib/python2.7/dist-packages/pip/basecommand.py\", line 209, in main\nstatus = self.run(options, args)\nFile \"/usr/lib/python2.7/dist-packages/pip/commands/install.py\", line 328, in run\nwb.build(autobuilding=True)\nFile \"/usr/lib/python2.7/dist-packages/pip/wheel.py\", line 748, in build\nself.requirement_set.prepare_files(self.finder)\nFile \"/usr/lib/python2.7/dist-packages/pip/req/req_set.py\", line 360, in prepare_files\nignore_dependencies=self.ignore_dependencies))\nFile \"/usr/lib/python2.7/dist-packages/pip/req/req_set.py\", line 448, in _prepare_file\nreq_to_install, finder)\nFile \"/usr/lib/python2.7/dist-packages/pip/req/req_set.py\", line 387, in _check_skip_installed\nreq_to_install.check_if_exists()\nFile \"/usr/lib/python2.7/dist-packages/pip/req/req_install.py\", line 1011, in check_if_exists\nself.req.project_name\nAttributeError: 'Requirement' object has no attribute 'project_name'\nYou are using pip version 8.1.1, however version 8.1.2 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\nMitmproxy Version: 0.16\nOperating System:Ubuntu 16.04", "issue_status": "Closed", "issue_reporting_time": "2016-06-26T15:39:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1057": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1293", "issue_id": "#1293", "issue_summary": "Consider binding to localhost by default", "issue_description": "colemickens commented on 23 Jun 2016\nI think users might be surprised if their box starts running an open proxy by nature of running mitmproxy. I propose changing the default to act like mitmproxy -b 127.0.0.1 instead.\n3", "issue_status": "Closed", "issue_reporting_time": "2016-06-23T02:37:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1058": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1290", "issue_id": "#1290", "issue_summary": "Unknown hosts not ignored", "issue_description": "Kernald commented on 22 Jun 2016\nSteps to reproduce the problem:\nIgnore an host impossible to resolve with your current DNS server\nMake a request to this DNS name\nWhat is the expected behavior?\nThe request is ignored and not displayed\nWhat went wrong?\nThe request is displayed as failed: Server connection to rx-v579:80 failed: Error connecting to \"rx-v579\": [Errno 8] nodename nor servname provided, or not known\nAny other comments? What have you tried so far?\nI have an application on my Android phone making requests to my AVR. Which is not exposed outside of my LAN. When I'm at the office, I have requests to this domain all day long and can't ignore them.\nI tried to ignore rx-v579 and some regex variants, with no luck.\nMitmproxy Version: 0.17.1\nOperating System: OS X 10.11.4", "issue_status": "Closed", "issue_reporting_time": "2016-06-22T08:16:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1059": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1289", "issue_id": "#1289", "issue_summary": "How to run mitmdump/mitmproxy in background through terminal", "issue_description": "Aswini999 commented on 22 Jun 2016\nSteps to reproduce the problem:\nI'm using mitmproxy/mitmdump for http debugging and save responses as har file.\nI've used below command through terminal and it works fine\nmitmdump -b <host> -p <port> -s \"~/mitmproxy-0.17/examples/har_extractor.py ./result_file\"\nBut when I tried to run this background by using '&' at the end, command is working but file not saved.\nmitmdump -b <host> -p <port> -s \"~/mitmproxy-0.17/examples/har_extractor.py ./result_file\" &\nWhat is the expected behavior?\nI need to Start mitmproxy in background\nCapture the traffic\nSave as har file\nStop mitmproxy (Kill process)\nAnd I need to run these steps through ruby script. I'm calling shell commands in ruby script.\nWhat went wrong?\nNot able to save file when run in background.\nUnable to Kill process when run in foreground\nMitmproxy Version: mitmproxy 0.17\nOperating System: MAC OSX EI Capitan (10.11.2)", "issue_status": "Closed", "issue_reporting_time": "2016-06-22T08:13:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1060": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1288", "issue_id": "#1288", "issue_summary": "Python 3: Port mitmproxy.filt", "issue_description": "Member\nmhils commented on 22 Jun 2016\nmitmproxy.filt is one of the more tricky modules when it comes to porting. After discussing this briefly (https://mitmproxy.slack.com/archives/general/p1466578830000675), it looks like we want to match on bytes instead of unicode. The general battle plan looks as follows:\nIn mitmproxy.filt._Rex, convert to bytes in using escaped_str_to_bytes.\nConvert all filters to match on bytes instead of str. In most cases, this can be accomplished by using the HTTP message's .data, e.g. f.request.method -> f.request.data.method\nReplace _check_content_type with an implementation that manually iterates over headers.fields\nWrite weird tests involving bytes\n@dufferzafar, how does that sound?", "issue_status": "Closed", "issue_reporting_time": "2016-06-22T07:28:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1061": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1284", "issue_id": "#1284", "issue_summary": "mitmdump crash during server replay", "issue_description": "markus-kusano commented on 22 Jun 2016\ngtm2.zip\nSteps to reproduce the problem:\nUnzip recording: unzip gtm2.zip\nReplay the recording using --kill: mitmdump --no-pop --rheader Host --kill --server-replay ./gtm2.out\nGET the page in the recording: https://www.googletagmanager.com/gtm.js?id=GTM-K787WT\nWhat is the expected behavior?\nThe webpage loads (a javascript file is shown).\nWhat went wrong?\nmitmdump throws an exception:\n127.0.0.1:57022: clientconnect\n127.0.0.1 GET https://www.googletagmanager.com/gtm.js?id=GTM-K787WT HTTP/2.0\n << Connection killed\nException in thread Http2SingleStreamLayer-1:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"/home/markus/mitmproxy/mitmproxy/protocol/http2.py\", line 503, in run\n    self()\n  File \"/home/markus/mitmproxy/mitmproxy/protocol/http2.py\", line 509, in __call__\n    layer()\n  File \"/home/markus/mitmproxy/mitmproxy/protocol/http.py\", line 174, in __call__\n    self.process_request_hook(flow)\n  File \"/home/markus/mitmproxy/mitmproxy/protocol/http.py\", line 338, in process_request_hook\n    request_reply = self.channel.ask(\"request\", flow)\n  File \"/home/markus/mitmproxy/mitmproxy/controller.py\", line 139, in ask\n    raise exceptions.Kill()\nKill: None\nAny other comments? What have you tried so far?\nThe network connection in the browser hangs attempting to download the page. This causes the browser to never fully load the page.\nMitmproxy Version:\ncommit:\n7523f41\nOperating System: Ubuntu 14.04.4", "issue_status": "Closed", "issue_reporting_time": "2016-06-21T22:27:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1062": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1271", "issue_id": "#1271", "issue_summary": "Intermittent Travis failure", "issue_description": "Member\nmhils commented on 18 Jun 2016\nSteps to reproduce the problem:\nMake a commit\nObserve that Travis fails sometimes\nRebuild\nObserve that it succeeds sometimes\nWhat is the expected behavior?\nConsistent error results\nWhat went wrong?\nInconsistent error results.\nhttps://travis-ci.org/mitmproxy/mitmproxy/jobs/138529203", "issue_status": "Closed", "issue_reporting_time": "2016-06-18T05:02:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1063": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1265", "issue_id": "#1265", "issue_summary": "[meta] Handler Refactoring", "issue_description": "Member\nmhils commented on 17 Jun 2016\nUsing this issue to track everything that relates to @cortesi's current controller/handler refactoring.", "issue_status": "Closed", "issue_reporting_time": "2016-06-16T23:30:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1064": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1262", "issue_id": "#1262", "issue_summary": "Script hooks are not executed when reading flows.", "issue_description": "Member\nmhils commented on 16 Jun 2016\nSteps to reproduce the problem:\nmitmdump -r dump -s script\nWhat went wrong?\nOnly the request script hook is executed.\nAny other comments? What have you tried so far?\nThe problem is in FlowMaster.run_scripts, where we check for if not msg.reply.acked. If the first hook acks the request, things break.", "issue_status": "Closed", "issue_reporting_time": "2016-06-16T04:10:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1065": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1260", "issue_id": "#1260", "issue_summary": "encoding error : input conversion failed", "issue_description": "rsweerarathna commented on 15 Jun 2016\nHi,\nI'm using mitmdump -T with inline script and parallel decorator. It's printing frequent error on console as \"encoding error : input conversion failed due to input error, bytes 0x81 0x18 0x19 0xA0\"\nBut the proxy works as normal with high cpu utilization(more than 100%) when processing requests.\nAny idea what is it?", "issue_status": "Closed", "issue_reporting_time": "2016-06-15T14:59:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1066": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1249", "issue_id": "#1249", "issue_summary": ".", "issue_description": "xros commented on 13 Jun 2016 \u2022\nedited\n.", "issue_status": "Closed", "issue_reporting_time": "2016-06-13T14:54:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1067": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1248", "issue_id": "#1248", "issue_summary": "WindowsError: [Error 183] : 'D:\\\\code\\\\mitmproxy\\\\venv/tcl/tcl8.5'", "issue_description": "hhhaiai commented on 13 Jun 2016 \u2022\nedited by dufferzafar\nSteps to reproduce the problem:\nopen win 7 64bit cmd.exe\nneweast mitmporoxy\nrun dev.bat. happen error:\nTraceback (most recent call last):\n  File \"d:\\tools\\python27\\lib\\runpy.py\", line 162, in _run_module_as_main\n    \"__main__\", fname, loader, pkg_name)\n  File \"d:\\tools\\python27\\lib\\runpy.py\", line 72, in _run_code\n    exec code in run_globals\n  File \"D:\\tools\\Python27\\Scripts\\virtualenv.exe\\__main__.py\", line 9, in <module>\n  File \"d:\\tools\\python27\\lib\\site-packages\\virtualenv.py\", line 711, in main\n    symlink=options.symlink)\n  File \"d:\\tools\\python27\\lib\\site-packages\\virtualenv.py\", line 924, in create_environment\n    site_packages=site_packages, clear=clear, symlink=symlink))\n  File \"d:\\tools\\python27\\lib\\site-packages\\virtualenv.py\", line 1136, in install_python\n    copy_tcltk(prefix, home_dir, symlink)\n  File \"d:\\tools\\python27\\lib\\site-packages\\virtualenv.py\", line 1077, in copy_tcltk\n    copyfileordir(srcdir, dstdir, symlink)\n  File \"d:\\tools\\python27\\lib\\site-packages\\virtualenv.py\", line 327, in copyfileordir\n    shutil.copytree(src, dest, symlink)\n  File \"d:\\tools\\python27\\lib\\shutil.py\", line 177, in copytree\n    os.makedirs(dst)\n  File \"d:\\tools\\python27\\lib\\os.py\", line 157, in makedirs\n    mkdir(name, mode)\nWindowsError: [Error 183] : 'D:\\\\code\\\\mitmproxy\\\\venv/tcl/tcl8.5'\nWhat is the expected behavior?\nINSTALL mitmproxy on win7\nWhat went wrong?\nvenv.. tcl\nAny other comments? What have you tried so far?\nalready install ActiveTcl8.6.4.1.299124-win32-x86_64-threaded . Still can't run this command\u3002\nMitmproxy Version: master .. commit hash.. ccf4723\nOperating System: win7+cygwin", "issue_status": "Closed", "issue_reporting_time": "2016-06-13T12:05:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1068": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1240", "issue_id": "#1240", "issue_summary": "Http2SingleStreamLayer threads leak", "issue_description": "Member\ncortesi commented on 11 Jun 2016 \u2022\nedited\nSteps to reproduce the problem:\nrun a mitimdump with the new debug functionality that may or may not be merged by the time you look at this\nFire up a browser going through mitmdump, and visit our old nemesis: https://http2.akamai.com/demo\nExit the browser\nSend a SIGUSR1 to mitmdump to trigger debug output pkill -SIGUSR1 -f mitmdump\nWhat is the expected behavior?\nI expect no HTTP service threads to remain.\nWhat went wrong?\nMany HTTP service threads remain.\nThis may be related to #1148\nmitmdump --sysinfo\nMitmproxy verison: 0.18\nPython version: 2.7.11\nPlatform: Darwin-15.5.0-x86_64-i386-64bit\nMac version: 10.11.5 ('', '', '') x86_64", "issue_status": "Closed", "issue_reporting_time": "2016-06-11T09:03:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1069": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1234", "issue_id": "#1234", "issue_summary": "How to fix \"No Module Named libmproxy\"", "issue_description": "Member\nmhils commented on 9 Jun 2016\nIf you encounter a \"no module named libmproxy\" error, your code is probably based on an old version of mitmproxy. As mentioned in the CHANGELOG for mitmproxy 0.17, you now have to import from mitmproxy instead of libmproxy.\n(documenting this here as per https://twitter.com/botnet_hunter/status/740770513690230784)", "issue_status": "Closed", "issue_reporting_time": "2016-06-09T06:54:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1070": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1229", "issue_id": "#1229", "issue_summary": "mitmdump server playback exits prematurely", "issue_description": "lesterfisher commented on 8 Jun 2016\nSteps to reproduce the problem:\nType command \"mitmdump -w temp\" in console and then visit a HTTP website.\nClose capture.\nExecute \"mitmdump -S temp\" to replay.\nWhat is the expected behavior?\nServer-side replay should be performed.\nWhat went wrong?\nmitmdump hangs, no anything print out and also no crash.\nAny other comments? What have you tried so far?\nmitmdump have an alert like below, but I think it is not related to server side replay.\nI searched this issue but nothing found, seems no one report this issue before. I appreciate if you can give me any advice.\nlester@ubuntu:mitm$ mitmdump -S ./temp\nALPN support missing (OpenSSL 1.0.2+ required)!\nHTTP/2 is disabled. Use --no-http2 to silence this warning.\nMitmproxy Version: mitmdump 0.17\nOperating System: ubuntu 14.04 LTS 64-bit", "issue_status": "Closed", "issue_reporting_time": "2016-06-08T09:59:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1071": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1221", "issue_id": "#1221", "issue_summary": "pathoc -n seems broken", "issue_description": "Member\ncortesi commented on 7 Jun 2016\nSteps to reproduce the problem:\npathoc -n 2 google.com get:/\n07-06-16 12:22:24: >> 'GET':/\n<< 302 Found: 261 bytes\nWhat is the expected behavior?\nTwo requests printed.\nWhat went wrong?\nOnly one request is printed.\nMitmproxy Version: -master\nOperating System: osx", "issue_status": "Closed", "issue_reporting_time": "2016-06-07T00:23:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1072": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1217", "issue_id": "#1217", "issue_summary": "Windows Support", "issue_description": "exploitprotocol commented on 6 Jun 2016\nHi,\nIs there any plan for providing official support for windows ? I am aware that mitmdump works on windows. But i am more concerned about mitmproxy.\nI have seen your comment regarding ncurses being the main reason for not able to provide windows support, have u tried PDcurses ?.\nAlso i have seen other issues in which it is mentioned that mitmweb will be able to provide windows support although that is not officially released till now. Any plans regarding mitmweb ?\nIt would be really great to have mitmproxy on windows, also i would like to include mitmproxy in PentestBox once windows support is complete.\nKeep up the good work :)", "issue_status": "Closed", "issue_reporting_time": "2016-06-06T13:19:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1073": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1214", "issue_id": "#1214", "issue_summary": "Headers aren't always case insensitive", "issue_description": "Contributor\nredfast00 commented on 5 Jun 2016\nHeaders like Content-Length should preserve case after going trough mitmproxy, because some versions of PHP don't like lowercase headers (this is a server-side misimplementation of RFC 2616, but it would be nice if mitmproxy was able to handle this.).\nSteps to reproduce:\nCapture some traffic, replay it with mitmdump -nc capture_file. Everything works as intended.\nNow replay it, but use a script that replaces the request content. The Content-Length header get's changed to content-lenght.\nThe problem probably lies at netlib/http/message.py\nMitmproxy Version: latest", "issue_status": "Closed", "issue_reporting_time": "2016-06-05T16:52:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1074": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1207", "issue_id": "#1207", "issue_summary": "Travis test failure", "issue_description": "Member\nKriechi commented on 4 Jun 2016\nPython 2 on Travis just gave me this failure:\nhttps://travis-ci.org/mitmproxy/mitmproxy/jobs/135222429\n___________________________ TestApp.test_log_binary ____________________________\nself = <test_app.TestApp object at 0x7f54533baad0>\n    def test_log_binary(self):\n>       assert self.get(\"200:h@10b=@10b:da\")\ntest/pathod/test_app.py:36: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \ntest/pathod/tutils.py:105: in get\n    resp = c.request(\"get:/p/%s\" % urllib.quote(spec).encode(\"string_escape\"))\npathod/pathoc.py:456: in request\n    return self.http(r)\npathod/pathoc.py:430: in http\n    if resp:\npathod/log.py:56: in __exit__\n    six.reraise(exc_type, exc_value, traceback)\npathod/pathoc.py:418: in http\n    resp = self.protocol.read_response(self.rfile, treq(method=req[\"method\"].encode()))\nnetlib/http/http1/read.py:66: in read_response\n    response = read_response_head(rfile)\nnetlib/http/http1/read.py:94: in read_response_head\n    headers = _read_headers(rfile)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nrfile = <netlib.tcp.Reader object at 0x7f54533b7450>\n    def _read_headers(rfile):\n        \"\"\"\n            Read a set of headers.\n            Stop once a blank line is reached.\n\n            Returns:\n                A headers object\n\n            Raises:\n                exceptions.HttpSyntaxException\n        \"\"\"\n        ret = []\n        while True:\n            line = rfile.readline()\n            if not line or line == b\"\\r\\n\" or line == b\"\\n\":\n                break\n            if line[0] in b\" \\t\":\n                if not ret:\n                    raise exceptions.HttpSyntaxException(\"Invalid headers\")\n                # continued header\n                ret[-1] = (ret[-1][0], ret[-1][1] + b'\\r\\n ' + line.strip())\n            else:\n                try:\n                    name, value = line.split(b\":\", 1)\n                    value = value.strip()\n                    if not name:\n                        raise ValueError()\n                    ret.append((name, value))\n                except ValueError:\n>                   raise exceptions.HttpSyntaxException(\"Invalid headers\")\nE                   HttpSyntaxException: Invalid headers\nnetlib/http/http1/read.py:343: HttpSyntaxException\n/cc @cortesi", "issue_status": "Closed", "issue_reporting_time": "2016-06-04T09:31:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1075": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1205", "issue_id": "#1205", "issue_summary": "Crash after using newly created flow in mitmproxy console", "issue_description": "Member\ncortesi commented on 4 Jun 2016\nSteps to reproduce the problem:\nPress \"n\" to create a new flow\nPress \"r\" to replay it\nDelete the flow\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/console/__init__.py\", line 546, in run\n    self.loop.run()\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv/lib/python2.7/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv/lib/python2.7/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv/lib/python2.7/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv/lib/python2.7/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv/lib/python2.7/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/console/window.py\", line 42, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv/lib/python2.7/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/console/flowlist.py\", line 407, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/venv/lib/python2.7/site-packages/urwid/listbox.py\", line 987, in keypress\n    key = focus_widget.keypress((maxcol,),key)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/console/flowlist.py\", line 190, in keypress\n    self.flow.kill(self.master)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/models/flow.py\", line 158, in kill\n    self.reply(exceptions.Kill)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/mitmproxy/controller.py\", line 223, in __call__\n    raise exceptions.ControlException(\"Message already acked.\")\nControlException: Message already acked.\nMitmproxy Version: -master\nOperating System: osx", "issue_status": "Closed", "issue_reporting_time": "2016-06-04T03:49:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1076": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1204", "issue_id": "#1204", "issue_summary": "Read flows from stdin", "issue_description": "Contributor\nthiagoarrais commented on 4 Jun 2016\nAnyone interested on being able to read flows from stdin?\nI've tried the usual convention of using a single dash for the filename, but it didn't work. I'd expect mitmproxy -r /tmp/flows to be equivalent to cat /tmp/flows | mitmproxy -r -, but the latter blows up like this:\n$ cat /tmp/flows | mitmproxy -r -\n# ...\n  File \"/home/thiago/devel/mitmproxy/venv/lib/python2.7/site-packages/urwid/raw_display.py\", line 635, in _getch_nodelay\n    return self._getch(0)\n  File \"/home/thiago/devel/mitmproxy/venv/lib/python2.7/site-packages/urwid/raw_display.py\", line 545, in _getch\n    return ord(os.read(self._term_input_file.fileno(), 1))\nTypeError: ord() expected a character, but string of length 0 found\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n        https://github.com/mitmproxy/mitmproxy\nShutting down...\nI'm willing to try a PR if there's interest in this (and no obvious restriction, of course).", "issue_status": "Closed", "issue_reporting_time": "2016-06-03T21:50:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1077": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1196", "issue_id": "#1196", "issue_summary": "Installation problem", "issue_description": "MHova commented on 2 Jun 2016\nSteps to reproduce the problem:\nI'm trying to install mitmproxy for the first time. I'm following the instructions in the README. I get an error when executing dev.sh.\n./dev.sh\nCreating dev environment in venv using Python \nNew python executable in /home/michael/git/mitmproxy/venv/bin/python\nInstalling setuptools, pip, wheel...done.\nCommand \"/home/michael/git/mitmproxy/venv/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-6zqJFA/cffi/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-cxdZr7-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/michael/git/mitmproxy/venv/include/site/python2.7/cffi\" failed with error code 1 in /tmp/pip-build-6zqJFA/cffi/\nOperating System: Ubuntu 16.04\nPython version:\npython --version\nPython 2.7.11+\npip version:\npip --version\npip 8.1.2 from /usr/local/lib/python2.7/dist-packages (python 2.7)", "issue_status": "Closed", "issue_reporting_time": "2016-06-02T16:04:42Z", "fixed_by": "#1198", "pull_request_summary": "Add installation section to README", "pull_request_description": "Contributor\ns4chin commented on 2 Jun 2016 \u2022\nedited by Kriechi\nFeel free to not merge. I thought there should at least be a link to the installation instructions to stop issues like #1196.\nfixes #1196", "pull_request_status": "Merged", "issue_fixed_time": "2016-06-02T18:06:24Z", "files_changed": [["7", "README.rst"]]}, "1078": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1193", "issue_id": "#1193", "issue_summary": "Intermittent test exception: http2", "issue_description": "Member\ncortesi commented on 2 Jun 2016\nSteps to reproduce the problem:\nRebuild on travis\nWhat is the expected behavior?\nNo errors!\nWhat went wrong?\nVery occasionally, we observe this exception in test output, though no tests fail:\n  File \"/usr/local/Cellar/python/2.7.11/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\n    self.run()\n  File \"/Users/travis/build/mitmproxy/mitmproxy/mitmproxy/protocol/http2.py\", line 445, in run\n    self()\n  File \"/Users/travis/build/mitmproxy/mitmproxy/mitmproxy/protocol/http2.py\", line 451, in __call__\n    layer()\n  File \"/Users/travis/build/mitmproxy/mitmproxy/mitmproxy/protocol/http.py\", line 185, in __call__\n    flow = self.channel.ask(\"response\", flow)\n  File \"/Users/travis/build/mitmproxy/mitmproxy/mitmproxy/controller.py\", line 137, in ask\n    raise exceptions.Kill()\nKill: None\nAny other comments? What have you tried so far?\nMitmproxy Version: -master\nOperating System: I see this in the xdcode travis builds", "issue_status": "Closed", "issue_reporting_time": "2016-06-02T05:10:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1079": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1188", "issue_id": "#1188", "issue_summary": "mitmdump crashes when serving mitm.it", "issue_description": "dniku commented on 1 Jun 2016 \u2022\nedited\nTraceback (most recent call last):\n  File \"/mnt/storage/mitm/mitmproxy/venv/bin/mitmdump\", line 9, in <module>\n    load_entry_point('mitmproxy', 'console_scripts', 'mitmdump')()\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/main.py\", line 100, in mitmdump\n    master.run()\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/dump.py\", line 355, in run\n    super(DumpMaster, self).run()\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/controller.py\", line 61, in run\n    self.tick(0.1)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/flow/master.py\", line 228, in tick\n    return super(FlowMaster, self).tick(timeout)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/controller.py\", line 83, in tick\n    handle_func(obj)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/controller.py\", line 190, in wrapper\n    ret = f(*args, **kwargs)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/dump.py\", line 331, in request\n    self.state.delete_flow(f)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/flow/state.py\", line 220, in delete_flow\n    self.flows._remove(f)\n  File \"/mnt/storage/mitm/mitmproxy/mitmproxy/flow/state.py\", line 132, in _remove\n    self._list.remove(f)\nException ValueError: list.remove(x): x not in list\nmitmproxy.exceptions.ControlException: ControlException('Un-acked message',) in <bound method Reply.__del__ of <mitmproxy.controller.Reply object at 0x957c4f30>> ignored\nSteps to reproduce the problem:\nLaunch mitmdump, commit 92cdca5\nGo to mitm.it with the stock browser of Android 6.\nNote: mitmproxy does not crash.\nMitmproxy Version: 92cdca5\nOperating System: Debian Jessie ARM", "issue_status": "Closed", "issue_reporting_time": "2016-06-01T14:50:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1080": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1187", "issue_id": "#1187", "issue_summary": "When Export Python Code,if contains Boolean Value ,such as 'fasle',the export code is wrong.", "issue_description": "wcc526 commented on 1 Jun 2016\nSteps to reproduce the problem:\ncurl -v -X POST --data \"@data.json\" http://example.com -x 127.0.0.1:8080\nthe data.json is like this,\n{\n \"abc\": false,\n}\nExport python code\nthe python code is like this\njson = {\n\"abc\": false,\n}\n\nresponse = requests.request(\nmethod='POST',\nurl=url,\nheaders=headers,\njson=json,\n)\n\nprint(response.text)\nWhat is the expected behavior?\njson = {\n    \"abc\": 'false',\n}\n\nresponse = requests.request(\n    method='POST',\n    url=url,\n    headers=headers,\n    json=json,\n)\n\nprint(response.text)\nWhat went wrong?\nMaybe the export code has bug\nAny other comments? What have you tried so far?\nMitmproxy Version:\nOperating System:", "issue_status": "Closed", "issue_reporting_time": "2016-06-01T12:28:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1081": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1186", "issue_id": "#1186", "issue_summary": "Intermittent Travis failure", "issue_description": "Member\ncortesi commented on 1 Jun 2016\nSteps to reproduce the problem:\nMake a commit\nObserve that Travis fails sometimes\nRebuild\nObserve that it succeeds sometimes\nWhat is the expected behavior?\nConsistent error results\nWhat went wrong?\nInconsistent error results\nMitmproxy Version: -master\nOperating System: I've only seen it affect the Xcode 7.1 build", "issue_status": "Closed", "issue_reporting_time": "2016-06-01T05:38:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1082": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1185", "issue_id": "#1185", "issue_summary": "Body editing broken on master", "issue_description": "Member\ncortesi commented on 1 Jun 2016\nSteps to reproduce the problem:\nFire up mitmproxy\nEdit a request or response body\nWhat is the expected behavior?\nThe edit should be reflected in the flow display\nWhat went wrong?\nThe edit is not visible\nMitmproxy Version: -master\nOperating System: osx", "issue_status": "Closed", "issue_reporting_time": "2016-06-01T04:51:09Z", "fixed_by": "#1399", "pull_request_summary": "Fix content view cache invalidation", "pull_request_description": "Member\nmhils commented on 22 Jul 2016\nThis PR fixes #1185.\nnetlib.http.Message and netlib.multidict.MultiDict should not be hashable as they are mutable, so I removed that part.", "pull_request_status": "Merged", "issue_fixed_time": "2016-07-22T03:10:06Z", "files_changed": [["14", "mitmproxy/console/flowview.py"], ["6", "netlib/http/message.py"], ["6", "netlib/multidict.py"], ["4", "test/netlib/http/test_message.py"], ["14", "test/netlib/test_multidict.py"]]}, "1083": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1184", "issue_id": "#1184", "issue_summary": "shields.io gives weird pypi results", "issue_description": "Member\ncortesi commented on 1 Jun 2016\nCurrently, I see this:\nThe corresponding images for per day shows 0 downloads, and per week says 12. I can't make this make sense in any way. Maybe it's being screwed up because it's the 1st of the month? Are wildly inaccurate download stats better than none? Discuss.", "issue_status": "Closed", "issue_reporting_time": "2016-06-01T04:46:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1084": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1163", "issue_id": "#1163", "issue_summary": "How to set transparent proxy?", "issue_description": "mutepigz commented on 21 May 2016\nSteps to reproduce the problem:\nsysctl -w net.ipv4.ip_forward=1\niptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080\nmitmproxy -T \u2013host\n4.visit a website with shadowsocks\nWhat is the expected behavior?\ni can view the website\nWhat went wrong?\ni can't view the website,and my browser download the page\nAny other comments? What have you tried so far?\nMitmproxy Version:0.81\nOperating System:Ubuntu", "issue_status": "Closed", "issue_reporting_time": "2016-05-21T10:25:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1085": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1162", "issue_id": "#1162", "issue_summary": "Intermittent Travis failure", "issue_description": "Member\ncortesi commented on 21 May 2016 \u2022\nedited\nSteps to reproduce the problem:\nCommit something\nWatch Travis build, and fail one time out of 5\nRerun the build manually on the same commit. Watch Travis succeed 4 times out of 5.\nWhat is the expected behavior?\nTravis should consistently succeed.\nWhat went wrong?\nWe see the following, sometimes, for the OSX test suite:\n=================================== FAILURES ===================================\n___________________ TestConnectionLost.test_connection_lost ____________________\nself = <test.mitmproxy.test_protocol_http2.TestConnectionLost object at 0x111717450>\n    def test_connection_lost(self):\n        client, h2_conn = self._setup_connection()\n\n        self._send_request(client.wfile, h2_conn, stream_id=1, headers=[\n            (':authority', \"127.0.0.1:%s\" % self.server.server.address.port),\n            (':method', 'GET'),\n            (':scheme', 'https'),\n            (':path', '/'),\n            ('foo', 'bar')\n        ])\n\n        done = False\n        ended_streams = 0\n        pushed_streams = 0\n        responses = 0\n        while not done:\n            try:\n                raw = b''.join(http2_read_raw_frame(client.rfile))\n                events = h2_conn.receive_data(raw)\n            except:0m\n                break\n>           client.wfile.write(h2_conn.data_to_send())\ntest/mitmproxy/test_protocol_http2.py:480: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nself = <netlib.tcp.Writer object at 0x111f25310>\nv = '\\x00\\x00\\x00\\x04\\x01\\x00\\x00\\x00\\x00'\n    def write(self, v):\n        \"\"\"\n                May raise TcpDisconnect\n            \"\"\"\n        if v:\n            self.first_byte_timestamp = self.first_byte_timestamp or time.time()\n            try:\n                if hasattr(self.o, \"sendall\"):\n                    self.add_log(v)\n                    return self.o.sendall(v)\n                else:\n                    r = self.o.write(v)\n                    self.add_log(v[:r])\n                    return r\n            except (SSL.Error, socket.error) as e:\n>               raise TcpDisconnect(str(e))\nE               TcpDisconnect: (32, 'EPIPE')\nnetlib/tcp.py:187: TcpDisconnect", "issue_status": "Closed", "issue_reporting_time": "2016-05-21T03:11:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1086": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1161", "issue_id": "#1161", "issue_summary": "mitmproxy fails on Akamai HTTP2 demo", "issue_description": "Member\ncortesi commented on 21 May 2016\nSteps to reproduce the problem:\nVisit https://http2.akamai.com/demo\nWhat is the expected behavior?\nAll HTTP2 loaded images should load.\nWhat went wrong?\nSome HTTP2 images load, but most don't\nMitmproxy Version: -master\nOperating System: OSX", "issue_status": "Closed", "issue_reporting_time": "2016-05-21T00:03:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1087": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1159", "issue_id": "#1159", "issue_summary": "Remove ODict", "issue_description": "Member\nmhils commented on 20 May 2016\n#1151 replaced most usages of netlib.ODict with our new MultiDict. We should replace the remaining few occurences with ODict as well, so that we can remove ODict entirely.\nAny help with this would be greatly appreciated. Just ping me on Slack if you have any questions!", "issue_status": "Closed", "issue_reporting_time": "2016-05-20T18:11:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1088": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1158", "issue_id": "#1158", "issue_summary": "netlib.http.Response vs mitmproxy.models.HTTPResponse", "issue_description": "arnau commented on 20 May 2016\nA bit of context: I got here when migrating from 0.15 to 0.17. I was trying to import mitmproxy.models from a non-inline script and then import this in my actual inline script. I did work with 0.15's libmproxy.models but not with the new structure.\nThis unexpected situation made me find the following comment in\nmitmproxy/mitmproxy/models/http.py\nLine 28 in bb4f961\n     A mitmproxy HTTP request. \n:\nA mitmproxy HTTP request.\nThis is a very thin wrapper on top of :py:class:netlib.http.Request and\nmay be removed in the future.\nSo I tried to use netlib.http.Request instead which works with my import chain but the following happens which is an unexpected outcome for me.\nSteps to reproduce the problem:\n(1). Create the following inline script a.py and run mitmdump --script a.py.\n# a.py\nfrom mitmproxy.models import Headers, HTTPResponse\n\ndef request(context, flow):\n    flow.reply(HTTPResponse(\"HTTP/1.1\", 204, \"foo\", Headers(), \"\"))\n(2). Then make a proxied request (it is intended the requested service on localhost:8000 is not available):\ncurl -I --proxy http://localhost:8080 -XGET http://localhost:8000\n(3). Response:\nHTTP/1.1 204 foo\n(4). Create the following inline script b.py and run mitmdump --script b.py.\n# b.py\nfrom netlib.http import Headers, Response\ndef request(context, flow):\n    flow.reply(Response(\"HTTP/1.1\", 204, \"foo\", Headers(), \"\"))\n(5). Then make a proxied request (it is intended the requested service on localhost:8000 is not available):\ncurl -I --proxy http://localhost:8080 -XGET http://localhost:8000\n(6). Response:\nHTTP/1.1 502 Bad Gateway\nContent-Length: 262\nContent-Type: text/html\nConnection: close\nServer: netlib 0.17\nWhat is the expected behavior?\nI expected mitmproxy.models.HTTPResponse and netlib.http.Response to behave in a similar way. Ideally both like mitmproxy.models.HTTPResponse so I can mock responses to non-existing services.\nThanks!\nMitmproxy Version: 0.17\nOperating System: OSX 10.11.4\nPython: 2.7.11", "issue_status": "Closed", "issue_reporting_time": "2016-05-20T11:47:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1089": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1157", "issue_id": "#1157", "issue_summary": "docker run with mitmproxy is finicky", "issue_description": "Member\ncortesi commented on 20 May 2016 \u2022\nedited by mhils\nSteps to reproduce the problem:\ndocker run mitmproxy/mitmproxy:dev\ndocker run -i mitmproy/mitmproxy:dev\nWhat is the expected behavior?\nThe user should see some reasonable error output in both cases - when we attempt to run in a non-terminal, and when we're running in both a non-termina and non-interactively.\nWhat went wrong?\nWe see a crash in case 1) and an unresponsive screen in case 2.", "issue_status": "Closed", "issue_reporting_time": "2016-05-20T03:38:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1090": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1156", "issue_id": "#1156", "issue_summary": "How to set transparent proxy?", "issue_description": "mutepigz commented on 20 May 2016\nHow to set transparent proxy?\nMitmproxy Version: 0.18\nOperating System: centos", "issue_status": "Closed", "issue_reporting_time": "2016-05-20T01:03:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1091": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1154", "issue_id": "#1154", "issue_summary": "Cannot add response from UI", "issue_description": "Member\nmhils commented on 19 May 2016\nSteps to reproduce the problem:\nmitmproxy -n\nCreate new request (n, g, enter)\nTab to the response.\nPress e.\nWhat is the expected behavior?\nAs per the UI:\nNo response. Press e and edit any aspect to add one.\nWhat went wrong?\nNothing happens.\nMitmproxy Version: master\nOperating System: Win 10 x64", "issue_status": "Closed", "issue_reporting_time": "2016-05-19T05:36:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1092": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1153", "issue_id": "#1153", "issue_summary": "how to save http request to a file?", "issue_description": "leveryd commented on 19 May 2016 \u2022\nedited by mhils\nI know \"mitmdump -w filename\",it can save traffic to \"filename\" file.BUT i want to save data like:\nGET / HTTP/1.1\nHOST: XX.COM\nI can use other tool to handle such file.now i do some job below:\nrequest=flow.request\nif len(request.headers['cookie'])>0:\n                                        cookie=request.headers['cookie'][0]\n                                if len(request.headers['referer'])>0:\n                                        referer=request.headers['referer'][0]\n                                args = {'args': [request.url,cookie,referer,\"mitm-test-for-get\"]}\nis there more avaliable solution?", "issue_status": "Closed", "issue_reporting_time": "2016-05-19T03:49:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1093": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1149", "issue_id": "#1149", "issue_summary": "mitmproxy display \"\\t\" as \"?\"", "issue_description": "hexucheng commented on 17 May 2016\nSteps to reproduce the problem:\nMy request's ua has \"\\t\" and mitmproxy display it as \"?\".\nWhat is the expected behavior?\nNormally \"\\t\" display as blank, like fiddler and charles.\nWhat went wrong?\nAny other comments?\nMitmproxy Version:0.17.1\nOperating System:OS X 10.11.4", "issue_status": "Closed", "issue_reporting_time": "2016-05-17T14:04:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1094": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1148", "issue_id": "#1148", "issue_summary": "error: can't start new thread", "issue_description": "dniku commented on 16 May 2016 \u2022\nedited\nAfter running for a while, mitmdump filled the terminal with messages like this one:\n----------------------------------------\nError in processing of request from <ip address>:<port>\nTraceback (most recent call last):\n  File \"/full/path/to/repo/mitmproxy/netlib/tcp.py\", line 883, in serve_forever\n    t.start()\n  File \"/usr/lib/python2.7/threading.py\", line 745, in start\n    _start_new_thread(self.__bootstrap, ())\nerror: can't start new thread\n\n----------------------------------------\nThe command to execute mitmdump was:\nmitmdump -w mitm_$(date +%Y-%m-%d_%H-%M-%S) --ignore '^(?!.*keyword)' '~d .*keyword.*'\nSteps to reproduce the problem:\nNo idea. This is the first time it happened.\n$ mitmproxy --sysinfo\nMitmproxy version: 0.18 // actually, commit 8489c01\nPython version: 2.7.9\nPlatform: Linux-3.10.80-armv7l-with-debian-stretch-sid\nSSL version: OpenSSL 1.0.2d 9 Jul 2015\nLinux distro: debian stretch/sid", "issue_status": "Closed", "issue_reporting_time": "2016-05-16T12:45:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1095": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1147", "issue_id": "#1147", "issue_summary": "Response streaming does not work in replay mode", "issue_description": "ghost commented on 15 May 2016 \u2022\nedited by ghost\nWhat's the problem?\nWhile testing mitmdump replay I see that it consumes multiple GB of RAM and multiple GB of data went through the network. Because mitmdump eats up all physical memory as well as nearly all memory of swap the system was nearly dead. The client could not load a lot of the test pages.\nFriendly killing mitmdump was not successful for more than 20 minutes and in the log files I could see crash reports.\nAfter some search it seems that my client start download of several big files, many of them are bigger than one GB, but abort it after less than two MB.\nSteps to reproduce the problem:\nstart mitmdump in transparent proxy mode, SSL and --no-pop\nstart on the client a big download like Linux DVD\nabort download\nwatch mitmdump downloading the whole file for the next minutes or hours and eating up memory\nWhat is the expected behaviour?\nThe client disconnect and thus does not need the information any more. Therefore mitmdump should abort the download. Additionally for me it seems to be a good idea to not load big files completely into the memory.\nWhat went wrong?\nOne of my test pages contains JavaScript/links to movies. These mp4 files are mostly bigger than one GB bur some of them are only about 500 MB. It seems that Internet Explorer peek into these files. I could not see Firefox doing this. As a result of the behaviour of the Internet Explorer mitmdump tried to download all these files completely and dumping them in the memory. But the sum of all of these files are more than the memory of machine mitmdump is running on. Thus the system slows down a lot and mitmdump is not able to replay other sites.\nWith this behaviour it is easy for a client to do a denial of service attack against mitmdump, even though it is not the intention of the client.\nWhat is an example of the crash log?\nFor me it seems that mitmdump finished a 'smaller' download and then tries to send it to the client which disconnected minutes ago.\nHere is an example:\n  << 200 OK 692.45MB\n\n Error in processing of request from 192.168.*.*:50000\n Traceback (most recent call last):\n   File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 854, in connection_thread\n     self.handle_client_connection(connection, client_address)\n   File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/proxy/server.py\", line 62, in handle_client_connection\n     self.channel\n   File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/proxy/server.py\", line 75, in __init__\n     None)\n   File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/models/connections.py\", line 17, in __init__\n     super(ClientConnection, self).__init__(client_connection, address, server)\n   File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 734, in __init__\n     super(BaseHandler, self).__init__(connection)\n   File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 461, in __init__\n     self.peer_address = Address(connection.getpeername())\n   File \"/usr/lib/python2.7/socket.py\", line 228, in meth\n     return getattr(self._sock,name)(*args)\n error: [Errno 107] Transport endpoint is not connected\n\n ----------------------------------------\n Traceback (most recent call last):\n   File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/proxy/server.py\", line 121, in handle\n     root_layer()\n   File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/proxy/modes/transparent_proxy.py\", line 22, in __call__\n     layer()\n   File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/tls.py\", line 358, in __call__\n     layer()\n   File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http1.py\", line 67, in __call__\n     layer()\n   File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 204, in __call__\n     self.send_response_to_client(flow)\n   File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 270, in send_response_to_client\n     if not flow.response.stream:\n AttributeError: 'NoneType' object has no attribute 'response'\n\n mitmproxy has crashed!\n Please lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nAny other comments?\nI am aware of different reports like #1081 and I tried the --stream option. The result was that most sites in the dump could not be replayed. For example amazon was only a white page with favicon. The last one was not replayed but loaded from the internet. Other sites like weather.com could not be loaded at all. Internet Explorer complained about being unable to load that site and I should check if the address is spelled correctly.\nI am also aware of other reports like #1036 #1029 and #1095 but I was not able to find a solution. Maybe with the SQL mitmdump will not eat up all memory. But this will not prevent mitmdump from wasting time to download unnecessary files or prevent --stream from destroying replays.\nMitmproxy Version: 0.17\nOperating System: Kali Linux Rolling (2016.1) 64 Bit and Windows 7 64 Bit", "issue_status": "Closed", "issue_reporting_time": "2016-05-15T07:07:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1096": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1146", "issue_id": "#1146", "issue_summary": "Help: Proxy traffic from localhost:<port> and passing through to <remote_ip>:<their_port>", "issue_description": "rafajafar commented on 15 May 2016 \u2022\nedited by mhils\nI popped in IRC and dwfreed said this was the place to post this question.\nI created code which sets up a proxy each time it runs. This proxy delegates information from selenium (for firefox browser testing) to the proxy over localhost: and sends the request. This worked! It went great. However, I have gotten a new requirement. I need to be able to send this request as follows:\nSelenium -> local proxy : some port -> username:password@remote proxy : some port\nHere is my trimmed-down code for that: https://gist.github.com/rafajafar/945b2fe9e0d0c58281ebc20d7461879a\nYou can see line 63 of \"selenium_proxy.py\" has mode=upstream set. I had to implement this fix manually to make this work:\n02ba76e\nAs this fix is not in the current release on pip.\nIn this script I actually one once without the proxy first and then create the proxy on the fly, then run again with the proxy on the same url.\nNow I am getting the following errors on the url-with-the-proxy step:\n> Traceback (most recent call last):\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n>     root_layer()\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 25, in __call__\n>     layer()\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 358, in __call__\n>     layer()\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/mitmproxy/protocol/http1.py\", line 67, in __call__\n>     layer()\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 192, in __call__\n>     self.get_response_from_server(flow)\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 294, in get_response_from_server\n>     get_response()\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 290, in get_response\n>     self.send_request(flow.request)\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/mitmproxy/protocol/http1.py\", line 25, in send_request\n>     self.server_conn.wfile.write(http1.assemble_request(request))\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/netlib/http/http1/assemble.py\", line 10, in assemble_request\n>     head = assemble_request_head(request)\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/netlib/http/http1/assemble.py\", line 17, in assemble_request_head\n>     headers = _assemble_request_headers(request.data)\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/netlib/http/http1/assemble.py\", line 83, in _assemble_request_headers\n>     headers = request_data.headers.copy()\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/netlib/utils.py\", line 45, in copy\n>     return self.from_state(self.get_state())\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/netlib/http/headers.py\", line 203, in from_state\n>     return cls([list(field) for field in state])\n>   File \"/home/ccusce/dev/selenium_src/seleniumenv/local/lib/python2.7/site-packages/netlib/http/headers.py\", line 96, in __init__\n>     raise ValueError(\"Headers passed as fields must be bytes.\")\n> ValueError: Headers passed as fields must be bytes.\nI'm not sure how to grok this but I'm super under the gun and need help.\nAlso quick question: Assuming I can manage unique ports to prevent conflicts, can I create multiple instances of SeleniumProxy (as seen in my code) to run in multiple threads or is there one flowmaster this way the same way there is one flow master in the CLI for mitmproxy ?\nThanks much, this last minute customer request is killing me, but they have a hard deadline of Monday.", "issue_status": "Closed", "issue_reporting_time": "2016-05-14T20:08:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1097": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1145", "issue_id": "#1145", "issue_summary": "No matter which ignore filters are set, \"iosapps.itunes.apple.com\" always gets through.", "issue_description": "TheDumpap commented on 14 May 2016\nSteps to reproduce the problem:\nConnect iPhone to the MITMPROXY\nWatch the MITMPROXY while iPhone is either on homescreen or in apps\nThere is a HUGE amount of logs about \"iosapps.itunes.apple.com\", and no ignore filters will ignore it. All the requests are GET requests.\nAfter a while with the iPhone connected (10-15s of being on the homescreen), the MITMPROXY gets \"killed\", and shuts down.\nWhat is the expected behavior?\nFollowing the ignore filter, or atleast not shutting down because of the large amount of traffic.\nWhat went wrong?\nThe proxy shuts down after an iPhone connects to it, since there is a huge amount of GET requests to iosapps.itunes.apple.com\nAny other comments?\nI actually don't care about the logs, I just don't want the proxy to close at all.\nIt doesn't matter if I use mitmdump or mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2016-05-14T16:13:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1098": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1143", "issue_id": "#1143", "issue_summary": "Set-cookie headers are getting folded on HTTP2", "issue_description": "Contributor\nKostyaEsmukov commented on 14 May 2016\nSteps to reproduce the problem:\n>>> from netlib.http.headers import Headers\n>>> h = Headers([['set-cookie', 'fdf'], ['set-cookie', 'htyy']])\n>>> h.items()\n[('set-cookie', 'fdf, htyy')]\nWhat is the expected behavior?\n>>> from netlib.http.headers import Headers\n>>> h = Headers([['set-cookie', 'fdf'], ['set-cookie', 'htyy']])\n>>> h.items()\n[('set-cookie', 'fdf'),('set-cookie', 'htyy')]\nWhat went wrong?\nTake a look here: https://github.com/python-hyper/hyper-h2/blob/b2cbb2f1862ee3cab58f88aee92c0414ec67f4e5/h2/stream.py#L734\n.items() method is called on headers, thus set-cookie headers are getting folded on HTTP2.\nMitmproxy Version: mitmproxy==0.17", "issue_status": "Closed", "issue_reporting_time": "2016-05-14T11:23:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1099": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1142", "issue_id": "#1142", "issue_summary": "Build from Dockerfile", "issue_description": "Cphilo commented on 14 May 2016 \u2022\nedited\nSteps to reproduce the problem:\nbuild image from Dockerfile\nrun mitmproxy/base:latest-onbuild image\ndocker attach to the docker container\nWhat is the expected behavior?\ncan ssh to the running container.\nWhat went wrong?\nwith docker ps -a, the running container exited and can not connect it.\nAny other comments?\nMitmproxy Version: lastest master branch\nOperating System: mac_osx 10.11.1", "issue_status": "Closed", "issue_reporting_time": "2016-05-14T07:14:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1100": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1140", "issue_id": "#1140", "issue_summary": "Move upstream proxy authentication out of protocol layer", "issue_description": "Member\nmhils commented on 13 May 2016\nThe upstream proxy authentication header is currently set in mitmproxy/protocol/http.py. Conceptually, this should be done in the FlowMaster.\n(This issue isn't very sexy, but you get a good idea of how mitmproxy works internally. Please ping me on Slack if you are interested in picking this up )", "issue_status": "Closed", "issue_reporting_time": "2016-05-13T03:05:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1101": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1138", "issue_id": "#1138", "issue_summary": "CONNECT inside an HTTP2 stream is not supported", "issue_description": "stevesbrain commented on 12 May 2016 \u2022\nedited\nSteps to reproduce the problem:\nUsing Chrome, with HTTP(S) proxy set to mitmproxy, browse to Gmail for business (already logged in - may also work on personal gmail, but don't have one). This triggers one crash\nOnce loaded, if you open an email, this triggers a separate error\nWhat is the expected behavior?\nPresumably, not to crash. Haven't used mitmproxy long enough to determine if this is expected behaviour with Gmail or not.\nWhat went wrong?\nThe error message was observed. Gmail still useable. Hangouts however will not load on a fresh session. If hangouts was loaded before proxying, it continues to work.\nAny other comments?\nEmails may trigger this same response because Hangouts/Google Plus info is loaded on the right hand side - this may be the section that's triggering this. Error messages received are as below:\nBrowsing into email on existing session:\nTraceback (most recent call last):de an HTTP2 stream is not supported.\")ions.\")\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handlell__\n    root_layer()rce_conn.h2.receive_data(raw_frame)tmproxy/mitmproxy\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 11, in __call__\n    layer()me in self.incoming_buffer:\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 358, in __call__\n    layer()f._update_header_buffer(f)\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http1.py\", line 67, in __call__uffer\n    layer()eaders_buffer.append(f)\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 171, in __call__\n    self.handle_regular_mode_connect(request)\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 263, in handle_regular_mode_connect\n    layer()e a bug report at: https://github.com/mitmproxy/mitmproxy\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 358, in __call__\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http2.py\", line 234, in __call__\n    events = source_conn.h2.receive_data(raw_frame)\n  File \"/usr/lib/python2.7/site-packages/h2/connection.py\", line 1142, in receive_data\n    for frame in self.incoming_buffer:\n  File \"/usr/lib/python2.7/site-packages/h2/frame_buffer.py\", line 172, in next\n    f = self._update_header_buffer(f)\n  File \"/usr/lib/python2.7/site-packages/h2/frame_buffer.py\", line 131, in _update_header_buffer\n    self._headers_buffer.append(f)\nAttributeError: 'NoneType' object has no attribute 'append'\n[614/836]                                                                                                                                                                                                                                                  ?:help q:back [*:8080]\nmitmproxy has crashed!read-411:\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\n    self.run()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http2.py\", line 422, in run\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 191, in __call__\n    self.establish_server_connection(flow)\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 371, in establish_server_connection\n    self.connect()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http2.py\", line 414, in connect\n    raise ValueError(\"CONNECT inside an HTTP2 stream is not supported.\")\nValueError: CONNECT inside an HTTP2 stream is not supported.\n[614/1060]                                                                                                                                                                                                                                                 ?:help q:back [*:8080]Traceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 11, in __call__\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 358, in __call__\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http1.py\", line 67, in __call__\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 171, in __call__\n    self.handle_regular_mode_connect(request)\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 263, in handle_regular_mode_connect\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 358, in __call__\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http2.py\", line 234, in __call__\n    events = source_conn.h2.receive_data(raw_frame)\n  File \"/usr/lib/python2.7/site-packages/h2/connection.py\", line 1142, in receive_data\n    for frame in self.incoming_buffer:\n  File \"/usr/lib/python2.7/site-packages/h2/frame_buffer.py\", line 172, in next\n    f = self._update_header_buffer(f)\n  File \"/usr/lib/python2.7/site-packages/h2/frame_buffer.py\", line 131, in _update_header_buffer\n    self._headers_buffer.append(f)\n[614/1068]                                                                                                                                                                                                                                                 ?:help q:back [*:8080]Exception in thread Thread-621:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 801, in __bootstrap_inner\n    self.run()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http2.py\", line 422, in run\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 191, in __call__\n    self.establish_server_connection(flow)\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 371, in establish_server_connection\n    self.connect()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http2.py\", line 414, in connect\n    raise ValueError(\"CONNECT inside an HTTP2 stream is not supported.\")\nValueError: CONNECT inside an HTTP2 stream is not supported.\nFresh loading page when already logged in:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 11, in __call__\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 358, in __call__\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http1.py\", line 67, in __call__\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 171, in __call__\n    self.handle_regular_mode_connect(request)\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 263, in handle_regular_mode_connect\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 358, in __call__\n    layer()\n  File \"/usr/lib/python2.7/site-packages/mitmproxy/protocol/http2.py\", line 234, in __call__\n    events = source_conn.h2.receive_data(raw_frame)\n  File \"/usr/lib/python2.7/site-packages/h2/connection.py\", line 1142, in receive_data\n    for frame in self.incoming_buffer:\n  File \"/usr/lib/python2.7/site-packages/h2/frame_buffer.py\", line 172, in next\n    f = self._update_header_buffer(f)\n  File \"/usr/lib/python2.7/site-packages/h2/frame_buffer.py\", line 131, in _update_header_buffer\n    self._headers_buffer.append(f)\nAttributeError: 'NoneType' object has no attribute 'append'\n\nmitmproxy has crashed!\nMitmproxy Version: 0.17\nOperating System: Arch Linux (up to date as of posting this information) Linux HOSTNAME 4.5.3-1-ARCH #1 SMP PREEMPT Sat May 7 20:43:57 CEST 2016 x86_64 GNU/Linux", "issue_status": "Closed", "issue_reporting_time": "2016-05-12T04:37:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1102": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1131", "issue_id": "#1131", "issue_summary": "Some devices not working properly with mitmproxy", "issue_description": "mortenmoulder commented on 11 May 2016\nSteps to reproduce the problem:\nStart mitmproxy with --htpasswd so users can authenticate\nEnter the proxy and authentication details on the phone\nBrowse around and get HTTP requests logged in the GUI\nWhat is the expected behavior?\nExpected behavior is every phone should get the requests logged. And when I say logged, I simply mean showing the status code, showing the URL, showing all that good stuff basically. What mitmproxy GUI is made for.\nWhat went wrong?\nSome devices connect fine, but the data is not being logged in certain applications. Browsers seem to work fine, but other applications does not work on all phones (even though they're the exact same version across all devices).\nAny other comments?\nI have a suspicion, that the proxy settings (when applied to the WiFi network), does not have \"permission\" to change the proxy settings for the whole device. Maybe some applications are whitelisted (like Safari, Google Chrome, etc.).\nThis was tested on various iPhones and Android devices running different ROMs and manufacturers.\nCheck my StackOverflow question for a more in-depth version: http://stackoverflow.com/questions/37154922/mitmproxy-htpasswd-doesnt-work-for-most-people\nMitmproxy Version: 0.18\nOperating System: Debian 8.4 or Debian 8.3 (tried both)", "issue_status": "Closed", "issue_reporting_time": "2016-05-11T14:18:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1103": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1129", "issue_id": "#1129", "issue_summary": "mitmproxy doesn't work on android.clients.google.com", "issue_description": "jkryanchou commented on 11 May 2016\nSteps to reproduce the problem:\nStart mitmproxy --port 8080 on my laptop to listen https requests from my Android device.\nOpen google play app on my Android device which was set the proxy to my laptop. thru \"Modify Network\" options\nThe Google Play App could not work well thru the proxy.\nWhat is the expected behavior?\nI used the mitmproxy to listen the other mobile apps https requests normally while when I try to intercept the Google Play Store https request. It doesn't work well.\nAnd I turn the mitmproxy event listener. It showed me\nClient Handshake failed. The client may not trust the proxy's certificate for android.clients.google.com\nWhat went wrong?\nI thought that if the mitmproxy root certificate was not trusted by Google? It would result in the SSL Handshake failed. Is anyone who have met the same issue like this. Please help me out with it.\nAny other comments?\nMitmproxy Version: 0.16\nOperating System: Mac OSX 10.11", "issue_status": "Closed", "issue_reporting_time": "2016-05-11T08:07:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1104": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1128", "issue_id": "#1128", "issue_summary": "Regression: can no longer modify flow.response.code", "issue_description": "Contributor\ncellularmitosis commented on 11 May 2016\nmitmproxy appears to have lost its ability to modify the HTTP code of a response. I've confirmed this works correctly on 0.10.1 (Debian/jessie) and is broken on 0.17.\nSteps to reproduce the problem:\nCreate a script like so:\ncat > 500.py\ndef response(context, flow):\nflow.response.code = 500\nRun mitmproxy -s 500.py\nNotice that the response code of your requests isn't being modified.\nWhat is the expected behavior?\nEvery request should 500.\nWhat went wrong?\nmitmproxy did not modify the HTTP code.\nAny other comments?\nMitmproxy Version: 0.17 and 0.16\nOperating System: OS X", "issue_status": "Closed", "issue_reporting_time": "2016-05-11T02:16:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1105": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1124", "issue_id": "#1124", "issue_summary": "Inline Scripts: Better Logging (was: First-class print() support.)", "issue_description": "Member\nmhils commented on 10 May 2016\nCurrently, the recommended way to do logging in inline scripts is context.log. It would be nice if print() would just work out of the box and log to the event log. Not sure what's the best way to do this (override, print, redirect sys.stdout, ...?), that needs some experimentation.", "issue_status": "Closed", "issue_reporting_time": "2016-05-09T19:36:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1106": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1122", "issue_id": "#1122", "issue_summary": "ServerException instead of ProxyServerError", "issue_description": "1ucian0 commented on 9 May 2016\nSteps to reproduce the problem:\n>>> from libmproxy.proxy.server import ProxyServer\n>>> from libmproxy.proxy.config import ProxyConfig\n>>> ProxyServer(ProxyConfig(port=80))\n(...)\nServerException: Error starting proxy server: error(13, 'Permission denied')\nWhat is the expected behavior?\nAccording to the documentation:\n>>> ProxyServer?                       \nType:            type\nString form:     <class 'libmproxy.proxy.server.ProxyServer'>\nFile:            /usr/lib/python2.7/dist-packages/libmproxy/proxy/server.py\nInit definition: ProxyServer(self, config)\nDocstring:       <no docstring>\nInit docstring:  Raises ProxyServerError if there's a startup problem.\nthe expected behavior is\n>>> ProxyServer(ProxyConfig(port=80))\n(...)\nProxyServerError: Error starting proxy server: error(13, 'Permission denied')\nWhat went wrong?\nMaybe the documentation is wrong?\nAny other comments?\nNope.\nMitmproxy Version: 0.15-2\nOperating System: Debian Sid.", "issue_status": "Closed", "issue_reporting_time": "2016-05-09T12:41:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1107": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1120", "issue_id": "#1120", "issue_summary": "Wrong URL displayed for OPTIONS * requests", "issue_description": "vfaronov commented on 8 May 2016\nLaunch mitmproxy, then use the following Python code to send an OPTIONS * request through the tunnel:\nimport socket, ssl\n\nsock = socket.create_connection(('localhost', 8080))\nsock.send(b'CONNECT http2bin.org:443 HTTP/1.1\\r\\n'\n          b'Host: http2bin.org:443\\r\\n'\n          b'User-Agent: demo\\r\\n'\n          b'\\r\\n')\nprint(sock.recv(4096))\n\ncontext = ssl.SSLContext(ssl.PROTOCOL_TLSv1_2)\nsock = context.wrap_socket(sock, server_hostname='http2bin.org')\nsock.send(b'OPTIONS * HTTP/1.1\\r\\n'\n          b'Host: http2bin.org\\r\\n'\n          b'User-Agent: demo\\r\\n'\n          b'Content-Length: 0\\r\\n'\n          b'\\r\\n')\nprint(sock.recv(4096))\nmitmproxy displays the URL of the request as: https://http2bin.org*\nThe correct URL of the request is https://http2bin.org (RFC 7230 \u00a7 5.5).\nAlso, in the inline scripts API, flow.request.path returns *, although the docs say that it is \u201cguaranteed to start with a slash.\u201d But I think this is a documentation problem.\nmitmproxy master, Linux.", "issue_status": "Closed", "issue_reporting_time": "2016-05-08T05:31:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1108": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1118", "issue_id": "#1118", "issue_summary": "Cookie.CookieError: Illegal key value: _csrf/link", "issue_description": "Contributor\nStevenVanAcker commented on 7 May 2016\nSteps to reproduce the problem:\nmitmdump -t .\nvisit http://dailymotion.com using the proxy\nwebsite tries to set cookie _csrf/link, which crashes mitmdump\nWhat is the expected behavior?\nI would expect mitmdump to not crash, but either forward the cookie as is, or not forward it.\nWhat went wrong?\nAccording to RFC 6265 (Cookie RFC), which refers to RFC 2616 (HTTP), \"_csrf/link\" is an invalid\ncookie name because it contains a \"/\". Visiting the website with Chrome does not segfault Chrome, but instead continues as if the cookiename is valid. I believe mitmdump should handle this error gracefully instead of crashing.\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmdump\", line 9, in\nload_entry_point('mitmproxy==0.18', 'console_scripts', 'mitmdump')()\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy/main.py\", line 102, in mitmdump\nmaster.run()\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy/dump.py\", line 350, in run\nsuper(DumpMaster, self).run()\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy/controller.py\", line 27, in run\nself.tick(0.1)\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy/flow.py\", line 845, in tick\nreturn super(FlowMaster, self).tick(timeout)\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy/controller.py\", line 39, in tick\nhandle_func(obj)\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy/dump.py\", line 334, in handle_response\nflow.FlowMaster.handle_response(self, f)\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy/flow.py\", line 1039, in handle_response\nself.process_new_response(f)\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy/flow.py\", line 936, in process_new_response\nself.stickycookie_state.handle_response(f)\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy/flow.py\", line 337, in handle_response\nc = http_cookies.SimpleCookie(str(i))\nFile \"/usr/lib/python2.7/Cookie.py\", line 583, in init\nif input: self.load(input)\nFile \"/usr/lib/python2.7/Cookie.py\", line 640, in load\nself.__ParseString(rawdata)\nFile \"/usr/lib/python2.7/Cookie.py\", line 677, in __ParseString\nself.__set(K, rval, cval)\nFile \"/usr/lib/python2.7/Cookie.py\", line 589, in __set\nM.set(key, real_value, coded_value)\nFile \"/usr/lib/python2.7/Cookie.py\", line 459, in set\nraise CookieError(\"Illegal key value: %s\" % key)\nCookie.CookieError: Illegal key value: _csrf/link\nI would submit a fix myself, but I'm a bit swamped with other work right now\nAny other comments?\nMitmproxy Version: 0.18\nOperating System: Ubuntu", "issue_status": "Closed", "issue_reporting_time": "2016-05-07T12:55:38Z", "fixed_by": "#1121", "pull_request_summary": "improve cookie parsing", "pull_request_description": "Member\nKriechi commented on 8 May 2016 \u2022\nedited\nallows / to be within a cookie name, e.g. _csrf/link=foobar\nbackport: : character to be within a cookie name from python 3.3\nremoves deprecated cookie getter/setter\nfixes #1118\nThis introduces a minor API change for sticky cookies.", "pull_request_status": "Merged", "issue_fixed_time": "2016-05-11T17:30:44Z", "files_changed": [["9", "mitmproxy/console/flowview.py"], ["32", "mitmproxy/flow.py"], ["39", "netlib/http/cookies.py"], ["8", "netlib/http/request.py"], ["10", "netlib/http/response.py"], ["17", "test/mitmproxy/test_flow.py"], ["13", "test/netlib/http/test_cookies.py"], ["2", "test/netlib/http/test_request.py"], ["2", "test/netlib/http/test_response.py"]]}, "1109": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1117", "issue_id": "#1117", "issue_summary": "Interaction between -r and -a", "issue_description": "Contributor\nthiagoarrais commented on 6 May 2016 \u2022\nedited\nI don't know what is the expected behavior here, but I've found out that doing this results in very large flow files:\nStart some webserver\npython -m SimpleHTTPServer 8000\nStart a reverse proxy to that server. Append flows to some (non-existent) file\nmitmproxy -a /tmp/somewhere.flows -p 8080 -R http://localhost:8000\nMake some requests to said proxy:\ncurl -s http://localhost:8080 > /dev/null\nStop the proxy\nCheck the size of the flows file:\nstat -c \"%s %n\" /tmp/somewhere.flows => 23059 /tmp/somewhere.flows\nStart a new proxy instance. Append flows to same file. But, this time, try to read from it too.\nmitmproxy -r /tmp/somewhere.flows -a /tmp/somewhere.flows -R http://localhost:8000\nDo not issue any requests. Just wait for a few seconds (the process hangs)\nKill the proxy process\nCheck the size of the flows file again:\nstat -c \"%s %n\" /tmp/somewhere.flows => 21942730 /tmp/somewhere.flows\nWow!\nI did this expecting to be able to work with the previous captured flows (filter them, repeat requests, etc.) while still recording the new interactions. Do you think this is a valid use case?\nTested with mitmproxy 0.17 and master.", "issue_status": "Closed", "issue_reporting_time": "2016-05-06T18:02:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1110": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1116", "issue_id": "#1116", "issue_summary": "why ignoring in transparent mode has to be in ip as opposed dns ?", "issue_description": "medyagh commented on 6 May 2016 \u2022\nedited\nI have huge problems not being able to ignore domains or ips in transparent mode.\nI have tried adding multiple --ignore 1.2.3.4:443--ignore domain.com and I still see in the logs\nstuff like \"client may not trust the proxy's certificate for graph.facebook.com.\"\nI feel like the ignore acts totally differently in transparent mode and not acting as I expect it, is that true ? can I pass multiple --ignore in transparent mode?\nhow can I effectively and for real ignore multiple domain names in transparent mode?", "issue_status": "Closed", "issue_reporting_time": "2016-05-06T05:32:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1111": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1115", "issue_id": "#1115", "issue_summary": "Responding with static content in streaming mode in a script crashes mitmproxy.", "issue_description": "chrisgavin commented on 5 May 2016\nFirst of all, this may be intended behavior. If that's the case don't hesitate to close this issue, I appreciate it's a bit of a weird thing to do.\nIt would appear that when mitmproxy is run with the --stream 0 flag and a script chooses to send an HTTPResponse object with static content mitmproxy crashes.\nSteps to reproduce the problem:\nRun mitmdump --stream 0 -s examples/redirect_requests.py\nAttempt to access http://example.com/ through mitmproxy.\nWhat is the expected behavior?\n\"helloworld\" should be displayed in the browser.\nWhat went wrong?\nmitmproxy crashes with this traceback:\n127.0.0.1:40469: Traceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/proxy/modes/http_proxy.py\", line 11, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/tls.py\", line 358, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http1.py\", line 67, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 204, in __call__\n    self.send_response_to_client(flow)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http.py\", line 285, in send_response_to_client\n    self.send_response_body(flow.response, chunks)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/protocol/http1.py\", line 42, in send_response_body\n    for chunk in http1.assemble_body(response.headers, chunks):\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/http/http1/assemble.py\", line 42, in assemble_body\n    for chunk in body_chunks:\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/http/http1/read.py\", line 133, in read_body\n    content = rfile.read(chunk_size)\nAttributeError: 'NoneType' object has no attribute 'read'\nAny other comments?\nThanks for developing this amazing piece of software. It's incredibly useful.\nMitmproxy Version: 0.17\nOperating System: Linux", "issue_status": "Closed", "issue_reporting_time": "2016-05-05T16:34:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1112": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1114", "issue_id": "#1114", "issue_summary": "Mitmproxy crashes when making a SSL request", "issue_description": "Contributor\njvillacorta commented on 4 May 2016 \u2022\nedited by mhils\nSteps to reproduce the problem:\nLaunch mitmproxy\nOn an iPhone with certificates installed navigate to google.com or any website that requires ssl\nWhat is the expected behavior?\nConnection will be established\nWhat went wrong?\nCrash log:\n`Traceback (most recent call last):\n  File \"/Users/jorge/venv.KiteTest/lib/python2.7/site-packages/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/Users/jorge/venv.KiteTest/lib/python2.7/site-packages/mitmproxy/proxy/modes/http_proxy.py\", line 11, in __call__\n    layer()\n  File \"/Users/jorge/venv.KiteTest/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 358, in __call__\n    layer()\n  File \"/Users/jorge/venv.KiteTest/lib/python2.7/site-packages/mitmproxy/protocol/http1.py\", line 67, in __call__\n    layer()\n  File \"/Users/jorge/venv.KiteTest/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 171, in __call__\n    self.handle_regular_mode_connect(request)\n  File \"/Users/jorge/venv.KiteTest/lib/python2.7/site-packages/mitmproxy/protocol/http.py\", line 263, in handle_regular_mode_connect\n    layer()\n  File \"/Users/jorge/venv.KiteTest/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 353, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/Users/jorge/venv.KiteTest/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 437, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/Users/jorge/venv.KiteTest/lib/python2.7/site-packages/mitmproxy/protocol/tls.py\", line 457, in _establish_tls_with_client\n    extra_chain_certs = extra_certs,\n  File \"/Users/jorge/venv.KiteTest/lib/python2.7/site-packages/mitmproxy/models/connections.py\", line 84, in convert_to_ssl\n    super(ClientConnection, self).convert_to_ssl(*args, **kwargs)\n  File \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 802, in convert_to_ssl\n    **sslctx_kwargs)\n  File \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 765, in create_ssl_context\n    context = self._create_ssl_context(**sslctx_kwargs)\nTypeError: _create_ssl_context() got an unexpected keyword argument 'extra_chain_certs'`\nAny other comments?\nThis issue does not happen on mitmproxy 0.16 or with other OSX versions\nMitmproxy Version: 0.17\nOperating System: OSX 10.10.5", "issue_status": "Closed", "issue_reporting_time": "2016-05-04T18:12:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1113": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1113", "issue_id": "#1113", "issue_summary": "mitmproxy has crashed!CanvasError: Canvas text is wider than the maxcol specified", "issue_description": "minioreo commented on 4 May 2016\nSteps to reproduce the problem:\nexecute mitmproxy\nset my mobile phone's WIFI to use mitmproxy\nmitmproxy crashed\nWhat is the expected behavior?\nWhat went wrong?\nmitmproxy crashed\nAny other comments?\nTraceback (most recent call last):\nFile \"site-packages/mitmproxy/console/init.py\", line 512, in run\nFile \"site-packages/urwid/main_loop.py\", line 278, in run\nFile \"site-packages/urwid/main_loop.py\", line 376, in _run\nFile \"site-packages/urwid/main_loop.py\", line 682, in run\nFile \"site-packages/urwid/main_loop.py\", line 715, in _loop\nFile \"site-packages/urwid/main_loop.py\", line 164, in cb\nFile \"site-packages/mitmproxy/console/init.py\", line 456, in ticker\nFile \"site-packages/urwid/main_loop.py\", line 578, in draw_screen\nFile \"site-packages/urwid/widget.py\", line 141, in cached_render\nFile \"site-packages/urwid/container.py\", line 1083, in render\nFile \"site-packages/urwid/widget.py\", line 141, in cached_render\nFile \"site-packages/urwid/decoration.py\", line 225, in render\nFile \"site-packages/urwid/widget.py\", line 141, in cached_render\nFile \"site-packages/urwid/listbox.py\", line 475, in render\nFile \"site-packages/urwid/widget.py\", line 141, in cached_render\nFile \"site-packages/urwid/widget.py\", line 1751, in render\nFile \"site-packages/urwid/widget.py\", line 141, in cached_render\nFile \"site-packages/urwid/container.py\", line 1520, in render\nFile \"site-packages/urwid/widget.py\", line 141, in cached_render\nFile \"site-packages/urwid/container.py\", line 2085, in render\nFile \"site-packages/urwid/widget.py\", line 141, in cached_render\nFile \"site-packages/urwid/widget.py\", line 1008, in render\nFile \"site-packages/urwid/canvas.py\", line 1313, in apply_text_layout\nFile \"site-packages/urwid/canvas.py\", line 356, in init\nCanvasError: Canvas text is wider than the maxcol specified\n1\n[2]\n['\\xa1\\xfb']\nmitmproxy has crashed!\nPlease lodge a bug report at:\nhttps://github.com/mitmproxy/mitmproxy\nShutting down...\nMitmproxy Version:0.17.1\nOperating System:OSX 10.11.4 (15E65)", "issue_status": "Closed", "issue_reporting_time": "2016-05-04T05:06:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1114": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1112", "issue_id": "#1112", "issue_summary": "Please do not eat CPU", "issue_description": "Contributor\nsmurfix commented on 4 May 2016\nSteps to reproduce the problem:\nstrace -f libmproxy-using-python-script\ndie\nWhat is the expected behavior?\nNo connections = nothing to do = 100% idle.\nWhat went wrong?\nDoing nothing every millisecond or two is Just Plain Wrong.\n[pid 27773] gettimeofday({1462307648, 659308}, NULL) = 0\n[pid 27773] gettimeofday({1462307648, 659481}, NULL) = 0\n[pid 27773] gettimeofday({1462307648, 659707}, NULL) = 0\n[pid 27773] gettimeofday({1462307648, 659916}, NULL) = 0\n[pid 27773] gettimeofday({1462307648, 660072}, NULL) = 0\n[pid 27773] select(0, NULL, NULL, NULL, {0, 1000}) = 0 (Timeout)\n[pid 27773] gettimeofday({1462307648, 661472}, NULL) = 0\n[pid 27773] select(0, NULL, NULL, NULL, {0, 2000}) = 0 (Timeout)\n[pid 27773] gettimeofday({1462307648, 663799}, NULL) = 0\n[pid 27773] select(0, NULL, NULL, NULL, {0, 4000} <unfinished ...>\n[pid 27776] <... select resumed> )      = 0 (Timeout)\n[pid 27776] select(6, [5], [], [], {0, 100000} <unfinished ...>\n[pid 27773] <... select resumed> )      = 0 (Timeout)\n[pid 27773] gettimeofday({1462307648, 668192}, NULL) = 0\n[pid 27773] select(0, NULL, NULL, NULL, {0, 1497}) = 0 (Timeout)\n[pid 27773] gettimeofday({1462307648, 669999}, NULL) = 0\n[pid 27773] gettimeofday({1462307648, 670124}, NULL) = 0\n[pid 27773] gettimeofday({1462307648, 670270}, NULL) = 0\nMitmproxy Version: HEAD\nOperating System: Debian testing", "issue_status": "Closed", "issue_reporting_time": "2016-05-04T03:58:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1115": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1111", "issue_id": "#1111", "issue_summary": "Verify upstream certificates by default.", "issue_description": "Member\nmhils commented on 3 May 2016 \u2022\nedited\nPer discussion in #1108 and some other places, I would like to turn on --verify-upstream-cert by default, with an easy option to disable it.\nBasic Features:\nAdd setting to the mitmproxy options menu.\nAdd --insecure command line switch to disable certificate verification. Do we also want to have -k for this, to mirror curl's API?\nBonus features:\n~/.mitmproxy/trusted.pem should contain additional certs that are trusted by default.\nWhen sending an error to the client, send a detailed error page giving the client the option to add the cert to ~/.mitmproxy/trusted.pem.\nDisplay rejects connections as flows in the UI with an easy option to add certs to ~/.mitmproxy/trusted.pem. (this requires substantial work at other places)\nCaveats:\nIn a [user] -- TLS -- [mitmproxy] -- TCP -- [server] configuration, we cannot signal to the client that there's essentially no security. As I see it, this should only affect reverse proxy mode, manually changed requests and mitm.it. As such a configuration is a deliberate choice, we should be good.\nIf anyone wants to work on this, the first task would be to add this setting to mitmproxy's Options screen and send a separate PR for this!", "issue_status": "Closed", "issue_reporting_time": "2016-05-03T18:23:53Z", "fixed_by": "#1447", "pull_request_summary": "Verify upstream certificates by default", "pull_request_description": "Member\nmhils commented on 28 Jul 2016 \u2022\nedited by Kriechi\ncloses #1197\nfixes #1111\nI finally got around to take a closer look at @s4chin's excellent certificate verification PR!\nThis PR supersedes #1197. The core functionality is the same, but I did a bit of work on the UX.\nHere's the mitmdump output:\n\u03bb curl -x localhost:8080 -k https://expired.badssl.com/\n\n127.0.0.1:54216: clientconnect\n127.0.0.1:54216: Certificate Verification Error for expired.badssl.com: certificate has expired (errno: 10, depth: 0)\n127.0.0.1:54216: Invalid certificate, closing connection. Pass --insecure to disable validation.\n127.0.0.1:54216: clientdisconnect\n\n\u03bb curl -x localhost:8080 -k https://wrong.host.badssl.com/\n\n127.0.0.1:54221: clientconnect\n127.0.0.1:54221: Certificate Verification Error for wrong.host.badssl.com: hostname 'wrong.host.badssl.com' doesn't match either of '*.badssl.com', 'badssl.com'\n127.0.0.1:54221: Invalid certificate, closing connection. Pass --insecure to disable validation.\n127.0.0.1:54221: clientdisconnect\n\n\u03bb curl -x localhost:8080 -k https://self-signed.badssl.com/\n\n127.0.0.1:54224: clientconnect\n127.0.0.1:54224: Certificate Verification Error for self-signed.badssl.com: unable to get local issuer certificate (errno: 20, depth: 0)\n127.0.0.1:54224: Invalid certificate, closing connection. Pass --insecure to disable validation.\n127.0.0.1:54224: clientdisconnect\n\n\u03bb curl -x localhost:8080 https://example.com/\n\n127.0.0.1:54227: clientconnect\n127.0.0.1:54227: Client Handshake failed. The client may not trust the proxy's certificate for example.com.\n127.0.0.1:54227: clientdisconnect\nHere's how it looks like in mitmproxy:\nHere's how it looks like in the client:\n@cortesi, what do you think?", "pull_request_status": "Merged", "issue_fixed_time": "2016-08-01T02:44:16Z", "files_changed": [["9", "mitmproxy/cmdline.py"], ["6", "mitmproxy/console/master.py"], ["6", "mitmproxy/console/options.py"], ["2", "mitmproxy/dump.py"], ["6", "mitmproxy/exceptions.py"], ["2", "mitmproxy/models/http.py"], ["4", "mitmproxy/options.py"], ["21", "mitmproxy/protocol/tls.py"], ["22", "mitmproxy/proxy/config.py"], ["7", "mitmproxy/proxy/server.py"], ["46", "netlib/tcp.py"], ["21", "test/mitmproxy/data/servercert/9da13359.0"], ["46", "test/mitmproxy/data/servercert/self-signed.pem"], ["45", "test/mitmproxy/data/servercert/trusted-leaf.pem"], ["48", "test/mitmproxy/data/servercert/trusted-root.pem"], ["14", "test/mitmproxy/data/trusted-cadir/8117bdb9.0"], ["14", "test/mitmproxy/data/trusted-cadir/9d45e6a9.0"], ["14", "test/mitmproxy/data/trusted-cadir/trusted-ca.pem"], ["33", "test/mitmproxy/data/trusted-server.crt"], ["32", "test/mitmproxy/data/untrusted-server.crt"], ["6", "test/mitmproxy/test_protocol_http2.py"], ["6", "test/mitmproxy/test_proxy.py"], ["109", "test/mitmproxy/test_server.py"], ["3", "test/mitmproxy/tservers.py"], ["12", "test/netlib/test_tcp.py"]]}, "1116": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1110", "issue_id": "#1110", "issue_summary": "do you run the examples with mitmdump or mitmproxy", "issue_description": "medyagh commented on 3 May 2016\nI see some new examples in the new version, are these examples meant to run with mitmdump or mitmproxy for example is flowwriter.py only for mitmdump ? and is upsidedownternet.py only for mitmproxy ?", "issue_status": "Closed", "issue_reporting_time": "2016-05-03T15:44:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1117": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1108", "issue_id": "#1108", "issue_summary": "No way to prevent hostname-from-client from being auto-added to X.509 SANs", "issue_description": "Contributor\njavabrett commented on 1 May 2016\nAs at current master (d84fc64), mitmproxy will in certain situations generate X.509 certificates for remote sites which are accepted without error by a web-browser, whereas a direct-connection to the same site would trigger TLS errors such as SSL_ERROR_BAD_CERT_DOMAIN, NET::ERR_CERT_COMMON_NAME_INVALID. This certificate \"enrichment\", whilst nicely removing a browser-error seen by a direct-connection, makes mitmproxy less transparent, and may prevent or interfere with certain types of testing. Currently this behaviour cannot be configured; the behaviour should be absent or at least configurable, and preferably non-default.\nThe error-nilling occurs when accessing a domain via a name which is not the Subject CN, and also does not match a subjectAltName (SAN). mitmproxy currently adds the client-request hostname to the SANs, even when upstream certificate-sniffing is enabled (default), so mitmproxy can see that the client's requested hostname does not match, but it is added to the certificate regardless. This occurs here.\nA good test-case is https://mitm.it/ , which is not-intended to be accessed over HTTPs, and when it is (directly), it serves the main mitmproxy.org website, but not before throwing a browser-error, because it is using mitmproxy.org's certificate, which has no SAN for mitm.it. If you mitmproxy this connection, the resulting generated certificate will have mitm.it as a SAN, and your browser-connection will be error-less. Normally perhaps a nice thing in removing the error, but I didn't ask mitmproxy to do that, and it is sniffing upstream certs by-default, so I expect the cert to be more-or-less identical, other than the Issuer of course.\nSteps to reproduce the problem:\nAccess https://mitm.it/ directly from your browser (no mitmproxy), observe CN mismatch warning and not mitm.it in CN or SAN.\nAccess https://mitm.it/ via mitmproxy and observe that mitm.it appears in the certificate SAN.\nWhat is the expected behavior?\nWhen upstream cert sniffing is enabled, just pass-through the Subject CN and the subjectAltName unmodified by-default. Consider some non-default runtime options to:\nCopy the Subject CN to a subjectAltName in the unusual case that there is a subjectAltName, but it does not contain the host data in Subject CN. Note that this could change the acceptance of the cert in a client strictly adhering to RFC 2818 (Thunderbird 38?). But can we find such an example certificate on the internet somewhere?\nAdd the client-request hostname to the SANs (creating if necessary, in which case the CN also needs to be copied-in), to allow the current error-nullifying behaviour to be restored if desired.\nAlways create subjectAltName if absent from (deprecated) Subject CN. Probably unnecessary since clients always understand Subject CN.\nWhen upstream cert sniffing is disabled with --no-upstream-cert, create both Subject CN (deprecated) and subjectAltName using that name. Although this could result in a different certificate now having subjectAltName, there should be no difference to a client. Hostname error-nullifying is enabled.\nWhat went wrong?\nGenerated cert allows more names than the upstream server cert.\nAny other comments?\nAn earlier change made in 375dbe0 is correct, and stopped removing a hostname from the SANs, said removal/de-duplication being incorrect. The relevant RFC 2818 https://tools.ietf.org/html/rfc2818 states:\n3.1 Server Identity\n...\nIf a subjectAltName extension of type dNSName is present, that MUST be used as the identity. Otherwise, the (most specific) Common Name field in the Subject field of the certificate MUST be used. Although the use of the Common Name is existing practice, it is deprecated and Certification Authorities are encouraged to use the dNSName instead.\nThat is, if there is a subjectAltName, for clients it ought to be read and be assumed authoritative and complete, and not unioned with a later-read Subject CN. According to that, Thunderbird 38 as mentioned in the comment would be behaving correctly in ignoring the Subject. Certificates that do not include the Subject hostname as a dnsName in subjectAltName are running-foul of the RFCs.\nMitmproxy Version: master (d84fc64)\nOperating System: LinuxMint 17.1 3.13.0-24-generic #47-Ubuntu SMP Fri May 2 23:30:00 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux", "issue_status": "Closed", "issue_reporting_time": "2016-05-01T13:08:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1118": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1106", "issue_id": "#1106", "issue_summary": "mitm.it \"Visit the Documentation\" link 404", "issue_description": "Contributor\njavabrett commented on 1 May 2016\nSteps to reproduce the problem:\nVisit http://mitm.it/ direct.\nClick \"Visit the Documentation\" link.\nArrive at https://mitmproxy.org/doc/index.html which is a 404\nI don't know whether the source for mitm.it is available.\nWhat is the expected behavior?\nLink to http://docs.mitmproxy.org\nWhat went wrong?\nProbably docs moved.\nAny other comments?\nGreat product.\nMitmproxy Version: N/A\nOperating System: N/A", "issue_status": "Closed", "issue_reporting_time": "2016-04-30T21:07:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1119": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1105", "issue_id": "#1105", "issue_summary": "Is it necessary to undo the changes to sysctl when you are done?", "issue_description": "Contributor\nsnoblenet commented on 30 Apr 2016\nSteps like sudo sysctl -w net.inet.ip.forwarding=1 seem significant.\nIs it necessary for security or other reasons to undo any of these changes once you're done with mitmproxy?", "issue_status": "Closed", "issue_reporting_time": "2016-04-30T07:49:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1120": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1104", "issue_id": "#1104", "issue_summary": "What network interface to use to monitor traffic from local desktop app to local server?", "issue_description": "Contributor\nsnoblenet commented on 30 Apr 2016\nI want to intercept the traffic between a desktop Electron app that I am running locally on my Mac while I program it and a copy of my server-side Rails app that I am running locally on my Mac at http://localhost:3000.\nI presume the settings I need are:\nTransparent mode\nNo certificate required for non-HTTPS\nA pf.conf that looks something like rdr on en2 inet proto tcp to any port 3000 -> 127.0.0.1 port 8080\nHowever, I don't know what network interface to use instead of en2 in the above.\nWhat do I use?\nAt bash, I get:\n$ networksetup -listallhardwareports\n\nHardware Port: Display Ethernet\nDevice: en2\nEthernet Address: 40:6c:8f:55:28:9c\n\nHardware Port: Display FireWire\nDevice: fw0\nEthernet Address: 00:0a:27:02:00:4a:f6:31\n\nHardware Port: Wi-Fi\nDevice: en0\nEthernet Address: 00:88:65:3b:fa:ca\n\nHardware Port: Bluetooth PAN\nDevice: en4\nEthernet Address: 00:88:65:3b:fa:cb\n\nHardware Port: Thunderbolt 1\nDevice: en1\nEthernet Address: 32:00:14:05:ba:60\n\nHardware Port: Thunderbolt Bridge\nDevice: bridge0\nEthernet Address: 42:6c:8f:55:1e:00\n\nVLAN Configurations\n===================\n1", "issue_status": "Closed", "issue_reporting_time": "2016-04-30T07:48:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1121": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1101", "issue_id": "#1101", "issue_summary": "clarify error message on SSLv3 failure", "issue_description": "romainfun commented on 29 Apr 2016 \u2022\nedited\nopenssl SSLv3 support has been disabled on ubuntu 16.04 (debian/patches/no-sslv3.patch),\nand probably debian unstable + other distros.\nmitmproxy --ssl-version-server SSLv3 -R https://google.fr:443\nresults in the following failure :\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/proxy/modes/reverse_proxy.py\", line 14, in __call__\n    layer()\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 267, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 392, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 386, in _establish_tls_with_client_and_server\n    self._establish_tls_with_server()\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 458, in _establish_tls_with_server\n    alpn_protos=alpn,\n  File \"/usr/lib/python2.7/dist-packages/libmproxy/models/connections.py\", line 183, in establish_ssl\n    self.convert_to_ssl(cert=clientcert, sni=sni, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/netlib/tcp.py\", line 605, in convert_to_ssl\n    **sslctx_kwargs\n  File \"/usr/lib/python2.7/dist-packages/netlib/tcp.py\", line 580, in create_ssl_context\n    **sslctx_kwargs)\n  File \"/usr/lib/python2.7/dist-packages/netlib/tcp.py\", line 488, in _create_ssl_context\n    context = SSL.Context(method)\n  File \"/usr/local/lib/python2.7/dist-packages/OpenSSL/SSL.py\", line 478, in __init__\n    _raise_current_error()\n  File \"/usr/local/lib/python2.7/dist-packages/OpenSSL/_util.py\", line 48, in exception_from_error_queue\n    raise exception_type(errors)\nError: [('SSL routines', 'SSL_CTX_new', 'null ssl method passed')]\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nIt would be great to have a message such as \"your libssl does not support SSLv3 (it was removed for security reasons)\"\nFor those servers wo only support SSLv3 (hello PDUs), you can use TEMPORARILY a recompiled libssl with SSLv3 enabled :\ncd $(mktemp -d)\nsudo apt-get build-dep openssl\napt-get source openssl\ndpkg-source -x openssl*.dsc\ncd openssl*\npatch -R -p1 < ./debian/patches/no-sslv3.patch\ndpkg-buildpackage -rfakeroot -b\nsudo chown root:root libssl.so.1.0.0\nsudo chmod u=rw,go=r libssl.so.1.0.0\nsudo cp libssl.so.1.0.0 /lib/x86_64-linux-gnu/libssl.so.1.0.0\n(obviously you can keep your recomplied libssl.so.1.0.0 somewhere)\nAfter use, restore the distro and SECURE libssl, launching :\nsudo apt-get install --reinstall libssl1.0.0\nMitmproxy Version: any\nOperating System: ubuntu 16.04", "issue_status": "Closed", "issue_reporting_time": "2016-04-29T13:50:09Z", "fixed_by": "#1767", "pull_request_summary": "Descriptive error message for SSL context initialization failure", "pull_request_description": "Contributor\nYoginski commented on 20 Nov 2016 \u2022\nedited by Kriechi\nfixes #1101", "pull_request_status": "Merged", "issue_fixed_time": "2016-11-21T08:40:09Z", "files_changed": [["21", "mitmproxy/net/tcp.py"], ["15", "test/mitmproxy/net/test_tcp.py"]]}, "1122": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1099", "issue_id": "#1099", "issue_summary": "Query view has caching issues", "issue_description": "Member\nmhils commented on 27 Apr 2016\nSteps to reproduce the problem:\nOpen request to a URL with query - you should see the query content view:\nEdit some parts of the query by pressing e, q.\nWhat is the expected behavior?\nThe UI should show the updated query.\nWhat went wrong?\nThe old query value is cached. After changing the display mode twice, the new value is displayed.", "issue_status": "Closed", "issue_reporting_time": "2016-04-27T02:10:28Z", "fixed_by": "#1160", "pull_request_summary": "Fix #1099", "pull_request_description": "Member\nmhils commented on 21 May 2016\nThis PR fixes #1099 based on the changes in #1151.", "pull_request_status": "Merged", "issue_fixed_time": "2016-05-21T03:03:11Z", "files_changed": [["11", "docs/dev/models.rst"], ["11", "examples/modify_form.py"], ["5", "examples/modify_querystring.py"], ["52", "mitmproxy/console/flowview.py"], ["12", "mitmproxy/console/grideditor.py"], ["34", "mitmproxy/flow.py"], ["4", "mitmproxy/flow_export.py"], ["1", "netlib/encoding.py"], ["8", "netlib/http/__init__.py"]]}, "1123": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1098", "issue_id": "#1098", "issue_summary": "return HTTPResponse in upstream mode", "issue_description": "qifuren1985 commented on 26 Apr 2016 \u2022\nedited by mhils\nSteps to reproduce the problem:\ninit upstream mode\nconfig = proxy.ProxyConfig(\n        cadir=os.path.expanduser('./'),\n        port=9077,\n        mode='upstream',\n        upstream_server=(\"http\", (\"127.0.0.1\", 9977))\n    )\n    server = proxy.ProxyServer(config)\nreturn HTTPResponse in request\ndef request(context, flow):\n     resp = HTTPResponse(\n                \"HTTP/1.1\", 200, \"OK\",\n                Headers(Content_Type=\"text/html\"),\n                \"helloworld\")\n            msg.reply(resp)\nuse curl to get response\ncurl \"http://www.google.com\" -x \"http://127.0.0.1:9077\" -k\nhelloworld\n\ncurl \"https://www.google.com\" -x \"http://127.0.0.1:9077\" -k\ncurl: (35) error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol\nWhat is the expected behavior?\nreturn helloworld\nWhat went wrong?\ncurl: (35) error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol\nAny other comments?\nMitmproxy Version:\nOperating System:", "issue_status": "Closed", "issue_reporting_time": "2016-04-26T10:51:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1124": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1096", "issue_id": "#1096", "issue_summary": "deleting cookies (stickycookies) does not work", "issue_description": "Contributor\nStevenVanAcker commented on 25 Apr 2016 \u2022\nedited\nSteps to reproduce the problem:\nstart mitmdump with stickycookies: mitmdump -t \".\" and point a browser through it\nvisit https://httpbin.org/cookies/set?aaa=1 to set a cookie\nvisit https://httpbin.org/cookies/delete?aaa= to delete the cookie\nvisit https://httpbin.org/cookies to display the cookies\nWhat is the expected behavior?\nThe expected behavior, according to RFC 6265, is that the cookie is deleted\nWhat went wrong?\nThe cookie is not deleted\nAny other comments?\nThe cookie library used by mitmproxy is Cookie.py from python, which is woefully outdated.\nIt implements RFC 2109 from 1997 and does not (yet?) support RFC 6265 from 2011.\nRFC 6265 standardises both \"expires\" and \"max-age\" attributes which can be used\nfor expiration control of cookies. A cookie can be deleted by setting \"expires\" to a date in the past,\nor \"max-age\" to 0.\nA more up-to-date cookie library is probably beneficial here. I'm not sure if there are any\nspecial reasons for depending on Cookie.py?\nIs it better to attempt to fix cookie.py, or switch mitmproxy to another cookie library?\nMitmproxy Version: latest\nOperating System:", "issue_status": "Closed", "issue_reporting_time": "2016-04-25T13:11:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1125": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1094", "issue_id": "#1094", "issue_summary": "Script examples refer to libmproxy - change to mitmproxy", "issue_description": "peterglock commented on 23 Apr 2016 \u2022\nedited\nSteps to reproduce the problem:\nadd inline script 'redirect_requests.py' to mitmproxy command line\nWhat is the expected behavior?\nmitmproxy window opens\nWhat went wrong?\nGet following error\nScript load error: Traceback (most recent call last): File \"/usr/local/lib/python2.7/site-packages/mitmproxy/flow.py\", line 694, in load_script s.load() File \"/usr/local/lib/python2.7/site-packages/mitmproxy/script/script.py\", line 85, in load sys.exc_info()[2] File \"/usr/local/lib/python2.7/site-packages/mitmproxy/script/script.py\", line 80, in load exec (code, self.ns, self.ns) File \"/Users/peterglock/Documents/mitmproxy/mitmproxy/examples/redirect_requests.py\", line 1, in <module> from libmproxy.protocol.http import HTTPResponse ScriptException: No module named libmproxy.protocol.http\nAny other comments?\nchanging libmproxy to mitmproxy allows the script to run\nMitmproxy Version: 0.18\nOperating System: OSX 10.11.5 Beta", "issue_status": "Closed", "issue_reporting_time": "2016-04-23T17:30:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1126": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1092", "issue_id": "#1092", "issue_summary": "http2https and https2http broken by cli parser probably", "issue_description": "mogorman commented on 22 Apr 2016\nSteps to reproduce the problem:\n[:~ mogorman$ mitmproxy -R http2https://mysite.com/\nusage: mitmproxy [options]\nmitmproxy: error: argument -R/--reverse: Invalid server specification: http2https://mysite.com/\nWhat is the expected behavior?\nTo work as described in the help\nWhat went wrong?\ncommand is not parsed\nAny other comments?\nMitmproxy Version:mitmproxy 0.17\nOperating System:macos x", "issue_status": "Closed", "issue_reporting_time": "2016-04-21T22:58:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1127": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1090", "issue_id": "#1090", "issue_summary": "mitmproxy-0.17 for osx Crashed when using intercept filters", "issue_description": "kxcode commented on 21 Apr 2016 \u2022\nedited by mhils\nSteps to reproduce the problem:\nmitmproxy -T --host\npress i\ninput filter like : ~q\nthen crashed. it seems a python exception\n File \"site-packages/mitmproxy/console/__init__.py\", line 512, in run\n  File \"site-packages/urwid/main_loop.py\", line 278, in run\n  File \"site-packages/urwid/main_loop.py\", line 376, in _run\n  File \"site-packages/urwid/main_loop.py\", line 682, in run\n  File \"site-packages/urwid/main_loop.py\", line 719, in _loop\n  File \"site-packages/urwid/raw_display.py\", line 393, in <lambda>\n  File \"site-packages/urwid/raw_display.py\", line 493, in parse_input\n  File \"site-packages/urwid/main_loop.py\", line 403, in _update\n  File \"site-packages/urwid/main_loop.py\", line 503, in process_input\n  File \"site-packages/mitmproxy/console/window.py\", line 39, in keypress\n  File \"site-packages/urwid/container.py\", line 1116, in keypress\n  File \"site-packages/mitmproxy/console/statusbar.py\", line 126, in keypress\n  File \"site-packages/mitmproxy/console/statusbar.py\", line 83, in keypress\n  File \"site-packages/mitmproxy/console/statusbar.py\", line 106, in prompt_execute\n  File \"site-packages/mitmproxy/console/__init__.py\", line 663, in set_intercept\n  File \"site-packages/mitmproxy/flow.py\", line 604, in set_intercept\n  File \"site-packages/mitmproxy/filt.py\", line 398, in parse\n  File \"site-packages/pyparsing.py\", line 1162, in parseString\n  File \"site-packages/pyparsing.py\", line 1054, in _parseNoCache\n  File \"site-packages/pyparsing.py\", line 803, in wrapper\nAttributeError: 'NoneType' object has no attribute 'endswith'\n\nmitmproxy has crashed!\nMitmproxy Version: 0.17\nOperating System: OSX", "issue_status": "Closed", "issue_reporting_time": "2016-04-21T15:56:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1128": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1089", "issue_id": "#1089", "issue_summary": "mitmdump filter does not apply to saved dumps", "issue_description": "dniku commented on 20 Apr 2016\nSteps to reproduce the problem:\nInstall mitmproxy on Debian Jessie from git following the steps from here and here\nRun mitmproxy -w somefile and connect a device to it as usual\nPress oI and add .* to the list of ignore patterns\nHit qq and see connections from your device still appearing in the interface.\nWhat is the expected behavior?\nmitmproxy interface should behave as if there were no connections going through it, e.g. the interface should not display them and they should not be stored in the dump file.\nWhat went wrong?\nmitmproxy ignored --ignore patterns.\nAny other comments?\n$ mitmproxy --version\nmitmproxy 0.18\nI have built mitmproxy with the latest commit being this one.\nMitmproxy Version: 423c076\nOperating System: Debian Jessie ARM", "issue_status": "Closed", "issue_reporting_time": "2016-04-20T15:10:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1129": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1088", "issue_id": "#1088", "issue_summary": "mitmproxy crashing on el capitan 10.11.4", "issue_description": "jhelm commented on 20 Apr 2016\nSteps to reproduce the problem:\nInstall mitmporoxy 0.17 OSX binaries from https://github.com/mitmproxy/mitmproxy/releases/download/v0.17/mitmproxy-0.17-osx.tar.gz\nverify python27 is active, run mitmproxy; (note, running under iTerm, not Apple's Terminal.app'\nenter 'i' followed by '~q' the program exists with a crash traceback\nWhat is the expected behavior?\nthe intercept filter would capture all traffic\nWhat went wrong?\nThe following messages appear on the console:\nMacBook-Pro:tmp jlh$ mitmproxy\nTraceback (most recent call last):\n  File \"site-packages/mitmproxy/console/__init__.py\", line 512, in run\n  File \"site-packages/urwid/main_loop.py\", line 278, in run\n  File \"site-packages/urwid/main_loop.py\", line 376, in _run\n  File \"site-packages/urwid/main_loop.py\", line 682, in run\n  File \"site-packages/urwid/main_loop.py\", line 719, in _loop\n  File \"site-packages/urwid/raw_display.py\", line 393, in <lambda>\n  File \"site-packages/urwid/raw_display.py\", line 493, in parse_input\n  File \"site-packages/urwid/main_loop.py\", line 403, in _update\n  File \"site-packages/urwid/main_loop.py\", line 503, in process_input\n  File \"site-packages/mitmproxy/console/window.py\", line 39, in keypress\n  File \"site-packages/urwid/container.py\", line 1116, in keypress\n  File \"site-packages/mitmproxy/console/statusbar.py\", line 126, in keypress\n  File \"site-packages/mitmproxy/console/statusbar.py\", line 83, in keypress\n  File \"site-packages/mitmproxy/console/statusbar.py\", line 106, in prompt_execute\n  File \"site-packages/mitmproxy/console/__init__.py\", line 663, in set_intercept\n  File \"site-packages/mitmproxy/flow.py\", line 604, in set_intercept\n  File \"site-packages/mitmproxy/filt.py\", line 398, in parse\n  File \"site-packages/pyparsing.py\", line 1162, in parseString\n  File \"site-packages/pyparsing.py\", line 1054, in _parseNoCache\n  File \"site-packages/pyparsing.py\", line 803, in wrapper\nAttributeError: 'NoneType' object has no attribute 'endswith'\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...\nMacBook-Pro:tmp jlh$ python --version\nPython 2.7.11\nMacBook-Pro:tmp jlh$\nAny other comments?\nPython installed with MacPorts. I also tried the py27-mitmproxy port, which cratered even more spectacularly\nThanks for the great project!\nMitmproxy Version: 0.17\nOperating System: OSX 10.11.4", "issue_status": "Closed", "issue_reporting_time": "2016-04-20T00:52:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1130": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1087", "issue_id": "#1087", "issue_summary": "Setting a limit in OS X builds (0.16, 0.17) crashes mitmproxy", "issue_description": "clangen-mfp commented on 17 Apr 2016 \u2022\nedited\nSteps to reproduce the problem:\nLaunch mitmproxy\nPress \"l\" to enter a limit\nType any expression, e.g. \".*myhost.com\"\nWhat is the expected behavior?\nFor the limit to be applied to the view.\nWhat went wrong?\nThe app crashes.\nAny other comments?\n0.16 and 0.17 crash. 0.15 works fine.\nTraceback (most recent call last):\n  File \"site-packages/mitmproxy/console/__init__.py\", line 512, in run\n  File \"site-packages/urwid/main_loop.py\", line 278, in run\n  File \"site-packages/urwid/main_loop.py\", line 376, in _run\n  File \"site-packages/urwid/main_loop.py\", line 682, in run\n  File \"site-packages/urwid/main_loop.py\", line 719, in _loop\n  File \"site-packages/urwid/raw_display.py\", line 393, in <lambda>\n  File \"site-packages/urwid/raw_display.py\", line 493, in parse_input\n  File \"site-packages/urwid/main_loop.py\", line 403, in _update\n  File \"site-packages/urwid/main_loop.py\", line 503, in process_input\n  File \"site-packages/mitmproxy/console/window.py\", line 39, in keypress\n  File \"site-packages/urwid/container.py\", line 1116, in keypress\n  File \"site-packages/mitmproxy/console/statusbar.py\", line 126, in keypress\n  File \"site-packages/mitmproxy/console/statusbar.py\", line 83, in keypress\n  File \"site-packages/mitmproxy/console/statusbar.py\", line 106, in prompt_execute\n  File \"site-packages/mitmproxy/console/__init__.py\", line 658, in set_limit\n  File \"site-packages/mitmproxy/console/__init__.py\", line 60, in set_limit\n  File \"site-packages/mitmproxy/flow.py\", line 593, in set_limit\n  File \"site-packages/mitmproxy/filt.py\", line 398, in parse\n  File \"site-packages/pyparsing.py\", line 1162, in parseString\n  File \"site-packages/pyparsing.py\", line 1054, in _parseNoCache\n  File \"site-packages/pyparsing.py\", line 803, in wrapper\nAttributeError: 'NoneType' object has no attribute 'endswith' \nMitmproxy Version: 0.17\nOperating System: OS X 10.11.4", "issue_status": "Closed", "issue_reporting_time": "2016-04-17T17:30:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1131": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1084", "issue_id": "#1084", "issue_summary": "HTTP/2 does not handle killed requests", "issue_description": "Member\nmhils commented on 14 Apr 2016 \u2022\nedited\nSteps to reproduce the problem:\nmitmdump -S test_replay --kill\nOpen a website that is not contained in the replay file.\nWhat went wrong?\n127.0.0.1:50907: clientconnect\n127.0.0.1:50906: clientconnect\n127.0.0.1 GET https://news.ycombinator.com/ HTTP/2.0\n << Connection killed\nException in thread Thread-2:\nTraceback (most recent call last):\n  File \"c:\\python27\\Lib\\threading.py\", line 810, in __bootstrap_inner\n    self.run()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\protocol\\http2.py\", line 422, in run\n    layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\protocol\\http.py\", line 188, in __call__\n    self.process_request_hook(flow)\n  File \"c:\\users\\user\\git\\mitmproxy\\mitmproxy\\protocol\\http.py\", line 356, in process_request_hook\n    raise Kill()\nKill", "issue_status": "Closed", "issue_reporting_time": "2016-04-14T03:37:10Z", "fixed_by": "#1126", "pull_request_summary": "Safeguard", "pull_request_description": "Member\nKriechi commented on 10 May 2016 \u2022\nedited\nprevent backtrace with lost http2 connections\nmight fix #1084", "pull_request_status": "Merged", "issue_fixed_time": "2016-05-18T05:03:32Z", "files_changed": [["6", "mitmproxy/exceptions.py"], ["13", "mitmproxy/protocol/http.py"], ["31", "mitmproxy/protocol/http2.py"], ["48", "test/mitmproxy/test_protocol_http2.py"]]}, "1132": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1083", "issue_id": "#1083", "issue_summary": "Certutils crash", "issue_description": "Contributor\nFuzion24 commented on 13 Apr 2016\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/proxy/modes/http_proxy.py\", line 11, in __call__\n    layer()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 345, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 427, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 424, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 433, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 566, in _find_cert\n    return self.config.certstore.get_cert(host, list(sans))\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/netlib/certutils.py\", line 341, in get_cert\n    sans),\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/netlib/certutils.py\", line 96, in dummy_cert\n    ipaddress.ip_address(i.decode(\"ascii\"))\nAttributeError: 'NoneType' object has no attribute 'decode'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2016-04-12T19:18:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1133": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1082", "issue_id": "#1082", "issue_summary": "mitmdump crashes when mutating recorded responses with the kill flag", "issue_description": "christofferqa commented on 12 Apr 2016\nSteps to reproduce the problem:\nRecord a website using mitmdump --anticache -w out.tmp.\nFor the sake of the example, record the JSON file at http://users-cs.au.dk/cqa/mitmproxy.json.\nReplay the website using mitmdump --anticache -S out.tmp -s proxy.py --no-pop --kill, where proxy.py mutates some responses from the recording.\nFor the sake of the example, use the following proxy.py file, that pretty prints JSON files:\nimport json\n\nfrom mitmproxy.script import concurrent\n\ndef prettyjson(input):\n  return json.dumps(json.loads(input), indent=2)\n\n@concurrent\ndef request(context, flow):\n  print('start request: %s%s' % (flow.request.host, flow.request.path))\n\ndef response(context, flow):\n  if not flow.error and flow.request.path.endswith('.json'):\n    flow.response.decode()\n    flow.response.content = prettyjson(flow.response.content)\n  print('finish response: %s%s' % (flow.request.host, flow.request.path))\nWhat is the expected behavior?\nThe JSON file in the recording gets pretty printed when visiting http://users-cs.au.dk/cqa/mitmproxy.json.\nWhat went wrong?\nA crash occurs:\nstart request: users-cs.au.dk/cqa/mitmproxy.json\nfinish response: users-cs.au.dk/cqa/mitmproxy.json\n127.0.0.1 GET http://users-cs.au.dk/cqa/mitmproxy.json\n[replay]  << 200 OK 34B\nstart request: users-cs.au.dk/favicon.ico\n127.0.0.1 GET http://users-cs.au.dk/favicon.ico\n << Connection killed\nfinish response: users-cs.au.dk/favicon.ico\nTraceback (most recent call last):\n  File \"/home/christofferqa/mitmproxy/venv/bin/mitmdump\", line 9, in <module>\n    load_entry_point('mitmproxy', 'console_scripts', 'mitmdump')()\n  File \"/home/christofferqa/mitmproxy/mitmproxy/main.py\", line 102, in mitmdump\n    master.run()\n  File \"/home/christofferqa/mitmproxy/mitmproxy/dump.py\", line 354, in run\n    return flow.FlowMaster.run(self)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/controller.py\", line 128, in run\n    self.tick(self.masterq, 0.1)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/flow.py\", line 836, in tick\n    return super(FlowMaster, self).tick(q, timeout)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/controller.py\", line 113, in tick\n    self.handle(*msg)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/controller.py\", line 135, in handle\n    m(obj)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/dump.py\", line 337, in handle_response\n    self._process_flow(f)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/dump.py\", line 321, in _process_flow\n    self.state.delete_flow(f)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/flow.py\", line 584, in delete_flow\n    self.flows._remove(f)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/flow.py\", line 496, in _remove\n    self._list.remove(f)\nValueError: list.remove(x): x not in list\nAny other comments?\nThe bug only manifests when using @concurrent and --kill at the same time, and therefore may be related to #1061.\nMitmproxy Version: master (0.18)\nOperating System: Ubuntu 14.03.3", "issue_status": "Closed", "issue_reporting_time": "2016-04-12T16:49:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1134": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1081", "issue_id": "#1081", "issue_summary": "no option to stop flow processing once flow inspection is done", "issue_description": "hackers-terabit commented on 12 Apr 2016\nSteps to reproduce the problem:\ninline script with mitmproxy transparent proxy mode\ninspect/mitm a very large file\nwait until OOM killer kills mitmproxy (or mitmdump)\nWhat is the expected behavior?\n#1029 and #1036 exist for similar complaints.\nThose issues address the problem of how flows are stored and processed.\nMy inline script only deals with the request and response headers (once each direction)\nI expect the inline script interface to have an option where flow caching/memory storage will cease once the necessary operation(s) on the flow is performed.\nWhat went wrong?\nThis is more of a feature request (or documentation request if the feature already exists)\nAny other comments?\nIs there a better way to contact the developers or is github issue creation the preferred way?\nMitmproxy Version:\nOperating System:", "issue_status": "Closed", "issue_reporting_time": "2016-04-12T14:29:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1135": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1078", "issue_id": "#1078", "issue_summary": "How to make mitmproxy work with non-standard SSL ports?", "issue_description": "daboss1337 commented on 11 Apr 2016\nIs there any way to make mitmproxy work with non-standard ports like SSL on port 31337 for example? I tried to tweak the mitmproxy.conf but the documentation does not contain enough information.", "issue_status": "Closed", "issue_reporting_time": "2016-04-11T07:27:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1136": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1077", "issue_id": "#1077", "issue_summary": "[Docs] Online mitmproxy docs image not displaying correctly on Firefox (low-res)", "issue_description": "Contributor\nbazzinotti commented on 10 Apr 2016\nThis could be a https://github.com/snide/sphinx_rtd_theme issue. But I want to report here first since I'm not sure if your docs code could have caused this.\nWindows 7 @ screen resolution 1024x768 - FireFox 45.0.1 - visit http://docs.mitmproxy.org/\nWhat is the expected behavior?\n(I assume) The mitmproxy docs sidebar image should fully display in the sidebar as shown below\nWhat went wrong?\nInstead, this is shown (and cannot be scrolled)", "issue_status": "Closed", "issue_reporting_time": "2016-04-10T02:19:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1137": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1070", "issue_id": "#1070", "issue_summary": "MITMWEB: search, highlight, intercept not working", "issue_description": "peterglock commented on 2 Apr 2016\nSteps to reproduce the problem:\nOn OS X El Capitain, update to latest version pip install --upgrade mitmproxy\nstart mitmweb, I'm ignoring domains with certificate pinning mitmweb -T --wport 8888 -v --host --anticache -p 8080 --ignore '(69\\.171\\.\\d+\\.\\d+:443)|(31\\.13\\.\\d+\\.\\d+:443)|(17\\.\\d+\\.\\d+\\.\\d+:443)|(216\\.58\\.\\d+\\.\\d+:443)|(104\\.69\\.\\d+\\.\\d+:443)|(108\\.174\\.\\d+\\.\\d+:443)'\nopen browser (I tried both Safari and Chrome) and attempt to search, highlight or intercept streams using the selection boxes at the top of the browser window\nWhat is the expected behavior?\nsearch - shows list of streams matching expression\nhighlight - highlights matching streams\nintercept - intercepts matching streams\nWhat went wrong?\nNo change in browser window\nAny other comments?\nThis was definitely working in 0.13\nMitmproxy Version: 0.16\nOperating System: OSX 10.11.4 (15E65)", "issue_status": "Closed", "issue_reporting_time": "2016-04-02T10:47:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1138": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1067", "issue_id": "#1067", "issue_summary": "missing server_conn.cert when using FlowReader", "issue_description": "Member\ndweinstein commented on 1 Apr 2016\nSteps to reproduce the problem:\nrecord mitm flow\n$ mitmdump -w test.flow &\n$ HTTP_PROXY=localhost:8080 HTTPS_PROXY=http://localhost:8080 curl -k https://www.google.com\nthen close the mitmdump session\nopen the flow w/ mitmproxy:\n$ mitmproxy -n -r test.flow\ngo to the flow details section\nWhat is the expected behavior?\nShould see the SSL cert info. This info is available during a live mitmproxy session.\nUsing FlowReader programmatically should also expose the flow.server_conn.cert as well. It's empty.\nWhat went wrong?\nThere's no SSL info available when loading flows from a log.\nAny other comments?\nThe cert info does seem to be in the log if you manually inspect it. Doesn't seem to matter if you record the flow with mitmdump or mitmproxy\nMitmproxy Version: 0.16\nOperating System: OS X 10.11.4", "issue_status": "Closed", "issue_reporting_time": "2016-03-31T22:32:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1139": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1065", "issue_id": "#1065", "issue_summary": "Invalid Wheel filenames", "issue_description": "Member\nmhils commented on 31 Mar 2016\nSteps to reproduce the problem:\npip install https://snapshots.mitmproxy.org/mitmproxy-latest-py2-none-any.whl\nWhat is the expected behavior?\nIt installs.\nWhat went wrong?\nmitmproxy-latest-py2-none-any.whl is not a valid wheel filename.", "issue_status": "Closed", "issue_reporting_time": "2016-03-31T13:16:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1140": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1064", "issue_id": "#1064", "issue_summary": "Q: Why no mitmproxy-0.16.tar.gz", "issue_description": "petrrr commented on 29 Mar 2016\nI am realizing that for version 0.16, there is no tar.gz source distfile on PyPI any more.\nWhy is that?\nDoes this reflect an intended change in the way the software is published/distributed?\nSteps to reproduce the problem:\nN/A no real problem yet.\nWhat is the expected behavior?\nMacPorts so far used these tar.gz distfiles from PyPI to install mitmproxy. So we would need to understand if these will be published there in future.\nWhat went wrong?\nN/A\nAny other comments?\nI would need to understand the background, of the missing distfile (the one we use for installation), so that we can appropriately solve the issue with upgrading mitmproxy to 0.16. in a way that it works in future. TNX!\nMitmproxy Version: 0.15 vs. 0.16\nOperating System: OS X (Macports)", "issue_status": "Closed", "issue_reporting_time": "2016-03-29T15:46:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1141": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1063", "issue_id": "#1063", "issue_summary": "mitmproxy crash", "issue_description": "orenfine commented on 29 Mar 2016\nSteps to reproduce the problem:\nconnection is killed (inline script)\nwhen looking at the connection details (rightmost) tab - mitmproxy crashes!\nWhat is the expected behavior?\nShow details screen, or blank screen\nWhat went wrong?\nHere's the traceback:\nmitmproxy has crashed!\nPlease lodge a bug report at:\n        https://github.com/mitmproxy/mitmproxy\nShutting down...\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 11, in <module>\n    sys.exit(mitmproxy())\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/main.py\", line 70, in mitmproxy\n    m.run()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 508, in run\n    self.shutdown()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 679, in shutdown\n    self.state.killall(self)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 623, in killall\n    self.flows.kill_all(master)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 535, in kill_all\n    f.kill(master)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/models/flow.py\", line 151, in kill\n    master.handle_error(self)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 725, in handle_error\n    self.process_flow(f)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 716, in process_flow\n    signals.flow_change.send(self, flow = f)\n  File \"/usr/local/lib/python2.7/dist-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 169, in sig_flow_change\n    self.show()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/tabs.py\", line 67, in show\n    body = self.tabs[self.tab_offset][1](),\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 165, in view_details\n    return flowdetailview.flowdetails(self.state, self.flow)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowdetailview.py\", line 25, in flowdetails\n    [\"Address\", \"%s:%s\" % sc.address()],\nTypeError: 'NoneType' object is not callable\nAny other comments?\nMitmproxy Version: 0.16\nOperating System: Ubuntu 15.10", "issue_status": "Closed", "issue_reporting_time": "2016-03-29T06:27:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1142": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1062", "issue_id": "#1062", "issue_summary": "Crash when exporting flow with null bytes (pyperclip's gtk implementation)", "issue_description": "Contributor\ndequis commented on 29 Mar 2016\nSteps to reproduce the problem:\nHave pygtk installed\nHave request flow with nulls somewhere (such as compressed post data)\nPress 'E' and 'c'\nAcquire exception\nWhat is the expected behavior?\nCatch the error, pokemon-style.\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 498, in run\n    self.loop.run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/window.py\", line 39, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/lib/python2.7/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 126, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 81, in keypress\n    self.prompt_execute(k)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 106, in prompt_execute\n    msg = p(txt, *args)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/common.py\", line 291, in export_prompt\n    copy_to_clipboard_or_prompt(exporters[k](flow))\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/common.py\", line 304, in copy_to_clipboard_or_prompt\n    pyperclip.copy(toclip)\n  File \"/usr/lib/python2.7/site-packages/pyperclip/clipboards.py\", line 33, in copy_gtk\n    cb.set_text(text)\nTypeError: Gtk.Clipboard.set_text() argument 1 must be string without null bytes, not str\nAny other comments?\nI can't actually get this to copy anything at all to the clipboard but I'm not sure who to blame yet - pyperclip seems to work in an interactive python shell but not in mitmproxy, and a previous version of pyperclip that preferred \"xclip\" didn't work either.\nI'd prefer it if this thing didn't touch my clipboard at all, seems wrong for a console application to do that kind of thing. And this feature that sounded like it was about writing files, but #976 seems to deal with that.\nMitmproxy Version: 0.16\nOperating System: linux", "issue_status": "Closed", "issue_reporting_time": "2016-03-29T05:44:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1143": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1061", "issue_id": "#1061", "issue_summary": "mitmdump crashes when delaying recorded responses with the kill flag", "issue_description": "christofferqa commented on 29 Mar 2016\nSteps to reproduce the problem:\nRecord the server responses of some website: mitmdump -w rec.out --anticache\nReplay the server responses with the --kill flag and a script that delays one or more responses without blocking: mitmdump -s script.py -S rec.out --kill --no-pop\nscript.py:\nimport re\nimport time\n\nfrom mitmproxy.script import concurrent\n\ndelayUrl=\".*/some_url.js\"\n\n@concurrent\ndef request(context, flow):\n  if re.match(delayUrl, flow.request.url):\n    print('delay request: %s%s' % (flow.request.host, flow.request.path))\n    time.sleep(5)\n  print('start request: %s%s' % (flow.request.host, flow.request.path))\n\ndef response(context, flow):\n  if flow.error:\n    print('Error: ' + str(flow.error))\nWhat is the expected behavior?\nThe server responses are replayed, the responses matched by the delayUrl pattern are delayed by 5s, and responses not found in the recording are killed.\nWhat went wrong?\nThe script crashes:\nError: Connection killed\nTraceback (most recent call last):\n  File \"/home/christofferqa/mitmproxy/venv/bin/mitmdump\", line 9, in <module>\n    load_entry_point('mitmproxy', 'console_scripts', 'mitmdump')()\n  File \"/home/christofferqa/mitmproxy/mitmproxy/main.py\", line 102, in mitmdump\n    master.run()\n  File \"/home/christofferqa/mitmproxy/mitmproxy/dump.py\", line 354, in run\n    return flow.FlowMaster.run(self)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/controller.py\", line 128, in run\n    self.tick(self.masterq, 0.1)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/flow.py\", line 828, in tick\n    return super(FlowMaster, self).tick(q, timeout)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/controller.py\", line 113, in tick\n    self.handle(*msg)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/controller.py\", line 135, in handle\n    m(obj)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/dump.py\", line 337, in handle_response\n    self._process_flow(f)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/dump.py\", line 321, in _process_flow\n    self.state.delete_flow(f)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/flow.py\", line 584, in delete_flow\n    self.flows._remove(f)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/flow.py\", line 496, in _remove\n    self._list.remove(f)\nValueError: list.remove(x): x not in list\nTraceback (most recent call last):\n  File \"/home/christofferqa/mitmproxy/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\nTypeError: 'NoneType' object is not callable\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n----------------------------------------\nError in processing of request from 127.0.0.1:41084\nTraceback (most recent call last):\n  File \"/home/christofferqa/mitmproxy/netlib/tcp.py\", line 854, in connection_thread\n    self.handle_client_connection(connection, client_address)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/proxy/server.py\", line 64, in handle_client_connection\n    h.handle()\n  File \"/home/christofferqa/mitmproxy/mitmproxy/proxy/server.py\", line 152, in handle\n    self.channel.tell(\"clientdisconnect\", root_layer)\n  File \"/home/christofferqa/mitmproxy/mitmproxy/controller.py\", line 68, in tell\n    m.reply = DummyReply()\nAttributeError: 'NoneType' object has no attribute 'reply'\nMitmproxy Version: master (0.17)\nOperating System: Ubuntu 14.04 LTS", "issue_status": "Closed", "issue_reporting_time": "2016-03-28T23:49:36Z", "fixed_by": "#1076", "pull_request_summary": "Fix #1061", "pull_request_description": "Member\nmhils commented on 3 Apr 2016\nThis PR fixes #1061 by setting flow.response instead of .replying and also cleans up the script ReplyProxy.", "pull_request_status": "Merged", "issue_fixed_time": "2016-04-03T08:19:44Z", "files_changed": [["13", "mitmproxy/flow.py"], ["27", "mitmproxy/script/concurrent.py"]]}, "1144": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1060", "issue_id": "#1060", "issue_summary": "Close the connection on the way back doesn't seem to work", "issue_description": "ksusasd commented on 28 Mar 2016\nHello everyone.\nI need to reproduce one bug, for this I need to close/drop the connection between client and server AFTER the server has processed the request. Is it possible to simulate such condition in mitmproxy? I am looking for something similar as drop in Fiddler.\nI have tried to achieve this using the following steps:\nCreate drop-conn.py script with the following content:\ndef response(context, flow): flow.client_conn.finish()\nStart mitmproxy with this script\nSend the request to mitmproxy\nBut it crashed:\nTraceback (most recent call last):\n  File \"/opt/mitmproxy/mitmproxy/proxy/server.py\", line 121, in handlest):\n    root_layer()2.168.99.101:9000/\n  File \"/opt/mitmproxy/mitmproxy/proxy/modes/reverse_proxy.py\", line 15, in __call__\n    layer()://192.168.99.101:9000/\n  File \"/opt/mitmproxy/mitmproxy/protocol/tls.py\", line 358, in __call__\n    layer()://192.168.99.101:9000/\n  File \"/opt/mitmproxy/mitmproxy/protocol/http1.py\", line 67, in __call__):\n    layer()://192.168.99.101:9000/\n  File \"/opt/mitmproxy/mitmproxy/protocol/http.py\", line 204, in __call__:\n    self.send_response_to_client(flow)\n  File \"/opt/mitmproxy/mitmproxy/protocol/http.py\", line 274, in send_response_to_client\n    self.send_response(flow.response)\n  File \"/opt/mitmproxy/mitmproxy/protocol/http.py\", line 55, in send_response\n    self.send_response_headers(response)\n  File \"/opt/mitmproxy/mitmproxy/protocol/http1.py\", line 39, in send_response_headers\n    self.client_conn.wfile.flush()\n  File \"/opt/mitmproxy/netlib/tcp.py\", line 168, in flush\n    self.o.flush()168.99.101:9000/wp-admin/install.php?step=1\n  File \"/usr/local/lib/python2.7/socket.py\", line 307, in flush\n    self._sock.sendall(view[write_offset:write_offset+buffer_size])\nAttributeError: 'NoneType' object has no attribute 'sendall'\n   GET http://192.168.99.101:9000/wp-admin/install.php?step=1\nmitmproxy has crashed! 2.17kB 111ms\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n       \u2190 200 text/html 3.19kB 1.13s\n   GET http://192.168.99.101:9000/wp-admin/install.php\n       \u2190 200 text/html 3.19kB 1.25s\n   GET http://192.168.99.101:9000/wp-admin/install.php\n       \u2190 200 text/html 3.19kB 1.18s\n  File \"/opt/mitmproxy/mitmproxy/protocol/http1.py\", line 39, in send_response_headers\n    self.client_conn.wfile.flush()s://github.com/mitmproxy/mitmproxy\n  File \"/opt/mitmproxy/netlib/tcp.py\", line 168, in flush\n    self.o.flush() report at: https://github.com/mitmproxy/mitmproxy\n  File \"/usr/local/lib/python2.7/socket.py\", line 307, in flush\n    self._sock.sendall(view[write_offset:write_offset+buffer_size])\nAttributeError: 'NoneType' object has no attribute 'sendall'\n\nmitmproxy has crashed!\nMitmproxy Version: 0.17\nOperating System: Docker", "issue_status": "Closed", "issue_reporting_time": "2016-03-28T10:29:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1145": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1059", "issue_id": "#1059", "issue_summary": "Does mitmproxy support broadcast", "issue_description": "smileyogurt commented on 28 Mar 2016\nI would like to use a proxy to modify the request URL, broad to different servers and finally assemble the requests to send back. Does mitmproxy support this feature?", "issue_status": "Closed", "issue_reporting_time": "2016-03-28T00:25:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1146": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1058", "issue_id": "#1058", "issue_summary": "mitmdump support timing info display?", "issue_description": "vigossjjj commented on 27 Mar 2016\nIs there a way to collect timing info (like mitmproxy's timing info) via mitmdump?", "issue_status": "Closed", "issue_reporting_time": "2016-03-27T14:44:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1147": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1056", "issue_id": "#1056", "issue_summary": "I cannot see any network flow caught!", "issue_description": "smileyogurt commented on 27 Mar 2016\nFollowed the steps and different config in the org website, but didn't see any network flow caught.\nAnother example from the website:\nconfig firefox + autoproxy by adding a new proxy \"mitmproxy 127.0.0.0 9001\"\nstart mitmproxy: mitmproxy -p 9001\non firefox, browse a website \"http://baidu.com\"\nAlso tried all other command lines, i.e. \"mitmproxy -R xxx\", nothing works for me. I never see mitmproxy catching anything. Please advice and help!\nMitmproxy Version: 0.16\nOperating System: mac", "issue_status": "Closed", "issue_reporting_time": "2016-03-27T01:20:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1148": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1054", "issue_id": "#1054", "issue_summary": "mitmproxyy cannot catch any networkflow!", "issue_description": "smileyogurt commented on 26 Mar 2016\nSteps to reproduce the problem:\nFollowed the steps in mitmproxy.org to install mitmproxy and cert\nconfig firefox + autoproxy by adding a new proxy \"mitmproxy 127.0.0.0 8080\"\nstart mitmproxy: mitmproxy -p 8080\non firefox, browse a website \"http://baidu.com\"\nWhat is the expected behavior?\nsuppose to see the network flow\nWhat went wrong?\nmitmproxy console has NO output at all.\nAny other comments?\nAlso tried all other command lines, i.e. \"mitmproxy -R xxx\", nothing works for me. I never see mitmproxy catching anything.\nPlease advice and help!\nMitmproxy Version: 0.16\nOperating System: mac", "issue_status": "Closed", "issue_reporting_time": "2016-03-25T23:31:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1149": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1053", "issue_id": "#1053", "issue_summary": "Regex matching seems kinda busted? (or perhaps just not intuitive)", "issue_description": "Member\ndwfreed commented on 25 Mar 2016\nSteps to reproduce the problem:\nCatch some requests that have JSON responses\nTry to limit your display to responses that contain an empty list\nWhat is the expected behavior?\nSomething like ~bs '\"key\"':[] should result in matching all bodies that contain \"key\":[]\nWhat went wrong?\nNo match\nAny other comments?\nI've tried several different variations of quoting and escaping the [] to no avail. My ultimate goal is to match bodies that contain the key, but whose value is not an empty list, and my responses are all minified JSON. (So my expression would be something like ~bs '\"key\"' & ! ~bs '\"key\":[]' which I've tried, and it tells me Invalid filter expression.)\nMitmproxy Version: 0.16\nOperating System: OS X Mavericks", "issue_status": "Closed", "issue_reporting_time": "2016-03-25T07:24:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1150": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1052", "issue_id": "#1052", "issue_summary": "Function `start` is never called in inline scripts", "issue_description": "Contributor\nFuzion24 commented on 25 Mar 2016\nusing this https://raw.githubusercontent.com/mitmproxy/mitmproxy/master/examples/stub.py on 0.16", "issue_status": "Closed", "issue_reporting_time": "2016-03-24T21:05:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1151": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1051", "issue_id": "#1051", "issue_summary": "testing for header value weird behavior", "issue_description": "internety commented on 24 Mar 2016\nSteps to reproduce the problem:\nbelow test is always false.\ndef request(ctx, flow):\n    if flow.request.headers.get( 'content-type' ) is \"application/x-amf\" :\nwhile this code works as expected:\ndef request(ctx, flow):\n    if flow.request.headers.get( 'content-type' ) == \"application/x-amf\" :\nMitmproxy Version:\n0.15\nOperating\nSystem: Linux potpaL 4.3.0-1-amd64 #1 SMP Debian 4.3.5-1 (2016-02-06) x86_64 GNU/Linux", "issue_status": "Closed", "issue_reporting_time": "2016-03-24T07:08:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1152": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1048", "issue_id": "#1048", "issue_summary": "Integrate with nodejs", "issue_description": "wuchangming commented on 21 Mar 2016\nmimtproxy is awesome, I hope I can integrate It into my node.js project, any suggestion?", "issue_status": "Closed", "issue_reporting_time": "2016-03-21T09:56:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1153": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1046", "issue_id": "#1046", "issue_summary": "Even though I ignored a domain I still get error", "issue_description": "medyagh commented on 21 Mar 2016\nhere is how I start my mitmdump\nsudo mitmdump -T --host -a ./outputs/output_2016_03_20__18_18_04.-s myscript.py --ignore app.snapchat.com --ignore graph.facebook.com. --ignore b-api.facebook.com. --ignore api.amazon.com. --verbose\nbut I still see this warning/errors in the mitmdump logs\n0.8.0.6:46465: clientconnect\n10.8.0.6:46465: Client Handshake failed. The client may not trust the proxy's certificate for graph.facebook.com.\n10.8.0.6:46465: clientdisconnect\n10.8.0.6:47153: clientconnect\n10.8.0.6:47153: ProtocolException(\"Error in HTTP connection: HttpSyntaxException('Bad HTTP request line: \\\\xc3\\\\x8e\\\\x8b\\\\x1d\\\\x13\\\\x0c\\\\xc8\\\\xd1&\\\\xfa\\\\x9f\\\\x1c\\\\x84\\\\xa4\\\\xcbIz\\\\x00[\\\\xc1\\\\xbb\\\\xa7\\\\xcbj\\\\x1dd\\\\xcb\\\\x1e6\\\\xbe\\\\xf0\\\\xc8\\\\x19\\\\r@\\\\x0b\\\\x15\\\\x9f\\\\x95\\\\xa1\\\\xf9\\\\xa4\\\\xc8W\\\\x1a\\\\xc2\\\\x85U\\\\xe383\\\\x19\\\\xbf\\\\x86\\\\xf0\\\\x10\\\\x1b\\\\x00\\\\xaeZ}\\\\xda\\\\xdcY\\\\xb5Q\\\\x90\\\\xf7\\\\x9a\\\\xb6V\\\\x0fs\\\\xe1W\\\\xf3\\\\xe5\\\\xda7jD\\\\xdbR\\\\xa0\\\\x06\\\\x05\\\\x14+qi;\\\\xaa\\\\x1daGp\\\\xc7\\\\xc0T\\\\xc4I\\\\t\\\\xa1',)\",)\n10.8.0.6:47153: clientdisconnect\n10.8.0.6:39978: clientdisconnect\n10.8.0.6:47154: clientconnect\n10.8.0.6:47154: ProtocolException('Error in HTTP connection: HttpSyntaxException(\"Bad HTTP request line: \\\\xee\\\\xc3\\\\x13A\\\\x976\\\\xfe\\\\xa7\\\\x06d\\\\xa2\\\\x03l\\\\xdb\\\\x8d\\\\x8b+\\\\x90\\\\x93\\\\xd2e\\\\xc3\\\\xc3\\\\xaf\\\\x06\\'H*A\\\\xeb\\\\xf9\\\\rU\\\\xda\\\\xec*|k\\\\x8f\\\\xb9\\\\x85\\\\xbe\\\\xb9[\\\\x8e^J\\\\x07\\\\x8e\\\\x10\\\\xf5\\\\xf9\\\\x1c\\\\xd83\\\\xb06E\\\\xe9\",)',)\n10.8.0.6:47154: clientdisconnect\n10.8.0.6:47155: clientconnect\n10.8.0.6:46469: clientconnect\n10.8.0.6:46469: Client Handshake failed. The client may not trust the proxy's certificate for graph.facebook.com.", "issue_status": "Closed", "issue_reporting_time": "2016-03-20T18:31:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1154": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1044", "issue_id": "#1044", "issue_summary": "When replay a request never timeout.", "issue_description": "ghost commented on 19 Mar 2016\nSteps to reproduce the problem:\nSend a request to server that server receive request but never respond;\nWhat is the expected behavior?\nAfter 60 seconds the request disconnected and throw Error;\nWhat went wrong?\nIt didn't timeout.\nAny other comments?\nit will be block my script runs.\nCould I set timeout when my script replay request?\nMitmproxy Version: mitmproxy 0.15\nOperating System: Arch Linux", "issue_status": "Closed", "issue_reporting_time": "2016-03-19T16:57:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1155": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1039", "issue_id": "#1039", "issue_summary": "crash report in v0.16", "issue_description": "r2evans commented on 17 Mar 2016\nSteps to reproduce the problem:\nmitmproxy (no arguments, localhost with port 8080)\nopenssl s_client -connect localhost:8080\nWhat is the expected behavior?\nThis should return info about the certificate.\nWhat went wrong?\nIt crashed:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/http_proxy.py\", line 11, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 345, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 427, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 424, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 433, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 566, in _find_cert\n    return self.config.certstore.get_cert(host, list(sans))\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/certutils.py\", line 341, in get_cert\n    sans),\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/certutils.py\", line 96, in dummy_cert\n    ipaddress.ip_address(i.decode(\"ascii\"))\nAttributeError: 'NoneType' object has no attribute 'decode'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nAny other comments?\nThanks for all of the hard work :-)\nMitmproxy Version: 0.16\nOperating System: Ubuntu 14.04.3", "issue_status": "Closed", "issue_reporting_time": "2016-03-17T13:50:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1156": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1038", "issue_id": "#1038", "issue_summary": "bug report:UnicodeDecodeError", "issue_description": "bigfool commented on 17 Mar 2016\n##### \nTraceback (most recent call last):\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/libmproxy/console/__init__.py\", line 498, in run\n    self.loop.run()\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/main_loop.py\", line 715, in _loop\n    alarm_callback()\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/main_loop.py\", line 164, in cb\n    callback(self, user_data)\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/libmproxy/console/__init__.py\", line 451, in ticker\n    self.loop.draw_screen()\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/main_loop.py\", line 578, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/listbox.py\", line 457, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/urwid/listbox.py\", line 402, in calculate_visible\n    next, pos = self.body.get_next( pos )\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/libmproxy/console/flowlist.py\", line 298, in get_next\n    f = ConnectionItem(self.master, self.state, f, False) if f else None\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/libmproxy/console/flowlist.py\", line 112, in __init__\n    w = self.get_text()\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/libmproxy/console/flowlist.py\", line 120, in get_text\n    marked=self.state.flow_marked(self.flow)\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/libmproxy/console/common.py\", line 443, in format_flow\n    tuple(sorted(d.items())), focus, extended\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/libmproxy/utils.py\", line 119, in get\n    ret = gen(*args)\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/libmproxy/console/common.py\", line 195, in raw_format_flow\n    resp.append(fcol(f[\"resp_ctype\"], rc))\n  File \"/Users/qizhenfang/Library/Python/2.7/lib/python/site-packages/libmproxy/console/common.py\", line 112, in fcol\n    s = unicode(s)\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xb5 in position 1: ordinal not in range(128)\nMitmproxy Version: 0.16\nOperating System: OS X Yosemite 10.10.5", "issue_status": "Closed", "issue_reporting_time": "2016-03-17T02:00:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1157": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1037", "issue_id": "#1037", "issue_summary": "Splitting HTTP GET requests with mitmproxy", "issue_description": "jonathankua commented on 17 Mar 2016\nHi all,\nI'm not sure if this is the right place to ask for help. I'm new to mitmproxy and I'd like to explore mitmproxy as an option for splitting HTTP GET requests at the proxy level.\nThe idea is similar to that of \"download accelerators\", where the proxy takes one HTTP GET request (for a chunk of data) from the application/browser and split the request to multiple GET requests for \"sub-chunks\" of the file. Upon receiving the sub-chunks, the proxy then re-orders and combines them into one chunk and pass it on to the application.\nIs it possible for mitmproxy to do that? Does anyone has an existing script/library that can achieve this purpose?\nIf anyone can point me in the right direction, that would be much appreciated.\nThank you.\nRegards,\nJonathan", "issue_status": "Closed", "issue_reporting_time": "2016-03-17T01:30:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1158": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1036", "issue_id": "#1036", "issue_summary": "mitmdump uses high memory in long run", "issue_description": "medyagh commented on 17 Mar 2016 \u2022\nedited by dufferzafar\nSteps to reproduce the problem:\nrun mimtdump in regular proxy mode\npass traffic to it for a day\nWhat is the expected behavior?\nWhat went wrong?\nit used all memory and left only 17mb free memory in a 1GB memory VM, which only has mitmdump running on it.\nAny other comments?\nMitmproxy Version: 0.16\nOperating System:Ubuntu 14.04.3 LTS", "issue_status": "Closed", "issue_reporting_time": "2016-03-16T21:22:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1159": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1035", "issue_id": "#1035", "issue_summary": "Got ImportError(mitmproxy.models) when using example", "issue_description": "ZenXYZ commented on 17 Mar 2016\nSteps to reproduce the problem:\nversion:0.16 on ubuntu 14.04(new machine, clean install)\ninstall by pip, and download examples by git\nUse Transparent mode, intercepting traffic works fine.\nTry to use -s option with example provided but got error.(no mitmproxy.models module)\nWhat went wrong?\nGot this error:\n>>>mitmdump -T -s upsidedownternet.py\nmitmdump: Traceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/script/script.py\", line 66, in load\n    execfile(self.args[0], self.ns, self.ns)\n  File \"upsidedownternet.py\", line 3, in <module>\n    from mitmproxy.models import decoded\nImportError: No module named mitmproxy.models\nAny other comments?\nMitmproxy Version: 0.16\nOperating System: ubuntu 14.04", "issue_status": "Closed", "issue_reporting_time": "2016-03-16T21:21:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1160": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1033", "issue_id": "#1033", "issue_summary": "Response includes \"Transfer-Encoding: chunked\" and \"Content-Length\"", "issue_description": "gajus commented on 16 Mar 2016\nSteps to reproduce the problem:\nMake request to get http://m.cinemasgaumontpathe.com/cinemas/.\nGET /cinemas/ HTTP/1.1\nencoding: iso-8859-1\nhost: m.cinemasgaumontpathe.com\nConnection: close\nWhat is the expected behavior?\nExpected to see original headers, without Transfer-Encoding: chunked, e.g.\n$ curl -I http://m.cinemasgaumontpathe.com/cinemas/\nHTTP/1.1 200 OK\nServer: Apache\nPragma: no-cache\nLast-Modified: Wed, 16 Mar 2016 12:46:15 +0100\nContent-Type: text/html; charset=iso-8859-1\nCache-Control: no-cache, no-store\nDate: Wed, 16 Mar 2016 11:46:15 GMT\nConnection: keep-alive\nWhat went wrong?\nResponse includes Transfer-Encoding: chunked and Content-Length headers.\nHTTP/1.1 200 OK\nServer: Apache\nPragma: no-cache\nLast-Modified: Wed, 16 Mar 2016 12:46:55 +0100\nContent-Type: text/html; charset=iso-8859-1\nX-Akamai-Transformed: 9 5509 0 pmb=mRUM,1\nCache-Control: no-cache, no-store\nDate: Wed, 16 Mar 2016 11:46:55 GMT\nTransfer-Encoding: chunked\nConnection: close\nConnection: Transfer-Encoding\nVary: Accept-Encoding, User-Agent\ncontent-length: 33907\n\n8473\nAny other comments?\nChunked transfer encoding must not include Content-Length header (https://en.wikipedia.org/wiki/Chunked_transfer_encoding).\nRelated issue request/request#2091\nMitmproxy Version: v0.15\nOperating System: OSX v10.11.3", "issue_status": "Closed", "issue_reporting_time": "2016-03-16T11:54:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1161": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1031", "issue_id": "#1031", "issue_summary": "Try to edit the flow response Set-Cookie (mitmproxy has crashed!)", "issue_description": "ghost commented on 15 Mar 2016\nOpen mitmproxy\nA HTTP flow has Set-Cookie header through mitmproxy\nTry to edit the flow response Set-Cookie\n\u256d\u2500mindcat@mindcat-linux-pc ~  \n\u2570\u2500\u27a4  mitmproxy -p 8888 -s ~/mitmproxy/eleme.py \nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 500, in run\n    self.loop.run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/window.py\", line 38, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/lib/python2.7/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 124, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 80, in keypress\n    self.prompt_execute(k)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 105, in prompt_execute\n    msg = p(txt, *args)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/flowview.py\", line 400, in edit\n    message\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 559, in view_grideditor\n    ge.make_help()\n  File \"/usr/lib/python2.7/site-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 291, in sig_push_view_state\n    self.loop.draw_screen()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 578, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/usr/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/lib/python2.7/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/lib/python2.7/site-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/usr/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/lib/python2.7/site-packages/urwid/widget.py\", line 1751, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/usr/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/lib/python2.7/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/lib/python2.7/site-packages/urwid/listbox.py\", line 457, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/usr/lib/python2.7/site-packages/urwid/listbox.py\", line 339, in calculate_visible\n    self._set_focus_complete( (maxcol, maxrow), focus )\n  File \"/usr/lib/python2.7/site-packages/urwid/listbox.py\", line 704, in _set_focus_complete\n    (maxcol,maxrow), focus)\n  File \"/usr/lib/python2.7/site-packages/urwid/listbox.py\", line 674, in _set_focus_first_selectable\n    (maxcol, maxrow), focus=focus)\n  File \"/usr/lib/python2.7/site-packages/urwid/listbox.py\", line 342, in calculate_visible\n    focus_widget, focus_pos = self.body.get_focus()\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/grideditor.py\", line 292, in get_focus\n    self.lst[self.focus]\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/grideditor.py\", line 140, in __init__\n    w = self.editor.columns[i].text(v)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/grideditor.py\", line 71, in text\n    p = http_cookies._format_pairs(obj, sep=\"\\n\")\nNameError: global name 'http_cookies' is not defined\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...\nMitmproxy Version:\n\u256d\u2500mindcat@mindcat-linux-pc ~/workspace/wengdo/20160311  \n\u2570\u2500\u27a4  mitmproxy --version                                                                                                                                          1 \u21b5\nmitmproxy 0.15\nOperating System:\n\u256d\u2500mindcat@mindcat-linux-pc ~/workspace/wengdo/20160311  \n\u2570\u2500\u27a4  LC_ALL=C pacman -Ss mitm\ncommunity/mitmproxy 0.16-1 [installed: 0.15-3]\n    SSL-capable man-in-the-middle HTTP proxy\ncommunity/python2-netlib 0.16-1 [installed: 0.15.1-2]\n    A collection of network utilities used by pathod and mitmproxy\ncommunity/sslstrip 0.9-7\n    Python tool to hijack HTTPS connections during a MITM attack\n\u256d\u2500mindcat@mindcat-linux-pc ~/workspace/wengdo/20160311  \n\u2570\u2500\u27a4  uname -a\nLinux mindcat-linux-pc 4.4.1-pf #1 SMP PREEMPT Wed Jan 20 13:21:41 CST 2016 x86_64 GNU/Linux", "issue_status": "Closed", "issue_reporting_time": "2016-03-15T14:01:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1162": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1029", "issue_id": "#1029", "issue_summary": "SQLite Flow Storage Format", "issue_description": "Contributor\ndufferzafar commented on 13 Mar 2016\nWe currently use a plain text file as a flow storage format and dump the flows as typed netstrings.\nIt was proposed that we should switch to a SQLite database to store the flows.", "issue_status": "Closed", "issue_reporting_time": "2016-03-12T22:21:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1163": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1028", "issue_id": "#1028", "issue_summary": "mitmproxy segfaults when analyzing snapchat", "issue_description": "d135-1r43 commented on 13 Mar 2016\nSteps to reproduce the problem:\nStart mitmproxy on a Raspberry Pi (ARM)\nConnect an iPhone with Snapchat installed to that running mitmproxy\nStart Snapchat\nmitmproxy segfaults\nWhat is the expected behavior?\nNo seg fault.\nAny other comments?\nDoes not happen when mitmproxy runs on OS X.\nMitmproxy Version: 0.10.1\nOperating System: Raspibian 8.0, Linux 4.1.18-v7+", "issue_status": "Closed", "issue_reporting_time": "2016-03-12T20:46:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1164": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1026", "issue_id": "#1026", "issue_summary": "ImportError: No module named mitmproxy", "issue_description": "joaolcorreia commented on 12 Mar 2016\nSteps to reproduce the problem:\nMac OSX, Python 2.7.11 :: Anaconda 2.4.0\n$ python\nPython 2.7.11 |Anaconda 2.4.0 (x86_64)| (default, Dec 6 2015, 18:57:58)\n[GCC 4.2.1 (Apple Inc. build 5577)] on darwin\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nAnaconda is brought to you by Continuum Analytics.\nPlease check out: http://continuum.io/thanks and https://anaconda.org\nimport mitmproxy\nTraceback (most recent call last):\nFile \"\", line 1, in\nImportError: No module named mitmproxy\nWhat is the expected behavior?\nI would expect the module to be installed\nWhat went wrong?\nI installed mitmproxy with sudo pip install mitmproxy and it installed successfully. The binary mitmproxy runs fine but python can't find the module. Any ideas?\nThanks\nJoao", "issue_status": "Closed", "issue_reporting_time": "2016-03-12T04:52:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1165": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1025", "issue_id": "#1025", "issue_summary": "mitmproxy/mitmdump fail on certain github API calls", "issue_description": "veselov commented on 12 Mar 2016\nSteps to reproduce the problem:\nrun mitmdump\nproxy through to github API (single call is enough)\nsee boom.\nThis is strange, but I can only see it when I successfully authenticate to github. I can't come up with a sample program and publish the values in the issue (I can provide them to you personally).\nWhat is the expected behavior?\nnot crash?\nWhat went wrong?\nMay be related to #169\n[vps@palladin]~$ mitmdump\n127.0.0.1:34144: clientconnect\nTraceback (most recent call last):\nFile \"/usr/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 121, in handle\nroot_layer()\nFile \"/usr/lib/python2.7/site-packages/libmproxy/proxy/modes/http_proxy.py\", line 11, in call\nlayer()\nFile \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 345, in call\nself._establish_tls_with_client_and_server()\nFile \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 427, in _establish_tls_with_client_and_server\nsix.reraise(*sys.exc_info())\nFile \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 424, in _establish_tls_with_client_and_server\nself._establish_tls_with_client()\nFile \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 433, in _establish_tls_with_client\ncert, key, chain_file = self._find_cert()\nFile \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 566, in _find_cert\nreturn self.config.certstore.get_cert(host, list(sans))\nFile \"/usr/lib/python2.7/site-packages/netlib/certutils.py\", line 341, in get_cert\nsans),\nFile \"/usr/lib/python2.7/site-packages/netlib/certutils.py\", line 96, in dummy_cert\nipaddress.ip_address(i.decode(\"ascii\"))\nAttributeError: 'NoneType' object has no attribute 'decode'\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n127.0.0.1:34144: Traceback (most recent call last):\nFile \"/usr/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 121, in handle\nroot_layer()\nFile \"/usr/lib/python2.7/site-packages/libmproxy/proxy/modes/http_proxy.py\", line 11, in call\nlayer()\nFile \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 345, in call\nself._establish_tls_with_client_and_server()\nFile \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 427, in _establish_tls_with_client_and_server\nsix.reraise(*sys.exc_info())\nFile \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 424, in _establish_tls_with_client_and_server\nself._establish_tls_with_client()\nFile \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 433, in _establish_tls_with_client\ncert, key, chain_file = self._find_cert()\nFile \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 566, in _find_cert\nreturn self.config.certstore.get_cert(host, list(sans))\nFile \"/usr/lib/python2.7/site-packages/netlib/certutils.py\", line 341, in get_cert\nsans),\nFile \"/usr/lib/python2.7/site-packages/netlib/certutils.py\", line 96, in dummy_cert\nipaddress.ip_address(i.decode(\"ascii\"))\nAttributeError: 'NoneType' object has no attribute 'decode'\n127.0.0.1:34144: clientdisconnect\nAny other comments?\nMitmproxy Version: 0.16\nOperating System: Linux, FC22", "issue_status": "Closed", "issue_reporting_time": "2016-03-11T22:26:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1166": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1024", "issue_id": "#1024", "issue_summary": "Cannot seem to find/replace in headers", "issue_description": "absane commented on 12 Mar 2016\nIn 0.13 I could find and replace \"foo\" with \"bar\" anywhere in the headers using the following snippet:\nflow.request.headers.replace(context.old, context.new)\nThe point was to make changes like this in headers:\nBefore:\nHost: foo.com\nCookie: SESSIONID=asdf; domain=asdffoo.com\nAfter:\nHost bar.com\nCookie: SESSIONID=asdf; domain=asdfbar.com\nHowever, this same snippet does not work in 0.16. Replacing \"foo\" with \"bar\" in the body appears to work fine, however.\nHas the functionality changed?\nThanks! :)", "issue_status": "Closed", "issue_reporting_time": "2016-03-11T21:24:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1167": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1021", "issue_id": "#1021", "issue_summary": "I found this error when i use Mitmproxy on Ubuntu15.04", "issue_description": "gagaxiaolong commented on 11 Mar 2016\nMitmproxy works fine on my Ubuntu15.04 last month,but today I found some problem:\nWhen I type sudo pip install mitmproxy,everything is OK:\nwechat@ubuntu:~$ sudo pip install mitmproxy\n[sudo] password for wechat:\nRequirement already satisfied (use --upgrade to upgrade): mitmproxy in /usr/local/lib/python2.7/dist-packages\nRequirement already satisfied (use --upgrade to upgrade): backports.ssl-match-hostname<3.6,>=3.5.0.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): blinker<1.5,>=1.4 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): click<7.0,>=6.2 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): certifi>=2015.11.20.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): configargparse<0.11,>=0.10 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): construct<2.6,>=2.5.2 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): cryptography<1.3,>=1.2.2 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): Flask<0.11,>=0.10.1 in ./.local/lib/python2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): h2<3.0,>=2.1.2 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): hpack<3.0,>=2.1.0 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): html2text==2016.1.8 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): hyperframe<4.0,>=3.2.0 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): Pillow<3.2,>=3.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): passlib<1.7,>=1.6.5 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pyasn1<0.2,>=0.1.9 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pyOpenSSL<0.16,>=0.15.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pyparsing<2.2,>=2.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pyperclip<1.6,>=1.5.22 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): requests<2.10,>=2.9.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): six<1.11,>=1.10 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): tornado<4.4,>=4.3 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): urwid<1.4,>=1.3.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): watchdog<0.9,>=0.8.3 in /usr/local/lib/python2.7/dist-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): idna>=2.0 in /usr/local/lib/python2.7/dist-packages (from cryptography<1.3,>=1.2.2->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): setuptools>=1.0 in /usr/lib/python2.7/dist-packages (from cryptography<1.3,>=1.2.2->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): enum34 in /usr/local/lib/python2.7/dist-packages (from cryptography<1.3,>=1.2.2->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): ipaddress in /usr/local/lib/python2.7/dist-packages (from cryptography<1.3,>=1.2.2->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): cffi>=1.4.1 in /usr/local/lib/python2.7/dist-packages (from cryptography<1.3,>=1.2.2->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): Werkzeug>=0.7 in /usr/local/lib/python2.7/dist-packages (from Flask<0.11,>=0.10.1->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): Jinja2>=2.4 in /usr/local/lib/python2.7/dist-packages (from Flask<0.11,>=0.10.1->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): itsdangerous>=0.21 in /usr/local/lib/python2.7/dist-packages (from Flask<0.11,>=0.10.1->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): singledispatch in /usr/local/lib/python2.7/dist-packages (from tornado<4.4,>=4.3->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): backports-abc>=0.4 in /usr/local/lib/python2.7/dist-packages (from tornado<4.4,>=4.3->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): PyYAML>=3.10 in /usr/local/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): argh>=0.24.1 in /usr/local/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pathtools>=0.1.1 in /usr/local/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pycparser in /usr/local/lib/python2.7/dist-packages (from cffi>=1.4.1->cryptography<1.3,>=1.2.2->mitmproxy)\nCleaning up...\nBut when I use Mitmproxy, something is wrong:\nwechat@ubuntu:~$ mitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 9, in <module>\n    load_entry_point('mitmproxy==0.17', 'console_scripts', 'mitmproxy')()\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 521, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 2632, in load_entry_point\n    return ep.load()\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 2312, in load\n    return self.resolve()\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 2318, in resolve\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy/main.py\", line 6, in <module>\n    from netlib.version_check import check_pyopenssl_version, check_mitmproxy_version\nImportError: No module named netlib.version_check\nThe error is can't find the module named 'netlib.version_check',but in my system,netlib is already installed:\nwechat@ubuntu:~$ sudo pip2 install git+https://github.com/mitmproxy/netlib.git@master\nDownloading/unpacking git+https://github.com/mitmproxy/netlib.git@master\n  Cloning https://github.com/mitmproxy/netlib.git (to master) to /tmp/pip-Dwf0Lo-build\n  Running setup.py (path:/tmp/pip-Dwf0Lo-build/setup.py) egg_info for package from git+https://github.com/mitmproxy/netlib.git@master\n\n  Requirement already satisfied (use --upgrade to upgrade): netlib==0.17 from git+https://github.com/mitmproxy/netlib.git@master in /usr/local/lib/python2.7/dist-packages\nRequirement already satisfied (use --upgrade to upgrade): mitmproxy>=0.17 in /usr/local/lib/python2.7/dist-packages (from netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): backports.ssl-match-hostname<3.6,>=3.5.0.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): blinker<1.5,>=1.4 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): click<7.0,>=6.2 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): certifi>=2015.11.20.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): configargparse<0.11,>=0.10 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): construct<2.6,>=2.5.2 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): cryptography<1.3,>=1.2.2 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): Flask<0.11,>=0.10.1 in ./.local/lib/python2.7/site-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): h2<3.0,>=2.1.2 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): hpack<3.0,>=2.1.0 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): html2text==2016.1.8 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): hyperframe<4.0,>=3.2.0 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): Pillow<3.2,>=3.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): passlib<1.7,>=1.6.5 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): pyasn1<0.2,>=0.1.9 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): pyOpenSSL<0.16,>=0.15.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): pyparsing<2.2,>=2.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): pyperclip<1.6,>=1.5.22 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): requests<2.10,>=2.9.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): six<1.11,>=1.10 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): tornado<4.4,>=4.3 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): urwid<1.4,>=1.3.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): watchdog<0.9,>=0.8.3 in /usr/local/lib/python2.7/dist-packages (from mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): idna>=2.0 in /usr/local/lib/python2.7/dist-packages (from cryptography<1.3,>=1.2.2->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): setuptools>=1.0 in /usr/lib/python2.7/dist-packages (from cryptography<1.3,>=1.2.2->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): enum34 in /usr/local/lib/python2.7/dist-packages (from cryptography<1.3,>=1.2.2->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): ipaddress in /usr/local/lib/python2.7/dist-packages (from cryptography<1.3,>=1.2.2->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): cffi>=1.4.1 in /usr/local/lib/python2.7/dist-packages (from cryptography<1.3,>=1.2.2->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): Werkzeug>=0.7 in /usr/local/lib/python2.7/dist-packages (from Flask<0.11,>=0.10.1->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): Jinja2>=2.4 in /usr/local/lib/python2.7/dist-packages (from Flask<0.11,>=0.10.1->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): itsdangerous>=0.21 in /usr/local/lib/python2.7/dist-packages (from Flask<0.11,>=0.10.1->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): singledispatch in /usr/local/lib/python2.7/dist-packages (from tornado<4.4,>=4.3->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): backports-abc>=0.4 in /usr/local/lib/python2.7/dist-packages (from tornado<4.4,>=4.3->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): PyYAML>=3.10 in /usr/local/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): argh>=0.24.1 in /usr/local/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): pathtools>=0.1.1 in /usr/local/lib/python2.7/dist-packages (from watchdog<0.9,>=0.8.3->mitmproxy>=0.17->netlib==0.17)\nRequirement already satisfied (use --upgrade to upgrade): pycparser in /usr/local/lib/python2.7/dist-packages (from cffi>=1.4.1->cryptography<1.3,>=1.2.2->mitmproxy>=0.17->netlib==0.17)\nCleaning up...\nWhat can i do to fix this issue? THANKS very much!!", "issue_status": "Closed", "issue_reporting_time": "2016-03-11T02:16:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1168": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1018", "issue_id": "#1018", "issue_summary": "Editing cookies on an intercepted response crashes mitmproxy", "issue_description": "jtietema commented on 10 Mar 2016\nSteps to reproduce the problem:\nset an intercept filter\ntrigger a request that matches the filter\npress 'a' to make the request pass\npress to switch to the intercepted response\npress 'e' to edit the response\npress 'c' for editing cookies\nWhat is the expected behavior?\nIt allows me to modify the cookies\nWhat went wrong?\nIt crashes\nAny other comments?\nI installed through Homebrew, running Mac OS X 10.10.5\nMitmproxy version 0.16\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 498, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/window.py\", line 39, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 126, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 81, in keypress\n    self.prompt_execute(k)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 106, in prompt_execute\n    msg = p(txt, *args)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/flowview.py\", line 400, in edit\n    message\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 557, in view_grideditor\n    ge.make_help()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 298, in sig_push_view_state\n    self.loop.draw_screen()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 578, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/widget.py\", line 1751, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/listbox.py\", line 457, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/listbox.py\", line 339, in calculate_visible\n    self._set_focus_complete( (maxcol, maxrow), focus )\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/listbox.py\", line 704, in _set_focus_complete\n    (maxcol,maxrow), focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/listbox.py\", line 674, in _set_focus_first_selectable\n    (maxcol, maxrow), focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/listbox.py\", line 342, in calculate_visible\n    focus_widget, focus_pos = self.body.get_focus()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/grideditor.py\", line 297, in get_focus\n    self.lst[self.focus]\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/grideditor.py\", line 144, in __init__\n    w = self.editor.columns[i].text(v)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/grideditor.py\", line 72, in text\n    p = http_cookies._format_pairs(obj, sep=\"\\n\")\nNameError: global name 'http_cookies' is not defined\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2016-03-10T05:50:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1169": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1017", "issue_id": "#1017", "issue_summary": "intercept traffic on an OpenVpn Server?", "issue_description": "medyagh commented on 10 Mar 2016\nWhat is the expected behavior?\nCan we install mitmproxy on a openvpn server ? so it intercepts traffic to/from the OpenVpn Server?", "issue_status": "Closed", "issue_reporting_time": "2016-03-09T22:58:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1170": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1016", "issue_id": "#1016", "issue_summary": "export traffic to pcap file", "issue_description": "cauqp3ex commented on 9 Mar 2016\nfirst off all , i am sorry about my language .\ni try to sniffing https traffic using client certificate via mitmproxy.\ni want to show same traffic on wireshark but no way to export it to pcap file .\nis there any way to get a pcap file that contains https decrypted traffic through mitmproxy .", "issue_status": "Closed", "issue_reporting_time": "2016-03-09T17:14:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1171": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1010", "issue_id": "#1010", "issue_summary": "MitmProxy decrypt HTTPS not works", "issue_description": "Tomi9575 commented on 8 Mar 2016\nHello All,\nThank you for this tool, this is awesome !\nJust i want to decrypt HTTPS, but it's not work ...\nI capture well the https flow But it is NOT decrypted , I have placed the certificate into mozilla firefox ... how can I solve this problem ?\nthank you in advance.\nMitmproxy Version: 0.16\nOperating System: Ubuntu 14.04", "issue_status": "Closed", "issue_reporting_time": "2016-03-07T22:10:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1172": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1007", "issue_id": "#1007", "issue_summary": "Https connection to non-exisiting url has status code 200 instead of 502", "issue_description": "IchbinkeinReh commented on 7 Mar 2016\nSteps to reproduce the problem:\nRun mitmdump\nVisit some non-existing host with https (e.g https://abc123.org/) in browser that uses the mitmdump proxy\nWhat is the expected behavior?\nStatus code 502\nWhat went wrong?\nI get status code 200 with the following content:\n<html>\n            <head>\n                <title>502 Bad Gateway</title>\n            </head>\n            <body>ProtocolException('Server connection to abc123.org:443 failed: Error connecting to \"abc123.org\": [Errno 10061] Es konnte keine Verbindung hergestellt werden, da der Zielcomputer die Verbindung verweigerte',)</body>\n        </html>\nWhen i try to visit a non-existing host with http (e.g. https://abc123.org/) everything works as expected. I get status code 502 with the same content as above.\nMitmproxy Version: 0.16\nOperating System: Windows 10 64bit", "issue_status": "Closed", "issue_reporting_time": "2016-03-07T05:27:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1173": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1005", "issue_id": "#1005", "issue_summary": "mitmproxy crashes in following mode with filters that remove items from the display based on server response", "issue_description": "Member\ndwfreed commented on 7 Mar 2016\nSteps to reproduce the problem:\nSet a display filter that specifies things that should not be displayed based on server response (eg \"! ~bs foobar\")\nSwitch to following mode\nSend request\nWhat is the expected behavior?\nmitmproxy should either briefly show the request while waiting for the server response, or not show the request until it has the response.\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 498, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\n    alarm_callback()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 164, in cb\n    callback(self, user_data)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 451, in ticker\n    self.loop.draw_screen()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 578, in draw_screen\n    canvas = self._topmost_widget.render(self.screen_size, focus=True)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/decoration.py\", line 225, in render\n    canv = self._original_widget.render(size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/listbox.py\", line 457, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/vendor/lib/python2.7/site-packages/urwid/listbox.py\", line 342, in calculate_visible\n    focus_widget, focus_pos = self.body.get_focus()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 288, in get_focus\n    f, i = self.state.get_focus()\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 69, in get_focus\n    return self.view[self.focus], self.focus\n  File \"/usr/local/Cellar/mitmproxy/0.16/libexec/lib/python2.7/site-packages/libmproxy/flow.py\", line 383, in __getitem__\n    return self._list[item]\nIndexError: list index out of range\nAny other comments?\nThis only applies when using ! on a filter that depends on server response (eg ~bs, or ( ~s & ~b )) without any other part of the filter depending on the existence of the server response (eg ! ~bs without an & ~s).\nMitmproxy Version: 0.16 (from Homebrew)\nOperating System: OS X 10.9, Python 2.7.5", "issue_status": "Closed", "issue_reporting_time": "2016-03-06T20:57:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1174": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1003", "issue_id": "#1003", "issue_summary": "Support sending the eventlog to a file by cmdline option", "issue_description": "Member\ndwfreed commented on 6 Mar 2016\nI'd like to be able to send the eventlog to a file using a cmdline option. My usecase is running mitmdump as a service on my Linux router in transparent mode. Services should not write to stdout/stderr, and what I'll be using to daemonize mitmdump will close stdout/stderr before executing mitmdump anyway. Even running mitmdump in quiet mode prints errors from the eventlog to the console.", "issue_status": "Closed", "issue_reporting_time": "2016-03-06T05:27:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1175": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1002", "issue_id": "#1002", "issue_summary": "Support reading from flow files continuously", "issue_description": "Member\ndwfreed commented on 6 Mar 2016\nBasically like tail -f file, keep trying to read from the specified flow file periodically. This would allow you to do things like have mitmdump running on one machine outputting to a flow file, and mitmproxy reading that flow file on another machine. Especially useful when running mitmdump as a service on a Linux router in transparent mode, with iptables rules to control which hosts get sent through the proxy (which is my intended usecase).", "issue_status": "Closed", "issue_reporting_time": "2016-03-06T04:41:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1176": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1001", "issue_id": "#1001", "issue_summary": "Combine mitmproxy & pathod docs", "issue_description": "Member\nKriechi commented on 5 Mar 2016\nSince both projects merged, and also the repository structure has changed significantly, it would be a good idea to merge the documentation as well. This means taking the pathod docs and add them as a part to the mitmproxy docs. Some parts might be redundant and can be removed. I think the interactive pathod/pathoc language preview feature can be replace entirely by a more extensive example section. Also the links in the README can be fixed after this.\nThe website pathod.net should then be a redirect to the mitmproxy documentation. (@cortesi)\n1", "issue_status": "Closed", "issue_reporting_time": "2016-03-05T08:30:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1177": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1000", "issue_id": "#1000", "issue_summary": "Error in py.test (gaierror)", "issue_description": "ZenXYZ commented on 4 Mar 2016\nSteps to reproduce the problem:\n1.I run MINT 17.3 in VMware fusion, and install mitmproxy by pip.(0.16)\n2.run py.test\nWhat went wrong?\n2.I got this error:\n__ ERROR at setup of TestServerIPv6.test_echo ___\n\ncls = <class 'test.netlib.test_tcp.TestServerIPv6'>\n\n    @classmethod\n    def setup_class(cls):\n        cls.q = queue.Queue()\n        s = cls.makeserver()\n\ntest/netlib/tservers.py:94: \n\ntest/netlib/tservers.py:101: in makeserver\n    return _TServer(cls.ssl, cls.q, cls.handler, cls.addr)\ntest/netlib/tservers.py:34: in __init__\n    tcp.TCPServer.__init__(self, addr)\nnetlib/tcp.py:834: in __init__\n    self.socket.bind(self.address())\nname = 'bind', self = <socket._socketobject object at 0x7f7498f212f0>, args = (('localhost', 0),)\n\n    def meth(name,self,*args):\n>       return getattr(self._sock,name)(*args)\nE       gaierror: [Errno -2] Name or service not known\n\n/usr/lib/python2.7/socket.py:224: gaierror\nAny other comments?\nMitmproxy Version:0.16\nOperating System: Linux ubuntu 14.04", "issue_status": "Closed", "issue_reporting_time": "2016-03-04T08:02:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1178": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/998", "issue_id": "#998", "issue_summary": "Mitmdump 0.16 stops working and only passes \"clientdisconnect\" errors after a couple of hundred requests", "issue_description": "KristofferOrum commented on 3 Mar 2016\nI am currently running mitmdump via a bash script (rerun.sh) with following parameters:\ngtimeout 30s mitmdump -p 8513 -T --host --anticache -s py.py --ignore :443$'\n./rerun.sh\nthis is quick and (very) dirty solution because mitmdump stops working and only passes \"clientdisconnect\" errors after a couple of hundred requests.\nthis is my py.py:\n# This function is run on each response from websites\ndef response(context, flow):\n    with decoded(flow.response):\n        if \"application/javascript\" == flow.response.headers.get('Content-Type', None) and \".js\" == flow.request.url[-3:]:\n            flow.response.content = flow.response.content + open('js.js', 'r').read()\nfrom libmproxy.models import decoded\nand I am getting a lot of these as well, that might or might not be related to the above issue, but perhaps might provide further clues as to what is up:\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n192.168.2.7:50851: Traceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy/modes/transparent_proxy.py\", line 21, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 272, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 130, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 338, in __call__\n    self.get_response_from_server(flow)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 469, in get_response_from_server\n    if flow.response.stream:\nAttributeError: 'NoneType' object has no attribute 'response'\nwhile the present workaround is somewhat underperforming it is serviceable for now as i have to deployed this Saturday. But there must be less \"hacky\" way of solving this issue long term? This is my first time submitting an issue on GitHUb so please bear with me if I am not 100% up to protocol.\nMitmproxy Version: mitmproxy-0.16-osx.tar.gz\nOperating System: OSX", "issue_status": "Closed", "issue_reporting_time": "2016-03-03T12:15:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1179": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/997", "issue_id": "#997", "issue_summary": "ImportError: No module named mitmproxy.flow", "issue_description": "fbi007130 commented on 3 Mar 2016\nSteps to reproduce the problem:\nI have already install mimproxy1.6\nmitmdump -s \"a.py aa bb\"\nmitmdump: Traceback (most recent call last):\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/script/script.py\", line 66, in load\nexecfile(self.args[0], self.ns, self.ns)\nFile \"a.py\", line 4, in\nfrom mitmproxy.flow import FlowWriter\nImportError: No module named mitmproxy.flow\ncat a.py\nimport random\nimport sys\nfrom mitmproxy.flow import FlowWriter\ndef start(context, argv):\nif len(argv) != 2:\nraise ValueError('Usage: -s \"flowriter.py filename\"')\nif argv[1] == \"-\":\n    f = sys.stdout\nelse:\n    f = open(argv[1], \"wb\")\ncontext.flow_writer = FlowWriter(f)\ndef response(context, flow):\nif random.choice([True, False]):\ncontext.flow_writer.add(flow)\nWhat is the expected behavior?\nWhat went wrong?\nAny other comments?\nMitmproxy Version:1.6\nOperating System:RaspberryPi@osmc", "issue_status": "Closed", "issue_reporting_time": "2016-03-03T10:10:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1180": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/996", "issue_id": "#996", "issue_summary": "[linux/ubuntu] Bad request: expected: relative, got: authority", "issue_description": "ahmetb commented on 3 Mar 2016\nSteps to reproduce the problem:\ncp ~/.mitmproxy/mitmproxy-ca-cert.pem /usr/share/ca-certificates/extra\nsudo dpkg-reconfigure ca-certificates (approve prompts)\nsysctl -w net.ipv4.ip_forward=1\necho 0 | sudo tee /proc/sys/net/ipv4/conf/*/send_redirects\nsudo iptables -t nat -A PREROUTING -i eth0 -p tcp -m multiport --dports 80,443,9000,9443 -j REDIRECT --to-port 8080\nStart as mitmproxy -T --host\ncurl -x localhost:8080 http://mitm.it --> bad request.\nWhat went wrong?\nMy intercepted queries are responded with Bad Request and in the event log I see:\n127.0.0.1:34824: clientconnect\n127.0.0.1:34824: ProtocolException(\"Error in HTTP connection: HttpException('Invalid HTTP request form (expected: relative, got: authority)',)\",)\n127.0.0.1:34824: clientdisconnect\nAny ideas what might be going wrong?\nMitmproxy Version: 0.15\nOperating System: Ubuntu Server 14.04.3 LTS", "issue_status": "Closed", "issue_reporting_time": "2016-03-03T05:59:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1181": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/987", "issue_id": "#987", "issue_summary": "har_extractor.py is broken", "issue_description": "colemickens commented on 1 Mar 2016\nThere are python problems with the har_extractor.py. It doesn't currently work on the stable release. Unfortunately I'm not good enough with python to provide a lot of additional details.\nThis was discussed in IRC, but I mostly wanted to file this so that others are aware of it's current state.", "issue_status": "Closed", "issue_reporting_time": "2016-02-29T22:02:45Z", "fixed_by": "#989", "pull_request_summary": "Improve HAR Extractor Script", "pull_request_description": "Contributor\ndufferzafar commented on 1 Mar 2016\nFixes #987.\nI've got the har_extractor script to run\nI just ran mitmdump -n -r small_dumpfile -s \"examples/har_extractor.py /tmp/out.har\" and kept on fixing errors that came up but I am not too sure about the script right now!\nThere's room for a lot of improvements (maybe not in this same PR):\nClean up the code - remove duplication, make pythonic etc.\nWrite unit tests\n- [ ] Test with real world stuff\n@colemickens maybe you could test this out with your set of flows?\n- [ ] Add some usage documentation\nI had to look here and there to figure out that har_extractor works with mitmdump & not mitmproxy (is that really true though?)", "pull_request_status": "Merged", "issue_fixed_time": "2016-03-04T18:55:52Z", "files_changed": [["0", "examples/__init__.py"], ["139", "examples/har_extractor.py"], ["78", "test/mitmproxy/data/har_extractor.har"], ["37", "test/mitmproxy/test_har_extractor.py"]]}, "1182": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/986", "issue_id": "#986", "issue_summary": "har_extractor.py usage example", "issue_description": "colemickens commented on 29 Feb 2016\nI don't know if I'm just looking in the wrong place, but I've been trying to convert a flow to a har for hours and am hitting road block after road block (largely due to python acquisition/package management). Now I have everything in place and I still don't really have any idea how to \"use\" har_extractor.py.", "issue_status": "Closed", "issue_reporting_time": "2016-02-28T23:57:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1183": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/985", "issue_id": "#985", "issue_summary": "Update examples to reflect new location of 'decoded'", "issue_description": "ironhokie commented on 28 Feb 2016\nSteps to reproduce the problem:\nSeveral current examples use \"from mitmproxy.models import decoded\"\nWe should use \"from libmproxy.models import decoded\"\nWhat is the expected behavior?\nWhat went wrong?\nAny other comments?\nMitmproxy Version: 0.16\nOperating System: CentOS", "issue_status": "Closed", "issue_reporting_time": "2016-02-27T21:58:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1184": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/984", "issue_id": "#984", "issue_summary": "dependency on pyperclip should be optional", "issue_description": "Contributor\njwilk commented on 28 Feb 2016\npyperclip has exuberant requirements, so I'd like to avoid installing it on my system. The mitmproxy code already handles missing pyperclip gracefully. Unfortunately, the setup script declares pyperclip as an absolute dependency, so the generated scripts (such as mitmdump) won't run without pyperclip installed. Please consider moving pyperclip from install_requires to extras_require.", "issue_status": "Closed", "issue_reporting_time": "2016-02-27T19:59:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1185": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/982", "issue_id": "#982", "issue_summary": "Ignore HTTP traffic", "issue_description": "arnau commented on 27 Feb 2016\nThis is question about --ignore I'm not able to solve by reading http://docs.mitmproxy.org/en/stable/features/passthrough.html\nSteps to reproduce the problem:\nRun mitmdump -I google.com -s foo.py (see below for foo.py's content).\nRun curl --proxy http://localhost:8080 http://google.com.\n# foo.py\ndef request(context, flow):\n  print(\"url\", flow.request.url)\nWhat is the expected behavior?\nI expect the script to not handle the request.\nWhat went wrong?\nThe requests is handled by the script. The STDOUT shows:\n127.0.0.1:65318: clientconnect\n('url', 'http://google.com/')\n127.0.0.1 GET http://google.com/\n << 302 Found 261B\n127.0.0.1:65318: clientdisconnect\nAny other comments?\nWhen I run the same but using HTTPS, the request is not handled by the script as I expected.\nRun mitmdump -I google.com -s foo.py.\nRun curl --proxy http://localhost:8080 https://google.com.\nResults in:\n127.0.0.1:65318: clientconnect\n127.0.0.1:65318: clientdisconnect\nIf --ignore is only intended to ignore HTTPS traffic, the question is: How do I ignore HTTP traffic too?\nThanks,\nMitmproxy Version: 0.16, 0.15\nOperating System: OSX 10.11\nPython: 2.7\nI tested it with a dockerised Debian 8, Python 2.7 and mitmproxy 0.15 as well with the same result.", "issue_status": "Closed", "issue_reporting_time": "2016-02-27T14:20:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1186": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/981", "issue_id": "#981", "issue_summary": "Add Icon for Binaries", "issue_description": "Member\nmhils commented on 27 Feb 2016\nThe OSX and Windows binaries we currently generate have the default PyInstaller Icon:\nIt would be super cool if we could have our mitmproxy icon there. The icon is in the mitmproxy.org repo (favicon version in ./src, raw logo in ./logo).", "issue_status": "Closed", "issue_reporting_time": "2016-02-27T13:23:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1187": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/979", "issue_id": "#979", "issue_summary": "mitmproxy crashed when the containing tmux pane was resized", "issue_description": "colemickens commented on 26 Feb 2016\nSteps to reproduce the problem:\nCapture some traffic\nInspect a request\nResize the tmux pane mitmproxy is running in (in my case I used the mouse to drag a split upward to make more room for mitmproxy running in the bottom pane)\nWhat is the expected behavior?\nmitmproxy resizes and continues running\nWhat went wrong?\nmitmproxy crashed\nTraceback (most recent call last):\n  File \"/nix/store/zaamgkrc3vf4dshiljdk1cnd54h0sm87-python2.7-mitmproxy-0.14.0/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 500, in run\n    self.loop.run()\n  File \"/nix/store/4hafqycx6l1rs357004x2cda5d3c7adf-python2.7-urwid-1.3.0/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/nix/store/4hafqycx6l1rs357004x2cda5d3c7adf-python2.7-urwid-1.3.0/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"/nix/store/4hafqycx6l1rs357004x2cda5d3c7adf-python2.7-urwid-1.3.0/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"/nix/store/4hafqycx6l1rs357004x2cda5d3c7adf-python2.7-urwid-1.3.0/lib/python2.7/site-packages/urwid/main_loop.py\", line 706, in _loop\n    self._entering_idle()\n  File \"/nix/store/4hafqycx6l1rs357004x2cda5d3c7adf-python2.7-urwid-1.3.0/lib/python2.7/site-packages/urwid/main_loop.py\", line 667, in _entering_idle\n    callback()\n  File \"/nix/store/4hafqycx6l1rs357004x2cda5d3c7adf-python2.7-urwid-1.3.0/lib/python2.7/site-packages/urwid/main_loop.py\", line 560, in entering_idle\n    self.draw_screen()\n  File \"/nix/store/4hafqycx6l1rs357004x2cda5d3c7adf-python2.7-urwid-1.3.0/lib/python2.7/site-packages/urwid/main_loop.py\", line 575, in draw_screen\n    self.screen.draw_screen(self.screen_size, canvas)\n  File \"/nix/store/4hafqycx6l1rs357004x2cda5d3c7adf-python2.7-urwid-1.3.0/lib/python2.7/site-packages/urwid/raw_display.py\", line 749, in draw_screen\n    if osb and osb[y] == row:\nIndexError: list index out of range\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n        https://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments?\nPossibly related: #497 (and from there: urwid/urwid#96)\nMitmproxy Version: 0.14.0 (I'll try to update and repro...)\nOperating System: NixOS", "issue_status": "Closed", "issue_reporting_time": "2016-02-25T21:03:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1188": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/977", "issue_id": "#977", "issue_summary": "./dev.sh script no longer works", "issue_description": "Contributor\nfimad commented on 24 Feb 2016\nSteps to reproduce the problem:\ngit clone https://github.com/mitmproxy/mitmproxy.git\ncd mitmproxy\n./dev.sh\nWhat is the expected behavior?\nA working virtual environment is created.\nWhat went wrong?\npip fails with the following error:\nNew python executable in ./venv/bin/python\nInstalling setuptools, pip...done.\nDownloading/unpacking pip from https://pypi.python.org/packages/py2.py3/p/pip/pip-8.0.2-py2.py3-none-any.whl#md5=2056f553d5b593d3a970296f229c1b79\n  Downloading pip-8.0.2-py2.py3-none-any.whl (1.2MB): 1.2MB downloaded\nInstalling collected packages: pip\n  Found existing installation: pip 1.5.4\n    Uninstalling pip:\n      Successfully uninstalled pip\nSuccessfully installed pip\nCleaning up...\nObtaining file:///home/willcoster/Code/mitmproxy (from -r requirements.txt (line 1))\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/home/willcoster/Code/mitmproxy/setup.py\", line 47, in <module>\n        \"netlib\", \"netlib.*\"\n    TypeError: find_packages() got an unexpected keyword argument 'include'\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /home/willcoster/Code/mitmproxy\nAny other comments?\nMitmproxy Version: 02ec4c8\nOperating System: Linux", "issue_status": "Closed", "issue_reporting_time": "2016-02-24T01:18:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1189": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/976", "issue_id": "#976", "issue_summary": "Flow Export Improvements", "issue_description": "Member\nmhils commented on 23 Feb 2016\nThere are currently three ways to export flows in mitmproxy:\nb \"save request/response body\"\nE \"export\"\nP \"copy request/response (content/headers) to clipboard\"\nThis is kind of confusing - in particular, there's a lot of overlap between E and P. Having b separately isn't too bad I think, this probably the most-popular action you want to do. I'd propose we do something like this:\nThoughts?\n1", "issue_status": "Closed", "issue_reporting_time": "2016-02-23T14:20:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1190": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/975", "issue_id": "#975", "issue_summary": "Undefined variable 'h2'", "issue_description": "Member\nmhils commented on 23 Feb 2016\nSteps to reproduce the problem:\nSurf on some HTTP2 website\n???\n127.0.0.1:36141: Traceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/mitmproxy/proxy/server.py\", line 121, in handle\n    root_layer()\n  File \"/media/sf_git/mitmproxy/mitmproxy/proxy/modes/http_proxy.py\", line 11,\nin __call__\n    layer()\n  File \"/media/sf_git/mitmproxy/mitmproxy/protocol/tls.py\", line 350, in\n__call__\n    layer()\n  File \"/media/sf_git/mitmproxy/mitmproxy/protocol/http1.py\", line 67, in\n__call__\n    layer()\n  File \"/media/sf_git/mitmproxy/mitmproxy/protocol/http.py\", line 168, in\n__call__\n    self.handle_regular_mode_connect(request)\n  File \"/media/sf_git/mitmproxy/mitmproxy/protocol/http.py\", line 256, in\nhandle_regular_mode_connect\n    layer()\n  File \"/media/sf_git/mitmproxy/mitmproxy/protocol/tls.py\", line 350, in\n__call__\n    layer()\n  File \"/media/sf_git/mitmproxy/mitmproxy/protocol/http2.py\", line 237, in\n__call__\n    if not self._handle_event(event, source_conn, other_conn, is_server):\n  File \"/media/sf_git/mitmproxy/mitmproxy/protocol/http2.py\", line 173, in\n_handle_event\n    other_conn.h2.safe_reset_stream(other_stream_id, event.error_code)\n  File \"/media/sf_git/mitmproxy/mitmproxy/protocol/http2.py\", line 49, in\nsafe_reset_stream\n    except h2.exceptions.StreamClosedError:\nNameError: global name 'h2' is not defined\nI really don't have a good way to reproduce it, sorry.\nWhile We're at it, let's replace from h2.events import * with explicit imports to get rid of the major bunch of landscape warnings here.", "issue_status": "Closed", "issue_reporting_time": "2016-02-23T13:58:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1191": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/973", "issue_id": "#973", "issue_summary": "Check pip version before setting up dev environment", "issue_description": "Member\nKriechi commented on 23 Feb 2016\nCurrently we require a rather new version of pip and setuptools - which is not available on old Ubuntu releases. We should add a check in the dev.sh script to display an error message if the pip version is outdated.\nref #972", "issue_status": "Closed", "issue_reporting_time": "2016-02-23T09:34:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1192": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/972", "issue_id": "#972", "issue_summary": "Error in setting dev environment", "issue_description": "anchitjain1234 commented on 23 Feb 2016\nSteps to reproduce the problem:\nDid steps as described in README, cloned the project and then used ./dev.sh. When dev.sh script executes it gives error TypeError: find_packages() got an unexpected keyword argument 'include'\nWhat is the expected behavior?\nVirtualenv should set up.\nWhat went wrong?\nUnexpected error while installing TypeError: find_packages() got an unexpected keyword argument 'include'\nAny other comments?\nFull error log\nNew python executable in ./venv/bin/python\nInstalling setuptools, pip...done.\nObtaining file:///home/ubuntu/workspace/mitmproxy (from -r requirements.txt (line 1))\n  Running setup.py (path:/home/ubuntu/workspace/mitmproxy/setup.py) egg_info for package from file:///home/ubuntu/workspace/mitmproxy\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"/home/ubuntu/workspace/mitmproxy/setup.py\", line 47, in <module>\n        \"netlib\", \"netlib.*\"\n    TypeError: find_packages() got an unexpected keyword argument 'include'\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 17, in <module>\n\n  File \"/home/ubuntu/workspace/mitmproxy/setup.py\", line 47, in <module>\n\n    \"netlib\", \"netlib.*\"\n\nTypeError: find_packages() got an unexpected keyword argument 'include'\n\n----------------------------------------\nCleaning up...\nCommand python setup.py egg_info failed with error code 1 in /home/ubuntu/workspace/mitmproxy\nStoring debug log for failure in /home/ubuntu/.pip/pip.log\nMitmproxy Version:\nOperating System: Ubuntu 14.04", "issue_status": "Closed", "issue_reporting_time": "2016-02-23T07:53:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1193": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/971", "issue_id": "#971", "issue_summary": "src/lxml/includes/etree_defs.h:14:31: fatal error: libxml/xmlversion.h: No such file or directory", "issue_description": "a1exus commented on 22 Feb 2016\nI'm trying to install mitmproxy by issuing sudo pip install mitmproxy command, however I'm getting following error:\n    gcc -pthread -fno-strict-aliasing -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -DNDEBUG -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -fPIC -Isrc/lxml/includes -I/usr/include/python2.7 -c src/lxml/lxml.etree.c -o build/temp.linux-x86_64-2.7/src/lxml/lxml.etree.o -w\n    In file included from src/lxml/lxml.etree.c:323:0:\n    src/lxml/includes/etree_defs.h:14:31: fatal error: libxml/xmlversion.h: No such file or directory\n     #include \"libxml/xmlversion.h\"\n                                   ^\n    compilation terminated.\n    Compile failed: command 'gcc' failed with exit status 1\n    creating tmp\n    cc -I/usr/include/libxml2 -c /tmp/xmlXPathInitZi3b5a.c -o tmp/xmlXPathInitZi3b5a.o\n    cc tmp/xmlXPathInitZi3b5a.o -lxml2 -o a.out\n    error: command 'gcc' failed with exit status 1\n\n    ----------------------------------------\n  Rolling back uninstall of lxml\nCommand \"/usr/bin/python -c \"import setuptools, tokenize;__file__='/tmp/pip-build-5F_Rd6/lxml/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-NR4uAf-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-5F_Rd6/lxml\n$ cat /etc/redhat-release \nCentOS Linux release 7.2.1511 (Core) \n$ rpm -q libxml2\nlibxml2-2.9.1-6.el7_2.2.x86_64\nlibxml2-2.9.1-6.el7_2.2.i686\n$ rpm -q libxml2-devel\nlibxml2-devel-2.9.1-6.el7_2.2.x86_64\n$ \nI tried to install libxml and libxml-devel, but that did not help ...", "issue_status": "Closed", "issue_reporting_time": "2016-02-22T17:26:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1194": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/968", "issue_id": "#968", "issue_summary": "Indent JSON data while exporting it as Python code", "issue_description": "Contributor\ndufferzafar commented on 21 Feb 2016\nI was testing out a web API and used the \"Export flow as Python code\" feature for the first time as user, and noticed an improvement.\nCurrently we just export the flow.request.body as is (independent of it's content type) but mitmproxy's interface is smart and renders different bodies differently (for eg. it indents JSON)\nI think we could add this indent behaviour while exporting things as code too.", "issue_status": "Closed", "issue_reporting_time": "2016-02-21T14:28:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1195": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/966", "issue_id": "#966", "issue_summary": "\"TypeError: 'NoneType' object is not callable\" crash", "issue_description": "cmckain15 commented on 20 Feb 2016\nSteps to reproduce the problem:\nIntercept all traffic (~i)\nOpen a GET request\nAttempt response edit\nWhat is the expected behavior?\nSomething that allows me to change the response code.\nWhat went wrong?\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 498, in run\n    self.loop.run()\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/window.py\", line 39, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 520, in keypress\n    key = super(self.__class__, self).keypress(size, key)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/tabs.py\", line 38, in keypress\n    self.change_tab((self.tab_offset + 1) % n)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/tabs.py\", line 33, in change_tab\n    self.show()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/tabs.py\", line 67, in show\n    body = self.tabs[self.tab_offset][1](),\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 165, in view_details\n    return flowdetailview.flowdetails(self.state, self.flow)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowdetailview.py\", line 25, in flowdetails\n    [\"Address\", \"%s:%s\" % sc.address()],\nTypeError: 'NoneType' object is not callable\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n        https://github.com/mitmproxy/mitmproxy\nShutting down...\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 11, in <module>\n    sys.exit(mitmproxy())\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/main.py\", line 70, in mitmproxy\n    m.run()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 508, in run\n    self.shutdown()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 679, in shutdown\n    self.state.killall(self)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 623, in killall\n    self.flows.kill_all(master)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 535, in kill_all\n    f.kill(master)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/models/flow.py\", line 151, in kill\n    master.handle_error(self)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 725, in handle_error\n    self.process_flow(f)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 716, in process_flow\n    signals.flow_change.send(self, flow = f)\n  File \"/usr/local/lib/python2.7/dist-packages/blinker/base.py\", line 267, in send\n    for receiver in self.receivers_for(sender)]\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 169, in sig_flow_change\n    self.show()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/tabs.py\", line 67, in show\n    body = self.tabs[self.tab_offset][1](),\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 165, in view_details\n    return flowdetailview.flowdetails(self.state, self.flow)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowdetailview.py\", line 25, in flowdetails\n    [\"Address\", \"%s:%s\" % sc.address()],\nTypeError: 'NoneType' object is not callable\nMitmproxy Version:\n----@vultr:~# mitmproxy --version mitmproxy 0.16\nOperating System: Ubuntu 15.10", "issue_status": "Closed", "issue_reporting_time": "2016-02-19T23:49:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1196": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/965", "issue_id": "#965", "issue_summary": "Export to Curl, Python, Raw fails silently.", "issue_description": "ffernand commented on 19 Feb 2016\nUsing the new Export options made available on mitmproxy 0.16 doesn't seem to work. It goes as far as providing the option to export either as a curl command, python code, or raw, but after the selection is made the prompt disappears.\nNo errors are evident and looking to the file system in the folder where mitmproxy was started doesn't show any new files where an exported command may have written to. Exiting mitmproxy doesn't show any errors or a stack trace.\nSteps to reproduce the problem:\nStart mitmproxy on the command line.\nRun the following curl command in a different terminal curl --proxy localhost:8080 http://www.google.com\nBack to the mitmproxy terminal, select the intercepted url and press E\nThe prompt Export (as curl command,as python code,as raw request)? shows up and pressing the letter c, p, or r does nothing.\nWhat is the expected behavior?\nUnsure; the feature is new and I haven't see it work correctly.\nWhat went wrong?\nNo opportunity to see the exported curl command.\nAny other comments?\n$ uname -a\nLinux personal 3.13.0-77-generic #121-Ubuntu SMP Wed Jan 20 10:50:42 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\n\n$ lsb_release -a\nNo LSB modules are available.\nDistributor ID: Ubuntu\nDescription:    Ubuntu 14.04.4 LTS\nRelease:    14.04\nCodename:   trusty\nMitmproxy Version: 0.16\nOperating System: Linux", "issue_status": "Closed", "issue_reporting_time": "2016-02-19T14:35:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1197": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/963", "issue_id": "#963", "issue_summary": "Simplify `.content`", "issue_description": "Member\nmhils commented on 18 Feb 2016\nOur HTTPRequest/HTTPResponse's .content attribute can currently be either\nNone, if we have not read the body yet (e.g. in the reponseheaders hook)\nCONTENT_MISSING=0, if we deliberately deleted the body\nb\"\", if we read an (empty) body.\nb\"some-content\", if we actually read some content.\nWhile the first three values intuitively evaluate to False, I feel the bytes/int/None heterogenity a bit confusing. I'd like to combine the first two cases, so that the type of this attribute can accurately be described as Optional[bytes]. This would fix #692 and make the code IMO easier to understand. We could also first deprecate CONTENT_MISSING gradually by setting it to None, and then remove it later on. @cortesi, would you be okay with this approach?", "issue_status": "Closed", "issue_reporting_time": "2016-02-18T10:51:22Z", "fixed_by": "#1055", "pull_request_summary": "Simplify '.content' by removing CONTENT_MISSING", "pull_request_description": "Contributor\nMatthewShao commented on 26 Mar 2016 \u2022\nedited\nfixes #963\nAs @mhils said, I did this in two step:\nsetting None to CONTENT_MISSING (to see if anything go wrong)\nreplacing CONTENT_MISSING with None\nThe relative comments and document have been updated too, hope I didn't miss anything.", "pull_request_status": "Merged", "issue_fixed_time": "2016-03-27T09:14:28Z", "files_changed": [["3", "docs/features/responsestreaming.rst"], ["7", "mitmproxy/console/common.py"], ["6", "mitmproxy/console/flowview.py"], ["5", "mitmproxy/dump.py"], ["4", "mitmproxy/flow.py"], ["10", "mitmproxy/models/http.py"], ["8", "mitmproxy/protocol/http.py"], ["5", "mitmproxy/web/app.py"], ["4", "netlib/http/__init__.py"], ["10", "netlib/http/http1/assemble.py"], ["2", "netlib/http/message.py"], ["7", "test/mitmproxy/test_dump.py"], ["6", "test/mitmproxy/test_flow.py"], ["6", "test/mitmproxy/test_server.py"], ["6", "test/netlib/http/http1/test_assemble.py"]]}, "1198": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/957", "issue_id": "#957", "issue_summary": "workaround for empty reponse header value", "issue_description": "rtoma commented on 18 Feb 2016\nHi, I hit a site that responds with a Pragma header without a value:\nPragma:\nMitmproxy 0.14.0 (from homebrew) is unable to handle this and throws this to the client:\n<html>\n            <head>\n                <title>502 Bad Gateway</title>\n            </head>\n            <body>HttpSyntaxException('Invalid headers',)</body>\nMy workaround in netlib/http/http1/read.py\n--- read.py.original    2016-02-17 20:57:32.000000000 +0100\n+++ netlib-http-http1-read.py   2016-02-17 20:59:46.000000000 +0100\n@@ -321,7 +321,7 @@ def _read_headers(rfile):\n             try:\n                 name, value = line.split(b\":\", 1)\n                 value = value.strip()\n-                if not name or not value:\n+                if not name:\n                     raise ValueError()\n                 ret.append([name, value])\n             except ValueError:\nymmv", "issue_status": "Closed", "issue_reporting_time": "2016-02-17T20:02:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1199": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/956", "issue_id": "#956", "issue_summary": "ServerConnection.source_address is now empty", "issue_description": "crutledge commented on 18 Feb 2016\nSteps to reproduce the problem:\nAccess a Flow object in handle_response or handle_request\nPrint source_address property from the Flow's server_conn (ServerConnection object)\nWhat is the expected behavior?\nShould see a display of tcp.Address when ServerConnection is not None and only ('', 0) when ServerConnection is None.\nWhat went wrong?\nOnly shows ('', 0) even when a valid ServerConnection is not None\nAny other comments?\nThis does not seem to be affecting ClientConnection.address at all.\nmitmproxy version: 0.16\nOperating System: OS X 10.10.5", "issue_status": "Closed", "issue_reporting_time": "2016-02-17T20:02:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1200": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/955", "issue_id": "#955", "issue_summary": "fix for missing openssl/aes.h when building on osx", "issue_description": "rtoma commented on 18 Feb 2016\nHi, just running ./dev.sh does not work on osx. It gives an error about clang and openssl/aes.h not found.\nThis can be fixed by setting vars before executing dev.sh:\n$ LDFLAGS=\"-L$(brew --prefix openssl)/lib\" CFLAGS=\"-I$(brew --prefix openssl)/include\" ./dev.sh", "issue_status": "Closed", "issue_reporting_time": "2016-02-17T19:43:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1201": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/953", "issue_id": "#953", "issue_summary": "Scripts set in config files are cleared when passing scripts on the command line", "issue_description": "Contributor\nfimad commented on 17 Feb 2016\nIn my config file I have several scripts that provide content views and do other miscellaneous things that I would like to apply to all my sessions. If I invoke mitmproxy with any scripts on the command line then all the scripts I defined in my config file are overridden and only the scripts on the command line are used.\nIs this the intended behavior? If it is, would it be possible to add a new flag for scripts that are not intended to be overridden by scripts passed on the command line?", "issue_status": "Closed", "issue_reporting_time": "2016-02-17T03:10:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1202": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/951", "issue_id": "#951", "issue_summary": "create_request() crashes mitmproxy", "issue_description": "crutledge commented on 17 Feb 2016\nNoticed this happened in v 0.16:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 498, in run\n    self.loop.run()\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 719, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python2.7/site-packages/urwid/raw_display.py\", line 393, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python2.7/site-packages/urwid/raw_display.py\", line 493, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 403, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 503, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/window.py\", line 39, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python2.7/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 126, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 83, in keypress\n    self.prompt_execute(self._w.get_edit_text())\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 106, in prompt_execute\n    msg = p(txt, *args)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 349, in new_request\n    f = self.master.create_request(method, scheme, host, port, path)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/flow.py\", line 831, in create_request\n    clientcert=None\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/models/connections.py\", line 65, in from_state\n    f.set_state(state)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/stateobject.py\", line 41, in set_state\n    setattr(self, attr, state.pop(attr))\nKeyError: 'timestamp_start'\nRecreate steps:\nbash> mitmproxy\nPress n, g (for get) then enter. Crashes back to command line with the above traceback.\nThis can also be recreated just by calling create_request() from FlowMaster directly.", "issue_status": "Closed", "issue_reporting_time": "2016-02-16T21:26:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1203": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/947", "issue_id": "#947", "issue_summary": "Finish repository merge", "issue_description": "Member\nmhils commented on 16 Feb 2016\nFrom #937:\nMark netlib and pathod repos as outdated.\nMigrate issues\nAdjust release script\nFigure out how to include LICENSE/CONTRIBUTING.md into source packages - maybe have one copy per repo again?\nFigure out what to do with Dockerfile and .dockerignore (mitmproxy)\nFigure out what to do with .jsbeautifyrc (pathod)\nFigure out what to do with old tags/branches\nFix pathod tests", "issue_status": "Closed", "issue_reporting_time": "2016-02-15T22:35:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1204": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/946", "issue_id": "#946", "issue_summary": "language.parse_request: incorrect conversion between double and single quotes.", "issue_description": "Member\nmhils commented on 16 Feb 2016\nFrom @mhils on February 7, 2014 4:3\nIn a nutshell,\nget:'http://127.0.0.1:52428/p/200:d0:h\"Date\"=\"Sun, 03 Mar 2013 04:00:00 GMT\"'\nis converted to\nget:\"http://127.0.0.1:52428/p/200:d0:h\"Date\"=\"Sun, 03 Mar 2013 04:00:00 GMT\"\"\nwhich doesn't work for obvious reasons.\nCode:\n>>> spec = 'get:\\'http://127.0.0.1:52428/p/200:d0:h\"Date\"=\"Sun, 03 Mar 2013 04:00:00 GMT\"\\''\n>>> language.parse_request(settings, spec)\nget:\"http://127.0.0.1:52428/p/200:d0:h\"Date\"=\"Sun, 03 Mar 2013 04:00:00 GMT\"\"\nCopied from original issue: mitmproxy/pathod#14", "issue_status": "Closed", "issue_reporting_time": "2016-02-15T22:30:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1205": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/945", "issue_id": "#945", "issue_summary": "get:\\' crashes pathoc.", "issue_description": "Member\nmhils commented on 16 Feb 2016\nFrom @mhils on February 7, 2014 3:48\nRaising a pp.ParseException in _ValueLiteral is probably enough,\nbut I'm not into the parsing code here.\n>>> p.request(\"get:\\\\'\")\n\nTraceback (most recent call last):\n  File \"\", line 1, in \n    p.request(\"get:\\\\'\")\n  File \"C:\\Users\\user\\git\\pathod\\libpathod\\pathoc.py\", line 70, in request\n    r = language.parse_request(self.settings, spec)\n  File \"C:\\Users\\user\\git\\pathod\\libpathod\\language.py\", line 991, in parse_request\n    return Request(Request.expr().parseString(s, parseAll=True))\n  File \"C:\\Users\\user\\git\\pathod\\libpathod\\contrib\\pyparsing.py\", line 1021, in parseString\n    loc, tokens = self._parse( instring, 0 )\n  File \"C:\\Users\\user\\git\\pathod\\libpathod\\contrib\\pyparsing.py\", line 894, in _parseNoCache\n    loc,tokens = self.parseImpl( instring, preloc, doActions )\n  File \"C:\\Users\\user\\git\\pathod\\libpathod\\contrib\\pyparsing.py\", line 2368, in parseImpl\n    loc, exprtokens = e._parse( instring, loc, doActions )\n  File \"C:\\Users\\user\\git\\pathod\\libpathod\\contrib\\pyparsing.py\", line 894, in _parseNoCache\n    loc,tokens = self.parseImpl( instring, preloc, doActions )\n  File \"C:\\Users\\user\\git\\pathod\\libpathod\\contrib\\pyparsing.py\", line 2478, in parseImpl\n    ret = e._parse( instring, loc, doActions )\n  File \"C:\\Users\\user\\git\\pathod\\libpathod\\contrib\\pyparsing.py\", line 921, in _parseNoCache\n    tokens = fn( instring, tokensStart, retTokens )\n  File \"C:\\Users\\user\\git\\pathod\\libpathod\\contrib\\pyparsing.py\", line 675, in wrapper\n    return func(*args[limit[0]:])\n  File \"C:\\Users\\user\\git\\pathod\\libpathod\\language.py\", line 255, in \n    return e.setParseAction(lambda x: klass(*x))\n  File \"C:\\Users\\user\\git\\pathod\\libpathod\\language.py\", line 232, in __init__\n    self.val = val.decode(\"string_escape\")\nValueError: Trailing \\ in string\nCopied from original issue: mitmproxy/pathod#13", "issue_status": "Closed", "issue_reporting_time": "2016-02-15T22:30:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1206": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/939", "issue_id": "#939", "issue_summary": "Check for expired CA certificate", "issue_description": "Member\nmhils commented on 16 Feb 2016\nFrom @mhils on November 4, 2015 10:37\nThe mitmproxy CA certificate is generated on the first start of mitmproxy. Due to /issues/815, the certificate is only valid for three years. CertStore.from_store should check if the CA certificate is still valid and raise an error if that is not the case (which we can then act on in mitmproxy).\nCopied from original issue: mitmproxy/netlib#101", "issue_status": "Closed", "issue_reporting_time": "2016-02-15T22:24:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1207": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/938", "issue_id": "#938", "issue_summary": "Host shields ourselves", "issue_description": "Member\nmhils commented on 15 Feb 2016\nshields.io is awesome, but we often get timeouts. @cortesi, I'd need you to point shields.mitmproxy.org to 46.101.230.67 - I have the shields server running already, all that's left is fixing the README then.", "issue_status": "Closed", "issue_reporting_time": "2016-02-15T16:40:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1208": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/936", "issue_id": "#936", "issue_summary": "Failing http2 tests in 0.16", "issue_description": "Contributor\nfelixonmars commented on 15 Feb 2016\nAll four tests in test_protocol_http2.py currently fail here. I have checked CI and they seem to be skipped.\n=================================== FAILURES ===================================\n____________________________ TestSimple.test_simple ____________________________\n\nself = <test.test_protocol_http2.TestSimple object at 0x7f5cfbc1d490>\n\n    def test_simple(self):\n        client, h2_conn = self._setup_connection()\n\n        self._send_request(client.wfile, h2_conn, headers=[\n            (':authority', \"127.0.0.1:%s\" % self.server.server.address.port),\n            (':method', 'GET'),\n            (':scheme', 'https'),\n            (':path', '/'),\n        ], body='my request body echoed back to me')\n\n        done = False\n        while not done:\n            try:\n                events = h2_conn.receive_data(b''.join(http2_read_raw_frame(client.rfile)))\n            except:\n                break\n            client.wfile.write(h2_conn.data_to_send())\n            client.wfile.flush()\n\n            for event in events:\n                if isinstance(event, h2.events.StreamEnded):\n                    done = True\n\n        h2_conn.close_connection()\n        client.wfile.write(h2_conn.data_to_send())\n        client.wfile.flush()\n\n>       assert len(self.master.state.flows) == 1\nE       assert 0 == 1\nE        +  where 0 = len(<libmproxy.flow.FlowStore object at 0x7f5cfbc11550>)\nE        +    where <libmproxy.flow.FlowStore object at 0x7f5cfbc11550> = <libmproxy.flow.State object at 0x7f5cfbc11350>.flows\nE        +      where <libmproxy.flow.State object at 0x7f5cfbc11350> = <test.tservers.TestMaster object at 0x7f5cfbc11490>.state\nE        +        where <test.tservers.TestMaster object at 0x7f5cfbc11490> = <test.test_protocol_http2.TestSimple object at 0x7f5cfbc1d490>.master\n\ntest/test_protocol_http2.py:201: AssertionError\n_______________________ TestWithBodies.test_with_bodies ________________________\n\nself = <test.test_protocol_http2.TestWithBodies object at 0x7f5cfbc11d50>\n\n    def test_with_bodies(self):\n        client, h2_conn = self._setup_connection()\n\n        self._send_request(\n            client.wfile,\n            h2_conn,\n            headers=[\n                (':authority', \"127.0.0.1:%s\" % self.server.server.address.port),\n                (':method', 'GET'),\n                (':scheme', 'https'),\n                (':path', '/'),\n            ],\n            body='foobar with request body',\n        )\n\n        done = False\n        while not done:\n            try:\n                events = h2_conn.receive_data(b''.join(http2_read_raw_frame(client.rfile)))\n            except:\n                break\n            client.wfile.write(h2_conn.data_to_send())\n            client.wfile.flush()\n\n            for event in events:\n                if isinstance(event, h2.events.StreamEnded):\n                    done = True\n\n        h2_conn.close_connection()\n        client.wfile.write(h2_conn.data_to_send())\n        client.wfile.flush()\n\n>       assert self.master.state.flows[0].response.body == b'foobar with request body'\n\ntest/test_protocol_http2.py:270:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <libmproxy.flow.FlowStore object at 0x7f5cfbcd6e90>, item = 0\n\n    def __getitem__(self, item):\n>       return self._list[item]\nE       IndexError: list index out of range\n\nlibmproxy/flow.py:383: IndexError\n______________________ TestPushPromise.test_push_promise _______________________\n\nself = <test.test_protocol_http2.TestPushPromise object at 0x7f5cfbc1de50>\n\n    def test_push_promise(self):\n        client, h2_conn = self._setup_connection()\n\n        self._send_request(client.wfile, h2_conn, stream_id=1, headers=[\n            (':authority', \"127.0.0.1:%s\" % self.server.server.address.port),\n            (':method', 'GET'),\n            (':scheme', 'https'),\n            (':path', '/'),\n            ('foo', 'bar')\n        ])\n\n        done = False\n        ended_streams = 0\n        pushed_streams = 0\n        responses = 0\n        while not done:\n            try:\n                raw = b''.join(http2_read_raw_frame(client.rfile))\n                events = h2_conn.receive_data(raw)\n            except:\n                break\n            client.wfile.write(h2_conn.data_to_send())\n            client.wfile.flush()\n\n            for event in events:\n                if isinstance(event, h2.events.StreamEnded):\n                    ended_streams += 1\n                elif isinstance(event, h2.events.PushedStreamReceived):\n                    pushed_streams += 1\n                elif isinstance(event, h2.events.ResponseReceived):\n                    responses += 1\n                if isinstance(event, h2.events.ConnectionTerminated):\n                    done = True\n\n            if responses == 3 and ended_streams == 3 and pushed_streams == 2:\n                done = True\n\n        h2_conn.close_connection()\n        client.wfile.write(h2_conn.data_to_send())\n        client.wfile.flush()\n\n>       assert ended_streams == 3\nE       assert 0 == 3\n\ntest/test_protocol_http2.py:372: AssertionError\n___________________ TestPushPromise.test_push_promise_reset ____________________\n\nself = <test.test_protocol_http2.TestPushPromise object at 0x7f5cfc030fd0>\n\n    def test_push_promise_reset(self):\n        client, h2_conn = self._setup_connection()\n\n        self._send_request(client.wfile, h2_conn, stream_id=1, headers=[\n            (':authority', \"127.0.0.1:%s\" % self.server.server.address.port),\n            (':method', 'GET'),\n            (':scheme', 'https'),\n            (':path', '/'),\n            ('foo', 'bar')\n        ])\n\n        done = False\n        ended_streams = 0\n        pushed_streams = 0\n        responses = 0\n        while not done:\n            try:\n                events = h2_conn.receive_data(b''.join(http2_read_raw_frame(client.rfile)))\n            except:\n                break\n            client.wfile.write(h2_conn.data_to_send())\n            client.wfile.flush()\n\n            for event in events:\n                if isinstance(event, h2.events.StreamEnded) and event.stream_id == 1:\n                    ended_streams += 1\n                elif isinstance(event, h2.events.PushedStreamReceived):\n                    pushed_streams += 1\n                    h2_conn.reset_stream(event.pushed_stream_id, error_code=0x8)\n                    client.wfile.write(h2_conn.data_to_send())\n                    client.wfile.flush()\n                elif isinstance(event, h2.events.ResponseReceived):\n                    responses += 1\n                if isinstance(event, h2.events.ConnectionTerminated):\n                    done = True\n\n            if responses >= 1 and ended_streams >= 1 and pushed_streams == 2:\n                done = True\n\n        h2_conn.close_connection()\n>       client.wfile.write(h2_conn.data_to_send())\n\ntest/test_protocol_http2.py:421:\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <netlib.tcp.Writer object at 0x7f5cfbaf1350>\nv = '\\x00\\x00\\x08\\x07\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00'\n\n    def write(self, v):\n        \"\"\"\n                May raise TcpDisconnect\n            \"\"\"\n        if v:\n            self.first_byte_timestamp = self.first_byte_timestamp or time.time()\n            try:\n                if hasattr(self.o, \"sendall\"):\n                    self.add_log(v)\n                    return self.o.sendall(v)\n                else:\n                    r = self.o.write(v)\n                    self.add_log(v[:r])\n                    return r\n            except (SSL.Error, socket.error) as e:\n>               raise TcpDisconnect(str(e))\nE               TcpDisconnect: (32, 'EPIPE')\n\n/usr/lib/python2.7/site-packages/netlib/tcp.py:183: TcpDisconnect\n==================== 4 failed, 308 passed in 44.22 seconds =====================", "issue_status": "Closed", "issue_reporting_time": "2016-02-15T00:36:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1209": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/934", "issue_id": "#934", "issue_summary": "Google Summer of Code 2016: Getting Started", "issue_description": "Member\nmhils commented on 14 Feb 2016\nmitmproxy is participating under the umbrella of the Honeynet project in the Google Summer of Code 2016. We have two exciting project proposals (here and here) and are open for other ideas as well.\nThis issue is targeted at potential GSoC students to help them getting started and write a strong proposal. If there are any questions, please don't hesistate to comment below\nPicking the right students for a Google Summer of Code is hard - we really want to encourage people to get involved into open source, but how do we determine who's best suited for a particular project? Here comes your part: Show us that you're super enthusiastic, autonomous and good at coding!\nMost importantly, your proposal should demonstrate two things: You have the ability to execute and you truly believe that mitmproxy is an interesting project to work on.\nDemonstrate that you are capable of fulfilling the project!\nWhile many of you probably have a good theoretical background from your university, you should show us that you can code as well:\nDo you have a cool/interesting side project or class project? Show it to us! Even better if it's open source and we can read the code!\nHave you ever contributed to an open source project? Show us what you did!\nNo previous projects you could show? Add a feature and/or fix a bug in mitmproxy!\nAny of these may suffice - if you are a django core contributor, we won't be questioning your coding skills.\nDemonstrate that you really want to contribute to mitmproxy!\nThe brick walls are there for a reason. The brick walls are not there to keep us out; the brick walls are there to give us a chance to show how badly we want something. The brick walls are there to stop the people who don't want it badly enough. They are there to stop the other people! [1]\nGoogle accepts a variety of mentoring organizations every year, each of them with multiple projects. Now, why do you want to work on mitmproxy specifically? We do not just want to hear a chorus of praise here (\"mitmproxy is a great tool\"). Instead, play around with it and tell us about your experiences:\nUse mitmproxy to analyze a popular Android or iOS app or anything else. There are many hidden treasures/security issues to be found [2]! Show us what you analyzed (screenshots), what you found, where mitmproxy was good/not good etc! :-)\nWrite a nice inline script that does something cool with a webpage! For example, we have an example script that turns all PNGs upside down (src). Try to come up with something creative :-)\nAgain, a good way to show that you're a good candidate is to fix a bug, propose or implement a feature, add something that was unclear to you to the docs, etc.\nGet in touch!\nWe hang out on Slack (#gsoc on http://slack.mitmproxy.org), IRC (#gsoc-honeynet at Freenode), there is the mailing list and of course you can just comment here. Try to ask us good questions!\nGood starting points for a contribution\nContributing to mitmproxy directly is an optional part of your proposal. If you can convince us by other means that you'd be a strong student (e.g. strong past experience with other open source projects), that's good, too.\nFix bugs or add features. Make sure to filter the issue list by \"good first contribution\", which includes suitable tasks. If you are tackling an issue, please leave a brief comment so that we don't have duplicated effort.\nAdd some docstrings to the code! Read a bit through mitmproxy or netlib, take a somewhat complex undocumented class/function, find out what it does and add a quick doc string explaining what it is.\nWrite a cool inline script!\nImprove the docs. If you're proficient in English, feel free to make our docs better! If you feel that your english isn't proficient enough, don't worry and try to focus on the other tasks.\nWeb UI: Add something useful! :-)\nMake sure to have a plan!\nFor your GSoC proposal (please use the template!), you need to write down a roadmap/timeline for your project. Think about which features you need to develop to accomplish your goal, split your project into subtasks and make sure that you'll end up with a viable timeline. Having roughly one dedicated task per week would be a good way to track the progress of the project as well. If you already identified potential issues/caveats for your endeavour, make sure to discuss them in the proposal as well!\nLast but not least: GSoC is fun. Enjoy it! :-)\nFAQ\n1. There's a skilled, hyper-motivated student already working hard on the project I want to apply for. Should I even bother to apply?\nYes! First, if we get two convincing proposals for one project idea, we will try to just take them both\u00b9. Second, if we cannot take you for some reason, we will actively introduce you to other projects that match your skills and interests after the application deadline. Don't worry about competition! :-)\n\u00b9) This requires that the project can be split (and extended) in a way that there are no critical interdependencies between the students. You will not get a project which depends on another student's work. This year, we'd be open to split both of our project ideas.\n2. I want to implement $MAJOR_FEATURE_X to show that I'm a super capable student!\nThis is great, but please please do not send us a single giant pull request! Please try to show us that you can split major tasks into small, (mostly) isolated parts. A PR is never to small for first time contributors.\n3. In the application template, there's a question about Windows, Unix or Mac OS X development experience relevant to your chosen project. What do you expect me to write there?\nThe application template is shared by all Honeynet projects. Some of our projects may require knowledge of low-level OS internals (e.g. Cuckoo Sandbox), but for mitmproxy it does not really matter. Just mention the OS you develop on and you're good.", "issue_status": "Closed", "issue_reporting_time": "2016-02-14T12:58:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1210": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/930", "issue_id": "#930", "issue_summary": "Use authentic certificates? (Not self signed)", "issue_description": "jschwalbe commented on 11 Feb 2016\nI stumbled across LetsEncrypt.org, they offer valid signed certificates for free, for your (sub)domain. Can this be used along with some dns spoofing to allow mp to not need to generate self signed certs? I'm thinking of those few apps that refuse to accept my self generated cert even if I accepted it earlier.\nSorry if this is not the correct forum to discuss this.\nThanms", "issue_status": "Closed", "issue_reporting_time": "2016-02-11T12:31:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1211": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/927", "issue_id": "#927", "issue_summary": "Improve snapshots.mitmproxy.org", "issue_description": "Member\nmhils commented on 10 Feb 2016\nLinking this here because most people won't see the release repo: We'd love to have help on https://github.com/mitmproxy/release/issues/3 - this is a really nice task for new contributors and I'm happy to help with getting things going.\nLet's continue further discussion in the linked repo!", "issue_status": "Closed", "issue_reporting_time": "2016-02-10T16:29:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1212": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/926", "issue_id": "#926", "issue_summary": "Question on analyzing saved flows", "issue_description": "joyofdata commented on 10 Feb 2016\nHello!\nFirst of all - great software! Just what I need - not being a networking expert leaves me with a number of issues though. It seems that this issues section is used a forum - so I ask here. If there is some IRC channel or Google group I missed - please let me know.\nOkay, so I capture traffic - works smoothly. Now I want to store the captured requests so I can analyze them tomorrow. Am I correct that the proper workflow is:\n[w]\nspecify file path \"~/mitmproxy_traffic\"\ntomorrow: mitmproxy -r ~/mitmproxy_traffic\nThis seems to work - but there are at least three aspects about it that make me wonder if this is the optimal way to do it:\nI cannot choose a file format (XML, CSV, ...) - would like to\nit seems that I cannot store the unencrypted traffic (which I see in the console) - would like to\nif I open the file with mitmproxy -r then mitmproxy is in active mode and new (completely unrelated) traffic is added to the loaded traffic - would not like that\nEssentially my question is - is it possible to solve the issues described in a,b and c or are those indicators at missing features?\nKind Regards\nRaffael", "issue_status": "Closed", "issue_reporting_time": "2016-02-10T15:48:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1213": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/925", "issue_id": "#925", "issue_summary": "Unexpected `flow.request.url` with `no-upstream-cert`", "issue_description": "arnau commented on 10 Feb 2016\nSteps to reproduce the problem:\n(1). start mitmproxy with no-upstream-cert and an inline script (see below for the script).\nmitmproxy --no-upstream-cert --script test.py\n# test.py\ndef request(context, flow):\n  print(flow.request.url == \"https://google.com/\")\n(2). run\ncurl -XGET https://google.com/ \\\n       --cacert ~/.mitmproxy/mitmproxy-ca-cert.pem \\\n       --proxy http://localhost:8080\nWhat is the expected behavior?\nThe printed result should be True (so flow.request.url should be https://google.com/).\nAlternatively, flow.request.pretty_url could have the original URL.\nWhat went wrong?\nThe result is False as flow.request.url == http://google.com:443.\nAny other comments?\nIn situations like https://example.org:8443 the resulting http://example.org:8443 is undistinguishable from a request to http://example.org:8443.\nIf it is not a bug (I'm not sure it is intended to be the way it is) it would be great to query the original requested URL.\nmitmproxy version: 0.15\nOperating System: OSX Yosemite 10.10.5\nPython: 2.7.11", "issue_status": "Closed", "issue_reporting_time": "2016-02-10T15:40:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1214": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/924", "issue_id": "#924", "issue_summary": "Installation issue with enum34 v1.1.2", "issue_description": "gfrench17 commented on 10 Feb 2016\nInstallation issue with enum34 on Mac OS X 10.11.3 (El Capitan)\nPython 2.7.10\nInstalled netlib and mitmproxy from master:\ncbee3bd..1af231f master -> origin/master Updating cbee3bd..1af231f [...] git pull mitmproxy... remote: Counting objects: 73, done. remote: Compressing objects: 100% (5/5), done. remote: Total 73 (delta 49), reused 49 (delta 49), pack-reused 19 Unpacking objects: 100% (73/73), done. From https://github.com/mitmproxy/mitmproxy 992842d..d5aa4f0 master -> origin/master Updating 992842d..d5aa4f0 [...]\nBuild process worked without any errors. But then:\n$ mitmdump Traceback (most recent call last): File \"/usr/local/bin/mitmdump\", line 5, in <module> from pkg_resources import load_entry_point File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 3141, in <module> @_call_aside File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 3127, in _call_aside f(*args, **kwargs) File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 3154, in _initialize_master_working_set working_set = WorkingSet._build_master() File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 640, in _build_master ws.require(__requires__) File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 941, in require needed = self.resolve(parse_requirements(requirements)) File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 828, in resolve raise DistributionNotFound(req, requirers) pkg_resources.DistributionNotFound: The 'enum34<1.2,>=1.1.2' distribution was not found and is required by mitmproxy\nJust to be sure, I uninstalled the current enum34 version. Interestingly, it is version 1.1.2 which should match the above condition >=1.1.2:\nsudo pip uninstall enum34 Uninstalling enum34: /Library/Python/2.7/site-packages/enum /Library/Python/2.7/site-packages/enum34-1.1.2-py2.7.egg-info Proceed (y/n)? y Successfully uninstalled enum34\nThinking that a simple re-build would be sufficient, I was wrong:\n$ sudo pip install netlib/ --upgrade $ sudo pip install mitmproxy/ --upgrade\nbut again, the same version 1.1.2 of enum43 was downloaded:\nDownloading/unpacking enum34 (from cryptography>=1.2.2,<1.3->netlib==0.16) Downloading enum34-1.1.2.tar.gz (46kB): 46kB downloaded Running setup.py (path:/private/tmp/pip_build_root/enum34/setup.py) egg_info for package enum34\nand after the build has finished, I ran into the same error:\n$ mitmdump Traceback (most recent call last): File \"/usr/local/bin/mitmdump\", line 5, in <module> from pkg_resources import load_entry_point File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 3141, in <module> @_call_aside File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 3127, in _call_aside f(*args, **kwargs) File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 3154, in _initialize_master_working_set working_set = WorkingSet._build_master() File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 642, in _build_master return cls._build_from_requirements(__requires__) File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 655, in _build_from_requirements dists = ws.resolve(reqs, Environment()) File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 833, in resolve raise VersionConflict(dist, req).with_context(dependent_req) pkg_resources.ContextualVersionConflict: (enum34 1.1.2 (/Library/Python/2.7/site-packages), Requirement.parse('enum34<1.1,>=1.0.4'), set(['h2']))\nJust my fault or maybe also popping up elsewhere?\nCheers\nGordon", "issue_status": "Closed", "issue_reporting_time": "2016-02-09T19:53:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1215": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/923", "issue_id": "#923", "issue_summary": "Install on centos 7.2", "issue_description": "gratchie commented on 9 Feb 2016\nTrying to install mitmproxy for Centos 7.2 and I get the following. python-devel and python-cffi is already installed.\n: pip install mitmproxy\n\n gcc -pthread -fno-strict-aliasing -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -DNDEBUG -O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector-strong --param=ssp-buffer-size=4 -grecord-gcc-switches -m64 -mtune=generic -D_GNU_SOURCE -fPIC -fwrapv -fPIC -DUSE__THREAD -I/usr/include/ffi -I/usr/include/libffi -I/usr/include/python2.7 -c c/_cffi_backend.c -o build/temp.linux-x86_64-2.7/c/_cffi_backend.o\n    c/_cffi_backend.c:15:17: fatal error: ffi.h: No such file or directory\n     #include <ffi.h>\n                     ^\n    compilation terminated.\n    error: command 'gcc' failed with exit status 1\n\n    ----------------------------------------\nCommand \"/usr/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-3NTYml/cffi/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-AjhAG0-record/install-record.txt --single-version-externally-managed --compile\" failed with error code 1 in /tmp/pip-build-3NTYml/cffi", "issue_status": "Closed", "issue_reporting_time": "2016-02-08T21:58:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1216": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/922", "issue_id": "#922", "issue_summary": "login.live.com crashing mitmproxy with bus error 10 on OS X", "issue_description": "mynamewasgone commented on 8 Feb 2016\nSteps to reproduce the problem:\nRun proxy on OS X El Capitan 10.11.4 Beta (pretty sure it happened with earlier stable versions)\n2.Set up proxy on IOS 9.3 (and again earlier versions)\nRequest https://www.bungie.net/en/User/SignIn/Xuid?bru=%252f\nmitmproxy crashes with Bus Error 10, and terminal is corrupted\nWhat is the expected behavior?\nNot crashing\nAny other comments?\nThe bungie url redirects to login.live.com to do an OAuth login, it looks like the redirect is received by safari, and the next request/response crashes mitmproxy\nmitmproxy version: 0.15", "issue_status": "Closed", "issue_reporting_time": "2016-02-08T18:14:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1217": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/920", "issue_id": "#920", "issue_summary": "HTTP2: StreamIDTooLowError", "issue_description": "Member\nmhils commented on 8 Feb 2016\nmitmproxy has crashed!\n127.0.0.1:53941: Traceback (most recent call last):\n  File \"c:\\users\\user\\git\\mitmproxy\\libmproxy\\proxy\\server.py\", line 121, in handle\n    root_layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\libmproxy\\proxy\\modes\\http_proxy.py\", line 11, in __call__\n    layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\libmproxy\\protocol\\tls.py\", line 350, in __call__\n    layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\libmproxy\\protocol\\http1.py\", line 70, in __call__\n    layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\libmproxy\\protocol\\http.py\", line 163, in __call__\n    self.handle_regular_mode_connect(request)\n  File \"c:\\users\\user\\git\\mitmproxy\\libmproxy\\protocol\\http.py\", line 252, in handle_regular_mode_connect\n    layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\libmproxy\\protocol\\tls.py\", line 350, in __call__\n    layer()\n  File \"c:\\users\\user\\git\\mitmproxy\\libmproxy\\protocol\\http2.py\", line 225, in __call__\n    events = source_conn.h2.receive_data(raw_frame)\n  File \"c:\\users\\user\\git\\hyper-h2\\h2\\connection.py\", line 893, in receive_data\n    events.extend(self._receive_frame(frame))\n  File \"c:\\users\\user\\git\\hyper-h2\\h2\\connection.py\", line 916, in _receive_frame\n    frames, events = self._frame_dispatch_table[frame.__class__](frame)\n  File \"c:\\users\\user\\git\\hyper-h2\\h2\\connection.py\", line 974, in _receive_headers_frame\n    frame.stream_id, AllowedStreamIDs(not self.client_side)\n  File \"c:\\users\\user\\git\\hyper-h2\\h2\\connection.py\", line 413, in _get_or_create_stream\n    return self._begin_new_stream(stream_id, allowed_ids)\n  File \"c:\\users\\user\\git\\hyper-h2\\h2\\connection.py\", line 359, in _begin_new_stream\n    raise StreamIDTooLowError(stream_id, highest_stream_id)\nStreamIDTooLowError: StreamIDTooLowError: 11 is lower than 13\nThis can be reproduced by running mitmdump --http2, opening https://http2.golang.org/reqinfo and then spamming Ctrl-R.", "issue_status": "Closed", "issue_reporting_time": "2016-02-07T22:15:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1218": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/918", "issue_id": "#918", "issue_summary": "Support for forward proxy with relative request form", "issue_description": "strtok commented on 6 Feb 2016\nAs far as I can tell, there's no way to put mitmproxy in a mode where it's\noperating as a forward proxy without transparent interception and expects\nto receive requests in relative form.\nIs there a way to override the relative vs. absolute check?", "issue_status": "Closed", "issue_reporting_time": "2016-02-06T00:01:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1219": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/915", "issue_id": "#915", "issue_summary": "proxy asks for authentication over LTE, but NOT over Wifi", "issue_description": "sethgw commented on 5 Feb 2016\nSteps to reproduce the problem:\ninstall mitmproxy\nturn off wifi on sprint device\nmake an http request\nWhat is the expected behavior?\nproxy should authenticate\nWhat went wrong?\nproxy won't authenticate over LTE on sprint iphones\nAny other comments?\nI have mitmproxy set up and working, but I'm experiencing strange issues. Each device has a VPN profile we install containing the certificate. On Att and Verizon phones there are no issues, but on Sprint phones the authentication only works over wifi. When wifi is turned off and the request goes over LTE the proxy doesn't authenticate.\nmitmproxy version: 0.13\nOperating System: ubuntu 14.04", "issue_status": "Closed", "issue_reporting_time": "2016-02-05T03:42:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1220": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/913", "issue_id": "#913", "issue_summary": "Crash report", "issue_description": "akosma commented on 4 Feb 2016\nSteps to reproduce the problem:\nJust launched mitmproxy, setup a mobile device to use it as proxy, started browsing the web on the device, this happened:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.15/libexec/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/Cellar/mitmproxy/0.15/libexec/lib/python2.7/site-packages/libmproxy/proxy/modes/http_proxy.py\", line 10, in __call__\n    layer()\n  File \"/usr/local/Cellar/mitmproxy/0.15/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 267, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/local/Cellar/mitmproxy/0.15/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 392, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"/usr/local/Cellar/mitmproxy/0.15/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 389, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/usr/local/Cellar/mitmproxy/0.15/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 398, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/usr/local/Cellar/mitmproxy/0.15/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 497, in _find_cert\n    host = self.server_conn.address.host\nAttributeError: 'NoneType' object has no attribute 'host'\nWhat is the expected behavior?\nNot crash.\nWhat went wrong?\nCrash.\nAny other comments?\nNope.\nmitmproxy version: 0.15\nOperating System: OS X El Capitan 10.11.3", "issue_status": "Closed", "issue_reporting_time": "2016-02-04T10:39:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1221": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/912", "issue_id": "#912", "issue_summary": "--port doesn't seem to work?", "issue_description": "colemickens commented on 4 Feb 2016\nmitmproxy --port 9000 and mitmproxy --port=9000 both don't seem to have the desired effect.\nhttp://docs.mitmproxy.org/en/stable/config.html contains the quote\nNote that --port is an option supported by all tools.", "issue_status": "Closed", "issue_reporting_time": "2016-02-03T21:50:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1222": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/911", "issue_id": "#911", "issue_summary": "Support for Interpreting Header Field Host", "issue_description": "Cnly commented on 3 Feb 2016\nHi,\nis it possible for mitmproxy to run in a mode where it reads the Host field in request headers and determine which server to send requests to?\nFor example, in the request\nGET / HTTP/1.1\nHost: bing.com     <-------\nConnection: keep-alive\nAccept: nothing\nUser-Agent: Apple II Chrome/0.46.0.2490.80 Safari/0.537.36\nAccept-Encoding: 7z\nAccept-Language: en-MARS\nCookie: toothpaste_flavour\nit could be seen that the host is bing.com. So mitmproxy would just need to send this request to bing.com, and then log and return the reply to the victim.", "issue_status": "Closed", "issue_reporting_time": "2016-02-03T10:30:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1223": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/910", "issue_id": "#910", "issue_summary": "Support protocols where the server sends the first message (e.g. IMAP)", "issue_description": "Kidlike commented on 3 Feb 2016\nIs it possible?\nI tried like this: mitmproxy --tcp imap_host, but no luck. Thunderbird was stuck in receiving emails for like 2 minutes. Usually it would take 10 seconds, so I didn't wait any longer.\nSo should I try some other mode? Or is it not possible at all ?\nThanks !", "issue_status": "Closed", "issue_reporting_time": "2016-02-03T10:00:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1224": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/908", "issue_id": "#908", "issue_summary": "ImportError: No module named frame", "issue_description": "gfrench17 commented on 2 Feb 2016\nGood morning,\nI fetch the newest updates of mitmproxy every couple of days, but yesterday night, I discovered the following error I never got before - is there anybody seeing the same issue or might it just be related to my own setup?\nThe installation went fine:\n$ sudo pip install mitmproxy/ --upgrade\n[...]\nInstalling collected packages: mitmproxy\nFound existing installation: mitmproxy 0.15\nUninstalling mitmproxy:\nSuccessfully uninstalled mitmproxy\nRunning setup.py install for mitmproxy\n[...]\nInstalling mitmdump script to /usr/local/bin\nSuccessfully installed mitmproxy\nCleaning up...\nBut then:\n$ mitmproxy\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 9, in\nload_entry_point('mitmproxy==0.15', 'console_scripts', 'mitmproxy')()\nFile \"/Library/Python/2.7/site-packages/pkg_resources/init.py\", line 547, in load_entry_point\nreturn get_distribution(dist).load_entry_point(group, name)\nFile \"/Library/Python/2.7/site-packages/pkg_resources/init.py\", line 2719, in load_entry_point\nreturn ep.load()\nFile \"/Library/Python/2.7/site-packages/pkg_resources/init.py\", line 2379, in load\nreturn self.resolve()\nFile \"/Library/Python/2.7/site-packages/pkg_resources/init.py\", line 2385, in resolve\nmodule = import(self.module_name, fromlist=['name'], level=0)\nFile \"/Library/Python/2.7/site-packages/libmproxy/main.py\", line 7, in\nfrom . import version, cmdline\nFile \"/Library/Python/2.7/site-packages/libmproxy/cmdline.py\", line 10, in\nfrom .proxy import config\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy/init.py\", line 3, in\nfrom .server import ProxyServer, DummyServer\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy/server.py\", line 12, in\nfrom ..protocol import Kill\nFile \"/Library/Python/2.7/site-packages/libmproxy/protocol/init.py\", line 30, in\nfrom .http import Http1Layer, UpstreamConnectLayer, Http2Layer\nFile \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 13, in\nfrom netlib.http.http2.frame import GoAwayFrame, PriorityFrame, WindowUpdateFrame\nImportError: No module named frame\nCheers\nGordon", "issue_status": "Closed", "issue_reporting_time": "2016-02-02T07:59:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1225": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/907", "issue_id": "#907", "issue_summary": "On Shutdown: flow is None and crashes", "issue_description": "woodenwatcher commented on 2 Feb 2016\nThe Version is 0.15. Crash info as follow:\n./mitmdump.run.sh: line 2: 14504 Segmentation fault      mitmdump -p 59873 > network\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy/modes/http_proxy.py\", line 10, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 272, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 130, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 323, in __call__\n    self.handle_regular_mode_connect(request)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 409, in handle_regular_mode_connect\n    layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 272, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 130, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 340, in __call__\n    self.get_response_from_server(flow)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 471, in get_response_from_server\n    if flow.response.stream:\nAttributeError: 'NoneType' object has no attribute 'response'", "issue_status": "Closed", "issue_reporting_time": "2016-02-02T03:33:50Z", "fixed_by": "#1085", "pull_request_summary": "cleanup mitmproxy.controller, raise Kill in Channel", "pull_request_description": "Member\nmhils commented on 14 Apr 2016\nThis PR refactors controller.Master into controller.Master and controller.ServerMaster and cleans up a couple of inconsistencies. Also, Channel now raises a Kill exception when the server shuts down, which fixes #907.\n@Kriechi: How understandable is mitmproxy.controller now? My primary focus was to make this more readable, did I succeed at least a bit? (You'd need to look at the file probably, the diff is fairly broken)", "pull_request_status": "Merged", "issue_fixed_time": "2016-04-14T19:03:29Z", "files_changed": [["8", "mitmproxy/console/__init__.py"], ["193", "mitmproxy/controller.py"], ["9", "mitmproxy/dump.py"], ["7", "mitmproxy/exceptions.py"], ["32", "mitmproxy/flow.py"], ["3", "mitmproxy/models/flow.py"], ["4", "mitmproxy/protocol/__init__.py"], ["7", "mitmproxy/protocol/base.py"], ["10", "mitmproxy/protocol/http.py"], ["15", "mitmproxy/protocol/http_replay.py"], ["17", "mitmproxy/proxy/server.py"], ["11", "mitmproxy/web/__init__.py"], ["110", "test/mitmproxy/test_controller.py"], ["9", "test/mitmproxy/test_flow.py"], ["2", "test/mitmproxy/test_proxy.py"], ["6", "test/mitmproxy/test_server.py"]]}, "1226": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/904", "issue_id": "#904", "issue_summary": "TypeError: initializer for ctype 'char *' must be a str or list or tuple, not unicode", "issue_description": "ahmetb commented on 30 Jan 2016\nI used brew install mitmproxy to install and I have v0.14.0.\nand I start it like mitmproxy --socks, then once I start intercepting traffic I immediately see this for all requests:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/proxy/modes/socks_proxy.py\", line 57, in __call__\n    layer()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 267, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 395, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 399, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 518, in _find_cert\n    return self.config.certstore.get_cert(host, list(sans))\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/netlib/certutils.py\", line 335, in get_cert\n    sans),\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/netlib/certutils.py\", line 109, in dummy_cert\n    [OpenSSL.crypto.X509Extension(b\"subjectAltName\", False, ss)])\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/OpenSSL/crypto.py\", line 651, in __init__\n    extension = _lib.X509V3_EXT_nconf(_ffi.NULL, ctx, type_name, value)\nTypeError: initializer for ctype 'char *' must be a str or list or tuple, not unicode", "issue_status": "Closed", "issue_reporting_time": "2016-01-30T02:28:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1227": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/903", "issue_id": "#903", "issue_summary": "mitmproxy 0.15 breaks python 2 scripts", "issue_description": "marinabilles commented on 29 Jan 2016\nI have the following python2 script to run with mitmproxy:\nprint \"This is an \" + \"error\"\nI use the following bash command:\nmitmdump -q --anticache -s ../script.py\nmitmproxy version 0.14 correctly prints out the string.\nmitmproxy version 0.15 gives me:\nmitmdump: Traceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/script/script.py\", line 65, in load\n    execfile(self.args[0], self.ns, self.ns)\n  File \"../script.py\", line 1\n    print \"This is an \" + \"error\"\n                      ^\nSyntaxError: invalid syntax", "issue_status": "Closed", "issue_reporting_time": "2016-01-29T09:58:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1228": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/902", "issue_id": "#902", "issue_summary": "HEAD requests always have Content-Length: 0", "issue_description": "testn commented on 28 Jan 2016\nHEAD requests always have Content-Length: 0 where mitm should show the actual content length.", "issue_status": "Closed", "issue_reporting_time": "2016-01-28T17:52:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1229": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/901", "issue_id": "#901", "issue_summary": "Unable to install", "issue_description": "krishnamani999 commented on 27 Jan 2016\nDownload error on https://pypi.python.org/simple/cffi/: [Errno 110] Connection timed out -- Some packages may not be found!\n    Couldn't find index page for 'cffi' (maybe misspelled?)\n    Download error on https://pypi.python.org/simple/: [Errno 110] Connection timed out -- Some packages may not be found!\n    No local packages or download links found for cffi>=1.1.0\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip_build_root/cryptography/setup.py\", line 318, in <module>\n        **keywords_with_side_effects(sys.argv)\n      File \"/usr/lib/python2.7/distutils/core.py\", line 111, in setup\n        _setup_distribution = dist = klass(attrs)\n      File \"/usr/lib/python2.7/dist-packages/setuptools/dist.py\", line 239, in __init__\n        self.fetch_build_eggs(attrs.pop('setup_requires'))\n      File \"/usr/lib/python2.7/dist-packages/setuptools/dist.py\", line 264, in fetch_build_eggs\n        replace_conflicting=True\n      File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 620, in resolve\n        dist = best[req.key] = env.best_match(req, ws, installer)\n      File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 858, in best_match\n        return self.obtain(req, installer) # try and download/install\n      File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 870, in obtain\n        return installer(requirement)\n      File \"/usr/lib/python2.7/dist-packages/setuptools/dist.py\", line 314, in fetch_build_egg\n        return cmd.easy_install(req)\n      File \"/usr/lib/python2.7/dist-packages/setuptools/command/easy_install.py\", line 610, in easy_install\n        raise DistutilsError(msg)\n    distutils.errors.DistutilsError: Could not find suitable distribution for Requirement.parse('cffi>=1.1.0')\n    Complete output from command /usr/bin/python -c \"import setuptools, tokenize;__file__='/tmp/pip_build_root/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-eFYZfW-record/install-record.txt --single-version-externally-managed --compile:\n    Download error on https://pypi.python.org/simple/cffi/: [Errno 110] Connection timed out -- Some packages may not be found!\n\nCouldn't find index page for 'cffi' (maybe misspelled?)\n\nDownload error on https://pypi.python.org/simple/: [Errno 110] Connection timed out -- Some packages may not be found!\n\nNo local packages or download links found for cffi>=1.1.0\n\nTraceback (most recent call last):\n\n  File \"<string>\", line 1, in <module>\n\n  File \"/tmp/pip_build_root/cryptography/setup.py\", line 318, in <module>\n\n    **keywords_with_side_effects(sys.argv)\n\n  File \"/usr/lib/python2.7/distutils/core.py\", line 111, in setup\n\n    _setup_distribution = dist = klass(attrs)\n\n  File \"/usr/lib/python2.7/dist-packages/setuptools/dist.py\", line 239, in __init__\n\n    self.fetch_build_eggs(attrs.pop('setup_requires'))\n\n  File \"/usr/lib/python2.7/dist-packages/setuptools/dist.py\", line 264, in fetch_build_eggs\n\n    replace_conflicting=True\n\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 620, in resolve\n\n    dist = best[req.key] = env.best_match(req, ws, installer)\n\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 858, in best_match\n\n    return self.obtain(req, installer) # try and download/install\n\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources.py\", line 870, in obtain\n\n    return installer(requirement)\n\n  File \"/usr/lib/python2.7/dist-packages/setuptools/dist.py\", line 314, in fetch_build_egg\n\n    return cmd.easy_install(req)\n\n  File \"/usr/lib/python2.7/dist-packages/setuptools/command/easy_install.py\", line 610, in easy_install\n\n    raise DistutilsError(msg)\n\ndistutils.errors.DistutilsError: Could not find suitable distribution for Requirement.parse('cffi>=1.1.0')\n\n----------------------------------------\nCleaning up...\nCommand /usr/bin/python -c \"import setuptools, tokenize;__file__='/tmp/pip_build_root/cryptography/setup.py';exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" install --record /tmp/pip-eFYZfW-record/install-record.txt --single-version-externally-managed --compile failed with error code 1 in /tmp/pip_build_root/cryptography\nStoring debug log for failure in /home/krishnamani999/.pip/pip.log", "issue_status": "Closed", "issue_reporting_time": "2016-01-27T14:15:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1230": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/899", "issue_id": "#899", "issue_summary": "How can I capture websocket traffic", "issue_description": "famedoro commented on 26 Jan 2016\nHi,\nI know that mitmproxy doesn't support websocket, but I would like to know if there is a way to have the dump file of the traffic from a websocket.\nThis is my scenario:\nI initially receive real time data from a website in a browser page,\nI use the sniffer ( like this\nhttp://www.freeproject.co.in/source/Network-Packet-Sniffer.aspx?pf=Java&t=web or\nhttp://packetsnifferusingjpcap.blogspot.it/ which write on file all tcp/ip traffic\nthat passes through the network interface from a given ip address) in order to get data and send it to a custom program .\nNow my data provider supply the data using ssl (https), then my sniffer doesn't receive\ndecrypted data in clear. To connect to my provider I must provide user, password and then in a\nnew page a temporarily generated key code, then the browser open a web page related to an\naddress xxx.yyy.nnn.zzz (without https prefix) which show realtime data.\nUsing wireshark and the instruction provided in\nhttps://isc.sans.edu/forums/diary/Psst+Your+Browser+Knows+All+Your+Secrets/16415/\nI'm able to decrypt ssl page.\nThis is a sample data decrypted using wireshark:\nGET / HTTP/1.1\nHost: serverpush.dot.it:7072\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:43.0) Gecko/20100101 Firefox/43.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: it,en-US;q=0.7,en;q=0.3\nAccept-Encoding: gzip, deflate\nSec-WebSocket-Version: 13\nOrigin: https://severdata.dot.it\nSec-WebSocket-Extensions: permessage-deflate\nSec-WebSocket-Key: 1VkXxdjYOBuOjfa+gAQ91A==\nCookie: _ga=GA1.2.458778788.1410278708; _gat=1; _gali=Avanti\nConnection: keep-alive, Upgrade\nPragma: no-cache\nCache-Control: no-cache\nUpgrade: websocket\n\nHTTP/1.1 101 Switching Protocols\nUpgrade: websocket\nConnection: Upgrade\nSec-WebSocket-Accept: fIKoaTEDrGcC8Qyxt5bppaevP9U=\n\n...t...t.a.7...I...F...C...M...D...........F...................M...B...L.......~.......\nRESULT=ACK\n....5h..0m..s!..p:..q\"...;...X.....8...=...~.B.}.3.|.G...^.......T.C.W.F.FP\n..S..gR..w%..a&s...t...v...t...8...I...=...$...~.J.....C3DJI;0=16391.69;1=1.4877;4=104196873;20=2511792525067.33;7=21:52:35\n.B.....;3SP500;0=1923.67;4=637246226;20=1677783824894.07;7=21:52:35\n..L...N...L.......q...........\n.......\n...F...7...C...O......a...E...(...3...5...5....s..Cq..bs..\n?...N...:...6......Y...{........... ... ...J.....DATA1I;0=16391.28;1=1.4851;4=104210258;20=2511792541458.61;7=21:52:36\n.-.....&DATA2;4=637298282;20=1677783826817.68\n.+.....$DATA2;0=1923.61;1=1.7632;7=21:52:36\n..cq>.ar;.cQxU/%{N^BzV*R O3D.,@BxH04sU!R X)84........ ...N.Y.M.(.L.\\.;.E.8.6.N.F.E.W.;._...J.....DATA1I;0=16389.91;1=1.4767;4=104222192;20=2511792557848.52;7=21:52:37\n.K.....DATA2;0=1923.48;1=1.7564;4=637378052;20=1677783828741.16;7=21:52:37\nAccording to what above reported it appears that the transfer of data is done through websocket\nIs it possible to get this data using mitmproxy in order to have a live stream on a file ?", "issue_status": "Closed", "issue_reporting_time": "2016-01-26T14:44:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1231": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/897", "issue_id": "#897", "issue_summary": "mitmweb --help should mention the default port", "issue_description": "Contributor\ndufferzafar commented on 26 Jan 2016\nI had to search the code to find the default web port mitmweb listens on.\nShouldn't this value (and other defaults) be a part of the help output?\nPerhaps something like?\ndiff --git a/libmproxy/cmdline.py b/libmproxy/cmdline.py\nindex 99b76e6..f93f482 100644\n--- a/libmproxy/cmdline.py\n+++ b/libmproxy/cmdline.py\n@@ -737,7 +737,7 @@ def mitmweb():\n         \"--wport\",\n         action=\"store\", type=int, dest=\"wport\", default=8081,\n         metavar=\"PORT\",\n-        help=\"Mitmweb port.\"\n+        help=\"Mitmweb port. (default: 8081)\"\n     )\n     group.add_argument(\n         \"--wiface\",", "issue_status": "Closed", "issue_reporting_time": "2016-01-26T10:13:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1232": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/896", "issue_id": "#896", "issue_summary": "Use pygments to colorize some content types?", "issue_description": "Contributor\ndufferzafar commented on 26 Jan 2016\nhttpie colorizes the output of content types like html, json, xml etc. The relevant source is here: https://github.com/jkbrzt/httpie/blob/master/httpie/output/formatters/colors.py\nWe could use that to upgrade libmproxy/contentviews.py to support colorized output.\nCompare mitmproxy's output:\nWith httpie's:", "issue_status": "Closed", "issue_reporting_time": "2016-01-26T08:31:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1233": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/895", "issue_id": "#895", "issue_summary": "Configurable Keyboard Shortcuts", "issue_description": "Contributor\ndufferzafar commented on 26 Jan 2016\nI find a bunch of keyboard shortcuts a bit odd. But since this issue hasn't been raised before, I think the other users might be okay with them.\nSince we already have a config file setup in place, would it be too much work to implement a configurable keymap system? Would it be worth it? I am asking this because I would love to work on this feature!", "issue_status": "Closed", "issue_reporting_time": "2016-01-26T07:52:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1234": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/892", "issue_id": "#892", "issue_summary": "Download Data being intercepted by mitmproxy", "issue_description": "JPS46225 commented on 23 Jan 2016\nHi\nI was wondering whether there was a way to download data being intercepted by mitmproxy?\ne.g.: Download a file being transferred to another computer such as a document, pdf or video file...", "issue_status": "Closed", "issue_reporting_time": "2016-01-23T02:17:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1235": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/890", "issue_id": "#890", "issue_summary": "Modifying request.url impacted request.host", "issue_description": "xuboying commented on 22 Jan 2016\nmitmdump version:latest\nI run the proxy with following command:\nmitmdump -s proxy.py -U http://upstreamproxy\nThe proxy.py is like following:\n#!/usr/bin/mitmdump\nfrom __future__ import print_function\nimport re\n\ndef request(context, flow):\n    print(\"DEBUG\")\n    oldhost = flow.request.host\n    flow.request.url = re.sub(r\"www.verycd.com\",r\"115.182.66.26\",flow.request.url)\n    # flow.request.host = oldhost   #<---This will modify the url also\n    print(\"DEBUG\")\nWhat I expect is to change the www.verycd.com to IP in url but keep the host field still using www.verycd.com, like following:\nGET http://115.182.66.26/ HTTP/1.1\n...\nHost: www.verycd.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0\nBut the mitmproxy always change the url and host at the same time I got following which the server does not accept\nGET http://115.182.66.26/ HTTP/1.1\n...\nHost: 115.182.66.26\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:43.0) Gecko/20100101 Firefox/43.0", "issue_status": "Closed", "issue_reporting_time": "2016-01-22T05:52:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1236": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/889", "issue_id": "#889", "issue_summary": "Add CLI option for \"following\" mode", "issue_description": "Kidlike commented on 21 Jan 2016\nThe one when you press Shift+f :)\nCouldn't find anything on the docs or --help. I assume it's not there.", "issue_status": "Closed", "issue_reporting_time": "2016-01-21T12:21:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1237": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/888", "issue_id": "#888", "issue_summary": "Crash when using --tcp if no server_name extension", "issue_description": "jquesnelle commented on 19 Jan 2016\nI'm using --tcp in the hopes of transparently proxying SSL. The MITMed device is connecting via TLS without the \"server_name\" extension in the Client Hello. When this happens, I get the following crash (it looks like it's not checking to see if there is no host name for the connection). Reproduced this from the v0.15 tag\nTraceback (most recent call last):\n  File \"/home/jeffq/mitmproxy-src/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/home/jeffq/mitmproxy-src/libmproxy/proxy/modes/http_proxy.py\", line 10, in __call__\n    layer()\n  File \"/home/jeffq/mitmproxy-src/libmproxy/protocol/tls.py\", line 267, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/home/jeffq/mitmproxy-src/libmproxy/protocol/tls.py\", line 392, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"/home/jeffq/mitmproxy-src/libmproxy/protocol/tls.py\", line 389, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/home/jeffq/mitmproxy-src/libmproxy/protocol/tls.py\", line 398, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/home/jeffq/mitmproxy-src/libmproxy/protocol/tls.py\", line 497, in _find_cert\n    host = self.server_conn.address.host\nAttributeError: 'NoneType' object has no attribute 'host'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2016-01-19T02:33:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1238": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/886", "issue_id": "#886", "issue_summary": "Client Address is not displayed for flows from dumpfiles", "issue_description": "Contributor\nlilydjwg commented on 14 Jan 2016\nI have two clients connecting to mitmproxy now, and I'd like to see the client IP for each request in the \"Detail\" tab.\nMaybe show the server's IP too, since it can differ when connections come from different local IPs (e.g. 127.0.0.1 and 192.168.1.101).", "issue_status": "Closed", "issue_reporting_time": "2016-01-14T04:11:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1239": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/885", "issue_id": "#885", "issue_summary": "AttributeError: 'NoneType' object has no attribute 'ssl_established'", "issue_description": "biran0079 commented on 14 Jan 2016\nI run into this exception while trying to do something similar to\nhttps://github.com/mitmproxy/mitmproxy/blob/master/examples/dns_spoofing.py\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 99, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 994, in handle_messages\n    while self.handle_flow():\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1082, in handle_flow\n    self.process_server_address(flow)  # The inline script may have changed request.host\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1335, in process_server_address\n    self.live.change_server(address, ssl=ssl)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/primitives.py\", line 230, in change_server\n    ssl != self.c.server_conn.ssl_established\nAttributeError: 'NoneType' object has no attribute 'ssl_established'```", "issue_status": "Closed", "issue_reporting_time": "2016-01-14T03:51:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1240": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/880", "issue_id": "#880", "issue_summary": "How to get whole decrypted packet.", "issue_description": "mankalamanishkumar commented on 11 Jan 2016\nBy using assemble_request i was able to get decrypted payload, but how to get entire decrypted packet where i can able to access src, dst ip address, mark field etc.,", "issue_status": "Closed", "issue_reporting_time": "2016-01-11T12:27:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1241": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/877", "issue_id": "#877", "issue_summary": "Bind address is not respected when contacting upstream servers", "issue_description": "Contributor\nsnemes commented on 8 Jan 2016\nSteps to reproduce the problem:\nYou need to have a configuration with at least 3 network interfaces. Let's say that the three interfaces are eth0 (with IP 10.0.0.1 - has no internet access), eth1 (with IP 10.1.0.1 - has access to the internet) and vboxnet0 (a VirtualBox host-only network with address 192.168.1.254) - the last interface does not need to be a VirtualBox host-only interface at all, it was just easier to use that as an example and it reflects my current configuration.\nHave an iptables rule that forwards traffic from the VirtualBox interface to eth1 (the interface with access to the Internet):\niptables -t nat -A POSTROUTING -s 192.168.1.0/24 -j SNAT --to-source 10.1.0.1\nAlso have the required iptables rules for mitmproxy:\niptables -t nat -A PREROUTING -i vboxnet0 -p tcp -m tcp --dport 443 -j REDIRECT --to-ports 8080\niptables -t nat -A PREROUTING -i vboxnet0 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 8080\nLaunch mitmproxy/mitmdump with the arguments \"-T -b 192.168.1.254\"\nThe netstat command shows that the python script is listening on 192.168.1.254, which is fine.\nHowever a Wireshark/tcpdump session quickly shows that the bind address is not respected when mitmproxy tries to contact the upstream HTTPS server, because the TCP packets use the source IP 10.0.0.1 (eth0 - the 1st interface, which is a network with no Internet access) - instead of the IP address 192.168.1.254 (which would be then forwarded by iptables to eth1 - the interface having internet access).\nWhat is the expected behavior?\nWhen the --bind-address or -b command line argument is used, mitmproxy should use that address as the source address when contacting the upstream servers.\nmitmproxy version: 0.15\nOperating System: Ubuntu 15.10", "issue_status": "Closed", "issue_reporting_time": "2016-01-08T14:25:06Z", "fixed_by": "mitmproxy/netlib#110", "pull_request_summary": "flow.kill() master arg is required but not exposed \"publicly\"", "pull_request_description": "greenbender commented on 2 Apr 2013\nIf I have a python proxy script and want to 'drop' requests for some 'bad host' it would be nice to be able to kill the flow at the request stage. I assume this is the purpose of the flow.kill() function. The flow.kill() function has a required argument called master. As far as I can tell the only place you can find 'master' in your script is context._master however using this feels a bit dirty since _master is 'private'.\ndef request(context, flow):\n    if flow.request.host.endswith(\"badhost.com\"):\n        flow.kill(context._master)\nCan _master be exposed as public or there is there a way to have master default to a sensible value?", "pull_request_status": "Merged", "issue_fixed_time": "2013-04-02T10:56:23Z", "files_changed": []}, "1242": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/876", "issue_id": "#876", "issue_summary": "stream and replace option not compatible", "issue_description": "mehdilauters commented on 6 Jan 2016\nStream and replace option not compatible\nSteps to reproduce the problem:\n./mitmproxy -T --stream 10m --replace \":~t 'text/html':[cC]hristmas:MIAOUUUUUU\"\nconnect with a browser for example to http://hackaday.com/\nWhat is the expected behavior?\nWhat went wrong?\n(venv.mitmproxy)mehdi@lea mitmproxy/mitmproxy (master)$ ./mitmproxy -T --stream 10m --replace \":~t 'text/html':[cC]hristmas:MIAOUUUUUU\"\nTraceback (most recent call last):\n  File \"mitmproxy/mitmproxy/libmproxy/console/__init__.py\", line 500, in run\n    self.loop.run()\n  File \"mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 376, in _run\n    self.event_loop.run()\n  File \"mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 682, in run\n    self._loop()\n  File \"mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\n    alarm_callback()\n  File \"mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 164, in cb\n    callback(self, user_data)\n  File \"mitmproxy/mitmproxy/libmproxy/console/__init__.py\", line 451, in ticker\n    changed = self.tick(self.masterq, timeout=0)\n  File \"mitmproxy/mitmproxy/libmproxy/flow.py\", line 809, in tick\n    return super(FlowMaster, self).tick(q, timeout)\n  File \"mitmproxy/mitmproxy/libmproxy/controller.py\", line 108, in tick\n    self.handle(*msg)\n  File \"mitmproxy/mitmproxy/libmproxy/controller.py\", line 130, in handle\n    m(obj)\n  File \"mitmproxy/mitmproxy/libmproxy/console/__init__.py\", line 730, in handle_response\n    f = flow.FlowMaster.handle_response(self, f)\n  File \"mitmproxy/mitmproxy/libmproxy/flow.py\", line 1009, in handle_response\n    self.replacehooks.run(f)\n  File \"mitmproxy/mitmproxy/libmproxy/flow.py\", line 95, in run\n    f.response.replace(rex, s)\n  File \"mitmproxy/mitmproxy/libmproxy/models/http.py\", line 91, in replace\n    pattern, repl, self.content, *args, **kwargs\n  File \"mitmproxy/mitmproxy/libmproxy/utils.py\", line 173, in safe_subn\n    return re.subn(str(pattern), str(repl), target, *args, **kwargs)\n  File \"mitmproxy/venv.mitmproxy/lib/python2.7/re.py\", line 166, in subn\n    return _compile(pattern, flags).subn(repl, string, count)\nTypeError: expected string or buffer\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments?\nmitmproxy version: 11215e4\nOperating System: Linux lea 4.2.0-16-generic #19-Ubuntu SMP Thu Oct 8 15:35:06 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux", "issue_status": "Closed", "issue_reporting_time": "2016-01-06T11:41:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1243": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/875", "issue_id": "#875", "issue_summary": "How to ignore images of some domain", "issue_description": "guileen commented on 5 Jan 2016\nI want show all request under some domain but not images,\n$ mitmdump -ddd '(weibo.cn|sina.cn) & \\!(~t \"image*\")'\nIt just not work, ignored everything.", "issue_status": "Closed", "issue_reporting_time": "2016-01-05T03:42:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1244": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/874", "issue_id": "#874", "issue_summary": "dkozel", "issue_description": "ghost commented on 3 Jan 2016\nTHANKS!!!!!\nvaleu meu brother!!! funcionou!!", "issue_status": "Closed", "issue_reporting_time": "2016-01-03T17:50:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1245": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/873", "issue_id": "#873", "issue_summary": "Export all the json responses from a domain name to a file?", "issue_description": "medyagh commented on 3 Jan 2016\nI tried to read the docs as much as I can and read the blogs, still didn't figure out how I can,\nexport all the Json resonses from a specific domain name to a file (ideally a CSV file so can I anayalze them or put them in a database)", "issue_status": "Closed", "issue_reporting_time": "2016-01-02T22:52:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1246": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/871", "issue_id": "#871", "issue_summary": "Add domains using HSTS & HPKP as not to be touched", "issue_description": "enesunal commented on 31 Dec 2015\nThe domains using HSTS & HPKP are available[1] in chromium source code. Is it possible to make these domains not to be touched by mitmproxy while processing HTTPS connections?\n[1] : https://code.google.com/p/chromium/codesearch#chromium/src/net/http/transport_security_state_static.json", "issue_status": "Closed", "issue_reporting_time": "2015-12-31T08:57:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1247": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/869", "issue_id": "#869", "issue_summary": "Mitmproxy crashes", "issue_description": "Leseratte10 commented on 25 Dec 2015\nAs soon as a device tries to access a HTTPS URL, mitmproxy crashes and tells me to lodge a bug report:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/http_proxy.py\", line 10, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 267, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 392, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 389, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 398, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 497, in _find_cert\n    host = self.server_conn.address.host\nAttributeError: 'NoneType' object has no attribute 'host'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nThis happens with the command line $ sudo mitmproxy -p 443 and the domain I'd like to intercept has the local IP of my computer set in my DNS server.\nI cannot use the proxy function as my device refuses to use a proxy \"for security reasons\".\nEDIT: Oops, seems as if this is the same bug as in #861 .\nIs there a way to fix that? Directly connecting to MITMproxy without Proxy?", "issue_status": "Closed", "issue_reporting_time": "2015-12-25T12:15:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1248": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/868", "issue_id": "#868", "issue_summary": "Couldn't install mitmproxy on Ubuntu 15.10", "issue_description": "azangru commented on 25 Dec 2015\nHi,\nI am running Ubuntu 15.10, and followed the instructions for installing mitmproxy on Ubuntu published on http://docs.mitmproxy.org.\nBut when I try to run mitmproxy, I get an error with the following traceback:\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 5, in <module>\n    from pkg_resources import load_entry_point\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 3080, in <module>\n    @_call_aside\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 3066, in _call_aside\n    f(*args, **kwargs)\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 3093, in _initialize_master_working_set\n    working_set = WorkingSet._build_master()\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 653, in _build_master\n    return cls._build_from_requirements(__requires__)\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 666, in _build_from_requirements\n    dists = ws.resolve(reqs, Environment())\n  File \"/usr/lib/python2.7/dist-packages/pkg_resources/__init__.py\", line 839, in resolve\n    raise DistributionNotFound(req, requirers)\npkg_resources.DistributionNotFound: The 'backports.ssl-match-hostname<3.4.1,>=3.4.0.2' distribution was not found and is required by netlib\nThe Python version is 2.7.10 (default, Oct 14 2015, 16:09:02)\nHas anyone had any success with running mitmproxy on Ubuntu 15.10?", "issue_status": "Closed", "issue_reporting_time": "2015-12-25T10:11:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1249": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/867", "issue_id": "#867", "issue_summary": "force send client cert", "issue_description": "Contributor\nbazzinotti commented on 25 Dec 2015\nPremise\nCurrently, mitmproxy supports client certs by way of the commandline argument --client-certs [dir] and expects cert filenames to be pre-named, apparently by target domain name (the documentation uses \"example.org.pem\" as an example). There are use-cases where it would more suitable to force the sending of a specific client-cert no matter the destination.\nUse Cases\nThe correct client cert filename(s) are simply not known. The target(s) may have already been modified for MITM, which can be a lengthy process.\na TLS session is established to a known destination with the client cert. A new destination for a TLS session is dynamically determined from within the current TLS session. The connection to the new host requires the same client cert. This inability to know the destination prevents the client-cert from being specified for the new connection.\nI found this to be important during a reverse engineering experiment in which I knew the domain, but I saw in a packet capture that the client cert was not being sent .. I tried a variety of symlinks that included subdomain information and whatever else to no avail. Since I had to also deal with the dynamic host aspect, I had to modify mitmproxy.\nSo, I wound up modifying mitmproxy to automatically always send a specific client certificate. My modifications are trivial PoC (proof-of-concept) modifications right now, and are not proper command-line argument invocations. I'm interested in talking with you if you are experienced with mitmproxy codebase and would like to help me implement an official contribution.\nThe PoC hard-codes a client-cert in libmproxy/models/connections.py establish_ssl function. To further it into an official update, the cmdline arg will need to be developed. I am thinking of using --force-client-cert\nestablish_ssl function must check for the existence of a forced-client-cert file (provided via the cmdline arg), verify it, and use it. Else, it simply refers to its prior implementation.\nIf you would like to give me some mitmproxy-codebase knowledge regarding how to properly implement this feature, please do.\nThanks, I'm hoping to implement this feature via a pull request sometime soon.", "issue_status": "Closed", "issue_reporting_time": "2015-12-24T20:20:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1250": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/866", "issue_id": "#866", "issue_summary": "--raw-tcp Add cmdline argument to dump raw binary conversation to file", "issue_description": "Contributor\nbazzinotti commented on 24 Dec 2015\nHello, Merry Christmas | | [Your favorite Holiday] !!\nI am filing this issue as a feature request that demonstrates the core modification necessary to achieve the feature request. I am also including a background story that demonstrates why my use of auxiliary tools such as Wireshark proved inadequate for my situation, whereas developing a minimal PoC of the feature request solved my problem.\nBackground\nThis is written in the present tense but I want you to read it understanding that this is really the past tense (I've since figured out an unofficial solution, which will be illustrated at the bottom of this post).\nI am currently successfully performing a transparent TCP SSL mitm session with a client cert. I want to record the bidirectional decrypted stream as direct binary. Although handshaking info is good auxiliary debug info, ultimately I want solely a dump of the decrypted ssl conversation.\nNot knowing how to do this directly in mitmproxy, I instead had mitmproxy output a pre master secret file which I configured Wireshark to use. My cmdline invocation looked like this:\nSSLKEYLOGFILE=\"/tmp/keylog.txt\" mitmproxy -T --host --client-certs mitmproxy_client_cert/ --raw-tcp\nthis method was successful until I realized that I am suffering from packet loss due to the high volume high frequency of packets... I did try playing around with Wireshark settings, but it is too clear to me that if I only knew how to get mitmproxy to simply share the decrypted information with me in the style I prefer,I would be golden. This is because mitmproxy is in the direct path of the packets, unlike Wireshark, which is only an observer.\nSolution\nI have discovered how to dump the decrypted SSL conversation to file. I will demonstrate these details below, and I ask for help incorporating the feature officially.\nthe file to modify is libmproxy/protocol/rawtcp.py, do a search for:\nif self.logging:\n(line 55~). I added the following at the end of the stanza:\nwith open(\"/tmp/test.txt\", \"a\") as bindump:\n    bindump.write(buf[:size].tobytes());\nThis is all that is needed to have a PoC binary-dump of the decrypted SSL conversation (no handshaking, IP info, etc -- only the raw binary messages from both the client/server). This is exactly what I want.\nAs far as a more official version -- I'd like to have a new cmdline option (needs title) that allows specification of the logfile to use. This logfile would be erased upon startup, either by opening the file for writing (not appending) and maintaining the file handle, or by explicitly removing the file and subsequently appending to it.\nI am not a pro python programmer, so I definitely need some help doing this properly.\nThanks,\nbazz", "issue_status": "Closed", "issue_reporting_time": "2015-12-24T18:03:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1251": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/865", "issue_id": "#865", "issue_summary": "Crash report", "issue_description": "NSExceptional commented on 24 Dec 2015\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\nTypeError: 'NoneType' object is not callable\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n----------------------------------------\nError in processing of request from 10.0.1.27:50212\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/netlib/tcp.py\", line 799, in connection_thread\n    self.handle_client_connection(connection, client_address)\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 64, in handle_client_connection\n    h.handle()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 151, in handle\n    self.channel.tell(\"clientdisconnect\", root_layer)\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/controller.py\", line 65, in tell\n    m.reply = DummyReply()\nAttributeError: 'NoneType' object has no attribute 'reply'\n\n----------------------------------------\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\nTypeError: 'NoneType' object is not callable\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n----------------------------------------\nError in processing of request from 10.0.1.27:50210\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/netlib/tcp.py\", line 799, in connection_thread\n    self.handle_client_connection(connection, client_address)\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 64, in handle_client_connection\n    h.handle()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 151, in handle\n    self.channel.tell(\"clientdisconnect\", root_layer)\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/controller.py\", line 65, in tell\n    m.reply = DummyReply()\nAttributeError: 'NoneType' object has no attribute 'reply'\n\n----------------------------------------", "issue_status": "Closed", "issue_reporting_time": "2015-12-24T03:55:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1252": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/864", "issue_id": "#864", "issue_summary": "error while running mmitmproxy", "issue_description": "smartgameop commented on 21 Dec 2015\n10.42.0.100:35453: TLS verification failed for upstream server at depth 0 with error: Invalid Hostname\n10.42.0.100:35453: Ignoring server verification error, continuing with connection\n\n10.42.0.63:47784: TLS verification failed for upstream server at depth 2 with error: 20\n10.42.0.63:47784: Ignoring server verification error, continuing with connection\nalso in Iphone sometime it show facebook application traffic but most of time it fail to show\n10.42.0.45:50438: Client Handshake failed. The client may not trust the proxy's certificate for graph.facebook.com.\nit always shown this msg only 2-3 time it works for facebook app but i dont know how and why\nif you need more inputs from me to dugout this issue i will love to help", "issue_status": "Closed", "issue_reporting_time": "2015-12-21T06:52:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1253": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/863", "issue_id": "#863", "issue_summary": "How to install netlib from master?", "issue_description": "wjchua06 commented on 16 Dec 2015\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2015-12-16T01:20:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1254": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/862", "issue_id": "#862", "issue_summary": "Installing previous version of mitmproxy", "issue_description": "wjchua06 commented on 16 Dec 2015\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2015-12-16T00:59:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1255": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/861", "issue_id": "#861", "issue_summary": "mitmproxy crashes: AttributeError: 'NoneType' object has no attribute 'host'", "issue_description": "colemickens commented on 16 Dec 2015\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy/modes/http_proxy.py\", line 10, in __call__\n    layer()\n  File \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 267, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 392, in _establish_tls_with_client_and_server\n    six.reraise(*sys.exc_info())\n  File \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 389, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 398, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/usr/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 497, in _find_cert\n    host = self.server_conn.address.host\nAttributeError: 'NoneType' object has no attribute 'host'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2015-12-15T23:32:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1256": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/860", "issue_id": "#860", "issue_summary": "Mitmproxy using python3 instead of python2", "issue_description": "wjchua06 commented on 15 Dec 2015\nHi, I am using mitmproxy now and I realized that when i run the command\nmitmproxy --host -T -s pythonscript.py\nthe mitmproxy is running python3 instead of python2, it throws me an error message that there is a syntax error when I included the line [print \"Downloading file\"] in my python script. If I modify my script to be [print (\"Downloading file\")] it does not return any error messages.\nMay I know how can I fix my mitmproxy to run python2 instead of python3.\nMy ubuntu machine is running python2 by default.", "issue_status": "Closed", "issue_reporting_time": "2015-12-15T11:09:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1257": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/859", "issue_id": "#859", "issue_summary": "Update \"How mitmproxy works\"", "issue_description": "Member\nmhils commented on 13 Dec 2015\nWe now peek into the traffic to identify if it's SSL, there are not hardcoded ports anymore.", "issue_status": "Closed", "issue_reporting_time": "2015-12-13T15:48:31Z", "fixed_by": "#1482", "pull_request_summary": "update docs: how mitmproxy works", "pull_request_description": "Member\nKriechi commented on 15 Aug 2016\nfixes #859\nuse TLS instead of SSL when revering to HTTPS encryption", "pull_request_status": "Merged", "issue_fixed_time": "2016-09-02T21:59:54Z", "files_changed": [["157", "docs/howmitmproxy.rst"], ["21", "docs/introduction.rst"]]}, "1258": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/858", "issue_id": "#858", "issue_summary": "encoding error to outfile", "issue_description": "tdyhacker commented on 13 Dec 2015\nwhen I use '-w' option to store the flow to file, it display error content, just as following:\n[x\u00a7\u2021\ufffd:\u00d6\u00e1Hi\ufffd4G\u00d0\ufffdL\u00bf\u00a4\u00cc\u00e94\u00ce\u00e6y\u00f9\u00cd\u00a7q\u00bc<\u00b5Y\u00c2&\ufffd\u00c9\u2039\ufffd\u00b6M\u00f1+G\u00d2\ufffd\ufffd\u2021i8\n\ufffdav\u00c5\u00c6dT\ufffd\u00a3\ufffd<_\ufffd\u2030\u00bb\u00da\u00c0\u2014\u00e6\ufffd\u00cf\u00c2\u00d3S\u00f2o\ufffd\u201c\u00e7\u02c6$B6K\u0192\u00df\u00dbV\u00da\u00bcrq{\u201d2\ufffdw\ufffd.\u00aeN\u00c9Rh\u00d4\ufffd\ufffd\u2026x)\u00a5q\ufffd\u00d5\u00be\ufffd0\u20218\u00e9\u00d9O\ufffd\u00f8\u00f3\u0178\u00fc\u00cd\u2014\ufffd\u00f2\u00db_\u00fe\u00e3\ufffd\ufffdn\u00f1\ufffd\u2014\ufffd\ufffd\u2021\ufffd\"\u00c4\u201aNq\ufffdi\u0160\u00ac@J\u00d4\u00ee\"\u0153E\u00a7\ufffd\"CJ\ufffd&0\u2021\u00cd*NCB\u00e9 \ufffdr:G\u00a3O1y\u00f9\u00e8\ufffd\u201c\ufffd\u00e6\ufffdRQB4\nhow to record the utf8 content to file?", "issue_status": "Closed", "issue_reporting_time": "2015-12-12T19:14:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1259": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/856", "issue_id": "#856", "issue_summary": "Setting streaming causes some responses to report empty Content-Length even when response size does not exceed the threshold", "issue_description": "Contributor\njvillacorta commented on 12 Dec 2015\nWhen streaming is enabled, multiple request that do not exceed the threshold are reported without content.\nWITH stream 50m\nGET https://impact.applifier.com/mobile/campaigns?platform=ios&gameId=5555&sdkVersion=1020&rawAdvertisingTrackingId=B18B33A9-C13A-4686-8B3B-A11B6CF227D4&advertisingTrackingId=c4c97e23f6d64dec7f42a553aefc889c&trackingEnabled=0&softwareVersion=9.0.1&deviceType=iPad5,3&connectionType=wifi&encrypted=false\n   \u2190 200 application/json [content missing] 887ms\nWITHOUT stream\nGET https://impact.applifier.com/mobile/campaigns?platform=ios&gameId=5555&sdkVersion=1020&rawAdvertisingTrackingId=B18B33A9-C13A-4686-8B3B-A11B6CF227D4&advertisingTrackingId=c4c97e23f6d64dec7f42a553aefc889c&trackingEnabled=0&softwareVersion=9.0.1&deviceType=iPad5,3&connectionType=wifi&encrypted=false\n   \u2190 200 application/json 6.88kB 1.52s\nI was also trying to implement streaming on video files on my libmproxy implementation but seems to be failing for some hosts.\ndef handle_responseheaders(self, f):\n    if f.request.method == 'GET':\n        for _file_extension in STREAMING_FILE_LIST:\n            if str(f.request.path).endswith(_file_extension):\n                f.response.stream = True", "issue_status": "Closed", "issue_reporting_time": "2015-12-11T19:09:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1260": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/854", "issue_id": "#854", "issue_summary": "ERROR: examples/read_dumpfile: Flow file corrupted. Stopped loading", "issue_description": "loretoparisi commented on 11 Dec 2015 \u2022\nedited\nI have tried the read_dumpfile example like this\nmitmproxy -p 11112 -s script/res_save.py\nwhere the script does:\n# Store persistent cache\ndef storePersistentCache(data, key):\n        html_file = open(key + \".cbx\", \"w\")\n        html_file.write( data )\n        html_file.close()\n\ndef request(context, flow):\n        req = flow.request;\n        if flow.request.pretty_host(hostheader=True).endswith(\"mydomain.com\"):\n                try:\n                        out = req.assemble();\n                        storePersistentCache( out,  flow.request.pretty_host(hostheader=True) );\n                except Exception as ee:\n                        pass\n\ndef response(context, flow):\n        if flow.request.pretty_host(hostheader=True).endswith(\"mydomain.com\"):\n                res = flow.response;\n                try:\n                        #print res.assemble();\n                        if res.content:\n                                size = len(res.content);\n                                size  = min(size, 20);\n                                #if res.content[0:size] != res.get_decoded_content()[0:size]:\n                                        #print(\"\\n\\n\");\n                                        #print res.get_decoded_content()\n                except Exception as ee:\n                        pass\nand then\nmacbookproloreto:mitmproxy admin$ python examples/read_dumpfile mydomain.com cbx \nFlow file corrupted. Stopped loading.\nmacbookproloreto:mitmproxy admin$ ", "issue_status": "Closed", "issue_reporting_time": "2015-12-11T12:13:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1261": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/852", "issue_id": "#852", "issue_summary": "crash when enabling SOCKS proxy for an interface in OSX", "issue_description": "snatchev commented on 9 Dec 2015\nHello, I am seeing this crash after doing the following:\n1.) enable SOCKS proxy for an interface:\n2.) run mitmproxy like: mitmproxy --socks\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/proxy/modes/socks_proxy.py\", line 57, in __call__\n    layer()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 267, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 395, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 399, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 518, in _find_cert\n    return self.config.certstore.get_cert(host, list(sans))\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/netlib/certutils.py\", line 335, in get_cert\n    sans),\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/netlib/certutils.py\", line 109, in dummy_cert\n    [OpenSSL.crypto.X509Extension(b\"subjectAltName\", False, ss)])\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/OpenSSL/crypto.py\", line 651, in __init__\n    extension = _lib.X509V3_EXT_nconf(_ffi.NULL, ctx, type_name, value)\nTypeError: initializer for ctype 'char *' must be a str or list or tuple, not unicode\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2015-12-08T19:22:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1262": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/851", "issue_id": "#851", "issue_summary": "Possibility to handle HTTPS traffic on non standard port", "issue_description": "foxban commented on 3 Dec 2015\nI've got a scene that the web server was listening on non standard port, 4430 for etc.\nAfter digging into the document, I didn't find any information to resolve it.\nIt seems that three ports (443, 80, 8443) is hardcoded in the scripts.\nIs the destination port configurable?\nThanks.", "issue_status": "Closed", "issue_reporting_time": "2015-12-03T12:07:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1263": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/850", "issue_id": "#850", "issue_summary": "libmproxy proxy.ProxyConfig - ignore_hosts", "issue_description": "garrylachman commented on 3 Dec 2015\nits not possible to add only one host in proxy.ProxyConfig\nlibmproxy/proxy/config.py line 55:\nignore_hosts=tuple('.*')\n\nlibmproxy/proxy/config.py line 21:\nHostMatcher\nself.patterns = list(patterns)\n\nwhen cast tuple to list\nthe result is ['.', '*'] \ninstead ['.*']\nworkaround is set '.*' twice in ignore_hosts but its ugly...", "issue_status": "Closed", "issue_reporting_time": "2015-12-03T01:50:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1264": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/849", "issue_id": "#849", "issue_summary": "Clean up mitmproxy.models", "issue_description": "Member\nmhils commented on 3 Dec 2015 \u2022\nedited by Kriechi\nmitmproxy.models is more or less a remnant from times where we didn't have netlib.http.Request/Response etc. We should probably remove this altogether.", "issue_status": "Closed", "issue_reporting_time": "2015-12-02T18:44:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1265": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/847", "issue_id": "#847", "issue_summary": "Cannot parse Client Hello: FieldError", "issue_description": "joshenders commented on 27 Nov 2015\nSteps to reproduce the problem:\nFollowed these instructions: http://docs.mitmproxy.org/en/stable/transparent/osx.html to do transparent proxying of an iPad to a MacBook Air on a wireless network.\nmitm.pf.conf\next_if = \"en0\"\next_ip = \"192.168.1.141\"\n\nrdr on $ext_if inet proto tcp from any to any port 8181 -> $ext_ip port 8080\nEnabled PF and adjusted sysctls:\nsudo pfctl -vf mitm.pf.conf\nsudo pfctl -e\nsudo sysctl -w net.inet.ip.forwarding=1\nsudo sysctl -w net.inet.ip.redirect=0\nAppended to /etc/sudoers\nALL ALL=NOPASSWD: /sbin/pfctl -s state\nStarted mitmproxy:\nmitmproxy -T -p 8080 --host\nPerformed action in iPad app that opens a connection to https://example.com:8181\nWhat is the expected behavior?\nSuccessful proxying of the connection\nWhat went wrong?\n192.168.1.143:50107: clientconnect\n192.168.1.143:50107: Cannot parse Client Hello: FieldError(FieldError('expected 2, found 0',),)\n192.168.1.143:50107: TLS verification failed for upstream server at depth 0 with error: Invalid Hostname\n192.168.1.143:50107: Ignoring server verification error, continuing with connection\nAny other comments?\nTLS daemon on 8181 at example.com has a self-signed, expired cert with CN=localhost. Because of this, an invalid hostname error is expected (CN=localhost but HTTP Host header/DNS name is example.com).\nI think the TLS connection is breaking on parsing the Client Hello. Maybe the client is cert pinning and rejecting the mitm cert?\nHere are some example Client Hellos from the iPad application:\n$ nc -b en0 -l 8080 | xxd\n0000000: 1603 0100 6501 0000 6103 0156 57d7 f601  ....e...a..VW...\n0000010: b74d 1fcf 6a22 545a f4f5 9661 fd3a 65d8  .M..j\"TZ...a.:e.\n0000020: bf66 09de 2ad3 db11 85ce b720 5657 d79a  .f..*...... VW..\n0000030: 0810 6afb d5af dc41 f82d 14c2 c7c9 6074  ..j....A.-....`t\n0000040: 68fd 39b0 1d84 4f42 aed6 5bef 001a 0035  h.9...OB..[....5\n0000050: 002f 000a 0005 0004 0009 0003 0006 0008  ./..............\n\n$ nc -b en0 -l 8080 | xxd\n0000000: 1603 0100 6501 0000 6103 0156 57d8 06fa  ....e...a..VW...\n0000010: e277 86a3 accb ee40 430d 1eac 0e44 796c  .w.....@C....Dyl\n0000020: 2cc2 61fb c36c 73c3 05f6 9220 5657 d79a  ,.a..ls.... VW..\n0000030: 0810 6afb d5af dc41 f82d 14c2 c7c9 6074  ..j....A.-....`t\n0000040: 68fd 39b0 1d84 4f42 aed6 5bef 001a 0035  h.9...OB..[....5\n0000050: 002f 000a 0005 0004 0009 0003 0006 0008  ./..............\n\n$ nc -b en0 -l 8080 | xxd\n0000000: 1603 0100 6501 0000 6103 0156 57d8 1429  ....e...a..VW..)\n0000010: cd4c 3a4d 84d0 1996 6a45 7fcd 9c13 1343  .L:M....jE.....C\n0000020: 1865 799b cfa2 f273 cd03 ad20 5657 d79a  .ey....s... VW..\n0000030: 0810 6afb d5af dc41 f82d 14c2 c7c9 6074  ..j....A.-....`t\n0000040: 68fd 39b0 1d84 4f42 aed6 5bef 001a 0035  h.9...OB..[....5\n0000050: 002f 000a 0005 0004 0009 0003 0006 0008  ./..............\n\n$ nc -b en0 -l 8080 | xxd\n0000000: 1603 0100 6501 0000 6103 0156 57d8 f83b  ....e...a..VW..;\n0000010: c4ee 6322 7245 bbcc 5dd0 6e02 3694 9ce0  ..c\"rE..].n.6...\n0000020: ae02 b419 1766 2753 849e c020 5657 d8f8  .....f'S... VW..\n0000030: 89cd caa7 ae97 648e 65d4 f3c2 8057 00dc  ......d.e....W..\n0000040: a3a8 7f67 29ba 38ef 6588 b7c8 001a 0035  ...g).8.e......5\n0000050: 002f 000a 0005 0004 0009 0003 0006 0008  ./..............\n\n$ nc -b en0 -l 8080 | xxd\n0000000: 1603 0100 6501 0000 6103 0156 57da 22de  ....e...a..VW.\".\n0000010: 2b27 31db 6a7a 2b53 bca2 0343 6df6 301d  +'1.jz+S...Cm.0.\n0000020: ae1c 4706 470a b62f 7146 9320 380f 0da9  ..G.G../qF. 8...\n0000030: 9907 164b 22c6 5186 d134 94d6 5dbc 47ed  ...K\".Q..4..].G.\n0000040: ee8b 6598 a6ab e809 f34b 1357 001a 0035  ..e......K.W...5\n0000050: 002f 000a 0005 0004 0009 0003 0006 0008  ./..............\nmitmproxy version: 0.14.0\nOperating System: OS X 10.11.1, iOS 9.0.2", "issue_status": "Closed", "issue_reporting_time": "2015-11-27T04:58:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1266": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/846", "issue_id": "#846", "issue_summary": "Script Reloader Tests fail on OSX", "issue_description": "Member\nmhils commented on 27 Nov 2015\nThe script reloader tests currently fail on OSX and are thereby disabled. The feature is awesome though, so we should get them running. Maybe just forcing the polling reloader [on OSX] could do the job.", "issue_status": "Closed", "issue_reporting_time": "2015-11-27T01:42:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1267": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/845", "issue_id": "#845", "issue_summary": "HTML content view should not \"fix\" the HTML", "issue_description": "cweiske commented on 26 Nov 2015\nI used mitmproxy to analyze an API that an internet radio device interacts with. The server responded with sort-of-XML data, but a content-type: text/html header.\nmitmproxy used that header to switch to HTML response display mode, lowercasing all XML tags and adding a fsckng doctype header to the output.\nI did not know that mitmproxy tampered with the data I saw and wondered for days why my API replication did not work with the device.\nPlease please please:\nswitch to raw mode by default, or at least provide a parameter for this\ndo not add a DOCTYPE line to the responses of html. please. Do not add additional data that were not in the original response.", "issue_status": "Closed", "issue_reporting_time": "2015-11-25T22:30:36Z", "fixed_by": "#1831", "pull_request_summary": "Split contentviews.py into mitmproxy.contentviews", "pull_request_description": "Member\nmhils commented on 9 Dec 2016 \u2022\nedited by Kriechi\nAs a preparation for ditching lxml, this PR splits up mitmproxy/contentviews.py into ~ one file per view. Thinking forward, each view could actually be a separate addon in the future, but let's keep this minimally invasive for now.\nThe mitmproxy.contenviews API remains unchanged.\nfixes #845\nfixes #1657\nfixes #1444", "pull_request_status": "Merged", "issue_fixed_time": "2016-12-10T18:33:27Z", "files_changed": [["2", ".appveyor.yml"], ["2", "examples/simple/modify_body_inject_iframe.py"], ["672", "mitmproxy/contentviews.py"], ["183", "mitmproxy/contentviews/__init__.py"], ["27", "mitmproxy/contentviews/auto.py"], ["65", "mitmproxy/contentviews/base.py"], ["25", "mitmproxy/contentviews/css.py"], ["19", "mitmproxy/contentviews/hex.py"], ["17", "mitmproxy/contentviews/html_outline.py"], ["45", "mitmproxy/contentviews/image.py"], ["20", "mitmproxy/contentviews/javascript.py"], ["27", "mitmproxy/contentviews/json.py"], ["21", "mitmproxy/contentviews/multipart.py"], ["45", "mitmproxy/contentviews/protobuf.py"], ["15", "mitmproxy/contentviews/query.py"], ["12", "mitmproxy/contentviews/raw.py"], ["17", "mitmproxy/contentviews/urlencoded.py"], ["20", "mitmproxy/contentviews/wbxml.py"], ["234", "mitmproxy/contentviews/xml_html.py"], ["30", "mitmproxy/utils/sliding_window.py"], ["1", "requirements.txt"], ["1", "setup.py"], ["2", "test/mitmproxy/addons/test_dumper.py"], ["9", "test/mitmproxy/contentviews/__init__.py"], ["85", "test/mitmproxy/contentviews/test_api.py"], ["47", "test/mitmproxy/contentviews/test_auto.py"], ["29", "test/mitmproxy/contentviews/test_css.py"], ["7", "test/mitmproxy/contentviews/test_hex.py"], ["9", "test/mitmproxy/contentviews/test_html_outline.py"], ["17", "test/mitmproxy/contentviews/test_image.py"], ["10", "test/mitmproxy/contentviews/test_javascript.py"], ["16", "test/mitmproxy/contentviews/test_json.py"], ["25", "test/mitmproxy/contentviews/test_multipart.py"], ["12", "test/mitmproxy/contentviews/test_protobuf.py"], ["13", "test/mitmproxy/contentviews/test_query.py"], ["7", "test/mitmproxy/contentviews/test_raw.py"], ["15", "test/mitmproxy/contentviews/test_urlencoded.py"], ["29", "test/mitmproxy/contentviews/test_xml_html.py"], ["10", "test/mitmproxy/contentviews/test_xml_html_data/cdata-formatted.xml"], ["10", "test/mitmproxy/contentviews/test_xml_html_data/cdata.xml"], ["10", "test/mitmproxy/contentviews/test_xml_html_data/comment-formatted.xml"], ["10", "test/mitmproxy/contentviews/test_xml_html_data/comment.xml"], ["14", "test/mitmproxy/contentviews/test_xml_html_data/inline-formatted.html"], ["7", "test/mitmproxy/contentviews/test_xml_html_data/inline.html"], ["10", "test/mitmproxy/contentviews/test_xml_html_data/simple-formatted.html"], ["1", "test/mitmproxy/contentviews/test_xml_html_data/simple.html"], ["BIN", "-432", "Bytes", "test/mitmproxy/data/amf01"], ["BIN", "-286", "Bytes", "test/mitmproxy/data/amf02"], ["BIN", "-32.9", "KB", "test/mitmproxy/data/amf03"], ["284", "test/mitmproxy/test_contentview.py"], ["48", "test/mitmproxy/test_custom_contentview.py"], ["2", "test/mitmproxy/test_examples.py"], ["27", "test/mitmproxy/utils/test_sliding_window.py"], ["3", "tox.ini"]]}, "1268": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/844", "issue_id": "#844", "issue_summary": "mitm's memory usage", "issue_description": "nbdsp commented on 24 Nov 2015\nI have mitm installed on ArchArm on Raspberry Pi where it runs without restarting for days. It's only used for proxying pages to one browser on another machine. While running, mitm's memory usage steadily grows (e.g. now, without any browser using it, I see in the 'top' that mitm uses 'VIRT 364m RES 266m' whereas yesterday it was 'VIRT 248m RES 169m' ). I don't know, maybe mitm is designed for massive scale proxying and caches memory for optimal performance, but is it possible to tweak some settings to reduce memory usage? Or it's just simpler to restart it periodically with a script?", "issue_status": "Closed", "issue_reporting_time": "2015-11-24T17:30:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1269": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/842", "issue_id": "#842", "issue_summary": "Multipart viewer slow with large files", "issue_description": "danhawkes commented on 20 Nov 2015\nThis seems to be a new issue in 0.14:\nUploading a ~1MB file via multipart post, then attempting to view the request causes the UI to block for a long period of time.\nSample flow here:\nupload.txt", "issue_status": "Closed", "issue_reporting_time": "2015-11-20T13:30:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1270": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/841", "issue_id": "#841", "issue_summary": "crash on macbook pro(version 10.11.1)", "issue_description": "zeayes commented on 19 Nov 2015\ninstalled by brew install mitmproxy, mitmproxy 0.14.0.\nwhen I make iTerm2 fullscreen, it crash as followings:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 500, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 706, in _loop\n    self._entering_idle()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 667, in _entering_idle\n    callback()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 560, in entering_idle\n    self.draw_screen()\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 575, in draw_screen\n    self.screen.draw_screen(self.screen_size, canvas)\n  File \"/usr/local/Cellar/mitmproxy/0.14.0/libexec/vendor/lib/python2.7/site-packages/urwid/raw_display.py\", line 749, in draw_screen\n    if osb and osb[y] == row:\nIndexError: list index out of range\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2015-11-19T04:16:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1271": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/840", "issue_id": "#840", "issue_summary": "Serialization of traffic flows", "issue_description": "Contributor\nFuzion24 commented on 18 Nov 2015\nReading and instrumenting traffic flows at a later point has a been painful for us. They are very fragile between releases.\nI'd love to open a discussion about some way(s) to make the serialized flows more resilient to mitmproxy updates.\nCheers,\nRyan", "issue_status": "Closed", "issue_reporting_time": "2015-11-17T23:37:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1272": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/839", "issue_id": "#839", "issue_summary": "TypeError in SOCKS mode", "issue_description": "jo-m commented on 17 Nov 2015\nSteps to reproduce the problem:\nAfter starting (mitmproxy -p 8888 --socks), mitmproxy crashes after the first request (HTTP or HTTPS) with the following error shown:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy/modes/socks_proxy.py\", line 57, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 267, in __call__\n    self._establish_tls_with_client_and_server()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 395, in _establish_tls_with_client_and_server\n    self._establish_tls_with_client()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 399, in _establish_tls_with_client\n    cert, key, chain_file = self._find_cert()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/tls.py\", line 518, in _find_cert\n    return self.config.certstore.get_cert(host, list(sans))\n  File \"/usr/local/lib/python2.7/site-packages/netlib/certutils.py\", line 335, in get_cert\n    sans),\n  File \"/usr/local/lib/python2.7/site-packages/netlib/certutils.py\", line 109, in dummy_cert\n    [OpenSSL.crypto.X509Extension(b\"subjectAltName\", False, ss)])\n  File \"/usr/local/lib/python2.7/site-packages/OpenSSL/crypto.py\", line 651, in __init__\n    extension = _lib.X509V3_EXT_nconf(_ffi.NULL, ctx, type_name, value)\nTypeError: initializer for ctype 'char *' must be a str or list or tuple, not unicode\nI installed mitmproxy via my homebrew Pythons pip (/usr/local/bin/pip).\nmitmproxy version: mitmproxy 0.14.0\nOperating System: OSX 10.11.1 (15B42)\nBrowser: Firefox 42.0", "issue_status": "Closed", "issue_reporting_time": "2015-11-17T09:32:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1273": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/837", "issue_id": "#837", "issue_summary": "Occasional UnicodeDecodeError breaks flow view on mitmweb", "issue_description": "Contributor\nzbuc commented on 16 Nov 2015\nNot sure of repro steps yet, but I have seen this a few times.\nI was running mitmweb -T --host, had a little bit of HTTP traffic captured, then the mitmweb flow interface began throwing this error whenever it tried to update:\nERROR:tornado.application:Uncaught exception GET /flows (::1)\nHTTPServerRequest(protocol='http', host='localhost:8081', method='GET', uri='/flows', version='HTTP/1.1', remote_ip='::1', headers={'Accept-Language': 'en-US,en;q=0.8', 'Accept-Encoding': 'gzip, deflate, sdch', 'X-Requested-With': 'XMLHttpRequest', 'Host': 'localhost:8081', 'Accept': 'application/json, text/javascript, */*; q=0.01', 'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.86 Safari/537.36', 'Connection': 'keep-alive', 'Referer': 'http://localhost:8081/', 'Cookie': '_ga=GA1.1.311503227.1437663507; _xsrf=2|8fedf5f8|1cbe4b1c38ae27234a71f25a3caa7ca3|1446848479'})\nTraceback (most recent call last):\n  File \"/Users/chris/repos/venv.mitmproxy/lib/python2.7/site-packages/tornado/web.py\", line 1443, in _execute\n    result = method(*self.path_args, **self.path_kwargs)\n  File \"/Users/chris/repos/mitmproxy/libmproxy/web/app.py\", line 99, in get\n    data=[f.get_state(short=True) for f in self.state.flows]\n  File \"/Users/chris/repos/venv.mitmproxy/lib/python2.7/site-packages/tornado/web.py\", line 692, in write\n    chunk = escape.json_encode(chunk)\n  File \"/Users/chris/repos/venv.mitmproxy/lib/python2.7/site-packages/tornado/escape.py\", line 88, in json_encode\n    return json.dumps(value).replace(\"</\", \"<\\\\/\")\n  File \"/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/__init__.py\", line 243, in dumps\n    return _default_encoder.encode(obj)\n  File \"/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py\", line 207, in encode\n    chunks = self.iterencode(o, _one_shot=True)\n  File \"/usr/local/Cellar/python/2.7.10_2/Frameworks/Python.framework/Versions/2.7/lib/python2.7/json/encoder.py\", line 270, in iterencode\n    return _iterencode(o, 0)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xe0 in position 12: invalid continuation byte\nERROR:tornado.access:500 GET /flows (::1) 3.59ms\nThe only fix was to restart mitmweb and abandon the captured flows.\nI will run mitmweb with capturing enabled to see if I can get a reproducible flow file.", "issue_status": "Closed", "issue_reporting_time": "2015-11-16T16:45:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1274": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/835", "issue_id": "#835", "issue_summary": "Can't parse unicode into character when viewing HTML content", "issue_description": "Contributor\nMatthewShao commented on 16 Nov 2015\nStep to reproduce the problem:\nOpen a HTML webpage in Chinese with mitmproxy.\nSwitch to the Response page and view the content.\nWhat is the expected behavior?\nShould display the content like\n<meta name=\"description\" content=\"\u4e2d\u6587\u5b57\u7b26\"/>\ninstead of\n<meta name=\"description\" content=\"&#20013;&#25991;&#23383;&#31526;\"/>\nWhat went wrong?\nI guess libmproxy.contentviews.ViewHTML should be improved to fix this.\nAny other comments?\nIt's really confusing seeing whole screen of these unicodes instead of the correct characters. Hope we can fix this soon!", "issue_status": "Closed", "issue_reporting_time": "2015-11-16T12:12:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1275": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/834", "issue_id": "#834", "issue_summary": "Make sure that all content view tests are run on travis.", "issue_description": "Member\nmhils commented on 14 Nov 2015\nSee #821 - apparently we don't run the contentview stuff.", "issue_status": "Closed", "issue_reporting_time": "2015-11-14T02:34:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1276": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/831", "issue_id": "#831", "issue_summary": "mitmproxy 0.14 is too vocal about timeouts and disconnects.", "issue_description": "nbdsp commented on 12 Nov 2015\nI installed today the current version of mitm (v0.14) on ArchLinuxARM on Raspberry Pi and installed certificates in FireFox browser on other ArchLinux machine by opening the \"mitm.it\" site and clicking the \"Other\" icon. I start mitmdump with the command:\nmitmdum -b localhost -p 12345 -q\nWhen I open various sites, I get in stodut on Raspberry Pi many error messages like these:\n192.168.1.1:40142: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40148: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40150: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40158: ProtocolException(\"Error in HTTP connection: HttpSyntaxException('Bad HTTP request line: \\\\x81\\\\xc1\\\\xcd~z\\\\x90\\\\xb1/\\\\x0f\\\\xf5\\\\xbe',)\",)\n192.168.1.1:40176: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40184: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40186: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40188: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40192: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40198: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40102: ProtocolException(\"Error in HTTP connection: TcpDisconnect('[Errno 32] Broken pipe',)\",)\n192.168.1.1:40206: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40208: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40210: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40216: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\n192.168.1.1:40218: ProtocolException(\"Error in HTTP connection: TlsException('',)\",)\nI searched the web but there is no results for such error messages. Is this problem a known one and there is some standard solution to it?", "issue_status": "Closed", "issue_reporting_time": "2015-11-12T13:49:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1277": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/830", "issue_id": "#830", "issue_summary": "Upstream Proxy mode to a socks proxy?", "issue_description": "XericZephyr commented on 11 Nov 2015\nIs there a way to use mitmproxy to build up a transparent http proxy and then upstream to a socks5 server? Thanks.\n1", "issue_status": "Closed", "issue_reporting_time": "2015-11-11T08:44:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1278": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/829", "issue_id": "#829", "issue_summary": "\"Invalid syntax\" error in setup.py while installing 0.14", "issue_description": "command-tab commented on 10 Nov 2015\nI'm attempting to install mitmproxy 0.14 on OS X 10.10.5 under a Homebrew install of Python 2.7.10, and am getting a syntax error in setup.py:\n$ python --version\nPython 2.7.10\n$ pip install mitmproxy\nCollecting mitmproxy\n  Using cached mitmproxy-0.14.0.tar.gz\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n      File \"<string>\", line 20, in <module>\n      File \"/private/var/folders/2x/k12t17w5197cvg68_xrp1xsh00058y/T/pip-build-Gt72j1/mitmproxy/setup.py\", line 17\n        \"netlib>=%s, <%s\" % (version.MINORVERSION, version.NEXT_MINORVERSION),\n                                                                             ^\n    SyntaxError: invalid syntax\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/var/folders/2x/k12t17w5197cvg68_xrp1xsh00058y/T/pip-build-Gt72j1/mitmproxy\nI had mitmproxy 0.13 installed up until I ran into the error, successfully uninstalled it, but that did not affect whether or not I received the error. Is my setup missing something?\nThanks!", "issue_status": "Closed", "issue_reporting_time": "2015-11-10T18:12:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1279": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/828", "issue_id": "#828", "issue_summary": "[Question]Mitmproxy, google and cookies don't get along", "issue_description": "daw1012345 commented on 10 Nov 2015\nI'm trying to reverse-proxy the accounts.google.com website, but every time I try to log in, it says \"it seems that you have disabled cookies...\". Any help would be greatly appreciated.", "issue_status": "Closed", "issue_reporting_time": "2015-11-10T13:13:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1280": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/827", "issue_id": "#827", "issue_summary": "[Question][Help] Reverse Proxy a google website", "issue_description": "daw1012345 commented on 10 Nov 2015\nI'm trying to Reverse Proxy www.google.com. Every time I recive a \"Location: www.google.com \". I keep reciving the \"Location:\" header even if I change the \"Location:\" header to back to my website.", "issue_status": "Closed", "issue_reporting_time": "2015-11-10T02:29:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1281": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/826", "issue_id": "#826", "issue_summary": "mitmdump 0.14 on Windows 10 Does Nothing", "issue_description": "Contributor\nBSalita commented on 9 Nov 2015\nWhen I execute mitmdump 0.14 on Windows 10 (administrator mode), the program just waits. It's as if its not receiving any input. There's no errors reported. I've tried various command lines:\nmitmdump\nmitmdump --p 8888\nmitmdump -T --host\nIs there some other Windows installation step in addition to \"pip install mitmproxy\" and \"pip install netlib\"?\nCan someone confirm that mitmdump works on Windows 10?\nI previously had mitmdump 0.12 and 0.13 working. I think it was on Windows 10. I'm unable to drop back to a previous version of mitmdump because \"pip install\" keeps installing 0.14. I'm not sure how to build previous versions.\nI'm running mitmproxy 0.14 on a Mac without issue.", "issue_status": "Closed", "issue_reporting_time": "2015-11-09T15:00:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1282": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/825", "issue_id": "#825", "issue_summary": "support for netlib >= 0.14.0", "issue_description": "colemickens commented on 9 Nov 2015\nUpdated my Arch box. I now get this in mitmproxy:\nsudo mitmproxy\nTraceback (most recent call last):\n  File \"/usr/bin/mitmproxy\", line 5, in <module>\n    from pkg_resources import load_entry_point\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 3095, in <module>\n    @_call_aside\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 3081, in _call_aside\n    f(*args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 3108, in _initialize_master_working_set\n    working_set = WorkingSet._build_master()\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 660, in _build_master\n    return cls._build_from_requirements(__requires__)\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 673, in _build_from_requirements\n    dists = ws.resolve(reqs, Environment())\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 846, in resolve\n    raise DistributionNotFound(req, requirers)\npkg_resources.DistributionNotFound: The 'netlib<0.14,>=0.13' distribution was not found and is required by mitmproxy\nI've downgraded python2-netlib down to python2-netlib-0.13.1-1-any. Mitmproxy is working again.\nFolks in #archlinux recommended I file an upstream bug and then an Arch bug with a link to the upstream bug. This is the first step of that process.", "issue_status": "Closed", "issue_reporting_time": "2015-11-08T23:18:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1283": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/824", "issue_id": "#824", "issue_summary": "Proxy keeps asking for authentication all the time", "issue_description": "Antonn1 commented on 8 Nov 2015\nHello,\nI successfully setup mitmproxy and it's dependencies and when I run the proxy with a password, it just keeps asking for the password. Even though the password entered is correct.\nThis only started happening after I reinstalled the server and installed mitmproxy again.\nAm I missing something?", "issue_status": "Closed", "issue_reporting_time": "2015-11-08T16:46:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1284": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/823", "issue_id": "#823", "issue_summary": "Link back to http://mitmproxy.org from docs.mitmproxy.org", "issue_description": "Member\ncortesi commented on 7 Nov 2015\nThis is a tad confusing at the moment, especially if the user landed on the docs page from Google.", "issue_status": "Closed", "issue_reporting_time": "2015-11-07T06:38:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1285": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/818", "issue_id": "#818", "issue_summary": "HTTP whitelist based on Host field", "issue_description": "chumaitoe commented on 5 Nov 2015\n(this is a companion to #817, HTTPS whitelist based on SNI)\nI have a transparent proxy interposed between an android device and the internet, such that all traffic runs through the proxy. I want to sort the traffic such that connections to our servers (i.e. from our app) go through the proxy (i.e., display), while other traffic (from the device) goes through a RawTCPLayer so that they are not shown in the proxy display.\nI would like to have a flag that would take a list of domains, each of which would be compared to the value of the Host header. Requests that match would be sent through the proxy, while those that do not match can go through a RawTCPLayer so they do not display.\nThe potential sticky bit is that the bytes with the Host header may not have arrived yet when the flow is being examined for routing... I did not quite get a clear enough picture of the internals to know either way.", "issue_status": "Closed", "issue_reporting_time": "2015-11-05T00:00:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1286": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/817", "issue_id": "#817", "issue_summary": "HTTPS whitelist based on SNI", "issue_description": "chumaitoe commented on 5 Nov 2015\nI have a transparent proxy interposed between an android device and the internet, such that all traffic runs through the proxy. I want to sort the traffic such that connections to our servers (i.e. from our app) go through the proxy (i.e., display), while other traffic (from the device) goes through a RawTCPLayer so that they are not presented with the mitmproxy cert which they will reject.\nI am currently using examples/tls_passthrough.py from (the unreleased) 0.13.1, and it makes a good stopgap, but it is not sufficient, as it may reject our flows due to errors (of exactly the kind I'd be looking for) and/or accept flows from other (insecure or broken) apps, whose problems do not concern me.\nI would like an -H flag (name not important), similar to -I, but inverse, that accepts a list of hostnames to accept for TLS proxying. In order for this to work, the compare must be done against the SNI field. The reason for relying on the client request to identify the server is that our servers are cloud based, such that our IP addresses cannot be guaranteed, and the DNS lookup will return CNAMEs, which may change during the course of a session, thus tracking the server side becomes nontrivial.", "issue_status": "Closed", "issue_reporting_time": "2015-11-04T23:26:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1287": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/816", "issue_id": "#816", "issue_summary": "Add/Remove scripts on a running proxy", "issue_description": "arnau commented on 4 Nov 2015\nIs there a way to do the same | does in mitmproxy but using mitmdump?", "issue_status": "Closed", "issue_reporting_time": "2015-11-04T12:37:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1288": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/815", "issue_id": "#815", "issue_summary": "Reduce CA Validity Period", "issue_description": "Member\nmhils commented on 3 Nov 2015\nIt looks like we need to restrict the validity period of the mitmproxy CA:\nhttps://groups.google.com/forum/#!topic/mitmproxy/22Wk9aKORJg\nhttps://code.google.com/p/chromium/issues/detail?id=475745", "issue_status": "Closed", "issue_reporting_time": "2015-11-03T16:47:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1289": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/814", "issue_id": "#814", "issue_summary": "Not working for streaming audio", "issue_description": "programmin1 commented on 3 Nov 2015\nWhen I connect my phone to Mitmproxy it seems I can't access streaming audio file (through MediaElement.js player) until disconnecting the proxy.\nWhile the phone usually plays the audio (garbled and awful-sounding, unfortunately) it didn't start when connected to mitmproxy, and I saw 0 byte responses. Oddly enough I see the complete, normal file on reading the file back.", "issue_status": "Closed", "issue_reporting_time": "2015-11-03T08:05:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1290": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/813", "issue_id": "#813", "issue_summary": "Docs: Link to repo should match version of the docs", "issue_description": "arnau commented on 2 Nov 2015\nThe add_header example fails to run. For convenience showed here:\ndef response(context, flow):\n    flow.response.headers[\"newheader\"] = \"foo\"\nSteps to reproduce the problem:\nStart the proxy\nmitmdump --script add_header.py\n(tested with mitmproxy --script add_header.py as well)\nMake a request\ncurl -I --proxy http://localhost:8080 -XGET http://github.com\nWhat is the expected behavior?\nTo get back something like:\nHTTP/1.1 302 Found\nConnection: close\nPragma: no-cache\ncache-control: no-cache\nLocation: /\nnewheader: foo\nContent-Length: 0\nWhat went wrong?\nSee the trace:\nScript error:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/lib/python2.7/site-packages/libmproxy/script.py\", line 123, in run\n    return (True, f(self.ctx, *args, **kwargs))\n  File \"/Users/arnau/kitchen/me/proxyswitch/example.py\", line 4, in response\n    flow.response.headers['newheader'] = 'foo'\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/netlib/odict.py\", line 72, in __setitem__\n    \"Expected list of values instead of string. \"\nValueError: Expected list of values instead of string. Example: odict['Host'] = ['www.example.com']\nAny other comments?\nThe following example works:\ndef response(context, flow):\n    flow.response.headers[\"newheader\"] = [\"foo\"]\nHTTP/1.1 302 Found\nConnection: close\nPragma: no-cache\ncache-control: no-cache\nLocation: /\nnewheader: foo\nContent-Length: 0\nAlthough not directly related to the issue the following surprised me:\ndef response(context, flow):\n    flow.response.headers[\"newheader\"] = [\"foo\", \"bar\"]\nHTTP/1.1 302 Found\nConnection: close\nPragma: no-cache\ncache-control: no-cache\nLocation: /\nnewheader: foo\nnewheader: bar\nContent-Length: 0\nI expected to have just one newheader. Is it intended to be this way?", "issue_status": "Closed", "issue_reporting_time": "2015-11-02T15:37:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1291": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/812", "issue_id": "#812", "issue_summary": "Broken link \"Hacking\"", "issue_description": "arnau commented on 2 Nov 2015\nHi, links in https://mitmproxy.org/doc/install.html pointing to https://github.com/mitmproxy/mitmproxy/blob/master/README.mkd#hacking are broken. The README extension should be .rst", "issue_status": "Closed", "issue_reporting_time": "2015-11-02T12:53:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1292": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/811", "issue_id": "#811", "issue_summary": "Mitmproxy has Crashed!", "issue_description": "justuandme commented on 31 Oct 2015\nHI,\ni recently updated the mitmproxy in kali linux, i updated using virtualenv and it was intalled without any errors.\nand the mitmproxy is working fine decrypting the SSL traffic too, but after a while it suddenly got crashed... i restarted it again.. and it works fine.. and after sometime it again crashed. here i took the screenshot.", "issue_status": "Closed", "issue_reporting_time": "2015-10-31T10:59:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1293": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/808", "issue_id": "#808", "issue_summary": "Export/copy request as code", "issue_description": "areichow commented on 28 Oct 2015\nIt would be great if mitmproxy allowed you to generate a snippet of code, presumably in Python, that would issue the same request.\nRelated to the following two requests:\nExport/copy request as raw text\nExport as curl command", "issue_status": "Closed", "issue_reporting_time": "2015-10-27T22:09:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1294": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/807", "issue_id": "#807", "issue_summary": "Export/copy request as raw text", "issue_description": "areichow commented on 28 Oct 2015\nA feature I've been using in Fiddler is the ability to export the request as raw text. Once saved, the raw request easily replayed (with or without manual or programmatic modification) with netcat with a command like this:\nnc api.host.com 80 < raw-request.txt > response.txt", "issue_status": "Closed", "issue_reporting_time": "2015-10-27T22:05:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1295": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/806", "issue_id": "#806", "issue_summary": "mitmproxy crashes when changing window size", "issue_description": "revintec commented on 24 Oct 2015\nI'm using the latest version(0.13) on OS X, inside iTerm2, zsh\nto trigger this bug: open mitmproxy, then change the window size.\n(put mouse at the bottom-right edge to change width and height at the same time)\ndo it several times, mitmproxy crash with 100% probability:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 499, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 706, in _loop\n    self._entering_idle()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 667, in _entering_idle\n    callback()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 560, in entering_idle\n    self.draw_screen()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 575, in draw_screen\n    self.screen.draw_screen(self.screen_size, canvas)\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/raw_display.py\", line 749, in draw_screen\n    if osb and osb[y] == row:\nIndexError: list index out of range\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2015-10-24T16:43:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1296": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/804", "issue_id": "#804", "issue_summary": "mitmproxy crashes", "issue_description": "davinerd commented on 21 Oct 2015\nWhen the 'victim' tries to get a non existent file from a remote location, mitmproxy crashes.\nHere's the log:\n(venv)srv@ubuntu:~/mitmnbdf$ mitmproxy --version\nmitmproxy 0.13\n(venv)srv@ubuntu:~/mitmnbdf$ mitmproxy -T --host -s \"mitmnbdf_inline.py mitmnbdf.cfg\"\nTraceback (most recent call last):\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 499, in run\n    self.loop.run()\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\n    self._watch_files[fd]()\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/urwid/raw_display.py\", line 392, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/urwid/raw_display.py\", line 492, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 399, in _update\n    self.process_input(keys)\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 496, in process_input\n    event, button, col, row, focus=True ):\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/libmproxy/console/window.py\", line 22, in mouse_event\n    k = super(self.__class__, self).mouse_event(*args, **kwargs)\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/urwid/container.py\", line 1169, in mouse_event\n    event, button, col, row-htrim, focus )\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/urwid/listbox.py\", line 1538, in mouse_event\n    focus=True)\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/urwid/listbox.py\", line 342, in calculate_visible\n    focus_widget, focus_pos = self.body.get_focus()\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 270, in get_focus\n    f = ConnectionItem(self.master, self.state, f, True) if f else None\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 106, in __init__\n    w = self.get_text()\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 114, in get_text\n    marked=self.state.flow_marked(self.flow)\n  File \"/home/srv/mitmnbdf/venv/local/lib/python2.7/site-packages/libmproxy/console/common.py\", line 399, in format_flow\n    contentdesc = netlib.utils.pretty_size(len(f.response.content))\nTypeError: object of type 'HTTPFlow' has no len()\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...\nThe victim's request is a simple curl --write-out \"%{time_total} - %{url_effective}\\n\" --silent --remote-name http://my.remote.host/non-existent-file.exe.\nIt works fine if the file exists.", "issue_status": "Closed", "issue_reporting_time": "2015-10-20T21:30:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1297": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/803", "issue_id": "#803", "issue_summary": "Mitmproxy doesn't seem to work with ios9", "issue_description": "niravnagda commented on 16 Oct 2015\nHi,\nI am trying to get the proxy working with ios9 and the ATS in the new os, is somehow not allowing the apps to recognize the certificate\nI am getting \"the client may not trust the proxy's certificate\" error. I have certificate installed in the device", "issue_status": "Closed", "issue_reporting_time": "2015-10-15T21:26:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1298": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/802", "issue_id": "#802", "issue_summary": "mitmweb - possibility to add username / password for web interface", "issue_description": "fliespl commented on 15 Oct 2015\nHi everyone,\nI am not sure if it's possible or not. I went through docs and couldn't find it. Is there an easy way to protect web port access (not proxy).", "issue_status": "Closed", "issue_reporting_time": "2015-10-15T08:34:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1299": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/800", "issue_id": "#800", "issue_summary": "Error, mac osx \"El capitan\" when select and copy text.", "issue_description": "edtler commented on 13 Oct 2015\nOS: El capitan\nterminal:iterm2\nMitmproxy is installed with brew, and the next error ocurr when select and copy text.\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 499, in run\n    self.loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/raw_display.py\", line 392, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/raw_display.py\", line 492, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 399, in _update\n    self.process_input(keys)\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 499, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/lib/python2.7/site-packages/libmproxy/console/window.py\", line 38, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/vendor/lib/python2.7/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 123, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/usr/local/Cellar/mitmproxy/0.13/libexec/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 82, in keypress\n    self.prompt_execute(self._w.get_edit_text())\nAttributeError: 'Text' object has no attribute 'get_edit_text'", "issue_status": "Closed", "issue_reporting_time": "2015-10-13T09:48:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1300": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/798", "issue_id": "#798", "issue_summary": "installing mitmproxy in Ubuntu", "issue_description": "ra7bi commented on 10 Oct 2015\nhello all, i installed ubunut last V and when i tried to install mitmproxy always faild can you give us any bash script with all installation instructions because i followed your read me and not working .\nfor the errors most of them is module not found", "issue_status": "Closed", "issue_reporting_time": "2015-10-09T20:53:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1301": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/795", "issue_id": "#795", "issue_summary": "Import error", "issue_description": "Quach90 commented on 8 Oct 2015\nHi\nI'm trying to run one of the examples but I keep getting an error from: upsidedownternet.py\nmitmdump: Traceback (most recent call last):\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/script.py\", line 99, in load\nexecfile(self.argv[0], ns, ns)\nFile \"upsidedownternet.py\", line 3, in\nfrom libmproxy.models import decoded\nImportError: No module named models\nSince I couldn't find version 0.13 in any of the branches I assumed it was the master branch. (I'm looking to get the decoded to work, so that I can work with gzipped)\nThanks!", "issue_status": "Closed", "issue_reporting_time": "2015-10-07T19:34:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1302": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/794", "issue_id": "#794", "issue_summary": "Typo in the docs", "issue_description": "Contributor\nben-lerner commented on 8 Oct 2015\nAt the bottom of https://mitmproxy.org/doc/certinstall.html, the option should be --conf DIRECTORY, not --confdir.", "issue_status": "Closed", "issue_reporting_time": "2015-10-07T19:17:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1303": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/790", "issue_id": "#790", "issue_summary": "when in upstream proxy mode, mitmproxy replaces host IP with upstream proxy IP for some requests", "issue_description": "milesrichardson commented on 2 Oct 2015\nVersion:\n$ mitmproxy --version mitmproxy 0.12.1\n(old version because I ran into some issues with upstream proxy support + SSL in newer versions... don't recall exactly what they were at the moment)\nSetup:\niOS connected to wifi router with default route through VPN tunnel (10.0.0.1)\niOS configured wifi to use HTTP proxy on internal VPN IP (10.0.0.100)\nmitmproxy launch args:\nmitmproxy -U http://111.111.111.111:1234 -B 10.0.0.100\nwhere 111.111.111.111:1234 is a publicly reachable upstream proxy IP and 10.0.0.100 is the internal VPN IP of mitmproxy that iOS is configured to connect to.\nProblem:\nSeemingly randomly, mitmproxy will replace the host portion of the URL with the IP of the upstream proxy.\nFor example if I am connecting to https://www.google.com/some_endpoint then mitmproxy will transform the URL into http://111.111.111.111:1234/some_endpoint. i.e., the hostname will include the full IP and port of the upstream proxy. It seems like this happens when the request should be over an HTTPS connection.\nMy anecdotal observation is that this happens after the upstream proxy responds to a CONNECT request with a 403 error (the upstream proxy may be misconfigured). i.e. if the CONNECT request to www.google.com returns a 403 error, then the next request to https://www.google.com/some_endpoint will be replaced with http://111.111.111.111:1234/some_endpoint\nIs this expected behavior, or a bug?", "issue_status": "Closed", "issue_reporting_time": "2015-10-02T16:18:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1304": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/789", "issue_id": "#789", "issue_summary": "mitmproxy cant handle request on non-standart port", "issue_description": "Tatikoma commented on 1 Oct 2015\nHello.\nI'm trying to intercept HTTP-request on port 15020 from my molbile phone.\nI configured phone to use my PC as gateway and configured iptables rule at my system:\niptables -t nat -A PREROUTING -s 10.0.0.115/32 -p tcp -m tcp --dport 15020 -j REDIRECT --to-ports 8080\n10.0.0.115 is IP-address of my phone.\ni run mitmproxy as:\nmitmproxy -T --host\nmitmproxy version is:\n$ mitmproxy --version\nmitmproxy 0.10.1\nNow i open browser on my mobile phone, in browser i try to open http://tati.pro:15020 and i see error:\nBad HTTP request line: 'GET http://tati.pro:15020/ HTTP/1.1\\r\\n'\ninstead of correct output. Also i cannot see that request in mitmproxy.\ni can open this website w/o any issues w/o mitmproxy.", "issue_status": "Closed", "issue_reporting_time": "2015-10-01T16:19:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1305": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/787", "issue_id": "#787", "issue_summary": "save SSL keys or secrets in mitmdump", "issue_description": "ghost commented on 30 Sep 2015\nIs there a way to save the SSL keys in a form for wireshark (\"(Pre)-Master-Secret\")? If not is it possible to add such functionality?\nFor example I get an \"invalid header\" or \"Gateway Timeout\" error for some SSL sites by using mitmdump. Without mitmdump everything works ok. Without seeing both request, the original one and the one used by mitmdump it is difficult to find the problem.", "issue_status": "Closed", "issue_reporting_time": "2015-09-29T20:09:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1306": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/786", "issue_id": "#786", "issue_summary": "mitmdump produces \"Bad Request\" by replacing host header", "issue_description": "ghost commented on 30 Sep 2015\nWhat's the problem?\nDifferent sites could not be called when mitmdump runs, e.g. Amazon(US) and CRLs from Microsoft. Amazon will open but do not load some CSS and pictures resulting in an very ugly page. Probably every site using Akamai is affected.\nWhat's expected?\nWindows should get its CRLs and Amazon site should be displayed normally.\nWhich versions are affected?\nThe master version of mitmdump/libmproxy from yesterday was used.\nIn detail the last commit should be\nc6811bd for mitmproxy\n0f9a725 for pathod and\n2e1f7ec for netlib.\nHow to reproduce the problem?\nIt should be enough to run mitmdump with SSL support and in transparent proxy mode to capture data. Then use a client with installed root certificate to call a site with Akamai like https://www.amazon.com. A Windows client may try to update its CRLs after some time.\nWhy does this happen?\nOne CRL from Microsoft is used as an example.\nThe client asked for\nGET /pkiops/crl/MicSecSerCA2011_2011-10-18.crl HTTP/1.1\nCache-Control: max-age = 750\nConnection: Keep-Alive\nAccept: */*\nIf-Modified-Since: Sun, 27 Sep 2015 05:01:39 GMT\nIf-None-Match: \"24caf397e1f8d01:0\"\nUser-Agent: Microsoft-CryptoAPI/6.1\nHost: www.microsoft.com\nmitmdump will alter this request and asked the server for\nGET /pkiops/crl/MicSecSerCA2011_2011-10-18.crl HTTP/1.1\nCache-Control: max-age = 750\nConnection: Keep-Alive\nAccept: */*\nIf-Modified-Since: Sun, 27 Sep 2015 05:01:39 GMT\nIf-None-Match: \"24caf397e1f8d01:0\"\nUser-Agent: Microsoft-CryptoAPI/6.1\nhost: 23.206.108.111\nThis leads to the result\nHTTP/1.0 400 Bad Request\nServer: AkamaiGHost\nMime-Version: 1.0\nContent-Type: text/html\nContent-Length: 259\nExpires: Tue, 29 Sep 2015 10:50:56 GMT\nDate: Tue, 29 Sep 2015 10:50:56 GMT\nConnection: close\n\n<HTML><HEAD>\n<TITLE>Invalid URL</TITLE>\n</HEAD><BODY>\n<H1>Invalid URL</H1>\nThe requested URL \"&#47;pkiops&#47;crl&#47;MicSecSerCA2011&#95;2011&#45;10&#45;18&#46;crl\", is invalid.<p>\nReference&#32;&#35;9&#46;76a9645f&#46;1443523856&#46;276b8d47\n</BODY></HTML>\nMitmdump exchange the Host header with domain with a host header with IP. The RFC mentioned that the header are case-insensitive. Thus the IP seems to be the problem, server with virtual hosts and it seems Akamai server, too, do not know which one is requested.\nIs there a workaround?\nWell in netlib/http/request.py in the @host.setter function starting in line 106 the last part after comment # Update host header could be commented out to prevent the Host header to get modified.\nWhy is this post here?\nI am not sure where to post it. The workaround is in netlib but the problem exists in mitmdump thus I put it here. I am sorry if this is wrong.\nIs there something else?\nMay I ask a question? This is not the first time to see that the destination/host from the TCP layer is used by mitmdump for the header field at HTTP layer. There are different technique like virtual hosts and load balancing which may not work that way.\nIs there a special reason for this strategy?", "issue_status": "Closed", "issue_reporting_time": "2015-09-29T19:56:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1307": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/784", "issue_id": "#784", "issue_summary": "HTTP header parameters encoding", "issue_description": "R1kk3r commented on 25 Sep 2015\nI tried to use mitmproxy between a client and a server in HTTPS. The server is a tomcat server configured in French with a Java web application running. When I use mitmproxy, I got a HttpSyntaxException.\nHttpSyntaxException('Non-ascii characters in first line: HTTP/1.1 401 Non-Autoris\\xe9',)\nThis is because the Response-Phrase of the HTTP response is \"Non-Autoris\u00e9\".\nI read some RFC related to HTTP but I found nothing related to the allowed encoding for HTTP header parameters. Because web browser doesn't seem to encounter a problem with this, I guess it is a mitmproxy (or netlib) issue. Converting all source files into utf-8 encoding and using the \"# coding: utf-8\" should solve this case.\nEDIT:\nI have located the issue in netlib/http/http1/read.py line 223:\nline.decode(\"ascii\")\nMy fix is to do a .decode(\"latin1\"), if it fails do a .decode(\"ascii\"), if it fails, raise the error.\nDon't know if it's correct...", "issue_status": "Closed", "issue_reporting_time": "2015-09-25T11:55:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1308": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/783", "issue_id": "#783", "issue_summary": "mitmproxy doesn't works with Android Emulator + SSL", "issue_description": "cybersecurity7 commented on 25 Sep 2015\nMitmproxy package on Kali Linux 2.0 (mitmproxy 0.13)\nMitmproxy CA cert installed on Android Emulator 5.0.1 (API 21) / 4.4.2 (API 19) [SDK 24.3.4]\nmitmproxy -e -vvv\nFrom Android Emulator Browser->https://www.google.com/\n...\n127.0.0.1:50899: Received CONNECT request to SSL port. Upgrading to SSL...\n127.0.0.1:50899: Establish SSL\n-> with client\n-> with server (sni: None)\n127.0.0.1:50899: SSL handshake error: The client may not trust the proxy's certificate.\n127.0.0.1:50899: ProxyError('NetLibError(\"SSL handshake error: SysCallError(-1, 'Unexpected EOF')\",)',)\n127.0.0.1:50897: SSL handshake error: The client may not trust the proxy's certificate.\n127.0.0.1:50897: ProxyError('NetLibError(\"SSL handshake error: SysCallError(-1, 'Unexpected EOF')\",)',)\n127.0.0.1:50899: clientdisconnect\n127.0.0.1:50897: clientdisconnect\n127.0.0.1:50899: serverdisconnect\n-> 64.15.126.59:443\n...", "issue_status": "Closed", "issue_reporting_time": "2015-09-25T11:20:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1309": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/782", "issue_id": "#782", "issue_summary": "\"Address already in use\" even when it's not", "issue_description": "milesrichardson commented on 22 Sep 2015\nHi\nI am running multiple mitmproxy instances on one machine. Each instance has its own port between 49000 and 50000. All instances are listening on interface 0.0.0.0. Instances stop and restart multiple times per hour.\nMost instances start fine. However, a few random ones will fail with the error that address is already in use:\n$ mitmproxy -p 49338 Error starting proxy server: error(98, 'Address already in use')\nHowever, netstat does not show any process using the port:\n$ sudo netstat -nlp | grep 49338\nI also do not see any zombie processes trying to start the same instance.\nAny idea what's causing this? Is the problem that every instance is listening on 0.0.0.0? How does mitmproxy decide whether a port is \"open\"?", "issue_status": "Closed", "issue_reporting_time": "2015-09-22T15:04:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1310": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/781", "issue_id": "#781", "issue_summary": "ImportError: No module named 'urlparse'", "issue_description": "jadedevin13 commented on 22 Sep 2015\nNot running", "issue_status": "Closed", "issue_reporting_time": "2015-09-21T22:57:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1311": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/779", "issue_id": "#779", "issue_summary": "Running libmproxy produces this error.", "issue_description": "pixelmai commented on 18 Sep 2015\nimport socket\nfrom libmproxy import controller, proxy\nTraceback (most recent call last):\nFile \"\", line 1, in\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy/init.py\", line 1, in\nfrom .primitives import *\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy/primitives.py\", line 2, in\nfrom netlib import socks, tcp\nFile \"/Library/Python/2.7/site-packages/netlib/socks.py\", line 5, in\nfrom . import tcp, utils\nFile \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 26, in\n'TLSv1.2': SSL.TLSv1_2_METHOD,\nAttributeError: 'module' object has no attribute 'TLSv1_2_METHOD'", "issue_status": "Closed", "issue_reporting_time": "2015-09-18T15:32:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1312": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/778", "issue_id": "#778", "issue_summary": "dev closes terminal or session", "issue_description": "ghost commented on 18 Sep 2015\nI forgot one little problem. In the documentation in part Hacking it is said to call source ./dev. Thus the script is running in the current shell session. If virtualenv is not installed than exit is called closing the current shell session. Thus in a terminal the terminal is closed and in a virtual console the whole session is terminated and user is logged out. In both cases the printed error message is not visible. The user only see that the terminal is closed or they are logged out.", "issue_status": "Closed", "issue_reporting_time": "2015-09-18T14:12:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1313": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/777", "issue_id": "#777", "issue_summary": "Content Views not refreshing", "issue_description": "Member\nmhils commented on 18 Sep 2015\nWhen pressing z (or updating the body), the content view does not refresh.", "issue_status": "Closed", "issue_reporting_time": "2015-09-18T11:44:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1314": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/775", "issue_id": "#775", "issue_summary": "no replay is printed in mitmdump", "issue_description": "ghost commented on 18 Sep 2015\nI try to keep it short.\nUp to version 0.13 I was used that mitmdump tells me when a site was replayed with a line include << and [replay]. If the site was not replayed but loaded from the original server than it printed something with << but without [replay]. But this was not done with the master version from yesterday. Thus it was harder to find #774.\nThe output from mitmdump was moved to click instead of print, I think. After a search I found out that the handle_request function of dump.py is the point of my ambition. It response on a request but did not print anything. Thus I added the line\nself.echo_flow(f)\nafter f.reply() and the replay output is back.\nI think this is a bug and that it affects the option -d, too. If neither is true, I'm sorry for this report.", "issue_status": "Closed", "issue_reporting_time": "2015-09-17T22:06:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1315": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/774", "issue_id": "#774", "issue_summary": "HTTPS not replayed by mitmdump", "issue_description": "ghost commented on 18 Sep 2015\nWhat's the problem?\nMitmdump is configured as a transparent proxy with ssl support, the certificate is installed. The sites with ssl could be captured but with some thousand URIs for https and http none for https is replayed, only http.\nI'm not sure if this is related to #755.\nWhat's expected?\nThe https sites should be replayed, too.\nWhich versions are affected?\nThe master version of mitmdump/libmproxy from yesterday was used.\nIn 0.13 this problem was not there.\nHow to reproduce the problem?\nThe best way I can think of is to search for a file with HTTPS, like a picture from wikipedia, to capture it with a transparent mitmdump and than to replay this. I used --no-pop but I think this doesn't matter.\nWhy does this happen?\nFor a better understanding I modified the output of mitmdump. Thus it told me when a replay was done and additionally the value of _hash from flow.py. Therefore I added a print(repr(key)) in front of the return of the _hash function.\nNow I used the logo from wikipedia for the test. With the modified hash function there is a line printed for every response in the captured file on startup. In this case it is something like\n['443', 'http', 'GET', [...]\nWhen a request occur some new line are printed, in this case something like\n['443', 'https', 'GET', [...]\n192.168.X.X:59990: clientconnect\n192.168.X.X GET https://[...]\n192.168.X.X GET https://[...]\n << 200 OK 10kB\n192.168.X.X:59990: clientdisconnect\nDo not forget, the output is modified thus more is printed than normal. But the problem is also revealed. When the captured file is loaded the saved data is loaded with scheme http. But the request is done with https thus there is no match but a miss and mitmdump did not find the captured data even though it is there.\nBy looking into the captured file it is clear, that the data is saved with scheme https and thus correctly.\nHow could the problem be solved?\nWell to be true I undo some code. I removed line 249 scheme = \"https\" if flow.client_conn and flow.client_conn.ssl_established else \"http\" and set scheme=r.scheme. This is a workaround and I could not tell the side effects of this.\nBut to say the truth I do not understand why there is such a line. Depending on the comment I think that libmproxy may downgrade https connection to http ones. And to be able to find the data the scheme is modified. But if scheme could only be https and http and that you try to find the response in both cases, I do not know why scheme is not simply removed.", "issue_status": "Closed", "issue_reporting_time": "2015-09-17T21:54:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1316": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/773", "issue_id": "#773", "issue_summary": "crash of mitmdump as result of bad cookie", "issue_description": "ghost commented on 18 Sep 2015\nWhat's the problem?\nI recently see mitmdump crashing with errors like\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/transparent_proxy.py\", line 21, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 273, in __call__\n    layer()\nTypeError: 'NoneType' object is not callable\n\nmitmproxy has crashed!Traceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/transparent_proxy.py\", line 21, in __call__\n    layer()\nTypeError: 'NoneType' object is not callable\n\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/transparent_proxy.py\", line 21, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 273, in __call__\n    layer()\nTypeError: 'NoneType' object is not callable\nmitmproxy has crashed!\nmitmproxy has crashed!\n\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxyPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n\n\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/transparent_proxy.py\", line 21, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 273, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 162, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 367, in __call__\n    self.get_response_from_server(flow)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 485, in get_response_from_server\n    if flow.response.stream:\nAttributeError: 'NoneType' object has no attribute 'response'\n[...]\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmdump\", line 3, in <module>\n    mitmdump()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/main.py\", line 99, in mitmdump\n    master.run()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/dump.py\", line 342, in run\n    return flow.FlowMaster.run(self)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py\", line 122, in run\n    self.tick(self.masterq, 0.1)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 821, in tick\n\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py\", line 108, in tick\n    self.handle(*msg)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py\", line 129, in handle\n    m(obj)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/dump.py\", line 314, in handle_request\n    flow.FlowMaster.handle_request(self, f)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 1003, in handle_request\n    return f\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 914, in process_new_request\n    if not pb:\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 801, in do_server_playback\n    flow.reply(response)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/models/http.py\", line 396, in refresh\n    c.append(self._refresh_cookie(i, delta))\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/models/http.py\", line 355, in _refresh_cookie\n    c = Cookie.SimpleCookie(str(c))\n  File \"/usr/lib/python2.7/Cookie.py\", line 576, in __init__\n    if input: self.load(input)\n  File \"/usr/lib/python2.7/Cookie.py\", line 629, in load\n    self.__ParseString(rawdata)\n  File \"/usr/lib/python2.7/Cookie.py\", line 662, in __ParseString\n    self.__set(K, rval, cval)\n  File \"/usr/lib/python2.7/Cookie.py\", line 582, in __set\n    M.set(key, real_value, coded_value)\n  File \"/usr/lib/python2.7/Cookie.py\", line 457, in set\n    raise CookieError(\"Illegal key value: %s\" % key)\nCookie.CookieError: Illegal key value: f_?RK<\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 120, in handle\n    root_layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/transparent_proxy.py\", line 21, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py\", line 273, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 162, in __call__\n    layer()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 367, in __call__\n    self.get_response_from_server(flow)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 485, in get_response_from_server\n    if flow.response.stream:\nAttributeError: 'NoneType' object has no attribute 'response'\n[...]\nWhat's expected?\nmitmdump should not crash but handle the problem.\nWhich versions are affected?\nThe master version of mitmdump from yesterday was used.\nHow to reproduce the problem?\nI'm sorry but I do not know exactly how to produce this. I think it should be enough to set up a small server, e.g. with python, that sends a \"bad\" cookie. Now running mitmdump as a transparent proxy and capturing the data. Afterwards the crash should occur at the replay. But I had not the time to test this.\nWhy does this happen?\nIn my captured files there seems to be a bad cookie from match.rtbidder.net/match?[...]. I do not know if this is against any convention but it crashed mitmdump as a result of a Cookie.CookieError.\nAfter modifying mitmdump to log every Cookie in libmproxy/models/http.py _refresh_cookie, it was clear that the following shortened line lead to the error:\nuid=Kfyl<1f>]f_?RK<=x__<5/C#j>/KP8>=[...]mC72; path=/; domain=.rtbidder.net; expires=Thu, 15-Sep-2016 [...]\nHow could the problem be solved?\nI modified _refresh_cookie in a way that everything expect the return is covered by a try except block for Cookie.CookieError. If the error occurs the original parameter str(c).strip() is returned. I know that the expiration time is not modified but I thought this is better than a crash.", "issue_status": "Closed", "issue_reporting_time": "2015-09-17T21:21:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1317": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/772", "issue_id": "#772", "issue_summary": "ssl_error_bad_cert_domain for some sites on Firefox (mitmdump)", "issue_description": "ghost commented on 18 Sep 2015\nWhat's the problem?\nOn some site like https://www.amazon.com and https://www.google.com in firefox 38 the error sec_error_bad_der occurs and firefox refuses to load the site. After Upgrading to the current version 40 the error changed to ssl_error_bad_cert_domain and it is possible to manually allow the site, at least if no HSTS is used. Other sites, e.g. Amazon or Google for other some other countries , worked without an error.\nThere is no problem with Internet Explorer at all.\nI'm not sure if this is related to #755.\nWhat's expected?\nThe sites should be shown without an error.\nWhich versions are affected?\nI used the last master version from yesterday (GMT).\nHow to reproduce the problem?\nI used mitmdump as a transparent proxy and tried to capture data. The error occurred every time.\nWhy does this happen?\nSome parts of the certificate created by mitmdump resp. libmproxy are changed. Specially the Subject Alternative Names are mentioned. The IP of the server is added and that is done in a wrong way. After removing this, the sites worked.\nI looked into the source code of firefox and indeed it seems that in version 38.0.5 a problem with Subject Alternative Name would lead to an bad der error; while in version 40.0.? a bad der error is changed to a bad cert domain error.\nDespite that I do not know of any reason to add an IP to the certificate, mitmdump add the ip as a domain and not as an ip.\nIn the RFC (https://tools.ietf.org/html/rfc5280#section-4.2.1.6) it is said that the address MUST be stored in the octet string in \"network byte order\". Thus an ip like 64.64.64.64 has to be saved as 0x 40 40 40 40 but it is saved as the string \"64.64.64.64\".\nI do not know if ICANN or whoever prohibits domains that could be an ip - how should the browser be know the different - as far as I know there is no TLD with only numbers. Thus a not existing domain is added as a Subject Alternative Name to the certificate. It seems that firefox does not like this and the internet explorer just ignores it.\nThe ip domain entry for sites working in firefox were added after the requested domain while in sites with the error the ip domain was added in front of it. Thus I think firefox simply ends the search after an error occurred or the domain is found.\nHow could the problem be solved?\nAs a workarround and with the fact that I do not know why the ip is added anyway, I commented out line 511 (sans.add(host)) in libmproxy/protocol/tls.py", "issue_status": "Closed", "issue_reporting_time": "2015-09-17T20:17:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1318": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/771", "issue_id": "#771", "issue_summary": "upgrading tnetstring from 0.2.0 to 0.2.1", "issue_description": "MetaMemoryT commented on 17 Sep 2015\nThe embedded tnetstring is 0.2.0\nhttps://github.com/mitmproxy/mitmproxy/blob/master/libmproxy/tnetstring.py#L71\nThe latest is 0.2.1\nhttps://github.com/rfk/tnetstring/blob/master/tnetstring/__init__.py#L51\nPerhaps we should consider depending on the package rather than embedding the library.\nI encountered an obscure tnetstring error and I thought I should spend my effort working on the tnetstring library rather that some obsolete embedded version.\nAlso, depending on the library will allow some users to use the _tnetstring.c performance improvements.\nMaybe, if necessary we could host a forked version of the library at\nhttps://github.com/mitmproxy/tnetstring if there are mitmproxy specific changes, and that is why the library was embedded in the first place.\nThoughts?", "issue_status": "Closed", "issue_reporting_time": "2015-09-17T16:29:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1319": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/770", "issue_id": "#770", "issue_summary": "Fix Expect: 100-Continue requests", "issue_description": "Member\nmhils commented on 17 Sep 2015\nWe should handle these explicitly in the protocol handler now.", "issue_status": "Closed", "issue_reporting_time": "2015-09-16T23:32:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1320": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/769", "issue_id": "#769", "issue_summary": "AttributeError: 'Address' object has no attribute 'encode' when using TLS passthrough", "issue_description": "tuusberg commented on 17 Sep 2015\n  File \"/home/ubuntu/mitmproxy/libmproxy/main.py\", line 96, in mitmdump\n    master.run()\n  File \"/home/ubuntu/mitmproxy/libmproxy/dump.py\", line 260, in run\n    return flow.FlowMaster.run(self)\n  File \"/home/ubuntu/mitmproxy/libmproxy/controller.py\", line 122, in run\n    self.tick(self.masterq, 0.1)\n  File \"/home/ubuntu/mitmproxy/libmproxy/flow.py\", line 812, in tick\n    return super(FlowMaster, self).tick(q, timeout)\n  File \"/home/ubuntu/mitmproxy/libmproxy/controller.py\", line 108, in tick\n    self.handle(*msg)\n  File \"/home/ubuntu/mitmproxy/libmproxy/controller.py\", line 129, in handle\n    m(obj)\n  File \"/home/ubuntu/mitmproxy/libmproxy/dump.py\", line 243, in handle_response\n    self._process_flow(f)\n  File \"/home/ubuntu/mitmproxy/libmproxy/dump.py\", line 212, in _process_flow\n    print(str_request(f, self.showhost), file=self.outfile)\n  File \"/home/ubuntu/mitmproxy/libmproxy/dump.py\", line 70, in str_request\n    r = \"%s %s %s\" % (c, f.request.method, f.request.pretty_url(showhost))\n  File \"/home/ubuntu/mitmproxy/netlib/netlib/http/semantics.py\", line 441, in pretty_url\n    self.pretty_host(hostheader),\n  File \"/home/ubuntu/mitmproxy/netlib/netlib/http/semantics.py\", line 431, in pretty_host\n    return host.encode(\"idna\")\nAttributeError: 'Address' object has no attribute 'encode'", "issue_status": "Closed", "issue_reporting_time": "2015-09-16T22:19:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1321": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/767", "issue_id": "#767", "issue_summary": "Issue on MacOSX 10.10.5 (Mavericks) and iOS9.0: Host is Down", "issue_description": "loretoparisi commented on 16 Sep 2015\nI have some issue with MacOS X 10.10.5 / iOS9.0 GM.\nThe python script starts with no errors, but it seems the device is not connecting to the proxy (I can see no logs on the Mac). On the iPhone the error is\nSep 16 11:20:05 iPhone6Loreto[1671] <Error>: tcp_connection_destination_perform_socket_connect 125 connectx to 192.168.2.188:11112@0 failed: [64] Host is down\nIf I do telnet locally\nmacbookproloreto:~ admin$ telnet 192.168.2.188 11112\nTrying 192.168.2.188...\nConnected to 192.168.2.188.\nEscape character is '^]'.\nThis happens on WiFi interface only. Using Ethernet it works fine.", "issue_status": "Closed", "issue_reporting_time": "2015-09-16T09:21:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1322": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/766", "issue_id": "#766", "issue_summary": "har_extractor errors", "issue_description": "gitserious commented on 15 Sep 2015\nHi,\nFirstly, I like to say your work on mitmproxy is awesome! I have a question with the har_extractor for it though.\nI'm running a java test application does that has to various things to get specific events to be triggered on multiple platforms (web, native apps, etc)\nI then need to capture these network calls and verify the contents. As these calls are https, I'm trying to use mitmdump to dump logs in har format. So my java app can start mitmdump and then read the logs to verify click and tracking events sent in the background.\nI was very excited when I saw the har extractor but when I use it, i keep getting errors.\n1.) am i using it correctly.\nI'm currently doing it this way.\nmitmdump -w out/out.dmp -s \"out/har_extractor.py --out/har.har\"\nThen when I load the page i get a variety of errors. and nothing written to my requested output har.har file.\nCan you please help me out?\nBest,\nNelson\nHere are the two errors I\"m getting\n127.0.0.1 GET https://pagead2.googlesyndication.com/pagead/gen_204?id=ah&v=349&avi=BTJ8BlT74VZurCYuYkgKdzZSYBgAAAAAQATgByAEC4AQCiAWjzJoEoAY-&adk=0&pmd=903&pd=903&fd=1\n << 204 No Content 0B\nScript error:\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/libmproxy/script.py\", line 123, in run\n    return (True, f(self.ctx, *args, **kwargs))\n  File \"out/har_extractor.py\", line 213, in response\n    elif context.HARLog.get_page_ref(flow.request.headers.get('Referer')) is not None:\n  File \"out/har_extractor.py\", line 52, in get_page_ref\n    return self.__page_ref__.get(page, None)\nTypeError: unhashable type: 'list'\nand\n127.0.0.1 GET https://pagead2.googlesyndication.com/pagead/gen_204?id=sodar&v=5&t=2&bgai=B_TMolT74VZurCYuYkgKdzZSYBgAAAAA4AeAEAg&bg=!fH9EMCiIOIGddMgCAAAAHVIAAAABKgDrLq8aJ3HDu35G_dL4p9Rd_0UjdyteH5e--Qm2lvQzYas8iMaXH_64LJ-ldQUWyAtqb7L87kMJ7F8OwNDGuxfJ5LoHniT4o1d4YhCeubKVyQghXgsPZkx3ITCtIqNHc28623JmVTuII6AEjs7nb5nn5msqQPVpF_b4x5x3dFf6wzD8U7bWylv6ukc9mEpT3T5l7t3VtPjJK8mKsfjufqEUln5XTVBIjh7RCcecuGUGTNzFMzTOB1299zxo4XRbhKiqMIyP8XTAPt8h72CAV4rRtEkBj29Ju045wrvc6vvQ_I9ZBHgDPFrJa6vSjQ\n << 204 No Content 0B\nScript error:\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/libmproxy/script.py\", line 123, in run\n    return (True, f(self.ctx, *args, **kwargs))\n  File \"out/har_extractor.py\", line 143, in response\n    for k, v in (flow.request.get_cookies() or {}).iteritems()]\nAttributeError: 'ODict' object has no attribute 'iteritems'", "issue_status": "Closed", "issue_reporting_time": "2015-09-15T16:25:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1323": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/763", "issue_id": "#763", "issue_summary": "import error", "issue_description": "sonicjh36 commented on 11 Sep 2015\nI use the script \"redirect_requests.py\" and it got an error:\nScript load error: Traceback (most recent call last):\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/script.py\", line 99, in load\nexecfile(self.argv[0], ns, ns)\nFile \"/root/Desktop/redirect.py\", line 4, in\nfrom libmproxy.models import HTTPResponse\nImportError: No module named models", "issue_status": "Closed", "issue_reporting_time": "2015-09-11T08:27:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1324": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/762", "issue_id": "#762", "issue_summary": "import eooe", "issue_description": "sonicjh36 commented on 11 Sep 2015\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2015-09-11T08:24:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1325": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/761", "issue_id": "#761", "issue_summary": "Mitmweb can't run", "issue_description": "guliping commented on 11 Sep 2015\nWhen I run mitmweb,then open 121.0.0.1:8081, the error happened.\nTraceback (most recent call last):\n  File \"/Users/venv.mitmproxy/lib/python2.7/site-packages/tornado/ioloop.py\", line 1020, in _run\n    return self.callback()\n  File \"/Users/mitmproxy/libmproxy/web/__init__.py\", line 141, in tick\n    flow.FlowMaster.tick(self, self.masterq, timeout=0)\n  File \"/Users/mitmproxy/libmproxy/flow.py\", line 812, in tick\n    return super(FlowMaster, self).tick(q, timeout)\n  File \"/Users/mitmproxy/libmproxy/controller.py\", line 108, in tick\n    self.handle(*msg)\n  File \"/Users/mitmproxy/libmproxy/controller.py\", line 129, in handle\n    m(obj)\n  File \"/Users/mitmproxy/libmproxy/web/__init__.py\", line 167, in handle_request\n    super(WebMaster, self).handle_request(f)\n  File \"/Users/mitmproxy/libmproxy/flow.py\", line 990, in handle_request\n    self.state.add_flow(f)\n  File \"/Users/mitmproxy/libmproxy/flow.py\", line 561, in add_flow\n    self.flows._add(f)\n  File \"/Users/mitmproxy/libmproxy/flow.py\", line 469, in _add\n    view._add(f)\n  File \"/Users/mitmproxy/libmproxy/web/__init__.py\", line 23, in _add\n    data=f.get_state(short=True)\n  File \"/Users/mitmproxy/libmproxy/models/flow.py\", line 88, in get_state\n    d = super(Flow, self).get_state(short)\n  File \"/Users/mitmproxy/libmproxy/stateobject.py\", line 32, in get_state\n    state[attr] = val.get_state(short)\n  File \"/Users/mitmproxy/libmproxy/models/connections.py\", line 138, in get_state\n    address={\"address\": self.address(),\nTypeError: 'NoneType' object is not callable\nERROR:tornado.application:Exception in callback <bound method WebMaster.tick of <libmproxy.web.WebMaster object at 0x10cfe5a90>>", "issue_status": "Closed", "issue_reporting_time": "2015-09-11T02:56:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1326": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/760", "issue_id": "#760", "issue_summary": "'Unexpected EOF' error while running proxy in transparent mode", "issue_description": "tuusberg commented on 11 Sep 2015\nHey!\nI've faced this error today during Slack connections exploration. It only occurs in transparent mode, I'm using latest mitmdump from master.\nhere's the details:\n192.168.42.10:58630: Cannot establish TLS with client: NetLibError(\"SSL handshake error: SysCallError(-1, 'Unexpected EOF')\",)\n192.168.42.10:58630: clientdisconnect\n192.168.42.10:58628: clientdisconnect\n192.168.42.10:58629: Traceback (most recent call last):\n  File \"/home/ubuntu/mitmproxy/libmproxy/proxy/server.py\", line 115, in handle\n    root_layer()\n  File \"/home/ubuntu/mitmproxy/libmproxy/proxy/modes/transparent_proxy.py\", line 21, in __call__\n    layer()\n  File \"/home/ubuntu/mitmproxy/libmproxy/protocol/tls.py\", line 268, in __call__\n    layer = self.ctx.next_layer(self)\n  File \"/home/ubuntu/mitmproxy/libmproxy/proxy/root_context.py\", line 43, in next_layer\n    layer = self._next_layer(top_layer)\n  File \"/home/ubuntu/mitmproxy/libmproxy/proxy/root_context.py\", line 51, in _next_layer\n    d = top_layer.client_conn.rfile.peek(3)\n  File \"/home/ubuntu/mitmproxy/netlib/netlib/tcp.py\", line 298, in peek\n    raise NetLibSSLError(repr(e))\nNetLibSSLError: SysCallError(-1, 'Unexpected EOF')", "issue_status": "Closed", "issue_reporting_time": "2015-09-10T20:34:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1327": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/759", "issue_id": "#759", "issue_summary": "ValueError: invalid literal for int() with base 10: 'dev0'", "issue_description": "sonicjh36 commented on 10 Sep 2015\nI use pip to install mitmproxy, when I start it, it occur an error:\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 9, in <module>\n    load_entry_point('mitmproxy==0.13', 'console_scripts', 'mitmproxy')()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/main.py\", line 42, in mitmproxy\n    netlib.version_check.version_check(version.IVERSION)\n  File \"/usr/local/lib/python2.7/dist-packages/netlib-0.13.1-py2.7.egg/netlib/version_check.py\", line 32, in version_check\n    v = tuple([int(x) for x in OpenSSL.__version__.split(\".\")][:2])\nValueError: invalid literal for int() with base 10: 'dev0'\nDid I miss something not install?", "issue_status": "Closed", "issue_reporting_time": "2015-09-10T10:11:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1328": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/758", "issue_id": "#758", "issue_summary": "Fix editing gzipped responses", "issue_description": "Member\nmhils commented on 10 Sep 2015\nFrom https://twitter.com/bitemyapp/status/641721030629699584\nthe next thing I got stuck on was knowing how to edit the gzipped response (it's cleartext in the preview)\nthe cleartext in the preview was confusing because editing the raw body gave me...the gzipped content naturally.\nI had to then figure out the z key and how to disable compression so I could edit the plaintext content.", "issue_status": "Closed", "issue_reporting_time": "2015-09-10T08:05:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1329": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/757", "issue_id": "#757", "issue_summary": "IPv6 support?", "issue_description": "Contributor\nryoqun commented on 9 Sep 2015\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2015-09-09T09:01:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1330": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/756", "issue_id": "#756", "issue_summary": "window\uff0cupdate version can not see details .", "issue_description": "hhhaiai commented on 9 Sep 2015\nhi:\nI sync native version. phone can use mitm network. but can't see details(request/response/and so on).\nenvironment \uff1a window 7 +cygwin\nand log:\nTraceback (most recent call last):\nFile \"/home/sanbo/package/mitmproxy/libmproxy/console/init.py\", line 500, in run\nself.loop.run()\nFile \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\nself.event_loop.run()\nFile \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\nself._loop()\nFile \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\nself._watch_filesfd\nFile \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 392, in\nevent_loop, callback, self.get_available_raw_input())\nFile \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 492, in parse_input\ncallback(processed, processed_codes)\nFile \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 399, in _update\nself.process_input(keys)\nFile \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 499, in process_input\nk = self._topmost_widget.keypress(self.screen_size, k)\nFile \"/home/sanbo/package/mitmproxy/libmproxy/console/window.py\", line 38, in keypress\nk = super(self.class, self).keypress(size, k)\nFile \"/usr/lib/python2.7/site-packages/urwid/container.py\", line 1128, in keypress\nreturn self.body.keypress( (maxcol, remaining), key )\nFile \"/home/sanbo/package/mitmproxy/libmproxy/console/flowlist.py\", line 380, in keypress\nreturn urwid.ListBox.keypress(self, size, key)\nFile \"/usr/lib/python2.7/site-packages/urwid/listbox.py\", line 987, in keypress\nkey = focus_widget.keypress((maxcol,),key)\nFile \"/home/sanbo/package/mitmproxy/libmproxy/console/flowlist.py\", line 248, in keypress\nself.master.view_flow(self.flow)\nFile \"/home/sanbo/package/mitmproxy/libmproxy/console/init.py\", line 591, in view_flow\nflowview.FlowView(self, self.state, flow, tab_offset),\nFile \"/home/sanbo/package/mitmproxy/libmproxy/console/flowview.py\", line 134, in init\ntab_offset\nFile \"/home/sanbo/package/mitmproxy/libmproxy/console/tabs.py\", line 28, in init\nself.show()\nFile \"/home/sanbo/package/mitmproxy/libmproxy/console/tabs.py\", line 66, in show\nbody = self.tabs[self.tab_offset]1,\nFile \"/home/sanbo/package/mitmproxy/libmproxy/console/flowview.py\", line 156, in view_request\nreturn self.conn_text(self.flow.request)\nFile \"/home/sanbo/package/mitmproxy/libmproxy/console/flowview.py\", line 207, in conn_text\nmsg, body = self.content_view(viewmode, conn)\nFile \"/home/sanbo/package/mitmproxy/libmproxy/console/flowview.py\", line 188, in content_view\nisinstance(conn, HTTPRequest)\nFile \"/home/sanbo/package/mitmproxy/libmproxy/utils.py\", line 111, in get\nif args in self.cache:\nTypeError: unhashable instance\nmitmproxy has crashed!\nPlease lodge a bug report at:\nhttps://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2015-09-09T06:34:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1331": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/755", "issue_id": "#755", "issue_summary": "Build from source with master on AWS Ubuntu, unable to log https traffic", "issue_description": "cameronmccord2 commented on 9 Sep 2015\nWhen I build from source from the current master branch of all 3 projects the build works correctly but I am unable to get any https traffic to show up in mitmproxy or mitmdump. I can get http traffic. Running pip's mitmproxy(0.13) logs http and https traffic. Building from source v0.13 on the same box works correctly and I can see http and https traffic. I use the --host and --nonanonymous flags, as shown below.\nAWS\ninstance type: t2.micro\nos: ubuntu-trusty-14.04-amd64-server-20150325 (ami-d05e75b8)\nTraffic generated from an iPhone iOS 8.latest with a proxy setup on the wifi port 80 using auth.\nmitm.it certificate installed after mitmproxy starts and before trying any http or https sites.\nBash steps I am using to build from master:\n# Install everything\nsudo apt-get update\nsudo apt-get -y upgrade\nsudo apt-get -y install python-pip python-dev libffi-dev libssl-dev libxml2-dev libxslt1-dev git\nsudo pip install virtualenv\n# Clone projects\ngit clone https://github.com/mitmproxy/mitmproxy.git\ngit clone https://github.com/mitmproxy/netlib.git\ngit clone https://github.com/mitmproxy/pathod.git\n# Setup system to recieve requests\nsudo sysctl -w net.ipv4.ip_forward=1\necho 0 | sudo tee /proc/sys/net/ipv4/conf/*/send_redirects\nsudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\nsudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 443 -j REDIRECT --to-port 8080\n# Build\ncd mitmproxy\nsource ./dev\n. ../venv.mitmproxy/bin/activate\nmitmdump --version\n#0.13.1\n# Run\nmitmproxy --nonanonymous --host\nBash steps I am using to build from 0.13:\n# Install everything\nsudo apt-get update\nsudo apt-get -y upgrade\nsudo apt-get -y install python-pip python-dev libffi-dev libssl-dev libxml2-dev libxslt1-dev git\nsudo pip install virtualenv\n# Clone projects\ngit clone https://github.com/mitmproxy/mitmproxy.git\ncd mitmproxy\ngit reset --hard 675e70c7ebd980bbbc55a49e888f21cf8fbbe818\ncd ..\ngit clone https://github.com/mitmproxy/netlib.git\ncd netlib\ngit reset --hard fb482172241b6235da083f6dbf154b641772a4fc\nrm -rf .git\ncd ..\ngit clone https://github.com/mitmproxy/pathod.git\ncd pathod\ngit reset --hard 46255e6e9cfca6ee5b32d287be7d2a0eb8d73c20\nrm -rf .git\ncd ..\n# Setup system to recieve requests\nsudo sysctl -w net.ipv4.ip_forward=1\necho 0 | sudo tee /proc/sys/net/ipv4/conf/*/send_redirects\nsudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\nsudo iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 443 -j REDIRECT --to-port 8080\n# Build\ncd mitmproxy\nsource ./dev\n. ../venv.mitmproxy/bin/activate\nmitmdump --version\n#0.13.1\n# Run\nmitmproxy --nonanonymous --host\nThanks for a great product!", "issue_status": "Closed", "issue_reporting_time": "2015-09-09T02:12:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1332": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/754", "issue_id": "#754", "issue_summary": "issue with transparent proxying: Invalid HTTP request form (expected: absolute, got: relative)", "issue_description": "milesrichardson commented on 8 Sep 2015\nHi,\nI am trying to setup mitmproxy as a transparent proxy.\nI have a VPN network with internal IP 10.0.0.1/24. The proxy box is on 10.0.0.100. I want to transparently redirect client HTTP traffic on the VPN through the proxy. Each client should have its own proxy. Example:\nsudo iptables -t nat -A PREROUTING -i ppp4 -p tcp --dport 80 -j DNAT --to-destination 10.0.0.100:6262\nsudo iptables -t nat -A PREROUTING -i ppp4 -p tcp --dport 443 -j DNAT --to-destination 10.0.0.100:6262\nThis successfully redirects client traffic on ppp4 to the proxy. However, mitmproxy logs show:\n10.0.0.108:60222: HttpError('Invalid HTTP request form (expected: absolute, got: relative)',)\nI also see:\n11.0.0.108:60225: HttpError(\"Bad HTTP request line:                                                                                \n'\\\\x16\\\\x03\\\\x00\\\\x003\\\\x01\\\\x00\\\\x00/\\\\x03\\\\x00U\\\\xef\\\\x02+\\\\xb0^RE\\\\xa8\\\\xf0{\\\\xf3m\\\\xd8-\\\\x18\\\\xbaV\\\\x8a\\\\xa2\\\\xa0\\\\n'\",)\nI am starting mitmproxy with the command:\nmitmproxy -p 6262 --host\nThe client has the mitmproxy root CA installed.\nAm I trying to do something impossible? Am I missing a critical step?", "issue_status": "Closed", "issue_reporting_time": "2015-09-08T15:45:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1333": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/753", "issue_id": "#753", "issue_summary": "Crash when clicking on event", "issue_description": "jaens commented on 7 Sep 2015\n\u2514> env/bin/python mitmproxy --verbose --eventlog --no-upstream-cert\nTraceback (most recent call last):\n  File \"mitmproxy/libmproxy/console/__init__.py\", line 500, in run\n    self.loop.run()\n  File \"mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\n    self._watch_files[fd]()\n  File \"mitmproxy/env/lib/python2.7/site-packages/urwid/raw_display.py\", line 392, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"mitmproxy/env/lib/python2.7/site-packages/urwid/raw_display.py\", line 492, in parse_input\n    callback(processed, processed_codes)\n  File \"mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 399, in _update\n    self.process_input(keys)\n  File \"mitmproxy/env/lib/python2.7/site-packages/urwid/main_loop.py\", line 496, in process_input\n    event, button, col, row, focus=True ):\n  File \"mitmproxy/libmproxy/console/window.py\", line 22, in mouse_event\n    k = super(self.__class__, self).mouse_event(*args, **kwargs)\n  File \"mitmproxy/env/lib/python2.7/site-packages/urwid/container.py\", line 1169, in mouse_event\n    event, button, col, row-htrim, focus )\n  File \"mitmproxy/env/lib/python2.7/site-packages/urwid/container.py\", line 1687, in mouse_event\n    focus)\n  File \"mitmproxy/env/lib/python2.7/site-packages/urwid/listbox.py\", line 1568, in mouse_event\n    focus)\n  File \"mitmproxy/libmproxy/console/flowlist.py\", line 175, in mouse_event\n    self.master.view_flow(self.flow)\n  File \"mitmproxy/libmproxy/console/__init__.py\", line 591, in view_flow\n    flowview.FlowView(self, self.state, flow, tab_offset),\n  File \"mitmproxy/libmproxy/console/flowview.py\", line 134, in __init__\n    tab_offset\n  File \"mitmproxy/libmproxy/console/tabs.py\", line 28, in __init__\n    self.show()\n  File \"mitmproxy/libmproxy/console/tabs.py\", line 66, in show\n    body = self.tabs[self.tab_offset][1](),\n  File \"mitmproxy/libmproxy/console/flowview.py\", line 156, in view_request\n    return self.conn_text(self.flow.request)\n  File \"mitmproxy/libmproxy/console/flowview.py\", line 207, in conn_text\n    msg, body = self.content_view(viewmode, conn)\n  File \"mitmproxy/libmproxy/console/flowview.py\", line 188, in content_view\n    isinstance(conn, HTTPRequest)\n  File \"mitmproxy/libmproxy/utils.py\", line 111, in get\n    if args in self.cache:\nTypeError: unhashable instance", "issue_status": "Closed", "issue_reporting_time": "2015-09-07T13:29:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1334": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/747", "issue_id": "#747", "issue_summary": "Add Inline Script Hooks to TCP mode", "issue_description": "Member\nmhils commented on 2 Sep 2015\nAdding inline script hooks to the raw tcp mode (libmproxy.protocol.rawtcp) would be an excellent addition to mitmproxy. There could be one hook on start and another one per message.", "issue_status": "Closed", "issue_reporting_time": "2015-09-02T18:15:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1335": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/746", "issue_id": "#746", "issue_summary": "HTTP2: Fix https://http2.golang.org/gophertiles", "issue_description": "Member\nmhils commented on 2 Sep 2015\nhttps://github.com/mitmproxy/mitmproxy/blob/master/libmproxy/protocol/http.py#L352", "issue_status": "Closed", "issue_reporting_time": "2015-09-02T16:42:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1336": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/745", "issue_id": "#745", "issue_summary": "mitmproxy does not work with sni enforced server", "issue_description": "flarno11 commented on 1 Sep 2015\nI get an error when I try to connect to a ssl server that requires the sni extension:\nProxyError('NetLibError(\"SSL handshake error: Error([('SSL routines', 'SSL23_GET_SERVER_HELLO', 'tlsv1 alert internal error')],)\",)',)\nHowever, when I change the code the following, it works:\nIn protocol/http.py HTTPHandler.process_connect_request(self, address):\nWithout SNI:\nself.c.establish_ssl(server=True, client=True)\nWith SNI:\nself.c.establish_ssl(server=True, client=True, sni=address.host)\nWithout SNI:\n2015-09-01 09:19:55 aquarium MainThread INFO Connecting to database at localhost:27017...\n2015-09-01 09:19:55 aquarium MainThread INFO Ready\n2015-09-01 09:20:01 aquarium MainThread INFO 127.0.0.1:55540: clientconnect\n2015-09-01 09:20:01 aquarium MainThread INFO 127.0.0.1:55540: request\n-> CONNECT enc.com.au:443 HTTP/1.1\n2015-09-01 09:20:01 aquarium MainThread INFO 127.0.0.1:55540: Set new server address: enc.com.au:443\n2015-09-01 09:20:01 aquarium MainThread INFO 127.0.0.1:55540: serverconnect\n-> enc.com.au:443\n2015-09-01 09:20:01 aquarium MainThread INFO 127.0.0.1:55540: Received CONNECT request to SSL port. Upgrading to SSL...\n2015-09-01 09:20:01 aquarium MainThread INFO 127.0.0.1:55540: Establish SSL\n-> with client\n-> with server (sni: None)\n2015-09-01 09:20:01 aquarium MainThread INFO 127.0.0.1:55540: SSL handshake error: The client may not trust the proxy's certificate.\n2015-09-01 09:20:01 aquarium MainThread INFO 127.0.0.1:55540: ProxyError('NetLibError(\"SSL handshake error: Error([('SSL routines', 'SSL23_GET_SERVER_HELLO', 'tlsv1 alert internal error')],)\",)',)\n2015-09-01 09:20:01 aquarium MainThread INFO 127.0.0.1:55540: clientdisconnect\n2015-09-01 09:20:01 aquarium MainThread INFO 127.0.0.1:55540: serverdisconnect\n-> enc.com.au:443\nWith SNI:\n2015-09-01 09:19:20 aquarium MainThread INFO 127.0.0.1:55528: clientconnect\n2015-09-01 09:19:20 aquarium MainThread INFO 127.0.0.1:55528: request\n-> CONNECT enc.com.au:443 HTTP/1.1\n2015-09-01 09:19:20 aquarium MainThread INFO 127.0.0.1:55528: Set new server address: enc.com.au:443\n2015-09-01 09:19:20 aquarium MainThread INFO 127.0.0.1:55528: serverconnect\n-> enc.com.au:443\n2015-09-01 09:19:20 aquarium MainThread INFO 127.0.0.1:55528: Received CONNECT request to SSL port. Upgrading to SSL...\n2015-09-01 09:19:20 aquarium MainThread INFO 127.0.0.1:55528: Establish SSL\n-> with client\n-> with server (sni: enc.com.au)\n2015-09-01 09:19:21 aquarium MainThread INFO 127.0.0.1:55528: Upgrade to SSL completed.\n2015-09-01 09:19:21 aquarium MainThread INFO 127.0.0.1:55528: request\n-> GET /2015/06/08/checking-cloudflare-ssl/ HTTP/1.1\n2015-09-01 09:19:25 aquarium MainThread INFO 127.0.0.1:55528: response\n-> HTTP/1.1 200 OK\n2015-09-01 09:19:25 aquarium MainThread INFO 127.0.0.1:55528: clientdisconnect\n2015-09-01 09:19:25 aquarium MainThread INFO 127.0.0.1:55528: serverdisconnect\n-> enc.com.au:443\nmitmproxy versions: 11.4, 13.0\nOperating Systems: Mac OS X 10.10.5, Ubuntu 14.04\nOpenSSL: 1.0.2d 9 Jul 2015, 1.0.1f 6 Jan 2014", "issue_status": "Closed", "issue_reporting_time": "2015-09-01T09:10:19Z", "fixed_by": "#741", "pull_request_summary": "Proxy Refactor", "pull_request_description": "Member\nmhils commented on 27 Aug 2015\nThis PR introduces a clear separation of layers in the proxy/protocol core and thereby adds support for a variety of features:\nHTTP2 support\nClear separation of protocol layers (e.g. separate TLS handling for ConnectionHandler)\nSmart protocol guessing: We peek into the traffic to determine the actual protocol. In the worst case, we fall back to raw TCP passthrough.\nLazy initialization of server connections (#722)\nRemove \"double-connect\" workaround for SNI by manually reading the handshake.\nOpen for discussion:\nDo we want to enable smart protocol guessing initially (while there is not UI in mitmproxy yet) or do we wait until we have a proper UI for this?\nSettled for the second variant.\nSpoof mode and SSL spoof mode have been removed. We should check if this works best as an inline script or as a stand-alone proxy mode. I personally want to keep the number of modes low, but I'm open for discussion here.\nTODO:\nFix HTTP Replay - probably just HTTP1 for now.\nProperly process configuration options.\nAdd --ignore/--tcp support / clean up next_layer\nRefactor all code that uses flow.live to use the new interfaces.\nFix Streaming\nCheck inline script hooks.\nFix change_upstream_proxy example.\nFix dns_spoofing example.\n1dd09a5 is a bit ugly - is there a better way? (no)\nFinal TODOs:\nRemove old code\nSeparate proxy modes from layers (see #742)\nrename protocol2 to protocol and remove old files\n(This PR is a follow up of #694 .)\nfixes #745\nfixes #722\nfixes #717\nfixes #697\nfixes #681\nfixes #672\nfixes #641\nrefs #483\nrefs #383\nrefs #743", "pull_request_status": "Merged", "issue_fixed_time": "2015-09-01T23:16:48Z", "files_changed": [["6", ".coveragerc"], ["17", "doc-src/features/reverseproxy.html"], ["9", "doc-src/howmitmproxy.html"], ["14", "doc-src/modes.html"], ["47", "examples/change_upstream_proxy.py"], ["47", "examples/dns_spoofing.py"], ["37", "examples/ignore_websocket.py"], ["13", "examples/stub.py"]]}, "1337": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/743", "issue_id": "#743", "issue_summary": "'Too many open files' bugs.", "issue_description": "secsnake commented on 31 Aug 2015\nThis is some error info.\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 135, in handle\n    **conn_kwargs).handle_messages()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 1035, in handle_messages\n    while self.handle_flow():\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 1109, in handle_flow\n    ret = self.process_request(flow, req)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 1308, in process_request\n    return self.process_connect_request(self.c.server_conn.address)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 1501, in process_connect_request\n    self.c.establish_ssl(server=True, client=True)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 279, in establish_ssl\n    chain_file=chain_file\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/connection.py\", line 71, in convert_to_ssl\n    tcp.BaseHandler.convert_to_ssl(self, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 652, in convert_to_ssl\n    **sslctx_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 615, in create_ssl_context\n    context = self._create_ssl_context(**sslctx_kwargs)\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 426, in _create_ssl_context\n    context.load_verify_locations(ca_pemfile, ca_path)\n  File \"/usr/local/lib/python2.7/dist-packages/OpenSSL/SSL.py\", line 528, in load_verify_locations\n    _raise_current_error()\n  File \"/usr/local/lib/python2.7/dist-packages/OpenSSL/_util.py\", line 48, in exception_from_error_queue\n    raise exception_type(errors)\nError: [('system library', 'fopen', 'Too many open files'), ('BIO routines', 'BIO_new_file', 'system lib'), ('x509 certificate routines', 'X509_load_cert_crl_file', 'system lib')]\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nand\nException in thread SlaveThread (0.0.0.0:8080):\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py\", line 83, in run\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 711, in serve_forever\n  File \"/usr/lib/python2.7/socket.py\", line 202, in accept\nerror: [Errno 24] Too many open files\nmaybe,the reason is ssl cer file too many?", "issue_status": "Closed", "issue_reporting_time": "2015-08-31T00:56:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1338": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/740", "issue_id": "#740", "issue_summary": "Request script hook returns unexpected values", "issue_description": "jamiekris commented on 26 Aug 2015\nI am running the following scripts on a Linux Mint 17 desktop, mitmproxy was installed through PIP.\nThe client is a google chrome browser, configured to trust and route through the proxy.\nI run the following inline script when processing the raw file generated by mitmproxy.\nfrom libmproxy import filt\ndef start(context, argv):\n        if len(argv) != 2:\n                raise ValueError(\"Usage: -s 'filt.py FILTER'\")\n        context.filter = filt.parse(argv[1])\n\n#def response(context, flow):\ndef response(context, flow):\n        if flow.match(context.filter):\n                print(\"Flow matches response filter:\")\n                print(\"response \",flow.response.timestamp_end, flow)\ndef request(context, flow):\n        if flow.match(context.filter):\n                print(\"Flow matches request filter:\")\n                print(\"request \",flow.request.timestamp_start, flow)\nI run things as follows:\nmitmproxy -w temp\nmitmdump -s \"script.py FILTER\" -r temp  #FILTER is google in the example below\nI tried loading the google search page and here is a cutaway from the generated output.\nFlow matches request filter:\n('request ', 1433945112.59489, <HTTPFlow\n  request = HTTPRequest: GET /crossdomain.xml\n  response = HTTPResponse: 200 OK (text/x-cross-domain-policy, 169B) ##PROBLEM HERE\n  client_conn = ClientConnection: [ssl] IP.IP.IP.IP:52842\n  server_conn = ServerConnection: [ssl: client2.google.com] client2.google.com:443)\nFlow matches response filter:\n('response ', 1433945112.606219, <HTTPFlow\n  request = HTTPRequest: GET /crossdomain.xml\n  response = HTTPResponse: 200 OK (text/x-cross-domain-policy, 169B)\n  client_conn = ClientConnection: [ssl] IP.IP.IP.IP:52842\n  server_conn = ServerConnection: [ssl: client2.google.com] client2.google.com:443)\nThe scripts add the'Flow matches request filter:' tag to the request hook firing.\nThe weird thing about this output is line 4 in the text above. When a HTTP request\nis intercepted, the proxy also seems to write a HTTP response along with the request.\nThis must not be possible at this time, because the\nproxy has just received a request and it fires the hook even before this request is\nforwarded to the server. I would like to report this as a potential bug, after advice\nfrom the mitmproxy google group. I have observed this in several other websites\nand my own site as well.\nNote: I have removed some leading and trailing brackets from the example logs as github ignored lines within them.\nThanks.", "issue_status": "Closed", "issue_reporting_time": "2015-08-26T08:10:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1339": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/736", "issue_id": "#736", "issue_summary": "Https traffic is not capturing", "issue_description": "hajoxx commented on 20 Aug 2015\nHello\nI installed Root.crt and Class3.crt files on an Android 4.0.3 device. And I'm running mitmproxy from console.\nHowever it's not capturing https traffic (http is ok). What is the problem?\nThanks.", "issue_status": "Closed", "issue_reporting_time": "2015-08-20T08:10:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1340": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/728", "issue_id": "#728", "issue_summary": "Mitmweb can't run", "issue_description": "guliping commented on 17 Aug 2015\n(venv.mitmproxy)hanhaodeMacBook-Pro:mitmproxy hanhao$ mitmweb\nTraceback (most recent call last):\n  File \"/Users/hanhao/venv.mitmproxy/bin/mitmweb\", line 9, in <module>\n    load_entry_point('mitmproxy==0.13.1', 'console_scripts', 'mitmweb')()\n  File \"/Users/hanhao/venv.mitmproxy/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 558, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/Users/hanhao/venv.mitmproxy/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2682, in load_entry_point\n    return ep.load()\n  File \"/Users/hanhao/venv.mitmproxy/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2355, in load\n    return self.resolve()\n  File \"/Users/hanhao/venv.mitmproxy/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2361, in resolve\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\n  File \"/Users/hanhao/mitmproxy/libmproxy/main.py\", line 6, in <module>\n    from netlib.version_check import check_pyopenssl_version, check_mitmproxy_version\n  File \"/Users/hanhao/netlib/netlib/version_check.py\", line 10, in <module>\n    import OpenSSL\n  File \"/Users/hanhao/venv.mitmproxy/lib/python2.7/site-packages/OpenSSL/__init__.py\", line 8, in <module>\n    from OpenSSL import rand, crypto, SSL\n  File \"/Users/hanhao/venv.mitmproxy/lib/python2.7/site-packages/OpenSSL/rand.py\", line 11, in <module>\n    from OpenSSL._util import (\n  File \"/Users/hanhao/venv.mitmproxy/lib/python2.7/site-packages/OpenSSL/_util.py\", line 6, in <module>\n    from cryptography.hazmat.bindings.openssl.binding import Binding\n  File \"/Users/hanhao/venv.mitmproxy/lib/python2.7/site-packages/cryptography/hazmat/bindings/openssl/binding.py\", line 11, in <module>\n    from cryptography.hazmat.bindings._openssl import ffi, lib\nImportError: dlopen(/Users/hanhao/venv.mitmproxy/lib/python2.7/site-packages/cryptography/hazmat/bindings/_openssl.so, 2): Symbol not found: _BIO_new_CMS\n  Referenced from: /Users/hanhao/venv.mitmproxy/lib/python2.7/site-packages/cryptography/hazmat/bindings/_openssl.so\n  Expected in: flat namespace\n in /Users/hanhao/venv.mitmproxy/lib/python2.7/site-packages/cryptography/hazmat/bindings/_openssl.so", "issue_status": "Closed", "issue_reporting_time": "2015-08-17T07:52:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1341": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/727", "issue_id": "#727", "issue_summary": "Client Certificate is `None`", "issue_description": "atlantis0 commented on 17 Aug 2015\nHi,\nAm looking to see the certificate of the client. That way I can identify device x from device y while looking at the traffic. Inside the flow object there is a client connection which contains clientcert variable. But this variable is None.\nflow.client_conn.clientcert --- gives none?\nAny ideas on why? Am I missing a concept here?", "issue_status": "Closed", "issue_reporting_time": "2015-08-17T07:49:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1342": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/724", "issue_id": "#724", "issue_summary": "\"Bad HTTP request line\" with non-ASCII URL path", "issue_description": "Contributor\nlilydjwg commented on 14 Aug 2015\nIt's rather uncommon to see a URL with non-ASCII sent to a server, but they do exist and the server seems to be fine with them. I come across this while capturing traffic from Internet Explorer 6 (Yes that browser is damn too old, but I can't change that). You can get the error with this command:\nhttp_proxy=localhost:8080 curl http://localhost/\u6d4b\u8bd5", "issue_status": "Closed", "issue_reporting_time": "2015-08-14T10:29:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1343": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/723", "issue_id": "#723", "issue_summary": "Mitmproxy with Browsermob functionality", "issue_description": "AlexIzydorczyk commented on 14 Aug 2015\nHi,\nJust wondering about the feasibility of using mitmproxy as a Browsermob sort of proxy (https://github.com/AutomatedTester/browsermob-proxy-py)\nEssentially, I'd like to route \"bundles\" of requests to a running mitmdump session (ie. request my webpage that executes Javascript / makes other realted calls) and get back a HAR or JSON record of all requests made in that bundle (ie. requests that the original request referred or redirected to).\nThe challenge I'm seeing is that there doesn't appear to be a clear way right now to keep track of a single bundle of requests (I suppose I could be checking the referer head?). Further, mitmdump inline scripts give the ability to edit/ alter responses in realtime, but again, no as a \"bundle\".\nA simple solution would be to write every response to a some sort of database with a key that identifies the request (and hopefully initial request/bundle) that made it and then to retrieve that later. That's not as convenient as having just HAR come back though...\nHas anyone implemented or thought about something like this?", "issue_status": "Closed", "issue_reporting_time": "2015-08-14T02:33:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1344": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/722", "issue_id": "#722", "issue_summary": "transparent mitmdump -> ProxyError connection refused but in cache", "issue_description": "ghost commented on 14 Aug 2015\nI'm not sure if this is the right place for it. But I do not know a better place and don't saw a similar issue report. Maybe this works as intended, but maybe not.\nWhat's the problem?\nmitmdump is configured as a transparent proxy. Pages are recorded and mitmdump is started with this dump. When the server is online the dump is used to send the answer and no data is send to the server. When the server is (temporarily) offline mitmdump complaining about ProxyError(NetLibError('Error connecting [...], e.g. with Connection refused, depending on the problem of the server. The client receives a bad gateway as answer.\nWhat's expected?\nmitmdump sends the dumped page to the client.\nWhich versions are affected?\nI first saw this issue in version 0.12.1 and could reproduce it with 0.13.\nHow to reproduce the problem?\nWe need a webserver which could be stopped.\nIn my case I use three computers, one client, one for mitmdump and one Linux computer as a webserver in this network order.\nThe webserver on the last computer can be a script like the following:\n#!/usr/bin/env python\nimport socket\n\nsock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\nsock.bind(('', 80))\nsock.listen(1)\nwhile 1:\n  con, addr = sock.accept()\n  data = con.recv(4096)\n  con.send(\"HTTP/1.1 200 OK\\r\\n\")\n  con.send(\"Date: Thu, 10 Aug 2015 10:00:00 GMT\\r\\n\")\n  con.send(\"Content-Type: text/html\\r\\n\")\n  con.send(\"Connection: keep-alive\\r\\n\")\n  con.send(\"Server: Apache\\r\\n\")\n  con.send(\"Content-Length: 2\\r\\n\")\n  con.send(\"\\r\\n\")\n  con.send(\"17\")\n  con.close()\n\nsock.close()\nNow mitmdump is started in transparent mode to capture sites and the client calls the webserver with Firefox or another browser.\nWhen the recording is finished mitmdump is started again with the captured file -- and in my case also with --no-pop but this should be not necessary.\nThe client could ask again and get its answer. Thus the webserver needs a problem. For example a firewall rule like\niptables -A FORWARD -p tcp --dport 80 -s [client ip] -j REJECT --reject-with tcp-reset\n. When no --no-pop is used it is maybe necessary to restart mitmdump.\nWhen the client ask again it should get a bad gateway.\nFor me it also worked by stopping the python script and without the iptables rule. It took some time and after the timeout the client gets the bad gateway, I think not with Connection refused but another NetLibError.\nWhy does this happen?\nIn line 84 of libmproxy/proxy/server.py, in function ConnectionHandler.handle there is the comment # Can we already identify the target server and connect to it?.\nAs far as I can tell in transparent mode when a client connects we already know the destination without interpreting the request. Thus the handle function tries to connect to the real server. Therefore on a cache miss this is faster, we already have a connection and do not need the create one.\nBut in this case the connection fails, exceptions are thrown, the request could not be answered and a bad gateway is send to client even though the correct answer is there, in the dump. When the server is ok, the connection is established but no data is send.\nWhen the server is defect the _hash function of flow.py is not asked thus it is not tested if the data is in the cache/dump before answering with a bad gateway.\nHow could the problem be solved?\nAs a workaround I tried to cut the code of if self.server_conn and not self.server_conn.connection: and it worked. When a new page is requested the new data is send and when the defect server is requested the saved data is send. But SSL does not work any more. mitmdump does not recognise the SSL on port 443 and read it as HTTP and sending a HTTP error page back, confusing the browser. Without the modification 443 is interpreted as SSL and HTTPS pages worked as intended.\nMaybe one solution is to not send a HTTP error page if the connection in the handle function fails but to later check the cache and probably try to connect to the server again. Or maybe the prematurely connection is removed anyway. In that case even the original server does not know it when a cache hit is there because no connection is created (i.e. more transparent).\nFor me it seems that the fix is not so trivial, I do not know which change lead to which side effect as I only know a small amount of source code.\nBut as initially mentioned this is maybe no bug but the intended behaviour. In this case is there any option to force the answer even if the server is down but the data is in the cache/dump? Or is there a way to deactivate the early connection to the server?", "issue_status": "Closed", "issue_reporting_time": "2015-08-13T20:54:34Z", "fixed_by": "#741", "pull_request_summary": "Proxy Refactor", "pull_request_description": "Member\nmhils commented on 27 Aug 2015\nThis PR introduces a clear separation of layers in the proxy/protocol core and thereby adds support for a variety of features:\nHTTP2 support\nClear separation of protocol layers (e.g. separate TLS handling for ConnectionHandler)\nSmart protocol guessing: We peek into the traffic to determine the actual protocol. In the worst case, we fall back to raw TCP passthrough.\nLazy initialization of server connections (#722)\nRemove \"double-connect\" workaround for SNI by manually reading the handshake.\nOpen for discussion:\nDo we want to enable smart protocol guessing initially (while there is not UI in mitmproxy yet) or do we wait until we have a proper UI for this?\nSettled for the second variant.\nSpoof mode and SSL spoof mode have been removed. We should check if this works best as an inline script or as a stand-alone proxy mode. I personally want to keep the number of modes low, but I'm open for discussion here.\nTODO:\nFix HTTP Replay - probably just HTTP1 for now.\nProperly process configuration options.\nAdd --ignore/--tcp support / clean up next_layer\nRefactor all code that uses flow.live to use the new interfaces.\nFix Streaming\nCheck inline script hooks.\nFix change_upstream_proxy example.\nFix dns_spoofing example.\n1dd09a5 is a bit ugly - is there a better way? (no)\nFinal TODOs:\nRemove old code\nSeparate proxy modes from layers (see #742)\nrename protocol2 to protocol and remove old files\n(This PR is a follow up of #694 .)\nfixes #745\nfixes #722\nfixes #717\nfixes #697\nfixes #681\nfixes #672\nfixes #641\nrefs #483\nrefs #383\nrefs #743", "pull_request_status": "Merged", "issue_fixed_time": "2015-09-01T23:16:48Z", "files_changed": [["6", ".coveragerc"], ["17", "doc-src/features/reverseproxy.html"], ["9", "doc-src/howmitmproxy.html"], ["14", "doc-src/modes.html"], ["47", "examples/change_upstream_proxy.py"], ["47", "examples/dns_spoofing.py"], ["37", "examples/ignore_websocket.py"], ["13", "examples/stub.py"]]}, "1345": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/718", "issue_id": "#718", "issue_summary": "mitmproxy 0.12.1 crashes when adding new request", "issue_description": "revintec commented on 9 Aug 2015\nSymptom: when adding a new request, mitmproxy crashes(related: #426)\nI'm running OS X 10.10.4, using version 0.12.1 installed through homebrew(latest version)\nReproduce: open mitmproxy, press n(create a new request), then g(for GET), then hit enter\nmitmproxy crashes with the following message:\n\nTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/lib/python2.7/site-packages/libmproxy/console/init.py\", line 478, in run\nself.loop.run()\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\nself.event_loop.run()\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\nself._loop()\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\nself._watch_filesfd\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/vendor/lib/python2.7/site-packages/urwid/raw_display.py\", line 392, in\nevent_loop, callback, self.get_available_raw_input())\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/vendor/lib/python2.7/site-packages/urwid/raw_display.py\", line 492, in parse_input\ncallback(processed, processed_codes)\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 399, in _update\nself.process_input(keys)\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/vendor/lib/python2.7/site-packages/urwid/main_loop.py\", line 499, in process_input\nk = self._topmost_widget.keypress(self.screen_size, k)\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/lib/python2.7/site-packages/libmproxy/console/window.py\", line 38, in keypress\nk = super(self.class, self).keypress(size, k)\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/vendor/lib/python2.7/site-packages/urwid/container.py\", line 1116, in keypress\nreturn self.footer.keypress((maxcol,),key)\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 123, in keypress\nreturn self.ab.keypress(_args, *_kwargs)\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 82, in keypress\nself.prompt_execute(self._w.get_edit_text())\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 104, in prompt_execute\nmsg = p(txt, *args)\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 310, in new_request\nf = self.master.create_request(method, scheme, host, port, path)\nFile \"/usr/local/Cellar/mitmproxy/0.12.1/libexec/lib/python2.7/site-packages/libmproxy/flow.py\", line 828, in create_request\nheaders = ODictCaseless()\nNameError: global name 'ODictCaseless' is not defined\nmitmproxy has crashed!\nPlease lodge a bug report at:\nhttps://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2015-08-09T17:01:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1346": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/717", "issue_id": "#717", "issue_summary": "mitmproxy in regular proxy mode sends absolute resource path to server", "issue_description": "Contributor\nsakurai-youhei commented on 9 Aug 2015\nExpected behavior:\nmitmproxy in regular mode should behave according to description below.\nhttps://github.com/mitmproxy/mitmproxy/blob/master/libmproxy/proxy/primitives.py#L46\nhttps://mitmproxy.org/doc/schematics/proxy-modes-regular.png\ni.e. If client sends GET http://example.com/path/to/resource/ HTTP/1.1 to mitmproxy, then mitmproxy in regular mode should send GET /path/to/resource/ HTTP/1.1 to server.\nCurrent behavior:\nmitmproxy in regular mode sends GET http://example.com/path/to/resource/ HTTP/1.1 to server and this improper request leads problematic location header in 301 response from server.\nHow to replicate:\nOn 1st terminal, run following command.\nLANG=en_US.UTF-8 mitmdump -v -d\nOn 2rd terminal, run following command.\ntcpdump -X \\(port 80 or port 8080\\) and host www.cuthousemore.co.jp\nOn 3rd terminal, run following command.\nhttp_proxy=127.0.0.1:8080 curl -v http://www.cuthousemore.co.jp/tete/\nYou'll get to see strange location header from server on every terminal - Location: http://www.cuthousemore.co.jphttp/www.cuthousemore.co.jp:80/tete/. And you can find the root cause on 2nd terminal (running tcpdump) - mitmproxy sends absolute resource path to server.\nOutput of mitmdump:\nroot@packer-ubuntu-15-04-amd64:~# LANG=en_US.UTF-8 mitmdump -v -d\n127.0.0.1:34663: clientconnect\n127.0.0.1:34663: request\n  -> <HTTPRequest: GET http://www.cuthousemore.co.jp:80/tete/>\n127.0.0.1:34663: Set new server address: www.cuthousemore.co.jp:80\n127.0.0.1:34663: serverconnect\n  -> www.cuthousemore.co.jp:80\n127.0.0.1:34663: response\n  -> <HTTPResponse: 301 Moved Permanently (text/html; charset=UTF-8, content missing)>\n127.0.0.1 GET http://www.cuthousemore.co.jp/tete/\n    User-Agent: curl/7.38.0\n    Host: www.cuthousemore.co.jp\n    Accept: */*\n    Proxy-Connection: Keep-Alive\n\n << 301 Moved Permanently 0B\n    Date: Sun, 09 Aug 2015 03:44:40 GMT\n    Server: Apache\n    X-Powered-By: PHP/5.5.26\n    X-Pingback: http://www.cuthousemore.co.jp/xmlrpc.php\n    Expires: Wed, 11 Jan 1984 05:00:00 GMT\n    Cache-Control: no-cache, must-revalidate, max-age=0\n    Pragma: no-cache\n    Location: http://www.cuthousemore.co.jphttp/www.cuthousemore.co.jp:80/tete/\n    Content-Length: 0\n    Content-Type: text/html; charset=UTF-8\n\n127.0.0.1:34663: clientdisconnect\n127.0.0.1:34663: serverdisconnect\n  -> www.cuthousemore.co.jp:80\nOutput of curl:\nroot@packer-ubuntu-15-04-amd64:~# http_proxy=127.0.0.1:8080 curl -v http://www.cuthousemore.co.jp/tete/\n* Hostname was NOT found in DNS cache\n*   Trying 127.0.0.1...\n* Connected to 127.0.0.1 (127.0.0.1) port 8080 (#0)\n> GET http://www.cuthousemore.co.jp/tete/ HTTP/1.1\n> User-Agent: curl/7.38.0\n> Host: www.cuthousemore.co.jp\n> Accept: */*\n> Proxy-Connection: Keep-Alive\n>\n< HTTP/1.1 301 Moved Permanently\n< Date: Sun, 09 Aug 2015 03:14:43 GMT\n* Server Apache is not blacklisted\n< Server: Apache\n< X-Powered-By: PHP/5.5.26\n< X-Pingback: http://www.cuthousemore.co.jp/xmlrpc.php\n< Expires: Wed, 11 Jan 1984 05:00:00 GMT\n< Cache-Control: no-cache, must-revalidate, max-age=0\n< Pragma: no-cache\n< Location: http://www.cuthousemore.co.jphttp/www.cuthousemore.co.jp:80/tete/\n< Content-Length: 0\n< Content-Type: text/html; charset=UTF-8\n<\n* Connection #0 to host 127.0.0.1 left intact\nSupplemental information:\nBreak point where would help debugger: https://github.com/mitmproxy/netlib/blob/master/netlib/http/semantics.py#L91\nVersion of mitmproxy and netlib: 0.13.1\nHow I installed mitmproxy: pip install https://github.com/mitmproxy/netlib/archive/master.zip && pip install https://github.com/mitmproxy/mitmproxy/archive/master.zip", "issue_status": "Closed", "issue_reporting_time": "2015-08-09T04:14:01Z", "fixed_by": "#741", "pull_request_summary": "Proxy Refactor", "pull_request_description": "Member\nmhils commented on 27 Aug 2015\nThis PR introduces a clear separation of layers in the proxy/protocol core and thereby adds support for a variety of features:\nHTTP2 support\nClear separation of protocol layers (e.g. separate TLS handling for ConnectionHandler)\nSmart protocol guessing: We peek into the traffic to determine the actual protocol. In the worst case, we fall back to raw TCP passthrough.\nLazy initialization of server connections (#722)\nRemove \"double-connect\" workaround for SNI by manually reading the handshake.\nOpen for discussion:\nDo we want to enable smart protocol guessing initially (while there is not UI in mitmproxy yet) or do we wait until we have a proper UI for this?\nSettled for the second variant.\nSpoof mode and SSL spoof mode have been removed. We should check if this works best as an inline script or as a stand-alone proxy mode. I personally want to keep the number of modes low, but I'm open for discussion here.\nTODO:\nFix HTTP Replay - probably just HTTP1 for now.\nProperly process configuration options.\nAdd --ignore/--tcp support / clean up next_layer\nRefactor all code that uses flow.live to use the new interfaces.\nFix Streaming\nCheck inline script hooks.\nFix change_upstream_proxy example.\nFix dns_spoofing example.\n1dd09a5 is a bit ugly - is there a better way? (no)\nFinal TODOs:\nRemove old code\nSeparate proxy modes from layers (see #742)\nrename protocol2 to protocol and remove old files\n(This PR is a follow up of #694 .)\nfixes #745\nfixes #722\nfixes #717\nfixes #697\nfixes #681\nfixes #672\nfixes #641\nrefs #483\nrefs #383\nrefs #743", "pull_request_status": "Merged", "issue_fixed_time": "2015-09-01T23:16:48Z", "files_changed": [["6", ".coveragerc"], ["17", "doc-src/features/reverseproxy.html"], ["9", "doc-src/howmitmproxy.html"], ["14", "doc-src/modes.html"], ["47", "examples/change_upstream_proxy.py"], ["47", "examples/dns_spoofing.py"], ["37", "examples/ignore_websocket.py"], ["13", "examples/stub.py"], ["248", "libmproxy/cmdline.py"], ["2", "libmproxy/console/common.py"], ["2", "libmproxy/console/flowview.py"], ["11", "libmproxy/console/statusbar.py"], ["4", "libmproxy/contrib/README"], ["5", "libmproxy/contrib/tls/__init__.py"], ["213", "libmproxy/contrib/tls/_constructs.py"], ["26", "libmproxy/contrib/tls/utils.py"], ["34", "libmproxy/exceptions.py"], ["6", "libmproxy/filt.py"], ["37", "libmproxy/flow.py"], ["6", "libmproxy/main.py"], ["16", "libmproxy/models/__init__.py"], ["46", "libmproxy/proxy/connection.py", "\u2192", "libmproxy/models/connections.py"], ["166", "libmproxy/models/flow.py"], ["303", "libmproxy/protocol/http_wrappers.py", "\u2192", "libmproxy/models/http.py"], ["13", "libmproxy/protocol/__init__.py"], ["179", "libmproxy/protocol/base.py"], ["20", "libmproxy/protocol/handle.py"], ["1,179", "libmproxy/protocol/http.py"], ["96", "libmproxy/protocol/http_replay.py"], ["294", "libmproxy/protocol/primitives.py"], ["66", "libmproxy/protocol/rawtcp.py"], ["97", "libmproxy/protocol/tcp.py"], ["298", "libmproxy/protocol/tls.py"], ["11", "libmproxy/proxy/__init__.py"], ["221", "libmproxy/proxy/config.py"], ["12", "libmproxy/proxy/modes/__init__.py"], ["26", "libmproxy/proxy/modes/http_proxy.py"], ["17", "libmproxy/proxy/modes/reverse_proxy.py"], ["60", "libmproxy/proxy/modes/socks_proxy.py"], ["24", "libmproxy/proxy/modes/transparent_proxy.py"], ["178", "libmproxy/proxy/primitives.py"]]}, "1347": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/716", "issue_id": "#716", "issue_summary": "mitmproxy install issues", "issue_description": "saalmaan commented on 9 Aug 2015\nHi All\nI am trying to install mitmproxy but when I run it I get following errors\nSystem details:\nMac: 10.10.4\nPython version: 2.7.6\npip version: 7.1.0\nmitmproxy: 0.13\nError Log:\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 9, in <module>\n    load_entry_point('mitmproxy==0.13', 'console_scripts', 'mitmproxy')()\n  File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 558, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 2682, in load_entry_point\n    return ep.load()\n  File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 2355, in load\n    return self.resolve()\n  File \"/Library/Python/2.7/site-packages/pkg_resources/__init__.py\", line 2361, in resolve\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\n  File \"/Library/Python/2.7/site-packages/libmproxy/main.py\", line 7, in <module>\n    from . import version, cmdline\n  File \"/Library/Python/2.7/site-packages/libmproxy/cmdline.py\", line 5, in <module>\n    from netlib import http\n  File \"/Library/Python/2.7/site-packages/netlib/http.py\", line 7, in <module>\n    from . import odict, utils, tcp, http_status\n  File \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 26, in <module>\n    'TLSv1.2': SSL.TLSv1_2_METHOD,\nAttributeError: 'module' object has no attribute 'TLSv1_2_METHOD'\nInstall log:\nsudo -H pip install mitmproxy                                                                                                     \u25c9 \u25fc\u25fc\u25fc\u25fc\u25fc\u25fc\u25fc\u25fc\u25fc\u25fb\nCollecting mitmproxy\n/Library/Python/2.7/site-packages/pip-7.1.0-py2.7.egg/pip/_vendor/requests/packages/urllib3/util/ssl_.py:90: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n  InsecurePlatformWarning\n  Using cached mitmproxy-0.13.tar.gz\nRequirement already satisfied (use --upgrade to upgrade): pyperclip>=1.5.8 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pyasn1>0.1.2 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): tornado>=4.0.2 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): lxml>=3.3.6 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): netlib<0.14,>=0.13 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): urwid>=1.3 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): blinker>=1.3 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): Pillow>=2.3.0 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pyparsing>=1.5.2 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): configargparse>=0.9.3 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): html2text>=2015.4.14 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): backports.ssl-match-hostname in /Library/Python/2.7/site-packages (from tornado>=4.0.2->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): certifi in /Library/Python/2.7/site-packages (from tornado>=4.0.2->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pyOpenSSL>=0.15.1 in /Library/Python/2.7/site-packages (from netlib<0.14,>=0.13->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): cryptography>=0.9 in /Library/Python/2.7/site-packages (from netlib<0.14,>=0.13->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): passlib>=1.6.2 in /Library/Python/2.7/site-packages (from netlib<0.14,>=0.13->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): hpack>=1.0.1 in /Library/Python/2.7/site-packages (from netlib<0.14,>=0.13->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): six>=1.5.2 in /Library/Python/2.7/site-packages (from pyOpenSSL>=0.15.1->netlib<0.14,>=0.13->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): idna in /Library/Python/2.7/site-packages (from cryptography>=0.9->netlib<0.14,>=0.13->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): setuptools in /Library/Python/2.7/site-packages (from cryptography>=0.9->netlib<0.14,>=0.13->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): enum34 in /Library/Python/2.7/site-packages (from cryptography>=0.9->netlib<0.14,>=0.13->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): ipaddress in /Library/Python/2.7/site-packages (from cryptography>=0.9->netlib<0.14,>=0.13->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): cffi>=0.8 in /Library/Python/2.7/site-packages (from cryptography>=0.9->netlib<0.14,>=0.13->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pycparser in /Library/Python/2.7/site-packages (from cffi>=0.8->cryptography>=0.9->netlib<0.14,>=0.13->mitmproxy)\nInstalling collected packages: mitmproxy\n  Running setup.py install for mitmproxy\nSuccessfully installed mitmproxy-0.13\nWhat I already tried:\npip install mitmproxy -U\ntried to uninstall and install mitmproxy again\nrestart my mac :)\nAny suggestions?\n--Many thanks", "issue_status": "Closed", "issue_reporting_time": "2015-08-08T19:10:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1348": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/715", "issue_id": "#715", "issue_summary": "error installing mitmproxy using easy_install", "issue_description": "karneaud commented on 8 Aug 2015\npHad problems installing mitmproxy on my OSX Yosemite with python 2.7 using easy_install and got this error\nRunning cryptography-0.9.3/setup.py -q bdist_egg --dist-dir /tmp/easy_install-rauMRA/cryptography-0.9.3/egg-dist-tmp-zlKfoq\nerror: Not a directory\ninstalling using pip gives me\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/tmp/pip-build-qjWm6R/cffi\nWhat does that mean?", "issue_status": "Closed", "issue_reporting_time": "2015-08-08T15:21:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1349": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/714", "issue_id": "#714", "issue_summary": "flow.intercept() isn't working in inline scripts", "issue_description": "ojab commented on 6 Aug 2015\nNot sure if it's a bug or desired behavior, but it looks like an issue for me. Simple script like\ndef request(context, flow):\n    flow.intercept(context._master)\ncorrectly sets \"'intercepted': True\", but flow is actually accepted by mitmproxy (I assume that if interception pattern is not set, intercepted is set to False somewhere).", "issue_status": "Closed", "issue_reporting_time": "2015-08-06T09:16:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1350": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/713", "issue_id": "#713", "issue_summary": "Hotkey to reload all inline scripts", "issue_description": "ojab commented on 6 Aug 2015\nWhen writing/testing inline scripts there is AFAIU two options to load fresh script version from filesystem:\nRestart mitmproxy.\nRemove and add again script via \"Editing scripts menu\".\nIt will be handy to have scripts reloaded with just one keystroke.", "issue_status": "Closed", "issue_reporting_time": "2015-08-06T09:04:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1351": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/712", "issue_id": "#712", "issue_summary": "python 3.x compatibility support", "issue_description": "auvipy commented on 5 Aug 2015\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2015-08-05T07:07:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1352": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/711", "issue_id": "#711", "issue_summary": "clientconnect loop", "issue_description": "ghost commented on 5 Aug 2015\nhi,\nI am running the mitpdump in trasparent mode and when I start it on my gateway it prints a lot of:\n127.0.0.1:35358: clientconnect\n127.0.0.1:35342: clientdisconnect\n127.0.0.1:35359: clientconnect\n127.0.0.1:35345: clientdisconnect\n127.0.0.1:35360: clientconnect\n127.0.0.1:35347: clientdisconnect\n127.0.0.1:35361: clientconnect\n127.0.0.1:35350: clientdisconnect\n127.0.0.1:35352: clientdisconnect\n127.0.0.1:35362: clientconnect\n127.0.0.1:35351: clientdisconnect\non sequential port, I never seen this behaviour, what can be?", "issue_status": "Closed", "issue_reporting_time": "2015-08-04T20:16:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1353": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/710", "issue_id": "#710", "issue_summary": "UnicodeDecodeError when dumping with read_dumpfile", "issue_description": "ghost commented on 4 Aug 2015\nUsed example script flowwriter.py to collect some data\nThen tryed to run it with example script read_dumpfile\ngetting :\n...\n        \"code\": 200, \n        \"content\": Traceback (most recent call last):\n  File \"read_dumpfile\", line 16, in <module>\n    json.dump(f.get_state(), sys.stdout, indent=4)\n  File \"/usr/lib/python2.7/json/__init__.py\", line 189, in dump\n    for chunk in iterable:\n  File \"/usr/lib/python2.7/json/encoder.py\", line 434, in _iterencode\n    for chunk in _iterencode_dict(o, _current_indent_level):\n  File \"/usr/lib/python2.7/json/encoder.py\", line 408, in _iterencode_dict\n    for chunk in chunks:\n  File \"/usr/lib/python2.7/json/encoder.py\", line 390, in _iterencode_dict\n    yield _encoder(value)\nUnicodeDecodeError: 'utf8' codec can't decode byte 0x8b in position 1: invalid start byte\n...\nExample file that was collected with flowwrite.py is attached. I filltered out one http response that causes this bug\nmd5sum logfile\nfc0285d300cccc88b757e4ff70bf128b logfile\nTested with mitmproxy commit adf2877", "issue_status": "Closed", "issue_reporting_time": "2015-08-04T15:29:19Z", "fixed_by": "#732", "pull_request_summary": "Fixing issue #710. Prety printing in read_dumpfile", "pull_request_description": "ghost commented on 19 Aug 2015\nfixes #710", "pull_request_status": "Merged", "issue_fixed_time": "2015-08-19T09:45:28Z", "files_changed": [["4", "examples/read_dumpfile"]]}, "1354": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/709", "issue_id": "#709", "issue_summary": "mitmweb Not Working with Microsoft Edge Browser", "issue_description": "Contributor\nBSalita commented on 4 Aug 2015\nUsing \"mitmweb -T --host\" (v0.13, Windows 10) on Microsoft Edge browser, the page is always rendered completely blank. Chrome and FIrefox work fine.", "issue_status": "Closed", "issue_reporting_time": "2015-08-04T07:36:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1355": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/708", "issue_id": "#708", "issue_summary": "mitmweb: command line switches are ignored", "issue_description": "Contributor\nBSalita commented on 4 Aug 2015\nWhen I use \"mitmweb -T --host\" (v0.13, Windows 10), no domain names ever appear, just ip numbers. Is that expected? OTOH \"mitmdump -T --host\" works fine.", "issue_status": "Closed", "issue_reporting_time": "2015-08-04T07:28:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1356": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/707", "issue_id": "#707", "issue_summary": "mitmproxy has crashed!", "issue_description": "guliping commented on 4 Aug 2015\nwhen I run mitmweb, and open 127.0.0.1 with chrome, the problem happens.Here is the command I run:\n$ ./dev\n$ source ../venv.mitmproxy/bin/activate\n(venv.mitmproxy)\u279c mitmproxy git:(master) ./mitmweb\nWarning: You are using mitmdump 0.11.4 with netlib 0.13.1. Most likely, that won't work - please upgrade!\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\nFile \"/Users/guliping/work/mitmproxy/libmproxy/proxy/server.py\", line 99, in handle\nprotocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\nFile \"/Users/guliping/work/mitmproxy/libmproxy/protocol/http.py\", line 989, in handle_messages\nwhile self.handle_flow():\nFile \"/Users/guliping/work/mitmproxy/libmproxy/protocol/http.py\", line 1052, in handle_flow\nwfile=self.c.client_conn.wfile\nFile \"/Users/guliping/work/mitmproxy/libmproxy/protocol/http.py\", line 341, in from_stream\nreq = http.read_request(\nAttributeError: 'module' object has no attribute 'read_request'", "issue_status": "Closed", "issue_reporting_time": "2015-08-04T03:24:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1357": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/706", "issue_id": "#706", "issue_summary": "when I pip install mitproxy, it shows RuntimeError: maximum recursion depth exceeded", "issue_description": "cryingDream94 commented on 3 Aug 2015\n....\n      File \"/Library/Python/2.7/site-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py\", line 748, in __init__\n        self.scan(search_path)\n      File \"/Library/Python/2.7/site-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py\", line 777, in scan\n        for dist in find_distributions(item):\n      File \"/Library/Python/2.7/site-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py\", line 1757, in find_on_path\n        path_item,entry,metadata,precedence=DEVELOP_DIST\n      File \"/Library/Python/2.7/site-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py\", line 2151, in from_location\n        py_version=py_version, platform=platform, **kw\n      File \"/Library/Python/2.7/site-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py\", line 2128, in __init__\n        self.project_name = safe_name(project_name or 'Unknown')\n      File \"/Library/Python/2.7/site-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py\", line 1139, in safe_name\n        return re.sub('[^A-Za-z0-9.]+', '-', name)\n    RuntimeError: maximum recursion depth exceeded\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in /private/tmp/pip-build-iddM8h/mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2015-08-03T10:23:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1358": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/705", "issue_id": "#705", "issue_summary": "When I input \u201cmitproxy\u201din commands, it is show 'module' object has no attribute 'TLSv1_2_METHOD'", "issue_description": "cryingDream94 commented on 3 Aug 2015\n\u279c  ~  mitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 9, in <module>\n    load_entry_point('mitmproxy==0.13.1', 'console_scripts', 'mitmproxy')()\n  File \"/Library/Python/2.7/site-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py\", line 337, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/Library/Python/2.7/site-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py\", line 2311, in load_entry_point\n    return ep.load()\n  File \"/Library/Python/2.7/site-packages/distribute-0.6.28-py2.7.egg/pkg_resources.py\", line 2017, in load\n    entry = __import__(self.module_name, globals(),globals(), ['__name__'])\n  File \"/Library/Python/2.7/site-packages/libmproxy/main.py\", line 7, in <module>\n    from . import version, cmdline\n  File \"/Library/Python/2.7/site-packages/libmproxy/cmdline.py\", line 6, in <module>\n    from . import filt, utils, version\n  File \"/Library/Python/2.7/site-packages/libmproxy/filt.py\", line 38, in <module>\n    from .protocol.http import decoded\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/__init__.py\", line 1, in <module>\n    from .primitives import *\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/primitives.py\", line 4, in <module>\n    import netlib.tcp\n  File \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 26, in <module>\n    'TLSv1.2': SSL.TLSv1_2_METHOD,\nAttributeError: 'module' object has no attribute 'TLSv1_2_METHOD'", "issue_status": "Closed", "issue_reporting_time": "2015-08-03T05:39:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1359": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/704", "issue_id": "#704", "issue_summary": "pip command for previous release?", "issue_description": "Contributor\nBSalita commented on 2 Aug 2015\nI'm trying to rule in/out whether an issue is particular to a release. I understand the pip command for the current release is \"pip install mitmproxy\", which downloads and installs the current release.\nWhat is the pip command to install a previous version of mitmproxy?\nWhat is the pip command to install from downloaded source code?", "issue_status": "Closed", "issue_reporting_time": "2015-08-02T14:28:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1360": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/703", "issue_id": "#703", "issue_summary": "SSL Error On Windows Only", "issue_description": "Contributor\nBSalita commented on 2 Aug 2015\nI'm running \"mitmdump -T --host\" (v0.13) on Windows 10. HTTPS/SSL works fine with Android and iOS devices after the certificate is accepted via mitm.it. However, I'm unable to get HTTPS/SSL working on the same Windows 10 system or even on remote Windows 10 systems connecting in. I don't recall running into this issue with mitmdump v0.12 and Windows 8.1. Is something broken in v0.13 or Windows 10?", "issue_status": "Closed", "issue_reporting_time": "2015-08-02T14:10:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1361": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/702", "issue_id": "#702", "issue_summary": "Windows: mitmdump Requires Administrator Privledges", "issue_description": "Contributor\nBSalita commented on 2 Aug 2015\nI'm using mitmdump v0.13 on Windows 10. If I don't run in Administrator mode, mitmdump gives an \"Access Denied\" error. Works fine in Administrator mode. Is this a know issue? I didn't see it documented anywhere.", "issue_status": "Closed", "issue_reporting_time": "2015-08-02T14:03:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1362": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/701", "issue_id": "#701", "issue_summary": "mitmproxy fails to start with message \"cannot connect to X server\"", "issue_description": "chekunkov commented on 30 Jul 2015\njust upgraded from v0.9.2 to v0.13\nsudo pip install mitmproxy --upgrade\nand now mitmproxy doesn't start, I'm getting the following message:\n# vagrant at dev in ~ [12:34:26]\n$ mitmproxy\n: cannot connect to X server\n\n# vagrant at dev in ~ [12:34:29]\n$\nmitmproxy version: 0.13\noperating system: Ubuntu 14.04.1 LTS", "issue_status": "Closed", "issue_reporting_time": "2015-07-30T12:40:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1363": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/697", "issue_id": "#697", "issue_summary": "Upstream Proxy Mode generates certs with bad subjectAltName/CN", "issue_description": "hubert3 commented on 28 Jul 2015\nRunning mitmproxy -p 8081 and making a request to https://pentest.com, the cert that mitmproxy generates has the following properties:\n   Subject: CN=www.pentest.com\n    X509v3 extensions:\n        X509v3 Subject Alternative Name:\n            DNS:www.pentest.com, DNS:pentest.com, DNS:pentest.com\nCert is accepted by IE8 WinXP since mitmproxy CA cert is trusted.\nRunning mitmproxy -U \"http://localhost:8080\" pointing to Burp as an upstream proxy, the cert mitmproxy generates has the following properties:\n  Subject: CN=pentest.com\n    X509v3 extensions:\n        X509v3 Subject Alternative Name:\n            DNS:localhost\nCert is rejected by IE8 WinXP despite mitmproxy CA cert being trusted.\nIt seems that IE doesn't like the invalid DNS:localhost subjectAltName despite the main CN being OK.\nI can see no reason why 'localhost' should be added as a subjectAltName? This just seems incorrect.\nThe cert returned by Burp for the upstream proxy case only has the following:\n    Subject: C=PortSwigger, O=PortSwigger, OU=PortSwigger CA, CN=pentest.com\nWith no subjectAltNames.\nI would suggest the following changes. When constructing certs on the fly:\nDon't add subjectAltNames that already match the CN, or preceding subjectAltNames\nDon't add 'localhost' as a subjectAltName or CN unless this is actually the CN or subjectAltName returned by the upstream server.", "issue_status": "Closed", "issue_reporting_time": "2015-07-28T11:57:28Z", "fixed_by": "#741", "pull_request_summary": "Proxy Refactor", "pull_request_description": "Member\nmhils commented on 27 Aug 2015\nThis PR introduces a clear separation of layers in the proxy/protocol core and thereby adds support for a variety of features:\nHTTP2 support\nClear separation of protocol layers (e.g. separate TLS handling for ConnectionHandler)\nSmart protocol guessing: We peek into the traffic to determine the actual protocol. In the worst case, we fall back to raw TCP passthrough.\nLazy initialization of server connections (#722)\nRemove \"double-connect\" workaround for SNI by manually reading the handshake.\nOpen for discussion:\nDo we want to enable smart protocol guessing initially (while there is not UI in mitmproxy yet) or do we wait until we have a proper UI for this?\nSettled for the second variant.\nSpoof mode and SSL spoof mode have been removed. We should check if this works best as an inline script or as a stand-alone proxy mode. I personally want to keep the number of modes low, but I'm open for discussion here.\nTODO:\nFix HTTP Replay - probably just HTTP1 for now.\nProperly process configuration options.\nAdd --ignore/--tcp support / clean up next_layer\nRefactor all code that uses flow.live to use the new interfaces.\nFix Streaming\nCheck inline script hooks.\nFix change_upstream_proxy example.\nFix dns_spoofing example.\n1dd09a5 is a bit ugly - is there a better way? (no)\nFinal TODOs:\nRemove old code\nSeparate proxy modes from layers (see #742)\nrename protocol2 to protocol and remove old files\n(This PR is a follow up of #694 .)\nfixes #745\nfixes #722\nfixes #717\nfixes #697\nfixes #681\nfixes #672\nfixes #641\nrefs #483\nrefs #383\nrefs #743", "pull_request_status": "Merged", "issue_fixed_time": "2015-09-01T23:16:48Z", "files_changed": [["6", ".coveragerc"], ["17", "doc-src/features/reverseproxy.html"], ["9", "doc-src/howmitmproxy.html"], ["14", "doc-src/modes.html"], ["47", "examples/change_upstream_proxy.py"], ["47", "examples/dns_spoofing.py"], ["37", "examples/ignore_websocket.py"], ["13", "examples/stub.py"]]}, "1364": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/696", "issue_id": "#696", "issue_summary": "Downloading OSX binary results in empty file", "issue_description": "bcopos commented on 28 Jul 2015\nJust a heads up. I attempted downloading the OSX binary from the link on the mitmproxy page and got an empty file. I can try to install via pip or build from source but wanted to let you know.", "issue_status": "Closed", "issue_reporting_time": "2015-07-27T23:55:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1365": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/695", "issue_id": "#695", "issue_summary": "mitm.it not being replaced", "issue_description": "ryantheleach commented on 27 Jul 2015\nI can't get the intercepted mitm.it page to appear when running mitmproxy -p 8088 and configuring an iPhone to use the machine running mitmproxy.\nI've disabled cell data on the iPhone, and I can see the responses are being passed through mitmproxy and can be accepted or rejected.\nSo it's clear I have the proxy configured correctly, but mitmproxy is just not showing the magic page for some reason.", "issue_status": "Closed", "issue_reporting_time": "2015-07-27T11:47:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1366": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/693", "issue_id": "#693", "issue_summary": "Crashed on Elementary OS", "issue_description": "Contributor\ndjsan15 commented on 23 Jul 2015\nI got the following error while tracking some requests from my android phone.\nThis is the crash report:\nmitmproxy --host\n\n(mitmproxy:3429): Gtk-WARNING **: Unable to locate theme engine in module_path: \"pixmap\",\n\n(mitmproxy:3429): Gtk-WARNING **: Unable to locate theme engine in module_path: \"pixmap\",\n\n(mitmproxy:3429): Gtk-WARNING **: Unable to locate theme engine in module_path: \"pixmap\",\n\n(mitmproxy:3429): Gtk-WARNING **: Unable to locate theme engine in module_path: \"pixmap\",\n\n(mitmproxy:3429): Gtk-WARNING **: Unable to locate theme engine in module_path: \"pixmap\",\nGtk-Message: Failed to load module \"canberra-gtk-module\"\nTraceback (most recent call last):\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 499, in run\nself.loop.run()\nFile \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 278, in run\nself._run()\nFile \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 375, in _run\nself.event_loop.run()\nFile \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 678, in run\nself._loop()\nFile \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 715, in _loop\nself._watch_files[fd]()\nFile \"/usr/local/lib/python2.7/dist-packages/urwid/raw_display.py\", line 392, in <lambda>\nevent_loop, callback, self.get_available_raw_input())\nFile \"/usr/local/lib/python2.7/dist-packages/urwid/raw_display.py\", line 492, in parse_input\ncallback(processed, processed_codes)\nFile \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 399, in _update\nself.process_input(keys)\nFile \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 499, in process_input\nk = self._topmost_widget.keypress(self.screen_size, k)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/window.py\", line 38, in keypress\nk = super(self.__class__, self).keypress(size, k)\nFile \"/usr/local/lib/python2.7/dist-packages/urwid/container.py\", line 1116, in keypress\nreturn self.footer.keypress((maxcol,),key)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/statusbar.py\", line 123, in keypress\nreturn self.ab.keypress(*args, **kwargs)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/statusbar.py\", line 85, in keypress\nself._w.keypress(size, k)\nAttributeError: 'Text' object has no attribute 'keypress'\n\nmitmproxy has crashed!", "issue_status": "Closed", "issue_reporting_time": "2015-07-23T09:29:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1367": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/692", "issue_id": "#692", "issue_summary": "CONTENT_MISSING is not serialized correctly.", "issue_description": "Member\nmhils commented on 22 Jul 2015\nCONTENT_MISSING is serialized as a `\"0\"`` str rather than an int. This is due to the conversion caused by\nmitmproxy/libmproxy/protocol/http.py\nLine 99 in 9b3fe80\n content=str, \n@cortesi, shall we just make it None?", "issue_status": "Closed", "issue_reporting_time": "2015-07-22T15:23:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1368": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/691", "issue_id": "#691", "issue_summary": "crash from not sanitizing unicode hostnames", "issue_description": "bugi commented on 21 Jul 2015\nI ran into an error that crashed mitmproxy. It looks like something not handling unicode hostnames.\nFirst, here's a workaround from my inlinescript. Note the str() wrapping the hostname.\npartial diff:\n        -            hp = ( proxy['host'] , int(proxy['port']) )\n        +            hp = ( str(proxy['host']) , int(proxy['port']) )\ncontext for the diff:\n        server_changed = flow.live.change_server(\n            hp,\n            force=True,\n            persistent_change=True)\nHere's what mitmproxy said:\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n127.0.0.1:42455: Traceback (most recent call last):\n  File \"/.../venv/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 125, in handle\n    **conn_kwargs).handle_messages()\n  File \"/.../venv/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1033, in handle_messages\n    while self.handle_flow():\n  File \"/.../venv/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1163, in handle_flow\n    (flow.request.host, flow.request.port)):\n  File \"/.../venv/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1476, in process_connect_request\n    self.c.establish_ssl(server=True, client=True)\n  File \"/.../venv/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 243, in establish_ssl\n    cert, key, chain_file = self.find_cert()\n  File \"/.../venv/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 312, in find_cert\n    ret = self.config.certstore.get_cert(host, sans)\n  File \"/.../venv/lib/python2.7/site-packages/netlib/certutils.py\", line 329, in get_cert\n    sans),\n  File \"/.../venv/lib/python2.7/site-packages/netlib/certutils.py\", line 100, in dummy_cert\n    [OpenSSL.crypto.X509Extension(\"subjectAltName\", False, ss)])\n  File \"/.../venv/lib/python2.7/site-packages/OpenSSL/crypto.py\", line 651, in __init__\n    extension = _lib.X509V3_EXT_nconf(_ffi.NULL, ctx, type_name, value)\nTypeError: initializer for ctype 'char *' must be a str or list or tuple, not unicode\nHere's what curl said:\n$ curl -v --proxy 'http://localhost:8080' 'https://xxx/' --insecure\n* About to connect() to proxy localhost port 8080 (#0)\n*   Trying ::1... Connection refused\n*   Trying 127.0.0.1... connected\n* Connected to localhost (127.0.0.1) port 8080 (#0)\n* Establish HTTP proxy tunnel to xxx:443\n> CONNECT xxx:443 HTTP/1.1\n> Host: xxx:443\n> User-Agent: curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.13.6.0 zlib/1.2.3 libidn/1.18 libssh2/1.4.2\n> Proxy-Connection: Keep-Alive\n>\n< HTTP/1.0 200 Connection established\n< Content-Length: 0\n<\n* Proxy replied OK to CONNECT request\n* Initializing NSS with certpath: sql:/etc/pki/nssdb\n* warning: ignoring value of ssl.verifyhost\n* NSS error -5938\n* Closing connection #0\n* SSL connect error\ncurl: (35) SSL connect error", "issue_status": "Closed", "issue_reporting_time": "2015-07-20T20:23:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1369": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/690", "issue_id": "#690", "issue_summary": "Docs: Document that Master subclasses need to implement handle_request and handle_response", "issue_description": "Member\nmhils commented on 20 Jul 2015\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2015-07-20T17:04:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1370": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/689", "issue_id": "#689", "issue_summary": "Docs: Add Cert Pinning Explanation", "issue_description": "Member\nmhils commented on 20 Jul 2015\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2015-07-20T17:03:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1371": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/688", "issue_id": "#688", "issue_summary": "Deamonized mode", "issue_description": "thedrow commented on 20 Jul 2015\nAllow mitmproxy to be used in the background without the console UI.\nThis is useful for API testing in CI.", "issue_status": "Closed", "issue_reporting_time": "2015-07-20T06:45:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1372": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/687", "issue_id": "#687", "issue_summary": "Running Mitmproxy on a iMac", "issue_description": "JPS46225 commented on 18 Jul 2015\nHi\nI've just installed Mitmproxy on my iMac, but can't figure out how to run/execute it\nThanks", "issue_status": "Closed", "issue_reporting_time": "2015-07-18T04:25:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1373": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/686", "issue_id": "#686", "issue_summary": "[EDIT: Resolved -- had low disk space] mitmproxy suddenly stopped working", "issue_description": "milesrichardson commented on 17 Jul 2015\nmy mistake. low disk space led to error.", "issue_status": "Closed", "issue_reporting_time": "2015-07-17T16:11:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1374": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/685", "issue_id": "#685", "issue_summary": "Clicks on empty space can unintentionally open a new view", "issue_description": "Contributor\nender672 commented on 17 Jul 2015\nI often click on the terminal window to activate keyboard focus.\nThe new click feature in mitmproxy often causes my click to open an unwanted view.\nThis issue is especially problematic on the flow list screen where a click almost anywhere on the screen takes you to a flow view. Even clicks on empty space surrounding the flow causes navigation.\nIs there a way to ignore clicks on empty spaces? Alternatively, can the mouse events be turned off?", "issue_status": "Closed", "issue_reporting_time": "2015-07-16T21:57:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1375": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/684", "issue_id": "#684", "issue_summary": "Inline Scripts: Allow relative imports", "issue_description": "Member\nmhils commented on 16 Jul 2015\nIt should be possible to do relative imports in inline scripts, e.g.\nlib.py\ndef foo():\n    # ...\ninlinescript.py\nfrom lib import foo\n\ndef start(ctx, argv):\n    foo()", "issue_status": "Closed", "issue_reporting_time": "2015-07-16T12:09:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1376": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/683", "issue_id": "#683", "issue_summary": "Inline Scripts: Exceptions in done hook are ignored.", "issue_description": "Member\nmhils commented on 16 Jul 2015\nwell, when you throw an exception in 'done' then it's not catched\nfollowing it you see a script.unload() which doesn't check the return value, this then calls self.run('done') etc\nWhile we're at it, we should throw a ScriptError rather than checking return codes, which is way more pythonic.", "issue_status": "Closed", "issue_reporting_time": "2015-07-16T12:04:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1377": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/682", "issue_id": "#682", "issue_summary": "In Transparent Mode, How to Redirect to Charles or Fiddler?", "issue_description": "Contributor\nBSalita commented on 15 Jul 2015\nI want to inspect HTTP(S) API calls. I have transparent mode working fine on OS/X. Is it possible to redirect HTTP(S) to Charles or Fiddler reverse proxies. I see there are some switches on mitmproxy that suggest to me that this can be done.", "issue_status": "Closed", "issue_reporting_time": "2015-07-15T12:10:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1378": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/681", "issue_id": "#681", "issue_summary": "replay HTTPS connections without doing the SSL negotiation with upstream", "issue_description": "dedsm commented on 15 Jul 2015\nI'm trying to replay a HTTPS request with mitmproxy without needing to be connected to the internet, this fails because in the CONNECT call mitmproxy tries to make the tcp connection and SSL negotiation with the upstream proxy, is there a way to avoid this?", "issue_status": "Closed", "issue_reporting_time": "2015-07-15T11:05:59Z", "fixed_by": "#741", "pull_request_summary": "Proxy Refactor", "pull_request_description": "Member\nmhils commented on 27 Aug 2015\nThis PR introduces a clear separation of layers in the proxy/protocol core and thereby adds support for a variety of features:\nHTTP2 support\nClear separation of protocol layers (e.g. separate TLS handling for ConnectionHandler)\nSmart protocol guessing: We peek into the traffic to determine the actual protocol. In the worst case, we fall back to raw TCP passthrough.\nLazy initialization of server connections (#722)\nRemove \"double-connect\" workaround for SNI by manually reading the handshake.\nOpen for discussion:\nDo we want to enable smart protocol guessing initially (while there is not UI in mitmproxy yet) or do we wait until we have a proper UI for this?\nSettled for the second variant.\nSpoof mode and SSL spoof mode have been removed. We should check if this works best as an inline script or as a stand-alone proxy mode. I personally want to keep the number of modes low, but I'm open for discussion here.\nTODO:\nFix HTTP Replay - probably just HTTP1 for now.\nProperly process configuration options.\nAdd --ignore/--tcp support / clean up next_layer\nRefactor all code that uses flow.live to use the new interfaces.\nFix Streaming\nCheck inline script hooks.\nFix change_upstream_proxy example.\nFix dns_spoofing example.\n1dd09a5 is a bit ugly - is there a better way? (no)\nFinal TODOs:\nRemove old code\nSeparate proxy modes from layers (see #742)\nrename protocol2 to protocol and remove old files\n(This PR is a follow up of #694 .)\nfixes #745\nfixes #722\nfixes #717\nfixes #697\nfixes #681\nfixes #672\nfixes #641\nrefs #483\nrefs #383\nrefs #743", "pull_request_status": "Merged", "issue_fixed_time": "2015-09-01T23:16:48Z", "files_changed": [["6", ".coveragerc"], ["17", "doc-src/features/reverseproxy.html"], ["9", "doc-src/howmitmproxy.html"], ["14", "doc-src/modes.html"], ["47", "examples/change_upstream_proxy.py"], ["47", "examples/dns_spoofing.py"], ["37", "examples/ignore_websocket.py"], ["13", "examples/stub.py"], ["248", "libmproxy/cmdline.py"], ["2", "libmproxy/console/common.py"], ["2", "libmproxy/console/flowview.py"], ["11", "libmproxy/console/statusbar.py"], ["4", "libmproxy/contrib/README"], ["5", "libmproxy/contrib/tls/__init__.py"], ["213", "libmproxy/contrib/tls/_constructs.py"], ["26", "libmproxy/contrib/tls/utils.py"], ["34", "libmproxy/exceptions.py"], ["6", "libmproxy/filt.py"], ["37", "libmproxy/flow.py"], ["6", "libmproxy/main.py"], ["16", "libmproxy/models/__init__.py"], ["46", "libmproxy/proxy/connection.py", "\u2192", "libmproxy/models/connections.py"], ["166", "libmproxy/models/flow.py"], ["303", "libmproxy/protocol/http_wrappers.py", "\u2192", "libmproxy/models/http.py"], ["13", "libmproxy/protocol/__init__.py"], ["179", "libmproxy/protocol/base.py"], ["20", "libmproxy/protocol/handle.py"], ["1,179", "libmproxy/protocol/http.py"], ["96", "libmproxy/protocol/http_replay.py"], ["294", "libmproxy/protocol/primitives.py"], ["66", "libmproxy/protocol/rawtcp.py"], ["97", "libmproxy/protocol/tcp.py"], ["298", "libmproxy/protocol/tls.py"], ["11", "libmproxy/proxy/__init__.py"], ["221", "libmproxy/proxy/config.py"], ["12", "libmproxy/proxy/modes/__init__.py"], ["26", "libmproxy/proxy/modes/http_proxy.py"], ["17", "libmproxy/proxy/modes/reverse_proxy.py"], ["60", "libmproxy/proxy/modes/socks_proxy.py"], ["24", "libmproxy/proxy/modes/transparent_proxy.py"], ["178", "libmproxy/proxy/primitives.py"]]}, "1379": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/680", "issue_id": "#680", "issue_summary": "Request to Add the Word \"Scroll\" to F Key Explanation", "issue_description": "Contributor\nBSalita commented on 15 Jul 2015\nThe term \"flow\" has no meaning to a noobie. I read Help several times but never associated my desire to have the screen scroll up with the explanation of the \"F\" key. If the word \"scroll\" simply appeared in the explanation of the \"F\" key, I would have happily used \"F\" instead of posting scrolling issues.", "issue_status": "Closed", "issue_reporting_time": "2015-07-14T19:35:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1380": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/679", "issue_id": "#679", "issue_summary": "Slow SSL Handshakes", "issue_description": "Calpicow commented on 14 Jul 2015\nI'm using HAProxy to connect to a mitmdump reverse proxy in https2http mode. I'm seeing an additional 200ms+ latency for every request, which disappears when I set the proxy back to http mode. HAProxy opens and closes the connection for every request, so I highly suspect it's related to opening an SSL connection.\nRight now I'm substituting http2http mode with Nginx to do SSL and proxy pass to mitmdump, and performance is good.\nBelow is a snippet of HAProxy configuration:\nlisten test ssl crt test.pem\n    bind *:443\n    mode http\n    balance roundrobin\n    server test localhost:443 check ssl verify none", "issue_status": "Closed", "issue_reporting_time": "2015-07-14T17:50:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1381": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/678", "issue_id": "#678", "issue_summary": "Implement Scrolling", "issue_description": "Contributor\nBSalita commented on 14 Jul 2015\nI'm using Terminal on OS/X. I'd like to have auto-scrolling such that the most recent request is always at the bottom of the screen.\nThis seems like such an obvious feature that I'm guessing there's a technical reason why it wasn't done.", "issue_status": "Closed", "issue_reporting_time": "2015-07-14T12:13:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1382": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/674", "issue_id": "#674", "issue_summary": "--replace-from-file not working properly (escaping issue?) Option to save/load Replacemets via editor?", "issue_description": "jjarava commented on 9 Jul 2015\nHi all!!\nI'm trying to use the --replace-from-file syntax as shown in https://mitmproxy.org/doc/features/replacements.html and I'm hitting a wall.\nI've got a set of replacement data (Filter, Regex, Replacement) that work fine via the editor:\nAnd they're pretty \"simple\":\nFilter: ~u wwww\\.example\\.com/loginurl\nRegex: sello-pa_e.js\"></script>\nReplacement:\nsello-pa_e.js\"></script>\n<script type=\"text/javascript\"> (function(){ ... long JavaScript code ...})(); </script>\nBasically I want to add the specific JS in the next line to the element I'm looking for with the regex.\nSo, to avoid having to manually enter the replacements in the editor, I'd like to either \"save\" them or load them from the CLI.\nLooking at the help, I've tried to do it via the --replace-from-file option but I can't get it to work.\nI've tried several things, in case it's an issue of how to \"escape\" the command:\nFirst attempt - mimic the example in the docs\nITSDev:test testuser$ mitmproxy --replace-from-file :~u wwww\\.example\\.com/loginurl:sello-pa_e.js\"></script>:./mitmproxy-repl.txt\n>\n>\n>\nThe example above keeps \"waiting on input\" (every \u21a9 or \u2305 press gets a new line), so I changed the way to escape the command:\nSecond attempt - single comma escape\nITSDev:test testuser$ mitmproxy --replace-from-file :~u wwww\\.example\\.com/loginurl:'sello-pa_e.js\"></script>':./mitmproxy-repl.txt\nusage: mitmproxy [options]\nmitmproxy: error: unrecognized arguments: wwww.example.com/loginurl:sello-pa_e.js\"></script>:./mitmproxy-repl.txt\nThis was a bit more promising, as after hitting \u21a9 there was a pause of about a second before I got the error message...\nThird attempt - use a different separator\nThinking that maybe the : has some special meaning in OSX; I've used a different separator:\nITSDev:test testuser$ mitmproxy --replace-from-file ,~u wwww\\.example\\.com/loginurl,'sello-pa_e.js\"></script>',./mitmproxy-repl.txt\nusage: mitmproxy [options]\nmitmproxy: error: unrecognized arguments: wwww.example.com/loginurl,sello-pa_e.js\"></script>,./mitmproxy-repl.txt\nITSDev:test testuser$\nbut the result is the same...\nI have the feeling that I'm missing something but I can't see what.\nWhat it would really make my life easier would be a \"replacement\" file format where I could specify the 3 parameters (Filter, Regex, Replacement) and then pass it on as a single parameter to the program... Or a way to \"save\" the Replacement expressions that are loaded in the editor at a given moment...\nAny tips will be more than welcome!", "issue_status": "Closed", "issue_reporting_time": "2015-07-09T15:29:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1383": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/672", "issue_id": "#672", "issue_summary": "FR: display SNI upon handshake error", "issue_description": "irsl commented on 8 Jul 2015\nHello,\nit would be quite useful if you displayed the SNI header sent by the client in the error message \"SSL handshake error: The client may not trust the proxy's certificate\"\nThanks.", "issue_status": "Closed", "issue_reporting_time": "2015-07-08T11:48:33Z", "fixed_by": "#741", "pull_request_summary": "Proxy Refactor", "pull_request_description": "Member\nmhils commented on 27 Aug 2015\nThis PR introduces a clear separation of layers in the proxy/protocol core and thereby adds support for a variety of features:\nHTTP2 support\nClear separation of protocol layers (e.g. separate TLS handling for ConnectionHandler)\nSmart protocol guessing: We peek into the traffic to determine the actual protocol. In the worst case, we fall back to raw TCP passthrough.\nLazy initialization of server connections (#722)\nRemove \"double-connect\" workaround for SNI by manually reading the handshake.\nOpen for discussion:\nDo we want to enable smart protocol guessing initially (while there is not UI in mitmproxy yet) or do we wait until we have a proper UI for this?\nSettled for the second variant.\nSpoof mode and SSL spoof mode have been removed. We should check if this works best as an inline script or as a stand-alone proxy mode. I personally want to keep the number of modes low, but I'm open for discussion here.\nTODO:\nFix HTTP Replay - probably just HTTP1 for now.\nProperly process configuration options.\nAdd --ignore/--tcp support / clean up next_layer\nRefactor all code that uses flow.live to use the new interfaces.\nFix Streaming\nCheck inline script hooks.\nFix change_upstream_proxy example.\nFix dns_spoofing example.\n1dd09a5 is a bit ugly - is there a better way? (no)\nFinal TODOs:\nRemove old code\nSeparate proxy modes from layers (see #742)\nrename protocol2 to protocol and remove old files\n(This PR is a follow up of #694 .)\nfixes #745\nfixes #722\nfixes #717\nfixes #697\nfixes #681\nfixes #672\nfixes #641\nrefs #483\nrefs #383\nrefs #743", "pull_request_status": "Merged", "issue_fixed_time": "2015-09-01T23:16:48Z", "files_changed": [["6", ".coveragerc"], ["17", "doc-src/features/reverseproxy.html"], ["9", "doc-src/howmitmproxy.html"], ["14", "doc-src/modes.html"], ["47", "examples/change_upstream_proxy.py"], ["47", "examples/dns_spoofing.py"], ["37", "examples/ignore_websocket.py"], ["13", "examples/stub.py"], ["248", "libmproxy/cmdline.py"], ["2", "libmproxy/console/common.py"], ["2", "libmproxy/console/flowview.py"], ["11", "libmproxy/console/statusbar.py"], ["4", "libmproxy/contrib/README"], ["5", "libmproxy/contrib/tls/__init__.py"], ["213", "libmproxy/contrib/tls/_constructs.py"], ["26", "libmproxy/contrib/tls/utils.py"], ["34", "libmproxy/exceptions.py"], ["6", "libmproxy/filt.py"], ["37", "libmproxy/flow.py"], ["6", "libmproxy/main.py"], ["16", "libmproxy/models/__init__.py"], ["46", "libmproxy/proxy/connection.py", "\u2192", "libmproxy/models/connections.py"], ["166", "libmproxy/models/flow.py"], ["303", "libmproxy/protocol/http_wrappers.py", "\u2192", "libmproxy/models/http.py"], ["13", "libmproxy/protocol/__init__.py"], ["179", "libmproxy/protocol/base.py"], ["20", "libmproxy/protocol/handle.py"], ["1,179", "libmproxy/protocol/http.py"], ["96", "libmproxy/protocol/http_replay.py"], ["294", "libmproxy/protocol/primitives.py"], ["66", "libmproxy/protocol/rawtcp.py"], ["97", "libmproxy/protocol/tcp.py"], ["298", "libmproxy/protocol/tls.py"], ["11", "libmproxy/proxy/__init__.py"], ["221", "libmproxy/proxy/config.py"], ["12", "libmproxy/proxy/modes/__init__.py"], ["26", "libmproxy/proxy/modes/http_proxy.py"], ["17", "libmproxy/proxy/modes/reverse_proxy.py"], ["60", "libmproxy/proxy/modes/socks_proxy.py"], ["24", "libmproxy/proxy/modes/transparent_proxy.py"], ["178", "libmproxy/proxy/primitives.py"]]}, "1384": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/671", "issue_id": "#671", "issue_summary": "Problem with multipart upload and content view", "issue_description": "Contributor\njlhonora commented on 8 Jul 2015\nI'm facing an issue when trying to view the details of a multipart POST request using mitmproxy.\nSteps to reproduce the problem:\nmitmproxy --port 8888\nMake the request:\ncurl -F filename=597fee54-2682-42c1-a87f-9ae55b1bf402.zip \\\n       -F 597fee54-2682-42c1-a87f-9ae55b1bf402.zip=@597fee54-2682-42c1-a87f-9ae55b1bf402.zip \\\n       --proxy 192.168.2.92:8888 http://192.168.2.92:3000/api/v1/upload\nThe zip file can be found here. Sorry, can't expose the backend but I guess it is not really necessary.\nThe request is correctly processed in mitmproxy:\n>> POST http://192.168.2.92:3000/api/v1/upload\n        \u2190 200 application/json 29B 114ms\nPress enter key to see the request's info and contents\nWhat is the expected behavior?\nmitmproxy shouldn't hang and it should display the request's contents.\nWhat went wrong?\nThe process gets stuck, eating most of the CPU:\nPID    COMMAND      %CPU\n25376  python       95.8 \nAny other comments?\nI browsed the source code for a bit, tried to get the stacktrace with lldb, search for log files but didn't get much far. If anyone can point me in the right direction to debug this I'd be glad to help.\nmitmproxy version: mitmproxy 0.12.1\nOperating System: Darwin [edited].local 14.3.0 Darwin Kernel Version 14.3.0: Mon Mar 23 11:59:05 PDT 2015; root:xnu-2782.20.48~5/RELEASE_X86_64 x86_64", "issue_status": "Closed", "issue_reporting_time": "2015-07-07T23:36:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1385": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/670", "issue_id": "#670", "issue_summary": "[Off-Topic?] Is there a community/forum where I can ask about *usage*?", "issue_description": "jjarava commented on 7 Jul 2015\nHi!\nI understand this is likely not the place to ask \"How do I do X?\" questions about mitmproxy, but I'm wondering if there's a specific place/community where to ask those kinds of questions\nGoogling around I've seen questions about mitmproxy in many different places, but there's not a place that looks like the \"natural\" place to send those questions.\nThanks a lot and sorry if it's a pretty obvious question - I believe that if there is such a place it should be more \"advertised\" on the project's home page\nThanks!", "issue_status": "Closed", "issue_reporting_time": "2015-07-07T18:15:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1386": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/669", "issue_id": "#669", "issue_summary": "Unable to enter \"Replacement mode\" in 0.12.1", "issue_description": "jjarava commented on 7 Jul 2015\nSteps to reproduce the problem:\nStart mitmproxy\nPress \"R\" (Uppercase R) to enter \"Replacement\" mode to enter expressions\nNothing happens\nWhat is the expected behavior?\nThe screen to enter \"Replacement\" expressions should appear to enable entering the filters and regexes to replace as per the doc in http://mitmproxy.org/doc/features/replacements.html\nIt's noted that the \"on-screen\" help doesn't show \"R\" as a shortcut.\nWhat went wrong?\nNot sure - no editor appears so there's no option to enter replacement\nAny other comments?\nThis is a key feature of mitmproxy for me.\nmitmproxy version: mitmproxy 0.12.1\nOperating System:\nProductName:    Mac OS X\nProductVersion: 10.9.5\nBuildVersion:   13F34", "issue_status": "Closed", "issue_reporting_time": "2015-07-07T17:54:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1387": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/668", "issue_id": "#668", "issue_summary": "what's the matter about SSL_DEFAULT_METHOD?", "issue_description": "mrlzh commented on 7 Jul 2015\nI get this error:\nTraceback (most recent call last):\nFile \"proxy.py\", line 9, in\nfrom libmproxy import controller, proxy\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.2-py2.7.egg/libmproxy/proxy/init.py\", line 2, in\nfrom .config import ProxyConfig, process_proxy_options\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.2-py2.7.egg/libmproxy/proxy/config.py\", line 31, in\nclass ProxyConfig:\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.2-py2.7.egg/libmproxy/proxy/config.py\", line 51, in ProxyConfig\nssl_version_client=tcp.SSL_DEFAULT_METHOD,\nAttributeError: 'module' object has no attribute 'SSL_DEFAULT_METHOD'\nI have installed netlib v0.12.1.help me please", "issue_status": "Closed", "issue_reporting_time": "2015-07-07T16:16:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1388": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/667", "issue_id": "#667", "issue_summary": "Unblocking non-https traffic on port 443", "issue_description": "saadusman17 commented on 7 Jul 2015\nHi,\nIf there is an app which generates some non-https traffic on port 443, the mitm proxy in transparent mode doesn't let it through, rather it answers with:\nHTTP/1.1 400 Bad Request\nServer: mitmproxy 0.12.1\nContent-type: text/html\nContent-Length: 387\nConnection: close\n        <html>\n            <head>\n                <title>400 Bad Request</title>\n            </head>\n            <body>SSL handshake error: The client may not trust the proxy's certificate.<pre>ProxyError('NetLibError(\"SSL handshake error: Error([(\\'SSL routines\\', \\'SSL23_GET_CLIENT_HELLO\\', \\'unknown protocol\\')],)\",)',)</pre></body>\n        </html>\nis there some configuration where I can configure that if there is an \"SSL handshake error\", then mitm should just let this traffic through without trying man in the middle and just pass the response back to the client machine (also without mitm). And later if a valid another session comes on port 443 which doesn't have \"SSL handshake error\" it should attempt man in the middle on it.\nIf this option is not available as a feature, can you please give me some guidelines on which part of the code should I modify to achieve this?\nThanks,\nSaad", "issue_status": "Closed", "issue_reporting_time": "2015-07-07T11:41:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1389": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/666", "issue_id": "#666", "issue_summary": "Check Share Functionality", "issue_description": "Member\nmhils commented on 5 Jul 2015\nChanged URL", "issue_status": "Closed", "issue_reporting_time": "2015-07-05T12:14:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1390": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/665", "issue_id": "#665", "issue_summary": "can't use by https", "issue_description": "hhhaiai commented on 3 Jul 2015\nhi:\nIhas a problem; show you:\nenvironment:window+android phone + cygwin\nnetwork: connection wifi by \"CA Certificate\"\nproblem: browser can connect to network by https ,alway warring the \"CA Certificate Abnormal\".\nthe app can't connect to network by https.\nso it is.", "issue_status": "Closed", "issue_reporting_time": "2015-07-03T10:47:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1391": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/664", "issue_id": "#664", "issue_summary": "mitmdump --ignore '^(?!google\\.com)(?!yahoo\\.com)' behaviour is wrong", "issue_description": "Gritch666 commented on 2 Jul 2015\nHello,\nFollowing the example in the documentation:\nIgnore everything but example.com and mitmproxy.org:\n--ignore '^(?!example.com)(?!mitmproxy.org)'\nto ignore https interception for all sites but google.com and yahoo.com.\nThen I use the command:\nmitmdump --ignore '^(?!google.com)(?!yahoo.com)'\n(For testing I use URL google.com/ncr to stick to .com, if it matters)\nBoth sites should NOT be ignored (use of ?! in the regular expression), but mitmdump log shows:\nSeems that this regular expression leads to ignore everything !?\nMany thanks", "issue_status": "Closed", "issue_reporting_time": "2015-07-02T12:52:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1392": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/663", "issue_id": "#663", "issue_summary": "--ignore '! www\\.google\\.com' does not work", "issue_description": "Gritch666 commented on 2 Jul 2015\nSetup:\nmitmproxy version: 0.12.1\nUbuntu 14.04.02 LTS\nProblem description:\nWith command:\nmitmproxy -I 'www.google.com'\n(should ignores www.google.com, right ?)\nFor www.google.com/ncr URL mitmproxy ignores https as expected\nFor www.yahoo.com URL mitmproxy intercept https as expected\nWith command:\nmitmproxy -I '!www.google.com'\n(should ignores everything but www.google.com, If this regex is correct ?)\nFor www.google.com/ncr URL mitmproxy intercept https as expected\nFor www.yahoo.com URL mitmproxy intercept https, NOT as expected\nWrong regex or bug ?", "issue_status": "Closed", "issue_reporting_time": "2015-07-02T07:38:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1393": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/662", "issue_id": "#662", "issue_summary": "New error in custom inline-script and provided example", "issue_description": "Contributor\nmame82 commented on 30 Jun 2015\nHey,\nI've got a proble with a custom inline-script, running mitmproxy-0.12.1 (not the provided 11.3) on kali-1.1.0, after an apt-get upgrade. So I don't know exactly what causes the problem, but it wasn't there before.\nThe custom script-code (stripped down to error parts)\nfrom libmproxy.protocol.http import decoded\nfrom bs4 import BeautifulSoup\n\ndef response(context, flow):\n    if flow.response.headers.get_first(\"content-type\", \"\").startswith(\"text/html\"):\n        with decoded(flow.response):  # automatically decode gzipped responses.\n            # context.log(\"Type \" + str(type(flow.response.content)))\n            html = BeautifulSoup(flow.response.content)\n            if html.head:\n                # here some header-modifying-code, which isn't relevant for raising this error\n                flow.response.content = str(html)\n                context.log(\"Manipulated response header.\")\nError-Dump of mitmproxy/mitmdump\nScript error:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.1-py2.7.egg/libmproxy/script.py\", line 123, in run\n    return (True, f(self.ctx, *args, **kwargs))\n  File \"/usr/share/doc/mitmproxy/examples/modify_response_header_error.py\", line 12, in response\n    context.log(\"Manipulated response header.\")\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.1-py2.7.egg/libmproxy/protocol/http.py\", line 78, in __exit__\n    self.o.encode(self.ce)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.1-py2.7.egg/libmproxy/protocol/http.py\", line 151, in encode\n    self.content = encoding.encode(e, self.content)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.1-py2.7.egg/libmproxy/encoding.py\", line 33, in encode\n    return encoding_map[e](content)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.1-py2.7.egg/libmproxy/encoding.py\", line 55, in encode_gzip\n    gf.write(content)\n  File \"/usr/lib/python2.7/gzip.py\", line 228, in write\n    if len(data) > 0:\nTypeError: object of type 'int' has no len()\nencoding.py shouldn't have changed since my last usage of the script (and it worked)\nFor testing I've changed the if html.head: to if html.head and html.body: to make sure there's content present before encoding again, but with no effect.\nComparing to the examples, I've found that iframe_injector.py is producing exactly the same error because it uses the decoded() method.\nScript error:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.1-py2.7.egg/libmproxy/script.py\", line 123, in run\n    return (True, f(self.ctx, *args, **kwargs))\n  File \"/usr/share/doc/mitmproxy/examples/iframe_injector.py\", line 27, in response\n    context.log(\"Iframe inserted.\")\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.1-py2.7.egg/libmproxy/protocol/http.py\", line 78, in __exit__\n    self.o.encode(self.ce)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.1-py2.7.egg/libmproxy/protocol/http.py\", line 151, in encode\n    self.content = encoding.encode(e, self.content)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.1-py2.7.egg/libmproxy/encoding.py\", line 33, in encode\n    return encoding_map[e](content)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.12.1-py2.7.egg/libmproxy/encoding.py\", line 55, in encode_gzip\n    gf.write(content)\n  File \"/usr/lib/python2.7/gzip.py\", line 228, in write\n    if len(data) > 0:\nTypeError: object of type 'int' has no len()", "issue_status": "Closed", "issue_reporting_time": "2015-06-30T14:43:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1394": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/660", "issue_id": "#660", "issue_summary": "SSL handshake error with libmproxy", "issue_description": "jeffgortmakerquovo commented on 29 Jun 2015\nHi,\nI've been using libmproxy in conjunction with Python's requests module, and I've run into a problem with certain websites.\nOne of these websites is https://www.401save.com. Trying to access it through libmproxy results in:\nSSL handshake error: The client may not trust the proxy's certificate.\nHere's a short script that demonstrates my problem:\nimport threading\nfrom libmproxy import controller, proxy\nfrom libmproxy.proxy.server import ProxyServer\nimport requests\n\nconfig = proxy.ProxyConfig(port=8888)\nserver = ProxyServer(config)\nmitm = controller.Master(server)\nt = threading.Thread(target=mitm.run)\nt.daemon = True\nt.start()\n\nrequests.get('https://www.401save.com', proxies={'https': 'http://localhost:8888'}, verify=False)\n\nmitm.shutdown()\nPrinting the server's logs, this is what comes up:\n127.0.0.1:58270: clientconnect\n127.0.0.1:58270: request\n  -> CONNECT www.401save.com:443 HTTP/1.0\n127.0.0.1:58270: Set new server address: www.401save.com:443\n127.0.0.1:58270: serverconnect\n  -> www.401save.com:443\n127.0.0.1:58270: Received CONNECT request to SSL port. Upgrading to SSL...\n127.0.0.1:58270: Establish SSL\n  -> with client\n  -> with server (sni: None)\n127.0.0.1:58270: SSL handshake error: The client may not trust the proxy's certificate.\n127.0.0.1:58270: ProxyError('NetLibError(\"SSL handshake error: SysCallError(-1, \\'Unexpected EOF\\')\",)',)\n127.0.0.1:58270: clientdisconnect\n127.0.0.1:58270: serverdisconnect\nCould this be related to #427?\nBest,\nJeff", "issue_status": "Closed", "issue_reporting_time": "2015-06-29T15:30:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1395": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/659", "issue_id": "#659", "issue_summary": "Content-Length header set to 0 in HEAD requests", "issue_description": "johanpoirier commented on 29 Jun 2015\nHi,\nI g-have a problem with HEAD requests : mitmproxy override Content-Length header and set it to 0.\nWithout mitmproxy:\nHTTP/1.1 200 OK\nAccept-Ranges: bytes\nCache-Control: max-age=86400\nConnection: keep-alive\nContent-Length: 1488324\nContent-Type: application/epub+zip\nDate: Mon, 29 Jun 2015 09:20:54 GMT\nETag: \"559103d3-16b5c4\"\nExpires: Tue, 30 Jun 2015 09:20:54 GMT\nLast-Modified: Mon, 29 Jun 2015 08:37:39 GMT\nServer: nginx\nWith mitmproxy:\nAccept-Ranges: bytes\nCache-Control: max-age=86400\nConnection: keep-alive\nContent-Length: 0\nContent-Type: application/epub+zip\nDate: Mon, 29 Jun 2015 09:48:54 GMT\nEtag: \"559103d3-16b5c4\"\nExpires: Tue, 30 Jun 2015 09:48:54 GMT\nLast-Modified: Mon, 29 Jun 2015 08:37:39 GMT\nServer: nginx\nI looked in the code and I saw that the Content-Length is computed from the length of the body of the request. Or HEAD requests have no body but can have a Content-Length > 0.\nI don't know how to fix the bug but if anyone has a solution, I would be happy.", "issue_status": "Closed", "issue_reporting_time": "2015-06-29T10:02:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1396": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/658", "issue_id": "#658", "issue_summary": "can't connect internet by https.", "issue_description": "hhhaiai commented on 29 Jun 2015\nandroid phone browser can work.\nthe app can't work.", "issue_status": "Closed", "issue_reporting_time": "2015-06-29T09:15:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1397": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/657", "issue_id": "#657", "issue_summary": "encoding error : input conversion failed due to input error", "issue_description": "byt3bl33d3r commented on 27 Jun 2015\nHi,\nI'm constantly getting the following error when using the the decoded context manager (from libmproxy.protocol.http) in combination with BeautifulSoup and libmproxy:\nencoding error : input conversion failed due to input error, bytes 0x8F 0x0B 0xFC 0x61\nI tried to figure out the source of this error but was unable to track it down, it sometimes impedes certain sites from displaying correctly (which would make sense since it's an encoding issue).\nWas just wondering if I'm doing something wrong, you can find an example of the code I'm using here https://github.com/byt3bl33d3r/MITMf/blob/mitmproxy/plugins/inject.py", "issue_status": "Closed", "issue_reporting_time": "2015-06-26T19:15:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1398": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/656", "issue_id": "#656", "issue_summary": "mitmproxy crashed in socks5 mode", "issue_description": "Sfinx commented on 26 Jun 2015\nHello,\nTrying to dump the HTTP headers with \"mitmproxy -p 1080 -b 127.0.0.1 --socks\" on ubuntu 15.04. Got :\n.......\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n127.0.0.1:36043: Traceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 88, in handle\n    self.client_conn)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/primitives.py\", line 115, in get_upstream_server\n    connect_request = socks.Message.from_file(client_conn.rfile)\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/socks.py\", line 102, in from_file\n    ver, msg, rsv, atyp = struct.unpack(\"!BBBB\", f.safe_read(4))\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 229, in safe_read\n    raise NetLibDisconnect()\nNetLibDisconnect\n.........\nThe other side is tun2socks (badvpn package) it is printing :\nNOTICE(BSocksClient): reply has unknown address type", "issue_status": "Closed", "issue_reporting_time": "2015-06-26T15:14:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1399": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/655", "issue_id": "#655", "issue_summary": "AttributeError: 'module' object has no attribute 'SSL_DEFAULT_METHOD'", "issue_description": "byt3bl33d3r commented on 26 Jun 2015\nHi guys,\nJust pulled down the latest changes from github and got this error when starting mitmdump\nTraceback (most recent call last):\n  File \"/home/byt3bl33d3r/.local/bin/mitmdump\", line 9, in <module>\n    load_entry_point('mitmproxy==0.12.2', 'console_scripts', 'mitmdump')()\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 558, in load_entry_point\n    return get_distribution(dist).load_entry_point(group, name)\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2682, in load_entry_point\n    return ep.load()\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2355, in load\n    return self.resolve()\n  File \"/usr/lib/python2.7/site-packages/pkg_resources/__init__.py\", line 2361, in resolve\n    module = __import__(self.module_name, fromlist=['__name__'], level=0)\n  File \"/home/byt3bl33d3r/.local/lib/python2.7/site-packages/mitmproxy-0.12.2-py2.7.egg/libmproxy/main.py\", line 7, in <module>\n    from . import version, cmdline\n  File \"/home/byt3bl33d3r/.local/lib/python2.7/site-packages/mitmproxy-0.12.2-py2.7.egg/libmproxy/cmdline.py\", line 6, in <module>\n    from . import filt, utils, version\n  File \"/home/byt3bl33d3r/.local/lib/python2.7/site-packages/mitmproxy-0.12.2-py2.7.egg/libmproxy/filt.py\", line 38, in <module>\n    from .protocol.http import decoded\n  File \"/home/byt3bl33d3r/.local/lib/python2.7/site-packages/mitmproxy-0.12.2-py2.7.egg/libmproxy/protocol/__init__.py\", line 1, in <module>\n    from .primitives import *\n  File \"/home/byt3bl33d3r/.local/lib/python2.7/site-packages/mitmproxy-0.12.2-py2.7.egg/libmproxy/protocol/primitives.py\", line 6, in <module>\n    from ..proxy.connection import ClientConnection, ServerConnection\n  File \"/home/byt3bl33d3r/.local/lib/python2.7/site-packages/mitmproxy-0.12.2-py2.7.egg/libmproxy/proxy/__init__.py\", line 2, in <module>\n    from .config import ProxyConfig, process_proxy_options\n  File \"/home/byt3bl33d3r/.local/lib/python2.7/site-packages/mitmproxy-0.12.2-py2.7.egg/libmproxy/proxy/config.py\", line 31, in <module>\n    class ProxyConfig:\n  File \"/home/byt3bl33d3r/.local/lib/python2.7/site-packages/mitmproxy-0.12.2-py2.7.egg/libmproxy/proxy/config.py\", line 52, in ProxyConfig\n    ssl_version_client=tcp.SSL_DEFAULT_METHOD,\nAttributeError: 'module' object has no attribute 'SSL_DEFAULT_METHOD'", "issue_status": "Closed", "issue_reporting_time": "2015-06-26T13:19:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1400": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/653", "issue_id": "#653", "issue_summary": "@concurrent decorator broken", "issue_description": "Calpicow commented on 26 Jun 2015\nUsing the below command and code to intercept requests. I would expect all requests to return \"Test\", but it will occasionally bypass to the reverse proxy target. Using 0.12.1.\nmitmdump -R http://localhost -p 8080 -s leak.py\nfrom libmproxy.protocol.http import HTTPResponse\nfrom libmproxy.script import concurrent\nfrom netlib.odict import ODictCaseless\n\n\n@concurrent\ndef request(context, flow):\n    resp = HTTPResponse([1, 1], 200, \"OK\", ODictCaseless([[\"Content-Type\", \"text/html\"]]), \"Test\")\n    flow.reply(resp)", "issue_status": "Closed", "issue_reporting_time": "2015-06-25T23:47:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1401": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/651", "issue_id": "#651", "issue_summary": "problem with port in host", "issue_description": "ghost commented on 25 Jun 2015\nRFC 7230 (HTTP 1.1) declares in 5.4 Host that it is possible to add the port to the Host header field. For example Host = this.is.some.example.host:8080. This is especially true if not the default port is used.\nThis is not properly handled by mitmdump. In my first, pre 0.12.1, tests with HTTPS mitmdump generates a bad gateway as response. In my current test with HTTP and port 8080 it seems to work but the output of mitmdump is still incorrect. It uses this.is.some.example.host:8080:8080 in its output.\nI am not sure if this is only a display error or if mitmdump internally use the duplicated port and that the old HTTPS server could not handle it but the current HTTP could.", "issue_status": "Closed", "issue_reporting_time": "2015-06-24T20:31:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1402": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/650", "issue_id": "#650", "issue_summary": "datetime/time in output of mitmdump", "issue_description": "ghost commented on 25 Jun 2015\nI am saving the output of mitmdump in a file as a log file. If an error occurs it could help finding it. But after some hours it is a problem to know which line is of interest. Thus I asked for a way to optionally add a time or date and time at the beginning of every output line.\nUp to now I modify add_event of dump.py but this only modifies some of the line, which is still better than nothing.", "issue_status": "Closed", "issue_reporting_time": "2015-06-24T20:17:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1403": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/649", "issue_id": "#649", "issue_summary": "crash on 32 bit systems", "issue_description": "ghost commented on 25 Jun 2015\nThis problem was viewed in version 0.11.1, I think. I am currently not able to test it with the current version but the corresponding source code did not change in 0.12.1 thus I think it is still a problem.\nI am using mitmdump as transparent proxy. After changing the system mitmdump was running on, it crashes after some time with\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 813, in _refresh_cookie\n    i[\"expires\"] = formatdate(d)\n  File \"/usr/lib/python2.7/email/utils.py\", line 161, in formatdate\n    now = time.gmtime(timeval)\nValueError: timestamp out of range for platform time_t\nAfter some time I realised that the problem occurs after the change from 64 bit to 32 bit and disappeared after another change to 64 bit again.\nLooking at libmproxy/protocol/http.py:810 or in 0.12.1 at libmproxy/protocol/http.py:842\n            d = parsedate_tz(i[\"expires\"])\n                if d:\n                    d = mktime_tz(d) + delta\n                    i[\"expires\"] = formatdate(d)\nThe documentation for email.utils.formatdate mentioned for the first parameter Optional timeval if given is a floating point time value as accepted by time.gmtime() and time.localtime(), otherwise the current time is used.\nInternally time.gmtime is used. The documentation for time mentioned The functions in this module do not handle dates and times before the epoch or far in the future. The cut-off point in the future is determined by the C library; for Unix, it is typically in 2038.\nUnder 32 bit Ubuntu python crashes with time.gmtime(sys.maxint+1) but with time.gmtime(sys.maxint) you will get 2038-01-19 and some hours.\nThus under 32 bit this code will only work with expiration dates previous to 2038-01-19. But unfortunately there are site setting cookies with expiration dates far in the future. Different advertiser set it 30 years in future thus in 2045. But I also see dates after year 2080.", "issue_status": "Closed", "issue_reporting_time": "2015-06-24T20:08:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1404": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/648", "issue_id": "#648", "issue_summary": "Cache requests/response.", "issue_description": "gajus commented on 25 Jun 2015\nI use mitmproxy a lot for developing scripts that scrap external content. I often find that it takes a long time to test script because it needs to repeat all the HTTP requests. It would be nice if it was able to select HTTP requests that mitmproxy would cache and use cached version to reply to the user.\nThe most common use case scenario is GET requests because those are supposed to be immutable.\nI have built a node web-proxy script to do this for me, using it as a forward proxy together with mitmproxy, though it would be nice if mitmproxy supported this natively.", "issue_status": "Closed", "issue_reporting_time": "2015-06-24T19:09:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1405": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/647", "issue_id": "#647", "issue_summary": "Can no longer highlight text to copy/paste", "issue_description": "giantpune commented on 24 Jun 2015\nI've just updated to mitmproxy 0.12.1 on Linux using KDE desktop environment (kubuntu 14.04). On previous versions of mitmproxy, I was able to use my mouse to select text and then copy/paste it into other programs. Now that mitmproxy responds to mouse clicks, I am not able to select text.\nMost programs wait for a mouse press+release in the same spot before considering it a click. Mitmproxy just sees the press and doesnt wait for the release, so I cannot click my mouse and drag it to select text.\nI see that there is a message \"hold down alt or ctrl to select text\" but this does not work in my terminal. Holding alt while clicking and dragging makes the whole terminal window drag around the desktop. Holding ctrl has no affect, and holding both of them does not help.\nIs there an option to disable the mouse in mitmproxy and have it work like it did in previous versions?\n1", "issue_status": "Closed", "issue_reporting_time": "2015-06-24T17:14:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1406": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/646", "issue_id": "#646", "issue_summary": "Probabilistic TLS pass-through", "issue_description": "Contributor\nFuzion24 commented on 24 Jun 2015\nhttps://github.com/google/nogotofail/blob/dev/docs/design.md#why-attack-probabilistically\nIt would be neat to have a few different modes for this:\nRandomly pass through TLS connections\nAfter TLS failure, add it to a pass-through / white list\nA set time period where everything is passed through, then everything is intercepted", "issue_status": "Closed", "issue_reporting_time": "2015-06-24T15:04:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1407": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/644", "issue_id": "#644", "issue_summary": "Upstream proxy authentication", "issue_description": "Member\ncortesi commented on 24 Jun 2015\nAdd a command-line flag to specify the upstream proxy authentication credentials, which are then set on both HTTP and CONNECT requests (but not HTTPS requests).\nSee discussion in #643 for the use case.", "issue_status": "Closed", "issue_reporting_time": "2015-06-23T22:14:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1408": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/643", "issue_id": "#643", "issue_summary": "https websites don't load", "issue_description": "whatsdis commented on 23 Jun 2015\nI went to mitm.it and downloaded and added the CA for it on chrome.\nwhen I go to https://github.com, the padlock is green but the website is blank.\nI am getting back 403.\nUpon inspection, it's having some trouble with Proxy-Authenticate.\nI already provide a setHeader argument for Proxy Authroization.\nplease help.", "issue_status": "Closed", "issue_reporting_time": "2015-06-22T21:27:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1409": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/642", "issue_id": "#642", "issue_summary": "Better transparent proxying support", "issue_description": "kuza55 commented on 23 Jun 2015\nI spent a little bit of time looking at how redsocks supports transparent proxying of all TCP to a SOCKS proxy, and the code is really quite straight forward: https://github.com/darkk/redsocks/blob/2e3f648809e27cc19cb7a8702f19b553a7ef9a81/base.c#L102\nI was hoping this could be integrated into mitmproxy to allow better transparent proxying.\nI'm looking to use mitmproxy to see/alter the data that malware running inside a VM gets (with the MITM script being different for each of my 25 VMs) and at the moment the only real way I can do this is to setup 25 separate ip tables, run 25 instances of redsocks and 25 instances of mitmproxy.\nThis is all doable, but I would much rather configure 1 iptable, run 1 instance of mitmproxy and have a script that alters its behaviour based on the source IP.\nI'm happy to write the patch myself is anyone has any pointers on how to integrate it with the existing codebase.", "issue_status": "Closed", "issue_reporting_time": "2015-06-22T21:13:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1410": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/641", "issue_id": "#641", "issue_summary": "502 wrongly returned from change_upstream_proxy", "issue_description": "bugi commented on 23 Jun 2015\nSteps to reproduce the problem:\nUse something like \"mitmproxy -U http://localhost:8082/ -s change_upstream_proxy.py\" to point mitmproxy to a non-existing upstream proxy.\nAttempt to use that mitmproxy to connect to the alternate, real upstream you specified in change_upstream_proxy.py.\nNotice that fails with 502.\nTry again with a -U argument of a different, but real upstream proxy.\nNow it works.\nWhat is the expected behavior?\nIt should connect to the alternate upstream in change_upstream_proxy.py instead of returning 502\nbecause of the deadness of the proxy specified with -U.\nWhat went wrong?\nFrom my new-to-mitmproxy perspective it looks like an optimization that usually makes sense, except in the case where one wants to change proxies.\nAny other comments?\nFor context, my eventual goal is an evil smart proxy load balancer. The smarts would include gathering metrics, for example of what proxies get blocked by whom and when, then store that for offline analysis. Then later perhaps use that data to make a smarter proxy load balancer.\nAs I'm new to mitmproxy, any guidance would be appreciated. Especially if somebody has already done this, yet eluded my google-fu.", "issue_status": "Closed", "issue_reporting_time": "2015-06-22T19:11:29Z", "fixed_by": "#741", "pull_request_summary": "Proxy Refactor", "pull_request_description": "Member\nmhils commented on 27 Aug 2015\nThis PR introduces a clear separation of layers in the proxy/protocol core and thereby adds support for a variety of features:\nHTTP2 support\nClear separation of protocol layers (e.g. separate TLS handling for ConnectionHandler)\nSmart protocol guessing: We peek into the traffic to determine the actual protocol. In the worst case, we fall back to raw TCP passthrough.\nLazy initialization of server connections (#722)\nRemove \"double-connect\" workaround for SNI by manually reading the handshake.\nOpen for discussion:\nDo we want to enable smart protocol guessing initially (while there is not UI in mitmproxy yet) or do we wait until we have a proper UI for this?\nSettled for the second variant.\nSpoof mode and SSL spoof mode have been removed. We should check if this works best as an inline script or as a stand-alone proxy mode. I personally want to keep the number of modes low, but I'm open for discussion here.\nTODO:\nFix HTTP Replay - probably just HTTP1 for now.\nProperly process configuration options.\nAdd --ignore/--tcp support / clean up next_layer\nRefactor all code that uses flow.live to use the new interfaces.\nFix Streaming\nCheck inline script hooks.\nFix change_upstream_proxy example.\nFix dns_spoofing example.\n1dd09a5 is a bit ugly - is there a better way? (no)\nFinal TODOs:\nRemove old code\nSeparate proxy modes from layers (see #742)\nrename protocol2 to protocol and remove old files\n(This PR is a follow up of #694 .)\nfixes #745\nfixes #722\nfixes #717\nfixes #697\nfixes #681\nfixes #672\nfixes #641\nrefs #483\nrefs #383\nrefs #743", "pull_request_status": "Merged", "issue_fixed_time": "2015-09-01T23:16:48Z", "files_changed": [["6", ".coveragerc"], ["17", "doc-src/features/reverseproxy.html"], ["9", "doc-src/howmitmproxy.html"], ["14", "doc-src/modes.html"], ["47", "examples/change_upstream_proxy.py"], ["47", "examples/dns_spoofing.py"], ["37", "examples/ignore_websocket.py"], ["13", "examples/stub.py"], ["248", "libmproxy/cmdline.py"], ["2", "libmproxy/console/common.py"], ["2", "libmproxy/console/flowview.py"], ["11", "libmproxy/console/statusbar.py"], ["4", "libmproxy/contrib/README"], ["5", "libmproxy/contrib/tls/__init__.py"], ["213", "libmproxy/contrib/tls/_constructs.py"], ["26", "libmproxy/contrib/tls/utils.py"], ["34", "libmproxy/exceptions.py"], ["6", "libmproxy/filt.py"], ["37", "libmproxy/flow.py"], ["6", "libmproxy/main.py"], ["16", "libmproxy/models/__init__.py"], ["46", "libmproxy/proxy/connection.py", "\u2192", "libmproxy/models/connections.py"], ["166", "libmproxy/models/flow.py"], ["303", "libmproxy/protocol/http_wrappers.py", "\u2192", "libmproxy/models/http.py"], ["13", "libmproxy/protocol/__init__.py"], ["179", "libmproxy/protocol/base.py"], ["20", "libmproxy/protocol/handle.py"], ["1,179", "libmproxy/protocol/http.py"], ["96", "libmproxy/protocol/http_replay.py"], ["294", "libmproxy/protocol/primitives.py"], ["66", "libmproxy/protocol/rawtcp.py"], ["97", "libmproxy/protocol/tcp.py"], ["298", "libmproxy/protocol/tls.py"], ["11", "libmproxy/proxy/__init__.py"], ["221", "libmproxy/proxy/config.py"], ["12", "libmproxy/proxy/modes/__init__.py"], ["26", "libmproxy/proxy/modes/http_proxy.py"], ["17", "libmproxy/proxy/modes/reverse_proxy.py"], ["60", "libmproxy/proxy/modes/socks_proxy.py"], ["24", "libmproxy/proxy/modes/transparent_proxy.py"], ["178", "libmproxy/proxy/primitives.py"]]}, "1411": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/639", "issue_id": "#639", "issue_summary": "UTF-8 in HTTPResponse content", "issue_description": "Calpicow commented on 18 Jun 2015\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n127.0.0.1:58821: Traceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/server.py\", line 125, in handle\n    **conn_kwargs).handle_messages()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 1033, in handle_messages\n    while self.handle_flow():\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 1140, in handle_flow\n    self.send_response_to_client(flow)\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 1388, in send_response_to_client\n    self.c.client_conn.send(flow.response.assemble())\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/connection.py\", line 61, in send\n    self.wfile.write(message)\n  File \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 156, in write\n    r = self.o.write(v)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/socket.py\", line 316, in write\n    data = str(data) # XXX Should really reject non-string non-buffers\nUnicodeEncodeError: 'ascii' codec can't encode character u'\\xd7' in position 16368: ordinal not in range(128)", "issue_status": "Closed", "issue_reporting_time": "2015-06-18T18:16:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1412": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/637", "issue_id": "#637", "issue_summary": "Using flow.reply in responseheaders", "issue_description": "Calpicow commented on 18 Jun 2015\nI'm trying to send a canned response in the responseheaders function, as I'm using the response headers to decide whether I want to continue.\nI'm getting this exception:\n127.0.0.1:57156: Traceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/server.py\", line 125, in handle\n    **conn_kwargs).handle_messages()\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 1033, in handle_messages\n    while self.handle_flow():\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 1127, in handle_flow\n    self.get_response_from_server(flow)\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 1079, in get_response_from_server\n    if flow.response.stream:\nAttributeError: 'HTTPResponse' object has no attribute 'response'\nAnd the code I'm using:\ndef responseheaders(context, flow):\n    res = HTTPResponse([1, 1], 200, \"OK\", ODictCaseless(), 'Test')\n    flow.reply(res)", "issue_status": "Closed", "issue_reporting_time": "2015-06-17T22:31:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1413": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/636", "issue_id": "#636", "issue_summary": "mitmproxy can't launch", "issue_description": "xuixian commented on 17 Jun 2015\ninstall on the raspberry pi2 ,followed by the:\nhttp://jeffq.com/blog/setting-up-a-man-in-the-middle-device-with-raspberry-pi-part-1/\nos: 2015-05-05-raspbian-wheezy\nLinux raspberrypi 3.18.11-v7+ #781 SMP PREEMPT Tue Apr 21 18:07:59 BST 2015 armv7l GNU/Linux\nIs there something wrong ?\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 11, in\nsys.exit(mitmproxy())\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/main.py\", line 40, in mitmproxy\nfrom . import console\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/init.py\", line 18, in\nfrom . import flowlist, flowview, help, window, signals, options\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowlist.py\", line 4, in\nfrom . import common, signals\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/common.py\", line 115, in\nif urwid.util.detected_encoding:\nAttributeError: 'module' object has no attribute 'detected_encoding'", "issue_status": "Closed", "issue_reporting_time": "2015-06-17T10:54:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1414": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/635", "issue_id": "#635", "issue_summary": "Improve Server Replay Docs", "issue_description": "Member\nmhils commented on 17 Jun 2015\nLooking at mitmdump --help, there are a lot of server replay features. However, the documentation on server replay is very sparse currently. We should at least mention features like --kill.", "issue_status": "Closed", "issue_reporting_time": "2015-06-16T23:24:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1415": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/634", "issue_id": "#634", "issue_summary": "Any Request or Response Time View", "issue_description": "wulie88 commented on 16 Jun 2015\nAny option for detail timing, such as request sent, watting, content download?", "issue_status": "Closed", "issue_reporting_time": "2015-06-16T15:58:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1416": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/633", "issue_id": "#633", "issue_summary": "mitm proxy won't install", "issue_description": "profhase commented on 16 Jun 2015\nInstalling mitmproxy with pip install mitmproxy I am getting the followingerror (pip 7.0.3, ubuntu 12.04, python 2.7):\n  File \"/home/me/virtualenvs/myvenv/build/mitmproxy/setup.py\", line 19\n\n    \" netlib>=%s, <%s\" % (version.MINORVERSION, version.NEXT_MINORVERSION),\n\n                                                                     ^\n\n    SyntaxError: invalid syntax", "issue_status": "Closed", "issue_reporting_time": "2015-06-16T09:47:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1417": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/632", "issue_id": "#632", "issue_summary": "Mitmdump cannot take keyboard input.", "issue_description": "TularJahaj commented on 15 Jun 2015\nI have installed mitmproxy latest version in windows 7 with command pip install mitmproxy.my pip and setuptools all are up to date.python version is 2.7.10.\nbut when i run mitmdump from cmd it successfully can trace all network data.but i cannot intercept on it because no keyboard input it takes after running.even i cannot stop it with -q command.\nmy installation process has some error shown bellow:\nCollecting mitmproxy\nRetrying (Retry(total=4, connect=None, read=None, redirect=None)) after connec\ntion broken by 'ProtocolError('Connection aborted.', gaierror(11004, 'getaddrinf\no failed'))': /simple/mitmproxy/\nUsing cached mitmproxy-0.12.1.tar.gz\nCollecting pyperclip>=1.5.8 (from mitmproxy)\nUsing cached pyperclip-1.5.11.zip\nRequirement already satisfied (use --upgrade to upgrade): pyasn1>0.1.2 in c:\\pyt\nhon27\\lib\\site-packages (from mitmproxy)\nCollecting tornado>=4.0.2 (from mitmproxy)\nUsing cached tornado-4.2.tar.gz\nCollecting netlib<0.13,>=0.12 (from mitmproxy)\nUsing cached netlib-0.12.1.tar.gz\nCollecting blinker>=1.3 (from mitmproxy)\nDownloading blinker-1.3.tar.gz (91kB)\n100% |################################| 94kB 61kB/s\nCollecting configargparse>=0.9.3 (from mitmproxy)\nDownloading ConfigArgParse-0.9.3.tar.gz\nCollecting pydivert>=0.0.7 (from mitmproxy)\nDownloading pydivert-0.0.7.zip\nCollecting backports.ssl-match-hostname (from tornado>=4.0.2->mitmproxy)\nDownloading backports.ssl_match_hostname-3.4.0.2.tar.gz\nCollecting certifi (from tornado>=4.0.2->mitmproxy)\nDownloading certifi-2015.04.28-py2.py3-none-any.whl (373kB)\n100% |################################| 376kB 70kB/s\nRequirement already satisfied (use --upgrade to upgrade): cffi in c:\\python27\\li\nb\\site-packages (from netlib<0.13,>=0.12->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pyOpenSSL>=0.15.1 in c\n:\\python27\\lib\\site-packages (from netlib<0.13,>=0.12->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): cryptography>=0.9 in c\n:\\python27\\lib\\site-packages (from netlib<0.13,>=0.12->mitmproxy)\nCollecting passlib>=1.6.2 (from netlib<0.13,>=0.12->mitmproxy)\nDownloading passlib-1.6.2.tar.gz (408kB)\n100% |################################| 409kB 58kB/s\nCollecting hpack>=1.0.1 (from netlib<0.13,>=0.12->mitmproxy)\nDownloading hpack-1.0.1-py2.py3-none-any.whl\nRequirement already satisfied (use --upgrade to upgrade): pycparser in c:\\python\n27\\lib\\site-packages (from cffi->netlib<0.13,>=0.12->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): six>=1.5.2 in c:\\pytho\nn27\\lib\\site-packages (from pyOpenSSL>=0.15.1->netlib<0.13,>=0.12->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): setuptools in c:\\pytho\nn27\\lib\\site-packages (from cryptography>=0.9->netlib<0.13,>=0.12->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): enum34 in c:\\python27\nlib\\site-packages (from cryptography>=0.9->netlib<0.13,>=0.12->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): idna in c:\\python27\\li\nb\\site-packages (from cryptography>=0.9->netlib<0.13,>=0.12->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): ipaddress in c:\\python\n27\\lib\\site-packages (from cryptography>=0.9->netlib<0.13,>=0.12->mitmproxy)\nBuilding wheels for collected packages: mitmproxy, pyperclip, tornado, netlib, b\nlinker, configargparse, pydivert, backports.ssl-match-hostname, passlib\nRunning setup.py bdist_wheel for mitmproxy\nStored in directory: C:\\Users\\TularJahaj\\AppData\\Local\\pip\\Cache\\wheels\\3d\\e0\n00\\9ce27bb0fd7ef8af39912ea95ea42ead5c7ab8dcce5e9a7f10\nRunning setup.py bdist_wheel for pyperclip\nStored in directory: C:\\Users\\TularJahaj\\AppData\\Local\\pip\\Cache\\wheels\\61\\3e\nf8\\f906ed5088f3a679725644a9b8860e42bac38ee7f607ae2dc3\nRunning setup.py bdist_wheel for tornado\nStored in directory: C:\\Users\\TularJahaj\\AppData\\Local\\pip\\Cache\\wheels\\bd\\20\nc8\\6bec1ed7ad88e2fb58333301e8d1f05610231441dcf4740cb5\nRunning setup.py bdist_wheel for netlib\nStored in directory: C:\\Users\\TularJahaj\\AppData\\Local\\pip\\Cache\\wheels\\31\\43\n6d\\d8965bf85110394a2536b6e11439d962f271f3fc4afdf2ab91\nRunning setup.py bdist_wheel for blinker\nStored in directory: C:\\Users\\TularJahaj\\AppData\\Local\\pip\\Cache\\wheels\\50\\80\n79\\716f1148d4a8f868755b05259988deccce37edbfb195ded724\nRunning setup.py bdist_wheel for configargparse\nStored in directory: C:\\Users\\TularJahaj\\AppData\\Local\\pip\\Cache\\wheels\\45\\0e\n36\\f2faf12912c3968ea911d45349b2271a31ca8f70f7865a0dbf\nRunning setup.py bdist_wheel for pydivert\nComplete output from command C:\\Python27\\python.exe -c \"import setuptools;fi\nle='c:\\users\\tularj1\\appdata\\local\\temp\\pip-build-bltjn\\pydivert\\set\nup.py';exec(compile(open(file_).read().replace('\\r\\n', '\\n'), file, 'exec\n'))\" bdist_wheel -d c:\\users\\tularj1\\appdata\\local\\temp\\tmp9by11mpip-wheel-:\nrunning bdist_wheel\nrunning build\nrunning build_py\ncreating build\ncreating build\\lib\ncreating build\\lib\\pydivert\ncopying pydivert\\decorators.py -> build\\lib\\pydivert\ncopying pydivert\\enum.py -> build\\lib\\pydivert\ncopying pydivert\\exception.py -> build\\lib\\pydivert\ncopying pydivert\\install.py -> build\\lib\\pydivert\ncopying pydivert\\models.py -> build\\lib\\pydivert\ncopying pydivert\\windivert.py -> build\\lib\\pydivert\ncopying pydivert\\winutils.py -> build\\lib\\pydivert\ncopying pydivert__init.py -> build\\lib\\pydivert\ncreating build\\lib\\pydivert\\tests\ncopying pydivert\\tests\\test_installer.py -> build\\lib\\pydivert\\tests\ncopying pydivert\\tests\\test_models.py -> build\\lib\\pydivert\\tests\ncopying pydivert\\tests\\test_windivert.py -> build\\lib\\pydivert\\tests\ncopying pydivert\\tests\\test_winutils.py -> build\\lib\\pydivert\\tests\ncopying pydivert\\tests__init__.py -> build\\lib\\pydivert\\tests\ninstalling to build\\bdist.win32\\wheel\nrunning install\nrunning install_lib\ncreating build\\bdist.win32\ncreating build\\bdist.win32\\wheel\ncreating build\\bdist.win32\\wheel\\pydivert\ncopying build\\lib\\pydivert\\decorators.py -> build\\bdist.win32\\wheel\\pydivert-0\n.0.7.data..\\pydivert\ncopying build\\lib\\pydivert\\enum.py -> build\\bdist.win32\\wheel\\pydivert-0.0.7.d\nata..\\pydivert\ncopying build\\lib\\pydivert\\exception.py -> build\\bdist.win32\\wheel\\pydivert-0.\n0.7.data..\\pydivert\ncopying build\\lib\\pydivert\\install.py -> build\\bdist.win32\\wheel\\pydivert-0.0.\n7.data..\\pydivert\ncopying build\\lib\\pydivert\\models.py -> build\\bdist.win32\\wheel\\pydivert-0.0.7\n.data..\\pydivert\ncreating build\\bdist.win32\\wheel\\pydivert\\tests\ncopying build\\lib\\pydivert\\tests\\test_installer.py -> build\\bdist.win32\\wheel\npydivert-0.0.7.data..\\pydivert\\tests\ncopying build\\lib\\pydivert\\tests\\test_models.py -> build\\bdist.win32\\wheel\\pyd\nivert-0.0.7.data..\\pydivert\\tests\ncopying build\\lib\\pydivert\\tests\\test_windivert.py -> build\\bdist.win32\\wheel\npydivert-0.0.7.data..\\pydivert\\tests\ncopying build\\lib\\pydivert\\tests\\test_winutils.py -> build\\bdist.win32\\wheel\\p\nydivert-0.0.7.data..\\pydivert\\tests\ncopying build\\lib\\pydivert\\tests__init__.py -> build\\bdist.win32\\wheel\\pydive\nrt-0.0.7.data..\\pydivert\\tests\ncopying build\\lib\\pydivert\\windivert.py -> build\\bdist.win32\\wheel\\pydivert-0.\n0.7.data..\\pydivert\ncopying build\\lib\\pydivert\\winutils.py -> build\\bdist.win32\\wheel\\pydivert-0.0\n.7.data..\\pydivert\ncopying build\\lib\\pydivert__init__.py -> build\\bdist.win32\\wheel\\pydivert-0.0\n.7.data..\\pydivert\nrunning install_egg_info\nrunning egg_info\nwriting requirements to pydivert.egg-info\\requires.txt\nwriting pydivert.egg-info\\PKG-INFO\nwriting top-level names to pydivert.egg-info\\top_level.txt\nwriting dependency_links to pydivert.egg-info\\dependency_links.txt\nwarning: manifest_maker: standard file '-c' not found\nreading manifest file 'pydivert.egg-info\\SOURCES.txt'\nwriting manifest file 'pydivert.egg-info\\SOURCES.txt'\nCopying pydivert.egg-info to build\\bdist.win32\\wheel\\pydivert-0.0.7.data..\\py\ndivert-0.0.7-py2.7.egg-info\nrunning install_scripts\nRunning WinDivert install task\nDownloading https://github.com/basil00/Divert/releases/download/v1.1.7/WinDive\nrt-1.1.7-WDDK.zip...\nUncompressing WinDivert-1.1.7-WDDK.zip...\nCopying build\\bdist.win32\\wheel\\pydivert-0.0.7.data..\\WinDivert-1.1.7-WDDK\\x8\n6\\WinDivert.dll to C:\\Python27\\DLLs\nerror: [Errno 2] No such file or directory: 'build\\bdist.win32\\wheel\\pydive\nrt-0.0.7.data..\\WinDivert-1.1.7-WDDK\\x86\\WinDivert.dll'\nFailed building wheel for pydivert\nRunning setup.py bdist_wheel for backports.ssl-match-hostname\nStored in directory: C:\\Users\\TularJahaj\\AppData\\Local\\pip\\Cache\\wheels\\81\\3d\n36\\f3c726a42caed585046d710e0e450bda1075c61c1c43443831\nRunning setup.py bdist_wheel for passlib\nStored in directory: C:\\Users\\TularJahaj\\AppData\\Local\\pip\\Cache\\wheels\\5f\\53\nde\\eec3f96594a49109cff49df308f6549486274df2d272c07754\nSuccessfully built mitmproxy pyperclip tornado netlib blinker configargparse bac\nkports.ssl-match-hostname passlib\nFailed to build pydivert\nInstalling collected packages: pyperclip, backports.ssl-match-hostname, certifi,\ntornado, passlib, hpack, netlib, blinker, configargparse, pydivert, mitmproxy\nRunning setup.py install for pydivert\nSuccessfully installed backports.ssl-match-hostname-3.4.0.2 blinker-1.3 certifi-\n2015.4.28 configargparse-0.9.3 hpack-1.0.1 mitmproxy-0.12.1 netlib-0.12.1 passli\nb-1.6.2 pydivert-0.0.7 pyperclip-1.5.11 tornado-4.2", "issue_status": "Closed", "issue_reporting_time": "2015-06-15T09:15:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1418": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/631", "issue_id": "#631", "issue_summary": "g/G keyboard shortcuts don't match less", "issue_description": "Member\ncortesi commented on 15 Jun 2015\nquoting @tacahiroy:\nI've noticed shortcuts 'g' and 'G' are backward as less behaviour. Is there any reasons for this?\nI'm bit confused whenever I use these keys.\nQuoting from man 1 less:\ng or < or ESC-<\n        Go to line N in the file, default 1 (beginning of file).  (Warning: this may be slow if N is large.)\n\nG or > or ESC->\n        Go  to  line N in the file, default the end of the file.  (Warning: this may be slow if N is large, or if N is not speci-fied and standard input, rather than a file, is being read.)", "issue_status": "Closed", "issue_reporting_time": "2015-06-14T23:07:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1419": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/630", "issue_id": "#630", "issue_summary": "Clarify procedure for setting a local transparent proxy", "issue_description": "justincy commented on 13 Jun 2015\nThe docs are pretty good but they don't point out that setting up a transparent proxy on the same machine where the traffic originates is a bit different as noted here. More specifically, the iptables commands are different.\nsudo iptables -t nat -A OUTPUT -p tcp -m owner ! --uid-owner root --dport 443 -j REDIRECT --to-port 8080\nsudo iptables -t nat -A OUTPUT -p tcp -m owner ! --uid-owner root --dport 80 -j REDIRECT --to-port 8080\nYou have to run mitmproxy as a different user than the traffic you're trying to capture, otherwise that won't work. If you didn't have an expection for mitmproxy traffic then you'd end up with a loop (I ran out of open file descriptors when I did that). I'm not familiar enough with iptables to know whether there's any other match expression that could be used other than the process owner.\n6", "issue_status": "Closed", "issue_reporting_time": "2015-06-12T23:03:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1420": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/629", "issue_id": "#629", "issue_summary": "Installation error in Windows 8", "issue_description": "sajid-dsi commented on 12 Jun 2015\nHi,\nI'm trying to install mitmproxy. My OS is Windows 8, 64 bit. Python is 2.7.10 for 64 bit.\nI'm running the command prompt in 'Administrative' mode, granting permission to Administrator for all Files and Folders.My command and the generated error logs are as follow:\npip install mitmproxy\n--skipping success logs----following are error logs---\n    Installed c:\\users\\humaira\\appdata\\local\\temp\\easy_install-sd_aqy\\cryptograp\nhy-0.9.1\\.eggs\\pycparser-2.14-py2.7.egg\n    no previously-included directories found matching 'docs\\_build'\n    warning: no previously-included files matching '*' found under directory 've\nctors'\n    _Cryptography_cffi_a269d620xd5c405b7.c\n    src\\cryptography\\hazmat\\bindings\\__pycache__\\_Cryptography_cffi_a269d620xd5c\n405b7.c(217) : fatal error C1083: Cannot open include file: 'openssl/aes.h': No\nsuch file or directory\n    Traceback (most recent call last):\n      File \"<string>\", line 20, in <module>\n      File \"c:\\users\\humaira\\appdata\\local\\temp\\pip-build-n4tzb8\\netlib\\setup.py\n\", line 87, in <module>\n        \"install\": CFFIInstall,\n      File \"C:\\Python27\\lib\\distutils\\core.py\", line 111, in setup\n        _setup_distribution = dist = klass(attrs)\n      File \"C:\\Python27\\lib\\site-packages\\setuptools\\dist.py\", line 268, in __in\nit__\n        self.fetch_build_eggs(attrs['setup_requires'])\n      File \"C:\\Python27\\lib\\site-packages\\setuptools\\dist.py\", line 313, in fetc\nh_build_eggs\n        replace_conflicting=True,\n      File \"C:\\Python27\\lib\\site-packages\\pkg_resources\\__init__.py\", line 830,\nin resolve\n        dist = best[req.key] = env.best_match(req, ws, installer)\n      File \"C:\\Python27\\lib\\site-packages\\pkg_resources\\__init__.py\", line 1075,\n in best_match\n        return self.obtain(req, installer)\n      File \"C:\\Python27\\lib\\site-packages\\pkg_resources\\__init__.py\", line 1087,\n in obtain\n        return installer(requirement)\n      File \"C:\\Python27\\lib\\site-packages\\setuptools\\dist.py\", line 380, in fetc\nh_build_egg\n        return cmd.easy_install(req)\n      File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\easy_install.py\", l\nine 633, in easy_install\n        rmtree(tmpdir)\n      File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\easy_install.py\", l\nine 2197, in rmtree\n        rmtree(fullname, ignore_errors, onerror)\n      File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\easy_install.py\", l\nine 2197, in rmtree\n        rmtree(fullname, ignore_errors, onerror)\n      File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\easy_install.py\", l\nine 2197, in rmtree\n        rmtree(fullname, ignore_errors, onerror)\n      File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\easy_install.py\", l\nine 2202, in rmtree\n        onerror(os.remove, fullname, sys.exc_info())\n      File \"C:\\Python27\\lib\\site-packages\\setuptools\\command\\easy_install.py\", l\nine 1609, in auto_chmod\n        return func(arg)\n    WindowsError: [Error 5] Access is denied: 'c:\\\\users\\\\humaira\\\\appdata\\\\loca\nl\\\\temp\\\\easy_install-sd_aqy\\\\cryptography-0.9.1\\\\.eggs\\\\cffi-1.1.2-py2.7-win-am\nd64.egg\\\\_cffi_backend.pyd'\n\n    ----------------------------------------\nCommand \"python setup.py egg_info\" failed with error code 1 in c:\\users\\humaira\\\nappdata\\local\\temp\\pip-build-n4tzb8\\netlib\nI've granted permission to temp folder, but still it's giving the error. To me, it seems like the error starts from here:\n\"fatal error C1083: Cannot open include file: 'openssl/aes.h': No\nsuch file or directory\"\nAny suggestions/comments?? Thanks in advance.", "issue_status": "Closed", "issue_reporting_time": "2015-06-12T17:09:58Z", "fixed_by": "#654", "pull_request_summary": "Remove Certforward Feature", "pull_request_description": "Member\nmhils commented on 26 Jun 2015\nThe certforward feature was implemented to support #gotofail, which only works on unpatched iOS devices. Given that many apps don't support iOS 7 anymore, jailbreak+ssl killswitch is usually the better option. By removing certforward, we can make netlib a pure python module again, which significantly simplifies distribution.\ndepends on mitmproxy/netlib#79\ncloses #360\ncloses #471\ncloses #629\ncloses https://github.com/mitmproxy/netlib/issues/33\ncloses https://github.com/mitmproxy/netlib/issues/63\ncloses https://github.com/mitmproxy/netlib/issues/68", "pull_request_status": "Merged", "issue_fixed_time": "2015-06-26T21:22:41Z", "files_changed": [["8", "libmproxy/proxy/config.py"], ["42", "libmproxy/proxy/server.py"], ["8", "test/test_server.py"], ["2", "test/tservers.py"]]}, "1421": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/628", "issue_id": "#628", "issue_summary": "Foxtel Go and Play URLs do not stream", "issue_description": "JPS46225 commented on 12 Jun 2015\nOk, regarding Foxtel go and play, this is one of the URLs detected by mitmproxy, however I can't play it. I'm not sure whether this is an authentication issue or something else\nI was expecting the stream to open, since I had the direct URL, also, when I tried to play it on my iPhone, I got the error message, 'The operation could not be completed'\nHow to reproduce the issue\nDownload Foxtel Go, analyse through mitmproxy and look for url's with Telstra in it's name\nPlatform is iOS\nWill also work with Foxtel Play for Windows", "issue_status": "Closed", "issue_reporting_time": "2015-06-12T04:10:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1422": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/627", "issue_id": "#627", "issue_summary": "Regarding #626 - Foxtel Go and Play URL's", "issue_description": "JPS46225 commented on 12 Jun 2015\nOk, regarding Foxtel go and play, this is one of the URLs detected by mitmproxy, however I can't play it. I'm not sure whether this is an authentication issue or something else", "issue_status": "Closed", "issue_reporting_time": "2015-06-12T03:57:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1423": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/626", "issue_id": "#626", "issue_summary": "Foxtel Go And Play and removal of a", "issue_description": "JPS46225 commented on 12 Jun 2015\nHi Guys\nI'm opening up this ticket specifically", "issue_status": "Closed", "issue_reporting_time": "2015-06-12T03:45:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1424": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/625", "issue_id": "#625", "issue_summary": "New version of mitm not able to replay server-side recordings made on previous version", "issue_description": "Contributor\njpkrause commented on 12 Jun 2015\nHello,\nI use mitmproxy a lot to execute automated tests against an Android client application in which the device receives pre-recorded responses to requests from mitmproxy using the server-side playback feature. This has been extremely useful to the automated testing efforts, however I am unable to use these recordings on a newer version because of a serialization version mismatch:\n\"Incompatible serialized data version: 0.11.3\"\nI reverted to v0.11.3 in order to continue using the recordings I have made, but would love to be able to use the latest version. Is there any way to port these recordings over to the newest version? I have quite a few recordings that involved a good bit of manual modification and cleanup to get them to work as I desired. It would be very frustrating and time consuming to have to redo all of them.\nThanks,\nJohn", "issue_status": "Closed", "issue_reporting_time": "2015-06-11T19:54:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1425": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/623", "issue_id": "#623", "issue_summary": "Easier navigation to \"favorite\" flows", "issue_description": "Contributor\ndrahosj commented on 11 Jun 2015\nIt is common to want to save three or four flows for replays, such as JSON POST requests, for frequent use when using MITMProxy for web application debugging or analysis. The application, however, may be generating a lot of other traffic. This makes it difficult to find or navigate to the \"favorite\" flows.\nCurrently, the best solution is to write the desired flows to a file, clear the screen, and reload the flows. This can become quite cumbersome, and it is very inconvenient to add another saved flow to the file.\nThere are several possibilities. The easiest would be to allow vim-like navigation to a specific flow number by pressing a hotkey, then typing the flow number. A more complete option would be to allow flows to be marked as a \"favorite\" This would place a visual marker on the flow, and enable additional navigation options, such as \"next favorite flow\" and \"previous favorite flow\". Additionally, adding a \"favorite flows\" option to the \"write flows to file\" submenu would allow for an easy way to persist the \"favorite\" flows across clears, or the \"Clear All Flows\" command could default to not deleting favorite flows.\nOverall, these features would vastly improve the experience of using MITMProxy for web application debugging, especially for debugging of applications which make frequent requests to REST endpoints.", "issue_status": "Closed", "issue_reporting_time": "2015-06-11T14:05:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1426": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/622", "issue_id": "#622", "issue_summary": "Crashing - idna.py - UnicodeError: label empty or too long", "issue_description": "p4l4din commented on 10 Jun 2015\nWhile scrolling down within the mitmproxy window using the arrow key it crashes. Repeatable multiple times when using mitmproxy to intercept the following site http://www.buddharadio.com.au\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 478, in run\n    self.loop.run()\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 715, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/raw_display.py\", line 392, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/raw_display.py\", line 492, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 399, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/main_loop.py\", line 496, in process_input\n    event, button, col, row, focus=True ):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/window.py\", line 32, in mouse_event\n    self.keypress(args[0], \"down\")\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/window.py\", line 38, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowlist.py\", line 358, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/listbox.py\", line 1001, in keypress\n    return actual_key(self._keypress_down((maxcol, maxrow)))\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/listbox.py\", line 1119, in _keypress_down\n    widget, pos = self.body.get_next(pos)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowlist.py\", line 260, in get_next\n    f = ConnectionItem(self.master, self.state, f, False) if f else None\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowlist.py\", line 104, in __init__\n    w = self.get_text()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowlist.py\", line 111, in get_text\n    hostheader = self.master.showhost\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/common.py\", line 375, in format_flow\n    req_url = f.request.pretty_url(hostheader=hostheader),\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 607, in pretty_url\n    self.pretty_host(hostheader),\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 599, in pretty_host\n    return host.encode(\"idna\")\n  File \"/usr/lib/python2.7/encodings/idna.py\", line 164, in encode\n    result.append(ToASCII(label))\n  File \"/usr/lib/python2.7/encodings/idna.py\", line 73, in ToASCII\n    raise UnicodeError(\"label empty or too long\")\nUnicodeError: label empty or too long\n\nmitmproxy has crashed!", "issue_status": "Closed", "issue_reporting_time": "2015-06-10T09:55:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1427": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/621", "issue_id": "#621", "issue_summary": "Document Scripting API", "issue_description": "mgdelmonte commented on 10 Jun 2015\nThe HTTPResponse class seems tightly controlled. It could use some more flexible constructors and it should be able to handle a wide variety of inputs. It requires an odict.ODictCaseless for the headers param in the constructor. The code implies that it will accept None but in fact this causes a crash. It also prevents __repr__ from functioning.\nI'd be happy to add some convenience functions. Being able easily to supply a wholly manufactured response in reply to certain requests is very valuable, but the documentation is very unhelpful. Documentation and better HTTPResponse generation would be a good step.", "issue_status": "Closed", "issue_reporting_time": "2015-06-09T20:42:12Z", "fixed_by": "#751", "pull_request_summary": "Move Docs to readthedocs", "pull_request_description": "Member\nmhils commented on 4 Sep 2015\nThis PR moves mitmproxy's documentation to readthedocs: https://mitmproxy.rtfd.org/\nThings left to do:\nMigrate the rest of the docs\nMake docs.mitmproxy.org point to readthedocs: https://docs.readthedocs.org/en/latest/alternate_domains.html#cname-ssl\nSet docs.mitmproxy.org as canoncial URL in readthedocs\n[ ] Add @cortesi as maintainer on readthedocs\nRedirect existing docs to readthedocs. I made sure that the folder structure matches exactly.\nfixes #751\nfixes #621", "pull_request_status": "Merged", "issue_fixed_time": "2015-09-16T00:53:01Z", "files_changed": [["7", ".travis.yml"], ["6,706", "doc-src/01-vendor.css"], ["43", "doc-src/02-app.css"], ["44", "doc-src/_layout.html"], ["50", "doc-src/_nav.html"], ["151", "doc-src/certinstall.html"], ["86", "doc-src/config.html"], ["8", "doc-src/dev/architecture.html"], ["8", "doc-src/dev/index.py"], ["8", "doc-src/dev/sslkeylogfile.html"], ["43", "doc-src/dev/testing.html"], ["18", "doc-src/features/anticache.html"], ["19", "doc-src/features/index.py"], ["84", "doc-src/features/passthrough.html"], ["26", "doc-src/features/proxyauth.html"], ["58", "doc-src/features/responsestreaming.html"], ["47", "doc-src/features/reverseproxy.html"], ["18", "doc-src/features/setheaders.html"], ["10", "doc-src/features/socksproxy.html"], ["60", "doc-src/features/sticky.html"], ["30", "doc-src/features/tcpproxy.html"], ["13", "doc-src/features/upstreamproxy.html"], ["76", "doc-src/index.py"], ["79", "doc-src/install.html"], ["68", "doc-src/mitmdump.html"], ["115", "doc-src/mitmproxy.html"], ["222", "doc-src/modes.html"], ["6", "doc-src/scripting/index.py"], ["177", "doc-src/scripting/inlinescripts.html"], ["22", "doc-src/scripting/libmproxy.html"], ["120", "doc-src/syntax.css"], ["6", "doc-src/transparent/index.py"], ["53", "doc-src/transparent/linux.html"], ["78", "doc-src/transparent/osx.html"], ["119", "doc-src/tutorials/gamecenter.html"], ["7", "doc-src/tutorials/index.py"], ["53", "doc-src/tutorials/transparent-dhcp.html"], ["1", "docs/.gitignore"], ["195", "docs/Makefile"], ["0", "doc-src/certinstall-webapp.png", "\u2192", "docs/certinstall-webapp.png"], ["174", "docs/certinstall.rst"], ["216", "docs/conf.py"]]}, "1428": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/620", "issue_id": "#620", "issue_summary": "Mitmdump increasing memory usage", "issue_description": "inian commented on 9 Jun 2015\nHi,\nI have noticed that the memory usage of mitmdump keeps increasing over time. It has grown to 2 GB on a Linux machine over a day.\nThis is the command I am running\nmitmdump -s \"cookieinject.py cookies.txt\" -p 9009 -z -q &\nAnd here my cookieinject.py script\nIs this expected?", "issue_status": "Closed", "issue_reporting_time": "2015-06-09T03:46:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1429": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/618", "issue_id": "#618", "issue_summary": "0.12.0 crashes when creating a new request", "issue_description": "majewsky commented on 8 Jun 2015\nTo reproduce, start mitmproxy and type \"ng\" on the main view (which should generate a new request, using the default URL of http://www.example.com). This immediately produces the following stacktrace for me:\n$ mitmproxy -p 8888\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 457, in run\n    self.loop.run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\n    self._watch_files[fd]()\n  File \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 392, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 492, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 399, in _update\n    self.process_input(keys)\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 499, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/window.py\", line 21, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/lib/python2.7/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 123, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 82, in keypress\n    self.prompt_execute(self._w.get_edit_text())\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 104, in prompt_execute\n    msg = p(txt, *args)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 302, in new_request\n    f = self.master.create_request(method, scheme, host, port, path)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/flow.py\", line 801, in create_request\n    headers = ODictCaseless()\nNameError: global name 'ODictCaseless' is not defined", "issue_status": "Closed", "issue_reporting_time": "2015-06-08T11:59:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1430": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/617", "issue_id": "#617", "issue_summary": "mitmproxy crashes with multiple \"list indices must be integers, not weakref\"", "issue_description": "rapucha commented on 8 Jun 2015\nDomain: https://www.spb.velogorod.org/\nmitmproxy version: v0.12.1", "issue_status": "Closed", "issue_reporting_time": "2015-06-08T10:23:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1431": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/615", "issue_id": "#615", "issue_summary": "Unable to scroll in mitmweb flow-table or flow-detail panes", "issue_description": "johnmccabe commented on 8 Jun 2015\nCurrently its not possible to scroll either the in the flow-table or flow-detail panes. Observing the same behaviour in Chrome, Firefox and IE.\nBeen observing this in 0.12.0 and 0.12.1", "issue_status": "Closed", "issue_reporting_time": "2015-06-07T22:20:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1432": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/614", "issue_id": "#614", "issue_summary": "egg_info issues when I ran ./dev", "issue_description": "c0debreaker commented on 8 Jun 2015\nWhen I run ./dev, it's failing. I'm on mac osx\nHere are the errors\nhttps://gist.github.com/c0debreaker/31368c43659d5484c593", "issue_status": "Closed", "issue_reporting_time": "2015-06-07T22:20:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1433": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/612", "issue_id": "#612", "issue_summary": "Mitmproxy Installation Errors", "issue_description": "JPS46225 commented on 7 Jun 2015\nThis is the new issue page for installation errors while installing Mitmproxy on Windows", "issue_status": "Closed", "issue_reporting_time": "2015-06-07T08:45:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1434": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/609", "issue_id": "#609", "issue_summary": "can't build mitmproxy 0.12.1 on pfSense 2.2.2/FreeBSD 10.1 -- can't build cffi dep, can't find limits.h", "issue_description": "creedflan738 commented on 5 Jun 2015\npfSense 2.2.x is now based on FreeBSD 10.1, so I have the luxury of using some more modern software. Unfortunately FreeBSD ports still includes mitmproxy-0.10.1, where Transparent mode isn't supported. I understand this was fixed in mitmproxy-0.11.\nI'm a noob at massaging build dependencies manually so I may well be missing some obvious -devel library.\nAll attempts to either 'pip install mitmproxy' or to build from source fail at the same point.\nHere's netlib failing to build.\nrunning build_ext\nbuilding '_cffi__x88a8fd90x94e38fe2' extension\ncreating /tmp/pip-build-SrTHd4/netlib/netlib/__pycache__/netlib\ncreating /tmp/pip-build-SrTHd4/netlib/netlib/__pycache__/netlib/__pycache__\ncc -fno-strict-aliasing -O2 -pipe -fstack-protector -fno-strict-aliasing -DNDEBUG -fPIC -I/usr/local/include/python2.7 -c netlib/__pycache__/_cffi__x88a8fd90x94e38fe2.c -o /tmp/pip-build-SrTHd4/netlib/netlib/__pycache__/netlib/__pycache__/_cffi__x88a8fd90x94e38fe2.o -w\nIn file included from /usr/local/lib/gcc5/gcc/x86_64-portbld-freebsd10.1/5.1.0/include-fixed/syslimits.h:7:0,\n                 from /usr/local/lib/gcc5/gcc/x86_64-portbld-freebsd10.1/5.1.0/include-fixed/limits.h:34,\n                 from /usr/local/include/python2.7/Python.h:19,\n                 from netlib/__pycache__/_cffi__x88a8fd90x94e38fe2.c:2:\n/usr/local/lib/gcc5/gcc/x86_64-portbld-freebsd10.1/5.1.0/include-fixed/limits.h:168:61: fatal error: limits.h: No such file or directory\ncompilation terminated.\nFull log: http://pastebin.com/YYzz9qCX\n(I've also tried with gcc-4.8.4 and gcc49-4.9.3, it didn't make a difference.)\nHere's cffi failing to build:\nhttp://pastebin.com/PRaDaFM1\nHere's the dump of all the packages I currently have installed.\nhttp://pastebin.com/Czt0F8cH\nedit: here's what I have installed via pip http://pastebin.com/yiZ9jWVx\nAlthough I have py27-cffi-0.8.6_3 and libffi-3.2.1 installed, but neither seems to satisfy the dependency.\nYou can grab current pfSense here: https://www.pfsense.org/download/mirror.php?section=downloads\nThanks in advance for any pointers on getting 0.12 installed.", "issue_status": "Closed", "issue_reporting_time": "2015-06-05T03:48:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1435": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/608", "issue_id": "#608", "issue_summary": "DistributionNotFound: Pillow>=2.3.0", "issue_description": "Ubiquitous commented on 4 Jun 2015\nInstalling via pip on OS X 10.10.3:\n$ pip install mitmproxy\nRequirement already satisfied (use --upgrade to upgrade): mitmproxy in /Library/Python/2.7/site-packages\nRequirement already satisfied (use --upgrade to upgrade): pyperclip>=1.5.8 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pyasn1>0.1.2 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): tornado>=4.0.2 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): lxml>=3.3.6 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pyOpenSSL>=0.14 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): netlib<0.13,>=0.12 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): blinker>=1.3 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): Pillow>=2.3.0 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): urwid>=1.3 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): configargparse>=0.9.3 in /Library/Python/2.7/site-packages (from mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): backports.ssl-match-hostname in /Library/Python/2.7/site-packages (from tornado>=4.0.2->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): certifi in /Library/Python/2.7/site-packages (from tornado>=4.0.2->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): six>=1.5.2 in /Library/Python/2.7/site-packages (from pyOpenSSL>=0.14->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): cryptography>=0.7 in /Library/Python/2.7/site-packages (from pyOpenSSL>=0.14->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): passlib>=1.6.2 in /Library/Python/2.7/site-packages (from netlib<0.13,>=0.12->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): idna in /Library/Python/2.7/site-packages (from cryptography>=0.7->pyOpenSSL>=0.14->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): setuptools in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from cryptography>=0.7->pyOpenSSL>=0.14->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): enum34 in /Library/Python/2.7/site-packages (from cryptography>=0.7->pyOpenSSL>=0.14->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): ipaddress in /Library/Python/2.7/site-packages (from cryptography>=0.7->pyOpenSSL>=0.14->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): cffi>=0.8 in /Library/Python/2.7/site-packages (from cryptography>=0.7->pyOpenSSL>=0.14->mitmproxy)\nRequirement already satisfied (use --upgrade to upgrade): pycparser in /Library/Python/2.7/site-packages (from cffi>=0.8->cryptography>=0.7->pyOpenSSL>=0.14->mitmproxy)\nAlthough when trying to execute mitmproxy:\n$ mitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 5, in <module>\n    from pkg_resources import load_entry_point\n  File \"/Library/Python/2.7/site-packages/distribute-0.6.14-py2.7.egg/pkg_resources.py\", line 2671, in <module>\n    working_set.require(__requires__)\n  File \"/Library/Python/2.7/site-packages/distribute-0.6.14-py2.7.egg/pkg_resources.py\", line 654, in require\n    needed = self.resolve(parse_requirements(requirements))\n  File \"/Library/Python/2.7/site-packages/distribute-0.6.14-py2.7.egg/pkg_resources.py\", line 552, in resolve\n    raise DistributionNotFound(req)\npkg_resources.DistributionNotFound: Pillow>=2.3.0", "issue_status": "Closed", "issue_reporting_time": "2015-06-03T19:25:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1436": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/607", "issue_id": "#607", "issue_summary": "\"Cannot copy binary data to clipboard.\" when attempting to copy JSON response to clipboard", "issue_description": "gajus commented on 3 Jun 2015\nTo replicate, make the following request:\nGET /rest/v3/showtimelist?count=1&date=2015-06-03&format=json&mediafmt=mp4&page=1&partner=20078C967592&profile=large&theaters=W7514&sed=20150603&sig=uxFJEEPP7SFVgS1pV5NkGbUgsTQ= HTTP/1.1\nHost: api.allocine.fr\nAccept: */*\nCookie: geolevel1=73072; geolevel2=83090; geolevel3=83159; xtan427117=-; xtant427117=1; xtidc=150301131534959430; xtvrn=$427117$\nUser-Agent: AlloCine/2.9 CFNetwork/609.1.4 Darwin/13.0.0\nAccept-Language: en;q=1\nAccept-Encoding: gzip, deflate\nContent-Length: 0\nSaving the latter response to a file works fine:\nHTTP/1.1 200 OK\nServer: nginx\nContent-Type: application/json; charset=utf-8\nLast-Modified: Wed, 03 Jun 2015 04:14:58 GMT\np3p: CP=\"CAO PSA OUR\"\nX-ServerName: WEBF2-01\nX-AspNet-Version: 4.0.30319\nX-Powered-By: ASP.NET\nX-UA-Compatible: IE=8\nAccess-Control-Allow-Origin: *\nX-KompressorName: kompressor5\nContent-Length: 1079\nVary: Accept-Encoding\nCache-Control: public, max-age=3564\nDate: Wed, 03 Jun 2015 04:14:58 GMT\nConnection: keep-alive\n\n{\"feed\":{\"updated\":\"2015-06-03T06:14:58Z\",\"page\":1,\"count\":1,\"totalResults\":1,\"theaterShowtimes\":[{\"place\":{\"theater\":{\"code\":\"W7514\",\"name\":\"Cinema Paradiso Grand Palais\",\"address\":\"Avenue Winston Churchill\",\"postalCode\":\"75008\",\"city\":\"Paris 8e arrondissement\",\"picture\":{\"path\":\"\\/pictures\\/212\\/062\\/21206278_173021223.jpg\",\"href\":\"http:\\/\\/fr.web.img2.acsta.net\\/pictures\\/212\\/062\\/21206278_173021223.jpg\"},\"hasPRMAccess\":1,\"geoloc\":{\"lat\":48.8658950,\"long\":2.3138045},\"link\":[{\"rel\":\"aco:web\",\"href\":\"http:\\/\\/www.allocine.fr\\/seance\\/salle_gen_csalle=W7514.html\"}]}}}],\"poi\":[{\"code\":4900,\"operation\":{\"code\":1,\"$\":\"McDonald's\"},\"name\":\"PARIS CHAMPS ELYSEES GALERIE\",\"address\":\"84, avenue des Champs Elys\u00e9es\",\"postalCode\":\"75008\",\"city\":\"PARIS\",\"geoloc\":{\"lat\":48.87107,\"long\":2.30351},\"thumbnail\":{\"href\":\"http:\\/\\/images.allocine.fr\\/commons\\/ad\\/device\\/pin_mcdonald.png\"},\"link\":[{\"rel\":\"mobile\",\"href\":\"https:\\/\\/m.restaurants.mcdonalds.fr\\/PARIS-CHAMPS-ELYSEES-GALERIE\"},{\"rel\":\"deep\",\"href\":\"mcdonalds:\\/\\/open\\/restaurant?code=PARIS-CHAMPS-ELYSEES-GALERIE\"}]}]}}", "issue_status": "Closed", "issue_reporting_time": "2015-06-03T04:22:53Z", "fixed_by": "#610", "pull_request_summary": "Fix 607", "pull_request_description": "Contributor\ngato commented on 6 Jun 2015\nfix #607 decode data before sending it to pyperclip", "pull_request_status": "Merged", "issue_fixed_time": "2015-06-05T23:10:33Z", "files_changed": [["10", "libmproxy/console/common.py"]]}, "1437": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/606", "issue_id": "#606", "issue_summary": "Disable mouse interactions (or allow selecting text)", "issue_description": "gajus commented on 3 Jun 2015\nIs there a way to disable mouse interactions? It makes it impossible to select the test displayed on the screen (iTerm2, OSX), e.g. I cannot perform simple operations, such as copying a URL.\n2", "issue_status": "Closed", "issue_reporting_time": "2015-06-03T04:17:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1438": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/604", "issue_id": "#604", "issue_summary": "Got an error when using 'P' to copy", "issue_description": "wyujie commented on 1 Jun 2015\nTraceback (most recent call last):?                                                                                                              \n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 457, in run\n    self.loop.run()\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\n    self._watch_files[fd]()\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/urwid/raw_display.py\", line 392, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/urwid/raw_display.py\", line 492, in parse_input\n    callback(processed, processed_codes)\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 399, in _update\n    self.process_input(keys)\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 499, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/libmproxy/console/window.py\", line 21, in keypress\n    k = super(self.__class__, self).keypress(size, k)\nFile \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 123, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 80, in keypress\n    self.prompt_execute(k)\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/libmproxy/console/statusbar.py\", line 104, in prompt_execute\n    msg = p(txt, *args)\n  File \"/home/yujie/envwanhuijie/local/lib/python2.7/site-packages/libmproxy/console/common.py\", line 289, in copy_flow\n    pyperclip.copy(data)\nAttributeError: 'bool' object has no attribute 'copy'", "issue_status": "Closed", "issue_reporting_time": "2015-06-01T13:31:09Z", "fixed_by": "#605", "pull_request_summary": "fixes #604 catch method not found for handling pyperclip not found", "pull_request_description": "Contributor\ngato commented on 1 Jun 2015\nfixes #604 if pyperclip is not found offers save to file instead of copying to clipboard", "pull_request_status": "Merged", "issue_fixed_time": "2015-06-01T16:43:51Z", "files_changed": [["4", "libmproxy/console/common.py"]]}, "1439": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/602", "issue_id": "#602", "issue_summary": "Remove libmproxy.contrib", "issue_description": "Member\nmhils commented on 31 May 2015\nAll the dependencies we have included in libmproxy.contrib are now on pypi as well. We should ditch libmproxy.contrib and list them as regular requirements instead.\nMost of the libraries provide newer versions as well - we should test them well to not break anything.", "issue_status": "Closed", "issue_reporting_time": "2015-05-31T09:54:29Z", "fixed_by": "#603", "pull_request_summary": "replace contrib libraries with pypi dependencies", "pull_request_description": "Member\nKriechi commented on 31 May 2015\nfixes #602\njsbeautifier: not sure if the change made by @cortesi is still needed\nour wbxml is not available on pypi (maybe under a different name?)\nhttps://github.com/davidpshaw/PyWBXMLDecoder", "pull_request_status": "Merged", "issue_fixed_time": "2015-06-04T01:30:18Z", "files_changed": [["3", "libmproxy/console/contentview.py"], ["8", "libmproxy/contrib/README"], ["834", "libmproxy/contrib/html2text.py"], ["3,707", "libmproxy/contrib/pyparsing.py"], ["2", "libmproxy/filt.py"], ["4", "setup.py"]]}, "1440": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/601", "issue_id": "#601", "issue_summary": "Crash after attempting to delete requests", "issue_description": "tigertoes commented on 31 May 2015\nSteps to reproduce the problem:\nMITM some traffic, over say, 20 minutes\nStart deleting (explicitly pressing \"d\") requests in the dump\nAfter deleting some, mitm crashes.\nWhat is the expected behavior?\nNot to crash, I suppose.\nWhat went wrong?\nStack trace:\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 614, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/vendor/lib/python2.7/site-packages/urwid/display_common.py\", line 757, in run_wrapper\n    return fn()\n  File \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 845, in loop\n    k = self.view.keypress(size, k)\n  File \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/vendor/lib/python2.7/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 269, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/vendor/lib/python2.7/site-packages/urwid/listbox.py\", line 987, in keypress\n    key = focus_widget.keypress((maxcol,),key)\n  File \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 147, in keypress\n    self.state.delete_flow(self.flow)\n  File \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 331, in delete_flow\n    ret = flow.State.delete_flow(self, f)\n  File \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/flow.py\", line 548, in delete_flow\n    self.flows._remove(f)\n  File \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/flow.py\", line 462, in _remove\n    self._list.remove(f)\nValueError: list.remove(x): x not in list\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nShutting down...\nAny other comments?\nThis could be a one-off, I'm having difficulty reproducing consistently it but thought it would be best to log it here in case someone else sees it and can. I'm also unable to give you the session (I didn't save it, and it contained sensitive data).\nmitmproxy version: mitmproxy 0.11.3\nOperating System: OS X 10.10.3", "issue_status": "Closed", "issue_reporting_time": "2015-05-31T08:06:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1441": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/599", "issue_id": "#599", "issue_summary": "passthrough docs: styling broken", "issue_description": "Member\nmhils commented on 31 May 2015\nSome parts of the output are unreadable: https://mitmproxy.org/doc/features/passthrough.html", "issue_status": "Closed", "issue_reporting_time": "2015-05-31T01:11:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1442": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/598", "issue_id": "#598", "issue_summary": "webhook question", "issue_description": "Member\ndweinstein commented on 30 May 2015\nI'm interested in a webhook to auto build a docker container with mitmproxy in it. are you guys willing to create one for me so I can keep this in sync? Other than setting up an rss reader to do this I'm not sure of another way to do this on github.\nalternatively if you guys want to have an official docker image I'd bad glad to contribute to that as well! :-P", "issue_status": "Closed", "issue_reporting_time": "2015-05-29T18:45:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1443": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/597", "issue_id": "#597", "issue_summary": "cannot select text from UI for copy/paste", "issue_description": "majewsky commented on 29 May 2015\nUsing the mitmproxy-0.12.0-2 package provided by Arch Linux, I cannot select and copy text from the terminal window where mitmproxy is running.\nSince I remember this to work in the past, I downgraded to mitmproxy-0.11.3-2, and there the text selection and copying works as expected.", "issue_status": "Closed", "issue_reporting_time": "2015-05-29T10:58:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1444": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/596", "issue_id": "#596", "issue_summary": "Export as curl command", "issue_description": "Contributor\nFuzion24 commented on 28 May 2015\nIt would be very neat to have functionality in the UI to export as a curl command for a given http request\n5\n5", "issue_status": "Closed", "issue_reporting_time": "2015-05-28T16:04:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1445": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/595", "issue_id": "#595", "issue_summary": "UI crash after deleting a few flows", "issue_description": "Contributor\nFuzion24 commented on 28 May 2015\n\u279c  ~  mitmproxy --version\nmitmproxy 0.12.0\n\u279c  ~  mitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 457, in run\n    self.loop.run()\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\n    self._watch_files[fd]()\n  File \"/usr/local/lib/python2.7/site-packages/urwid/raw_display.py\", line 392, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/local/lib/python2.7/site-packages/urwid/raw_display.py\", line 492, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 399, in _update\n    self.process_input(keys)\n  File \"/usr/local/lib/python2.7/site-packages/urwid/main_loop.py\", line 499, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/window.py\", line 21, in keypress\n    k = super(self.__class__, self).keypress(size, k)\n  File \"/usr/local/lib/python2.7/site-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 350, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/local/lib/python2.7/site-packages/urwid/listbox.py\", line 987, in keypress\n    key = focus_widget.keypress((maxcol,),key)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 167, in keypress\n    self.state.delete_flow(self.flow)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 98, in delete_flow\n    ret = flow.State.delete_flow(self, f)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/flow.py\", line 556, in delete_flow\n    self.flows._remove(f)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/flow.py\", line 470, in _remove\n    self._list.remove(f)\nValueError: list.remove(x): x not in list\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2015-05-28T15:39:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1446": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/594", "issue_id": "#594", "issue_summary": "UnicodeDecodeError in libmproxy", "issue_description": "renebruns commented on 28 May 2015\nWhile playing around with tamper (http://dutzi.github.io/tamper/) I ran into an issue with libmproxy.\nError:\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nTraceback (most recent call last):\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 99, in handle\nprotocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 994, in handle_messages\nwhile self.handle_flow():\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1098, in handle_flow\nself.send_response_to_client(flow)\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1344, in send_response_to_client\nself.c.client_conn.send(flow.response.assemble())\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 791, in assemble\nreturn head + self.content\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc2 in position 4450: ordinal not in range(128)\nSteps to reproduce:\nInstall latest mitmproxy via pip\nInstall tamper via pip\nInstall tamper Chrome extension (https://chrome.google.com/webstore/detail/tamper/mabhojhgigkmnkppkncbkblecnnanfmd)\nOpen Developer Console and switch to tamper tab\nRestart tamper proxy by clicking on the settings wheel in the left box and choosing \"Restart Proxy\"\nOpen http://www.seat.de\nClick on de.html in the appearing list (eventually you need to configure a text editor for this to work in tamper's settings)\nReload page (from this moment on it tries to serve the de.html file via mitmproxy)\nError can be seen if Chrome is started in debug mode\n$ /Applications/Google\\ Chrome.app/Contents/MacOS/Google\\ Chrome --enable-logging --v=1\nLet me know if you need anything else!", "issue_status": "Closed", "issue_reporting_time": "2015-05-28T07:29:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1447": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/593", "issue_id": "#593", "issue_summary": "NetlibIncomplete is not caught when reading SOCKS handshake", "issue_description": "taiyangc commented on 24 May 2015\nEncountered this while running latest mitmproxy 0.12.0 with this command:\nmitmproxy -v -e --socks --ssl-version-client all --ssl-port 14943 --tcp :14943\nClient connects to mitmproxy via socks5 using websocket (messages dumped with --tcp):\nTraceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/server.py\", line 73, in handle\n    upstream_info = self.config.mode.get_upstream_server(self.client_conn)\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/primitives.py\", line 95, in get_upstream_server\n    client_greet = socks.ClientGreeting.from_file(client_conn.rfile)\n  File \"/Library/Python/2.7/site-packages/netlib/socks.py\", line 64, in from_file\n    ver, nmethods = struct.unpack(\"!BB\", f.safe_read(2))\n  File \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 207, in safe_read\n    \"Expected %s bytes, got %s\"%(length, len(result))\nNetLibIncomplete: Expected 2 bytes, got 0\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nThe event log:\n192.168.101.57:45408: Establish SSL\n  -> with client\n  -> with server (sni: None)\n192.168.101.57:45408: SSL handshake error: The client may not trust the proxy's certificate.\n192.168.101.57:45408: ProxyError('NetLibError(\"SSL handshake error: SysCallError(-1, \\'Unexpected EOF\\')\",)',)\n192.168.101.57:45408: serverdisconnect\n  -> [IP]:14943\n192.168.101.57:45409: clientconnect\n192.168.101.57:45409: Traceback (most recent call last):\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/server.py\", line 73, in handle\n    upstream_info = self.config.mode.get_upstream_server(self.client_conn)\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy/primitives.py\", line 95, in get_upstream_server\n    client_greet = socks.ClientGreeting.from_file(client_conn.rfile)\n  File \"/Library/Python/2.7/site-packages/netlib/socks.py\", line 64, in from_file\n    ver, nmethods = struct.unpack(\"!BB\", f.safe_read(2))\n  File \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 207, in safe_read\n    \"Expected %s bytes, got %s\"%(length, len(result))\nNetLibIncomplete: Expected 2 bytes, got 0\nI'm not sure what this means but a crash doesn't seem right. I can reproduce this so if there is anything I should provide, let me know.\nI have a second question related to #427: I get the same SSL handshake error. The server I connect to does have HSTS policy. But I thought HSTS is client enforced. After I disable all hostname checks (Java), I still get the same error. I must be overlooking something... maybe someone can enlighten me.", "issue_status": "Closed", "issue_reporting_time": "2015-05-23T20:16:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1448": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/592", "issue_id": "#592", "issue_summary": "Crash when repeatedly pressing 'd' on OS X Mavericks", "issue_description": "kylecronin commented on 23 May 2015\nI installed MITMProxy from Homebrew on OS X Mavericks (\"brew install mitmproxy\"). It works normally most of the time, but it has crashed twice when I have held down the 'd' key for a few seconds to delete some entries in the list. I don't have any clear-cut steps to reproduce because it doesn't happen most of the time.\nHere is the stack trace:\nTraceback (most recent call last):\nFile \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 614, in run\nself.ui.run_wrapper(self.loop)\nFile \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/vendor/lib/python2.7/site-packages/urwid/display_common.py\", line 757, in run_wrapper\nreturn fn()\nFile \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 845, in loop\nk = self.view.keypress(size, k)\nFile \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/vendor/lib/python2.7/site-packages/urwid/container.py\", line 1128, in keypress\nreturn self.body.keypress( (maxcol, remaining), key )\nFile \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 269, in keypress\nreturn urwid.ListBox.keypress(self, size, key)\nFile \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/vendor/lib/python2.7/site-packages/urwid/listbox.py\", line 987, in keypress\nkey = focus_widget.keypress((maxcol,),key)\nFile \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 147, in keypress\nself.state.delete_flow(self.flow)\nFile \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 331, in delete_flow\nret = flow.State.delete_flow(self, f)\nFile \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/flow.py\", line 548, in delete_flow\nself.flows._remove(f)\nFile \"/usr/local/Cellar/mitmproxy/0.11.3/libexec/lib/python2.7/site-packages/libmproxy/flow.py\", line 462, in _remove\nself._list.remove(f)\nValueError: list.remove(x): x not in list\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2015-05-23T15:01:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1449": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/589", "issue_id": "#589", "issue_summary": "Don't \"break\" SSL-mode?", "issue_description": "raymontag commented on 20 May 2015\nHey,\nis there the possibility to tell mitmproxy that it should not touch SSL-traffic at all but show the encrypted traffic? I know that there's the way with the -I flag, however I would like to see the \"ignored\" flows with headers (and encrytped data if it's available).", "issue_status": "Closed", "issue_reporting_time": "2015-05-20T11:09:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1450": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/588", "issue_id": "#588", "issue_summary": "Cipher selection snafu on server that only accepts SSLv3 with RC4-SHA", "issue_description": "aGHz commented on 20 May 2015\nTL;DR\nWe need to specify --ciphers-server 'RC4-SHA' if we want to connect to this IIS server, 'ALL' causes ECONNRESET when reading from the stream. However, using 'ALL' in openssl s_client is able to negotiate into RC4-SHA just fine.\nNot entirely sure if there's any problem, as netlib seems to just pass the cipher list to OpenSSL, but I'm asking here in case anyone has any idea that I can't see.\nI'm also posting here instead of netlib because if there's no clear solution (we really don't want to force RC4-SHA on all our connections), I'm planning to make a PR to enable per-host cipher lists in the same way we have per-host client cert files. So I want to ask what you think about that\nDetails\nWe're using mitmdump to collect all traffic between our server and third-party servers, and we've encountered a strange situation. Unfortunately I can't share details but I'll try to provide complete diagnostics and can also perform any test you may need.\nThe remote is an IIS server that seems to understand nothing but SSLv3 with the RC4-SHA cipher. We've arrived at this conclusion using a combination of brute-forcing mitmdump parameters and openssl s_client.\nSo we enabled SSLv3 with mitmdump --ssl-version-server all, and then we could at least connect to the remote server. However, we're getting ECONNRESET when we try to read from the connection:\n<ip>:60920: clientconnect\n<ip>:60920: request\n  -> CONNECT <remote domain>:443 HTTP/1.1\n<ip>:60920: Set new server address: <remote domain>:443\n<ip>:60920: serverconnect\n  -> <remote domain>:443\n------ setting ciphers to: ALL\n<ip>:60920: Received CONNECT request to SSL port. Upgrading to SSL...\n<ip>:60920: Establish SSL\n  -> with client\n  -> with server (sni: None)\n<ip>:60920: SNI received: <remote domain>\n<ip>:60920: (server reconnect follows)\n<ip>:60920: serverdisconnect\n  -> <remote domain>:443\n<ip>:60920: Set new server address: <remote domain>:443\n<ip>:60920: serverconnect\n  -> <remote domain>:443\n------ setting ciphers to: ALL\n<ip>:60920: Establish SSL\n  -> with server (sni: <remote domain>)\n<ip>:60920: Upgrade to SSL completed.\n<ip>:60920: request\n  -> GET <path> HTTP/1.1\n---------- server_conn.send\n---------- server_conn.send done\n~~~ from_stream\n~~~ read_response\n***** read_response\n!!!!!!!!!!! SSL.SysCallError\n!!!!!!!!!!! (104, 'ECONNRESET')\n<ip>:60920: error in server communication: NetLibSSLError('',)\n<ip>:60920: (server reconnect follows)\n<ip>:60920: serverdisconnect\n  -> <remote domain>:443\n<ip>:60920: Set new server address: <remote domain>:443\n<ip>:60920: serverconnect\n  -> <remote domain>:443\n------ setting ciphers to: ALL\n<ip>:60920: Establish SSL\n  -> with server (sni: <remote domain>)\n---------- server_conn.send\n---------- server_conn.send done\n~~~ from_stream\n~~~ read_response\n***** read_response\n!!!!!!!!!!! SSL.SysCallError\n!!!!!!!!!!! (104, 'ECONNRESET')\n<ip>:60920: error in server communication: NetLibSSLError('',)\n<ip>:60920: TCP connection closed unexpectedly.\n<ip> GET https://<remote domain><path>\n    accept: */*\n    host: <remote domain>\n    Connection: keep-alive\n\n << TCP connection closed unexpectedly.\n<ip>:60920: clientdisconnect\n<ip>:60920: serverdisconnect\n  -> <remote domain>:443\nForcing the connection to use RC4-SHA with mitmdump --ssl-version-server all --ciphers-server 'RC4-SHA' works like a charm:\n<ip>:61058: clientconnect\n<ip>:61058: request\n  -> CONNECT <remote domain>:443 HTTP/1.1\n<ip>:61058: Set new server address: <remote domain>:443\n<ip>:61058: serverconnect\n  -> <remote domain>:443\n------ setting ciphers to: RC4-SHA\n<ip>:61058: Received CONNECT request to SSL port. Upgrading to SSL...\n<ip>:61058: Establish SSL\n  -> with client\n  -> with server (sni: None)\n<ip>:61058: SNI received: <remote domain>\n<ip>:61058: (server reconnect follows)\n<ip>:61058: serverdisconnect\n  -> <remote domain>:443\n<ip>:61058: Set new server address: <remote domain>:443\n<ip>:61058: serverconnect\n  -> <remote domain>:443\n------ setting ciphers to: RC4-SHA\n<ip>:61058: Establish SSL\n  -> with server (sni: <remote domain>)\n<ip>:61058: Upgrade to SSL completed.\n<ip>:61058: request\n  -> GET <path> HTTP/1.1\n---------- server_conn.send\n---------- server_conn.send done\n~~~ from_stream\n~~~ read_response\n***** read_response\n***** read_response 1\n***** read_response 2\n***** read_response 3\n***** read_response 4\n***** read_response 5\n***** read_response 6\n~~~ read_response done\n~~~ HTTPResponse\n~~~ HTTPResponse done\n<ip>:61058: response\n  -> HTTP/1.1 200 OK\nPublishing request to <remote domain>\n<ip> GET https://<remote domain><path>\n    accept: */*\n    host: <remote domain>\n    Connection: keep-alive\n\n << 200 OK 30.42kB\n    Content-Length: 31147\n    Content-Type: text/xml\n    Server: Microsoft-IIS/7.0\n    X-Powered-By: ARR/2.5\n    X-Powered-By: ASP.NET\n    Date: Tue, 19 May 2015 21:02:54 GMT\nAs far as I can tell, netlib does nothing more with the cipher list than send it over to openssl, but when I try openssl s_client -connect <remote domain>:443 -ssl3 -cipher ALL it seems to be negotiating the cipher just fine:\nCONNECTED(00000003)\ndepth=1 C = BE, O = GlobalSign nv-sa, CN = GlobalSign Organization Validation CA - SHA256 - G2\nverify error:num=20:unable to get local issuer certificate\nverify return:0\n\n---\nCertificate chain\n 0 s:<snip>\n   i:/C=BE/O=GlobalSign nv-sa/CN=GlobalSign Organization Validation CA - SHA256 - G2\n 1 s:/C=BE/O=GlobalSign nv-sa/CN=GlobalSign Organization Validation CA - SHA256 - G2\n   i:/C=BE/O=GlobalSign nv-sa/OU=Root CA/CN=GlobalSign Root CA\n\n---\nServer certificate\n-----BEGIN CERTIFICATE-----\n<snip>\n-----END CERTIFICATE-----\nsubject=<snip>\nissuer=/C=BE/O=GlobalSign nv-sa/CN=GlobalSign Organization Validation CA - SHA256 - G2\n\n---\nNo client certificate CA names sent\n\n---\nSSL handshake has read 2693 bytes and written 502 bytes\n\n---\nNew, TLSv1/SSLv3, Cipher is RC4-SHA\nServer public key is 2048 bit\nSecure Renegotiation IS supported\nCompression: NONE\nExpansion: NONE\nSSL-Session:\n    Protocol  : SSLv3\n    Cipher    : RC4-SHA\n    Session-ID: <snip>\n    Session-ID-ctx:\n    Master-Key: <snip>\n    Key-Arg   : None\n    PSK identity: None\n    PSK identity hint: None\n    SRP username: None\n    Start Time: 1432068374\n    Timeout   : 7200 (sec)\n    Verify return code: 20 (unable to get local issuer certificate)\n\n---\n(and then manually send HTTP commands that work fine).", "issue_status": "Closed", "issue_reporting_time": "2015-05-19T21:19:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1451": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/587", "issue_id": "#587", "issue_summary": "mitmdump fails with 502 error", "issue_description": "yiannisy commented on 20 May 2015\nHi,\nI run mitmdump as an HTTP proxy. After sometime all my requests fail with the following error :\nProxyError(NetLibError('Error connecting to \"www.cnn.com\": [Errno -5] No address associated with hostname',),)\nIs this a known issue? I haven't tried to debug DNS requests in detail yet...Restarting mitmdump solves the problem immediately. I am running mitmproxy 0.11.4 on Ubuntu 12.04.\nThanks,\nYiannis", "issue_status": "Closed", "issue_reporting_time": "2015-05-19T18:36:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1452": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/586", "issue_id": "#586", "issue_summary": "Is it possible to change the certificate according to page accessed?", "issue_description": "javierprtd commented on 16 May 2015\nHow could I do it in a script?\nRegards.", "issue_status": "Closed", "issue_reporting_time": "2015-05-16T10:12:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1453": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/583", "issue_id": "#583", "issue_summary": "any suggestions trying troubleshoot an issue with mitmdump", "issue_description": "Contributor\ndlethin commented on 16 May 2015\nWe're migrating a set of jobs that run integration tests for one of our applications from one server to another. There is a pair of jobs -- one that runs mitmdump to write to a file capturing the http traffic from our tests and then one that runs the same test suite using mitmdump replaying the responses.\nThis process is working fine our current server, which runs on OSX using v 0.10 of mitmdump. However, we are experiencing one issue on our server we are moving to, which is redhat linux running v0.11.4 of mitmpdump.\nOne our tests performs and post to a webservice and expects it to succeed with an HTTP 201 status code. It then repeats the same web service call, only this time it expects the call to fail -- because its testing that the process is non-repeatable.\nOur test job that uses the actual backend web service succeeds -- the first response passes, 2nd fails.\nHowever, our test job that replays the captured conversation from the above job fails. Both web services calls result in a 201 status, where we expect the 2nd call to fail.\nWas there a change in behavior between 0.10 and 0.11.4 that might have introduced this behavior difference?\nIs there some switch or configuration option I might be able to tweak to adjust the behavior for sequential requests? I looked at the doc but didn't see anything obvious.\nIn the meantime, it looks like the capture file is just pure text. I'm going to try to see if I can see anything obvious in them that might provide some clues.\nThanks.\nDoug", "issue_status": "Closed", "issue_reporting_time": "2015-05-15T21:19:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1454": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/582", "issue_id": "#582", "issue_summary": "View used SSL/TLS Version and Cipher Suite", "issue_description": "raymontag commented on 13 May 2015\nHey,\nis it possible to view the Cipher Suite used to encrypt the traffic? I think this could be interesting while testing some application without the need to set specific ciphers. E.g. this information could be saved as an attribute in the HTTPMessage class. Moreover this could be helpful to check if the something was really encrypted, e.g. by setting the attribute to None (or is this information already provided by the scheme attribute?).", "issue_status": "Closed", "issue_reporting_time": "2015-05-13T09:58:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1455": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/581", "issue_id": "#581", "issue_summary": "Impossible to use server replay and guarantee proxy will not go outside of recorded file?", "issue_description": "xrd commented on 13 May 2015\nI'm confused if mitmdump/mitmproxy supports recording to a file, using a recorded file to replay, but guaranteeing that any additional requests outside of the recording list will not be made to live servers.\nI had assumed the -k, --kill Kill extra requests during replay. switch would prevent extra requests, but I think I am wrong (or am using it incorrectly).\nMy use case: I want to use mitmdump as an automated testing tool for mobile applications. I'd like to start mitmdump as a proxy, setup the proxy on the mobile device, do a run with real request recorded to a file, then restart mitmdump in replay mode, and guarantee any additional requests made by the mobile device client never hit the internet. This allows me to run my automated tests without worrying about doing anything improper, even if I am running against a production environment.\nIs this type of usage supported?\nThe commands I used:\n$ mitmdump -w sample_recording\n....\n$ mitmdump -k -S sample_recording\n...", "issue_status": "Closed", "issue_reporting_time": "2015-05-12T19:30:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1456": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/579", "issue_id": "#579", "issue_summary": "Modify response body - insert content of new request", "issue_description": "gfrench17 commented on 12 May 2015\nHi Max,\nmaybe you can give me a hand regarding this tricky one:\nI use a website which contains encrypted content. It tells me to upload my private key in order to decrypt the content server-side, but I do not want to expose my private key. What I want to do instead is the following:\nInvoke the specific website address, e.g. https://example.com/view.php?msg=15\nextract token ID etc. from the request content (this works already) to create the request for step 3.\nIn the background, request the raw source of the encrypted content (in a separate request, this works already)\nDecrypt this source with my private key (this also works already)\nPaste the result of step 4 in such a way that I see it inside the response of step 1.\nSo, my crucial step is no. 3. How can I perform a request in the background and then \"inject\" its response into the response of the originating request in step 1? The rest is feasible for me.\nKind regards\nGordon", "issue_status": "Closed", "issue_reporting_time": "2015-05-12T12:32:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1457": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/578", "issue_id": "#578", "issue_summary": "How to intercept specific domain?", "issue_description": "ryanzzff commented on 10 May 2015\nI know I can filter the domain, or ignore other domain by:\nmitmproxy -I google.com\nbut sometimes mitmproxy breaks other daily browsing. For example, Dropbox and Google Drive will not sync when mitmproxy is working. There are many other services not working, so I don't think it is a good idea to ignore all other domains one by one.\nCan I just intercept the http traffic on single site abc.com?", "issue_status": "Closed", "issue_reporting_time": "2015-05-10T17:29:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1458": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/577", "issue_id": "#577", "issue_summary": "Specify the ciphers presented to the server in client hello", "issue_description": "shreyas1989 commented on 9 May 2015\nHi, this may be related to the issue #469 . I want to know if there is a way to edit the list of ciphers presented to the webserver by mitmproxy? (like edit the ciphers in the client hello of mitmproxy during handshake)", "issue_status": "Closed", "issue_reporting_time": "2015-05-09T17:22:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1459": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/575", "issue_id": "#575", "issue_summary": "How to make SSL work *without* inline scripts?", "issue_description": "cppisking commented on 7 May 2015\nI tried the most basic example posted on mitmproxy.org: http://mitmproxy.org/doc/scripting/libmproxy.html of the sticky master.\nUsing this example and visiting mitmproxy.it it says that if you can see the message, the traffic is not passing through mitmproxy. Obviously the traffic is passing through the proxy because otherwise no website would work at all. But http websites work fine, just not https. So there must be some additional magic happening in the inline scripts that make this all work. I confirmed with a separate test program that if I use the from libmproxy import mitmdump followed by mitmdump() then browsing to mitmproxy.it does in fact show me the cert to download. But I need to make this work without the inline scripts.\nAm I doing something wrong, or is this a bug in the library?", "issue_status": "Closed", "issue_reporting_time": "2015-05-07T06:05:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1460": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/574", "issue_id": "#574", "issue_summary": "Crash in libmproxy", "issue_description": "cppisking commented on 7 May 2015\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\site-packages\\libmproxy\\proxy\\server.py\", line 99, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"C:\\Python27\\lib\\site-packages\\libmproxy\\protocol\\http.py\", line 982, in handle_messages\n    while self.handle_flow():\n  File \"C:\\Python27\\lib\\site-packages\\libmproxy\\protocol\\http.py\", line 1055, in handle_flow\n    ret = self.process_request(flow, req)\n  File \"C:\\Python27\\lib\\site-packages\\libmproxy\\protocol\\http.py\", line 1248, in process_request\n    return self.process_connect_request(self.c.server_conn.address)\n  File \"C:\\Python27\\lib\\site-packages\\libmproxy\\protocol\\http.py\", line 1395, in process_connect_request\n    self.c.establish_ssl(server=True, client=True)\n  File \"C:\\Python27\\lib\\site-packages\\libmproxy\\proxy\\server.py\", line 215, in establish_ssl\n    chain_file=chain_file\n  File \"C:\\Python27\\lib\\site-packages\\libmproxy\\proxy\\connection.py\", line 66, in convert_to_ssl\n    tcp.BaseHandler.convert_to_ssl(self, *args, **kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\netlib\\tcp.py\", line 428, in convert_to_ssl\n    ctx = self._create_ssl_context(cert, key, **sslctx_kwargs)\n  File \"C:\\Python27\\lib\\site-packages\\netlib\\tcp.py\", line 411, in _create_ssl_context\n    ctx.use_privatekey(key)\n  File \"C:\\Python27\\lib\\site-packages\\OpenSSL\\SSL.py\", line 680, in use_privatekey\n    self._raise_passphrase_exception()\n  File \"C:\\Python27\\lib\\site-packages\\OpenSSL\\SSL.py\", line 640, in _raise_passphrase_exception\n    _raise_current_error()\n  File \"C:\\Python27\\lib\\site-packages\\OpenSSL\\_util.py\", line 48, in exception_from_error_queue\n    raise exception_type(errors)\nError: [('SSL routines', 'SSL_SET_PKEY', 'unknown certificate type')]\nUnfortunately I don't have much more useful insight to provide here. This happened while I was connected to a server I have using libmproxy (not using the inline scripts approach). The certificate is correctly installed on my phone, and I've been using everything successfully for some time now and it was an all of a sudden kind of thing that I'm unable to make happen again.", "issue_status": "Closed", "issue_reporting_time": "2015-05-07T04:06:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1461": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/573", "issue_id": "#573", "issue_summary": "SyntaxError when running mitmproxy", "issue_description": "nandaceg007 commented on 6 May 2015\nI get this error when running mitmproxy.\nNot sure of what's wrong.\nabc@abc-virtual-machine ~ $ mitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 2, in <module>\n    from libmproxy.main import mitmproxy\n  File \"/usr/local/lib/python3.4/dist-packages/libmproxy/main.py\", line 73\n    except ProxyServerError, v:\n                           ^\nSyntaxError: invalid syntax", "issue_status": "Closed", "issue_reporting_time": "2015-05-06T15:33:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1462": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/572", "issue_id": "#572", "issue_summary": "Is proxy hardcoded to return HTTP/1.1?", "issue_description": "Contributor\ndlethin commented on 1 May 2015\nWe're attempting to use the proxy in a legacy java application and running into a problem. We've configured java to use a proxy pointing to mitmdump we've started. However, one of the calls is failing. This is apparently because we are using a library which attempts to make an HTTP/1.0 request to the proxy, but the mitmdump is returning \"HTTP/1.1\"\nHere is the failure our application returns:\n09:48:57 Message: Unable to tunnel through 127.0.0.1:8897.  Proxy returns \"HTTP/1.1 200 Connection established\"\nI tracked down the corresponding code for the library we are using:\n                Socket tunnel = new Socket(proxyHostName, proxyPort);\n                OutputStream out = tunnel.getOutputStream();\n                String connect = \"CONNECT \" + host + \":\" + port + \" HTTP/1.0\\r\\n\\r\\n\";\n                byte buf[];\n...\n               // We asked for HTTP/1.0, so we should get that back\n                if (!replyStr.startsWith(\"HTTP/1.0 200\")) {\n                    throw new IOException(\"Unable to tunnel through \"\n                                          + proxyHostName + \":\" + proxyPort\n                                          + \".  Proxy returns \\\"\" + replyStr + \"\\\"\");\n                }\nIs there anything we can do via command line parameters or configuration of mitmdump which will ensure that HTTP 1.0 requests to the proxy will return v1.0 responses? That would be preferable at least in the short term rather than trying to get our application to use a new version of this code.\nAs additional background on this, we came across this when attempting to move our continuous integration build from a server running on OSX to a server running on Linux (RedHat7). The OSX build is not experiencing this problem (which is running mitmproxy 0.10.1). However, on RedHat7, we get the failure whether I run the latest (v0.11.x) or 0.10.1. I don't know much about origin of how the mitmproxy was installed on the OSX machine. Its a binary executable, where as the one I installed on our linux box was done through pip. The java code being run is that same as well as the java version on both platforms. I don't know enough about mitmproxy to know where the http protocol version is coming from. Maybe its a matter of changing the version of downstream python library dependency.\nThanks.\nDoug", "issue_status": "Closed", "issue_reporting_time": "2015-05-01T14:22:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1463": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/571", "issue_id": "#571", "issue_summary": "Some request are not getting through", "issue_description": "Falsen commented on 30 Apr 2015\nI have this script:\nfrom libmproxy.protocol.http import decoded\nimport pprint\nimport time\n\ndef response(context, flow):\n    print('Path: ' + flow.request.path)\nAnd im connected to the proxy with my android phone and using snapchat.\nBut some requests getting through...\nAre the requests too big? They are 60-100kb.", "issue_status": "Closed", "issue_reporting_time": "2015-04-30T11:09:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1464": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/570", "issue_id": "#570", "issue_summary": "Response streaming, last chunk is not passed to modifier", "issue_description": "cxagit commented on 27 Apr 2015\nI'm using the response streaming to modify response data seamless and everything works fine so far.\nBut libmproxy seems to embezzle the last chunk, if the the response data is not an exact multiple of 4096.\nFor example, I'm downloading a 2224640 bytes file. libmproxy will pass the chunks 0-4096, 4096-8192, ..., 222031 - 2224128 though the generator to the modifier. But the last 512 byte part 2224128-2224640 isn't passed. (But It's passed to the client, it's just not passed to the modifier)\nIf the file size is 2228224 bytes (a multiple of 4096) also the last chunk is passed.", "issue_status": "Closed", "issue_reporting_time": "2015-04-27T10:10:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1465": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/567", "issue_id": "#567", "issue_summary": "11.4 broken with 2.7", "issue_description": "Mila432 commented on 25 Apr 2015\nFinished processing dependencies for mitmproxy==0.11.4\nroot@server:/var/www/html/mitmproxy# mitmproxy\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 9, in\nload_entry_point('mitmproxy==0.11.4', 'console_scripts', 'mitmproxy')()\nFile \"/usr/local/lib/python2.7/dist-packages/pkg_resources/init.py\", line 546, in load_entry_point\nreturn get_distribution(dist).load_entry_point(group, name)\nFile \"/usr/local/lib/python2.7/dist-packages/pkg_resources/init.py\", line 2666, in load_entry_point\nreturn ep.load()\nFile \"/usr/local/lib/python2.7/dist-packages/pkg_resources/init.py\", line 2339, in load\nreturn self.resolve()\nFile \"/usr/local/lib/python2.7/dist-packages/pkg_resources/init.py\", line 2345, in resolve\nmodule = import(self.module_name, fromlist=['name'], level=0)\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/main.py\", line 6, in\nfrom . import version, cmdline\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/cmdline.py\", line 6, in\nfrom . import filt, utils, version\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/filt.py\", line 37, in\nfrom .protocol.http import decoded\nFile \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/protocol/http.py\", line 9, in\nfrom netlib import http, tcp, http_status, http_cookies\nImportError: cannot import name http_cookies", "issue_status": "Closed", "issue_reporting_time": "2015-04-24T19:42:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1466": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/566", "issue_id": "#566", "issue_summary": "FreeBSD11 transparent mode not supported", "issue_description": "mike-pt commented on 23 Apr 2015\nI'm trying to use transparent mode on freebsd, but it doesn't seem supported:\n# mitmproxy -T\nusage: mitmproxy [options]\nmitmproxy: error: Transparent mode not supported on this platform.\nI wonder if its just because its not considered in libmproxy \"platform\", since OSX is supported, and maybe its easy to add FreeBSD support, or is it something more complex?", "issue_status": "Closed", "issue_reporting_time": "2015-04-23T15:12:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1467": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/565", "issue_id": "#565", "issue_summary": "some error occurs when i install mitmproxy from source code.", "issue_description": "leveryd commented on 23 Apr 2015\n$ git clone https://github.com/mitmproxy/mitmproxy.git\n$ git clone https://github.com/mitmproxy/netlib.git\n$ git clone https://github.com/mitmproxy/pathod.git\n$ cd mitmproxy\n$ ./dev  \n\nDownloading lxml-3.4.3.tar.gz (3.5MB): 147kB downloaded\nCleaning up...\nException:\nTraceback (most recent call last):\n  File \"/home/guang/venv.mitmproxy/local/lib/python2.7/site-packages/pip/basecommand.py\", line 122, in main\n    status = self.run(options, args)\n  File \"/home/guang/venv.mitmproxy/local/lib/python2.7/site-packages/pip/commands/install.py\", line 278, in run\n    requirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundle=self.bundle)\n  File \"/home/guang/venv.mitmproxy/local/lib/python2.7/site-packages/pip/req.py\", line 1197, in prepare_files\n    do_download,\n  File \"/home/guang/venv.mitmproxy/local/lib/python2.7/site-packages/pip/req.py\", line 1375, in unpack_url\n    self.session,\n  File \"/home/guang/venv.mitmproxy/local/lib/python2.7/site-packages/pip/download.py\", line 572, in unpack_http_url\n    download_hash = _download_url(resp, link, temp_location)\n  File \"/home/guang/venv.mitmproxy/local/lib/python2.7/site-packages/pip/download.py\", line 433, in _download_url\n    for chunk in resp_read(4096):\n  File \"/home/guang/venv.mitmproxy/local/lib/python2.7/site-packages/pip/download.py\", line 421, in resp_read\n    chunk_size, decode_content=False):\n  File \"/home/guang/venv.mitmproxy/local/lib/python2.7/site-packages/pip/_vendor/requests/packages/urllib3/response.py\", line 236, in stream\n    data = self.read(amt=amt, decode_content=decode_content)\n  File \"/home/guang/venv.mitmproxy/local/lib/python2.7/site-packages/pip/_vendor/requests/packages/urllib3/response.py\", line 183, in read\n    data = self._fp.read(amt)\n  File \"/usr/lib/python2.7/httplib.py\", line 567, in read\n    s = self.fp.read(amt)\n  File \"/usr/lib/python2.7/socket.py\", line 380, in read\n    data = self._sock.recv(left)\n  File \"/usr/lib/python2.7/ssl.py\", line 341, in recv\n    return self.read(buflen)\n  File \"/usr/lib/python2.7/ssl.py\", line 260, in read\n    return self._sslobj.read(len)\nSSLError: [Errno 1] _ssl.c:1429: error:1408F119:SSL routines:SSL3_GET_RECORD:decryption failed or bad record mac\n\nStoring debug log for failure in /home/guang/.pip/pip.log", "issue_status": "Closed", "issue_reporting_time": "2015-04-23T13:23:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1468": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/564", "issue_id": "#564", "issue_summary": "mitmdump does not support some website using https(ssl v3)?", "issue_description": "leveryd commented on 23 Apr 2015\nhttp://bbs.uc.cn,i can not login in this website using mitmdump as forward proxy.\nif you want to login,you can try my account for test.\nusername:redacted\npassword:redacted", "issue_status": "Closed", "issue_reporting_time": "2015-04-23T09:08:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1469": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/563", "issue_id": "#563", "issue_summary": "mitmdump does not support some website using https(ssl v3)?", "issue_description": "leveryd commented on 23 Apr 2015\nhttp://bbs.uc.cn,i can not login using mitmdump as a forward proxy.", "issue_status": "Closed", "issue_reporting_time": "2015-04-23T07:37:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1470": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/560", "issue_id": "#560", "issue_summary": "libmproxy as WSGI middleware", "issue_description": "jpic commented on 21 Apr 2015\nWith libmproxy as a WSGI middleware, it would be pretty easy to use it with tools like gunicorn or uwsgi which are made to scale.", "issue_status": "Closed", "issue_reporting_time": "2015-04-21T12:08:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1471": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/559", "issue_id": "#559", "issue_summary": "Parse HTTP request/response from text files", "issue_description": "Semyazz commented on 21 Apr 2015\nCan I, using libmproxy, to load HTTP request from a text file, optionally same for the response and then process them as normal objects in mitmproxy world (modify headers/params, add cookies etc)?\nI want to load a sitemap/requests from Burp to mitmproxy and then reply the whole conversation with additional stuff done by scripts. It's easy to dump stuff from Burp using a built-in export (output format is XML) or via custom few-lines of code plugin to dump everything directly to text files.\nbut I don't know how to parse those in mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2015-04-21T11:14:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1472": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/558", "issue_id": "#558", "issue_summary": "Trusted CAs", "issue_description": "duese22 commented on 15 Apr 2015\nHi,\nby default mitmproxy trusts every given CA.\nI use mitmproxy on a debian based router (as TLS-proxy). Is it possible to limit the trusted CAs to the given cert store in Debian?\nThank you for your great software!", "issue_status": "Closed", "issue_reporting_time": "2015-04-15T16:08:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1473": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/557", "issue_id": "#557", "issue_summary": "pip install error on Ubuntu due to pyOpenSSL breaking change", "issue_description": "dkozel commented on 15 Apr 2015\nI just tried a vanilla sudo pip install mitmproxy from Ubuntu 14.10 and it failed to run with the following error.\nsudo mitmproxy --version\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 2, in <module>\n    from libmproxy.main import mitmproxy\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/main.py\", line 6, in <module>\n    from . import version, cmdline\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/cmdline.py\", line 6, in <module>\n    from . import filt, utils, version\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/filt.py\", line 37, in <module>\n    from .protocol.http import decoded\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/__init__.py\", line 1, in <module>\n    from .primitives import *\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/primitives.py\", line 4, in <module>\n    import netlib.tcp\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 8, in <module>\n    from OpenSSL import SSL \n  File \"/usr/local/lib/python2.7/dist-packages/OpenSSL/__init__.py\", line 8, in <module>\n    from OpenSSL import rand, crypto, SSL \n  File \"/usr/local/lib/python2.7/dist-packages/OpenSSL/rand.py\", line 11, in <module>\n    from OpenSSL._util import (\n  File \"/usr/local/lib/python2.7/dist-packages/OpenSSL/_util.py\", line 6, in <module>\n    from cryptography.hazmat.bindings.openssl.binding import Binding\nImportError: No module named cryptography.hazmat.bindings.openssl.binding\nI resolved this by reverting pyOpenSSL to 0.14. The pip install process had installed pyOpenSSL-0.15.1-py2.py3-none-any.whl\nsudo pip install pyOpenSSL==0.14\nThis was for mitmproxy 0.11.3\nThanks for the very useful software.", "issue_status": "Closed", "issue_reporting_time": "2015-04-15T15:36:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1474": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/556", "issue_id": "#556", "issue_summary": "Installation fails without coherent output on a system with python3 as default.", "issue_description": "fake-name commented on 13 Apr 2015\nInstalling on Ubuntu 14.04, where pip links to pip3, and python to python3, the install process (e.g. running ./dev) fails in a rather ugly manner.\nFurthermore, the setup leaves a big mess when it fails, particularly if you don't have virtualenv installed already - The command to virtualenv fails, but because the script doesn't set -e (exit on first error), it continues and then wound up trying to install a whole pile of crap into my system python.\nIt'd probably be a good idea to preferentially use python2 over python, since mitmproxy doesn't support python3, and you don't really know what python is actually pointing at.\nAnyways:\n./dev needs set -e somewhere.\npython shouldn't be assumed to be an alias for python2, particularly going forwards.\nPython 3 support would be nice, but 2 will be around for a while.", "issue_status": "Closed", "issue_reporting_time": "2015-04-13T04:56:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1475": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/554", "issue_id": "#554", "issue_summary": "Running mitmdump on Windows from the Path requires file extension", "issue_description": "Contributor\nelitest commented on 12 Apr 2015\nI have been working on user installation documentation in regards to #516 and I'm recommending that when users install Python they \"Add Python.exe to Path\" which adds \"C:\\Python27\" and \"C:\\Python27\\Scripts\" to %PATH%. Then the user installs mitmproxy using \"pip install mitmproxy\". Then when you try to run \"mitmdump\", it doesn't find it. Turns out this is due to mitmdump being installed to \"C:\\Python27\\Scripts\\mitmdump\" without a \".py\" file extension.\nThe weird thing is that when I pull from master, and run setup.py manually mitmdump(and mitmweb) gets properly turned into an exe. I looked through setup.py and there isn't anything obvious to me that is doing this. Was this fixed on master and we are just waiting for 0.11.4 to be released and to be loaded onto PyPI or is pip introducing something into the mix?", "issue_status": "Closed", "issue_reporting_time": "2015-04-11T20:42:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1476": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/553", "issue_id": "#553", "issue_summary": "Expect header handling seems broken in mitmproxy", "issue_description": "rcousens commented on 10 Apr 2015\nHello,\nI am encountering problems where requests using an Expect header are not handled correctly by mitmproxy 0.11.3 and cause curl to continually read from the open socket.\nI am using mitmproxy as a reverse proxy in the middle between a curl client and an Elasticsearch upstream server.\nWhen curl sends a POST body over 1024 bytes curl follows RFC-2616 by sending an Expect header (100-CONTINUE).\nWhen I don't use mitmproxy, curl sends it's 100-Continue, gets the response HTTP/1.1 100 Continue, sends the full request body and then 200 OK is returned from the server no problem (ignore the 400 BAD RESPONSE result in the below examples, it's just ElasticSearch saying the index already exists.)\nWith mitmproxy and curl using the Expect header, mitmproxy shows the 100 No content response and then seems to leave curl hanging there indefinitely waiting on a response from the server and mitmproxy itself never records the follow up response after curl sends the full request body.\nI can overcome the issue by forcing curl to not send the Expect header. This seems to indicate to me mitmproxy is not handling the Expect header request/response flow correctly.\ncurl through mitmproxy with Expect header\n* Connected to www.redeye.dev (127.0.0.1) port 19200 (#0)\n> POST /drawings_index HTTP/1.1\n> User-Agent: curl/7.29.0\n> Host: www.redeye.dev:19200\n> Accept: */*\n> Content-Length: 15752\n> Content-Type: application/x-www-form-urlencoded\n> Expect: 100-continue\n> \n* Done waiting for 100-continue\n  0 15752    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0} [data not shown]\n< HTTP/1.1 100 Continue\n< Content-Length: 0\n\n... hangs here indefinitely with curl waiting to read the response from the server\ncurl without mitmproxy with Expect header\n*   Trying 127.0.0.1...\n* Connected to www.redeye.dev (127.0.0.1) port 9200 (#0)\n> POST /drawings_index HTTP/1.1\n> User-Agent: curl/7.29.0\n> Host: www.redeye.dev:9200\n> Accept: */*\n> Content-Length: 15752\n> Content-Type: application/x-www-form-urlencoded\n> Expect: 100-continue\n> \n< HTTP/1.1 100 Continue\n} [data not shown]\n< HTTP/1.1 400 Bad Request\n< Content-Type: application/json; charset=UTF-8\n< Content-Length: 85\n* HTTP error before end of send, stop sending\n< \n{ [data not shown]\n100 15837  100    85  100 15752    532  98652 --:--:-- --:--:-- --:--:-- 99069\n* Closing connection 0\nForcing curl to avoid the Expect header with -H \"Expect: \" through mitmproxy\n* Connected to www.redeye.dev (127.0.0.1) port 19200 (#0)\n> POST /drawings_index HTTP/1.1\n> User-Agent: curl/7.29.0\n> Host: www.redeye.dev:19200\n> Accept: */*\n> Content-Length: 15752\n> Content-Type: application/x-www-form-urlencoded\n> \n} [data not shown]\n* upload completely sent off: 15752 out of 15752 bytes\n< HTTP/1.1 400 Bad Request\n< Content-Type: application/json; charset=UTF-8\n< Content-Length: 85\n< \n{ [data not shown]\n100 15837  100    85  100 15752   2622   474k --:--:-- --:--:-- --:--:--  480k\n* Connection #0 to host www.redeye.dev left intact\nIf I get a chance I'll dig into the source (not a Python programmer by trade) and see if I can work out what's going on.\nmitmproxy without Expect header\n   POST http://www.redeye.dev:9200/drawings_index\n        \u2190 400 application/json 85B 43.22kB/s\nmitmproxy with Expect header\n   POST http://www.redeye.dev:9200/drawings_index\n        \u2190 100 [no content] 30.87kB/s", "issue_status": "Closed", "issue_reporting_time": "2015-04-10T04:49:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1477": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/552", "issue_id": "#552", "issue_summary": "How to only monitor http traffic using libmproxy?", "issue_description": "ghost commented on 9 Apr 2015\nHow can I only monitor http traffic, and ignore all https traffic?\nThanks,\nYang", "issue_status": "Closed", "issue_reporting_time": "2015-04-08T21:36:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1478": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/551", "issue_id": "#551", "issue_summary": "how to make the mitmproxy root CA certificate work with Chrome / Chromium on Linux / Ubuntu", "issue_description": "Prinzhorn commented on 8 Apr 2015\nI'm on Ubuntu 14.04\nTook me a while to figure this out (I was not able to find any information on this when searching with the \"mitmproxy\" keyword). It's working out-of-the box with Firefox but not at all with Chrome.\nThe certificate downloaded from mitm.it needs to be added using certutil (https://code.google.com/p/chromium/wiki/LinuxCertManagement)\ncertutil -d sql:$HOME/.pki/nssdb -A -t \"C,,\" -n <certificate nickname> -i <certificate filename>\nI don't know where the best place to document this is. Starting now people searching for it will at least find this entry.", "issue_status": "Closed", "issue_reporting_time": "2015-04-08T14:22:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1479": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/550", "issue_id": "#550", "issue_summary": "I can't open Mitmproxy (ImportError: No module named main)", "issue_description": "authmane512 commented on 8 Apr 2015\nHey everybody!\nI want to open Mitmproxy, but if I type that in terminal:\nmitmproxy\nI get that:\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 2, in\nfrom libmproxy.main import mitmproxy\nImportError: No module named main\nI installed Mitmproxy like this:\nsudo pip2 install mitmproxy\nThanks for any help!", "issue_status": "Closed", "issue_reporting_time": "2015-04-07T22:13:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1480": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/546", "issue_id": "#546", "issue_summary": "Error when trying to start server playback", "issue_description": "evrom commented on 1 Apr 2015\nI am trying to replay the server from a file. The file opens perfectly fine in mitmproxy.\nThis is on mitmproxy 0.11.3\nI get this error when hitting 'S' in mitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 614, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/display_common.py\", line 757, in run_wrapper\n    return fn()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 841, in loop\n    self.prompt_execute()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 766, in prompt_execute\n    msg = p(txt, *args)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 524, in server_playback_path\n    self.options.replay_ignore_params, self.options.replay_ignore_content\nTypeError: start_server_playback() takes exactly 9 arguments (8 given)\n\nmitmproxy has crashed!\nAnd I get this error when executing mitmproxy -S mitmoutput.mitm\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 3, in <module>\n    mitmproxy()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/main.py\", line 97, in mitmproxy\n    m = console.ConsoleMaster(server, console_options)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 430, in __init__\n    self.server_playback_path(options.server_replay)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 524, in server_playback_path\n    self.options.replay_ignore_params, self.options.replay_ignore_content\nTypeError: start_server_playback() takes exactly 9 arguments (8 given)", "issue_status": "Closed", "issue_reporting_time": "2015-03-31T23:08:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1481": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/545", "issue_id": "#545", "issue_summary": "navigation features", "issue_description": "Kidlike commented on 31 Mar 2015\nThanks for this awesome tool.\nSomething that would make it much more usable is these few key features of less (not the css pre-processor )\nNamely:\nshift + . or g to navigate to the end of the list\nshift + , or shift + g to navigate to the start of the list\nshift + f to start following the list (auto scrolling) and then ctrl + c to cancel\n/ and shift + / to search forwards and backwards respectively", "issue_status": "Closed", "issue_reporting_time": "2015-03-31T15:58:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1482": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/542", "issue_id": "#542", "issue_summary": "Rename \"Limit\" Feature", "issue_description": "Member\nmhils commented on 29 Mar 2015\nIn a nutshell, I feel that \"filter\" describes the limit/filter feature more accurately than \"limit\". Also, f is not taken as a keyboard shortcut. There were a few users in #mitmproxy asking for said feature, not realizing that limit does provide this functionality.", "issue_status": "Closed", "issue_reporting_time": "2015-03-29T01:40:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1483": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/541", "issue_id": "#541", "issue_summary": "--setheader removes header", "issue_description": "myguelraton commented on 28 Mar 2015\nSteps to reproduce the problem:\n$ mitmdump --setheader '/~hs Server/Server/something'\n$ curl -svo /dev/null -x 0:8080 google.com\nor\n$ mitmdump --setheader '/~hs gws/Server/something\n$ curl -svo /dev/null -x 0:8080 google.com\nWhat is the expected behavior?\nthe goal is to set a header (server) only if it exists. replace\nthe server header (only if it exists) with \"server: something\".\nWhat went wrong?\nthe header (server) ends up being removed from the response. instead\nof \"server: something\" there is no server header in the response at all.\nAny other comments?\n--setheader will remove a header if the filter matches either the name\nor the value of the header to be set.\nmitmproxy version: 0.11.3\nOperating System: ubuntu/12.04", "issue_status": "Closed", "issue_reporting_time": "2015-03-27T23:19:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1484": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/540", "issue_id": "#540", "issue_summary": "AttributeError: 'NoneType' object has no attribute 'ssl_established'", "issue_description": "byteit101 commented on 27 Mar 2015\nI got the following error\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py\", line 99, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 982, in handle_messages\n    while self.handle_flow():\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 1069, in handle_flow\n    self.process_server_address(flow)  # The inline script may have changed request.host\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 1319, in process_server_address\n    self.live.change_server(address, ssl=ssl)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/primitives.py\", line 230, in change_server\n    ssl != self.c.server_conn.ssl_established\nAttributeError: 'NoneType' object has no attribute 'ssl_established'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nWith the following input (yes, the host does resolve and works fine. Its on a private test net and works 100% without mitmproxy):\nGET /m2p1.php HTTP/1.1\nTE: deflate,gzip;q=0.3\nConnection: TE, close\nHost: server-47.n7.alliance.earth\nUser-Agent: libwww-perl/6.03\nwith the following script:\nfrom libmproxy import controller, proxy\nimport os,re\nfrom libmproxy.proxy.server import ProxyServer\n\nclass StickyMaster(controller.Master):\n    def __init__(self, server):\n        controller.Master.__init__(self, server)\n\n    def run(self):\n        try:\n            return controller.Master.run(self)\n        except KeyboardInterrupt:\n            self.shutdown()\n\n    def handle_request(self, msg):\n        hid = (msg.request.host, msg.request.port)\n        print \"hello\"\n        print msg.request\n        msg.reply()\n\nconfig = proxy.ProxyConfig(\nport=8080\n,http_form_in=\"relative\"\n,http_form_out=\"relative\"\n)\nserver = ProxyServer(config)\nm = StickyMaster(server)\nm.run()", "issue_status": "Closed", "issue_reporting_time": "2015-03-27T02:03:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1485": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/535", "issue_id": "#535", "issue_summary": "mitmproxy -c throws an exception.", "issue_description": "Contributor\ngato commented on 26 Mar 2015\nrunning ./mitmproxy -c file\nthrows an exception\nTraceback (most recent call last):\n  File \"./mitmproxy\", line 3, in <module>\n    mitmproxy()\n  File \"/home/gato/trabajos/mitmproxy/libmproxy/main.py\", line 97, in mitmproxy\n    m = console.ConsoleMaster(server, console_options)\n  File \"/home/gato/trabajos/mitmproxy/libmproxy/console/__init__.py\", line 191, in __init__\n    self.client_playback_path(options.client_replay)\n  File \"/home/gato/trabajos/mitmproxy/libmproxy/console/__init__.py\", line 301, in client_playback_path\n    flows = self._readflows(path)\n  File \"/home/gato/trabajos/mitmproxy/libmproxy/console/__init__.py\", line 296, in _readflows\n    return flow.read_flows_from_paths([path])\n  File \"/home/gato/trabajos/mitmproxy/libmproxy/flow.py\", line 998, in read_flows_from_paths\n    path = os.path.expanduser(path)\n  File \"/usr/lib/python2.7/posixpath.py\", line 261, in expanduser\n    if not path.startswith('~'):\nAttributeError: 'list' object has no attribute 'startswith'\nrunning ./mitmdump -c file works just fine.", "issue_status": "Closed", "issue_reporting_time": "2015-03-25T19:57:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1486": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/534", "issue_id": "#534", "issue_summary": "mitmproxy onboarding app HTTP 400", "issue_description": "rubenvereecken commented on 25 Mar 2015\nI was trying to fiddle with the onboarding app settings because I couldn't get the default mitm.it to work (while I easily could previously). To try it out on my pc I invoked it as such:\nmitmproxy --app-port 8080 --app-host localhost\nAfter pointing my browser to http://localhost:8080/ I got the following HTTP 400 error.\nHttpError('Invalid HTTP request form (expected: absolute, got: relative)',)\nNot really sure whether this was indeed mitmproxy so I checked the header and indeed it was. It also says I'm running version 0.11: Server:mitmproxy 0.11.\nAny idea why this may have occurred?\nSlightly related there is another small issue. After restarting the app on port 80 (and confirming it was offline beforehand) it refused to restart on port 80 but in fact was alive on 8080 again. Maybe it somehow incorrectly remembers on which port it used to be?", "issue_status": "Closed", "issue_reporting_time": "2015-03-25T12:02:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1487": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/533", "issue_id": "#533", "issue_summary": "Server playback mode doesn't use certificates from the saved response file", "issue_description": "Contributor\nmonoxygen commented on 25 Mar 2015\nCertificates are being stored in the saved response file when initial recording traffic, but during server playback these certificates are not used (although they are loaded into the flow object).\nI ran into this issue because a rogue server was sending back the wrong certificate, and thus I was getting the bad certificate even though I thought the certificates were being pulled from my saved response file.\n--no-upstream-cert works around the issue, but I don't get the same altnames as the saved certificate.\nI can't find exactly where in the code this is going wrong, but I did notice in libmproxy/proxy/server.py that find_cert() is always using the upstream cert even for server playback, since it seems to have a connection to the upstream server. That's unexpected too, I don't want my server playbacks to be connecting upstream, they should only be communicating with the client by returning responses from the saved response file.", "issue_status": "Closed", "issue_reporting_time": "2015-03-25T01:21:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1488": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/531", "issue_id": "#531", "issue_summary": "mitmproxy console: crash when copying binary data to clipboard", "issue_description": "Member\ncortesi commented on 22 Mar 2015\nTraceback (most recent call last):\n  File \"/Users/cortesi/mitmproxy/mitmproxy/libmproxy/console/__init__.py\", line 426, in run\n    self.loop.run()\n  File \"/Users/cortesi/mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/Users/cortesi/mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"/Users/cortesi/mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"/Users/cortesi/mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\n    self._watch_files[fd]()\n  File \"/Users/cortesi/mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/raw_display.py\", line 392, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/Users/cortesi/mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/raw_display.py\", line 492, in parse_input\n    callback(processed, processed_codes)\n  File \"/Users/cortesi/mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 399, in _update\n    self.process_input(keys)\n  File \"/Users/cortesi/mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/main_loop.py\", line 499, in process_input\n    k = self._topmost_widget.keypress(self.screen_size, k)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/libmproxy/console/window.py\", line 14, in keypress\n    k = urwid.Frame.keypress(self, self.master.loop.screen_size, k)\n  File \"/Users/cortesi/mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/urwid/container.py\", line 1116, in keypress\n    return self.footer.keypress((maxcol,),key)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/libmproxy/console/statusbar.py\", line 105, in keypress\n    return self.ab.keypress(*args, **kwargs)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/libmproxy/console/statusbar.py\", line 69, in keypress\n    self.prompt_execute(k)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/libmproxy/console/statusbar.py\", line 92, in prompt_execute\n    msg = p(txt, *args)\n  File \"/Users/cortesi/mitmproxy/mitmproxy/libmproxy/console/common.py\", line 259, in copy_flow\n    pyperclip.copy(data)\n  File \"/Users/cortesi/mitmproxy/venv.mitmproxy/lib/python2.7/site-packages/pyperclip/__init__.py\", line 88, in _copyOSX\n    p.communicate(input=text.encode('utf-8'))\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xc9 in position 2: ordinal not in range(128)", "issue_status": "Closed", "issue_reporting_time": "2015-03-22T00:18:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1489": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/530", "issue_id": "#530", "issue_summary": "mitmproxy console: client playback indicator should be cleared after playback completes", "issue_description": "Member\ncortesi commented on 22 Mar 2015\nStart a client playback. Observe that the client playback indicator persists after playback completes. Pressing \"c\" again to stop client playback does not clear the indicator either.", "issue_status": "Closed", "issue_reporting_time": "2015-03-21T22:37:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1490": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/529", "issue_id": "#529", "issue_summary": "mitmdump server playback has very slow requests per second", "issue_description": "Contributor\nmonoxygen commented on 22 Mar 2015\nI have a setup where multiple clients are hitting an instance of mitmdump which is doing server playback. If enough of these clients start connecting, I start to see very slow page loads and sometimes connection resets.\nI ran ApacheBench against mitmdump to see what sort of performance I was getting, and it was extremely low, about 340 requests per second on my machine (OS X, 2013 MacBook Pro).\n$ mitmdump --no-pop --keepserving --anticache -p8888 -S /tmp/file\n$ ab -c20 -n1000 -X '127.0.0.1:8888' -k 'http://simplewebsite/'\nConcurrency Level: 20\nTime taken for tests: 2.946 seconds\nComplete requests: 1000\nFailed requests: 0\nKeep-Alive requests: 0\nTotal transferred: 7454000 bytes\nHTML transferred: 7261000 bytes\nRequests per second: 339.47 #/sec\nTime per request: 58.915 ms\nTime per request: 2.946 [ms](mean, across all concurrent requests)\nTransfer rate: 2471.10 [Kbytes/sec] received\nIf I increase ApacheBench's connection count to 30 or greater, then it just gets 'apr_socket_recv: Connection reset by peer (54)'.", "issue_status": "Closed", "issue_reporting_time": "2015-03-21T18:38:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1491": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/528", "issue_id": "#528", "issue_summary": "Connection refused for only http requests", "issue_description": "yashasvigirdhar commented on 19 Mar 2015\nI set up mitmproxy on my mac and installed the certificate on my android device.\nWhat I did was : I started the mitmproxy server on the system, and added manual proxy settings to the wifi settings in my android to point proxy server to my system's ip with port 8080.\nI am facing a issue in accessing the internet on my phone through mitmproxy. For some reason, some of the requests are working perfectly (the https ones I guess) (see the image), but for all the http requests, I am getting connection refused error on my mitmproxy server.\nHere is a screenshot with some example requests:", "issue_status": "Closed", "issue_reporting_time": "2015-03-19T17:57:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1492": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/527", "issue_id": "#527", "issue_summary": "Support for non-standard HTTP versions (Shoutcast)", "issue_description": "epitron commented on 19 Mar 2015\nI noticed an odd bug in mitmproxy: if I try to connect to a shoutcast stream, the client receives a 502 error, and the mitmproxy curses UI prints HttpError(\"Invalid HTTP version in line: 'ICY'\",) in red with no HTTP code. However, if I look at my network connections, mitmproxy has connected to the shoutcast stream and is downloading it.\nIt also doesn't write any of the data that it's streaming to the flows file when I use the -w option.\nIt's like there's zombie connection that mitmproxy has forgotten about.\nExample:\n$ http_proxy=localhost:8080 curl http://xstream1.somafm.com:8002\n            <html>\n                <head>\n                    <title>502 Bad Gateway</title>\n                </head>\n                <body>HttpError(\"Invalid HTTP version in line: 'ICY'\",)</body>\n            </html>\nWhen I check my network traffic, mitmproxy is still streaming the audio from somafm.com. If I connect multiple times, it'll have multiple downloading streams. They won't stop until I kill the process.\n(This happens on the latest git checkout.)", "issue_status": "Closed", "issue_reporting_time": "2015-03-19T16:27:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1493": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/525", "issue_id": "#525", "issue_summary": "SSL Error HttpErrorConnClosed version 0.11", "issue_description": "loretoparisi commented on 18 Mar 2015\nI'm running nodejs listening at port 8181 on locahost\nAfter last update from release 0.10 to 0.11 starting a upstream/forward proxy:\n mitmproxy -U http://localhost:8181 -p 11112\nI get SSL errors when connecting to localhost:\n>> CONNECT apic.musixmatch.com:443\n           \u2190 HttpErrorConnClosed('Server disconnect.',)\n   CONNECT apic.musixmatch.com:443\n           \u2190 HttpErrorConnClosed('Server disconnect.',)\n\n(Originating URI is over HTTPS)\nThe error happens in upstream -Umode only.", "issue_status": "Closed", "issue_reporting_time": "2015-03-18T11:15:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1494": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/522", "issue_id": "#522", "issue_summary": "mitmproxy will stuck / crash if pressing `q` after entering the help section by pressing `?`", "issue_description": "Contributor\nlegendtang commented on 18 Mar 2015\nTraceback (most recent call last):\n  File \"/home/legend/mitmproxy/libmproxy/console/__init__.py\", line 805, in run\n    self.loop.run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 278, in run\n    self._run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 375, in _run\n    self.event_loop.run()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 678, in run\n    self._loop()\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 715, in _loop\n    self._watch_files[fd]()\n  File \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 392, in <lambda>\n    event_loop, callback, self.get_available_raw_input())\n  File \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 492, in parse_input\n    callback(processed, processed_codes)\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 396, in _update\n    keys = self.input_filter(keys, raw)\n  File \"/usr/lib/python2.7/site-packages/urwid/main_loop.py\", line 535, in input_filter\n    return self._input_filter(keys, raw)\n  File \"/home/legend/mitmproxy/libmproxy/console/__init__.py\", line 616, in input_filter\n    elif k in self.onekey:\nTypeError: 'in <string>' requires string as left operand, not tuple\n\nmitmproxy has crashed!\nPlease lodge a bug report at:\n    https://github.com/mitmproxy/mitmproxy\nShutting down...\nI caught this after several tries. It's weird how k became a tuple.\nI check the code around libmproxy/console/__init__.py:616 and have no idea about this output.\nOccasionally, it would stuck without crashing and even ^C lost its function. At this situation, I used top to track the CPU / Mem usage but it seemed to be fine.\nI remembered that I didn't get this when I installed the git version of mitmproxy for the first time. It might relate to recent changes.", "issue_status": "Closed", "issue_reporting_time": "2015-03-17T19:03:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1495": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/521", "issue_id": "#521", "issue_summary": "mitmdump output format", "issue_description": "raymontag commented on 17 Mar 2015\nHey,\nit would be great if one could get (optional) an output format similar to the one of mitmproxy for POST data and response data. The hex dump is nice but I would like to see something which is more convenient for searching in the data.\nKind regards", "issue_status": "Closed", "issue_reporting_time": "2015-03-17T10:37:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1496": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/518", "issue_id": "#518", "issue_summary": "A clean `npm install` for mitmweb unavailable now due to `react@0.13.0` released", "issue_description": "Contributor\nlegendtang commented on 14 Mar 2015\nA clean npm install shows the following:\nnpm ERR! argv \"node\" \"/usr/local/lib/node_modules/cnpm/node_modules/.bin/npm-for-cnpm\" \"--userconfig=/home/legend/.cnpmrc\" \"--disturl=http://npm.taobao.org/mirrors/node\" \"--cache=/home/legend/.cnpm\" \"--registry=http://registry.npm.taobao.org\" \"install\"\nnpm ERR! node v0.10.36\nnpm ERR! npm  v2.6.0\nnpm ERR! code EPEERINVALID\n\nnpm ERR! peerinvalid The package react does not satisfy its siblings' peerDependencies requirements!\nnpm ERR! peerinvalid Peer react-router@0.12.4 wants react@0.12.x\n\nnpm ERR! Please include the following file with any support request:\nnpm ERR!     /home/legend/mitmproxy/web/npm-debug.log\nTransparently, there is an compatibility issue between react-router and react at the moment.\nA few days ago, package react v0.13.0 published, but an amount of packages which suits to react@0.12.x only haven't updated yet.\nSimply modify the package.json would work.", "issue_status": "Closed", "issue_reporting_time": "2015-03-14T18:27:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1497": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/516", "issue_id": "#516", "issue_summary": "Improving mitmproxy\u2019s Documentation", "issue_description": "Contributor\nelitest commented on 14 Mar 2015\nI have some suggestions and want to work on mitmproxy\u2019s documentation. I wanted to throw my thoughts out to the community so that I could gather some feedback and ideas before doing a bunch of work and dropping in with some PRs. This is a great project, but I feel like it needs better docs! If it would be better I can get these split out into different issues, so that they can be discussed and worked on separately separately.\n1. Spruce up the installation instructions.\nThe Ubuntu instructions need to be fleshed out a bit as I think there are steps missing that even a technical person might not think are obvious. Been a while since I used OS X, and even when I did use it, I\u2019m not familiar with how python works on it(homebrew vs. XCode). Perhaps we could have a pros and cons of why you would install from homebrew vs use the python that comes with XCode. I assume it boils down to a \u201cDo you mind old python vs more setup\u201d thing. I may need some help from someone more familiar with mitmproxy on OS X on this one. Or perhaps make the decision to document one of the methods say, homebrew over XCode.\n2. Developer docs\nRelated to this but somewhat separate I think we should also create developer installation docs so that people know how to get set up to help contribute. Explain what Countershape is and how to write documentation.\n3. Command line options in one place\nI think we need to have a page that lists all of the command line options for each tool rather than having them scattered throughout the features/examples. I\u2019m aware that you could make the argument \u201cjust specify --help at the command line\u201d. The purpose of the command line options page would give someone who hasn\u2019t even installed mitmproxy yet a one-pager on what you can do with mitmproxy, I know this because it was the first page I looked for when I found mitmproxy. I think that it is important that this page be short and sweet and to the point, perhaps linking to related examples.\n4. Introduction docs\nI would like to hear some feedback on how people feel about the \u201cHow mitmproxy works\u201d page vs the \u201cModes of Operation\u201d page, I feel like this is probably amongst the most polished documentation within this project, but perhaps there is a bit of duplication between the two pages. Maybe we can re-work these two pages by splitting each of mitmproxy\u2019s modes into its own page, and then take the section related to that mode of operation from the \u201chow mitmproxy works\u201d page and put it on that page.\n5. Navigation\nAs features are added to mitmproxy(I think mitmweb is going to require a decent number of docs) the navigation of the documentation pages is going to become more unwieldy. Do we actually need to have every documentation page have it\u2019s own line in the navigation? The Installing Certificates section, for example, could condense the navigation for these into 1-3 lines, rather than 9, in the navigation and then link to installing the cert for each OS off of one of those pages.\n6. Tutorials vs Features vs Examples\nI think a lot of the things that are listed as \u201cFeatures\u201d could be subsumed by the previously mentioned \u201ccommand line options\u201d page. Some of these features have tutorials associated with them and I suggest we split them out and link to them from the related command line option, as well as them being in the navigation. I think the briefer we can be on the theory behind a feature, focusing on not repeating ourselves, and having more examples the better off we will be.\n7. Tutorials focusing on the means not the end\nPerhaps we should focus the tutorials on what it is you are actually doing rather than the result. For example, the \u201cSetting highscores on Apple's GameCenter\u201d tutorial is a fun way to demonstrate replaying a request, but I don\u2019t know that before I click on and read through the page. Perhaps it would be better to have a tutorial page that is about \u201cReplaying requests\u201d and \u201chere is an example(or examples) of how to do that\u201d.\n8. Countershape\nLastly I wanted to discuss Countershape(I know it is @cortesi\u2019s baby :)). Using Countershape is a relatively simple and efficient way of generating good looking documentation, once it is set up. I feel like the set up part is a bit of an obstacle to new contributor\u2019s, to wrap their minds around, and possibly even regular contributors, that may be preventing people from doing something that is already a maintenance task. I think the idea behind countershape is that you shouldn\u2019t have to need to set it up in order to contribute documentation, but I find myself wanting to test just to be sure. Maybe I\u2019m too type A.\nI took a look around at how other Open Source projects do documentation I took a look at Sphinx. I think it is what the python docs are written in. Ultimately it is overkill for this project, and would be more complex to setup and \u201clearn\u201d as it has its own syntax.\nI saw some suggestions about using LaTeX as it works well with version control, and could be used to generate HTML. Ultimately this is probably in the same category as sphinx.\nI think the best potential alternative is to use Github markdown pages. They don\u2019t look as nice, but they might be easier to contribute to. Maybe we have a working set of docs in master that is written in markdown and then each release we convert those working copies to Countershape. There is also MkDocs, which lets you convert markdown in a similar way that Countershape does HTML.\nMaybe we just keep using Countershape and need to have a section of the documentation that helps people through the process of setting up Countershape and explaining how it works? \u201dHow to document mitmproxy\u201d or some such? Or maybe have a way for people to throw together a quick Word/Open Office doc and then give that to someone in the project who can convert it into something that is going to make sense to Countershape?\nConclusion\nI'm going to start with the least controversial stuff sometime this weekend hopefully and also prioritize other issues that are open and tagged \"docs\" as many of them slot nicely into the \"command line options page\" for example. Let me know what you all think.\nThanks!\nJim", "issue_status": "Closed", "issue_reporting_time": "2015-03-13T22:50:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1498": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/514", "issue_id": "#514", "issue_summary": "Add support for replay-ignore-payload-param with multipart/form-data", "issue_description": "krzysiekbielicki commented on 10 Mar 2015\nCurrently Server side reply supports only application/x-www-form-urlencoded payload fields ignoring while matching requests.", "issue_status": "Closed", "issue_reporting_time": "2015-03-10T09:44:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1499": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/511", "issue_id": "#511", "issue_summary": "mitmproxy fails with 'You are using an outdated version of pyOpenSSL' on OS X 10.10.2", "issue_description": "jirohori commented on 8 Mar 2015\nI cannot start mitmproxy caused by the following failure:\nYou are using an outdated version of pyOpenSSL: mitmproxy requires pyOpenSSL 0.14 or greater.\nYour pyOpenSSL 0.13.1 installation is located at /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/OpenSSL\nBut pyopenssl 0.14 is already installed. I also have tried to uninstall/install (again) mitmproxy and/or pyopenssl. Same result. I am using OS X 10.10.2.", "issue_status": "Closed", "issue_reporting_time": "2015-03-08T09:07:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1500": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/510", "issue_id": "#510", "issue_summary": "--setheader docs", "issue_description": "Member\nmhils commented on 7 Mar 2015\nWe should definitely add some examples, it's not really understandable at the moment.\n--setheader :~q:Host:www.gmail.com:", "issue_status": "Closed", "issue_reporting_time": "2015-03-07T17:34:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1501": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/506", "issue_id": "#506", "issue_summary": "mitmweb: FlowActions undefined when New a mitmproxy (Delete all flows)", "issue_description": "Contributor\nlegendtang commented on 6 Mar 2015\nIt should be requiring or defining issue. Maybe pretty handy.", "issue_status": "Closed", "issue_reporting_time": "2015-03-06T08:32:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1502": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/504", "issue_id": "#504", "issue_summary": "mitmweb: fix filters", "issue_description": "Member\nmhils commented on 5 Mar 2015\nSomething broke the filters, not sure what.", "issue_status": "Closed", "issue_reporting_time": "2015-03-05T16:35:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1503": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/503", "issue_id": "#503", "issue_summary": "mitmweb: fix live updates", "issue_description": "Member\nmhils commented on 5 Mar 2015\nmitmweb already connects to a WebSocket channel and fetches live updates. A recent commit apparently broke this functionality and the UI doesn't get refreshed.", "issue_status": "Closed", "issue_reporting_time": "2015-03-05T00:59:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1504": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/502", "issue_id": "#502", "issue_summary": "mitmweb: Fix sourcemaps", "issue_description": "Member\nmhils commented on 5 Mar 2015\nWe have a pretty cool gulp-based build system for mitmweb. You'll find the web sources in web/ and gulp copies the bundled files into libmproxy/web/static/. This works great, but the sourcemaps we're generating are still wrong:\nWe should fix this, they are super handy when debugging/developing within the chrome devtools.", "issue_status": "Closed", "issue_reporting_time": "2015-03-05T00:57:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1505": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/498", "issue_id": "#498", "issue_summary": "Improve PR #496", "issue_description": "Member\nmhils commented on 4 Mar 2015\nPRs are not shown on the issues page, so this issue is just a placeholder. Please go to #496 for the details.", "issue_status": "Closed", "issue_reporting_time": "2015-03-04T15:56:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1506": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/497", "issue_id": "#497", "issue_summary": "Crash when resizing (OS X, 0.11.4)", "issue_description": "Contributor\nzbuc commented on 4 Mar 2015\nI had mitmproxy in a small terminal window, then double clicked the terminal window to maximize and it crashed when attempting to redraw.\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/console/__init__.py\", line 628, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/Library/Python/2.7/site-packages/urwid/display_common.py\", line 757, in run_wrapper\n    return fn()\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/console/__init__.py\", line 854, in loop\n    self.statusbar.message(\"\")\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/console/__init__.py\", line 253, in message\n    self.master.drawscreen()\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/console/__init__.py\", line 799, in drawscreen\n    self.ui.draw_screen(size, canvas)\n  File \"/Library/Python/2.7/site-packages/urwid/raw_display.py\", line 749, in draw_screen\n    if osb and osb[y] == row:\nIndexError: list index out of range\nI'm having trouble reproducing, but filing the bug with the stack trace in case you see an obvious reason this can happen.", "issue_status": "Closed", "issue_reporting_time": "2015-03-04T04:25:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1507": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/495", "issue_id": "#495", "issue_summary": "Google Summer of Code: Getting Started", "issue_description": "Member\nmhils commented on 3 Mar 2015\nmitmproxy is participating under the umbrella of the Honeynet project in the Google Summer of Code 2015. We have two exciting project proposals and are open for other ideas as well.\nThis issue is targeted at potential GSoC students to help them getting started and write a strong proposal. If there are any questions, please don't hesistate to comment below\nPicking the right students for a Google Summer of Code is hard - we really want to encourage people to get involved into open source, but how do we determine who's best suited for a particular project? Here comes your part: Show us that you're super enthusiastic, autonomous and good at coding!\nMost importantly, your proposal should demonstrate two things: You have the ability to execute and you truly believe that mitmproxy is an interesting project to work on.\nDemonstrate that you are capable of fulfilling the project!\nWhile many of you probably have a good theoretical background from your university, you should show us that you can code as well:\nDo you have a cool/interesting side project or class project? Show it to us! Even better if it's open source and we can read the code!\nHave you ever contributed to an open source project? Show us what you did!\nNo previous projects you could show? Add a feature and/or fix a bug in mitmproxy!\nAny of these may suffice - if you are a django core contributor, we won't be questioning your coding skills.\nDemonstrate that you really want to contribute to mitmproxy!\nThe brick walls are there for a reason. The brick walls are not there to keep us out; the brick walls are there to give us a chance to show how badly we want something. The brick walls are there to stop the people who don't want it badly enough. They are there to stop the other people! [1]\nThis year, there are 137 accepted GSoC organizations, each of them with multiple projects. Now, why do you want to work on mitmproxy specifically? We do not just want to hear a chorus of praise here (\"mitmproxy is a great tool\"). Instead, play around with it and tell us about your experiences:\nUse mitmproxy to analyze a popular Android or iOS app or anything else. There are many hidden treasures/security issues to be found [2]! Show us what you analyzed (screenshots), what you found, where mitmproxy was good/not good etc! :-)\nWrite a nice inline script that does something cool with a webpage! For example, we have an example script that turns all PNGs upside down (src). Try to come up with something creative :-)\nAgain, a good way to show that you're a good candidate is to fix a bug, propose or implement a feature, add something that was unclear to you to the docs, etc.\nGet in touch!\nWe hang out on IRC (#gsoc-honeynet at Freenode, #mitmproxy at irc.oftc.net), then there is the mailing list and of course you can just comment here. Try to ask us good questions!\nGood starting points for a contribution\nContributing to mitmproxy directly is an optional part of your proposal. If you can convince us by other means that you'd be a strong student (e.g. strong past experience with other open source projects), that's good, too.\nFix bugs or add features. Make sure to filter the issue list by \"good first contribution\", which includes suitable tasks.\nAdd some docstrings to the code! Read a bit through mitmproxy or netlib, take a somewhat complex undocumented class/function, find out what it does and add a quick doc string explaining what it is.\nWrite a cool inline script!\nImprove the docs. If you're proficient in English, feel free to make our docs better! If you're not a native speaker, try to focus on the other tasks though.\nWeb UI: Add something useful! :-)\nMake sure to have a plan!\nFor your GSoC proposal (please use the template!), you need to write down a roadmap/timeline for your project. Think about which features you need to develop to accomplish your goal, split your project into subtasks and make sure that you'll end up with a viable timeline. Having roughly one dedicated task per week would be a good way to track the progress of the project as well. If you already identified potential issues/caveats for your endeavour, make sure to discuss them in the proposal as well!\nLast but not least: GSoC is fun. Enjoy it! :-)", "issue_status": "Closed", "issue_reporting_time": "2015-03-03T17:19:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1508": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/491", "issue_id": "#491", "issue_summary": "use entry points, not scripts", "issue_description": "Member\nmhils commented on 27 Feb 2015\nWe should use setuptool's entry_points instead of scripts - scripts don't work on Windows.", "issue_status": "Closed", "issue_reporting_time": "2015-02-27T13:42:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1509": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/490", "issue_id": "#490", "issue_summary": "Mitmproxy crashed with 'unknown certificate type'", "issue_description": "bayandin commented on 27 Feb 2015\nSometimes mitmproxy is crashing with error:\nTraceback (most recent call last):\n  File \"/Users/bayandin/tools/mitmproxy/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 99, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"/Users/bayandin/tools/mitmproxy/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 982, in handle_messages\n    while self.handle_flow():\n  File \"/Users/bayandin/tools/mitmproxy/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1055, in handle_flow\n    ret = self.process_request(flow, req)\n  File \"/Users/bayandin/tools/mitmproxy/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1248, in process_request\n    return self.process_connect_request(self.c.server_conn.address)\n  File \"/Users/bayandin/tools/mitmproxy/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1395, in process_connect_request\n    self.c.establish_ssl(server=True, client=True)\n  File \"/Users/bayandin/tools/mitmproxy/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 215, in establish_ssl\n    chain_file=chain_file\n  File \"/Users/bayandin/tools/mitmproxy/lib/python2.7/site-packages/libmproxy/proxy/connection.py\", line 66, in convert_to_ssl\n    tcp.BaseHandler.convert_to_ssl(self, *args, **kwargs)\n  File \"/Users/bayandin/tools/mitmproxy/lib/python2.7/site-packages/netlib/tcp.py\", line 428, in convert_to_ssl\n    ctx = self._create_ssl_context(cert, key, **sslctx_kwargs)\n  File \"/Users/bayandin/tools/mitmproxy/lib/python2.7/site-packages/netlib/tcp.py\", line 412, in _create_ssl_context\n    ctx.use_certificate(cert.x509)\n  File \"/Users/bayandin/tools/mitmproxy/lib/python2.7/site-packages/OpenSSL/SSL.py\", line 406, in use_certificate\n    _raise_current_error()\n  File \"/Users/bayandin/tools/mitmproxy/lib/python2.7/site-packages/OpenSSL/_util.py\", line 22, in exception_from_error_queue\n    raise exceptionType(errors)\nError: [('SSL routines', 'SSL_SET_CERT', 'unknown certificate type')]\n\nSegmentation fault: 11\nI use Python 2.7.9, OS X 10.10 and use mitm proxy for capturing traffic from Android 5.0.1", "issue_status": "Closed", "issue_reporting_time": "2015-02-27T07:03:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1510": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/487", "issue_id": "#487", "issue_summary": "Display milliseconds for each request", "issue_description": "Contributor\ncellularmitosis commented on 26 Feb 2015\nI spend a lot of time developing a mobile application against an API, and most of the time my phone is going through mitmproxy.\nIt would be great if each request showed how milliseconds (or seconds, yikes!) it took each request to come back from the server, so that I could easily keep track of which API endpoints need some optimization attention.\ne.g. instead of this:\nPOST https://p09-ckdatabase.icloud.com/api/client/user/quota\n\u2190 200 application/x-protobuf 78B 39.28kB/s\nit would look something like this:\nPOST https://p09-ckdatabase.icloud.com/api/client/user/quota\n\u2190 200 application/x-protobuf 78B 39.28kB/s (237ms)\nor this:\nPOST https://p09-ckdatabase.icloud.com/api/client/user/quota\n\u2190 200 application/x-protobuf 78B 39.28kB/s (1.32s)\nor this:\nPOST https://p09-ckdatabase.icloud.com/api/client/user/quota\n\u2190 200 application/x-protobuf 78B 39.28kB/s (27.9s)\n(i.e. three significant digits would be great)", "issue_status": "Closed", "issue_reporting_time": "2015-02-26T16:41:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1511": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/486", "issue_id": "#486", "issue_summary": "reverse proxy with multiple hosts as destination", "issue_description": "chaserhkj commented on 25 Feb 2015\nHi, there\nI wonder if mitmproxy could be used as a reverse proxy that accepts multiple destination which routes the request according to the host: header of the request.\nThat is to say, it acts, like this:\nmitmproxy listen on 80 port on the proxy machine\non the client machine, use some technique to let it point some domains (take www.a.com and www.b.com for examples) to the proxy machine (such as modifying hosts file or dns hijacking).\nrequests are made to the proxy machine, and mitmproxy uses host: header to determine the destination.\nrequests with header host: www.a.com will be routed to http://www.a.com\nrequests with header host: www.b.com will be routed to http://www.b.com\nmitmproxy could do interception on all requests\nIt's quite like setting up an apache httpd on virtualhost with server www.a.com and on virtualhost with server www.b.com, both of which virtualhosts are configured with proper reverse proxy settings.\nI know that as the cert is delivered during the initialization of TLS connection, before any headers are transmitted, so it may cause cert issues while the cert hostname does not match with url hostname in https proxies. But let's assume that this will be used in http proxies or a wildcard cert would be used to match the hostnames.\nIs it possible to do this in the mitmproxy framework by some already implemented feature, writing inline scripts or using libmitmproxy?\nThanks,\nHappy Hacking!", "issue_status": "Closed", "issue_reporting_time": "2015-02-25T09:08:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1512": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/485", "issue_id": "#485", "issue_summary": "Method to share data between script calls", "issue_description": "skandragon commented on 23 Feb 2015\nI am currently doing a very brute force method of connecting to a MongoDB database, inserting one record, and then closing it all down. Is there a method to store data to be shared among runs of the script? I have to admit a lack of knowledge of Python. I'm more of a Ruby person. :)", "issue_status": "Closed", "issue_reporting_time": "2015-02-22T19:45:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1513": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/484", "issue_id": "#484", "issue_summary": "Memory leak / growth and constant CPU usage", "issue_description": "skandragon commented on 21 Feb 2015\nI am using mitmdump in a transparent mode. Some requests are passed through a small script which takes the request data and stores it in a MongoDB collection.\nI have noticed a fresh startup of mitmproxy sits at about 1 to 2% CPU usage, even before the first request comes in. After running for a week or two, it will sit at about 3 to 4% CPU, and will accumulate a rather large memory footprint.\nI am not sure what debugging info to provide for this sort of problem.", "issue_status": "Closed", "issue_reporting_time": "2015-02-21T15:56:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1514": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/483", "issue_id": "#483", "issue_summary": "Fallback to TCP Proxying on non-standard HTTP traffic", "issue_description": "yoavfrancis commented on 20 Feb 2015\nHi,\nPerhaps this is more of a feature enhancement - but say that I have mitmproxy running on port 80/443 in transparent mode (HTTP proxy mode), and suddenly I get a non-HTTP connection over that port (This can happen with various applications that use proprietary TCP-based protocol over 443/80)\nIt'd be absolutely neat if it'd be possible to fallback to TCP-proxying on a specific problematic connection - this way the client won't feel any problems whatsoever.\nI don't mind giving it a look myself - do you have a recommendation of how to elegantly achieve this behavior in the code?\nThanks a bunch,\nYoav", "issue_status": "Closed", "issue_reporting_time": "2015-02-20T12:27:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1515": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/482", "issue_id": "#482", "issue_summary": "SSL transparent proxying not working on ports other than 443", "issue_description": "danhawkes commented on 20 Feb 2015\nWhen proxying an android device, SSL connections to a non-443 port fail with the following error:\nSSL handshake aborted: ssl=0xb4224e00: Failure in SSL library, usually a protocol error\nerror:1408F10B:SSL routines:SSL3_GET_RECORD:wrong version number (external/openssl/ssl/s3_pkt.c:338 0xac4eae61:0x00000000)\nmitmproxy shows this in the logs:\n192.168.1.57:35340: Set new server address: 178.238.136.39:5555\n192.168.1.57:35340: serverconnect\n  -> 178.238.136.39:5555\n192.168.1.57:35340: HttpError(\"Bad HTTP request line: '\\\\x16\\\\x03\\\\x01\\\\x00\\\\xdd\\\\x01\\\\x00\\\\x00\\\\xd9\\\\x03\\\\x03w\\\\xa7`\\\\x88\\\\x0b\\\\x16\\\\x82*\\\\\nxde6\\\\xe6\\\\xfe\\\\xb3\\\\x11\\\\r\\\\x00>\\\\x12\\\\xf7S\\\\xdf\\\\xd3\\\\xe7-\\\\x94(;\\\\xb5\\\\xd4\\\\x9e\\\\xbe\\\\xa8 T\\\\xe7\\\\x11\\\\xbe\\\\xdf\\\\x90\\\\xea\\\\x01 \\\\x0fM\\\\xb\nd^\\\\x1e\\\\x12n\\\\xf2\\\\xd4\\\\xa13H\\\\xd5\\\\xcf\\\\xefYB\\\\x02Q\\\\x8c\\\\xdf\\\\x87\\\\xf8\\\\x00,\\\\xc0+\\\\xc0,\\\\xc0/\\\\xc00\\\\x00\\\\x9e\\\\x00\\\\x9f\\\\xc0\\\\t\\\\xc0\\\\n'\n\",)\nThat traffic looks like an SSL handshake - is mitmproxy attempting to handle it as plain HTTP?\nPlease let me know if any more info is required.", "issue_status": "Closed", "issue_reporting_time": "2015-02-20T11:31:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1516": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/481", "issue_id": "#481", "issue_summary": "mitmproxy crash on Server Side Replay", "issue_description": "krzysiekbielicki commented on 19 Feb 2015\nafter logging some requests in mitmproxy I pressed S for server-side replay, a/t for replay and mitmproxy crashed with error:\nTraceback (most recent call last):\n  File \"/usr/lib64/python2.7/site-packages/libmproxy/console/__init__.py\", line 614, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/lib64/python2.7/site-packages/urwid/raw_display.py\", line 272, in run_wrapper\n    return fn()\n  File \"/usr/lib64/python2.7/site-packages/libmproxy/console/__init__.py\", line 839, in loop\n    self.prompt_execute(k)\n  File \"/usr/lib64/python2.7/site-packages/libmproxy/console/__init__.py\", line 766, in prompt_execute\n    msg = p(txt, *args)\n  File \"/usr/lib64/python2.7/site-packages/libmproxy/console/flowlist.py\", line 124, in server_replay_prompt\n    self.master.options.replay_ignore_params, self.master.options.replay_ignore_content\nTypeError: start_server_playback() takes exactly 9 arguments (8 given)", "issue_status": "Closed", "issue_reporting_time": "2015-02-19T08:24:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1517": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/479", "issue_id": "#479", "issue_summary": "Problem forwarding iOS SSL requests?", "issue_description": "mkonecny commented on 19 Feb 2015\nHaving a really strange issue. We have an app written for both Android and iOS.\nI set mitmproxy to listen on port 443, and forward all requests to our nginx server on port 80. The following command is used:\nsudo mitmproxy -R https2http://localhost:80/ -p 443 --cert cert.pem\nAndroid requests are forwarded just fine. They are simple POST/GET requests. The equivalent requests in iOS do not work if mitmproxy is in the middle - and work fine otherwise.\nHere is what I see:\na) in mitmproxy, the request is red, with reason\nHttpError(\"Invalid server response: '<head><title>400 Bad Request</title></head>\\\\r\\\\n'\",)\nb) in nginx access.log, I see random hex values where I would normally see the HTTP verb and path. Example:\n127.0.0.1 - - [19/Feb/2015:02:03:46 +0000] \"\\x16\\x03\\x01\\x01L\\x01\\x00\\x01H\\x03\\x03\\x88#\\xCE\\x0F?\\xD1\\xC9\\xBF\\x8C\\x0C:|*\\x92{-\\x96\\x92\\x8CM*\\xA2\\xF7)o\\xBF\\x9Cl\\xDB\\x953\\xDA\\x00\\x00\\x92\\xC00\\xC0,\\xC0(\\xC0$\\xC0\\x14\\xC0\" 400 166 \"-\" \"-\"\nAny hints on where I should start poking around?", "issue_status": "Closed", "issue_reporting_time": "2015-02-19T02:14:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1518": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/478", "issue_id": "#478", "issue_summary": "Windows Support?", "issue_description": "jamime commented on 19 Feb 2015\nI have seen multiple places claiming windows support for mitmdump however I can not get it to launch.\nC:\\Python34\\Scripts>py mitmdump\nTraceback (most recent call last):\nFile \"mitmdump\", line 6, in\nexec(compile(open(file).read(), file, 'exec'))\nFile \"C:\\Users\\IEUser\\Downloads\\mitmproxy-master\\mitmproxy-master\\mitmdump\", line 2, in\nfrom libmproxy.main import mitmdump\nFile \"c:\\users\\ieuser\\downloads\\mitmproxy-master\\mitmproxy-master\\libmproxy\\main.py\", line 73\nexcept ProxyServerError, v:\n^\nSyntaxError: invalid syntax\nAm I doing something wrong? This worked fine on my Mac.\nI've tried installing via pip and git and I get the same error.", "issue_status": "Closed", "issue_reporting_time": "2015-02-18T18:41:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1519": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/476", "issue_id": "#476", "issue_summary": "response method behavior in case of get-request for large file.", "issue_description": "VishalJadhav90 commented on 16 Feb 2015\nHello,\nI am trying to access fairly large mp3 file using http-get method.\nDescription of response method says that call-back will happen when server response has been received.\nSo my question is, will callback happen as soon as response to http-get is received (beginning of mp3 transfer) or after last byte of mp3 file has been transferred.\ndef response(context, flow):\n\"\"\"\nCalled when a server response has been received.\n\"\"\"\ncontext.log(\"response\")\nP.S: I am not sure whether this is right place to put query or not, if not sorry for the mess.", "issue_status": "Closed", "issue_reporting_time": "2015-02-16T11:37:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1520": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/475", "issue_id": "#475", "issue_summary": "Add Option to Log SSL Session Keys for Wireshark Compatibility", "issue_description": "Member\nmhils commented on 14 Feb 2015\nCurrently, we can inspect SSL traffic to the proxy by instructing it to use ciphers without perfect forward secrecy only. As far as I know, inspecting the upstream connection is hard possibly without manual intervention. To debug issues like #472, it would be nice to have a command line option to dump the SSL keys for Wireshark.\nThere are two complications:\nWe should log keys if renegotation during the session occurs (see #472), not just after the handshake. I hope we can use the pyOpenSSL equivalent of SSL_CTX_set_info_callback for this?\nWriting to a file from different connection threads requires synchronization.\nThe following works for single-threaded code:\ndef dump_creds(sock):\n    crand = sock.client_random().encode(\"hex\")\n    masterkey = sock.master_key().encode(\"hex\")\n    with open(\"keys\",\"ab\") as f:\n        f.write(\"CLIENT_RANDOM {} {}\\r\\n\".format(crand, masterkey))", "issue_status": "Closed", "issue_reporting_time": "2015-02-14T01:29:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1521": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/473", "issue_id": "#473", "issue_summary": "Searching in a large response body", "issue_description": "gajus commented on 11 Feb 2015\nI have made a request for a large document (1.7M, JavaScript document) and tried using search feature. Search failed with all queries that should have been matched at the end of the document.\nThe response of the document is chunked, if that helps to locate the issue:\n2015-02-11 13:14:52 GET https://[..]/behavior.js\n                        \u2190 200 application/javascript 452.65kB 1.61MB/s\nRequest                                                             Response\nServer:             Apache\nETag:               \"63a8c8140cd00b07be8b3632736ecf2a:1423251080\"\nContent-MD5:        Y6jIFAzQCwe+izYyc27PKg==\nLast-Modified:      Fri, 06 Feb 2015 19:31:14 GMT\nAccept-Ranges:      bytes\nVary:               Accept-Encoding\nContent-Encoding:   gzip\nDate:               Wed, 11 Feb 2015 13:14:52 GMT\nTransfer-Encoding:  chunked\nConnection:         keep-alive\nConnection:         Transfer-Encoding\nContent-Type:       application/javascript", "issue_status": "Closed", "issue_reporting_time": "2015-02-11T13:28:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1522": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/472", "issue_id": "#472", "issue_summary": "Requests to Exchange servers with optional client certificate authentication fail", "issue_description": "iragsdale commented on 10 Feb 2015\nWhen I try to examine the conversation between an iPhone and an Exchange server configured with optional client certificate authentication, mitmproxy fails to make requests to the Exchange server.\nI just see this error for the request: \u201c\u2190 TCP connection closed unexpectedly\u201d. However, if I disable the proxy in the iOS settings, requests succeed just fine.\nIf I attempt to make the same request with curl, I get \"curl: (35) Server aborted the SSL handshake\". If I connect to the server using openssl s_client, I can make valid requests.\nIf I change the server's authentication policy from \"Accept client certificates\" to \"Ignore client certificates\", mitmproxy works just fine.\nSo, it appears that mitmproxy (and curl) are doing something different in how they negotiate an SSL connection with the remote server. I'm not sure exactly what it might be, but it would be nice if it worked in that scenario.", "issue_status": "Closed", "issue_reporting_time": "2015-02-09T21:56:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1523": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/471", "issue_id": "#471", "issue_summary": "Using --cert-forward option results in a crash using the OS X binary install", "issue_description": "iragsdale commented on 10 Feb 2015\nTraceback (most recent call last):\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/libmproxy.proxy.server\", line 99, in handle\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/libmproxy.protocol.http\", line 982, in handle_messages\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/libmproxy.protocol.http\", line 1055, in handle_flow\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/libmproxy.protocol.http\", line 1248, in process_request\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/libmproxy.protocol.http\", line 1395, in process_connect_request\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/libmproxy.proxy.server\", line 206, in establish_ssl\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/libmproxy.proxy.server\", line 257, in find_cert\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/netlib.certutils\", line 270, in gen_pkey\n  File \"/Users/cortesi/tmp/pyinstaller/PyInstaller/loader/pyi_importers.py\", line 276, in load_module\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/netlib.certffi\", line 20, in <module>\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/cffi.api\", line 340, in verify\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/cffi.verifier\", line 73, in load_library\n  File \"/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/cffi.verifier\", line 125, in _write_source\nIOError: [Errno 2] No such file or directory: '/Users/cortesi/mitmproxy/mitmproxy/build/mitmproxy/out00-PYZ.pyz/__pycache__/_cffi__x88a8fd90x94e38fe2.c'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2015-02-09T19:54:36Z", "fixed_by": "#654", "pull_request_summary": "Remove Certforward Feature", "pull_request_description": "Member\nmhils commented on 26 Jun 2015\nThe certforward feature was implemented to support #gotofail, which only works on unpatched iOS devices. Given that many apps don't support iOS 7 anymore, jailbreak+ssl killswitch is usually the better option. By removing certforward, we can make netlib a pure python module again, which significantly simplifies distribution.\ndepends on mitmproxy/netlib#79\ncloses #360\ncloses #471\ncloses #629\ncloses https://github.com/mitmproxy/netlib/issues/33\ncloses https://github.com/mitmproxy/netlib/issues/63\ncloses https://github.com/mitmproxy/netlib/issues/68", "pull_request_status": "Merged", "issue_fixed_time": "2015-06-26T21:22:41Z", "files_changed": [["8", "libmproxy/proxy/config.py"], ["42", "libmproxy/proxy/server.py"], ["8", "test/test_server.py"], ["2", "test/tservers.py"]]}, "1524": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/470", "issue_id": "#470", "issue_summary": "socket.setdefaulttimeout crashes SSL connection.", "issue_description": "F1ashhimself commented on 9 Feb 2015\nsocket.setdefaulttimeout(60) crashes SSL connection and throws ERR_SSL_PROTOCOL_ERROR when trying to reach any of https sites. When using default value or socket.setdefaulttimeout(None) all works fine.\nUsing libmproxy (mitmproxy 0.11.3).", "issue_status": "Closed", "issue_reporting_time": "2015-02-09T16:37:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1525": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/469", "issue_id": "#469", "issue_summary": "Allow Selection of Upstream Cipher Suites", "issue_description": "Member\nmhils commented on 8 Feb 2015\nCurrently, a user can specify the ciphers presented to the client by using the --ciphers switch. As with --ssl-version-client/--ssl-version-server, we should introduce --ciphers-server and rename --ciphers to --ciphers-client.\nRelevant parts in the code:\nlibmproxy/proxy/config.py#L217\nlibmproxy/proxy/config.py#L58\nlibmproxy/proxy/server.py#L181-L218", "issue_status": "Closed", "issue_reporting_time": "2015-02-08T14:06:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1526": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/468", "issue_id": "#468", "issue_summary": "Question regarding --ignore", "issue_description": "gfrench17 commented on 8 Feb 2015\nHi Max,\nis it possible to define an inverted list with --ignore, i.e. instead of\n--ignore google.com -> disregard google.com content via Port 443\ndefine something like\n--ingore (ignore everything except for mySite.com and myOtherSite.com)\nCheers\nGordon", "issue_status": "Closed", "issue_reporting_time": "2015-02-08T10:16:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1527": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/466", "issue_id": "#466", "issue_summary": "Android blank page", "issue_description": "uniwes23 commented on 6 Feb 2015\nhello\nI have a problem. I installed mitmproxy without any problems on xubuntu 14.04. I have an Android smartphone and have set the gateway so that all data go to my Computer. What works well so far.\nBut when I type the two commands\niptables -t nat -A PREROUTING -i eth0 -p tcp -j REDIRECT --to --dport 80-port 8080\niptables -t nat -A PREROUTING -i eth0 -p tcp -j REDIRECT --to---dport 443 port 8080\nI try to load a page on the phone and nothing happens. And also mitmproxy shows nothing.\nAccording wireshark the Computer definitely got requests from the mobile phone. The mitmproxy's CA is installed too.\nCan someone help me?", "issue_status": "Closed", "issue_reporting_time": "2015-02-06T07:57:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1528": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/465", "issue_id": "#465", "issue_summary": "StickyCookieState must not rely on CPython internals.", "issue_description": "Member\nmhils commented on 6 Feb 2015\nhttps://bitbucket.org/pypy/pypy/issue/1972\nmitmproxy/libmproxy/flow.py\nLine 312 in d67372f\n m = c.values()[0] ", "issue_status": "Closed", "issue_reporting_time": "2015-02-06T02:50:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1529": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/464", "issue_id": "#464", "issue_summary": "mitmdump crashes on TCP proxying", "issue_description": "yoavfrancis commented on 5 Feb 2015\nHi there,\nWhen running mitmdump (current git master version with the current git version of libmproxy and the other dependencies) with TCP proxying mode and browsing on Google Chrome (Win7) to Google.com and running a few searches - I get a few \"crash\" errors\nThese are the following messages I got:\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n192.168.0.18:54049: Traceback (most recent call last):\n  File \"/root/mitmproxy/mitmproxy/libmproxy/proxy/server.py\", line 99, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"/root/mitmproxy/mitmproxy/libmproxy/protocol/tcp.py\", line 79, in handle_messages\n    dst.connection.send(contents)\n  File \"/root/mitmproxy/local/lib/python2.7/site-packages/OpenSSL/SSL.py\", line 950, in send\n    self._raise_ssl_error(self._ssl, result)\n  File \"/root/mitmproxy/local/lib/python2.7/site-packages/OpenSSL/SSL.py\", line 862, in _raise_ssl_error\n    raise SysCallError(errno, errorcode[errno])\nSysCallError: (32, 'EPIPE')\n\nTraceback (most recent call last):\n  File \"/root/mitmproxy/mitmproxy/libmproxy/proxy/server.py\", line 99, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"/root/mitmproxy/mitmproxy/libmproxy/protocol/tcp.py\", line 45, in handle_messages\n    contents = src.rfile.read(1)\n  File \"/root/mitmproxy/mitmproxy/netlib/netlib/tcp.py\", line 132, in read\n    raise NetLibDisconnect\nNetLibDisconnect\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n192.168.0.18:54064: Traceback (most recent call last):\n  File \"/root/mitmproxy/mitmproxy/libmproxy/proxy/server.py\", line 99, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"/root/mitmproxy/mitmproxy/libmproxy/protocol/tcp.py\", line 45, in handle_messages\n    contents = src.rfile.read(1)\n  File \"/root/mitmproxy/mitmproxy/netlib/netlib/tcp.py\", line 132, in read\n    raise NetLibDisconnect\nNetLibDisconnect\nThanks for keeping up the great work :)!\nYoav", "issue_status": "Closed", "issue_reporting_time": "2015-02-05T13:31:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1530": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/463", "issue_id": "#463", "issue_summary": "Recording timeout traffic", "issue_description": "nvanbalen commented on 29 Jan 2015\nHi guys,\nI have been using your tool for a couple months now, and so far, I think it is an amazing tool. It has a very good interface and is easy to use and set up. However, I have encountered a case in which mitmproxy does not provide the functionality I need.\nI am working on a use case in which I want to be able to view all traffic and connection attempts sent by the client whether the server responds or not. At one point the client makes a connect attempt the a server that results in a connection timed out error (netliberror [error 110]). This gets recorded as an error in the event log but does not show up in the traffic recorded by mitmdump. Would it be possible to have an attempt at a connection that ends up timing out get recorded with the rest of the traffic?\nThanks for all the work. Your tool is really awesome.", "issue_status": "Closed", "issue_reporting_time": "2015-01-28T21:52:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1531": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/462", "issue_id": "#462", "issue_summary": "Configure logging for tornado.access", "issue_description": "thomir commented on 28 Jan 2015\nWhile using mitmproxy to capture traffic, I sometimes see the message:\nNo loggers configured for tornado.access\nThis is printed when the python logging system receives a log message for a logger that hasn't been configured. This warning message is written over the traffic I'm trying to view, and is rather annoying. It would be nice if mitmproxy at least configured all loggers to log to a null hander, so this message didn't overwrite the content being presented.", "issue_status": "Closed", "issue_reporting_time": "2015-01-28T02:02:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1532": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/461", "issue_id": "#461", "issue_summary": "Mitmproxy Crash", "issue_description": "Contributor\nFuzion24 commented on 28 Jan 2015\nThis is from the latest commit as of now: e089061\nTraceback (most recent call last):\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/proxy/server.py\", line 99, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/protocol/http.py\", line 982, in handle_messages\n    while self.handle_flow():\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/protocol/http.py\", line 1055, in handle_flow\n    ret = self.process_request(flow, req)\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/protocol/http.py\", line 1248, in process_request\n    return self.process_connect_request(self.c.server_conn.address)\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/protocol/http.py\", line 1395, in process_connect_request\n    self.c.establish_ssl(server=True, client=True)\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/proxy/server.py\", line 215, in establish_ssl\n    chain_file=chain_file\n  File \"/usr/local/Cellar/python/2.7.9/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/mitmproxy-0.11.4-py2.7.egg/libmproxy/proxy/connection.py\", line 66, in convert_to_ssl\n    tcp.BaseHandler.convert_to_ssl(self, *args, **kwargs)\n  File \"build/bdist.macosx-10.10-x86_64/egg/netlib/tcp.py\", line 432, in convert_to_ssl\n    self.connection.do_handshake()\n  File \"/usr/local/lib/python2.7/site-packages/OpenSSL/SSL.py\", line 1076, in do_handshake\n    self._raise_ssl_error(self._ssl, result)\n  File \"/usr/local/lib/python2.7/site-packages/OpenSSL/SSL.py\", line 862, in _raise_ssl_error\n    raise SysCallError(errno, errorcode[errno])\nKeyError: 0\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2015-01-27T19:54:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1533": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/460", "issue_id": "#460", "issue_summary": "More convenient way to read/copy URL (URL decoded, without indenting)", "issue_description": "gajus commented on 27 Jan 2015\nSometimes the URL might be very long, e.g.\nhttps://foo.com/mobile/user/2014_11_04?method=get&path=%5B%22shows%22%2C%5B%2270140556%22%2C%2270145656%22%2C%2270171942%22%2C%2270176217%22%2C%2270160567%22%2C%2270264666%22%2C%2270505665%22%5D%2C%5B%22bookmark%22%2C%22interestingMomentsAll%22%2C%22thumbnailStill%22%5D%5D&path=%5B%22movies%22%2C%2260004476%22%2C%5B%22bookmark%22%2C%22interestingMomentsAll%22%2C%22thumbnailStill%22%5D%5D&path=%5B%22movies%22%2C%2270115554%22%2C%5B%22bookmark%22%2C%22interestingMomentsAll%22%2C%22pinProtection%22%2C%22rating%22%2C%22thumbnailStill%22%5D%5D&path=%5B%22movies%22%2C%2270026697%22%2C%5B%22bookmark%22%2C%22interestingMomentsAll%22%2C%22thumbnailStill%22%5D%5D&country=GB&esn=NFAPPL-02-IPHONE7=1-6BA4505AEE94C292946D4601110559A1F1A55C6CB6BCAF29E05456F67C666426&languages=en-GB%2Cen%2Cen-US&v=2.0&output=json&routing=reject&materialize=true&phablet=true&uuid=NFAPPL-02-IPHONE7%5D1-6BA4505AEE94C292946D4601110559A1F1A55C6CB6BCAF29E05456F67C666426_BQAtAAEBEI6BVSq9l_IAt19KXRjNsstAvgGpbAoZn6VEqTE5LkSGLT190ibkcOdxLlTttsYrPY15xBpbWbmIiG16TefWn6CkLYccqmHzXH0g2xHqewXcCQ.._1422560715519_1422560717461&model=saget&bb2=1&bb_logo=1&snacks=1&withCredentials=true\nThere are several problems with the way URL is displayed:\nURL encoded (hard to read).\nBecause of the indenting, copied URL contains whitespaces.\nIt would be nice to have an option that would display URL without indenting and URL decoded.\nAlternatively, being able to get the URL to clipboard would be nice.", "issue_status": "Closed", "issue_reporting_time": "2015-01-27T17:53:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1534": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/459", "issue_id": "#459", "issue_summary": "UX: Clarify \"no content\" message.", "issue_description": "Member\nmhils commented on 27 Jan 2015\nIf a user opens a flow, he will often be greeted with a message stating \"no content\". We should rephrase that to \"No request content\" or \"No request content (press tab to view response)\".", "issue_status": "Closed", "issue_reporting_time": "2015-01-27T16:20:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1535": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/458", "issue_id": "#458", "issue_summary": "400 Bad Request and 502 Bad Gateway + Certificate Errors while connecting to the MITM Proxy server From a Linux Machine", "issue_description": "gowthamsadasivam commented on 27 Jan 2015\nI'm trying to setup a simple proxy server using MITM-Proxy, in such a way that a machine from the network can connect to the proxy and utilize the internet connection through it. This as simple as how a normal proxy server behaves. But I'm not able to get this working.\n_I'm using iptables because, my requirement is to enforce any traffic originated in the client system (Including any software running inside the system like browser also) MUST use the proxy server as the only choice to communicate to the outside world._ The current configuration is like as follows,\nI have two Linux machines (Ubuntu) as follows, (Both are in the same network, Both of them have access to internet. Gateway is _172.17.42.1_)\n1.) MITM-Proxy Machine: _172.17.0.4_ --> running proxy on port _8080_\n2.) Client Machine: _172.17.0.6_\nI need to accomplish that the client machine always send and receive any web traffic (80 and 443) through the MITM-Proxy only. To get this working I made \"IPTABLES\" configuration in the client machine. In such a way that,\nA.) All the originating traffic for port 80 and port 443 from the client machine will be DNAT to MITM-Proxy (i.e. 172.17.0.4:8080)\n!# sudo iptables -I OUTPUT -o eth0 -d 0.0.0.0/0 -j ACCEPT\n!# sudo iptables -t nat -A OUTPUT -p tcp --dport 80 -j DNAT --to-destination 172.17.0.4:8080\n!# sudo iptables -t nat -A OUTPUT -p tcp --dport 443 -j DNAT --to-destination 172.17.0.4:8080\nB.) All the ESTABLISHED, RELATED traffic will be allowed in the machine.\n!# sudo iptables -I INPUT -i eth0 -m state --state ESTABLISHED,RELATED -j ACCEPT\nC.) After I made the above settings in the client machine and now MITM-Proxy runs in the normal mode \"mitmproxy\" and waits for connections in port 8080.\nNow, I tried \"wget http://google.com\" in the client machine. It failed and shows the ERROR as follows,\n_HTTP request sent, awaiting response... 400 Bad Request_\nScreenshot: Browser terminal is the client machine and terminal window is the MITM Proxy\n_Is there way that I can install the http://mitm.it certificate to the Linux system?_\nOn the other hand if I try \"wget https://google.com\" in the client machine, it failed with different ERROR as follows,\n_OpenSSL: error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol\nUnable to establish SSL connection._\nNow, In the MITM-Proxy Machine if invoke the mitmproxy with -T --host (i.e. mitmproxy -T --host) I got a different problem. While the client was waiting for the response, MITM-Proxy screen _it is flooding with requests and hangs. I have to broke it down using \"Ctrl+C\"._\nScreenshot: Browser terminal is the client machine and terminal window is the MITM Proxy\nI have also tried using a different iptables rules like below,\n!# sudo iptables -I OUTPUT -o eth0 -d 0.0.0.0/0 -j ACCEPT\n!# sudo iptables -t nat -A OUTPUT -p tcp --dport 80 -j DNAT --to-destination 172.17.0.4:80\n!# sudo iptables -t nat -A OUTPUT -p tcp --dport 443 -j DNAT --to-destination 172.17.0.4:80\nIn the above case I made transparent proxy configuration in the MITM-Proxy Machine using iptables as specified in this official documentation page. But still nothing changes all the same ERRORs are repeating like the above ones except, the \"wget http://google.com\" shows _502 Bad Gateway, instead of 400 Bad Request._ The \"wget https://google.com\" returns the same error as the previous one.\nI also made a TCPDUMP of the requests in the MITM Machine.\nScreenshot: Browser terminal is the client machine and terminal window is the MITM Proxy\nAll I required is just a simple proxy server which another machine can use for (tcp) web traffic (both http and https).\nP.S: Without iptables change if I ran MITM in one machine and If i use the proxy settings as IP:172.17.0.4:8080 in the browser of the Client Machine it works very well.", "issue_status": "Closed", "issue_reporting_time": "2015-01-27T09:58:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1536": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/457", "issue_id": "#457", "issue_summary": "mitmproxy not working with android emulator", "issue_description": "ghost commented on 27 Jan 2015\nHi,\nI am trying to use mitmproxy with android emulator. But mitmproxy shows nothing. Here are the steps I followed:\nInstalled miltmproxy in laptop1\nEnabled IP forwarding and port redirection in laptop 1 (redirected port 80 and 443 to 8080)\nInstalled miltmproxy CA certificate in the Android emulator running in laptop 2\nSet laptop 1 as proxy in Android emulator (just enter the ip address of laptop 1, did not enter any port)\nThen I tried to run mitmproxy and mitmproxy -T --host. But nothing works.\nAnyone can tell me what's wrong?\nThanks", "issue_status": "Closed", "issue_reporting_time": "2015-01-27T00:07:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1537": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/456", "issue_id": "#456", "issue_summary": "Unable to decrypt SSL in Wireshark if captured in \"regular\" mode. Works in \"transparent\" mode.", "issue_description": "idiotsavant commented on 26 Jan 2015\nI am using 0.11.3 on CentOS 6.6. I run the proxy in transparent mode and use iptables to redirect traffic as detailed in the tutorial. The mitdump command is:\nmitmdump -T -p 7777 -s 'responseMod.py' --anticache --ciphers '!DH:!ECDH:HIGH:MEDIUM:!aNULL:!MD5'\nThe traffic flow is:\n[Firefox on VM host] <--> [eth1 on VM running proxy]-[eth0 on VM running proxy] <--> [Website]\nThis works fine; the responses of HTTPS pages are modified as expected.\nI am simultaneously capturing the traffic using tcpdump on eth1:\ntcpdump -ni eth1 -s0 port 443 -w /tmp/transparent.pcap\nAgain, this works fine. I can use the mitmproxy-ca.pem key in Wireshark and decrypt the traffic.\nThe problem is if I switch from transparent to regular mode. I remove the -T option in mitmdump and the iptables rules, and configure Firefox to use the proxy explicitly on 7777 (all protocols) and run:\nmitmdump -p 7777 -s 'responseMod.py' --anticache --ciphers '!DH:!ECDH:HIGH:MEDIUM:!aNULL:!MD5'\nNow, if I capture in tcpdump I have to specify port 7777:\ntcpdump -ni eth1 -s0 port 7777 -w /tmp/regular.pcap\nBut I cannot decrypt the traffic in Wireshark. Everything is fine in Firefox in both regular and transparent mode - the response of HTTPS pages is modified as expected - but I need the ability to passively capture and decrypt the traffic at the same time, and that only works in transparent mode.\nI should say up front that I don't know if this is a bug, a limitation, or just a reflection of my lack of deep understanding of SSL decryption and how it works. Is this expected behaviour? I want to use regular mode if possible as it makes it much easier for users to set up.\nMany thanks!", "issue_status": "Closed", "issue_reporting_time": "2015-01-26T10:28:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1538": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/455", "issue_id": "#455", "issue_summary": "Error code: sec_error_unknown_critical_extension", "issue_description": "shitsecurity commented on 22 Jan 2015\nCA cert added with all permissions as described (http://mitmproxy.org/doc/certinstall/webapp.html) to iceweasel on debian wheezy w/ mitmdump 0.11.3.\n$ mitmdump -w /tmp/dump -p 8080\n127.0.0.1:38250: clientconnect\n127.0.0.1:38250: NetLibSSLError([('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert bad certificate')],)\n127.0.0.1:38250: clientdisconnect\nHTTP mitm works as designated.", "issue_status": "Closed", "issue_reporting_time": "2015-01-21T22:44:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1539": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/454", "issue_id": "#454", "issue_summary": "pip install mitmproxy fails (SyntaxError)", "issue_description": "leandroarndt commented on 22 Jan 2015\nCommand exits with the following dump:\nDownloading/unpacking mitmproxy                                                 \n  Running setup.py egg_info for package mitmproxy                               \n    Traceback (most recent call last):\n      File \"<string>\", line 16, in <module>\n      File \"/tmp/pip-build-root/mitmproxy/setup.py\", line 19\n        \"netlib>=%s, <%s\" % (version.MINORVERSION, version.NEXT_MINORVERSION),\n                                                                             ^\n    SyntaxError: invalid syntax\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 16, in <module>\n\n  File \"/tmp/pip-build-root/mitmproxy/setup.py\", line 19\n\n    \"netlib>=%s, <%s\" % (version.MINORVERSION, version.NEXT_MINORVERSION),\n\n                                                                         ^\n\nSyntaxError: invalid syntax\n\n----------------------------------------\nCommand python setup.py egg_info failed with error code 1 in /tmp/pip-build-root\n/mitmproxy\nStoring complete log in /root/.pip/pip.log\nThis is inside the deps dictionary (line 18) at setup.py. If I try to change it to a tuple or list (thus correcting syntax), I get an AttributeError (trying to access deps.update). The same happens at line 27, with another dict.", "issue_status": "Closed", "issue_reporting_time": "2015-01-21T19:01:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1540": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/453", "issue_id": "#453", "issue_summary": "Out of memory exception in libmproxy", "issue_description": "xitauw2 commented on 20 Jan 2015\nI try to use libmproxy in transparent mode to analyze https traffic. Unfortunatelly I faced with significant memory leaks (which lead to out of memory exception).\nfrom libmproxy import flow, proxy, platform\nimport sys\nfrom netlib.odict import ODictCaseless\nimport os\n\nclass FlowTest(flow.FlowMaster):\n    def run(self):\n        try:\n            flow.FlowMaster.run(self)\n        except KeyboardInterrupt:\n            self.shutdown()\n\n    def handle_request(self, r):\n        f = flow.FlowMaster.handle_request(self, r)\n        if f:\n            r.reply()\n\n        return f\n\n    def handle_response(self, r):\n        f = flow.FlowMaster.handle_response(self, r)\n        if f:\n            r.reply()\n\n        return f\n\n\nif __name__ == '__main__':\n    config = proxy.ProxyConfig(\n    certfile=os.path.expanduser('./certs/rui.result.pem'),\n    transparent_proxy=dict(\n        resolver=platform.resolver(),\n        sslports=[443, 8443, 9443]\n        )\n    )\n    state = flow.State()\n    server = proxy.ProxyServer(config, 8080)\n    m = FlowTest(server, state)\n    print \"Proxy started\"\n    m.run()", "issue_status": "Closed", "issue_reporting_time": "2015-01-20T15:44:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1541": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/452", "issue_id": "#452", "issue_summary": "Running mitmproxy on virtualboxed ubuntu-14.04.1-server-i386.", "issue_description": "megazhuk commented on 20 Jan 2015\nmitmproxy runned by command: mitmproxy -T --host\non any connection to proxy host they throwing:\n\nException in thread SlaveThread (0.0.0.0:8080):\nTraceback (most recent call last):\nFile \"/usr/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\nself.run()\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py\", line 77, in run\nself.server.serve_forever()\nFile \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 488, in serve_forever\nt.start()\nFile \"/usr/lib/python2.7/threading.py\", line 745, in start\n_start_new_thread(self.__bootstrap, ())\nerror: can't start new thread\nIf i try to do connection from Firefox:\n\nHttpError('Invalid HTTP request form (expected: relative, got: absolute)',)\nAfter crashed mitmproxy on execute: sudo netstat -ntap\ni received (first section before mitmproxy, second after):\nAs a result, no one successfully connection..", "issue_status": "Closed", "issue_reporting_time": "2015-01-19T23:28:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1542": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/451", "issue_id": "#451", "issue_summary": "Replay feature broken for inline scripts", "issue_description": "Member\nmhils commented on 19 Jan 2015\nCurrently, it is impossible to call replay_request in a response script hook.\nFlowMaster.replay_request fails if the flow is still live, presumably because RequestReplayThread asks the master which would cause a deadlock. We should\nAdd an option to RequestReplayThread to not ask the master\nAllow replay_request to work if flow.live is set, but suppress asking the master then.\nAdjust tests", "issue_status": "Closed", "issue_reporting_time": "2015-01-19T14:19:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1543": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/450", "issue_id": "#450", "issue_summary": "SSL handshake error with OSX binary installer", "issue_description": "ssstofff commented on 19 Jan 2015\nHi guys\nI installed on my Osx (Yosemite) with the binary installer, but getting those SSL handshake errors.\nI deleted already once the certificates, but still the same.\nHow to resolve? Any extra install/tweek needed beside this binary install?\nThx! Kristof", "issue_status": "Closed", "issue_reporting_time": "2015-01-18T20:04:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1544": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/449", "issue_id": "#449", "issue_summary": "Mitmproxy throws netlib error", "issue_description": "curt2008 commented on 16 Jan 2015\nDownloading/unpacking git+https://github.com/mitmproxy/mitmproxy.git\n  Cloning https://github.com/mitmproxy/mitmproxy.git to /tmp/pip-ClgJaI-build\n  Running setup.py (path:/tmp/pip-ClgJaI-build/setup.py) egg_info for package from git+https://github.com/mitmproxy/mitmproxy.git\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"/tmp/pip-ClgJaI-build/setup.py\", line 19\n        \"netlib>=%s, <%s\" % (version.MINORVERSION, version.NEXT_MINORVERSION),\n                                                                             ^\n    SyntaxError: invalid syntax\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 17, in <module>\n\n  File \"/tmp/pip-ClgJaI-build/setup.py\", line 19\n\n    \"netlib>=%s, <%s\" % (version.MINORVERSION, version.NEXT_MINORVERSION),\n\n                                                                         ^\n\nSyntaxError: invalid syntax\nWhat's the reason why this won't install? here's my report when running pip install git+https://github.com/mitmproxy/netlib.git\n  Requirement already satisfied (use --upgrade to upgrade): netlib==0.11.2 from git+https://github.com/mitmproxy/netlib.git in /usr/lib/python2.6/site-packages\nRequirement already satisfied (use --upgrade to upgrade): pyasn1>=0.1.7 in /usr/lib/python2.6/site-packages (from netlib==0.11.2)\nRequirement already satisfied (use --upgrade to upgrade): pyOpenSSL>=0.14 in /usr/lib/python2.6/site-packages (from netlib==0.11.2)\nRequirement already satisfied (use --upgrade to upgrade): passlib>=1.6.2 in /usr/lib/python2.6/site-packages (from netlib==0.11.2)\nRequirement already satisfied (use --upgrade to upgrade): cryptography>=0.2.1 in /usr/lib/python2.6/site-packages (from pyOpenSSL>=0.14->netlib==0.11.2)\nRequirement already satisfied (use --upgrade to upgrade): six>=1.5.2 in /usr/lib/python2.6/site-packages/six-1.8.0-py2.6.egg (from pyOpenSSL>=0.14->netlib==0.11.2)\nRequirement already satisfied (use --upgrade to upgrade): cffi>=0.8 in /usr/lib/python2.6/site-packages (from cryptography>=0.2.1->pyOpenSSL>=0.14->netlib==0.11.2)\nRequirement already satisfied (use --upgrade to upgrade): enum34 in /usr/lib/python2.6/site-packages (from cryptography>=0.2.1->pyOpenSSL>=0.14->netlib==0.11.2)\nRequirement already satisfied (use --upgrade to upgrade): setuptools in /usr/lib/python2.6/site-packages (from cryptography>=0.2.1->pyOpenSSL>=0.14->netlib==0.11.2)\nRequirement already satisfied (use --upgrade to upgrade): pycparser in /usr/lib/python2.6/site-packages (from cffi>=0.8->cryptography>=0.2.1->pyOpenSSL>=0.14->netlib==0.11.2)\nRequirement already satisfied (use --upgrade to upgrade): ordereddict in /usr/lib/python2.6/site-packages (from enum34->cryptography>=0.2.1->pyOpenSSL>=0.14->netlib==0.11.2)\nCleaning up...", "issue_status": "Closed", "issue_reporting_time": "2015-01-16T02:52:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1545": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/444", "issue_id": "#444", "issue_summary": "Transparent proxy support for upstream proxies", "issue_description": "na-- commented on 12 Jan 2015\nIs the following setup possible?\nClient <-> Transparent mimtproxy <-> Other upsteam proxies <-> HTTP/HTTPS Website\nWhen I launch mitmproxy in transparent mode, both HTTP and HTTPS traffic is captured perfectly. However, when I try to use another http proxy from the client application, mitmproxy fails. This happens both when the final site is http and when it's https:\nHttpError('Invalid HTTP request form (expected: relative, got: absolute)',)\nIs this supported or am I doing something wrong?\n2", "issue_status": "Closed", "issue_reporting_time": "2015-01-12T14:42:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1546": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/443", "issue_id": "#443", "issue_summary": "mitmdump uses an unexpectedly large amount of CPU while idle", "issue_description": "lexelby commented on 9 Jan 2015\nHow to reproduce:\n$ mitmdump -P http://google.com -p 10001\nThen run top and see that it's using as much as 20% of a core.\nstrace yields a fast scroll of short sleeps:\nselect(0, NULL, NULL, NULL, {0, 2259})  = 0 (Timeout)\nselect(0, NULL, NULL, NULL, {0, 1000})  = 0 (Timeout)\nselect(0, NULL, NULL, NULL, {0, 2000})  = 0 (Timeout)\nselect(0, NULL, NULL, NULL, {0, 4000})  = 0 (Timeout)\nselect(0, NULL, NULL, NULL, {0, 2301})  = 0 (Timeout)\nselect(0, NULL, NULL, NULL, {0, 1000})  = 0 (Timeout)\nselect(0, NULL, NULL, NULL, {0, 2000})  = 0 (Timeout)\nselect(0, NULL, NULL, NULL, {0, 4000})  = 0 (Timeout)\nselect(0, NULL, NULL, NULL, {0, 2401})  = 0 (Timeout)\nMaster.tick (in controller.py) calls Queue.get with a timeout of 0.01. Queue in turn waits on a threading.Condition with that same timeout. Condition waits in increasingly large increments starting at 500usec in an attempt to avoid making the program unresponsive (to what? Probably KeyboardInterrupt?). It'll wait 500usec, 1000, 2000, 4000, and then the remainder to get up to 10000usec. End result: select() is called as often as 5000 times per second. A far cry from the 100Hz that one might expect from a 0.01 timeout :)", "issue_status": "Closed", "issue_reporting_time": "2015-01-08T19:12:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1547": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/441", "issue_id": "#441", "issue_summary": "Mitmproxy crashes when loading a bad server replay from the terminal", "issue_description": "Contributor\nnickhs commented on 9 Jan 2015\nMitmproxy doesn't like loading (bad) client or server replays from the command line, as it fails to display the error.\nNote that server_playback_path is called in __init__ before self.statusbar is initialized. Loading the file via the S key in mitmproxy shows the error just fine.\n$ mitmproxy -S ~/Downloads/oldreplay.capture\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 3, in <module>\n    mitmproxy()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/main.py\", line 97, in mitmproxy\n    m = console.ConsoleMaster(server, console_options)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 426, in __init__\n    self.server_playback_path(options.server_replay)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 514, in server_playback_path\n    self.statusbar.message(ret)\nAttributeError: 'ConsoleMaster' object has no attribute 'statusbar'", "issue_status": "Closed", "issue_reporting_time": "2015-01-08T18:54:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1548": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/438", "issue_id": "#438", "issue_summary": "Question about parallel client usage", "issue_description": "gfrench17 commented on 2 Jan 2015\nHi there,\nI have on question for the following situation: I have two android devices connected to a running mitmdump process. Is there any chance for mitmdump to tell which request-response pair belongs to which device?\nSimilar question: looking at the dump/logfile that mitmdump is able to create, can you tell which response refers to which request? Is it a pure sequencial pattern, e. g. request no. 3 refers to response no. 3?\nThe usecase behind this is to be able to modify the responses and requests depending on which of the two (or more) devices has sent them.\nKind regards\nGordon", "issue_status": "Closed", "issue_reporting_time": "2015-01-02T12:31:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1549": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/437", "issue_id": "#437", "issue_summary": "Mtimproxy crashed while deleting flow", "issue_description": "yasoob commented on 31 Dec 2014\nI was testing mitmproxy. I hit the d key and it crashed:\nyasoob@yasoob-laptop:~$ mitmproxy -U http://127.0.0.1:8118\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 610, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/display_common.py\", line 757, in run_wrapper\n    return fn()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 841, in loop\n    k = self.view.keypress(size, k)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/container.py\", line 1128, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowlist.py\", line 270, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/listbox.py\", line 987, in keypress\n    key = focus_widget.keypress((maxcol,),key)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowlist.py\", line 147, in keypress\n    self.state.delete_flow(self.flow)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 331, in delete_flow\n    ret = flow.State.delete_flow(self, f)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 434, in delete_flow\n    self._flow_list.remove(f)\nValueError: list.remove(x): x not in list\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nShutting down...\nBackground\nI was trying to clear the flow list by hitting C. Some flows were cleared but the others remained there. I typed ? and looked at the flow deleting key. I typed q to return back to main screen and hit d after going to the last flow on my screen. After that, BOOM! It crashed!\nIf you need any more information just let me know.", "issue_status": "Closed", "issue_reporting_time": "2014-12-30T21:09:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1550": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/436", "issue_id": "#436", "issue_summary": "Add \"full\" transparent mode that also spoofs the source address", "issue_description": "yoavfrancis commented on 30 Dec 2014\nHi there,\nI was wondering - I'm running mitmproxy on a Linux machine with 2 NIC's (1 goes to clients and the other goes to the internet) - is there an option for \"full transparency\" - That is, that packets from the mitm to the internet will be sent with the client's src IP (and even MAC)?\nIf not - I'd be more than happy to hear tips on how to implement this.\n(Also, out of curiosity - What would happen if the Internet NIC on the Linux machine is not given an IP? could the mitm-to-internet connection still work than?)\nThanks!\nYoav", "issue_status": "Closed", "issue_reporting_time": "2014-12-30T17:44:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1551": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/435", "issue_id": "#435", "issue_summary": "Pressing C would cause a crash", "issue_description": "NormanOu commented on 29 Dec 2014\nI installed mitmproxy on aws ubuntu, and every time I press C to clean the screen, mitmproxy crashes and the log is as follows.\nAnd there is another problem, setting -w is not working, nothing is write to the file.\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 610, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/display_common.py\", line 757, in run_wrapper\n    return fn()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 821, in loop\n    size = self.drawscreen()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 787, in drawscreen\n    canvas = self.view.render(size, focus=1)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/container.py\", line 1083, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/listbox.py\", line 457, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/listbox.py\", line 342, in calculate_visible\n    focus_widget, focus_pos = self.body.get_focus()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowlist.py\", line 216, in get_focus\n    f, i = self.state.get_focus()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 302, in get_focus\n    return self.view[self.focus], self.focus\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 359, in __getitem__\n    return self._list[item]\nIndexError: list index out of range", "issue_status": "Closed", "issue_reporting_time": "2014-12-29T10:48:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1552": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/434", "issue_id": "#434", "issue_summary": "Transparent mode - not possible unless mitmproxy has access to iptables", "issue_description": "2mia commented on 28 Dec 2014\nHi,\nI'm trying to use mitmproxy with the following setup:\nrouter R forwards 80 & 443 to a more powerful machine M\nmachine M runs mitmproxy and does not have access to the routing table on R\nLooking at the code, seems that the dst address is detected as\ndst = self.resolver.original_addr(client_conn.connection)\nIs my use case something for which mitmproxy was not designed to do?\nPS: i got it working with a few changes, i can polish'em and send a pull request.", "issue_status": "Closed", "issue_reporting_time": "2014-12-28T12:07:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1553": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/433", "issue_id": "#433", "issue_summary": "Modifying responses", "issue_description": "jdan commented on 21 Dec 2014\nWhen I intercept a request, how can I modify the response before sending it back to the client? Everytime I tab over to \"Response\" I see \"No response. Press e and edit any aspect to add one.\"\nHitting e and typing anything crashes mitmproxy:\nTraceback (most recent call last):\n  File \"/Users/jordan/.virtualenv/khan27/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 610, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/Users/jordan/.virtualenv/khan27/lib/python2.7/site-packages/urwid/display_common.py\", line 757, in run_wrapper\n    return fn()\n  File \"/Users/jordan/.virtualenv/khan27/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 835, in loop\n    self.prompt_execute(k)\n  File \"/Users/jordan/.virtualenv/khan27/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 762, in prompt_execute\n    msg = p(txt, *args)\n  File \"/Users/jordan/.virtualenv/khan27/lib/python2.7/site-packages/libmproxy/console/flowview.py\", line 579, in edit\n    200, \"OK\", flow.ODictCaseless(), \"\", None\n  File \"/Users/jordan/.virtualenv/khan27/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 673, in __init__\n    assert isinstance(headers, ODictCaseless) or headers is None\nAssertionError\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nShutting down...\nThis is version 0.11.1. 0.11 also fails.", "issue_status": "Closed", "issue_reporting_time": "2014-12-21T02:53:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1554": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/431", "issue_id": "#431", "issue_summary": "HTTPRequest.from_stream bug", "issue_description": "Cheffu commented on 18 Dec 2014\nHi,\nI use mitmproxy resp. inline script just for intercepting messages, then send them to another application which may modify the message and then the message will be forwarded by mitmproxy to the server resp. the client.\nThereby I stumbled accross an error. I retrieve the string representation of the message, send it to my application and then rebuild an HTTPRequest object. The problem is that the host isn't used correctly for the url of the created HTTPRequest object.\nI created a simple demo code for this problem\nfrom libmproxy.protocol.http import HTTPRequest\nimport StringIO\n\ndef request(context, flow):    \n    decoded = flow.request.decode()\n\n    handledRequestStream = StringIO.StringIO(flow.request.assemble())\n    handledRequest = HTTPRequest.from_stream(handledRequestStream)\n\n    print flow.request.url\n    print handledRequest.url\n\n    flow.request = handledRequest\nThe print output will be something like:\nhttp://www.cnet.com/news/\nNone://None:None/news/\nThis results in the following error:\n10.0.2.2:57480: Traceback (most recent call last):\n  File \"/home/hans/.local/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 100, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"/home/hans/.local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1008, in handle_messages\n    while self.handle_flow():\n  File \"/home/hans/.local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1095, in handle_flow\n    self.process_server_address(flow)  # The inline script may have changed request.host\n  File \"/home/hans/.local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1345, in process_server_address\n    self.live.change_server(address, ssl=ssl)\n  File \"/home/hans/.local/lib/python2.7/site-packages/libmproxy/protocol/primitives.py\", line 221, in change_server\n    self.c.establish_server_connection(ask=False)\n  File \"/home/hans/.local/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 164, in establish_server_connection\n    self.server_conn.connect()\n  File \"/home/hans/.local/lib/python2.7/site-packages/libmproxy/proxy/connection.py\", line 140, in connect\n    tcp.TCPClient.connect(self)\n  File \"/home/hans/.local/lib/python2.7/site-packages/netlib/tcp.py\", line 330, in connect\n    connection.connect(self.address())\n  File \"/usr/lib/python2.7/socket.py\", line 224, in meth\n    return getattr(self._sock,name)(*args)\nTypeError: coercing to Unicode: need string or buffer, NoneType found\nI found a workaround for myself but a fix would be better ;)\nBest regards", "issue_status": "Closed", "issue_reporting_time": "2014-12-18T16:49:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1555": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/430", "issue_id": "#430", "issue_summary": "Inline scripts document has wrong reference for SSLCert object", "issue_description": "Contributor\nmichaeljau commented on 18 Dec 2014\nThe inline scripts document currently has the reference \"libmproxy.certutils.SSLCert\". It should be \"netlib.certutils.SSLCert\".", "issue_status": "Closed", "issue_reporting_time": "2014-12-18T16:13:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1556": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/429", "issue_id": "#429", "issue_summary": "AttributeError: 'NoneType' object has no attribute 'response'", "issue_description": "mjgolinski commented on 16 Dec 2014\nI wrote simple logging proxy using libmproxy. It crashed when stopping via shutdown()\nTraceback (most recent call last):\n  File \"/home/GER/mjgolins/virtualenvs/qa_dp/local/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 100, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"/home/GER/mjgolins/virtualenvs/qa_dp/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1001, in handle_messages\n    while self.handle_flow():\n  File \"/home/GER/mjgolins/virtualenvs/qa_dp/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1093, in handle_flow\n    self.get_response_from_server(flow)\n  File \"/home/GER/mjgolins/virtualenvs/qa_dp/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1047, in get_response_from_server\n    if flow.response.stream:", "issue_status": "Closed", "issue_reporting_time": "2014-12-16T12:56:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1557": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/428", "issue_id": "#428", "issue_summary": "Using the OSX binary, mitm.it does not work .", "issue_description": "Member\nmhils commented on 16 Dec 2014\nGot this traceback without any further information today:\nInternal Server Error\n\nTraceback (most recent call last):\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/netlib.wsgi\", line 133, in serve\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/flask.app\", line 1836, in __call__\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/flask.app\", line 1820, in wsgi_app\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/flask.app\", line 1403, in handle_exception\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/flask.app\", line 1817, in wsgi_app\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/flask.app\", line 1477, in full_dispatch_request\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/flask.app\", line 1381, in handle_user_exception\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/flask.app\", line 1475, in full_dispatch_request\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/flask.app\", line 1461, in dispatch_request\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/libmproxy.onboarding.app\", line 16, in index\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/flask.templating\", line 127, in render_template\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/jinja2.environment\", line 830, in get_or_select_template\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/jinja2.environment\", line 791, in get_template\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/jinja2.environment\", line 765, in _load_template\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/jinja2.loaders\", line 113, in load\n  File \"/Users/cortesi/tmp/pyinstaller/mitmproxy/build/mitmproxy/out00-PYZ.pyz/flask.templating\", line 64, in get_source\nTemplateNotFound: index.html\n(workaround is to install the certificate manually from (~/.mitmproxy/))\nCan anyone else confirm this issue or provide more details (how was mitmproxy installed?)?", "issue_status": "Closed", "issue_reporting_time": "2014-12-15T23:50:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1558": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/427", "issue_id": "#427", "issue_summary": "SSL handshake error", "issue_description": "gfrench17 commented on 15 Dec 2014\nHi there,\ntoday, I came across https://whiteout.io -> when trying to access the website through mitmdump, I get\n\"SSL handshake error: The client may not trust the proxy's certificate.\" from the mitmdump output, and Firefox tells me \"(Error code: ssl_error_rx_record_too_long)\"\nI have installed the mitmproxy certificate in Firefox, and other https websites like google.com or github.com work fine. What could be the problem with whiteout.io?\nFurther information:\n$ python --version\nPython 2.7.6\n$ mitmproxy --version\nmitmproxy 0.11.1\nThe error is well reproducable on another Linux box as well. Help is well appreciated.\nKind regards\nGordon", "issue_status": "Closed", "issue_reporting_time": "2014-12-15T08:36:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1559": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/426", "issue_id": "#426", "issue_summary": "Create New Requests Inside mitmproxy", "issue_description": "revintec commented on 15 Dec 2014\nwhen mitmproxy opens, there is no request\nthen I want to issue a new request to the server to see how server responses\nthis seems can't be done\n(why not set proxy and use curl ...)\nbecause mitmproxy has a nice editor ...\n(why I want this)\nI think it's a valuable feature, sometimes you just want to provoke the server to see how\nit responses, maybe try to squeeze some ajax api out of it, testing some variables\nand the easy way is to make a new request instead of curl/browser/...\nwhat I want:\ncould someone tell me is there a way to make new request right inside mitmproxy?\n(I think it should have one, maybe I missed it?)\nif not, could you add a shortcut \"n\" at main screen to start make and edit a new request?", "issue_status": "Closed", "issue_reporting_time": "2014-12-15T07:53:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1560": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/423", "issue_id": "#423", "issue_summary": "replay the saved flows", "issue_description": "niaoniaozz commented on 10 Dec 2014\nHi there, not sure if this is bug or not. I wanted to replay/manipulate the saved flows. I tried to read the flows using FlowReader and put them to the masterq directly, but it didn't work out. Can you give me some suggestions/fixes? Or the replay saved flows feature is not supported yet?", "issue_status": "Closed", "issue_reporting_time": "2014-12-10T01:27:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1561": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/422", "issue_id": "#422", "issue_summary": "Crash on modify header from intercepted request", "issue_description": "Contributor\nFuzion24 commented on 9 Dec 2014\nI got this while trying to modify an intercept network request:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 610, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/display_common.py\", line 757, in run_wrapper\n    return fn()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 835, in loop\n    self.prompt_execute(k)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 762, in prompt_execute\n    msg = p(txt, *args)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 579, in edit\n    200, \"OK\", flow.ODictCaseless(), \"\", None\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 673, in __init__\n    assert isinstance(headers, ODictCaseless) or headers is None\nAssertionError\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2014-12-08T23:21:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1562": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/421", "issue_id": "#421", "issue_summary": "Intercepting generic SSL traffic", "issue_description": "nikolaykhodov commented on 8 Dec 2014\nI found mitmproxy as a wonderful tool for debugging HTTP(S) protocol. Even though it has TCP proxy mode, it just dumps SSL traffic to the event log without decrypting on the fly.\nI am wondering how much efforts should be put to add the feature to decode in the real time?", "issue_status": "Closed", "issue_reporting_time": "2014-12-08T13:39:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1563": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/420", "issue_id": "#420", "issue_summary": "400: SSL handshake error", "issue_description": "sunrexstar commented on 4 Dec 2014\nHi\nI am trying to troubleshoot to get the mitmproxy up and running completely.\nHere is my setup configuration:\nclient (linux) -> mitmproxy(kali-linux) -> server (windows2k8)\ni fire up the mitmproxy using the command: mitmproxy -T --host\nperform some operations on the client which sends requests to the server running windows 2k8 via the proxy.\ni keep getting errors as below in the mitmproxy console:\nclient-IP:41217: connect\nclient-IP:41217: transparent to Server-Ip:443\nclient-IP:41217: 400: SSL handshake error: [('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert certificate unknown')]\nclient-IP:41217: disconnect\n-> handled 0 requests\nclient-IP:41220: connect\nclient-IP:41220: transparent to server-IP:443\nclient-IP:41220: 400: SSL handshake error: [('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert certificate unknown')]\nclient-IP:41220: disconnect\n-> handled 0 requests\nso far i have done the following to fix this issue without any luck:\ncopied the mitmproxy-ca-cert.pem to the client machine and imported it into the application's keystore using command: keytool -import -alias mitmproxy -file mitmproxy-ca-cert.pem -keystore application.keystore\nHere is the mitmproxy version running on Kali GNU/Linux 1.0.9:\nVersion: 0.10.1-1\nAny help to fix this will be of great help!!\nThanks.", "issue_status": "Closed", "issue_reporting_time": "2014-12-04T11:26:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1564": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/419", "issue_id": "#419", "issue_summary": "mitm.it: Add note that the CA is user-specific", "issue_description": "Member\nmhils commented on 4 Dec 2014\nWhen people install a cert using mitm.it, it seems to them like mitmproxy ships with a CA file that is shared between users. We should clarify that the CA is user-specifc and generated on the first startup.", "issue_status": "Closed", "issue_reporting_time": "2014-12-03T23:07:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1565": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/418", "issue_id": "#418", "issue_summary": "SSL issue", "issue_description": "therealklanni commented on 3 Dec 2014\nI am getting this a lot:\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n Traceback (most recent call last):\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 100, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1001, in handle_messages\n    while self.handle_flow():\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1074, in handle_flow\n    ret = self.process_request(flow, req)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1268, in process_request\n    return self.process_connect_request(self.c.server_conn.address)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1409, in process_connect_request\n    self.c.establish_ssl(server=True, client=True)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 198, in establish_ssl\n    chain_file=chain_file\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy/connection.py\", line 66, in convert_to_ssl\n    tcp.BaseHandler.convert_to_ssl(self, *args, **kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/netlib/tcp.py\", line 426, in convert_to_ssl\n    ctx = self._create_ssl_context(cert, key, **sslctx_kwargs)\n  File \"/usr/local/lib/python2.7/site-packages/netlib/tcp.py\", line 410, in _create_ssl_context\n    ctx.use_certificate(cert.x509)\n  File \"/usr/local/lib/python2.7/site-packages/OpenSSL/SSL.py\", line 406, in use_certificate\n    _raise_current_error()\n  File \"/usr/local/lib/python2.7/site-packages/OpenSSL/_util.py\", line 22, in exception_from_error_queue\n    raise exceptionType(errors)\nError: [('SSL routines', 'SSL_SET_CERT', 'unknown certificate type')]\n$ mitmproxy --version\nmitmproxy 0.11\n$ python --version\nPython 2.7.8\nNot sure if relevant:\n$ ssh -V\nOpenSSH_6.2p2, OSSLShim 0.9.8r 8 Dec 2011", "issue_status": "Closed", "issue_reporting_time": "2014-12-02T20:28:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1566": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/417", "issue_id": "#417", "issue_summary": "DummyReply instance has no attribute 'q'", "issue_description": "MarounMaroun commented on 1 Dec 2014\nHi,\nI'm not very familiar with mitmproxy, would be great if someone can help me with this exception.\nusing mitmproxy v 0.11.1\nTraceback (most recent call last):\n  File \"/home/maroun/.virtualenvs/ads_management_tests/local/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 100, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"/home/maroun/.virtualenvs/ads_management_tests/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1001, in handle_messages\n    while self.handle_flow():\n  File \"/home/maroun/.virtualenvs/ads_management_tests/local/lib/python2.7/site-packages/libmproxy/protocol/http.py\", line 1100, in handle_flow\n    response_reply = self.c.channel.ask(\"response\", flow)\n  File \"/home/maroun/.virtualenvs/ads_management_tests/local/lib/python2.7/site-packages/libmproxy/controller.py\", line 51, in ask\n    g = m.reply.q.get(timeout=0.5)\nAttributeError: DummyReply instance has no attribute 'q'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2014-12-01T12:37:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1567": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/413", "issue_id": "#413", "issue_summary": "when \"Editing scripts\", mitmproxy crashed", "issue_description": "Darkness0ut commented on 28 Nov 2014\nrun mitmproxy and press 's' key into \"Editing scripts\"\nwhen Command is \"No values\",press \"r\" key and load any file\n\"mitmproxy has crashed!\"\ntrackback info:\nFile \"./mitmproxy/libmproxy/console/grideditor.py\", line 127, in set_current_value\nerrors = self.lst[self.focus][1]\nIndexError: list index out of range\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2014-11-28T13:19:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1568": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/412", "issue_id": "#412", "issue_summary": "'ConsoleState' object has no attribute 'filt'", "issue_description": "gcoda commented on 23 Nov 2014\nI am probably just stupid, but what am i doing wrong?\non Ubuntu 14.10 i did:\napt-get install build-essential libssl-dev libffi-dev python-dev python-pip libxml2-dev libxslt1-dev git\ngit clone https://github.com/mitmproxy/mitmproxy.git\npip install mitmproxy\nmitmproxy\nand i got this\nTraceback (most recent call last):\nFile \"/home/m/mitmproxy/libmproxy/console/init.py\", line 610, in run\nself.ui.run_wrapper(self.loop)\nFile \"/usr/local/lib/python2.7/dist-packages/urwid/display_common.py\", line 757, in run_wrapper\nreturn fn()\nFile \"/home/m/mitmproxy/libmproxy/console/init.py\", line 820, in loop\nself.statusbar.redraw()\nFile \"/home/m/mitmproxy/libmproxy/console/init.py\", line 219, in redraw\nt.extend(self.get_status())\nFile \"/home/m/mitmproxy/libmproxy/console/init.py\", line 144, in get_status\nif self.master.state.limit_txt:\nFile \"/home/m/mitmproxy/libmproxy/flow.py\", line 352, in limit_txt\nif self.filt:\nAttributeError: 'ConsoleState' object has no attribute 'filt'\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nShutting down...", "issue_status": "Closed", "issue_reporting_time": "2014-11-23T08:08:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1569": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/411", "issue_id": "#411", "issue_summary": "AttributeError: 'NoneType' object has no attribute 'response'", "issue_description": "F1ashhimself commented on 18 Nov 2014\nmitmproxy v0.11\nFrom time to time I'm getting AttributeError: 'NoneType' object has no attribute 'response' error.\nStack trace:\nTraceback (most recent call last):\n  File \"C:\\Python27\\lib\\site-packages\\libmproxy\\proxy\\server.py\", line 100, in handle\n    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()\n  File \"C:\\Python27\\lib\\site-packages\\libmproxy\\protocol\\http.py\", line 1001, in handle_messages\n    while self.handle_flow():\n  File \"C:\\Python27\\lib\\site-packages\\libmproxy\\protocol\\http.py\", line 1093, in handle_flow\n    self.get_response_from_server(flow)\n  File \"C:\\Python27\\lib\\site-packages\\libmproxy\\protocol\\http.py\", line 1047, in get_response_from_server\n    if flow.response.stream:\nAttributeError: 'NoneType' object has no attribute 'response'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nSeems that we getting empty return in http.py on line 1041.\nflow = self.c.channel.ask(\"responseheaders\", flow)", "issue_status": "Closed", "issue_reporting_time": "2014-11-18T13:21:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1570": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/409", "issue_id": "#409", "issue_summary": "Connections start timing out after a few hundred requests", "issue_description": "endotoh commented on 14 Nov 2014\nI'm using mitmproxy to proxy HTTP (80) traffic only on Mac OSX. After vigorously clicking around for a few minutes on BBC.co.uk, cnn.com and nytimes.com (generating beween 500-1000 requests), I start getting connection timeouts from mitmproxy.\nHave followed @limeric29 's steps from #375 ie:\nI updated both netlib and mitmproxy using these commands:\npip uninstall netlib\npip uninstall mitmproxy\npip install git+https://github.com/mitmproxy/netlib.git@master\npip install git+https://github.com/mitmproxy/mitmproxy.git@master\nMy lsof -n -p PID output is: http://pastebin.com/tGAREXbp\nFrom uname -a:\nDarwin Kernel Version 13.3.0: Tue Jun 3 21:27:35 PDT 2014; root:xnu 2422.110.17~1/RELEASE_X86_64 x86_64\nPlease fix - as mitmproxy looks generally awesomely designed and documented, but I can't use this in anger if it effectively grinds to a halt after a few minutes of execution!", "issue_status": "Closed", "issue_reporting_time": "2014-11-14T13:26:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1571": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/408", "issue_id": "#408", "issue_summary": "PCAP support", "issue_description": "kryptpt commented on 14 Nov 2014\nHi,\nI did something around this. It's a dummy script for mitmdump.\nMaybe with some help, I can integrate this into libmproxy.", "issue_status": "Closed", "issue_reporting_time": "2014-11-14T01:13:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1572": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/407", "issue_id": "#407", "issue_summary": "What next?", "issue_description": "snake302 commented on 11 Nov 2014\nHi! I have got OS X!\nI downloaded mitproxy and launched it, but how I can connect to my proxy?\nI can find any FAQ and serfs inside my folder...", "issue_status": "Closed", "issue_reporting_time": "2014-11-11T10:37:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1573": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/406", "issue_id": "#406", "issue_summary": "Moving the terminal cursor along with selection", "issue_description": "tspivey commented on 11 Nov 2014\nWhen browsing the list of requests, the cursor does not move to the selected item; it just stays on the status line.\nThis makes it annoying to use with a screen reader.", "issue_status": "Closed", "issue_reporting_time": "2014-11-11T02:07:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1574": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/405", "issue_id": "#405", "issue_summary": "Run serverconnect and request hooks on replay", "issue_description": "Member\nmhils commented on 10 Nov 2014\nThe serverconnect and request hooks are not called when replaying a request yet.\nSee #402. Quirks:\nDon't add the flow to the view again (probably a simple patch to State)\nAdjust Client Replay, which then only has to start the replay.\nserverconnect doesn't really work, because we don't have a ConnectionHandler.", "issue_status": "Closed", "issue_reporting_time": "2014-11-10T16:24:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1575": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/402", "issue_id": "#402", "issue_summary": "cplayback stuck - no console rendering nor traffic generated", "issue_description": "Contributor\nLucas-C commented on 7 Nov 2014\nHi,\nThere are my exact keystrokes:\nmitmproxy --host\nc\npath_to_my_mitm_saved_flows\nAn nothing gets rendered, I just have a '[0/0] [cplayback:3 to go][showhost]' message in the bottom status bar.\nHowever, as soon as I press a key, the list of flows is diplayed, but they haven't been properly processed : I had tcpdump running in other terminal to check for any traffic, and nothing is sent by mitmproxy:\nsudo tcpdump -i wlan0 host $target_host -l 2>/dev/null\nI previously used the version from Ubuntu repositories, and it worked fine.\nAny idea on what is going on ?\nI'm using the latest repo version, installed without a virtualenv, on a Ubuntu \"trusty\" 14.04.1 LTS :\nsudo pip install --src . -r requirements.txt\nHere is the flows file I'm using, recorded with the same mitmproxy program version:\nhttps://chezsoi.org/lucas/covoiturage-libre_minimal-flows.mitm", "issue_status": "Closed", "issue_reporting_time": "2014-11-07T09:37:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1576": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/401", "issue_id": "#401", "issue_summary": "Setting flow.response.content to empty string leaves connection open", "issue_description": "magicalhobo commented on 7 Nov 2014\nI have a class that inherits from controller.Master, and I'm overriding handle_response to set flow.response.content to an empty string. Two things seem to be wrong when I do this:\nThe connection stays open for about 10 seconds, instead of closing immediately.\nContent-Length is set to the original value instead of 0.\nI don't see this behavior when using any other string response.", "issue_status": "Closed", "issue_reporting_time": "2014-11-07T01:12:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1577": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/400", "issue_id": "#400", "issue_summary": "Option to serialize the event log", "issue_description": "Contributor\nFuzion24 commented on 6 Nov 2014\nIt would be very nice to add an option to libmitmproxy to serialize the event log.\nI have scripts that I run along with mitmdump. I use the context logging as meta data about the findings, it would be nice to get those stored alongside the traffic flows.", "issue_status": "Closed", "issue_reporting_time": "2014-11-05T18:43:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1578": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/399", "issue_id": "#399", "issue_summary": "Server replay crash", "issue_description": "Mischanix commented on 5 Nov 2014\nLatest git\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.11-py2.7.egg/libmproxy/console/__init__.py\", line 609, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/raw_display.py\", line 268, in run_wrapper\n    return fn()\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.11-py2.7.egg/libmproxy/console/__init__.py\", line 834, in loop\n    self.prompt_execute(k)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.11-py2.7.egg/libmproxy/console/__init__.py\", line 761, in prompt_execute\n    msg = p(txt, *args)\n  File \"/usr/local/lib/python2.7/dist-packages/mitmproxy-0.11-py2.7.egg/libmproxy/console/flowlist.py\", line 129, in server_replay_prompt\n    False, self.master.nopop\nTypeError: start_server_playback() takes exactly 8 arguments (6 given)", "issue_status": "Closed", "issue_reporting_time": "2014-11-05T16:40:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1579": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/398", "issue_id": "#398", "issue_summary": "Document installation of dependencies.", "issue_description": "Member\nmhils commented on 4 Nov 2014\nWe have a variety of bug reports wrt. the installation procedure. While installing mitmproxy itself usually doesn't cause any issues, our dependencies often do ( #396, #379, ...).\nWe should document installation instructions for Linux, OSX and Windows, both for binary distributions as well as for installing from source.\nrefs:\nhttps://gist.github.com/mhils/9315651\n#394\nhttps://groups.google.com/d/msg/mitmproxy/SoNVziqow3g/3dELw1BNjQsJ", "issue_status": "Closed", "issue_reporting_time": "2014-11-04T15:32:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1580": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/397", "issue_id": "#397", "issue_summary": "Can't build git head from source OS X 10.10 (builtin python 2.7)", "issue_description": "eladg commented on 4 Nov 2014\nsw-macbook:mitmproxy eladgariany$ pip --version\npip 1.5.6 from /Library/Python/2.7/site-packages (python 2.7)\nRan:\ngit clone https://github.com/mitmproxy/mitmproxy.git\ncd mitmproxy\nThen:\nmacbook:mitmproxy elad$ pip install --src . -r requirements.txt\nObtaining file:///Users/elad/Documents/dutzi/mitmproxy (from -r requirements.txt (line 3))\n  Running setup.py (path:/Users/elad/Documents/dutzi/mitmproxy/setup.py) egg_info for package from file:///Users/elad/Documents/dutzi/mitmproxy\n\n    warning: no previously-included files found matching 'README.mkd'\n    warning: no files found matching '*' under directory 'doc'\n    warning: no previously-included files matching '*.pyo' found under directory '*'\n    warning: no previously-included files matching '*.swo' found under directory '*'\n    warning: no previously-included files matching '*.swp' found under directory '*'\n  Installing extra requirements: 'dev'\nObtaining netlib from git+https://github.com/mitmproxy/netlib.git#egg=netlib (from -r requirements.txt (line 1))\n  Updating ./netlib clone\n  Running setup.py (path:/Users/elad/Documents/dutzi/mitmproxy/netlib/setup.py) egg_info for package netlib\n\n    warning: no previously-included files matching '*.pyc' found under directory '*'\n    warning: no previously-included files matching '*.pyo' found under directory '*'\n    warning: no previously-included files matching '*.swo' found under directory '*'\n    warning: no previously-included files matching '*.swp' found under directory '*'\n  Installing extra requirements: 'egg'\nObtaining pathod from git+https://github.com/mitmproxy/pathod.git#egg=pathod (from -r requirements.txt (line 2))\n  Updating ./pathod clone\n  Running setup.py (path:/Users/elad/Documents/dutzi/mitmproxy/pathod/setup.py) egg_info for package pathod\n\n    warning: no previously-included files found matching 'README.mkd'\n    warning: no previously-included files matching '*.pyo' found under directory '*'\n    warning: no previously-included files matching '*.swo' found under directory '*'\n    warning: no previously-included files matching '*.swp' found under directory '*'\n  Installing extra requirements: 'egg'\nDownloading/unpacking Flask>=0.10.1 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading Flask-0.10.1.tar.gz (544kB): 544kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/Flask/setup.py) egg_info for package Flask\n\n    warning: no files found matching '*' under directory 'tests'\n    warning: no previously-included files matching '*.pyc' found under directory 'docs'\n    warning: no previously-included files matching '*.pyo' found under directory 'docs'\n    warning: no previously-included files matching '*.pyc' found under directory 'tests'\n    warning: no previously-included files matching '*.pyo' found under directory 'tests'\n    warning: no previously-included files matching '*.pyc' found under directory 'examples'\n    warning: no previously-included files matching '*.pyo' found under directory 'examples'\n    no previously-included directories found matching 'docs/_build'\n    no previously-included directories found matching 'docs/_themes/.git'\nDownloading/unpacking pyasn1>0.1.2 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading pyasn1-0.1.7.tar.gz (68kB): 68kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/pyasn1/setup.py) egg_info for package pyasn1\n\nDownloading/unpacking tornado>=4.0.2 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading tornado-4.0.2.tar.gz (315kB): 315kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/tornado/setup.py) egg_info for package tornado\n\nDownloading/unpacking urwid>=1.1 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading urwid-1.3.0.tar.gz (580kB): 580kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/urwid/setup.py) egg_info for package urwid\n\n    warning: no files found matching 'CHANGELOG'\nDownloading/unpacking requests>=2.4.0 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading requests-2.4.3-py2.py3-none-any.whl (459kB): 459kB downloaded\nDownloading/unpacking sortedcontainers>=0.9.1 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading sortedcontainers-0.9.2.tar.gz\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/sortedcontainers/setup.py) egg_info for package sortedcontainers\n\nDownloading/unpacking pyOpenSSL>=0.14 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading pyOpenSSL-0.14.tar.gz (128kB): 128kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/pyOpenSSL/setup.py) egg_info for package pyOpenSSL\n\n    warning: no previously-included files matching '*.pyc' found anywhere in distribution\n    no previously-included directories found matching 'doc/_build'\nDownloading/unpacking Pillow>=2.3.0 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading Pillow-2.6.1.tar.gz (7.3MB): 7.3MB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/Pillow/setup.py) egg_info for package Pillow\n\n    warning: no files found matching '*.yaml'\n    warning: no files found matching '*.bdf' under directory 'Images'\n    warning: no files found matching '*.fli' under directory 'Images'\n    warning: no files found matching '*.gif' under directory 'Images'\n    warning: no files found matching '*.icns' under directory 'Images'\n    warning: no files found matching '*.ico' under directory 'Images'\n    warning: no files found matching '*.jpg' under directory 'Images'\n    warning: no files found matching '*.pbm' under directory 'Images'\n    warning: no files found matching '*.pil' under directory 'Images'\n    warning: no files found matching '*.png' under directory 'Images'\n    warning: no files found matching '*.ppm' under directory 'Images'\n    warning: no files found matching '*.psd' under directory 'Images'\n    warning: no files found matching '*.tar' under directory 'Images'\n    warning: no files found matching '*.webp' under directory 'Images'\n    warning: no files found matching '*.xpm' under directory 'Images'\n    warning: no files found matching 'README' under directory 'Sane'\n    warning: no files found matching 'README' under directory 'Scripts'\n    warning: no files found matching '*.icm' under directory 'Tests'\n    warning: no files found matching '*.txt' under directory 'Tk'\nDownloading/unpacking lxml>=3.3.6 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading lxml-3.4.0.tar.gz (3.5MB): 3.5MB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/lxml/setup.py) egg_info for package lxml\n    /System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'bugtrack_url'\n      warnings.warn(msg)\n    Building lxml version 3.4.0.\n    Building without Cython.\n    Using build configuration of libxslt 1.1.28\n\n    warning: no previously-included files found matching '*.py'\nDownloading/unpacking mock>=1.0.1 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading mock-1.0.1.tar.gz (818kB): 818kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/mock/setup.py) egg_info for package mock\n\n    warning: no files found matching '*.png' under directory 'docs'\n    warning: no files found matching '*.css' under directory 'docs'\n    warning: no files found matching '*.html' under directory 'docs'\n    warning: no files found matching '*.js' under directory 'docs'\nDownloading/unpacking nose>=1.3.0 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading nose-1.3.4.tar.gz (277kB): 277kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/nose/setup.py) egg_info for package nose\n\n    no previously-included directories found matching 'doc/.build'\nDownloading/unpacking nose-cov>=1.6 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading nose-cov-1.6.tar.gz\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/nose-cov/setup.py) egg_info for package nose-cov\n\nDownloading/unpacking coveralls>=0.4.1 (from mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading coveralls-0.4.4.zip\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/coveralls/setup.py) egg_info for package coveralls\n\nDownloading/unpacking passlib>=1.6.2 (from netlib->-r requirements.txt (line 1))\n  Downloading passlib-1.6.2.tar.gz (408kB): 408kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/passlib/setup.py) egg_info for package passlib\n\nDownloading/unpacking Werkzeug>=0.7 (from Flask>=0.10.1->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading Werkzeug-0.9.6.tar.gz (1.1MB): 1.1MB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/Werkzeug/setup.py) egg_info for package Werkzeug\n\n    warning: no files found matching '*' under directory 'werkzeug/debug/templates'\n    warning: no files found matching '*' under directory 'tests'\n    warning: no previously-included files matching '*.pyc' found under directory 'docs'\n    warning: no previously-included files matching '*.pyo' found under directory 'docs'\n    warning: no previously-included files matching '*.pyc' found under directory 'tests'\n    warning: no previously-included files matching '*.pyo' found under directory 'tests'\n    warning: no previously-included files matching '*.pyc' found under directory 'examples'\n    warning: no previously-included files matching '*.pyo' found under directory 'examples'\n    no previously-included directories found matching 'docs/_build'\nDownloading/unpacking Jinja2>=2.4 (from Flask>=0.10.1->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading Jinja2-2.7.3.tar.gz (378kB): 378kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/Jinja2/setup.py) egg_info for package Jinja2\n\n    warning: no files found matching '*' under directory 'custom_fixers'\n    warning: no previously-included files matching '*' found under directory 'docs/_build'\n    warning: no previously-included files matching '*.pyc' found under directory 'jinja2'\n    warning: no previously-included files matching '*.pyc' found under directory 'docs'\n    warning: no previously-included files matching '*.pyo' found under directory 'jinja2'\n    warning: no previously-included files matching '*.pyo' found under directory 'docs'\nDownloading/unpacking itsdangerous>=0.21 (from Flask>=0.10.1->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading itsdangerous-0.24.tar.gz (46kB): 46kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/itsdangerous/setup.py) egg_info for package itsdangerous\n\n    warning: no previously-included files matching '*' found under directory 'docs/_build'\nDownloading/unpacking certifi (from tornado>=4.0.2->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading certifi-14.05.14.tar.gz (168kB): 168kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/certifi/setup.py) egg_info for package certifi\n\nDownloading/unpacking backports.ssl-match-hostname (from tornado>=4.0.2->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading backports.ssl_match_hostname-3.4.0.2.tar.gz\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/backports.ssl-match-hostname/setup.py) egg_info for package backports.ssl-match-hostname\n\nDownloading/unpacking cryptography>=0.2.1 (from pyOpenSSL>=0.14->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading cryptography-0.6.1.tar.gz (236kB): 236kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/cryptography/setup.py) egg_info for package cryptography\n\n    no previously-included directories found matching 'docs/_build'\n    warning: no previously-included files matching '*' found under directory 'vectors'\nDownloading/unpacking six>=1.5.2 (from pyOpenSSL>=0.14->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading six-1.8.0-py2.py3-none-any.whl\nDownloading/unpacking cov-core>=1.6 (from nose-cov>=1.6->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading cov-core-1.14.0.tar.gz\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/cov-core/setup.py) egg_info for package cov-core\n\nDownloading/unpacking PyYAML>=3.10 (from coveralls>=0.4.1->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading PyYAML-3.11.tar.gz (248kB): 248kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/PyYAML/setup.py) egg_info for package PyYAML\n\nDownloading/unpacking docopt>=0.6.1 (from coveralls>=0.4.1->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading docopt-0.6.2.tar.gz\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/docopt/setup.py) egg_info for package docopt\n\nDownloading/unpacking coverage>=3.6,<3.999 (from coveralls>=0.4.1->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading coverage-3.7.1.tar.gz (284kB): 284kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/coverage/setup.py) egg_info for package coverage\n\n    warning: no previously-included files matching '*.pyc' found anywhere in distribution\nDownloading/unpacking markupsafe (from Jinja2>=2.4->Flask>=0.10.1->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading MarkupSafe-0.23.tar.gz\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/markupsafe/setup.py) egg_info for package markupsafe\n\nDownloading/unpacking cffi>=0.8 (from cryptography>=0.2.1->pyOpenSSL>=0.14->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading cffi-0.8.6.tar.gz (196kB): 196kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/cffi/setup.py) egg_info for package cffi\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n    Package libffi was not found in the pkg-config search path.\n    Perhaps you should add the directory containing `libffi.pc'\n    to the PKG_CONFIG_PATH environment variable\n    No package 'libffi' found\n\nRequirement already satisfied (use --upgrade to upgrade): setuptools in /System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python (from cryptography>=0.2.1->pyOpenSSL>=0.14->mitmproxy==0.11->-r requirements.txt (line 3))\nDownloading/unpacking pycparser (from cffi>=0.8->cryptography>=0.2.1->pyOpenSSL>=0.14->mitmproxy==0.11->-r requirements.txt (line 3))\n  Downloading pycparser-2.10.tar.gz (206kB): 206kB downloaded\n  Running setup.py (path:/private/var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/pip_build_elad/pycparser/setup.py) egg_info for package pycparser\n\nInstalling collected packages: netlib, pathod, Flask, pyasn1, tornado, urwid, requests, sortedcontainers, pyOpenSSL, Pillow, lxml, mock, nose, nose-cov, coveralls, mitmproxy, passlib, Werkzeug, Jinja2, itsdangerous, certifi, backports.ssl-match-hostname, cryptography, six, cov-core, PyYAML, docopt, coverage, markupsafe, cffi, pycparser\n  Running setup.py develop for netlib\n    Checking .pth file support in /Library/Python/2.7/site-packages/\n    error: can't create or remove files in install directory\n\n    The following error occurred while trying to add or remove files in the\n    installation directory:\n\n        [Errno 13] Permission denied: '/Library/Python/2.7/site-packages/test-easy-install-12088.pth'\n\n    The installation directory you specified (via --install-dir, --prefix, or\n    the distutils default setting) was:\n\n        /Library/Python/2.7/site-packages/\n\n    Perhaps your account does not have write access to this directory?  If the\n    installation directory is a system-owned directory, you may need to sign in\n    as the administrator or \"root\" account.  If you do not have administrative\n    access to this machine, you may wish to choose a different installation\n    directory, preferably one that is listed in your PYTHONPATH environment\n    variable.\n\n    For information on other options, you may wish to consult the\n    documentation at:\n\n      https://pythonhosted.org/setuptools/easy_install.html\n\n    Please make the appropriate changes for your system and try again.\n\n    Complete output from command /System/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python -c \"import setuptools, tokenize; __file__='/Users/elad/Documents/dutzi/mitmproxy/netlib/setup.py'; exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" develop --no-deps:\n    running develop\n\nChecking .pth file support in /Library/Python/2.7/site-packages/\n\nerror: can't create or remove files in install directory\n\n\n\nThe following error occurred while trying to add or remove files in the\n\ninstallation directory:\n\n\n\n    [Errno 13] Permission denied: '/Library/Python/2.7/site-packages/test-easy-install-12088.pth'\n\n\n\nThe installation directory you specified (via --install-dir, --prefix, or\n\nthe distutils default setting) was:\n\n\n\n    /Library/Python/2.7/site-packages/\n\n\n\nPerhaps your account does not have write access to this directory?  If the\n\ninstallation directory is a system-owned directory, you may need to sign in\n\nas the administrator or \"root\" account.  If you do not have administrative\n\naccess to this machine, you may wish to choose a different installation\n\ndirectory, preferably one that is listed in your PYTHONPATH environment\n\nvariable.\n\n\n\nFor information on other options, you may wish to consult the\n\ndocumentation at:\n\n\n\n  https://pythonhosted.org/setuptools/easy_install.html\n\n\n\nPlease make the appropriate changes for your system and try again.\n\n\n\n----------------------------------------\nCleaning up...\nCommand /System/Library/Frameworks/Python.framework/Versions/2.7/Resources/Python.app/Contents/MacOS/Python -c \"import setuptools, tokenize; __file__='/Users/elad/Documents/dutzi/mitmproxy/netlib/setup.py'; exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" develop --no-deps failed with error code 1 in /Users/elad/Documents/dutzi/mitmproxy/netlib\nStoring debug log for failure in /var/folders/ws/l5z2_m4d213b7v_7wmmw7zgm0000gn/T/tmpqWEihO\nmacbook:mitmproxy elad$", "issue_status": "Closed", "issue_reporting_time": "2014-11-04T14:22:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1581": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/396", "issue_id": "#396", "issue_summary": "pip install fails 0.10.1 because of cryptography - OS X 10.9.5 (Mavericks)", "issue_description": "JeNeSuisPasDave commented on 4 Nov 2014\nInstalling mitmproxy with pip in a python 2.7.8 virtualenv fails because the cryptography package fails to install.\nThe workaround is found here: http://chriskief.com/2014/03/25/installing-cryptography-via-pip-with-macports-or-homebrew/\nI have openssl installed with mac ports. By first installing cryptography using the command \"env ARCHFLAGS=\"-arch x86_64\" LDFLAGS=\"-L/opt/local/lib\" CFLAGS=\"-I/opt/local/include\" pip install cryptography\" I was able to subsequently and successfully install mitmproxy.", "issue_status": "Closed", "issue_reporting_time": "2014-11-04T00:33:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1582": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/394", "issue_id": "#394", "issue_summary": "Replace pyinstaller for OSX installation", "issue_description": "Member\ncortesi commented on 4 Nov 2014\nWe need to move away from pyinstaller because:\nIt causes weird behaviour in mitmdump, like failure to exit on keyboard interrupt\nIt doesn't support Python3, which we're heading towards, and probably won't any time soon\nI propose that we create mitmproxy installer script instead, which installs mitmproxy and all its dependencies in a virtualenv in the user's home directory, and then symlinks the executables in ~/bin.\nThis isolates us from the rest of the system, and might also form the basis of an installer for other platforms.", "issue_status": "Closed", "issue_reporting_time": "2014-11-03T22:21:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1583": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/392", "issue_id": "#392", "issue_summary": "Original path replaced by * in HTTP OPTIONS requests", "issue_description": "Contributor\nonlywade commented on 1 Nov 2014\nFor OPTIONS requests where the outgoing form should be relative (i.e. we're not using an upstream proxy), the original path is replaced with a single '*' (asterisk) character. This causes CORS scenarios to fail when the server doesn't support wildcard preflight requests.\nThis substitution looks to be done deliberately with the intention of supporting \"asterisk form\" requests -- See 3032672. I don't think it's necessary, since asterisk form requests can be handled in the same way as any other relative request, though I could be missing something.\nSteps to reproduce the problem:\nRun mitmproxy without supplying any CLI args\nMake a proxied OPTIONS request for a specific resource, e.g. curl -i https://api.github.com/orgs/mitmproxy/repos -X OPTIONS -x 127.0.0.1:8080\nExpected results:\nServer receives request with the original path intact, returns 204 No Content response along with relevant Access-Control headers.\nActual results:\nServer receives request with * in place of original path, returns 502 Bad Gateway response.\nSuggested fix: modify protocol.http.HTTPRequest._assemble_first_line(), removing the special treatment for OPTIONS requests. For good measure, add a test to cover this fairly common scenario.", "issue_status": "Closed", "issue_reporting_time": "2014-10-31T18:46:13Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1584": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/391", "issue_id": "#391", "issue_summary": "--ssl-port list not passed to TransparentProxyMode and Socks5ProxyMode", "issue_description": "nlitsme commented on 30 Oct 2014\nproxy/config.py does not pass the ssl_ports parameter to TransparentProxyMode and Socks5ProxyMode.\ndiff --git a/libmproxy/proxy/config.py b/libmproxy/proxy/config.py\nindex fe2b45f..2c52899 100644\n--- a/libmproxy/proxy/config.py\n+++ b/libmproxy/proxy/config.py\n@@ -43,9 +43,9 @@ class ProxyConfig:\n         self.body_size_limit = body_size_limit\n\n         if mode == \"transparent\":\n-            self.mode = TransparentProxyMode(platform.resolver(), TRANSPARENT_SSL_PORTS)\n+            self.mode = TransparentProxyMode(platform.resolver(), ssl_ports)\n         elif mode == \"socks5\":\n-            self.mode = Socks5ProxyMode(TRANSPARENT_SSL_PORTS)\n+            self.mode = Socks5ProxyMode(ssl_ports)\n         elif mode == \"reverse\":\n             self.mode = ReverseProxyMode(upstream_server)\n         elif mode == \"upstream\":", "issue_status": "Closed", "issue_reporting_time": "2014-10-30T12:16:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1585": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/390", "issue_id": "#390", "issue_summary": "Compiled files in the tarball", "issue_description": "fabaff commented on 28 Oct 2014\nWe are working on including mitmproxy into Fedora Package collection. But after the build process rpmlint complains about a couple of files.\nmitmproxy.noarch: W: python-bytecode-without-source /usr/lib/python2.7/site-packages/libmproxy/protocol/tcp.pyc\nmitmproxy.noarch: W: python-bytecode-without-source /usr/lib/python2.7/site-packages/libmproxy/protocol/__init__.pyc\nmitmproxy.noarch: W: python-bytecode-without-source /usr/lib/python2.7/site-packages/libmproxy/protocol/primitives.pyc\nmitmproxy.noarch: W: python-bytecode-without-source /usr/lib/python2.7/site-packages/libmproxy/protocol/http.pyc\nChecking the tarball confirms that.\n$ ls mitmproxy-0.10.1/libmproxy/protocol/\nhttp.pyc  __init__.pyc  primitives.pyc  tcp.pyc\nIn git the right files are available. It would be nice if you fix this and release a new tarball (perhaps 0.10.2). Thanks in advance.", "issue_status": "Closed", "issue_reporting_time": "2014-10-28T11:35:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1586": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/389", "issue_id": "#389", "issue_summary": "ERR_EMPTY_RESPONSE When using mitmproxy in VPN", "issue_description": "talbenbasat commented on 27 Oct 2014\nHi @mhils ,\nI've continued my task and tried to integrate mitm in our testing environment.\nThe apache, haproxy and cas are in our VPN.\nI've tried to use mitmproxy but the server gets disconnected, logging this message:\n502: Server disconnect.\nIn the browser I can see a request with the following message:\nnet::ERR_EMPTY_RESPONSE\nI've looked in the web for some answers and found those links:\n#262 (issue in mitmproxy repository)\nhttps://groups.google.com/forum/#!topic/mitmproxy/cLWjnJJ8FMA\nWe've watched the apache2 logs, in debug level, and it appears like there is no activity there.\nWhen we turned off the mitmproxy it worked normally and we haven't received any errors.\nHowever in my production environment it did work.\nThis behavior leads my to believe its might be in the code,\nmaybe in line 314 in:\nhttps://github.com/mitmproxy/netlib/blob/master/netlib/http.py\nI would really appreciate your help in this manner\nThanks,\nTal", "issue_status": "Closed", "issue_reporting_time": "2014-10-27T16:50:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1587": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/386", "issue_id": "#386", "issue_summary": "Server replay mode crashes if not provided an --ignore-param value", "issue_description": "Contributor\nonlywade commented on 25 Oct 2014\nSince the addition of the --replay-ignore-param option in revision 81f5636, mitmproxy/mitmdump crashes with the following error when started in server replay mode without specifying at least one parameter to ignore:\n  $ ./mitmdump -S traffic.dat\n  File \"./mitmdump\", line 3, in <module>\n    mitmdump()\n  File \"/Users/u524/work/open/mitmproxy/libmproxy/main.py\", line 153, in mitmdump\n    master = dump.DumpMaster(server, dump_options)\n  File \"/Users/u524/work/open/mitmproxy/libmproxy/dump.py\", line 115, in __init__\n    options.replay_ignore_content\n  File \"/Users/u524/work/open/mitmproxy/libmproxy/flow.py\", line 574, in start_server_playback\n    self.server_playback = ServerPlaybackState(headers, flows, exit, nopop, ignore_params, ignore_content)\n  File \"/Users/u524/work/open/mitmproxy/libmproxy/flow.py\", line 206, in __init__\n    l = self.fmap.setdefault(self._hash(i), [])\n  File \"/Users/u524/work/open/mitmproxy/libmproxy/flow.py\", line 223, in _hash\n    if p[0] not in self.ignore_params:\nTypeError: argument of type 'NoneType' is not iterable\nThe reason is that all option values, if not explicitly set, default to None -- but the ServerPlaybackState _hash() method expects the replay_ignore_params option value to be iterable.\nTo reproduce the problem:\nStart mitmdump in record mode: mitmdump -w traffic.dat\nUse a client to make some requests via the proxy\nShut down the proxy\nTry starting mitmdump in replay mode: mitmdump -S traffic.dat\nExpected result: the proxy runs sucessfully\nActual results: the proxy crashes within a second, when it tries to prepare the server playback state\nSuggested fix: update ServerPlaybackState._hash() to attempt iteration on the value only after ensuring that it isn't None.", "issue_status": "Closed", "issue_reporting_time": "2014-10-24T22:25:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1588": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/385", "issue_id": "#385", "issue_summary": "HAR Export", "issue_description": "TonyZaro commented on 21 Oct 2014\nFirst off, the mitmproxy project is awesome and has great potential for a project my team and I are starting.\nDid I understand correctly that HAR export functionality has recently been added? How can a captured session/flow be exported in the HAR format? I haven't come across anything in your documentation about this.\nIdeally there would be command line flags for mitmdump such as \"mitmdump -w -format HAR\"\nThanks for any feedback", "issue_status": "Closed", "issue_reporting_time": "2014-10-21T16:57:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1589": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/384", "issue_id": "#384", "issue_summary": "mitmproxy is an order of magnitude slower than Charles", "issue_description": "xrd commented on 21 Oct 2014\nI love mitmproxy but it seems to be an order of magnitude slower than Charles.\nI'm using the following script:\n#!/usr/bin/env ruby\n\nand_then = Time.now()\nputs \"Starting charles: #{and_then}\"\n100.times do |i|\n  `curl -s --proxy http://localhost:8888 http://google.com`\nend\nand_now = Time.now()\nputs \"Ending charles: #{and_now - and_then}\"\n\nand_then = Time.now()\nputs \"Starting mitmproxy: #{and_then}\"\n100.times do |i|\n  `curl -s --proxy http://localhost:8080 http://google.com`\nend\nand_now = Time.now()\nputs \"Ending mitmproxy: #{and_now - and_then}\"\nMy results are this:\nStarting charles: 2014-10-20 14:07:19 -0700\nEnding charles: 1.567501\nStarting mitmproxy: 2014-10-20 14:07:21 -0700\nEnding mitmproxy: 19.765162\nIs this inevitable given mitmproxy is written in python and Charles is compiled object code? Or, is my test suspect?\nThis is important because my client app (running on an iPhone) thinks the network has dropped when I use mitmproxy rather than Charles.", "issue_status": "Closed", "issue_reporting_time": "2014-10-20T21:10:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1590": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/383", "issue_id": "#383", "issue_summary": "error: [Errno 24] Too many open files", "issue_description": "zacharyblank commented on 20 Oct 2014\nWhen running mitmdump -s /var/monitor/log.py -T --host\n<< 502: Connection closed prematurely\nException in thread Thread-1:\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/threading.py\", line 810, in __bootstrap_inner\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py\", line 77, in run\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 397, in serve_forever\n  File \"/usr/lib/python2.7/socket.py\", line 202, in accept\nerror: [Errno 24] Too many open files", "issue_status": "Closed", "issue_reporting_time": "2014-10-20T12:09:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1591": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/382", "issue_id": "#382", "issue_summary": "mitmproxy crashes after processing a long URL", "issue_description": "drbolsen commented on 16 Oct 2014\nHi there,\nJust wanted to report an issue with mitmproxy I experienced recently.\nThe proxy crashed with the following error (real IPs replaced with XXX.XXX.XXX.XXX):\n[Oct 15 05:01:44.457] XXX.XXX.XXX.XXX GET http://XXX.XXX.XXX.XXX/../../../../../../../../../../windows/win.ini\n[Oct 15 05:01:44.457]  << 403 Forbidden 312B\n[Oct 15 05:01:54.357] Traceback (most recent call last):\n[Oct 15 05:01:54.357]   File \"/usr/local/bin/mitmdump\", line 55, in <module>\n[Oct 15 05:01:54.357]     m.run()\n[Oct 15 05:01:54.357]   File \"/usr/local/lib/python2.7/dist-packages/libmproxy/dump.py\", line 230, in run\n[Oct 15 05:01:54.358]     return flow.FlowMaster.run(self)\n[Oct 15 05:01:54.358]   File \"/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py\", line 112, in run\n[Oct 15 05:01:54.358]     self.tick(self.masterq)\n[Oct 15 05:01:54.358]   File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 1499, in tick\n[Oct 15 05:01:54.359]     return controller.Master.tick(self, q)\n[Oct 15 05:01:54.359]   File \"/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py\", line 101, in tick\n[Oct 15 05:01:54.359]     self.handle(*msg)\n[Oct 15 05:01:54.359]   File \"/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py\", line 119, in handle\n[Oct 15 05:01:54.359]     m(obj)\n[Oct 15 05:01:54.359]   File \"/usr/local/lib/python2.7/dist-packages/libmproxy/dump.py\", line 218, in handle_error\n[Oct 15 05:01:54.359]     self._process_flow(f)\n[Oct 15 05:01:54.359]   File \"/usr/local/lib/python2.7/dist-packages/libmproxy/dump.py\", line 177, in _process_flow\n[Oct 15 05:01:54.359]     print >> self.outfile, str_request(f.request, self.showhost)\n[Oct 15 05:01:54.359]   File \"/usr/local/lib/python2.7/dist-packages/libmproxy/dump.py\", line 55, in str_request\n[Oct 15 05:01:54.359]     r = \"%s %s %s\"%(c, req.method, req.get_url(showhost))\n[Oct 15 05:01:54.359]   File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 486, in get_url\n[Oct 15 05:01:54.360]     host = host.encode(\"idna\")\n[Oct 15 05:01:54.360]   File \"/usr/lib/python2.7/encodings/idna.py\", line 164, in encode\n[Oct 15 05:01:54.360]     result.append(ToASCII(label))\n[Oct 15 05:01:54.360]   File \"/usr/lib/python2.7/encodings/idna.py\", line 73, in ToASCII\n[Oct 15 05:01:54.360]     raise UnicodeError(\"label empty or too long\")\n[Oct 15 05:01:54.360] UnicodeError: label empty or too long\nAdditional details:\nPlatform Ubuntu 14.04 in a docker container (docker.com).", "issue_status": "Closed", "issue_reporting_time": "2014-10-15T23:47:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1592": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/381", "issue_id": "#381", "issue_summary": "[server replay] allow replay regardless of the request body", "issue_description": "blandinw commented on 15 Oct 2014\nHello,\nI'm streaming audio from microphone-enabled devices to my servers and would like to use server replay regardless of the recorded audio (request body).\nWhat is the best way to do that? Is there an option for that?\nI'm willing to write a blog post for later reference if this requires some hacking.", "issue_status": "Closed", "issue_reporting_time": "2014-10-14T19:13:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1593": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/380", "issue_id": "#380", "issue_summary": "Update --client-certs docs", "issue_description": "charliek commented on 13 Oct 2014\nI was unable to find documentation on how client side certificates are configured. It looks like this client side option would be used, but I've been unable to track down how to leverage it.", "issue_status": "Closed", "issue_reporting_time": "2014-10-13T15:56:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1594": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/379", "issue_id": "#379", "issue_summary": "pip install fails", "issue_description": "alexolivier commented on 13 Oct 2014\nI'm struggling to get this installed. It is erroring out when installing the netlib package. Any ideas?\npip install --src . -r requirements.txt\n\nCommand /usr/bin/python -c \"import setuptools, tokenize; \n__file__='/Users/alexolivier/repos/mitmproxy/netlib/setup.py'; exec(compile(getattr(tokenize, 'open', open)(__file__).read().replace('\\r\\n', '\\n'), __file__, 'exec'))\" develop --no-deps failed with error code 1 in /Users/alexolivier/repos/mitmproxy/netlib\nPython 2.7.5\nDarwin Alex-Oliviers-MacBook-Pro.local 13.4.0 Darwin Kernel Version 13.4.0: Sun Aug 17 19:50:11 PDT 2014; root:xnu-2422.115.4~1/RELEASE_X86_64 x86_64", "issue_status": "Closed", "issue_reporting_time": "2014-10-13T10:05:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1595": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/378", "issue_id": "#378", "issue_summary": "Update --cert docs", "issue_description": "Member\nmhils commented on 9 Oct 2014\nhttp://mitmproxy.org/doc/ssl.html\nAdd note that the cert chain can be added to the PEM file below the leaf cert.\nMake distinction between cert and CA more clear.", "issue_status": "Closed", "issue_reporting_time": "2014-10-09T12:39:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1596": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/377", "issue_id": "#377", "issue_summary": "self generated ssl cert can't generate the interception certificate", "issue_description": "c4pr1c3 commented on 9 Oct 2014\nI followed the guide on http://mitmproxy.org/doc/ssl.html , but the self generated PEM can't be used to generate the interception certificate on the fly. In browser, only the self generated cert is present.\nI used the following command line to produce the above result:\nmitmproxy --cert ca.pem\nHowever, I replaced the ~/.mitmproxy/mitmproxy-ca.pem with my self-generated cert ca.pem and run using the following command:\nmitmproxy\nIt works! Interception certificate is generated on-the-fly.\nruntime configuration as follows:\n$ pip freeze\nBeautifulSoup==3.2.1\ncffi==0.8.6\ncryptography==0.6\nmercurial==3.0.2\nmitmproxy==0.10.1\npyOpenSSL==0.14\npycparser==2.10\npypimirror==1.0.16.4\nsix==1.8.0\nvboxapi==1.0\nwsgiref==0.1.2\nzc.lockfile==1.1.0\n$ python --version\nPython 2.7.8\n$ mitmproxy --version\nmitmproxy 0.10.1\nOS: mac os x 10.9\nHomebrew installed mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2014-10-09T03:15:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1597": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/376", "issue_id": "#376", "issue_summary": "TestProxyChainingSSLReconnect randomly fails", "issue_description": "Member\nmhils commented on 9 Oct 2014\nTestProxyChainingSSLReconnect seems to contain a difficult-to-trigger race condition, only surfacing every 100th run or so. This is possibly related to mitmproxy/netlib@e6a8730 - can .recv() trigger an SSL error in rare cases?\nEvery 0,1s: nosetests -x test_server.py:TestProxyChainingSSLReconnect\n\nF\n======================================================================\nFAIL: Tests proper functionality of ConnectionHandler.server_reconnect mock.\n----------------------------------------------------------------------\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/nose/case.py\", line 197, in runTest\n    self.test(*self.arg)\n  File \"/media/sf_git/mitmproxy/test/test_server.py\", line 685, in test_reconnect\n    assert self.chain[0].tmaster.state.flow_count() == 6  # + new request, repeated CONNECT from chain[1]\nAssertionError:\n-------------------- >> begin captured logging << --------------------\npasslib.utils.compat: DEBUG: loaded lazy attr 'SafeConfigParser': <class ConfigParser.SafeConfigParser at 0x7fbf957218d8>\npasslib.utils.compat: DEBUG: loaded lazy attr 'NativeStringIO': <built-in function StringIO>\npasslib.utils.compat: DEBUG: loaded lazy attr 'BytesIO': <built-in function StringIO>\npasslib.registry: DEBUG: registered 'htdigest' handler: <class 'passlib.handlers.digests.htdigest'>\npasslib.registry: DEBUG: registered 'apr_md5_crypt' handler: <class 'passlib.handlers.md5_crypt.apr_md5_crypt'>\npasslib.registry: DEBUG: registered 'des_crypt' handler: <class 'passlib.handlers.des_crypt.des_crypt'>\npasslib.registry: DEBUG: registered 'ldap_sha1' handler: <class 'passlib.handlers.ldap_digests.ldap_sha1'>\npasslib.registry: DEBUG: registered 'plaintext' handler: <class 'passlib.handlers.misc.plaintext'>\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): 127.0.0.1\npathod: INFO: 127.0.0.1:56905: app: GET /api/clear_log\nrequests.packages.urllib3.connectionpool: DEBUG: \"GET /api/clear_log HTTP/1.1\" 200 2\nrequests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): 127.0.0.1\npathod: INFO: 127.0.0.1:45274: app: GET /api/clear_log\nrequests.packages.urllib3.connectionpool: DEBUG: \"GET /api/clear_log HTTP/1.1\" 200 2\npathod: INFO: 127.0.0.1:56915: crafting spec: 418:b\"content\"\n--------------------- >> end captured logging << ---------------------\n\n----------------------------------------------------------------------\nRan 1 test in 0.797s\n\nFAILED (failures=1)", "issue_status": "Closed", "issue_reporting_time": "2014-10-09T03:12:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1598": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/375", "issue_id": "#375", "issue_summary": "Too many open files", "issue_description": "limeric29 commented on 9 Oct 2014\nAfter few minutes of running MITMProxy, I can't browse anymore.\nMITMProxy is still running but it looks like it is hang up.\nI looked in the event log and found this error.\nProxyError(NetLibError('Error connecting to \"SERVER_IP_HERE\": [Errno 24] Too many open files',),)\nWhat is the possible cause of this issue? Any workaround for this?\nMITMProxy version 0.11", "issue_status": "Closed", "issue_reporting_time": "2014-10-09T01:28:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1599": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/374", "issue_id": "#374", "issue_summary": "Generalize to handle generic SSL-encrypted TCP traffic", "issue_description": "Contributor\nFuzion24 commented on 9 Oct 2014\nmitmproxy is fantastic for intercepting and modifying HTTP/HTTPS traffic. However, not all network traffic of interest fits into this category. For example, XMPP is a protocol which is XML based and does not rely on HTTP. In order to be able to handle traffic for these cases, we want to be able to support the capture of generalized TCP traffic which is SSL'ed.\nTest and merge SOCKS support\nAdd --tcp switch and add checks for such around check_ignore_address/establish_ssl\nThe following are some slightly cleaned up comments from @mhils on IRC:\nTL;DR: --ignore is checked before any call to establish_ssl() (which does the MITM stuff). If you want to intercept non-HTTP TLS connections, you probably want to do something similar, but after establish_ssl() has been called.\ngeneralized tcp proxy: if your traffic isn't encrypted using SSL, just use mitmdump -v --ignore regex-for-your-host (0.11 only) ignore patterns are documented here\nWe currently have a couple of places where we call check_ignore_address() and may go over to TCP mode then. usually, check_ignore_address is closely followed by establish_ssl(). We'd need to add a --tcp switch which uses the same hostname pattern, but just gets executed after establish_ssl(), not before.\nwell, we have a \"generalized tcp proxy\". which is \"-v --ignore hostname\", but if your traffic is protected using SSL, you probably want to strip that off before. By default, mitmproxy opens a SSL connection to the client and a separate SSL connection to the server. pretending to the client to actually be the server... Using --ignore, we don't event do anything SSL related, we take the raw TCP stream and forward it which means the client negotiates SSL with the real server.\nIn other words, --ignore can be used to see what passes through, but if that communication is protected using SSL, you'll just see garbage. Now, you may ask: Why don't we do the SSL-MITM stuff and then pass through the cleartext, now readable for us?\nAnswer: --ignore serves a different purpose. Some apps, most notably the apple store on iOS, cannot be intercepted, because they hardcoded a target cert we don't have a key for. --ignore makes it possible to debug an app while just letting this stuff pass through.\ne.g. you want to test an app which at some point makes an cert-pinned in-app purchase.\nSo, that's the primary use case for --ignore.\nIf you want to peek into non-HTTP SSL connections, you'd do our SSL MITM stuff first and then delegate it to the passthrough thingy.", "issue_status": "Closed", "issue_reporting_time": "2014-10-08T21:00:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1600": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/373", "issue_id": "#373", "issue_summary": "handle_sni crashes the Python Interpreter", "issue_description": "Member\nmhils commented on 8 Oct 2014\nThere's some weird SSL behaviour, which can be triggered by running mitmproxy with\nmitmdump --cert cert.pem\ncert.pem (self-signed CA cert + leaf including privkey)\nFor some reason, this triggers a\n`('SSL routines', 'SSL3_GET_CLIENT_HELLO', 'no shared cipher')`\nin server.py#L195. What's even more weird is that handle_sni is called a second time when the server conn has already been cleaned up (server.py#L96). The python interpreter crashes when the first call to handle_sni updates the context (server.py#L275). If we remove connection.set_context(new_context), we get a traceback at least, but that doesn't really explain why it's called twice in the first place.\nLogs: https://gist.github.com/mhils/d58537ed2a1f484cc3ae", "issue_status": "Closed", "issue_reporting_time": "2014-10-08T00:30:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1601": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/370", "issue_id": "#370", "issue_summary": "Cannot make the SSL certificate to be issued by goDaddy", "issue_description": "talbenbasat commented on 2 Oct 2014\nI have been using mitmproxy 0.10, my goal is to use mitmproxy as a part of testing a website that has a SSL certificate by goDaddy.\nHowever, when I try to access the website I get an SSL warning and I see that the SSL certificate is issued by mitmproxy instead of goDaddy.\nWhen I try to use the mitmproxy in my production environment it works,\nbut when I use it in the staging environment it doesn't work.\nThe reason is probably because of a combination in the SSL in our environment and the error from the mitmproxy.\nMy website works with apache and mod_auth_cas.\nI tried to use --cert and to insert the pem but it didn't work.\nI've tried to use --cert-forward but it didn't work also, both in mitmproxy 0.10 and the version from gitHub.\nDoes someone know how to solve this issue?", "issue_status": "Closed", "issue_reporting_time": "2014-10-02T15:27:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1602": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/367", "issue_id": "#367", "issue_summary": "mitmproxy doesn't deal with http header Expect:100-Continue correctly", "issue_description": "ambarishmalpani commented on 27 Sep 2014\nIn version 0.10.1, when the proxy sees a request with the Expect:100-Continue header, it doesn't recognize it (because it is doing a case sensitive comparison for the 100-continue value)", "issue_status": "Closed", "issue_reporting_time": "2014-09-26T19:00:28Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1603": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/366", "issue_id": "#366", "issue_summary": "Errors while accessing built-in web app of MITMProxy (mitm.it)", "issue_description": "limeric29 commented on 26 Sep 2014\nI am getting these errors when I try to go to the page.\nInternal Server Error\nTraceback (most recent call last):\nFile \"/usr/local/lib/python2.7/dist-packages/netlib/wsgi.py\", line 133, in serve\ndataiter = self.app(self.make_environ(request, errs, **env), start_response)\nFile \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1836, in call\nreturn self.wsgi_app(environ, start_response)\nFile \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1820, in wsgi_app\nresponse = self.make_response(self.handle_exception(e))\nFile \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1403, in handle_exception\nreraise(exc_type, exc_value, tb)\nFile \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1817, in wsgi_app\nresponse = self.full_dispatch_request()\nFile \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1477, in full_dispatch_request\nrv = self.handle_user_exception(e)\nFile \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1381, in handle_user_exception\nreraise(exc_type, exc_value, tb)\nFile \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1475, in full_dispatch_request\nrv = self.dispatch_request()\nFile \"/usr/local/lib/python2.7/dist-packages/flask/app.py\", line 1461, in dispatch_request\nreturn self.view_functionsrule.endpoint\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/onboarding/app.py\", line 16, in index\nreturn flask.render_template(\"index.html\", section=\"home\")\nFile \"/usr/local/lib/python2.7/dist-packages/flask/templating.py\", line 127, in render_template\nreturn _render(ctx.app.jinja_env.get_or_select_template(template_name_or_list),\nFile \"/usr/local/lib/python2.7/dist-packages/jinja2/environment.py\", line 830, in get_or_select_template\nreturn self.get_template(template_name_or_list, parent, globals)\nFile \"/usr/local/lib/python2.7/dist-packages/jinja2/environment.py\", line 791, in get_template\nreturn self._load_template(name, self.make_globals(globals))\nFile \"/usr/local/lib/python2.7/dist-packages/jinja2/environment.py\", line 765, in _load_template\ntemplate = self.loader.load(self, name, globals)\nFile \"/usr/local/lib/python2.7/dist-packages/jinja2/loaders.py\", line 113, in load\nsource, filename, uptodate = self.get_source(environment, name)\nFile \"/usr/local/lib/python2.7/dist-packages/flask/templating.py\", line 64, in get_source\nraise TemplateNotFound(template)\nTemplateNotFound: index.html\n\"", "issue_status": "Closed", "issue_reporting_time": "2014-09-26T05:21:59Z", "fixed_by": "#369", "pull_request_summary": "improve distribution", "pull_request_description": "Member\nmhils commented on 2 Oct 2014\nUse setuptools instead of distutils.\nfix #366\nfix #359", "pull_request_status": "Merged", "issue_fixed_time": "2014-10-01T19:23:54Z", "files_changed": [["14", "MANIFEST.in"], ["99", "setup.py"]]}, "1604": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/365", "issue_id": "#365", "issue_summary": "Random bytes used for gmt_unix_time in ClientHello/ServerHello", "issue_description": "mdkorhon commented on 24 Sep 2014\nI was looking at some packet captures I generated while using mitmproxy and noticed that the gmt_unix_time field appears to be set to random bytes instead of the current date and time. Is this expected? The specification states that it doesn't need to be correct, but it looks like the TLS client and server both were using the correct time.\nFor reference, here's the relevant text from Section 7.4.1.2 of http://tools.ietf.org/html/rfc2246 and http://tools.ietf.org/html/rfc5246\n  The ClientHello message includes a random structure, which is used\n  later in the protocol.\n\n     struct {\n         uint32 gmt_unix_time;\n         opaque random_bytes[28];\n     } Random;\n\n  gmt_unix_time\n     The current time and date in standard UNIX 32-bit format\n     (seconds since the midnight starting Jan 1, 1970, UTC, ignoring\n     leap seconds) according to the sender's internal clock.  Clocks\n     are not required to be set correctly by the basic TLS protocol;\n     higher-level or application protocols may define additional\n     requirements.  Note that, for historical reasons, the data\n     element is named using GMT, the predecessor of the current\n     worldwide time base, UTC.\n\n  random_bytes\n     28 bytes generated by a secure random number generator.", "issue_status": "Closed", "issue_reporting_time": "2014-09-23T21:40:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1605": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/364", "issue_id": "#364", "issue_summary": "Following issue #315, upstream proxy", "issue_description": "wagger301 commented on 23 Sep 2014\nI tried to implement the example provided to change the upstream proxy and I don't think it is actually working. I have a proxy that I'd like to use as my upstream server XX.XX.XXX.XX:80 and I've implemented it as the example did: flow.live.change_server(XX.XX.XXX.XX:80) and my ip address hasn't been changing at all. Before the update to the code I had been changing it with self.server.config.get_upstream_server. Please let me know if I'm doing anything wrong or if there is a bug.", "issue_status": "Closed", "issue_reporting_time": "2014-09-22T19:20:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1606": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/363", "issue_id": "#363", "issue_summary": "Unhandled exception when using server-side replay", "issue_description": "0xC0FFEE commented on 22 Sep 2014\nMitmproxy reports an unhandled exception when replaying a previously recorded session as the server.\nError in processing of request from 127.0.0.1:48254\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/netlib/tcp.py\", line 379, in request_thread\n    self.handle_connection(request, client_address)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy.py\", line 549, in handle_connection\n    h.handle()\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy.py\", line 196, in handle\n    while self.handle_request(cc) and not cc.close:\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy.py\", line 278, in handle_request\n    self.send_response(response)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy.py\", line 497, in send_response\n    d = response._assemble()\nAttributeError: 'NoneType' object has no attribute '_assemble'\nSteps to reproduce:\nmitmdump -w data\nwget google.com\nctrl-c mitmdump\nmitmdump -S data\nwget google.com\nmitmdump reports the above exception and wget reports \"connection refused\".", "issue_status": "Closed", "issue_reporting_time": "2014-09-22T12:35:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1607": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/362", "issue_id": "#362", "issue_summary": "Android emulator and -http-proxy option", "issue_description": "xeroxnir commented on 19 Sep 2014\nHi, i'm having problems connecting the Android emulator to mitmproxy with the -http-proxy option. I installed the certificate as usual but when i try to connect the android emulator browser to an HTTPS site I keep getting the same error on event log in master version:\n\"SSL handshake error: The client may not trust the proxy's certificate.\". And in the mitmproxy ubuntu repository version I get:\n\"SSL handshake error: (-1, 'Unexpected EOF').\".\nI've the same problem on an Ubuntu 12.04, Lubuntu 14.10 and Ubuntu 14.04. The first 2 are being run inside a VM. I also tried changing the host OS /etc/environment to use mitmproxy as proxy but I keep having the same problem. I tested intercepting the traffic Burp and worked.\nThanks,\nJoaquin", "issue_status": "Closed", "issue_reporting_time": "2014-09-19T18:18:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1608": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/361", "issue_id": "#361", "issue_summary": "Trying to read the response of a captured traffic crashed the mitmproxy", "issue_description": "lfuh commented on 18 Sep 2014\nI try to capture the iOS8 software update traffic in mitmproxy, first, the iOS8 update is about 957MB, the attemp to download failed couple of time leaving some request-response like this:\nGET http://appldnld.apple.com/iOS8/xxxxxxx/0dfaf41c8998ad43b00d7f7632d4260951e4cbbf.zip\n\u2190 200 application/octet-stream [no content] 112.1kB/s\nwhen I enter to this transaction, the request side header showed fine, if I tab over to the response side, the proxy will crash and showing these on screen:\nmitmproxy -p 8080 --host\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 605, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/raw_display.py\", line 268, in run_wrapper\n    return fn()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 832, in loop\n    k = self.view.keypress(size, k)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/container.py\", line 1124, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 677, in keypress\n    self.view_response()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 475, in view_response\n    body = self.conn_text(self.flow.response)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 223, in conn_text\n    headers, msg, body = self.conn_text_raw(conn)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 185, in conn_text_raw\n    return headers, msg, body\nUnboundLocalError: local variable 'msg' referenced before assignment\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nShutting down...\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 9, in <module>\n    load_entry_point('mitmproxy==0.11', 'console_scripts', 'mitmproxy')()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/main.py\", line 108, in mitmproxy\n    m.run()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 614, in run\n    self.shutdown()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 990, in shutdown\n    self.state.killall(self)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 427, in killall\n    i.kill(master)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py\", line 865, in kill\n    master.handle_error(self)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 1053, in handle_error\n    self.process_flow(f)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 1030, in process_flow\n    self.refresh_flow(f)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 1020, in refresh_flow\n    self.body.refresh_flow(c)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 495, in refresh_flow\n    self.view_response()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 475, in view_response\n    body = self.conn_text(self.flow.response)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 223, in conn_text\n    headers, msg, body = self.conn_text_raw(conn)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 185, in conn_text_raw\n    return headers, msg, body\nUnboundLocalError: local variable 'msg' referenced before assignment\nI am using 0.11 version from the GitHub cloned on 9-17. the netlib cloned on the same day.", "issue_status": "Closed", "issue_reporting_time": "2014-09-17T21:14:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1609": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/360", "issue_id": "#360", "issue_summary": "The \"goto fail\" configuration flags cuase mitmproxy to crash", "issue_description": "paradox00 commented on 16 Sep 2014\nHi,\nI tried to use the poc's flags: --ciphers=\"DHE-RSA-AES256-SHA\" --cert-forward\nand mitmproxy crashed when i tried to use my iphone.\nI debugged a little and found that the crashed was in \"ssl3_choose_cipher\" function of libssl.(s3_lib.c:3931 to be more specific... )\ni'm using ubuntu 14.04 with openssl 1.0.1f (+ubuntu's patches)\nwhich library versions are known to work with these flags?\nthanks,\nparadox00", "issue_status": "Closed", "issue_reporting_time": "2014-09-16T10:43:51Z", "fixed_by": "#654", "pull_request_summary": "Remove Certforward Feature", "pull_request_description": "Member\nmhils commented on 26 Jun 2015\nThe certforward feature was implemented to support #gotofail, which only works on unpatched iOS devices. Given that many apps don't support iOS 7 anymore, jailbreak+ssl killswitch is usually the better option. By removing certforward, we can make netlib a pure python module again, which significantly simplifies distribution.\ndepends on mitmproxy/netlib#79\ncloses #360\ncloses #471\ncloses #629\ncloses https://github.com/mitmproxy/netlib/issues/33\ncloses https://github.com/mitmproxy/netlib/issues/63\ncloses https://github.com/mitmproxy/netlib/issues/68", "pull_request_status": "Merged", "issue_fixed_time": "2015-06-26T21:22:41Z", "files_changed": [["8", "libmproxy/proxy/config.py"], ["42", "libmproxy/proxy/server.py"], ["8", "test/test_server.py"], ["2", "test/tservers.py"]]}, "1610": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/359", "issue_id": "#359", "issue_summary": "mitmproxy-0.10.1.tar.gz contains libmproxy.protocol *.pyc files.", "issue_description": "Member\nmhils commented on 16 Sep 2014\nlibmproxy.protocol doesn't exist in 0.10. However, git keeps the folder after a branch switch as the pyc files are on gitignore and thereby not removed. Now, I suspect that setuptools normally takes the .py files, but resort to the .pyc version if the .py one isn't available. As a result, the 0.10.1 release contains compiled pyc files for libmproxy.protocol. We had two bug reports lately which used an 0.11 example script which caused an import of libmproxy.protocol, e.g.\n>>> import libmproxy.protocol\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/Users/aldo/mitmproxy/mitmproxy/libmproxy/protocol/__init__.py\", line 1, in <module>    \nImportError: cannot import name AddressPriority\nThe first guy got fairly confused when I called him Aldo .", "issue_status": "Closed", "issue_reporting_time": "2014-09-15T23:37:43Z", "fixed_by": "#369", "pull_request_summary": "improve distribution", "pull_request_description": "Member\nmhils commented on 2 Oct 2014\nUse setuptools instead of distutils.\nfix #366\nfix #359", "pull_request_status": "Merged", "issue_fixed_time": "2014-10-01T19:23:54Z", "files_changed": [["14", "MANIFEST.in"], ["99", "setup.py"]]}, "1611": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/358", "issue_id": "#358", "issue_summary": "iOS8 Support", "issue_description": "loretoparisi commented on 15 Sep 2014\nAfter updating the iPhone to iOS8, the proxy does not work anymore as expected.\nCertificates are validated and installed, buy I do not see any traffic on the proxy.", "issue_status": "Closed", "issue_reporting_time": "2014-09-15T10:24:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1612": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/357", "issue_id": "#357", "issue_summary": "terminal cursor disappears when editor is set to vim or proxy is backgrouned", "issue_description": "m0nkeynut commented on 15 Sep 2014\nI'm not sure if this is actually a urwid bug or the way mitmproxy uses it.\nIn framebuffer, xterm, terminator etc. if I set the editor to be vim and try to edit the raw body of the request/response the cursor disappears. This can make editing more tricky than it needs to be!\nIn addition, if I background the process with ctrl-Z the cursor has gone from the terminal and from vim when I open it on any file. The cursor returns as soon as mitmproxy is cleanly exited by hitting qy. If it is killed (with kill -9 or -15) then the cursor is still missing. Starting mitmproxy and quiting will restore the cursor.\nThanks for all your hard work on my favorite proxy :)", "issue_status": "Closed", "issue_reporting_time": "2014-09-14T18:44:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1613": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/356", "issue_id": "#356", "issue_summary": "Issue installing mitimproxy on windows", "issue_description": "ashishjha112 commented on 12 Sep 2014\nerror log is here\ni am using python 2.7\nPS C:\\envs> pip install c:\\envs\\setuptools-5.7.zip\nUnpacking c:\\envs\\setuptools-5.7.zip\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip-ix2ytq-build\\setup.py) egg_info for package from file:/\n//c:/envs/setuptools-5.7.zip\nwarning: no files found matching 'entries*' under directory 'setuptools\\tests'\nwarning: no files found matching 'Makefile' under directory 'docs'\nwarning: no files found matching 'indexsidebar.html' under directory 'docs'\nInstalling collected packages: setuptools\nFound existing installation: setuptools 0.6c11\nUninstalling setuptools:\nSuccessfully uninstalled setuptools\nRunning setup.py install for setuptools\nwarning: no files found matching 'entries*' under directory 'setuptools\\tests'\nwarning: no files found matching 'Makefile' under directory 'docs'\nwarning: no files found matching 'indexsidebar.html' under directory 'docs'\nInstalling easy_install-script.py script to C:\\Python27\\Scripts\nInstalling easy_install.exe script to C:\\Python27\\Scripts\nInstalling easy_install.exe.manifest script to C:\\Python27\\Scripts\nInstalling easy_install-2.7-script.py script to C:\\Python27\\Scripts\nInstalling easy_install-2.7.exe script to C:\\Python27\\Scripts\nInstalling easy_install-2.7.exe.manifest script to C:\\Python27\\Scripts\nSuccessfully installed setuptools\nCleaning up...\nPS C:\\envs> pip install c:\\envs\\mitmproxy-0.10.1.tar.gz\nUnpacking c:\\envs\\mitmproxy-0.10.1.tar.gz\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip-p9dykh-build\\setup.py) egg_info for package from file:/\n//c:/envs/mitmproxy-0.10.1.tar.gz\nDownloading/unpacking netlib>=0 (from mitmproxy==0.10.1)\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\netlib\\setup.py) egg_info for package net\nlib\nDownloading/unpacking urwid>=1.1 (from mitmproxy==0.10.1)\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\urwid\\setup.py) egg_info for package urwi\nd\nwarning: no files found matching 'Makefile' under directory 'docs'\nwarning: no files found matching 'CHANGELOG'\nDownloading/unpacking pyasn1>0.1.2 (from mitmproxy==0.10.1)\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\pyasn1\\setup.py) egg_info for package pya\nsn1\nDownloading/unpacking pyopenssl>=0.13 (from mitmproxy==0.10.1)\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\pyopenssl\\setup.py) egg_info for package\npyopenssl\nwarning: no previously-included files matching '*.pyc' found anywhere in distribution\nno previously-included directories found matching 'doc\\_build'\nDownloading/unpacking Pillow>=2.3.0,<2.4 (from mitmproxy==0.10.1)\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\Pillow\\setup.py) egg_info for package Pil\nlow\nwarning: no files found matching 'CHANGES' under directory 'Sane'\nwarning: no files found matching 'README' under directory 'Sane'\nwarning: no files found matching 'README' under directory 'Scripts'\nwarning: no files found matching 'Guardfile' under directory 'docs'\nwarning: no files found matching 'Makefile' under directory 'docs'\nwarning: no files found matching 'BUILDME' under directory 'docs'\nwarning: no files found matching 'COPYING' under directory 'docs'\nwarning: no files found matching 'LICENSE' under directory 'docs'\nDownloading/unpacking lxml (from mitmproxy==0.10.1)\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\lxml\\setup.py) egg_info for package lxml\nBuilding lxml version 3.4.0.\nBuilding without Cython.\nERROR: 'xslt-config' is not recognized as an internal or external command,\noperable program or batch file.\n** make sure the development packages of libxml2 and libxslt are installed **\n\nUsing build configuration of libxslt\nC:\\Python27\\lib\\distutils\\dist.py:267: UserWarning: Unknown distribution option: 'bugtrack_url'\n  warnings.warn(msg)\n\nwarning: no files found matching 'lxml.etree.c' under directory 'src\\lxml'\nwarning: no files found matching 'lxml.objectify.c' under directory 'src\\lxml'\nwarning: no files found matching 'lxml.etree.h' under directory 'src\\lxml'\nwarning: no files found matching 'lxml.etree_api.h' under directory 'src\\lxml'\nwarning: no files found matching 'etree_defs.h' under directory 'src\\lxml'\nwarning: no files found matching 'lxml_endian.h' under directory 'src\\lxml'\nwarning: no files found matching 'pubkey.asc' under directory 'doc'\nwarning: no files found matching 'tagpython*.png' under directory 'doc'\nwarning: no files found matching 'Makefile' under directory 'doc'\nDownloading/unpacking flask (from mitmproxy==0.10.1)\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\flask\\setup.py) egg_info for package flas\nk\nwarning: no files found matching '*' under directory 'tests'\nwarning: no previously-included files matching '*.pyc' found under directory 'docs'\nwarning: no previously-included files matching '*.pyo' found under directory 'docs'\nwarning: no previously-included files matching '*.pyc' found under directory 'tests'\nwarning: no previously-included files matching '*.pyo' found under directory 'tests'\nwarning: no previously-included files matching '*.pyc' found under directory 'examples'\nwarning: no previously-included files matching '*.pyo' found under directory 'examples'\nno previously-included directories found matching 'docs\\_build'\nDownloading/unpacking cryptography>=0.2.1 (from pyopenssl>=0.13->mitmproxy==0.10.1)\nDownloading/unpacking six>=1.5.2 (from pyopenssl>=0.13->mitmproxy==0.10.1)\nDownloading six-1.7.3-py2.py3-none-any.whl\nDownloading/unpacking Werkzeug>=0.7 (from flask->mitmproxy==0.10.1)\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\Werkzeug\\setup.py) egg_info for package W\nerkzeug\nwarning: no files found matching '*' under directory 'werkzeug\\debug\\templates'\nwarning: no files found matching '*' under directory 'tests'\nwarning: no previously-included files matching '*.pyc' found under directory 'docs'\nwarning: no previously-included files matching '*.pyo' found under directory 'docs'\nwarning: no previously-included files matching '*.pyc' found under directory 'tests'\nwarning: no previously-included files matching '*.pyo' found under directory 'tests'\nwarning: no previously-included files matching '*.pyc' found under directory 'examples'\nwarning: no previously-included files matching '*.pyo' found under directory 'examples'\nno previously-included directories found matching 'docs\\_build'\nDownloading/unpacking Jinja2>=2.4 (from flask->mitmproxy==0.10.1)\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\Jinja2\\setup.py) egg_info for package Jin\nja2\nwarning: no files found matching '*' under directory 'custom_fixers'\nwarning: no previously-included files matching '*' found under directory 'docs\\_build'\nwarning: no previously-included files matching '*.pyc' found under directory 'jinja2'\nwarning: no previously-included files matching '*.pyc' found under directory 'docs'\nwarning: no previously-included files matching '*.pyo' found under directory 'jinja2'\nwarning: no previously-included files matching '*.pyo' found under directory 'docs'\nDownloading/unpacking itsdangerous>=0.21 (from flask->mitmproxy==0.10.1)\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\itsdangerous\\setup.py) egg_info for packa\nge itsdangerous\nwarning: no previously-included files matching '*' found under directory 'docs\\_build'\nDownloading/unpacking cffi>=0.8 (from cryptography>=0.2.1->pyopenssl>=0.13->mitmproxy==0.10.1)\nDownloading/unpacking markupsafe (from Jinja2>=2.4->flask->mitmproxy==0.10.1)\nDownloading MarkupSafe-0.23.tar.gz\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\markupsafe\\setup.py) egg_info for package\nmarkupsafe\nDownloading/unpacking pycparser (from cffi>=0.8->cryptography>=0.2.1->pyopenssl>=0.13->mitmproxy==0.10.1)\nRunning setup.py (path:c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\pycparser\\setup.py) egg_info for package\npycparser\nInstalling collected packages: netlib, urwid, pyasn1, pyopenssl, Pillow, lxml, flask, mitmproxy, cryptography, six, Werk\nzeug, Jinja2, itsdangerous, cffi, markupsafe, pycparser\nRunning setup.py install for netlib\nRunning setup.py install for urwid\nbuilding 'urwid.str_util' extension\nCouldn't build the extension module, trying without it...\nTraceback (most recent call last):\nFile \"c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\urwid\\setup.py\", line 85, in\nsetup(**setup_d)\nFile \"C:\\Python27\\lib\\distutils\\core.py\", line 169, in setup\nraise SystemExit, \"error: \" + str(msg)\nSystemExit: error: Unable to find vcvarsall.bat\nwarning: no files found matching 'Makefile' under directory 'docs'\nwarning: no files found matching 'CHANGELOG'\nRunning setup.py install for pyasn1\nRunning setup.py install for pyopenssl\nwarning: no previously-included files matching '*.pyc' found anywhere in distribution\nno previously-included directories found matching 'doc\\_build'\nRunning setup.py install for Pillow\nwarning: no files found matching 'CHANGES' under directory 'Sane'\nwarning: no files found matching 'README' under directory 'Sane'\nwarning: no files found matching 'README' under directory 'Scripts'\nwarning: no files found matching 'Guardfile' under directory 'docs'\nwarning: no files found matching 'Makefile' under directory 'docs'\nwarning: no files found matching 'BUILDME' under directory 'docs'\nwarning: no files found matching 'COPYING' under directory 'docs'\nwarning: no files found matching 'LICENSE' under directory 'docs'\nbuilding 'PIL._imaging' extension\nerror: Unable to find vcvarsall.bat\nComplete output from command C:\\Python27\\python.exe -c \"import setuptools, tokenize;__file__='c:\\\\users\\\\santosh\\\\ap\npdata\\local\\temp\\pip_build_SANTOSH\\Pillow\\setup.py';exec(compile(getattr(tokenize, 'open', open)(file).read().r\neplace('\\r\\n', '\\n'), file, 'exec'))\" install --record c:\\users\\santosh\\appdata\\local\\temp\\pip-slxm1s-record\\install\n-record.txt --single-version-externally-managed --compile:\nrunning install\nrunning build\nrunning build_py\ncreating build\ncreating build\\lib.win32-2.7\ncreating build\\lib.win32-2.7\\PIL\ncopying PIL\\ArgImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\BdfFontFile.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\BmpImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\BufrStubImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ContainerIO.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\CurImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\DcxImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\EpsImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ExifTags.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\FitsStubImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\FliImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\FontFile.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\FpxImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\GbrImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\GdImageFile.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\GifImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\GimpGradientFile.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\GimpPaletteFile.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\GribStubImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\Hdf5StubImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\IcnsImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\IcoImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\Image.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageChops.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageCms.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageColor.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageDraw.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageDraw2.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageEnhance.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageFile.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageFileIO.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageFilter.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageFont.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageGrab.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageMath.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageMode.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageOps.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImagePalette.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImagePath.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageQt.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageSequence.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageShow.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageStat.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageTk.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageTransform.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImageWin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\ImtImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\IptcImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\JpegImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\JpegPresets.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\McIdasImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\MicImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\MpegImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\MspImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\OleFileIO.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\PaletteFile.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\PalmImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\PcdImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\PcfFontFile.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\PcxImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\PdfImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\PixarImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\PngImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\PpmImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\PsdImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\PSDraw.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\SgiImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\SpiderImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\SunImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\TarIO.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\tests.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\TgaImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\TiffImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\TiffTags.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\WalImageFile.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\WebPImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\WmfImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\XbmImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\XpmImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL\\XVThumbImagePlugin.py -> build\\lib.win32-2.7\\PIL\ncopying PIL_binary.py -> build\\lib.win32-2.7\\PIL\ncopying PIL_util.py -> build\\lib.win32-2.7\\PIL\ncopying PIL__init__.py -> build\\lib.win32-2.7\\PIL\nrunning egg_info\nwriting Pillow.egg-info\\PKG-INFO\nwriting top-level names to Pillow.egg-info\\top_level.txt\nwriting dependency_links to Pillow.egg-info\\dependency_links.txt\nwarning: manifest_maker: standard file '-c' not found\nreading manifest file 'Pillow.egg-info\\SOURCES.txt'\nreading manifest template 'MANIFEST.in'\nwarning: no files found matching 'CHANGES' under directory 'Sane'\nwarning: no files found matching 'README' under directory 'Sane'\nwarning: no files found matching 'README' under directory 'Scripts'\nwarning: no files found matching 'Guardfile' under directory 'docs'\nwarning: no files found matching 'Makefile' under directory 'docs'\nwarning: no files found matching 'BUILDME' under directory 'docs'\nwarning: no files found matching 'COPYING' under directory 'docs'\nwarning: no files found matching 'LICENSE' under directory 'docs'\nwriting manifest file 'Pillow.egg-info\\SOURCES.txt'\nrunning build_ext\nbuilding 'PIL._imaging' extension\nerror: Unable to find vcvarsall.bat\nCleaning up...\nrunning build_ext\nbuilding 'PIL._imaging' extension\nerror: Unable to find vcvarsall.bat\nCleaning up...\nCommand C:\\Python27\\python.exe -c \"import setuptools, tokenize;file='c:\\users\\santosh\\appdata\\local\\temp\\pip_b\nuild_SANTOSH\\Pillow\\setup.py';exec(compile(getattr(tokenize, 'open', open)(file).read().replace('\\r\\n', '\\n'), f\nile, 'exec'))\" install --record c:\\users\\santosh\\appdata\\local\\temp\\pip-urwxan-record\\install-record.txt --single-vers\nion-externally-managed --compile failed with error code 1 in c:\\users\\santosh\\appdata\\local\\temp\\pip_build_SANTOSH\\Pillo\nw\nStoring debug log for failure in C:\\Users\\SANTOSH\\pip\\pip.log", "issue_status": "Closed", "issue_reporting_time": "2014-09-11T21:32:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1614": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/355", "issue_id": "#355", "issue_summary": "Can http://localhost:8888 be served by https://www.someOtherDomain.com without setting proxies?", "issue_description": "bradparks commented on 9 Sep 2014\nHey! Super looking tool - i'm trying to figure out how to serve\nhttp://localhost:8888\nfrom\nhttps://www.someOtherDomain.com\nwithout setting a proxy in my browser or app. Is this possible? I don't care if the cert is bad (even though I've installed the mitmproxy cert fine).\nI asked a similar question on StackOverflow about this, and got directed to mitmproxy:\nhttp://stackoverflow.com/questions/25412600/whats-a-simple-way-to-serve-http-localhost-as-https-someotherdomain\nbut can't quite see how to do this without setting a proxy in my browser, which would be the preferred way for this to work, so I could easily package it up and share it with the rest of the team.\nThanks!\nNote: I'm totally fine with having to put the someOtherDomain.com entry in my hosts file manually, to manage that part of it.", "issue_status": "Closed", "issue_reporting_time": "2014-09-09T12:50:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1615": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/353", "issue_id": "#353", "issue_summary": "Please Update Examples", "issue_description": "secretsquirrel commented on 8 Sep 2014\nHi,\nSeems some of the examples are not updated to work the current libmproxy api (stickycookies in this case).\npython stickycookies\nTraceback (most recent call last):\n  File \"stickycookies\", line 44, in <module>\n    m.run()\n  File \"stickycookies\", line 20, in run\n    return controller.Master.run(self)\n  File \"/Library/Python/2.7/site-packages/libmproxy/controller.py\", line 112, in run\n    self.tick(self.masterq)\n  File \"/Library/Python/2.7/site-packages/libmproxy/controller.py\", line 102, in tick\n    self.handle(*msg)\n  File \"/Library/Python/2.7/site-packages/libmproxy/controller.py\", line 119, in handle\n    m(obj)\n  File \"stickycookies\", line 25, in handle_request\n    hid = (msg.host, msg.port)\nWorking with most current build: commit 8eff2df\nThanks,\nJosh", "issue_status": "Closed", "issue_reporting_time": "2014-09-07T18:43:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1616": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/352", "issue_id": "#352", "issue_summary": "Error Page for mitm.it", "issue_description": "Member\nmhils commented on 7 Sep 2014\nVisiting http://mitm.it/ without mitmproxy redirects to grit.io currently - we should redirect to\nhttp://mitmproxy.org/doc/certinstall/mitm.it-error.html instead.\nAlso: Temporary Redirect please.", "issue_status": "Closed", "issue_reporting_time": "2014-09-07T11:45:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1617": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/351", "issue_id": "#351", "issue_summary": "Certificate warning on https://mitmproxy.org/", "issue_description": "Member\nmhils commented on 7 Sep 2014\nThis is a little bit embarassing - accessing mitmproxy.org via HTTPS returns a cert error. The grit.io cert is served. If you're at it, I'd love to see mitmproxy.org to be HTTPS by default.", "issue_status": "Closed", "issue_reporting_time": "2014-09-07T11:30:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1618": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/350", "issue_id": "#350", "issue_summary": "--ignore docs", "issue_description": "Member\nmhils commented on 7 Sep 2014\nrefs #175", "issue_status": "Closed", "issue_reporting_time": "2014-09-07T01:37:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1619": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/349", "issue_id": "#349", "issue_summary": "Crash editing scripts in console app", "issue_description": "Member\ncortesi commented on 7 Sep 2014\nStart mitmproxy\nPress \"s\" to edit scripts\nPress \"a\" to add\nPress \"esc\" to quilt\nTraceback (most recent call last):\n  File \"/Users/aldo/mitmproxy/mitmproxy/libmproxy/console/__init__.py\", line 600, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/Library/Python/2.7/site-packages/urwid/raw_display.py\", line 251, in run_wrapper\n    return fn()\n  File \"/Users/aldo/mitmproxy/mitmproxy/libmproxy/console/__init__.py\", line 817, in loop\n    k = self.view.keypress(size, k)\n  File \"/Library/Python/2.7/site-packages/urwid/container.py\", line 1103, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/Users/aldo/mitmproxy/mitmproxy/libmproxy/console/grideditor.py\", line 292, in keypress\n    self.walker.stop_edit()\n  File \"/Users/aldo/mitmproxy/mitmproxy/libmproxy/console/grideditor.py\", line 164, in stop_edit\n    self.set_current_value(self.editing.get_edit_value(), False)\n  File \"/Users/aldo/mitmproxy/mitmproxy/libmproxy/console/grideditor.py\", line 128, in set_current_value\n    emsg = self.editor.is_error(self.focus_col, val)\n  File \"/Users/aldo/mitmproxy/mitmproxy/libmproxy/console/grideditor.py\", line 493, in is_error\n    script.Script.parse_command(val)\n  File \"/Users/aldo/mitmproxy/mitmproxy/libmproxy/script.py\", line 62, in parse_command\n    args[0] = os.path.expanduser(args[0])\nIndexError: list index out of range", "issue_status": "Closed", "issue_reporting_time": "2014-09-06T23:59:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1620": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/348", "issue_id": "#348", "issue_summary": "Reverse Proxy Docs", "issue_description": "Member\nmhils commented on 7 Sep 2014\nAdd https2http syntax\nremove host header statement (not true anymore)", "issue_status": "Closed", "issue_reporting_time": "2014-09-06T22:25:53Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1621": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/346", "issue_id": "#346", "issue_summary": "Replay behaviour in non-live reverse proxy mode", "issue_description": "Member\nmhils commented on 5 Sep 2014\nAssuming someone starts mitmproxy in reverse proxy mode with recorded flows, e.g.\nmitmproxy -r recorded_flows -R http://127.0.0.1:80\nHow do we react to replays? Do we send them to the original server or do we send them to the reverse proxy?\nAssuming someone starts mitmproxy in upstream proxy mode with recorded flows, e.g.\nmitmproxy -r recorded_flows -U http://127.0.0.1:8080\nHow do we react to replays? Do we send them to the original server or do we send them to the upstream proxy?", "issue_status": "Closed", "issue_reporting_time": "2014-09-04T21:12:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1622": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/345", "issue_id": "#345", "issue_summary": "AttributeError: 'HTTPResponse' object has no attribute 'reply'", "issue_description": "deployable commented on 4 Sep 2014\nI've had this error on two occasions now both while running a script and not. Both instances were using --stream 256k\n./help/bin/python ./mitmproxy -p 3129 --stream 256k -s ~/inline_headers.py\nI haven't been able to track down a request to reproduce it but I'll add the detail when I find something.\nTraceback (most recent call last):\n  File \"/home/matt/clones/dply_mitmproxy/libmproxy/console/__init__.py\", line 600, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/home/matt/clones/dply_mitmproxy/help/lib/python2.7/site-packages/urwid/raw_display.py\", line 268, in run_wrapper\n    return fn()\n  File \"/home/matt/clones/dply_mitmproxy/libmproxy/console/__init__.py\", line 797, in loop\n    size = self.drawscreen()\n  File \"/home/matt/clones/dply_mitmproxy/libmproxy/console/__init__.py\", line 777, in drawscreen\n    canvas = self.view.render(size, focus=1)\n  File \"/home/matt/clones/dply_mitmproxy/help/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/matt/clones/dply_mitmproxy/help/lib/python2.7/site-packages/urwid/container.py\", line 1079, in render\n    focus and self.focus_part == 'body')\n  File \"/home/matt/clones/dply_mitmproxy/help/lib/python2.7/site-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/home/matt/clones/dply_mitmproxy/help/lib/python2.7/site-packages/urwid/listbox.py\", line 457, in render\n    (maxcol, maxrow), focus=focus)\n  File \"/home/matt/clones/dply_mitmproxy/help/lib/python2.7/site-packages/urwid/listbox.py\", line 348, in calculate_visible\n    (maxcol,maxrow))\n  File \"/home/matt/clones/dply_mitmproxy/help/lib/python2.7/site-packages/urwid/listbox.py\", line 923, in get_focus_offset_inset\n    focus_widget, pos = self.body.get_focus()\n  File \"/home/matt/clones/dply_mitmproxy/libmproxy/console/flowlist.py\", line 216, in get_focus\n    f = ConnectionItem(self.master, self.state, f, True) if f else None\n  File \"/home/matt/clones/dply_mitmproxy/libmproxy/console/flowlist.py\", line 90, in __init__\n    w = self.get_text()\n  File \"/home/matt/clones/dply_mitmproxy/libmproxy/console/flowlist.py\", line 94, in get_text\n    return common.format_flow(self.flow, self.f, hostheader=self.master.showhost)\n  File \"/home/matt/clones/dply_mitmproxy/libmproxy/console/common.py\", line 200, in format_flow\n    resp_acked = f.response.reply.acked,\nAttributeError: 'HTTPResponse' object has no attribute 'reply'\n\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\nShutting down...\nThis is no Debian with a pyenv build of 2.7.8, netlib installed into the virtualenv from git with pip.", "issue_status": "Closed", "issue_reporting_time": "2014-09-04T14:23:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1623": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/344", "issue_id": "#344", "issue_summary": "Printing the resp in handle_responseheaders throws an error", "issue_description": "dutzi commented on 4 Sep 2014\nHi,\nI was playing with handle_responseheaders, trying to print the response object (the second param given to handle_responseheaders and got the following error:\nTraceback (most recent call last):\n  File \"./player_proxy.py\", line 780, in <module>\n    main(sys.argv)\n  File \"./player_proxy.py\", line 777, in main\n    m.run()\n  File \"./player_proxy.py\", line 152, in run\n    return flow.FlowMaster.run(self)\n  File \"/Library/Python/2.7/site-packages/libmproxy/controller.py\", line 112, in run\n    self.tick(self.masterq)\n  File \"/Library/Python/2.7/site-packages/libmproxy/flow.py\", line 606, in tick\n    return controller.Master.tick(self, q)\n  File \"/Library/Python/2.7/site-packages/libmproxy/controller.py\", line 102, in tick\n    self.handle(*msg)\n  File \"/Library/Python/2.7/site-packages/libmproxy/controller.py\", line 119, in handle\n    m(obj)\n  File \"./player_proxy.py\", line 249, in handle_responseheaders\n    print resp\n  File \"/Library/Python/2.7/site-packages/libmproxy/protocol/http.py\", line 645, in __repr__\n    size=utils.pretty_size(len(self.content))\nTypeError: object of type 'NoneType' has no len()\nThe code that caused this:\n247:    def handle_responseheaders(self, resp):\n248:        f = resp.flow\n249:        print resp\n250:        resp.reply()\n249:        return f", "issue_status": "Closed", "issue_reporting_time": "2014-09-04T10:23:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1624": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/341", "issue_id": "#341", "issue_summary": "Remove BackReferenceMixin", "issue_description": "Member\nmhils commented on 3 Sep 2014\nBy refactoring handle_request et al. to accept flows (instead of request/response) as argument, we could get rid of the BackReferenceMixin for the Flow, which should be a good thing.", "issue_status": "Closed", "issue_reporting_time": "2014-09-02T22:21:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1625": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/340", "issue_id": "#340", "issue_summary": "Allowing Connection: Upgrade to transparently continue", "issue_description": "robertjpayne commented on 30 Aug 2014\nBeen trying out mitmproxy and must say it's quite awesome. One thing that I'm unsure if it's something I've misconfigured or not is that WebSockets get dropped after the 100 Continue response from the server.\nI don't expect mitmproxy to log off the web sockets but it would be nice if it transparently let them continue to run?\nIs this possible / planned / able to be scripted?", "issue_status": "Closed", "issue_reporting_time": "2014-08-30T16:20:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1626": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/338", "issue_id": "#338", "issue_summary": "Usage of MITM examples", "issue_description": "Contributor\nFuzion24 commented on 28 Aug 2014\nI am creating a tool for instrumentation by overriding flowmaster.\nI would like to initialize the proxy and allow it to run as a background thread. It seems this piece does this: https://github.com/mitmproxy/mitmproxy/blob/master/examples/nonblocking.py .. However, it is not clear to me how to get this example to run or integrate it into the flowbasic example: https://github.com/mitmproxy/mitmproxy/blob/master/examples/flowbasic", "issue_status": "Closed", "issue_reporting_time": "2014-08-27T22:18:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1627": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/337", "issue_id": "#337", "issue_summary": "Inline Scripts: Define an API for Server Changes.", "issue_description": "Member\nmhils commented on 27 Aug 2014\nWe need to define a clear and concise way to change the target server for requests. This possibly includes unifying flow.request.host, flow.request.set_url, flow.live.change_server and flow.server_conn. This is unexpectedly tricky, as we want to consider a variety of edge-cases:\nMode TLS Common Use Case\nRegular No Read/Update target server (flow.server_conn and request.host)\nRegular Yes Read/Update target server (flow.server_conn)\nReverse * Read/Update target server flow.server_conn\nTransparent * Read/Update target server (flow.server_conn)\nUpstream * Read/Update proxy server (flow.server_conn)\nUpstream No Read/Update target server (request.host)\nUpstream Yes Read/Update target server (CONNECT)\n* * Optionally update host header (request.headers)\n: Make sure that we don't have any accidental changes of the target server.\n: This edge-case shouldn't be handled by the main API.\nIdeally, we'd have a simple .host / .port attributes that covers the most prominent use-case, namely updating the target server.\nHow do we deal with changes between no-ssl/SSL? Do we use the .scheme attribute?\nDo we want to have these attribute on the (HTTP)Flow or on the HTTPRequest? As the target host usually depends on the request, I'd prefer that.\nWhat do we do with the current request.host attribute, which stores the host value from absolute-form requests? Do we re-use this in cases where we don't have an absolute-form request for the target server inferred from other sources?\nGiven the proposed .host/.port attributes, we need to introduce change-detection in the HTTPProtocolHandler.\nAlso, we want to make sure that replayed sessions make sense in general.", "issue_status": "Closed", "issue_reporting_time": "2014-08-27T13:38:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1628": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/336", "issue_id": "#336", "issue_summary": "Transparent mode does absolutely nothing on Windows", "issue_description": "ghost commented on 27 Aug 2014\nBeen trying to make transparent mode work for hours on windows. I've built from master with both mitmproxy and netlib, all other deps satisfied as required. I've also manually downloaded the latest version of windivert and placed it where pydivert was searching for the dll and sys file(s). More details here:\nhttp://stackoverflow.com/questions/25526839/running-mitmproxy-in-transparent-mode-on-windows", "issue_status": "Closed", "issue_reporting_time": "2014-08-27T12:11:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1629": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/335", "issue_id": "#335", "issue_summary": "Mitmproxy expires?", "issue_description": "wagger301 commented on 26 Aug 2014\nI've been running mitmproxy (the 0.9 version) for about a month and then suddenly it stopped working. When I killed it and restarted it, it worked fine again. Does mitmproxy only work as long as the cert lasts or is there some other expiration?", "issue_status": "Closed", "issue_reporting_time": "2014-08-26T12:00:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1630": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/334", "issue_id": "#334", "issue_summary": "Feature request - copy response body to clipboard", "issue_description": "rwozniak commented on 26 Aug 2014\nAs in the title - it would be nice to be able to copy response body to clipboard with some shortcut.", "issue_status": "Closed", "issue_reporting_time": "2014-08-26T06:37:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1631": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/333", "issue_id": "#333", "issue_summary": "Can change_server be used in inline scripts?", "issue_description": "clarkewd commented on 26 Aug 2014\nI saw issue 328 but I'm still confused. It looks like\nchange_server should be able to be used with inline scripts. Is that correct?\nBasically, how can I have one SSL host handle requests for a different SSL host? i.e. make all requests for https://www.bing.com/ load corresponding resources from https://www.google.com/ ?\nI'm using a build from the master branch. Here's are the scripts I tried:\ndef serverconnect(context, flow):\n    flow.live.change_server( ('google.com', '443') )\n\ndef request(context, flow):\n    flow.live.change_server( ('google.com', '443') )\nThose lines are in a file like scripts.py that gets referenced with mitmproxy -s /path/to/scripts.py\nRequests continue through the serverconnect hook although they do not seem to affect the remote host etc. Adding the line in the request hook causes the request to crash - although I'm not sure how I can tell mitmproxy that I want to see the exact errors generated.\nWhat am I doing wrong? Thank you again", "issue_status": "Closed", "issue_reporting_time": "2014-08-25T23:59:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1632": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/332", "issue_id": "#332", "issue_summary": "--ignore does not work in transparent mode", "issue_description": "Member\nmhils commented on 24 Aug 2014\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2014-08-24T12:59:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1633": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/331", "issue_id": "#331", "issue_summary": "modify a POST request", "issue_description": "typex1 commented on 23 Aug 2014\nI have been struggling to change the contents of a POST request.\nExample: in the below request, i want to change everthing between the words START and END (see last line below) before the request is sent to the server. Can you give me a hand here? I tried e.g. flow.request._assemble(), but that merely enables me to write the POST request to a log file. I currently do not know which HTTPRequest method to use here. -Although I would think there might be a rather straight forward solution for this one.\n-----------------snip\nPOST /profile/foo/notes HTTP/1.1\nHost: www.example.com\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:31.0) Gecko/20100101 Firefox/31.0\nAccept: text/javascript, text/html, application/xml, text/xml, /\nAccept-Language: de,en-US;q=0.7,en;q=0.3\nAccept-Encoding: gzip, deflate\nDNT: 1\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nX-CSRF-Token: EMZ2sJmI4hVygIlbqk1cQftvqaOlfwO6evefdgwyCM4=\nX-Requested-With: XMLHttpRequest\nReferer: https://www.example.com/profile/foo\nCookie:\nPragma: no-cache\nCache-Control: no-cache\nContent-Length: 31\nSTART First message example! END\n-----------------snip", "issue_status": "Closed", "issue_reporting_time": "2014-08-23T13:51:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1634": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/330", "issue_id": "#330", "issue_summary": "mitmproxy stack trace cleared from console", "issue_description": "deployable commented on 23 Aug 2014\nmitmproxy (head/0.11) crashes when creating a custom response via flow.request.reply as used in the redirect_requests.py example. mitmdump continues to work after the request/reqponse via the same script. The trace looks like some timestamp information in the response is not populated when the response is short circuited.\nServer\nmitmproxy -p 3130 -s ./examples/redirect_requests.py\nClient\n$ http_proxy=localhost:3130 curl http://example.com/\nhelloworld\nTrace (snipped)\n      File \"/home/matt/clones/mitmproxy/help/src/mitmproxy/libmproxy/console/common.py\", line 193, in format_flow\n    delta = f.response.timestamp_end - f.response.timestamp_start\nTypeError: unsupported operand type(s) for -: 'NoneType' and 'NoneType'", "issue_status": "Closed", "issue_reporting_time": "2014-08-22T20:49:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1635": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/329", "issue_id": "#329", "issue_summary": "mitmdump error: [Errno 24] Too many open files", "issue_description": "Contributor\nmonoxygen commented on 19 Aug 2014\nWhen running mitmdump (v0.10.1) in a simple record mode, after visiting a few websites via the proxy, mitmdump eventually gets errno 24: too many open files.\ne.g.\n$ mitmdump -w /tmp/testtraffic --anticache -p 8080\n...\n53.203.15.63 GET http://s3-media4.ak.yelpcdn.com/assets/2/www/img/e41bc8917803/structural/happy_footer.png\n << 502: Error connecting to \"s3-media4.ak.yelpcdn.com\": [Errno 24] Too many open files\nException in thread Thread-1:\nTraceback (most recent call last):\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py\", line 808, in __bootstrap_inner\n    self.run()\n  File \"/Library/Python/2.7/site-packages/libmproxy/controller.py\", line 77, in run\n    self.server.serve_forever()\n  File \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 394, in serve_forever\n    request, client_address = self.socket.accept()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/socket.py\", line 202, in accept\n    sock, addr = self._sock.accept()\nerror: [Errno 24] Too many open files\nlsof -n shows about 255 open files, many of which are in the CLOSE_WAIT state. Also lots of ESTABLISHED connections. Here's an excerpt:\nPython  1817 terrylong   10u   IPv4 0x841c0e2f4ab85a1d       0t0     TCP 53.203.112.60:51956->205.180.175.183:http (ESTABLISHED)\nPython  1817 terrylong   11u   IPv4 0x841c0e2f3107aa1d       0t0     TCP 53.203.112.60:51957->74.125.239.45:http (CLOSE_WAIT)\nPython  1817 terrylong   13u   IPv4 0x841c0e2f489fb205       0t0     TCP 53.203.112.60:51975->74.125.239.46:http (CLOSE_WAIT)\nPython  1817 terrylong   14u   IPv4 0x841c0e2f310eaa1d       0t0     TCP 53.203.112.60:51870->53.203.48.119:http (CLOSE_WAIT)\nPython  1817 terrylong   15u   IPv4 0x841c0e2f310dca1d       0t0     TCP 53.203.112.60:51958->23.72.34.9:http (ESTABLISHED)\nPython  1817 terrylong   16u   IPv4 0x841c0e2f489caa1d       0t0     TCP 53.203.112.60:51877->184.172.55.136:http (CLOSE_WAIT)\nPython  1817 terrylong   17u   IPv4 0x841c0e2f489faa1d       0t0     TCP 53.203.112.60:51976->216.178.47.53:http (CLOSED)\nPython  1817 terrylong   18u   IPv4 0x841c0e2f4ac7d205       0t0     TCP 53.203.112.60:52159->74.121.143.254:http (ESTABLISHED)\nPython  1817 terrylong   19u   IPv4 0x841c0e2f489cd205       0t0     TCP 53.203.112.60:51983->74.125.239.45:http (CLOSE_WAIT)\nPython  1817 terrylong   20u   IPv4 0x841c0e2f4ac18a1d       0t0     TCP 53.203.112.60:52089->205.180.175.159:http (ESTABLISHED)\nPython  1817 terrylong   22u   IPv4 0x841c0e2f4ac1a205       0t0     TCP 53.203.112.60:52090->205.180.175.182:http (ESTABLISHED)\nPython  1817 terrylong   26u   IPv4 0x841c0e2f4abb5a1d       0t0     TCP 53.203.112.60:52014->54.186.42.96:http (CLOSE_WAIT)\nPython  1817 terrylong   28u   IPv4 0x841c0e2f31280a1d       0t0     TCP 53.203.112.60:51971->216.178.47.53:http (CLOSED)", "issue_status": "Closed", "issue_reporting_time": "2014-08-19T17:15:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1636": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/328", "issue_id": "#328", "issue_summary": "Refactor .change_server", "issue_description": "Member\nmhils commented on 18 Aug 2014\nRemove .change_server(), but introduce a ConnectionHandler facade instead. The facade should provide access to .server_conn, .client_conn and .change_server().\nflow.server_conn should become a @property that either takes flow.live.server_conn or the attribute from the state.", "issue_status": "Closed", "issue_reporting_time": "2014-08-17T21:43:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1637": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/327", "issue_id": "#327", "issue_summary": "repr(flow), repr(flow.request) etc should return reasonable representations.", "issue_description": "Member\nmhils commented on 17 Aug 2014\nAdditionally, they should be added in the example scripts to give users a better understanding of the mechanics.", "issue_status": "Closed", "issue_reporting_time": "2014-08-17T12:21:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1638": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/326", "issue_id": "#326", "issue_summary": "Move to Python 3", "issue_description": "Member\ncortesi commented on 15 Aug 2014\nCreating this as a catch-all ticket to elicit some discussion of Python3 support, which has become something of an FAQ.\nWe're going to have to make the jump to Python3 at some point. All our dependencies (last time I checked) were Python 3-ready, so in theory we could make the leap. If we do it, we would do Python 3-only - I don't think there's a benefit to trying to maintain Python 2/3 Frankenstein that gives us the worst of both worlds.\nThis leaves us with two issues. First, there's a legacy concern - quite a few people use libmproxy to build things, and I know that I personally would probably have a few weeks of work ahead of me just in converting existing related projects over.\nThe second thing has to do with Python 3 and its treatment of Unicode/strings. Mitmproxy is \"special\", in the sense that it deals with loosely typed, untrusted and possibly intentionally corrupted data flows. It's a boundary layer between a weird world where string encodings can't be assumed, and the higher levels like the UI and so forth, where Python 3 forces us to have unicode. In this sense, it's similar to other programs that deal with on-the-wire data, like web frameworks (though our problem is even worse). Have a look at Armin Ronacher's experience with Python 3 Unicode and Flask/Jinja2/etc.:\nhttp://lucumr.pocoo.org/2014/1/5/unicode-in-2-and-3/\nhttp://lucumr.pocoo.org/2014/5/12/everything-about-unicode/\nI know that this has frustrated some people working on similar programs enough that they've moved away from Python altogether....\nWhere does this leave us? Well, clearly we clearly can't stay on Python2 in the longer term. The Python3 situation is pretty dire, but has very gradually been getting very slightly better. 3.4 included some improvements, and I think 3.5 will have a few more. The key issues are intrinsic to the language design, though, and will never go away.", "issue_status": "Closed", "issue_reporting_time": "2014-08-14T21:58:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1639": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/325", "issue_id": "#325", "issue_summary": "Inconsistency of requirements specifications", "issue_description": "petrrr commented on 14 Aug 2014\nThe specifications of requirements differ in setup.py and requirements.txt. So which information is the authoritative one? Maybe get the two files in sync. Thanks!", "issue_status": "Closed", "issue_reporting_time": "2014-08-14T14:43:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1640": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/324", "issue_id": "#324", "issue_summary": "@concurrent decorator breaks .reply()", "issue_description": "Member\nmhils commented on 11 Aug 2014\nhttps://groups.google.com/forum/#!topic/mitmproxy/8dvS-_6Ibqs", "issue_status": "Closed", "issue_reporting_time": "2014-08-10T19:41:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1641": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/323", "issue_id": "#323", "issue_summary": "Docs for Transparent Mode on Windows", "issue_description": "Member\nmhils commented on 10 Aug 2014\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2014-08-10T14:11:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1642": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/322", "issue_id": "#322", "issue_summary": "X509Extension() takes no keyword arguments", "issue_description": "mirnor commented on 5 Aug 2014\nInstall mitmproxy by pip and when i run it get following:\nmitmproxy\nTraceback (most recent call last):\nFile \"/usr/bin/mitmproxy\", line 36, in\nconfig = proxy.process_proxy_options(parser, options)\nFile \"/usr/lib/python2.7/site-packages/libmproxy/proxy.py\", line 590, in process_proxy_options\ncertutils.dummy_ca(cacert)\nFile \"/usr/lib/python2.7/site-packages/netlib/certutils.py\", line 51, in dummy_ca\nkey, ca = create_ca(o=o, cn=cn, exp=exp)\nFile \"/usr/lib/python2.7/site-packages/netlib/certutils.py\", line 35, in create_ca\nsubject=ca),\nTypeError: X509Extension() takes no keyword arguments\nRecheck requirements:\npip install --upgrade mitmproxy\nRequirement already up-to-date: mitmproxy in /usr/lib/python2.7/site-packages\nRequirement already up-to-date: netlib>=0 in /usr/lib/python2.7/site-packages (from mitmproxy)\nRequirement already up-to-date: urwid>=1.1 in /usr/lib/python2.7/site-packages (from mitmproxy)\nRequirement already up-to-date: pyasn1>0.1.2 in /usr/lib/python2.7/site-packages (from mitmproxy)\nRequirement already up-to-date: pyopenssl>=0.13 in /usr/lib/python2.7/site-packages (from mitmproxy)\nRequirement already up-to-date: Pillow>=2.3.0,<2.4 in /usr/lib/python2.7/site-packages (from mitmproxy)\nRequirement already up-to-date: lxml in /usr/lib/python2.7/site-packages (from mitmproxy)\nRequirement already up-to-date: flask in /usr/lib/python2.7/site-packages (from mitmproxy)\nRequirement already up-to-date: cryptography>=0.2.1 in /usr/lib/python2.7/site-packages (from pyopenssl>=0.13->mitmproxy)\nRequirement already up-to-date: six>=1.5.2 in /usr/lib/python2.7/site-packages (from pyopenssl>=0.13->mitmproxy)\nRequirement already up-to-date: Werkzeug>=0.7 in /usr/lib/python2.7/site-packages (from flask->mitmproxy)\nRequirement already up-to-date: Jinja2>=2.4 in /usr/lib/python2.7/site-packages (from flask->mitmproxy)\nRequirement already up-to-date: itsdangerous>=0.21 in /usr/lib/python2.7/site-packages (from flask->mitmproxy)\nRequirement already up-to-date: cffi>=0.8 in /usr/lib/python2.7/site-packages (from cryptography>=0.2.1->pyopenssl>=0.13->mitmproxy)\nRequirement already up-to-date: markupsafe in /usr/lib/python2.7/site-packages (from Jinja2>=2.4->flask->mitmproxy)\nRequirement already up-to-date: pycparser in /usr/lib/python2.7/site-packages (from cffi>=0.8->cryptography>=0.2.1->pyopenssl>=0.13->mitmproxy)\nCleaning up...\nwhich pip -> /usr/bin/pip\nwhich python -> /usr/bin/python\nuname -a -> Linux 2.6.35.14-106.fc14.i686 i386 GNU/Linux\nWhat i am missing or do wrong?", "issue_status": "Closed", "issue_reporting_time": "2014-08-05T17:50:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1643": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/321", "issue_id": "#321", "issue_summary": "example \"modify_response_body.py\" does not work", "issue_description": "typex1 commented on 3 Aug 2014\nWhen I execute the above example script exactly like indicated, i.e.\nmitmdump -s \"modify_response_body.py mitmproxy bananas\"\nI constantly get the following errors:\nmitmdump: Traceback (most recent call last):\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/script.py\", line 74, in load\nexecfile(self.argv[0], ns, ns)\nFile \"modify_response_body.py\", line 5, in\nfrom libmproxy.protocol.http import decoded\nFile \"/Users/aldo/mitmproxy/mitmproxy/libmproxy/protocol/init.py\", line 1, in\nImportError: cannot import name AddressPriority\nI use a very recent git clone (dating August 2nd 2014, i.e. to my understanding it is mitmproxy-0.10.1). Any help is appreciated!", "issue_status": "Closed", "issue_reporting_time": "2014-08-03T13:18:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1644": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/320", "issue_id": "#320", "issue_summary": "responseheaders event does not occur", "issue_description": "ghost commented on 3 Aug 2014\nresponseheaders event in inline script never occurs.\nI start mitmproxy with:\nmitmproxy -s \"/etc/py.py\"\nfile contents is:\ndef responseheaders(ctx, flow):\n    f = open('/etc/mitm_err','w+')\n    f.write(\"response started \\n\")\n    f.close()\nall other events works with this code", "issue_status": "Closed", "issue_reporting_time": "2014-08-02T18:36:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1645": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/319", "issue_id": "#319", "issue_summary": "Feature: Modifying streaming data", "issue_description": "vikstrous commented on 1 Aug 2014\nI see that #88 added the ability to stream large files instead of downloading them upfront and then parsing them, but - and correct me if I'm wrong - it seems like there is no way to modify such files with mitmproxy.\nDoes something exist outside mitmproxy that allows one to modify these files?\nWould you guys be interested in a feature that allows you to modify data as it streams?\nI think this use case is particularly interesting when the user it downloading a large executable file, a song, a movie, or even a compressed file with any of those.\nFor an example of what I'm talking about, I have a proof of concept in c that injects code into a file in a streaming way: https://github.com/vikstrous/binder_full_of_elves/blob/master/stream_bind.c (linux x86-64 LE only for now)\nI'm particularly excited about injecting into streaming video :)\nI understand that mitmproxy was not designed for this, but I think it would be a great feature and I'm interested in contributing to make this happen.", "issue_status": "Closed", "issue_reporting_time": "2014-08-01T03:56:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1646": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/318", "issue_id": "#318", "issue_summary": "ProxyConfig: Simpler specification of settings", "issue_description": "Member\nmhils commented on 31 Jul 2014\nAnd I understand how the config stuff is written with parsing command line options in mind, but a simple ProxyConfig(mode=\u201ctransparent\u201d) might be less confusing than ProxyConfig(get_upstream_server = TransparentUpstreamServerResolver(platform.resolver(), TRANSPARENT_SSL_PORTS), http_form_in = \u201crelative\u201d) I have now.", "issue_status": "Closed", "issue_reporting_time": "2014-07-31T12:19:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1647": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/317", "issue_id": "#317", "issue_summary": "Is it possible to wildcard an https2http proxy?", "issue_description": "clarkewd commented on 29 Jul 2014\nHi Max,\nWould it be possible to do something like this:\nmitmproxy -R https2http://\\*:80\nThe idea would be that it would match all SSL traffic and redirect it to http, for multiple domains. The use would be for testing SSL when developing locally. Granted it works if the URL that is accessed in the browser is https://localhost:8080 and the command is mitmproxy -R https2http://localhost:80 - but my issue is that I have multiple local domain names setup in my /etc/hosts file.\nBasically it throws this error:\nYou attempted to reach https://sandbox, but instead you actually reached a server identifying itself as https://localhost\nI checked out the Reverse Proxy Documentation Issue and the SSL23_GET_CLIENT_HELLO issues, and I realize that the https2http / http2https features are still undocumented but was still not able to figure this out.\nI guess this could be the issue with the CONNECT before REQUEST way that the SSL handshake works? ... basically that the server name has to be specified via the command line since the hostname is not sent with the CONNECT ?\nHowever, with the Complication 3: Server Name Indication it looks like there are some possible workarounds. Are they already built in or would this have to be something we would need to write?\nThanks!", "issue_status": "Closed", "issue_reporting_time": "2014-07-28T20:13:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1648": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/316", "issue_id": "#316", "issue_summary": "Firefox 31 certificate validation errors", "issue_description": "locutus304 commented on 28 Jul 2014\nSince upgrading to Firefox 31, browsing HTTPS websites fails with the following error message:\nSecure Connection Failed\nAn error occurred during a connection to www.foobar.com.\nCertificate contains unknown critical extension.\n(Error code: sec_error_unknown_critical_extension)\nWondering whether this could be an issue with Mozilla's new PKI library that was released with FF 31 (https://blog.mozilla.org/security/2014/04/24/exciting-updates-to-certificate-verification-in-gecko/)?", "issue_status": "Closed", "issue_reporting_time": "2014-07-27T19:27:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1649": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/315", "issue_id": "#315", "issue_summary": "Upstream Mode: Change Destination Server", "issue_description": "clarkewd commented on 27 Jul 2014\nIf started with an upstream server, this inline script will skip using the upstream server if the User-Agent header has \"curl\" in it.\ndef request(context, flow):\n\n    # create a global (persistent) variable for the upstream proxy\n    global upstream_server_backup\n\n    # get the current upstream proxy\n    upstream = context._master.server.config.get_upstream_server\n\n    # make a backup of the initial value of the upstream proxy\n    try:\n        upstream_server_backup\n    except:\n        upstream_server_backup = upstream\n\n    # return if no upstream proxy is available\n    if upstream == None and upstream == upstream_server_backup:\n        return\n\n    # check the request headers, matching 'curl' in the User-Agent\n    if \"curl\" in str(flow.request.headers['User-Agent']):\n        # if this request is from curl, skip the upstream proxy\n        context._master.server.config.get_upstream_server = None\n    else:\n        # if not, put the upstream proxy value back the way it was\n        context._master.server.config.get_upstream_server = upstream_server_backup\nThis works with the current master branch ( v0.11 ), however there is sort of an\n\"off-by-one\" error...\nWhichever part of the libmproxy code that checks for and decides to use the upstream proxy appears to occur before the script callback self.run_script_hook(\"request\", f) runs - so this sets the upstream proxy, but for the next request.\nI also looked at possibly trying to call del_server_connection after making the configuration change in order to force the connection to be re-established.\nI realize this may be pushing the limits of the inline scripts. Is this possible? Is there a better way to do it?", "issue_status": "Closed", "issue_reporting_time": "2014-07-27T16:46:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1650": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/313", "issue_id": "#313", "issue_summary": "Is it possible to chain two SSL proxies together ( upstream SSL proxy ) ?", "issue_description": "clarkewd commented on 27 Jul 2014\nHi,\nI'm running the master branch (mitmproxy 0.11) on OS X 10.9. I've been attempting to selectively use a forward proxy to send some requests to Charles Web Debugging Proxy\nThis works well with non-SSL requests, setup is as follows:\nStep 1 - Configure Browser\nI have configured the browser to use mitmproxy via a PACfile that returns PROXY localhost:8080. I also trusted the root CA cert in my keychain. After starting mitmproxy with no parameters both HTTP and HTTPS requests work fine and yield a green browser bar.\nStep 2 - Attempt to use an upstream proxy\nCharles will allow both HTTP and SOCKS proxies\nSo I re-launch mitm with an upstream proxy of http://localhost:8888 - and HTTP traffic works but HTTPS requests give a SSL handshake error\nI have also attempted some of these options ( fyi to others - -F has changed to -U on mitmproxy 0.11 )\nmitmproxy -U \"http://localhost:8888\"\nmitmproxy -U \"https://localhost:8888\"\nmitmproxy -U \"http://localhost:8888\" --no-upstream-cert\nmitmproxy -U \"https://localhost:8888\" --no-upstream-cert\nmitmproxy -U \"http://localhost:8888\" --cert-forward\nmitmproxy -U \"https://localhost:8888\" --cert-forward\nNone of these options seem to make this work.\nI don't think I can try \"socks5://localhost:8888\" (yet) as it looks like socks support will be added in the future\nI see that in the 0.11 there is something regarding a new protocol - 2https - is that something that could be used to achieve this?\nAlso, i addition to adding the CA certificate to the system's keychain I have also tried using the same CA to sign SSL requests with both CharlesProxy and mitmproxy - but that did not seem to help either.\nAn upstream proxy that does not do the SSL \"mitm\" on the fly certificate signing would probably work, but again, I'm hoping to be able to use MITM to look at SSL requests and selectively forward some of the requests to another debugging tool.", "issue_status": "Closed", "issue_reporting_time": "2014-07-26T20:37:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1651": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/311", "issue_id": "#311", "issue_summary": "SSL23_GET_CLIENT_HELLO", "issue_description": "three15 commented on 22 Jul 2014\nI run mitmproxy in reverse proxy mode\n./mitmproxy -R https://google.com -b 127.0.0.1 -vvv\nthen\nlynx localhost:8080\nI have latest git snapshot of mitmproxy and netlib + latest pyopenssl/requests from pip. In fact I tried many other combinations of mitm and dependencies on a couple Ubuntu/Debian hosts.\nTo my surprise I just recently used this setup already and it had worked fine even on 10 version.\nThis is a mitmproxy eventlog:\n127.0.0.1:58327:clientconnect\n127.0.0.1:58327: Set new server address: google.com:443\n127.0.0.1:58327: serverconnect -> google.com:443\n127.0.0.1:58327: Establish SSL\n-> with client\n-> with server (sni: None)127.0.0.1:58327: error: NetLibError(\"SSL handshake error: [('SSL routines', 'SSL23_GET_CLIENT_HELLO', 'http request')]\",)\n127.0.0.1:58327: serverdisconnect\n-> google.com:443\n127.0.0.1:58327: clientdisconnect", "issue_status": "Closed", "issue_reporting_time": "2014-07-22T17:35:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1652": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/308", "issue_id": "#308", "issue_summary": "Upstream Mode: Request Replacements and Replay do not work, URL is displayed incorrectly.", "issue_description": "Jamie-Landeg-Jones commented on 18 Jul 2014\nWhen using mitmproxy with a forward proxy, the displayed log for https connections changes from:\n>> GET https://github.com/mitmproxy/mitmproxy\n       \u2190 200 text/html 67.18kB 245.33kB/s\nto:\n>> CONNECT github.com:443\n       \u2190 200 [no content] 134.87kB/s\n   GET https://127.0.0.1:8123/mitmproxy/mitmproxy\n       \u2190 200 text/html 67.25kB 342.91kB/s\nI can see why this is occuring - it's simply sort of describing the connection flow process, but I'm assuming it's a bug/oversight.\nThese are the problems as I see it:\nIt's messy, more confusing, and uses up more screen space. - Any forward proxy in use is already displayed in the status bar at the bottom of the screen, and the URL displayed shouldn't be dependent on the proxy configuration.\nAlso, non-https requests are displayed normally, without any indication of the proxy address.\nreplacement actions don't work without modification - as they key on the same text that is displayed, they need to be altered to deal with the proxy string.\n'r' ('replay request') no longer works - trying to replay either the connect or the GET fail, as the two operations should be tied together.\nFor these reasons, I'd like to attempt changing the screen-output so that it is the same as if a forwarding proxy isn't in use, solving the above problems in the process.\nAny thoughts?\nCheers, Jamie", "issue_status": "Closed", "issue_reporting_time": "2014-07-18T16:21:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1653": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/307", "issue_id": "#307", "issue_summary": "Bug in '~bs' and 'b' operators (+ working but crappy 'fix')", "issue_description": "Jamie-Landeg-Jones commented on 14 Jul 2014\nI've noticed a problem with filter operators, specifically '~bs':\nUsing '~bs' or '~b' in a replace expression, if the remote content is compressed, the operator will fail to match, as the test is applied to the non-decoded result.\nI've supplied a quick and dirty solution for '~b' which works, but I've never programmed Python before, and done very little OO, so I know this patch isn't good enough to merge, but hopefully it helps show thr problem.\nThree immediate issues with this fix I can see:\nThis is probably not the place for this code, as in its current form it needs to be duplicated in the '~b' section.\nWhen there's a '~b' or '~bs' match, the body is decompressed twice.\nIf there are multiple '~bs' operators, then the document will be seperately decompressed for each one (and again for each one with a positive match) [ though, doesn't it already work that way where one url may match more than one operator causing duplicate decomprssions? ]\nAnyway, with file libmproxy/filt.py at the beginning, after the line:\nfrom .contrib import pyparsing as pp\nI added:\nfrom . import encoding\nThen, I replaced the FBodResponse block from:\nclass FBodResponse(_Rex):\n    code = \"bs\"\n    help = \"Response body\"\n    def __call__(self, f):\n        if f.response and f.response.content and re.search(self.expr, f.response.content):\n            return True\nto:\nclass FBodResponse(_Rex):\n    code = \"bs\"\n    help = \"Response body\"\n    def __call__(self, f):\n        if f.response and f.response.content:\n            self.f = f\n            ce = f.response.headers.get_first(\"content-encoding\")\n            if ce in encoding.ENCODINGS:\n                self.ce = ce\n                self.f.response.decode()\n            if re.search(self.expr, f.response.content):\n                return True", "issue_status": "Closed", "issue_reporting_time": "2014-07-14T11:08:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1654": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/304", "issue_id": "#304", "issue_summary": "Reverse Proxy Documentation", "issue_description": "tysonnorris commented on 8 Jul 2014\nI am attempting to reverse proxy requests to an https server via:\n$ mitmproxy -p 9090 -e -v -v -v -v -v -R https://\nHowever, when I issue requests to localhost:9090, I get incorrect responses which vary based on using http/https in my client:\n$ curl -k -v http://localhost:9090 -> 502 NetLibError(\"SSL handshake error: [('SSL routines', 'SSL23_GET_CLIENT_HELLO', 'http request')]\",)\n$ curl -k -v https://localhost:9090 -> 404\nI thought I should be able to use http in curl, and allow proxy request to happen via ssl?\nevent log for my example using https://www.gmail.com:\n127.0.0.1:58831: clientconnect\n127.0.0.1:58831: Set new server address: www.gmail.com:443\n127.0.0.1:58831: serverconnect\n-> www.gmail.com:443\n127.0.0.1:58831: Establish SSL\n-> with client\n-> with server (sni: None)\n127.0.0.1:58831: error: NetLibError(\"SSL handshake error: [('SSL routines', 'SSL23_GET_CLIENT_HELLO', 'http request')]\",)\n127.0.0.1:58831: serverdisconnect\n-> www.gmail.com:443\n127.0.0.1:58831: clientdisconnect\n127.0.0.1:58848: clientconnect\n127.0.0.1:58848: Set new server address: www.gmail.com:443\n127.0.0.1:58848: serverconnect\n-> www.gmail.com:443\n127.0.0.1:58848: Establish SSL\n-> with client\n-> with server (sni: None)\n127.0.0.1:58848: request\n-> GET / HTTP/1.1\n127.0.0.1:58848: response\n-> HTTP/1.1 404 Not Found\n127.0.0.1:58848: error: NetLibDisconnect()\n127.0.0.1:58848: serverdisconnect\n-> www.gmail.com:443\n127.0.0.1:58848: clientdisconnect", "issue_status": "Closed", "issue_reporting_time": "2014-07-07T22:23:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1655": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/303", "issue_id": "#303", "issue_summary": "Reverse Proxy Server Replay fails (expected absolute, got relative URL)", "issue_description": "Member\nmhils commented on 6 Jul 2014\nhttps://groups.google.com/forum/#!topic/mitmproxy/RMEbEP7j_kc\nGist:\nmitmproxy only accepts absolute-urls in regular proxy mode (GET http://example.com/). In reverse proxy mode, this changes to relative form (GET /), as a normal HTTP server would receive. This logic sits in front of everything else. The server replay mode is not aware that the recorded traffic has been in relative form and rightfully complains about the invalid request mode.\nTL;DR: A very simple workaround is running mitmproxy -S revproxy.out -R http://127.0.0.1 (arbitrary reverse proxy URL). This sets mitmproxy in relative URL mode and everything works fine.\n@cortesi: Do we want to change the behaviour or the documentation?", "issue_status": "Closed", "issue_reporting_time": "2014-07-06T00:25:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1656": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/302", "issue_id": "#302", "issue_summary": "Add threading.Event() to indicate when mitmproxy is ready to receive traffic", "issue_description": "Member\nmhils commented on 6 Jul 2014\nhttps://groups.google.com/forum/#!topic/mitmproxy/4YynkCSFUoM\nI am writing an app using libmproxy. The example in the libmproxy document shows functions for run, handle_request, and handle_response. I'm wondering if a similar function is available that would get called when the proxy is running and ready to receive traffic. I would like to have a function called at that time so it could start a browser that would drive the traffic through the proxy. Anyone know if libmproxy has something like this? Thanks.\nI have tried starting the browser process in the run callback, just before calling controller.Master.run(self). It works in my limited testing so far. However, I'm not sure if this will always work or if I am just getting lucky with the timing (i.e., the browser process takes a while to get going, and that gives the call to controller.Master.run(self) time to get the proxy ready to handle traffic).\nRather than relying on race conditions here, we should have a threading.Event() (like should_exit) that signals that mitmproxy has started.", "issue_status": "Closed", "issue_reporting_time": "2014-07-06T00:01:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1657": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/301", "issue_id": "#301", "issue_summary": "mitmproxy not throwing error on bad handshake", "issue_description": "Contributor\nFuzion24 commented on 2 Jul 2014\nThis may be more a netlib issue than mitmproxy, but I want to gather information about when a client doesn't like a self-signed cert or mismatched hostname.\nThe ssl connection for the client (and otherwise) looks to happen here:\nnetlib/tcp.py -> convert_to_ssl\nI would assume on a bad handshake with the client (the client doesn't like the cert) an error is thrown in libmproxy/proxy/server.py at this call:\n            self.client_conn.convert_to_ssl(\n                cert, key,\n                handle_sni=self.handle_sni,\n                cipher_list=self.config.ciphers,\n                dhparams=self.config.certstore.dhparams,\n                ca_file=self.config.ca_file\n            )\nI believe that this function should be throwing an error based on netlib/test/test_tcp.py:\nclass TestServerCipherListError(test.ServerTestBase):\n    handler = ClientCipherListHandler\n    ssl = dict(\n        cert = tutils.test_data.path(\"data/server.crt\"),\n        key = tutils.test_data.path(\"data/server.key\"),\n        request_client_cert = False,\n        v3_only = False,\n        cipher_list = 'bogus'\n    )\n    def test_echo(self):\n        c = tcp.TCPClient((\"127.0.0.1\", self.port))\n        c.connect()\n        tutils.raises(\"handshake error\", c.convert_to_ssl, sni=\"foo.com\")\nHowever this is not throwing any kind of exception.\nI am running mitmproxy and netlib directly from master. I am attempting to mitm an android application and know when the client (the app) rejects a self-signed cert.\nIn the event log has the following, but nothing about failed handshake:\n192.168.1.212:58086: clientconnect\n192.168.1.212:58086: error: NetLibDisconnect()\n192.168.1.212:58086: clientdisconnect", "issue_status": "Closed", "issue_reporting_time": "2014-07-01T22:52:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1658": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/299", "issue_id": "#299", "issue_summary": "Failure to send attachment on Yahoo e-mail", "issue_description": "yoavfrancis commented on 1 Jul 2014\nHi,\nFor some reason I've yet to understand, I can't manage to compose (and send) an e-mail with an attachement on Yahoo.com webmail when using mitmproxy (I'm using it in transparent mode) - the asynchronous spinning wheel animation is running but nothing seems to happen (even when I wait for awhile). Seems like a weird RPC behavior - Gmail's attachment upload works ok.\nI'm using the decb6f9 version from the master branch.\nDo you have an idea of what the issue may be?\nThanks,\nYoav", "issue_status": "Closed", "issue_reporting_time": "2014-07-01T08:46:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1659": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/298", "issue_id": "#298", "issue_summary": "Can't get packet on physical device but can in emulator", "issue_description": "mavs141 commented on 30 Jun 2014\nI was use mitmproxy successfully with emulator 4.0.4 ,but when i tried to use it with my device , it can not work .\nI have try on my device , the browser on my phone shows \"Failure to verify proxy server certificate\" , and the mitmproxy can not get any traffic .\nCould you please give me some suggestion ? Thanks a lot .\n( My mitmproxy is built on ubuntu10.04 , and mitmproxy's is latest version , both emulator and my device are using same setting and install same mitmproxy-ca-cert file )", "issue_status": "Closed", "issue_reporting_time": "2014-06-30T08:45:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1660": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/297", "issue_id": "#297", "issue_summary": "400 Bad request", "issue_description": "odessky commented on 28 Jun 2014\nI try run transparent mode and get this error on client side:\nBad HTTP request line: 'GET http://google.com/ HTTP/1.0\\r\\n'\nSettings on server side:\nexport http_proxy=\"http://serverip:80\"\nOn server side:\nEvent log myip:33025: connect\nmyip:33025: transparent to serverip:80\nmyip:33025: 400: Bad HTTP request line: 'GET http://google.com/ HTTP/1.0\\r\\n'\nmyip:33025: disconnect\nSrver settings:\niptables-save\nGenerated by iptables-save v1.4.7 on Fri Jun 27 17:39:47 2014\n*nat\n:PREROUTING ACCEPT [440:21502]\n:POSTROUTING ACCEPT [2701:189122]\n:OUTPUT ACCEPT [2701:189122]\n-A PREROUTING -i eth0 -p tcp -m tcp --dport 80 -j REDIRECT --to-ports 8080\n-A PREROUTING -i eth0 -p tcp -m tcp --dport 443 -j REDIRECT --to-ports 8080\nCOMMIT\nCompleted on Fri Jun 27 17:39:47 2014\nsysctl net.ipv4.ip_forward\nnet.ipv4.ip_forward = 1\nI think mitmproxy transparent was broken", "issue_status": "Closed", "issue_reporting_time": "2014-06-27T21:34:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1661": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/296", "issue_id": "#296", "issue_summary": "transparent proxy not finding original destination on OS X Mavericks", "issue_description": "jschwalbe commented on 27 Jun 2014\nGreetings. I'm playing around with mitmproxy and trying to set up Transparent mode. Having some troubles, unfortunately. My setup is this: dd-wrt router, Mac OS X Mavericks (running mitmproxy 0.9.2), iPhone (target machine).\nOn my router I've forwarded traffic from iPhone to mitmproxy, and it's making it there correctly as shown below with nc:\n    [ob1@pax :: /tmp]$ nc -l 8080\n    GET / HTTP/1.1\n    Host: yahoo.com\n    Connection: keep-alive\n    <etc, snip>\nHowever, it isn't requesting the entire URL because, well, I'm unable (unwilling?) to input the proxy into proxy settings because I don't want the app I'm testing to \"know\" it's being proxied.\nThis causes the following error in mitmproxy event log:\n192.168.15.1:58507: connect\n192.168.15.1:58507: 502: Transparent mode failure: could not resolve original destination.\n192.168.15.1:58507: disconnect\n  -> handled 0 requests\nWhich causes the connection to get dropped. I've read about the sudo issue with OS X and made sure to use sudo within 5 minutes of starting up mitmproxy, no dice. I don't think it's an issue with my iptables configuration on the router, but in case that's the problem, here's what I'm using there:\n#!/bin/sh\nPROXY_IP=192.168.15.25\nPROXY_PORT=8080\nLAN_IP=`nvram get lan_ipaddr`\nLAN_NET=$LAN_IP/`nvram get lan_netmask`\n\niptables -t nat -A PREROUTING -i br0 -s 192.168.15.148 -d $LAN_NET -p tcp --dport 80 -j ACCEPT\niptables -t nat -A PREROUTING -i br0 -s 192.168.15.148 -p tcp --dport 80 -j DNAT --to $PROXY_IP:$PROXY_PORT\niptables -t nat -A PREROUTING -i br0 -s 192.168.15.148 -p tcp --dport 443 -j DNAT --to $PROXY_IP:$PROXY_PORT\niptables -t nat -I POSTROUTING -o br0 -s $LAN_NET -d $PROXY_IP -p tcp -j SNAT --to $LAN_IP\niptables -I FORWARD -i br0 -o br0 -s $LAN_NET -d $PROXY_IP -p tcp --dport $PROXY_PORT -j ACCEPT\nThe command I'm using to start mitmproxy is:\nmitmproxy -T --host\nAnd lastly, because I wanted to make sure I followed all the available directions, I did what http://mitmproxy.org/doc/transparent/osx.html told me to in regards to enabling ip forwarding and the pf configuration.\nIs this a bug or am I doing something incorrectly? Many thanks!", "issue_status": "Closed", "issue_reporting_time": "2014-06-27T13:47:38Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1662": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/295", "issue_id": "#295", "issue_summary": "SSL certificate errors (master branch as of 2 days ago)", "issue_description": "Jamie-Landeg-Jones commented on 26 Jun 2014\nI'm getting certificate errors on various sites, including this one!\nThis problem never occurred with 0.10.1 - at first glance it seems that the pages domain's spoofed certificate is being used for inline request to a different domain:", "issue_status": "Closed", "issue_reporting_time": "2014-06-25T19:55:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1663": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/294", "issue_id": "#294", "issue_summary": "console rewriting html text (master as of 2 days ago)", "issue_description": "Jamie-Landeg-Jones commented on 26 Jun 2014\nI've been struggling to get a regex to work, and finally realised what is going on.\nSomewhere, the html is being rewritten.\nfrom http://forums.theregister.co.uk/post/reply/2225552\nthis snippet in the source:\n                     <div>\n                        <textarea name=body id=body cols=60 rows=10 class=\"discussion\" tabindex=6></textarea>\n                    </div>\nis being displayed in mitmproxy as:\n<div>\n     <textarea name=\"body\" id=\"body\" cols=\"60\" rows=\"10\" class=\"discussion\" tabindex=\"6\"/></div>\nIt seems something is cleaning the html, but this make it damn awkward for debugging!\nThoughts?", "issue_status": "Closed", "issue_reporting_time": "2014-06-25T19:42:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1664": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/293", "issue_id": "#293", "issue_summary": "script load error if there's a space in the script's path", "issue_description": "smandon commented on 25 Jun 2014\nHi,\nWhen using the -s option of mitmproxy 0.10.1, if a space is present in the script's path, mitmproxy gives this error, even when using quotes around the path:\n# mitmproxy -s \"/path with spaces/script.py\"\nScript load error: Command not found.\nIt used to work in mitmproxy 0.9.2 and the problem doesn't exist with the -w parameter for example.\nUsing \"\\ \" instead of spaces works.", "issue_status": "Closed", "issue_reporting_time": "2014-06-25T17:56:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1665": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/292", "issue_id": "#292", "issue_summary": "Chain mitmproxy and charles/burp proxy (HTTPS)", "issue_description": "Semyazz commented on 24 Jun 2014\nHow can I chain multiple proxies (HTTPS) according the the following schema\nBrowser -> mitmproxy-1:8080 -> burp/charles:8081 -> mitmproxy-2:8082 -> Internet\nI know it's possible to chain mitmproxy-1 -> mitmproxy-2 and I've already tested that, but I can't put something else in between.\nIs it even possible? How can I achieve that.\nThe goal behind this is that mitmproxy is great for scripting, but Charles/Burp are much better for manual editing stuff. I'd like to script some stuff in mitmproxy and later inspect requests manually in some GUI tool like Charles or Burp", "issue_status": "Closed", "issue_reporting_time": "2014-06-24T11:16:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1666": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/291", "issue_id": "#291", "issue_summary": "no_upstream_cert: Set SNI value as SubjectAltName", "issue_description": "Member\nmhils commented on 18 Jun 2014\nhttps://groups.google.com/forum/#!topic/mitmproxy/68yyf28Eoro\ninclude in sans if self.sni is not None.", "issue_status": "Closed", "issue_reporting_time": "2014-06-18T12:55:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1667": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/289", "issue_id": "#289", "issue_summary": "No man page for mitmproxy", "issue_description": "sdelafond commented on 17 Jun 2014\nPull request providing one to be coming soons.\nCheers,\n--Seb", "issue_status": "Closed", "issue_reporting_time": "2014-06-17T08:20:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1668": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/288", "issue_id": "#288", "issue_summary": "Support SSLv2", "issue_description": "lucastan commented on 14 Jun 2014\nI know SSLv2 is ancient, but how to enable support for a client and server that speak only v2?\nI have this error: SSL handshake error: SSL23_GET_CLIENT_HELLO, unknown protocol in the event log\nI'm willing to make a pull request, but I'd have to know how to modify", "issue_status": "Closed", "issue_reporting_time": "2014-06-14T09:14:33Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1669": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/287", "issue_id": "#287", "issue_summary": "SSL handshake issue", "issue_description": "Kein-Sung commented on 13 Jun 2014\nHello, I have a problem that sniff Vine app on iPhone.\nI heard that vine use RC4 cipher.\nI refered this article named \"mitmproxy now supports #gotofail\".\nso, I try this command.\n./mitmproxy -e -z -p 8080 --host --ciphers=\"RC4\" --cert-forward\nand\n./mitmproxy -e -z -p 8080 --host --ciphers=\"RC4-SHA\" --cert-forward\nThis is the event logs:\nGET http://cacerts.digicert.com/DigiCertHighAssuranceCA-3.crt\n\u2190 403 text/html 162B 209.19kB/s\n192.168.0.28:54956: clientconnect\n192.168.0.28:54958: clientconnect\n192.168.0.28:54956: error: NetLibError('SSL handshake error: ',)\n192.168.0.28:54958: clientdisconnect\n192.168.0.28:54956: clientdisconnect\nPlease help me.", "issue_status": "Closed", "issue_reporting_time": "2014-06-13T10:59:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1670": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/284", "issue_id": "#284", "issue_summary": "forward proxy => \"mitmproxy has crashed!\"", "issue_description": "kkurian commented on 11 Jun 2014\nI'm new to libmproxy and maybe I'm missing something here. In particular, it's not clear from the documentation how to implement a forward proxy using libmproxy so I've reviewed the mitmproxy source and taken a stab based upon that.\nGiven all that...\nUsing 0.11, I've pieced together the following, which I believe should simply forward-proxy requests to port 8080 along to localhost port 80.\nfrom libmproxy import controller, proxy\nfrom libmproxy.proxy import config, server\n\nclass SimpleForwardProxy(controller.Master):\n    def __init__(self, server):\n        controller.Master.__init__(self, server)\n\n    def run(self):\n        try:\n            return controller.Master.run(self)\n        except Exception as e:\n            print e.__doc__\n            print e.message\n        finally:\n            self.shutdown()\n\n    def handle_request(self, msg):\n        print \"handling request {}\".format(msg)\n        msg.reply()\n\n    def handle_response(self, msg):\n        print \"handling response {}\".format(msg)\n        msg.reply()\n\nconfig_ = config.ProxyConfig(\n    http_form_in=\"absolute\",\n    http_form_out=\"absolute\",\n    get_upstream_server=\n        proxy.ConstUpstreamServerResolver(\"http://127.0.0.1:80\")\n)\nserver_ = server.ProxyServer(config_, 8080)\nforward_proxy = SimpleForwardProxy(server_)\nforward_proxy.run()\nOnce the application is running,\ncurl http://127.0.0.1:8080\nresults in:\nmitmproxy has crashed!\nPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy\n----------------------------------------\nError in processing of request from 127.0.0.1:38216\nTraceback (most recent call last):\n  File \"/root/venv/lib/python2.7/site-packages/netlib/tcp.py\", line 433, in connection_thread\n    self.handle_client_connection(connection, client_address)\n  File \"/root/venv/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 53, in handle_client_connection\n    h.handle()\n  File \"/root/venv/lib/python2.7/site-packages/libmproxy/proxy/server.py\", line 105, in handle\n    raise e\nTypeError: getsockaddrarg() takes exactly 2 arguments (17 given)", "issue_status": "Closed", "issue_reporting_time": "2014-06-10T21:58:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1671": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/283", "issue_id": "#283", "issue_summary": "support raw utf8 unicode string", "issue_description": "ilovenwd commented on 8 Jun 2014\nif a json response contains utf8 encoded unicode like \"\u91d1\",\nit will convert to \"\\u94dc\" in JSON view\nand shows \"...\" in raw view\nThis behavior make inspect much harder.\nIt should just show \"\u91d1\" in both JSON view and raw view", "issue_status": "Closed", "issue_reporting_time": "2014-06-08T05:30:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1672": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/282", "issue_id": "#282", "issue_summary": "Install failing: Lubuntu: Traceback", "issue_description": "msimonc commented on 8 Jun 2014\nEarlier problems overcome with:\nsudo apt-get install build-essential libssl-dev libffi-dev python-dev\nsudo pip install --upgrade setuptools\nNow stuck on:\nsudo pip install mitmproxy\nDownloading/unpacking mitmproxy\nDownloading mitmproxy-0.10.1.tar.gz (3.4MB): 3.4MB downloaded\nRunning setup.py egg_info for package mitmproxy\nDownloading/unpacking netlib>=0 (from mitmproxy)\nDownloading netlib-0.10.tar.gz (60kB): 60kB downloaded\nRunning setup.py egg_info for package netlib\nDownloading/unpacking urwid>=1.1 (from mitmproxy)\nDownloading urwid-1.2.1.tar.gz (578kB): 578kB downloaded\nRunning setup.py egg_info for package urwid\nwarning: no files found matching 'CHANGELOG'\nDownloading/unpacking pyasn1>0.1.2 (from mitmproxy)\nDownloading pyasn1-0.1.7.tar.gz (68kB): 68kB downloaded\nRunning setup.py egg_info for package pyasn1\nDownloading/unpacking pyopenssl>=0.13 (from mitmproxy)\nDownloading pyOpenSSL-0.14.tar.gz (128kB): 128kB downloaded\nRunning setup.py egg_info for package pyopenssl\nwarning: no previously-included files matching '*.pyc' found anywhere in distribution\nno previously-included directories found matching 'doc/_build'\nDownloading/unpacking Pillow>=2.3.0,<2.4 (from mitmproxy)\nDownloading Pillow-2.3.1.zip (2.4MB): 2.4MB downloaded\nRunning setup.py egg_info for package Pillow\nDownloading/unpacking lxml (from mitmproxy)\nDownloading lxml-3.3.5.tar.gz (3.5MB): 3.5MB downloaded\nRunning setup.py egg_info for package lxml\n/usr/lib/python2.7/distutils/dist.py:267: UserWarning: Unknown distribution option: 'bugtrack_url'\nwarnings.warn(msg)\nBuilding lxml version 3.3.5.\nBuilding without Cython.\nERROR: /bin/sh: 1: xslt-config: not found\n** make sure the development packages of libxml2 and libxslt are installed **\n\nUsing build configuration of libxslt\n\nwarning: no previously-included files found matching '*.py'\nDownloading/unpacking flask (from mitmproxy)\nDownloading Flask-0.10.1.tar.gz (544kB): 544kB downloaded\nRunning setup.py egg_info for package flask\nwarning: no files found matching '*' under directory 'tests'\nwarning: no previously-included files matching '*.pyc' found under directory 'docs'\nwarning: no previously-included files matching '*.pyo' found under directory 'docs'\nwarning: no previously-included files matching '*.pyc' found under directory 'tests'\nwarning: no previously-included files matching '*.pyo' found under directory 'tests'\nwarning: no previously-included files matching '*.pyc' found under directory 'examples'\nwarning: no previously-included files matching '*.pyo' found under directory 'examples'\nno previously-included directories found matching 'docs/_build'\nno previously-included directories found matching 'docs/_themes/.git'\nDownloading/unpacking cryptography>=0.2.1 (from pyopenssl>=0.13->mitmproxy)\nDownloading cryptography-0.4.tar.gz (260kB): 260kB downloaded\nRunning setup.py egg_info for package cryptography\nno previously-included directories found matching 'documentation/_build'\nzip_safe flag not set; analyzing archive contents...\nsix: module references path\nInstalled /tmp/pip_build_root/cryptography/six-1.7.0-py2.7.egg\nSearching for cffi>=0.8\nReading https://pypi.python.org/simple/cffi/\nBest match: cffi 0.8.2\nDownloading https://pypi.python.org/packages/source/c/cffi/cffi-0.8.2.tar.gz#md5=37fc88c62f40d04e8a18192433f951ec\nProcessing cffi-0.8.2.tar.gz\nWriting /tmp/easy_install-sHeEOF/cffi-0.8.2/setup.cfg\nRunning cffi-0.8.2/setup.py -q bdist_egg --dist-dir /tmp/easy_install-sHeEOF/cffi-0.8.2/egg-dist-tmp-kivBBf\ncc -c c/check__thread.c -o c/check__thread.o\n\nInstalled /tmp/pip_build_root/cryptography/cffi-0.8.2-py2.7-linux-x86_64.egg\nSearching for pycparser\nReading https://pypi.python.org/simple/pycparser/\nBest match: pycparser 2.10\nDownloading https://pypi.python.org/packages/source/p/pycparser/pycparser-2.10.tar.gz#md5=d87aed98c8a9f386aa56d365fe4d515f\nProcessing pycparser-2.10.tar.gz\nWriting /tmp/easy_install-XgkkkT/pycparser-2.10/setup.cfg\nRunning pycparser-2.10/setup.py -q bdist_egg --dist-dir /tmp/easy_install-XgkkkT/pycparser-2.10/egg-dist-tmp-Nh3arS\nzip_safe flag not set; analyzing archive contents...\n\nInstalled /tmp/pip_build_root/cryptography/pycparser-2.10-py2.7.egg\n\nbuilding '_Cryptography_cffi_684bb40axf342507b' extension\nx86_64-linux-gnu-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c cryptography/hazmat/primitives/__pycache__/_Cryptography_cffi_684bb40axf342507b.c -o /tmp/pip_build_root/cryptography/cryptography/hazmat/primitives/__pycache__/cryptography/hazmat/primitives/__pycache__/_Cryptography_cffi_684bb40axf342507b.o\nx86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -D_FORTIFY_SOURCE=2 -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security /tmp/pip_build_root/cryptography/cryptography/hazmat/primitives/__pycache__/cryptography/hazmat/primitives/__pycache__/_Cryptography_cffi_684bb40axf342507b.o -o /tmp/pip_build_root/cryptography/cryptography/hazmat/primitives/__pycache__/_Cryptography_cffi_684bb40axf342507b.so\nTraceback (most recent call last):\n  File \"<string>\", line 16, in <module>\n  File \"/tmp/pip_build_root/cryptography/setup.py\", line 174, in <module>\n    \"test\": PyTest,\n  File \"/usr/lib/python2.7/distutils/core.py\", line 152, in setup\n    dist.run_commands()\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 953, in run_commands\n    self.run_command(cmd)\n  File \"/usr/lib/python2.7/distutils/dist.py\", line 972, in run_command\n    cmd_obj.run()\n  File \"<string>\", line 14, in replacement_run\n  File \"/usr/local/lib/python2.7/dist-packages/setuptools/command/egg_info.py\", line 187, in find_sources\n    mm.run()\n  File \"/usr/local/lib/python2.7/dist-packages/setuptools/command/egg_info.py\", line 271, in run\n    self.add_defaults()\n  File \"/usr/local/lib/python2.7/dist-packages/setuptools/command/egg_info.py\", line 300, in add_defaults\n    sdist.add_defaults(self)\n  File \"/usr/local/lib/python2.7/dist-packages/setuptools/command/sdist.py\", line 168, in add_defaults\n    build_py = self.get_finalized_command('build_py')\n  File \"/usr/lib/python2.7/distutils/cmd.py\", line 312, in get_finalized_command\n    cmd_obj.ensure_finalized()\n  File \"/usr/lib/python2.7/distutils/cmd.py\", line 109, in ensure_finalized\n    self.finalize_options()\n  File \"/usr/local/lib/python2.7/dist-packages/setuptools/command/build_py.py\", line 26, in finalize_options\n    orig.build_py.finalize_options(self)\n  File \"/usr/lib/python2.7/distutils/command/build_py.py\", line 46, in finalize_options\n    ('force', 'force'))\n  File \"/usr/lib/python2.7/distutils/cmd.py\", line 298, in set_undefined_options\n    src_cmd_obj.ensure_finalized()\n  File \"/usr/lib/python2.7/distutils/cmd.py\", line 109, in ensure_finalized\n    self.finalize_options()\n  File \"/tmp/pip_build_root/cryptography/setup.py\", line 88, in finalize_options\n    self.distribution.ext_modules = get_ext_modules()\n  File \"/tmp/pip_build_root/cryptography/setup.py\", line 65, in get_ext_modules\n    from cryptography.hazmat.primitives import constant_time, padding\n  File \"cryptography/hazmat/primitives/padding.py\", line 25, in <module>\n    from cryptography.hazmat.primitives import interfaces\n  File \"cryptography/hazmat/primitives/interfaces.py\", line 21, in <module>\n    @six.add_metaclass(abc.ABCMeta)\nAttributeError: 'module' object has no attribute 'add_metaclass'\nComplete output from command python setup.py egg_info:\nno previously-included directories found matching 'documentation/_build'\nzip_safe flag not set; analyzing archive contents...\nsix: module references path\nInstalled /tmp/pip_build_root/cryptography/six-1.7.0-py2.7.egg\nSearching for cffi>=0.8\nReading https://pypi.python.org/simple/cffi/\nBest match: cffi 0.8.2\nDownloading https://pypi.python.org/packages/source/c/cffi/cffi-0.8.2.tar.gz#md5=37fc88c62f40d04e8a18192433f951ec\nProcessing cffi-0.8.2.tar.gz\nWriting /tmp/easy_install-sHeEOF/cffi-0.8.2/setup.cfg\nRunning cffi-0.8.2/setup.py -q bdist_egg --dist-dir /tmp/easy_install-sHeEOF/cffi-0.8.2/egg-dist-tmp-kivBBf\ncc -c c/check__thread.c -o c/check__thread.o\nInstalled /tmp/pip_build_root/cryptography/cffi-0.8.2-py2.7-linux-x86_64.egg\nSearching for pycparser\nReading https://pypi.python.org/simple/pycparser/\nBest match: pycparser 2.10\nDownloading https://pypi.python.org/packages/source/p/pycparser/pycparser-2.10.tar.gz#md5=d87aed98c8a9f386aa56d365fe4d515f\nProcessing pycparser-2.10.tar.gz\nWriting /tmp/easy_install-XgkkkT/pycparser-2.10/setup.cfg\nRunning pycparser-2.10/setup.py -q bdist_egg --dist-dir /tmp/easy_install-XgkkkT/pycparser-2.10/egg-dist-tmp-Nh3arS\nzip_safe flag not set; analyzing archive contents...\nInstalled /tmp/pip_build_root/cryptography/pycparser-2.10-py2.7.egg\nrunning egg_info\ncreating pip-egg-info/cryptography.egg-info\nwriting requirements to pip-egg-info/cryptography.egg-info/requires.txt\nwriting pip-egg-info/cryptography.egg-info/PKG-INFO\nwriting top-level names to pip-egg-info/cryptography.egg-info/top_level.txt\nwriting dependency_links to pip-egg-info/cryptography.egg-info/dependency_links.txt\nwriting manifest file 'pip-egg-info/cryptography.egg-info/SOURCES.txt'\nwarning: manifest_maker: standard file '-c' not found\nrunning build_ext\nbuilding '_Cryptography_cffi_684bb40axf342507b' extension\ncreating /tmp/pip_build_root/cryptography/cryptography/hazmat/primitives/pycache/cryptography\ncreating /tmp/pip_build_root/cryptography/cryptography/hazmat/primitives/pycache/cryptography/hazmat\ncreating /tmp/pip_build_root/cryptography/cryptography/hazmat/primitives/pycache/cryptography/hazmat/primitives\ncreating /tmp/pip_build_root/cryptography/cryptography/hazmat/primitives/pycache/cryptography/hazmat/primitives/pycache\nx86_64-linux-gnu-gcc -pthread -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -fPIC -I/usr/include/python2.7 -c cryptography/hazmat/primitives/pycache/_Cryptography_cffi_684bb40axf342507b.c -o /tmp/pip_build_root/cryptography/cryptography/hazmat/primitives/pycache/cryptography/hazmat/primitives/pycache/_Cryptography_cffi_684bb40axf342507b.o\nx86_64-linux-gnu-gcc -pthread -shared -Wl,-O1 -Wl,-Bsymbolic-functions -Wl,-Bsymbolic-functions -Wl,-z,relro -fno-strict-aliasing -DNDEBUG -g -fwrapv -O2 -Wall -Wstrict-prototypes -D_FORTIFY_SOURCE=2 -g -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security /tmp/pip_build_root/cryptography/cryptography/hazmat/primitives/pycache/cryptography/hazmat/primitives/pycache/_Cryptography_cffi_684bb40axf342507b.o -o /tmp/pip_build_root/cryptography/cryptography/hazmat/primitives/pycache/_Cryptography_cffi_684bb40axf342507b.so\nTraceback (most recent call last):\nFile \"\", line 16, in\nFile \"/tmp/pip_build_root/cryptography/setup.py\", line 174, in\n\"test\": PyTest,\nFile \"/usr/lib/python2.7/distutils/core.py\", line 152, in setup\ndist.run_commands()\nFile \"/usr/lib/python2.7/distutils/dist.py\", line 953, in run_commands\nself.run_command(cmd)\nFile \"/usr/lib/python2.7/distutils/dist.py\", line 972, in run_command\ncmd_obj.run()\nFile \"\", line 14, in replacement_run\nFile \"/usr/local/lib/python2.7/dist-packages/setuptools/command/egg_info.py\", line 187, in find_sources\nmm.run()\nFile \"/usr/local/lib/python2.7/dist-packages/setuptools/command/egg_info.py\", line 271, in run\nself.add_defaults()\nFile \"/usr/local/lib/python2.7/dist-packages/setuptools/command/egg_info.py\", line 300, in add_defaults\nsdist.add_defaults(self)\nFile \"/usr/local/lib/python2.7/dist-packages/setuptools/command/sdist.py\", line 168, in add_defaults\nbuild_py = self.get_finalized_command('build_py')\nFile \"/usr/lib/python2.7/distutils/cmd.py\", line 312, in get_finalized_command\ncmd_obj.ensure_finalized()\nFile \"/usr/lib/python2.7/distutils/cmd.py\", line 109, in ensure_finalized\nself.finalize_options()\nFile \"/usr/local/lib/python2.7/dist-packages/setuptools/command/build_py.py\", line 26, in finalize_options\norig.build_py.finalize_options(self)\nFile \"/usr/lib/python2.7/distutils/command/build_py.py\", line 46, in finalize_options\n('force', 'force'))\nFile \"/usr/lib/python2.7/distutils/cmd.py\", line 298, in set_undefined_options\nsrc_cmd_obj.ensure_finalized()\nFile \"/usr/lib/python2.7/distutils/cmd.py\", line 109, in ensure_finalized\nself.finalize_options()\nFile \"/tmp/pip_build_root/cryptography/setup.py\", line 88, in finalize_options\nself.distribution.ext_modules = get_ext_modules()\nFile \"/tmp/pip_build_root/cryptography/setup.py\", line 65, in get_ext_modules\nfrom cryptography.hazmat.primitives import constant_time, padding\nFile \"cryptography/hazmat/primitives/padding.py\", line 25, in\nfrom cryptography.hazmat.primitives import interfaces\nFile \"cryptography/hazmat/primitives/interfaces.py\", line 21, in\n@six.add_metaclass(abc.ABCMeta)\nAttributeError: 'module' object has no attribute 'add_metaclass'\nCleaning up...\nCommand python setup.py egg_info failed with error code 1 in /tmp/pip_build_root/cryptography\nStoring complete log in /home/mark/.pip/pip.log\nmark@gold:~$", "issue_status": "Closed", "issue_reporting_time": "2014-06-08T03:33:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1673": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/281", "issue_id": "#281", "issue_summary": "AttributeError: 'module' object has no attribute '_lib'", "issue_description": "Kr0nZ commented on 8 Jun 2014\nNot sure why this is happening, mitmproxy was working fine previously but now it just fails with this error msg. I haven't updated or changed anything, I even tried updating mitmproxy using (sudo pip install --upgrade mitmproxy) but I still get same msg\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 43, in \n    config = process_proxy_options(parser, options)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/config.py\", line 107, in process_proxy_options\n    certforward = options.certforward,\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/config.py\", line 27, in __init__\n    self.certstore = certutils.CertStore.from_store(self.confdir, CONF_BASENAME)\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/certutils.py\", line 153, in from_store\n    dh = klass.load_dhparam(dhp)\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/certutils.py\", line 133, in load_dhparam\n    bio = OpenSSL.SSL._lib.BIO_new_file(path, b\"r\")\nAttributeError: 'module' object has no attribute '_lib'", "issue_status": "Closed", "issue_reporting_time": "2014-06-07T20:09:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1674": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/280", "issue_id": "#280", "issue_summary": "TCP proxying is slower than HTTP proxying?", "issue_description": "yoavfrancis commented on 2 Jun 2014\nJust something I wondered while I played around a bit -\nI'm trying to run mitmproxy in tcp mode in order to facilitate working with non-http protocols. However - I've noticed that when using tcp mode it runs slower when compared to http proxying (try browsing to non-https website, like lifehacker.com)\nDo you have an idea why that might be? Does the http proxy mode works differently in regards to fetching multiple resources (pipelining, etc.)?\nPerhaps tweaking with the select timeout in libmproxy/protocol/tcp.py can fix that?\nWould love to hear your input.\nThanks,\nYoav", "issue_status": "Closed", "issue_reporting_time": "2014-06-02T13:00:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1675": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/279", "issue_id": "#279", "issue_summary": "0.11", "issue_description": "Member\nmhils commented on 28 May 2014\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2014-05-28T16:10:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1676": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/278", "issue_id": "#278", "issue_summary": "Don't display error messages on client disconnect.", "issue_description": "Member\nmhils commented on 25 May 2014\nBreak up HTTPHandler.handle_error into a protocol-agnostic part which gets moved into ProtocolHandler and a HTTP part. The former should deal with logging and discarding disconnect messages (refs #250)", "issue_status": "Closed", "issue_reporting_time": "2014-05-25T14:05:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1677": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/277", "issue_id": "#277", "issue_summary": "mitmproxy does not work with SPDY", "issue_description": "yoavfrancis commented on 20 May 2014\nHi there,\nI was trying to figure out why a specific application was not working with mitmproxy. After some delving around - it seemed that the Application is using SPDY (over port 443), while mitmproxy wrongly detected the first SPDY packet as a part of an SSL handshake (for which it reports \"wrong version\" and terminates)\nDoes mitmproxy support SPDY? perhaps it can be a nice feature to add SPDY recognition (or ignoring it in the meanwhile and passing SPDY packets not through the proxy)\nThanks,\nYoav", "issue_status": "Closed", "issue_reporting_time": "2014-05-20T12:30:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1678": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/276", "issue_id": "#276", "issue_summary": "Weird behavior with Gmail.com on Chrome", "issue_description": "yoavfrancis commented on 13 May 2014\nI have the following weird issue - when running mitmproxy for a while and attempting to access gmail.com in an Incognito tab - I'm unable to access it. (Just seems to be \"loading\" forever, nothing is displayed in the tab)\nFurther viewing of the traffic in Wireshark shows me that upon accessing gmail.com from the incognito tab - It seems that the connection is attempting resume an old connection (no SYN/Client Hello is sent from the client, simply TLS application data)\nHas anyone experienced a similar behavior?\nYoav", "issue_status": "Closed", "issue_reporting_time": "2014-05-13T08:13:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1679": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/275", "issue_id": "#275", "issue_summary": "Python 3.x support", "issue_description": "tomassommar commented on 12 May 2014\nIs there any plans on support for Python 3.x?", "issue_status": "Closed", "issue_reporting_time": "2014-05-12T15:59:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1680": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/273", "issue_id": "#273", "issue_summary": "Pip install not working", "issue_description": "bobotay commented on 11 May 2014\nMy system info:\nPython 3.4.0 (v3.4.0:04f714765c13, Mar 16 2014, 19:25:23) [MSC v.1600 64 bit (AM D64)] on win32\nGot this error after command \"pip install mitmproxy\":\nDownloading/unpacking mitmproxy\n  Running setup.py (path:C:\\Users\\[EXCLUDED]\\AppData\\Local\\Temp\\pip_build_[EXCLUDED]\\mit\nmproxy\\setup.py) egg_info for package mitmproxy\n    Traceback (most recent call last):\n      File \"<string>\", line 17, in <module>\n      File \"C:\\Users\\isaiah\\AppData\\Local\\Temp\\pip_build_isaiah\\mitmproxy\\setup.\npy\", line 74, in <module>\n        long_description = file(os.path.join(pdir(), \"README.txt\")).read()\n    NameError: name 'file' is not defined\n    Complete output from command python setup.py egg_info:\n    Traceback (most recent call last):\n\n  File \"<string>\", line 17, in <module>\n\n  File \"C:\\Users\\[EXCLUDED]\\AppData\\Local\\Temp\\pip_build_[EXCLUDED]\\mitmproxy\\setup.py\",\n line 74, in <module>\n\n    long_description = file(os.path.join(pdir(), \"README.txt\")).read()\n\nNameError: name 'file' is not defined\n\n----------------------------------------\nCleaning up...\nCommand python setup.py egg_info failed with error code 1 in C:\\Users\\[EXCLUDED]\\App\nData\\Local\\Temp\\pip_build_[EXCLUDED]\\mitmproxy\nStoring debug log for failure in C:\\Users\\[EXCLUDED]\\pip\\pip.log", "issue_status": "Closed", "issue_reporting_time": "2014-05-10T19:27:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1681": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/272", "issue_id": "#272", "issue_summary": "How can I use the \"--ciphers\" option with libmproxy?", "issue_description": "idiotsavant commented on 10 May 2014\nI have downloaded version 0.11 and I can use the new \"--ciphers\" option from the mitmproxy console. But how can I use it in a Python script with libmproxy? I can't find any mention of it using pydocs in the 0.10 release (not surprising), and pydocs doesn't seem to work in 0.11 from the master - no documentation is ever found.\nMy objective is to use this option with my existing transparent mode implementation to force the server to negotiate a cipher of my choosing.\nMany thanks for the work you've done developing this flexible and very powerful tool!", "issue_status": "Closed", "issue_reporting_time": "2014-05-10T00:14:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1682": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/270", "issue_id": "#270", "issue_summary": "sudo on OS X requires a password", "issue_description": "mvd7793 commented on 3 May 2014\nhttps://github.com/mitmproxy/mitmproxy/blob/master/libmproxy/platform/osx.py#L13\ntl;dr: This command requires a password on OS X 10.9.2, so it fails if the user hasn't used sudo in the last 5 minutes or so.\nLonger Version:\n3:45 AM: My arpspoofing class project works with mitmproxy, I've hijacked my Chromebook, yay!\nunrelated code changes\n3:55 AM: I run it again, \"Transparent mode failure: could not resolve original destination\" :( Well, it must be my fault, git stash, nothing changes, :(\nbegins tracing through libmproxy code\n4:00 AM: Hmm.... they're using sudo to access the packet firewall text to parse.\n4:01 AM: runs sudo -n /sbin/pfctl -s state in terminal... sudo: a password is required\n4:02 AM: Wait... how are they bypassing the password? man sudo, /-n, \"If a password is required for the command to run, sudo will display an error message and exit.\"\n4:03 AM: cries\n4:10 AM: Starts writing sleepy bug report\nIn short, there needs to be another way of accessing the pfctl information needed without a password. It shouldn't be terribly hard to write a quickfix for this project, but a long term fix would be good! :D", "issue_status": "Closed", "issue_reporting_time": "2014-05-03T09:20:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1683": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/267", "issue_id": "#267", "issue_summary": "AttributeError: DummyReply instance has no attribute 'q'", "issue_description": "mlandauer commented on 25 Apr 2014\nI'm seeing the following traceback occasionally on running mitmdump:\nError in processing of request from 172.17.0.5:49138\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 376, in request_thread\n    self.handle_connection(request, client_address)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 549, in handle_connection\n    h.handle()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 196, in handle\n    while self.handle_request(cc) and not cc.close:\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 268, in handle_request\n    response_reply = self.channel.ask(\"response\", response)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py\", line 52, in ask\n    g = m.reply.q.get(timeout=0.5)\nAttributeError: DummyReply instance has no attribute 'q'\nThis is running on Ubuntu 12.04 with the following options\nmitmdump -q -T -a -s mitmproxy/log_to_morph.py --confdir mitmproxy\nFor completeness log_to_morph.py logs each http/https request to a local rest service and is like this:\nimport urllib\nimport os\nfrom libmproxy.script import concurrent\n\n@concurrent\ndef response(context, flow):\n  url = os.environ['MORPH_URL'] + \"/connection_logs\"\n  params = urllib.urlencode({\n    'ip_address': flow.request.client_conn.address[0],\n    'method': flow.request.method,\n    'scheme': flow.request.scheme,\n    'host': flow.request.headers[\"Host\"][0],\n    'path': flow.request.path,\n    'request_size': len(flow.request.content),\n    'response_size': len(flow.response.content),\n    'key': os.environ['MITMPROXY_SECRET']\n  })\n  try:\n    s = urllib.urlopen(url, params)\n    s.close()\n  # If we can't contact the morph server still handle this request.\n  # If we let this exception pass up the chain the request would get dropped\n  except IOError, e:\n    print \"Error contacting Morph server:\", e", "issue_status": "Closed", "issue_reporting_time": "2014-04-25T02:01:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1684": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/266", "issue_id": "#266", "issue_summary": "Add dedicated log message if we suspect cert pinning.", "issue_description": "Member\nmhils commented on 19 Apr 2014\nAs the title says, this is currently a nice source of confusion for users.\nrefs #263", "issue_status": "Closed", "issue_reporting_time": "2014-04-18T20:49:52Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1685": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/265", "issue_id": "#265", "issue_summary": "https bug", "issue_description": "pavellasta commented on 18 Apr 2014\nHi guys,\nI'm getting this while trying to intercept https URL's.\nTraceback (most recent call last):\nFile \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 376, in request_thread\nself.handle_connection(request, client_address)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 549, in handle_connection\nh.handle()\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 196, in handle\nwhile self.handle_request(cc) and not cc.close:\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 212, in handle_request\nrequest = self.read_request(cc)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 359, in read_request\nreturn self.read_request_proxy(client_conn)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 390, in read_request_proxy\nreturn self._read_request_origin_form(client_conn, \"https\", host, port)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 451, in _read_request_origin_form\nself.establish_ssl(client_conn, host, port)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 334, in establish_ssl\ndummycert = self.find_cert(client_conn, host, port, host)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 324, in find_cert\nconn = self.get_server_connection(cc, \"https\", host, port, sni)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 182, in get_server_connection\nself.server_conn.connect()\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 59, in connect\nself.convert_to_ssl(cert=clientcert, sni=self.sni)\nFile \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 203, in convert_to_ssl\nself.connection.set_tlsext_host_name(sni)\nAttributeError: '_socketobject' object has no attribute 'set_tlsext_host_name'", "issue_status": "Closed", "issue_reporting_time": "2014-04-18T17:04:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1686": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/264", "issue_id": "#264", "issue_summary": "Unable to connect with https", "issue_description": "ghost commented on 18 Apr 2014\nI've been struggling with mitmproxy over the past few hours when trying to proxy https traffic. I've tried a number of different browsers - curl, wget, Chrome on Windows 7, and Firefox on OSX 10.9. I've also tried with and without the CA certificate imported. When I initially tried I would just timeout and nothing much interesting would happen from the browser side -- it would just sit and the event log would repeat:\n10.181.70.65:49956: 400: SSL handshake error: [('SSL routines', 'SSL23_GET_CLIENT_HELLO', 'http request')]\n10.181.70.65:49956: disconnect\n-> handled 0 requests\nWhen going to https://mitm.it I would get a certificate error:\nThe certificate that Chrome received during this connection attempt is not formatted correctly, so Chrome cannot use it to protect your information.\nError type: Malformed certificate\nSubject: mitm.it\nIssuer: mitmproxy\nI figured maybe the certificates aren't being generated correctly so I generated my own certificates. Now I am able to get to https://mitm.it with the expected certificate warnings.. however it still doesn't work. Event log messages:\n10.181.70.65:51613: 400: SSL handshake error: [('SSL routines', 'SSL23_GET_CLIENT_HELLO', 'http request')]\n10.181.70.65:51613: disconnect\n\n10.181.70.65:51823: 400: SSL handshake error: (-1, 'Unexpected EOF')\nOn the client I get this - Error code: ERR_TIMED_OUT\nVersions -\npyOpenSSL: Installed version (0.14) is most up-to-date\ncryptography: Installed version (0.3) is most up-to-date", "issue_status": "Closed", "issue_reporting_time": "2014-04-17T19:40:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1687": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/263", "issue_id": "#263", "issue_summary": "400: SSL Handshake error", "issue_description": "BradStevenson commented on 17 Apr 2014\nUsing mitmproxy 0.10.1, unable to intercept most https traffic (some comes through still).\nBeing run on Ubuntu 13.10\nEvent log shows\n400: SSL handshake error:\ndisconnect\n-> handled 0 requests\nSSL certs are being installed via the web interface and same issue is arising trying to intercept iOS (7.1) and Android traffic.\npip install mitmproxy -U showing all packages as updated.\nHere we can see some traffic is coming through and the errors in the event log:\nPOST https://data.flurry.com/aas.do\n\u2190 200 application/octet-stream [no content] 42.36kB/s\nPOST https://dub403-m.hotmail.com/Microsoft-Server-ActiveSync?User=test@outlook.com&DeviceId=ApplC39JCZ57DTWG&DeviceType=iPhone&Cmd=Ping\nPOST https://data.flurry.com/aas.do\n\u2190 200 application/octet-stream [no content] 36.93kB/s\nGET https://userstream.twitter.com/1.1/user.json\nPOST https://p02-keyvalueservice.icloud.com/sync\n\u2190 200 400B 95.65kB/s\nEvent log\n192.168.0.13:54876: disconnect\n-> handled 0 requests\n192.168.0.13:54877: connect\n192.168.0.13:54877: 400: SSL handshake error:\n192.168.0.13:54877: disconnect\n-> handled 0 requests\n192.168.0.13:54878: connect\n192.168.0.13:54878: 400: SSL handshake error:\n192.168.0.13:54878: disconnect\n-> handled 0 requests\n192.168.0.13:54879: connect\n192.168.0.13:54879: 400: SSL handshake error:\n192.168.0.13:54879: disconnect\n-> handled 0 requests\n192.168.0.13:54880: connect\n192.168.0.13:54881: connect\n192.168.0.13:54881: 400: SSL handshake error:\n192.168.0.13:54881: disconnect\n-> handled 0 requests\n192.168.0.13:54882: connect\n192.168.0.13:54883: connect\n192.168.0.13:54884: connect\n192.168.0.13:54882: disconnect\n-> handled 1 requests\n192.168.0.13:54884: disconnect\n-> handled 1 requests\n192.168.0.13:54885: connect\nLet me know what other info i can supply to help debug the issue.", "issue_status": "Closed", "issue_reporting_time": "2014-04-17T13:38:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1688": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/262", "issue_id": "#262", "issue_summary": "I get empty responses on some HTTPS urls", "issue_description": "vohof commented on 15 Apr 2014\n124.x.xxx.xx POST https://www.namecheap.com/myaccount/login.aspx\n << 302 Found 169B\n124.x.xxx.xx GET https://6-p-06-ash2.channel.facebook.com/pull?channel=p_1029248582&seq=13&partition=-2&clientid=3b414a98&cb=f4j&idle=-1&cap=0\n << 200  36B\n124.x.xxx.xx GET https://manage.www.namecheap.com/myaccount/index.asp\n <<\n124.x.xxx.xx GET http://www.namecheap.com/\n << 301 Moved Permanently 149B\n124.x.xxx.xx GET https://www.namecheap.com/\n << 200 OK 64.05kB\n124.x.xxx.xx POST https://clients4.google.com/chrome-sync/command/?client=Google+Chrome&client_id=5aPXGKI4tNvI19BdeTl%2Byw%3D%3D\n << 200 OK 4.28kB\n124.x.xxx.xx POST https://clients4.google.com/chrome-sync/command/?client=Google+Chrome&client_id=5aPXGKI4tNvI19BdeTl%2Byw%3D%3D\n << 200 OK 351B\n124.x.xxx.xx GET https://manage.www.namecheap.com/myaccount/index.asp\n <<\n124.x.xxx.xx GET https://www.namecheap.com/\n << 200 OK 64.05kB\n124.x.xxx.xx GET https://manage.www.namecheap.com/myaccount/index.asp\n <<\n124.x.xxx.xx GET https://manage.www.namecheap.com/myaccount/index.asp\n <<\n124.x.xxx.xx POST https://clients4.google.com/chrome-sync/command/?client=Google+Chrome&client_id=5aPXGKI4tNvI19BdeTl%2Byw%3D%3D\n << 200 OK 4.28kB\n124.x.xxx.xx GET https://manage.www.namecheap.com/myaccount/index.asp\n <<\n124.x.xxx.xx POST https://clients4.google.com/chrome-sync/command/?client=Google+Chrome&client_id=5aPXGKI4tNvI19BdeTl%2Byw%3D%3D\n << 200 OK 351B\n124.x.xxx.xx GET https://www.namecheap.com/\n << 200 OK 64.05kB\n124.x.xxx.xx POST https://clients4.google.com/chrome-sync/command/?client=Google+Chrome&client_id=5aPXGKI4tNvI19BdeTl%2Byw%3D%3D\n << 200 OK 351B\n124.x.xxx.xx POST https://clients4.google.com/chrome-sync/command/?client=Google+Chrome&client_id=5aPXGKI4tNvI19BdeTl%2Byw%3D%3D\n << 200 OK 4.28kB\n124.x.xxx.xx GET https://manage.www.namecheap.com/myaccount/index.asp\n <<\nIt only displays a << without the status code and bytes thingy. I'm using mitmpdump with the following command:\n /usr/local/bin/mitmdump -p 6456 -s modify_headers.py -a --confdir=/home/mitmp/ mitmproxy\nWith the following modify_headers.py:\nimport re\n\ndef response(context, flow):\n  flow.response.headers[\"X-Powered-By\"] = [\"Cyrus David\"]\n  matchObj = re.match( r'.*\\.(js|css|bmp|gif|ico|jpeg|jpg|png)(\\?.*)?$', flow.request.path, re.M|re.I)\n  if matchObj:\n    flow.response.headers[\"Cache-Control\"] = [\"public, max-age=21600, must-revalidate, no-transform\"]\n    flow.response.headers[\"Last-Modified\"] = [\"Sat, 18 Jan 2014 12:05:46 GMT\"]\n    flow.response.headers[\"Expires\"] = [\"Wed, 18 Jun 2014 12:05:46 GMT\"]\n    flow.response.headers[\"X-Cyrus-Cache\"] = [\"HIT\"]\n  else:\n    flow.response.headers[\"X-Cyrus-Cache\"] = [\"MISS\"]\n\ndef request(context,flow):\n  flow.request.headers[\"X-Requested-For\"] = [\"Cyrus David\"]\nI have installed the cert into my browser.", "issue_status": "Closed", "issue_reporting_time": "2014-04-14T23:21:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1689": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/261", "issue_id": "#261", "issue_summary": "Installed mitmproxy OSX but cannot locate .mitproxy directory", "issue_description": "jac300 commented on 4 Apr 2014\nI was able to successfully install mitproxy (confirmed by doing a 'pip list') but when I try to\ninstall the mitmproxy certificate authority in the IOS simulator using the command:\n./iosCertTrustManager.py -a ~/.mitmproxy/mitmproxy-ca-cert.pem\nI get an no such file or directory error for .mitmproxy/mitmproxy-ca-cert.pem. I tried to just find the directory by doing cd ~/.mitmproxy/mitmproxy-ca-cert.pem, and even cd ~/.mitmproxy but again I get no such file or directory.\nIt's possible I am making a very simple mistake (I am a bit of a newbie) but I don't understand why I can't find the directory if the installation was successful. Any help would be appreciated. Thanks!", "issue_status": "Closed", "issue_reporting_time": "2014-04-03T18:55:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1690": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/260", "issue_id": "#260", "issue_summary": "Searching for an empty string crashes mitmproxy", "issue_description": "staii commented on 3 Apr 2014\nRunning version 0.10. To recreate:\nrun mitmproxy.\nintercept any request.\npress enter to view the flow.\npress tab to change to the response tab.\npress / to start a search.\npress enter without typing in anything.\nThe traceback:\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 65, in <module>\n    m.run()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 594, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/raw_display.py\", line 268, in run_wrapper\n    return fn()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 812, in loop\n    self.prompt_execute()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 742, in prompt_execute\n    msg = p(txt, *args)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 304, in search\n    body, focus_position = self.search_highlight_text(body, search_string)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/flowview.py\", line 361, in search_highlight_text\n    find_index = text.find(search_string, start_index)\nTypeError: expected a character buffer object", "issue_status": "Closed", "issue_reporting_time": "2014-04-03T17:18:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1691": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/258", "issue_id": "#258", "issue_summary": "Improve docs for proxy modes", "issue_description": "Member\nmhils commented on 1 Apr 2014\nMake clear what the difference between regular proxy, transparent proxy, and upstream proxy is. This seems to confuse quite a few users\nrefs #257\nrefs #255", "issue_status": "Closed", "issue_reporting_time": "2014-03-31T21:55:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1692": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/257", "issue_id": "#257", "issue_summary": "mitmproxy not able to receive connections from Android on OS X", "issue_description": "RaghavSood commented on 1 Apr 2014\nI'm on OS X 10.8 and Android 4.4.2.\nI've used mitmproxy previously with success, but when I altered my Android's settings today I get:\n10.0.1.17:60366: connect 10.0.1.17:60366: 502: Transparent mode failure: could not resolve original destination. 10.0.1.17:60366: disconnect -> handled 0 requests\nIn the even log for mitmproxy on my mac, instead of seeing intercepted requests.\nI'm on the latest version of mitmproxy too.\nThe certificate from ~/.mitmproxy is installed on the Android device\nAny clues on how to fix this?", "issue_status": "Closed", "issue_reporting_time": "2014-03-31T21:36:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1693": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/256", "issue_id": "#256", "issue_summary": "upstream proxy does not work for https requests", "issue_description": "databus23 commented on 31 Mar 2014\nWhen I'm running\nmitmproxy -F http://mycompany.proxy:8080\nit correctly forwards http traffic to the specified upstream proxy but fails for https traffic. It seems the upstream proxy is ignored/skipped for https requests.\nWhen running curl https://www.google.de I can see in the mitmproxy eventlog:\n502: Error connecting to \"www.google.de\": [Errno 8] nodename nor servname provided, or not known\nIn my network I can't resolve external domain names but access them via the upstream proxy so the error indicates that the upstream proxy is not used for https requests.\nI'm running version 0.10.1.", "issue_status": "Closed", "issue_reporting_time": "2014-03-31T15:56:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1694": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/255", "issue_id": "#255", "issue_summary": "Improve docs for transparent proxying", "issue_description": "Member\nmhils commented on 31 Mar 2014\nWe should provide better guidance on the various ways to setup transparent proxying. Most notably, we should make the distinction between\ninternet <---> proxy <---> proxied network\nand\ninternet <---> proxy  \n           |\n           V\n    proxied device \n(proxy as custom gateway)\nclear. The latter is simpler to set up but - allowing to bypass the proxy - obviously dangerous in some contexts. When we're at it, we should add a prominent warning that Linux sends ICMP redirects by default if the machines are on the same network.", "issue_status": "Closed", "issue_reporting_time": "2014-03-31T11:04:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1695": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/254", "issue_id": "#254", "issue_summary": "Incorrect flag in docs", "issue_description": "Member\ncortesi commented on 31 Mar 2014\nHi Aldo,\nI saw the mitmproxy doc for the reverse proxy mode references the -P option istead of the -R option:\nhttp://mitmproxy.org/doc/features/reverseproxy.html\nI thought you would like to fix it.\nCheers,", "issue_status": "Closed", "issue_reporting_time": "2014-03-30T22:40:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1696": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/253", "issue_id": "#253", "issue_summary": "Update examples scripts to reflect refactoring changes", "issue_description": "Member\nmhils commented on 28 Mar 2014\nEventually, we should add basic tests for them.", "issue_status": "Closed", "issue_reporting_time": "2014-03-28T15:28:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1697": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/251", "issue_id": "#251", "issue_summary": "OCSP websites do not work with cert-forwarding", "issue_description": "yoavfrancis commented on 25 Mar 2014\nWhen attempting to access websites that present a certificate that requires an OCSP check (such as Cloudflare.com) - while using the --cert-forward option - mitmproxy fails to connect successfully to that website.", "issue_status": "Closed", "issue_reporting_time": "2014-03-25T14:55:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1698": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/250", "issue_id": "#250", "issue_summary": "mitmproxy not working with https", "issue_description": "escalanterj commented on 21 Mar 2014\nHello all,\nI've been already one week and I cannot ge it it to work. mitmproxy works well with http but not https. can somebody help me? do you also know where is the error log? it shows them too fast.\nthanks!!\nregards", "issue_status": "Closed", "issue_reporting_time": "2014-03-21T10:55:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1699": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/249", "issue_id": "#249", "issue_summary": "'module' object has no attribute 'OP_NO_TICKET'", "issue_description": "dsultanr commented on 20 Mar 2014\nHello folks\ntried to revive my old project, but after mitmproxy upgraid it fails to start\nTraceback (most recent call last):\nFile \"rzd\", line 17, in\nfrom libmproxy import proxy, flow\nFile \"/opt/python2.7.1/lib/python2.7/site-packages/libmproxy/proxy.py\", line 4, in\nfrom netlib import tcp, http, certutils, http_status, http_auth\nFile \"/opt/python2.7.1/lib/python2.7/site-packages/netlib/tcp.py\", line 25, in\nOP_NO_TICKET = SSL.OP_NO_TICKET\nAttributeError: 'module' object has no attribute 'OP_NO_TICKET'\n$ pip freeze\nFlask==0.10.1\nJinja2==2.7.2\nMarkupSafe==0.19\nPillow==2.3.1\nWerkzeug==0.9.4\nitsdangerous==0.23\nlxml==3.3.3\nmitmproxy==0.10.1\nnetlib==0.10\npyOpenSSL==0.13\npyasn1==0.1.7\nurwid==1.2.0\nvirtualenv==1.11.4\nwsgiref==0.1.2\nwhat it could be?", "issue_status": "Closed", "issue_reporting_time": "2014-03-20T12:53:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1700": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/248", "issue_id": "#248", "issue_summary": "`requests` dependency is missing in setup.py", "issue_description": "Member\nmhils commented on 19 Mar 2014\nrequests dependency is missing in setup.py", "issue_status": "Closed", "issue_reporting_time": "2014-03-19T14:46:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1701": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/247", "issue_id": "#247", "issue_summary": "Running latest mitmproxy - No module named config", "issue_description": "maartenhh commented on 19 Mar 2014\nI'm having problems getting the latest mitmproxy working\nI cloned the most recent mitmproxy en netlib sources and installed them using pip. No errors there. However, once I run mitmproxy, I get the following proxy config error:\nFile \"/usr/local/bin/mitmdump\", line 4, in\nfrom libmproxy.proxy.config import process_proxy_options\nImportError: No module named config\nCan't figure out what I am doing wrong. Has anyone experienced the samen or (better yet) have a suggestion for me on how to solve this?\nI rescued an old ipad2 from being updated to 7.1 and would love to see --cert-forward in action ;-)\npip2.7 install netlib/\nUnpacking ./netlib\nRunning setup.py (path:/tmp/pip-Qo11mR-build/setup.py) egg_info for package from file:///audit/tools/netlib\nwarning: no previously-included files matching '*.swo' found under directory 'test'\nwarning: no previously-included files matching '*.swp' found under directory 'test'\nwarning: no previously-included files matching '*.pyc' found under directory 'test'\nRequirement already satisfied (use --upgrade to upgrade): pyasn1>0.1.2 in /usr/local/lib/python2.7/dist-packages (from netlib==0.11)\nRequirement already satisfied (use --upgrade to upgrade): pyopenssl>=0.14 in /usr/local/lib/python2.7/dist-packages (from netlib==0.11)\nRequirement already satisfied (use --upgrade to upgrade): cryptography>=0.2.1 in /usr/local/lib/python2.7/dist-packages (from pyopenssl>=0.14->netlib==0.11)\nRequirement already satisfied (use --upgrade to upgrade): six>=1.5.2 in /usr/local/lib/python2.7/dist-packages (from pyopenssl>=0.14->netlib==0.11)\nRequirement already satisfied (use --upgrade to upgrade): cffi>=0.8 in /usr/local/lib/python2.7/dist-packages (from cryptography>=0.2.1->pyopenssl>=0.14->netlib==0.11)\nRequirement already satisfied (use --upgrade to upgrade): pycparser in /usr/local/lib/python2.7/dist-packages (from cffi>=0.8->cryptography>=0.2.1->pyopenssl>=0.14->netlib==0.11)\nInstalling collected packages: netlib\nFound existing installation: netlib 0.9.1\nCan't uninstall 'netlib'. No files were found to uninstall.\nRunning setup.py install for netlib\nwarning: no previously-included files matching '*.swo' found under directory 'test'\nwarning: no previously-included files matching '*.swp' found under directory 'test'\nwarning: no previously-included files matching '*.pyc' found under directory 'test'\nSuccessfully installed netlib\nCleaning up...\nroot@SYS:/audit/tools# pip2.7 install mitmproxy/\nUnpacking ./mitmproxy\nRunning setup.py (path:/tmp/pip-snemXV-build/setup.py) egg_info for package from file:///audit/tools/mitmproxy\nwarning: no previously-included files found matching 'README.mkd'\nwarning: no files found matching '*' under directory 'doc'\nwarning: no files found matching '*' under directory 'libmproxy/resources'\nwarning: no previously-included files matching '*.swo' found under directory 'test'\nwarning: no previously-included files matching '*.swp' found under directory 'test'\nwarning: no previously-included files matching '*.pyc' found under directory 'test'\nRequirement already satisfied (use --upgrade to upgrade): netlib>=0 in /usr/lib/python2.7/dist-packages (from mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): urwid>=1.1 in /usr/local/lib/python2.7/dist-packages (from mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): pyasn1>0.1.2 in /usr/local/lib/python2.7/dist-packages (from mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): pyopenssl>=0.14 in /usr/local/lib/python2.7/dist-packages (from mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): Pillow>=2.3.0 in /usr/local/lib/python2.7/dist-packages (from mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): lxml in /usr/local/lib/python2.7/dist-packages (from mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): flask in /usr/local/lib/python2.7/dist-packages/Flask-0.10.1-py2.7.egg (from mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): cryptography>=0.2.1 in /usr/local/lib/python2.7/dist-packages (from pyopenssl>=0.14->mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): six>=1.5.2 in /usr/local/lib/python2.7/dist-packages (from pyopenssl>=0.14->mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): Werkzeug>=0.7 in /usr/local/lib/python2.7/dist-packages/Werkzeug-0.9.4-py2.7.egg (from flask->mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): Jinja2>=2.4 in /usr/local/lib/python2.7/dist-packages/Jinja2-2.7.2-py2.7.egg (from flask->mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): itsdangerous>=0.21 in /usr/local/lib/python2.7/dist-packages/itsdangerous-0.23-py2.7.egg (from flask->mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): cffi>=0.8 in /usr/local/lib/python2.7/dist-packages (from cryptography>=0.2.1->pyopenssl>=0.14->mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): markupsafe in /usr/local/lib/python2.7/dist-packages/MarkupSafe-0.19-py2.7.egg (from Jinja2>=2.4->flask->mitmproxy==0.11)\nRequirement already satisfied (use --upgrade to upgrade): pycparser in /usr/local/lib/python2.7/dist-packages (from cffi>=0.8->cryptography>=0.2.1->pyopenssl>=0.14->mitmproxy==0.11)\nInstalling collected packages: mitmproxy\nFound existing installation: mitmproxy 0.10\nCan't uninstall 'mitmproxy'. No files were found to uninstall.\nRunning setup.py install for mitmproxy\nchanging mode of build/scripts-2.7/mitmproxy from 644 to 755\nchanging mode of build/scripts-2.7/mitmdump from 644 to 755\nwarning: no previously-included files found matching 'README.mkd'\nwarning: no files found matching '*' under directory 'doc'\nwarning: no files found matching '*' under directory 'libmproxy/resources'\nwarning: no previously-included files matching '*.swo' found under directory 'test'\nwarning: no previously-included files matching '*.swp' found under directory 'test'\nwarning: no previously-included files matching '*.pyc' found under directory 'test'\nchanging mode of /usr/local/bin/mitmdump to 755\nchanging mode of /usr/local/bin/mitmproxy to 755\nSuccessfully installed mitmproxy\nCleaning up...\nroot@SYS:/audit/tools# https://github.com/mitmproxy/netlib.git^C\nroot@SYS:/audit/tools# /usr/local/bin/mitmdump\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmdump\", line 4, in\nfrom libmproxy.proxy.config import process_proxy_options\nImportError: No module named config", "issue_status": "Closed", "issue_reporting_time": "2014-03-19T12:46:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1702": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/246", "issue_id": "#246", "issue_summary": "Retrying failed upstream proxy request through different proxy", "issue_description": "stoarca commented on 19 Mar 2014\nHi there,\nI'm working on a proxy rotation service on top of libmproxy. There's two major things I'd like to be able to do:\nDetect when a failure happens. For example, an error code returned from the server, or the proxy is down. How would I set a timeout on the request? If I currently try to forward to a non-existing proxy, libmproxy sits there for a few minutes before stopping.\nWhen a failure happens, retry the same request through a different upstream proxy. Note that I am currently setting the upstream proxy auth headers in Master's handle_request(), yet choosing the upstream server in get_upstream_server(). I would need to know about the selected upstream server in handle_request() in order to fill out the right auth details. How would I retry a request through a different proxy? I'm not even sure where to look for this one.\nAny help would be greatly appreciated.", "issue_status": "Closed", "issue_reporting_time": "2014-03-18T21:00:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1703": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/245", "issue_id": "#245", "issue_summary": "Attempting proxy rotation - ProxyServer reuses connection", "issue_description": "stoarca commented on 19 Mar 2014\nHi there,\nI'm attempting to build a proxy rotation service on top of libmproxy. I have the following function\ndef get_upstream_server(conn):\n    proxyDef = proxylist.proxyChooser.getProxy()\n    print('get upstream server ' + proxyDef.ip)\n    return [False, False, proxyDef.ip, proxyDef.port]\nwhich I pass into the ProxyConfig constructor. The getProxy() call returns a proxy of my choosing. I'd like each request to be made through the proxy that is returned by getProxy() (usually a different proxy). However, establish_server_connection in libmproxy/proxy/server.py reuses an existing connection if possible, so sometimes several requests are sent through the same upstream proxy. Can somebody point me in the right direction for where the appropriate place is to disable the connection reuse? Or is there something else that will help me achieve what I want?", "issue_status": "Closed", "issue_reporting_time": "2014-03-18T20:28:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1704": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/244", "issue_id": "#244", "issue_summary": "(Question) Saving entire packets / Reading saved flows", "issue_description": "yoavfrancis commented on 18 Mar 2014\nHi,\nI was wondering if there's a way to save entire decrypted packets (eg. to a pcap file) so I can later open it with Wireshark. If using the \"-w\" parameter - in what format are the flows exactly saved in? (I'd assume that it's purely the HTTP header and content and not other layers)\nMainly I'd like mitmproxy to save an entire decrypted client-server session to a file that I can later open with Wireshark.\nAny advice?\nThanks,\nYoav", "issue_status": "Closed", "issue_reporting_time": "2014-03-18T17:27:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1705": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/243", "issue_id": "#243", "issue_summary": "Forward to proxy that requires authorization.", "issue_description": "stoarca commented on 18 Mar 2014\nHi there,\nI'm trying to use libmproxy to create a proxy (call it A) that forwards to another proxy (B). B requires authorization and is not under my control. Is there a way to specify a Proxy-Authorization header when forwarding?", "issue_status": "Closed", "issue_reporting_time": "2014-03-18T15:54:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1706": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/242", "issue_id": "#242", "issue_summary": "Error in handle_sni", "issue_description": "yoavfrancis commented on 18 Mar 2014\nFirstly, I'm running mitmproxy in cert-forward mode + transparent proxy mode.\nWhen I attempt to connect to some specific websites - such as outlook.com - I get only parts of the page loaded and other strange quirks. Upon further investigation of the wireshark sniff, I can see that the client receives only the last leaf in the certificate chain (instead of the entire certificate chain).\nI attempted to look futher and debug mitmproxy to figure out why this happens. I saw quite a few errors being thrown in the \"handle_sni\" method (in server.py):\nnew_context.use_privatekey_file(key) throws an exception that \"keyfile must be a byte string\" (key is of type OpenSSL.crypto.PKey).\nI tried fixing the call to be new_context.use_privatekey and this line worked correctly.\nHowever, the line right after that, that calls to new_context.use_certificate(cert.X509) also throws an exception, since X509 is not an attribute of netlib.certutils.SSLCert\nit should be x509 instead (lowercase)\nSo I fixed that as well and now no exception is being thrown in handle_sni. However, the SSL handshake fails with error :\n**SSL handshake error: [('SSL routines', 'SSL3_GET_RECORD', 'decryption failed or bad record mac')] ** in the handle method of server.py (thrown from the call to self.establish_ssl(client=client_ssl, server=server_ssl))\nTo sum up - I believe there is some bug in regards to the way SNI connection is being handled (at least in cases of certificate forwarding). Perhaps I'm mistaken so I'd happy to get your feedback on that matter.\nEdit - Apparently if I do leave these fixes in place - it breaks other stuff that previously had worked (eg. Gmail app) - Wireshark reports \"Bad Record Mac\" SSL Alert packet. This packet is sent from the remote server after the client sends a \"Client Key Exchange\" packet to the mitm, followed by \"Change cipher spec\" and an \"Encrypted handshake message\". I can attach a screenshot if necessary.", "issue_status": "Closed", "issue_reporting_time": "2014-03-18T15:40:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1707": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/241", "issue_id": "#241", "issue_summary": "Long URLs prevent \"going back\" to flow list", "issue_description": "yoavfrancis commented on 18 Mar 2014\nHi,\nI was running mitmproxy and ran into a very long \"GET\" line (Facebook causes that quite often). When I pressed \"Enter\" to view the flow, I was unable to \"Go back\" to the flow list by pressing \"q\". Instead - I was displayed with the \"Quit?\" Dialog and had to restart mitmproxy.\nHere is an example (I removed some of the data in the GET request)\nThanks!\nYoav", "issue_status": "Closed", "issue_reporting_time": "2014-03-18T09:10:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1708": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/240", "issue_id": "#240", "issue_summary": "Link to pathod outdated", "issue_description": "Victory commented on 18 Mar 2014\nthe pathod link in the readme.md doesn't lead to any documentation.", "issue_status": "Closed", "issue_reporting_time": "2014-03-17T22:07:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1709": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/237", "issue_id": "#237", "issue_summary": "is there any command to clear history", "issue_description": "hihell commented on 12 Mar 2014\nIn console I need a command to clean package history, is there any command do this job? if not would you kindly add this feature?\nMany Thanks", "issue_status": "Closed", "issue_reporting_time": "2014-03-12T08:28:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1710": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/236", "issue_id": "#236", "issue_summary": "Cannot force use of TLS1.1/1.0", "issue_description": "yoavfrancis commented on 12 Mar 2014\nHi,\nIn my attempt to cause the client connection to use TLS version < 1.2 (in order to successfully exploit the new iOS SSL vulnerability), I tried changing the method flag in self.client_conn.convert_to_ssl in server.py to be TLSv1_METHOD but it failed to work - the SSL handshake with the client does not occur at all when I put this flag. (The mitm server recieves a \"client hello\" from the client, opens a connection to the remote server and does not answer the client at all (no \"server hello\" or any other message is sent)\nI did not see any mentioning of enforcing TLS < 1.2 for client connections in the latest commit - it is needed in order to exploit the new iOS SSL vulnerability (it is required to do so in order to exploit it successfully) - so perhaps I'm missing something out.\nThe clients I tasted this with were iOS clients with iOS < 7.0.6.", "issue_status": "Closed", "issue_reporting_time": "2014-03-11T20:39:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1711": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/235", "issue_id": "#235", "issue_summary": "Cipher suite selection - \"no shared cipher\" error", "issue_description": "yoavfrancis commented on 11 Mar 2014\nHi,\nWhen attempting to run mitmproxy with a DH cipher suite and the \"-e\" parameter, I'm getting the following error:\nerror: 502: SSL handshake error: [('SSL routines','SSL3_GET_CLIENT_HELLO', 'no shared cipher')]\nWhen I tried setting \"ALL\" - it did work successfully.\nDoes anyone have an idea of what can be the problem? I attempted many clients/other variations of DH but it failed to work.", "issue_status": "Closed", "issue_reporting_time": "2014-03-11T11:34:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1712": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/229", "issue_id": "#229", "issue_summary": "No Google Play", "issue_description": "bodson commented on 3 Mar 2014\nHi,\nThis may be a simple issue, but I'm new to certificates and etc, so got a little confused. Let me explain...\nI've setup mitmproxy for capturing android traffic. Everything ok..but...can't connect to play store (no connection). If I try to access mail.google.com from the android browser, it complains about the certificate but eventually loads.\nThis is what I see from mitmproxy event log:\n192.168.3.100:33796: connect\n192.168.3.100:33796: transparent to 74.125.139.95:443\n192.168.3.100:33796: disconnect\nFiring up wireshark, I see the SSL handshake, up to the encrypt alert from server, than, the client resets the connection.\nSo...installed in mitmproxy cert in the Android (2.3.3) test subject, and everything worked.\nMy question. I'm dealing with certificate pinning here , or is it another issue ? My big problem is that my goal is to test another app that uses https for flaws, and I can't ask the user to install a certificate! I has to be in a mitm way...So, is it possible to bypass this ?\nRegards", "issue_status": "Closed", "issue_reporting_time": "2014-03-03T11:50:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1713": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/228", "issue_id": "#228", "issue_summary": "\"Error connecting to user@domain.tld\" with HTTP Basic Auth", "issue_description": "timmc commented on 3 Mar 2014\nI'm getting odd behavior trying to proxy my feed reader (liferea) for debugging. I have some HTTP Basic Auth RSS feeds from Livejournal which look like http://users.livejournal.com/davis-square/data/rss?auth=digest. Wireshark shows an unauthenticated request followed by a 401 response, then liferea re-requesting with Basic Auth and a 200 response. If I instead use mitmproxy, mitmproxy only shows a single request/response:\n\u2190 502: Error connecting to \"bob@users.livejournal.com\":\n[Errno -5] No address associated with hostname\n(Edit: Non-substantive change to make examples consistent with each other.)", "issue_status": "Closed", "issue_reporting_time": "2014-03-03T00:00:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1714": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/227", "issue_id": "#227", "issue_summary": "AttributeError: 'module' object has no attribute 'Address'", "issue_description": "andresriancho commented on 28 Feb 2014\nfo@ba:/tmp/mitmproxy$ mitmproxy \nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 3, in <module>\n    from libmproxy import proxy, console, cmdline\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 111, in <module>\n    class ServerConnection(tcp.TCPClient, stateobject.SimpleStateObject):\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 128, in ServerConnection\n    address=tcp.Address,\nAttributeError: 'module' object has no attribute 'Address'\nfo@ba:/tmp/mitmproxy$ pip freeze | grep netlib\nnetlib==0.10\nfo@ba:/tmp/mitmproxy$", "issue_status": "Closed", "issue_reporting_time": "2014-02-27T20:38:47Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1715": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/226", "issue_id": "#226", "issue_summary": "AttributeError: HandleSNI instance has no attribute '__name__'", "issue_description": "Member\nmhils commented on 26 Feb 2014\ntaken from #222\n@machduck:\nHello!\nCan confirm - https requests are not going through.\nBrowser says the connection was reset.\nThe mitmproxy event log and libmproxy standalone give the following stacktrace[s]:\n----------------------------------------\nError in processing of request from 127.0.0.1:38722\nTraceback (most recent call last):\n  File \"/home/[redacted]/venv/local/lib/python2.7/site-packages/netlib/tcp.py\", line 376, in request_thread\n    self.handle_connection(request, client_address)\n  File \"/home/[redacted]/venv/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 545, in handle_connection\n    h.handle()\n  File \"/home/[redacted]/venv/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 192, in handle\n    while self.handle_request(cc) and not cc.close:\n  File \"/home/[redacted]/venv/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 208, in handle_request\n    request = self.read_request(cc)\n  File \"/home/[redacted]/venv/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 355, in read_request\n    return self.read_request_proxy(client_conn)\n  File \"/home/[redacted]/venv/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 386, in read_request_proxy\n    return self._read_request_origin_form(client_conn, \"https\", host, port)\n  File \"/home/[redacted]/venv/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 447, in _read_request_origin_form\n    self.establish_ssl(client_conn, host, port)\n  File \"/home/[redacted]/venv/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 335, in establish_ssl\n    self.convert_to_ssl(dummycert, self.config.certfile or self.config.cacert, handle_sni=sni)\n  File \"/home/[redacted]/venv/local/lib/python2.7/site-packages/netlib/tcp.py\", line 302, in convert_to_ssl\n    ctx.set_tlsext_servername_callback(handle_sni)\n  File \"/home/[redacted]/venv/local/lib/python2.7/site-packages/OpenSSL/SSL.py\", line 776, in set_tlsext_servername_callback\n    @wraps(callback)\n  File \"/usr/lib/python2.7/functools.py\", line 33, in update_wrapper\n    setattr(wrapper, attr, getattr(wrapped, attr))\nAttributeError: HandleSNI instance has no attribute '__name__'\n----------------------------------------\nAny advice on what to do?\n@alexyakoubian:\nYeah, I have the same problem and my event log looks the same as above. Seems this problem only exists on v0.10 from PyPI (master branch works fine).", "issue_status": "Closed", "issue_reporting_time": "2014-02-26T12:07:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1716": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/225", "issue_id": "#225", "issue_summary": "Issue with website - bug tracker not listed", "issue_description": "rhamnett commented on 24 Feb 2014\nBug tracker section on website details IRC channel, looks like a copy paste problem\nChange text and add link to https://github.com/mitmproxy/mitmproxy/issues", "issue_status": "Closed", "issue_reporting_time": "2014-02-24T00:29:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1717": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/224", "issue_id": "#224", "issue_summary": "Unable to proxy requests to Siri server with iOS7", "issue_description": "rhamnett commented on 24 Feb 2014\nIf you set up a fake DNS record to resolve guzzoni.apple.com to the IP of your mitmproxy and install the mitmproxy ca-cert.pem on your iPhone, you can intercept the traffic being sent to siri server when making a siri request on the handset.\nIf you are running dnsmasq it's as simple as this line in the conf:\naddress=/guzzoni.apple.com/192.168.0.138\nI am running mitmproxy like so:\nsudo ./mitmproxy -p 443 -P https://guzzoni.apple.com:443\nmitmproxy does not seem to complete the request, looks like there are some headers in play that @cortesi seems to suggest mean that siri server would be expecting a single connection to be held open whilst multiple requests ( speech packets I presume) are sent to the siriserver.\nThis is part of a wider goal to fix github project siriproxy ( https://github.com/plamoni/SiriProxy/ ) which also experiences the same issues.\nIf someone could kindly investigate as to why the requests to not fully complete and provide an explanation, there would be many many happy people over on this thread: plamoni/SiriProxy#542\nThanks for your consideration.\nRichard", "issue_status": "Closed", "issue_reporting_time": "2014-02-24T00:25:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1718": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/222", "issue_id": "#222", "issue_summary": "Mitmproxy does not intercept HTTPS requests", "issue_description": "adforcetestuser1 commented on 21 Feb 2014\nPlease, help me configure the mitmproxy so that it displays HTTPS requests\nopenssl genrsa -out cert.key 8192\nopenssl req -new -x509 -key cert.key -out cert.crt\ncat cert.key cert.crt > cert.pem\nmitmproxy --cert=cert.pem -p 3128", "issue_status": "Closed", "issue_reporting_time": "2014-02-21T15:03:46Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1719": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/221", "issue_id": "#221", "issue_summary": "Mitmproxy does not intercept HTTPS requests", "issue_description": "adforcetestuser1 commented on 21 Feb 2014\nPlease, help me configure the mitmproxy so that it displays HTTPS requests", "issue_status": "Closed", "issue_reporting_time": "2014-02-21T13:18:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1720": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/220", "issue_id": "#220", "issue_summary": "pip install /path/to/mitmproxy failed", "issue_description": "hihell commented on 20 Feb 2014\nlog:\nlocalhost:~ xxxxxx$ sudo pip install mitmproxy/\nUnpacking ./mitmproxy\nRunning setup.py (path:/tmp/pip-klsHGA-build/setup.py) egg_info for package from file:///Users/xxxxxx/mitmproxy\nwarning: no previously-included files found matching 'README.mkd'\nwarning: no files found matching '' under directory 'doc'\nwarning: no files found matching '' under directory 'libmproxy/resources'\nwarning: no previously-included files matching '.swo' found under directory 'test'\nwarning: no previously-included files matching '.swp' found under directory 'test'\nwarning: no previously-included files matching '*.pyc' found under directory 'test'\nDownloading/unpacking netlib>=0.11 (from mitmproxy==0.11)\nCould not find a version that satisfies the requirement netlib>=0.11 (from mitmproxy==0.11) (from versions: 0.1, 0.10, 0.2.1, 0.2.2, 0.2, 0.9.1, 0.9.2, 0.9)\nCleaning up...\nNo distributions matching the version for netlib>=0.11 (from mitmproxy==0.11)\nStoring debug log for failure in /Users/jiusi/Library/Logs/pip.log", "issue_status": "Closed", "issue_reporting_time": "2014-02-20T08:46:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1721": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/219", "issue_id": "#219", "issue_summary": "mitmproxy: Error starting proxy server: Address already in use", "issue_description": "adforcetestuser1 commented on 19 Feb 2014\nHi, I encountered a problem\nI\u00b4ve installed the mitmproxy on Ubuntu Server 12.04\nIf i write for example mitmproxy, i get the message\n\"mitmproxy: Error starting proxy server: Address already in use\"\nBut, if i write mitmproxy -p 3128 into the terminal he start\u00b4s the proxy but don\u00b4t track anything.\nPlease, help me", "issue_status": "Closed", "issue_reporting_time": "2014-02-19T08:42:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1722": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/218", "issue_id": "#218", "issue_summary": "crash mitmproxy", "issue_description": "adforcetestuser1 commented on 18 Feb 2014\nI have installed urwid (1.2.0), netlib and mitmproxy\n$ sudo pip install urwid\n$ sudo pip install netlib\n$ sudo pip install mitmproxy\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 3, in\nfrom libmproxy import proxy, console, cmdline\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 5, in\nimport utils, flow, version, platform, controller\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py\", line 11, in\nimport app\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/app.py\", line 1, in\nimport flask\nImportError: No module named flask", "issue_status": "Closed", "issue_reporting_time": "2014-02-18T07:06:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1723": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/217", "issue_id": "#217", "issue_summary": "can I save decoded request/response body?", "issue_description": "hihell commented on 18 Feb 2014\nI usually use mitmproxy to check request/response json, and when the json is really big, I need copy it to other viewer for more convenient operations. But current 'b' save function will only save the original body.\ncan I have a feature that save the unzipped/decoded body to a file, so I can open the file and read them in a more direct way?\nThanks in advance", "issue_status": "Closed", "issue_reporting_time": "2014-02-18T03:40:57Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1724": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/216", "issue_id": "#216", "issue_summary": "Only rely on SNI instead of upstream cert sniffing", "issue_description": "bbirand commented on 18 Feb 2014\nI was reading through the 3 complications you mention on the \"How it works\" page, and the following thought occurred: Can't one just rely on the SNI functionality instead of sniffing upstream certs? It seems that almost all browsers support it, so why not just listen to the SNI field, pass it on to the server, and then re-generate the returned cert (with the CN and SANs)? Wouldn't this save the need for the second connection, and the latency involved in pausing the client-side connection?", "issue_status": "Closed", "issue_reporting_time": "2014-02-18T00:04:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1725": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/215", "issue_id": "#215", "issue_summary": "Check for mentions of flow.Response, ...", "issue_description": "Member\nmhils commented on 17 Feb 2014\nWe need to check whether there are more places where we reference flow.Response / flow.Request etc. AFAIR, I checked for this, but apparently at least this one slipped through.\nTraceback (most recent call last):\n  File \"/media/sf_git/mitmproxy/libmproxy/console/__init__.py\", line 593, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/raw_display.py\", line 242, in run_wrapper\n    return fn()\n  File \"/media/sf_git/mitmproxy/libmproxy/console/__init__.py\", line 812, in loop\n    self.prompt_execute(k)\n  File \"/media/sf_git/mitmproxy/libmproxy/console/__init__.py\", line 744, in prompt_execute\n    msg = p(txt, *args)\n  File \"/media/sf_git/mitmproxy/libmproxy/console/flowview.py\", line 509, in edit\n    self.flow.response = flow.Response(\nAttributeError: 'module' object has no attribute 'Response'", "issue_status": "Closed", "issue_reporting_time": "2014-02-17T18:03:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1726": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/214", "issue_id": "#214", "issue_summary": "chunked-encoding in reverse proxy mode", "issue_description": "cluster-one commented on 13 Feb 2014\nHello,\nwhen i use mitmproxy in reverse mode, it decodes chunked pages but does not reencode them.\nI do not understand, why gzip etc. are reencoded but chunked-encoding is only decoded and stripped from the headers. Is there a way, to create chunked output, if the input was chunked ?\nRegards", "issue_status": "Closed", "issue_reporting_time": "2014-02-13T03:01:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1727": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/213", "issue_id": "#213", "issue_summary": "SSL Handshake Error", "issue_description": "hasjohnb commented on 12 Feb 2014\nI'm having the same symptom as #203 in an older Android emulator, SDK 10 (2.3.3). I can't get mitm.it to come up in the system browser, so I can't install the certificate that way. Instead, I installed the certificate into the emulator's /system/etc/security/cacerts.bks by this method. I've verified that the certificate is still in that file after the emulator reboots, using keystore -list | grep.\nIn the LogCat:\nE/Tab     (  282): onReceivedError -11 https://accounts.google.com/ServiceLogin?service=mail&passive=true&continue=http://mail.google.com/mail/?ui%3Dmobile%26zyp%3Dl&scc=1&ltmpl=ecobx&nui=5&btmpl=mobile&emr=1 A secure connection could not be established.\nIn the proxy:\n192.168.197.73:53068: connect\n192.168.197.73:53068: 400: SSL handshake error: (-1, 'Unexpected EOF')\n192.168.197.73:53068: disconnect\n  -> handled 0 requests", "issue_status": "Closed", "issue_reporting_time": "2014-02-12T00:20:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1728": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/212", "issue_id": "#212", "issue_summary": "issue 109 requires reopening", "issue_description": "Lx commented on 11 Feb 2014\nIssue 109 contains reports from users that the problem still exists after the issue was closed.\nI'm also experiencing this issue on Ubuntu 13.10 with mitmproxy 0.8 and Python 2.7.5+.\nI suspect that this issue is no longer actively monitored now that it is closed, despite subsequent comments indicating that it is not resolved. Accordingly, I'll do the in-your-face thing of opening a separate issue pointing to this one and then hope for the author's eventual forgiveness.", "issue_status": "Closed", "issue_reporting_time": "2014-02-11T02:24:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1729": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/210", "issue_id": "#210", "issue_summary": "mitmdump -S... raises `AttributeError: 'NoneType' object has no attribute '_assemble'`", "issue_description": "lddubeau commented on 8 Feb 2014\nSummary\nmitmdump -S ... raises AttributeError: 'NoneType' object has no attribute '_assemble'\nVersions\nOS: Debian testing (up to date as of 2014-02-07)\nmitmproxy: 0.10.0\nHow to Reproduce\nIssue:\n$ mitmdump -e -a -F http://www.gnome.org -p 3333 -w test\n# Switch terminal...\n$ curl -k -x \"https://localhost:3333\" 'http://www.gnome.org/'\n$ curl -k -x \"https://localhost:3333\" 'http://www.gnome.org/about/'\nmitmdump's output will look like this:\n127.0.0.1:54820: connect\n127.0.0.1 GET http://www.gnome.org/\n << 200 OK 17.64kB\n127.0.0.1:54820: disconnect\n  -> handled 1 requests\n127.0.0.1:54824: connect\n127.0.0.1 GET http://www.gnome.org/about/\n << 200 OK 15.66kB\n127.0.0.1:54824: disconnect\n  -> handled 1 requests\nKill mitmdump.\nIssue:\n$ mitmdump -e -a -F http://www.gnome.org -p 3333 -S test\n# Switch terminal...\n$ curl -k -x \"https://localhost:3333\" 'http://www.gnome.org/'\n$ curl -k -x \"https://localhost:3333\" 'http://www.gnome.org/about/'\nmitmdump's output will look like this:\n127.0.0.1:54832: connect\n127.0.0.1 GET http://www.gnome.org/\n << [replay] 200 OK 17.64kB\n127.0.0.1:54832: disconnect\n  -> handled 1 requests\n127.0.0.1:54834: connect\n----------------------------------------\nError in processing of request from 127.0.0.1:54834\nTraceback (most recent call last):\n  File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 376, in request_thread\n    self.handle_connection(request, client_address)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 545, in handle_connection\n    h.handle()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 192, in handle\n    while self.handle_request(cc) and not cc.close:\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 274, in handle_request\n    self.send_response(response)\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 493, in send_response\n    d = response._assemble()\nAttributeError: 'NoneType' object has no attribute '_assemble'\n\n----------------------------------------\n127.0.0.1 GET http://www.gnome.org/about/\n << [replay] 200 OK 15.66kB\ncurl's output:\ncurl: (52) Empty reply from server\nActual Results\nmitmdump crashes while serving the second request.\nExpected Results\nNo crash, and the second request served successfully.\nObservations\nAt the step of replaying server responses, starting mitmproxy with the same parameters as given to mitmdump above WORKS!\nIf mitmdump is started with `--no-pop``, it WORKS!\nI'm able to reproduce the behavior with versions 0.10.0 and 0.9.2.\nI've reproduced this behavior with api.zotero.org and www.eff.org (which both use SSL). So it is not a problem with www.gnome.org\nI'm able to reproduce the behavior by connecting to the proxy with Python's urllib2, so curl is not the problem.", "issue_status": "Closed", "issue_reporting_time": "2014-02-07T18:44:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1730": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/206", "issue_id": "#206", "issue_summary": "Changing EDITOR env variable has no effect.", "issue_description": "crallion commented on 4 Feb 2014\nI don't need vim for the editing of bodies, etc, so I tried to change the editor used by mitmproxy by changing the EDITOR environment variable in my .bashrc. However, when I go to edit something in mitm, the editor is still vim, even though echo $EDITOR returns nano.", "issue_status": "Closed", "issue_reporting_time": "2014-02-04T10:29:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1731": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/205", "issue_id": "#205", "issue_summary": "No Mouse Scrolling", "issue_description": "joshbrw commented on 24 Jan 2014\nTitle says it all, up and down arrow keys are a bit slow for what I need.", "issue_status": "Closed", "issue_reporting_time": "2014-01-24T11:03:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1732": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/204", "issue_id": "#204", "issue_summary": "certificate import in android 4.4.2 emulator", "issue_description": "josch commented on 21 Jan 2014\nHi,\nI was trying to import the mitmproxy certificate into an emulated android 4.4.2 device. But no matter where I put the certificate (tried /scard/Download, /sdcard, /mnt/sdcard, /mnt/sdcard/Download, /storage/sdcard/Download, /storage/sdcard), the certificate import did not show the certificate (but it did show apk files in /sdcard/Download).\nThis means that the instructions given at http://mitmproxy.org/doc/certinstall/android.html are either outdated for android 4.4.2, that this is a problem only appearing in the emulator or that I do something horribly wrong.\nNevertheless, I managed to import the certificate in the end by doing:\nfname=`openssl x509 -inform PEM -subject_hash_old -noout -in ~/.mitmproxy/mitmproxy-ca-cert.cer`.0\ncp ~/.mitmproxy/mitmproxy-ca-cert.cer $fname\nopenssl x509 -inform PEM -text -noout -in ~/.mitmproxy/mitmproxy-ca-cert.cer >> $fname\nadb push $fname /system/etc/security/cacerts/\nadb shell chmod 644 /system/etc/security/cacerts/$fname\nMaybe it would make sense to verify whether I just messed up somewhere or whether the instructions at http://mitmproxy.org/doc/certinstall/android.html indeed need updating and if they do, to also provide this new certificate format.", "issue_status": "Closed", "issue_reporting_time": "2014-01-20T20:59:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1733": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/203", "issue_id": "#203", "issue_summary": "[Error] 400 SSL Handshake Error", "issue_description": "0xroot commented on 20 Jan 2014\nHi guys,\nI'm testing mitmproxy with an Android emulator instance (I must say that your software works properly on a real environment) and I'm getting this annoying error when I try to intercept 'https' communications.\nI installed mitmproxy using pip utility, but after getting some errors with pyOpenSSL and netlib I compiled it from sources directly. The version that I'm currently running is 0.10. I generated the certificate and installed it onto the device.\nThe problem comes when I try to get a page under https, like Twitter, or when I try to use an application like AnyDo, while mitmproxy intercepts without problems http communications, for those ones under https, I'm getting the following error on the emulator: \"Connection problem / Couldn't establish a secure connection\".\nI'm running the emulator as follow:\nemulator @avd -http-proxy http://localhost:8080\nAnd mitmproxy/mitmdump with the following flags:\n-vvv -z -p 8080 --host\nI'm out of ideas, I tried the same using Burp and it works.\nThanks", "issue_status": "Closed", "issue_reporting_time": "2014-01-20T14:47:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1734": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/202", "issue_id": "#202", "issue_summary": "libmproxy example StickyMaster not working", "issue_description": "felmoltor commented on 19 Jan 2014\nHi,\nGreat tool you have developed here, but I'm trying to figure out how to make your libmproxy example code work (http://mitmproxy.org/doc/scripting/libmproxy.html). I modified it a little just to print out the message content and headers (You can see my code here: http://pastebin.com/m2PevqCy), but it keeps me printing the same error:\nAttributeError: Request instance has no attribute 'reply'\nI've installed from ubuntu repositories mitmproxy 0.8-2. I know the last version right now is 0.9.2 but I'm not sure if I have to upgrade it to make your code work correctly.\nDo you have any idea why this error is happening?\nThanks!\nUPDATE: Well, forget about it, I just upgraded with pip to version 0.9.2 and now it is working perfectly.\nI'll left the issue here to remember the Ubuntu and Kali users that the default version provided in their repositories are obsolete and wont work with your examples.", "issue_status": "Closed", "issue_reporting_time": "2014-01-18T19:54:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1735": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/201", "issue_id": "#201", "issue_summary": "transparent proxy via shared wifi failed", "issue_description": "hihell commented on 17 Jan 2014\nI redirect en0 (my wireshark is using this interface to sniff) to localhost 8080, then connect my android device to my macbook via Wifi sharing. (settings are following instruction: http://mitmproxy.org/doc/transparent/osx.html). But the device's http request just being jammed and there is nothing showing on mitmproxy.\nDuring the setup, there is a warning message:\nNo ALTQ support in kernel\nALTQ related functions disabled\nI'm not sure if I did it wrong or the instruction is out-dated.\nOSX version: 10.9.1\nThank you", "issue_status": "Closed", "issue_reporting_time": "2014-01-17T08:16:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1736": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/200", "issue_id": "#200", "issue_summary": "Mitmproxy can't record traffic when time set with 1 hour ago.", "issue_description": "AndyCAHsu commented on 6 Jan 2014\nHey guys,\nI'm trying to use mitmproxy to traffic my APP.\nMitmproxy is really a powerful tools and helps me a lot in testing App job.\nNow, I'm having a problem when I try to traffic my APP.\nThe mitmproxy can't record traffic when my handset date time set in 1 hour ago.\nFor example:\nEnable Mitmproxy at 10:00am, 01/06/2014.\nand setting my handset at 10:00am, 01/06/2014. (with current time or after current time) >> That's working to record traffic.\nIf setting my handset at 09:00am, 01/06/2014.(or more early) >> Doesn't working to record traffic.\nCan you guys help me?\nThanks a lot.\nAndy", "issue_status": "Closed", "issue_reporting_time": "2014-01-06T03:34:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1737": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/195", "issue_id": "#195", "issue_summary": "Script not working in git, only searches for script by first character", "issue_description": "badboy commented on 3 Jan 2014\nI'm using the latest commit on the master branch (b9d4eb1) and see the following bug when trying to pipe to a script: (output from event log)\nRunning script on flow: add_header.py\nError loading script:\nNo such file: a\nThis seems to be the code: https://github.com/mitmproxy/mitmproxy/blob/master/libmproxy/script.py#L27-L29", "issue_status": "Closed", "issue_reporting_time": "2014-01-03T14:26:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1738": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/194", "issue_id": "#194", "issue_summary": "mitmproxy 0.9 requires netlib>=0.9 but fails with netlib 0.9.2", "issue_description": "stevenreddie commented on 1 Jan 2014\nI tried downgrading from mitmproxy 0.9.2 to 0.9 while trying to work around the issue described here (https://groups.google.com/forum/#!topic/mitmproxy/ozc17WOG_OI). However I hit the error below. Uninstalling netlib and installing netlib 0.9 fixed this. It looks like netlib 0.9.2 may have dropped a parameter and broken backward compatibility.\n% mitmproxy\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 46, in <module>\n    config = proxy.process_proxy_options(parser, options)\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 664, in process_proxy_options\n    authenticator = authenticator\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 52, in __init__\n    self.certstore = certutils.CertStore(certdir)\nTypeError: __init__() takes exactly 1 argument (2 given)\nThis may also be the root cause of #167.", "issue_status": "Closed", "issue_reporting_time": "2014-01-01T12:59:39Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1739": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/188", "issue_id": "#188", "issue_summary": "Support for real/original SSL keys?", "issue_description": "Contributor\nbillinghamj commented on 10 Dec 2013\nOur app implements SSL pinning, so mitmproxy's generated certificates aren't accepted & connections fail.\nSince it's our app/API, we have all the original certificates/keys/etc. and merely want to use mitmproxy as a debugging tool. It'd be great if we could provide these & have those used rather than new ones generated.", "issue_status": "Closed", "issue_reporting_time": "2013-12-09T22:27:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1740": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/187", "issue_id": "#187", "issue_summary": "Store resolved IP addresses", "issue_description": "Member\ncortesi commented on 8 Dec 2013\nFrom mhils:\nHi cortesi,\nI just noticed that saved flows only store the hostname of a request. I think netlib/mitmproxy should store the resolved IP address, too. The current implementation doesn't provide any way to check whether the ip associated with the hostname has changed since the flow has been recorded. What are your thoughts on this?", "issue_status": "Closed", "issue_reporting_time": "2013-12-08T00:01:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1741": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/186", "issue_id": "#186", "issue_summary": "`Transfer-Encoding: Chunked` and empty responses", "issue_description": "jeffkaufman commented on 4 Dec 2013\nRunning stock mitmproxy on wikipedia the page wouldn't finish loading. It was getting stuck on this file: https://es.wikipedia.org/wiki/Special:CentralAutoLogin\nCompare headers:\nStraight from the source:\n $ curl -k -D- https://es.wikipedia.org/wiki/Special:CentralAutoLogin\nHTTP/1.1 301 Moved Permanently\nServer: nginx/1.1.19\nDate: Tue, 03 Dec 2013 21:24:52 GMT\nContent-Type: text/html; charset=utf-8\nTransfer-Encoding: chunked\nConnection: keep-alive\nX-Powered-By: PHP/5.3.10-1ubuntu3.8+wmf2\nX-Content-Type-Options: nosniff\nVary: Accept-Encoding,X-Forwarded-Proto,Cookie\nX-Vary-Options: Accept-Encoding;list-contains=gzip,X-Forwarded-Proto,Cookie;string-contains=eswikiToken;string-contains=eswikiLoggedOut;string-contains=forceHTTPS;string-contains=eswikiSession;string-contains=centralauth_Token;string-contains=centralauth_Session;string-contains=centralauth_LoggedOut;string-contains=mf_useformat;string-contains=stopMobileRedirect\nLast-Modified: Tue, 03 Dec 2013 21:12:36 GMT\nLocation: https://es.wikipedia.org/wiki/Especial:CentralAutoLogin\nX-Varnish: 788152767 788090537, 2349374586 2347321229\nVia: 1.1 varnish, 1.1 varnish\nAge: 735\nX-Cache: cp1054 hit (2), cp1067 frontend hit (1)\nCache-Control: private, s-maxage=0, max-age=0, must-revalidate\nVia stock mitmdump on port 8024:\n$ https_proxy=localhost:8024 curl -k -D- https://es.wikipedia.org/wiki/Special:CentralAutoLogin\nHTTP/1.1 200 Connection established\nProxy-agent: mitmproxy 0.9.2\n\nHTTP/1.1 301 Moved Permanently\nServer: nginx/1.1.19\nDate: Tue, 03 Dec 2013 21:25:10 GMT\nContent-Type: text/html; charset=utf-8\nConnection: keep-alive\nX-Powered-By: PHP/5.3.10-1ubuntu3.8+wmf2\nX-Content-Type-Options: nosniff\nVary: Accept-Encoding,X-Forwarded-Proto,Cookie\nX-Vary-Options: Accept-Encoding;list-contains=gzip,X-Forwarded-Proto,Cookie;string-contains=eswikiToken;string-contains=eswikiLoggedOut;string-contains=forceHTTPS;string-contains=eswikiSession;string-contains=centralauth_Token;string-contains=centralauth_Session;string-contains=centralauth_LoggedOut;string-contains=mf_useformat;string-contains=stopMobileRedirect\nLast-Modified: Tue, 03 Dec 2013 21:12:36 GMT\nLocation: https://es.wikipedia.org/wiki/Especial:CentralAutoLogin\nX-Varnish: 788090537, 2626133798 2623931022\nVia: 1.1 varnish, 1.1 varnish\nAge: 754\nX-Cache: cp1054 miss (0), cp1066 frontend hit (2)\nCache-Control: private, s-maxage=0, max-age=0, must-revalidate\nNote that when running through mitmproxy the Transfer-Encoding: chunked is stripped but no Content-Length: 0 is added to make up for it.\nHere's a workaround:\ndef response(context, flow):\n  if (len(flow.response.content) == 0 and\n      \"Transfer-Encoding\" in flow.response.headers):\n    # If you fetch https://es.wikipedia.org/wiki/Special:CentralAutoLogin it     \n    # will give you a 301 with 'Transfer-Encoding: chunked' and no content.      \n    # This is not handled properly by mitmproxy, which produces an empty         \n    # response with neither chunked encoding nor a Content-Length header.  So    \n    # when we see empty responses with 'Transfer-Encoding: chunked', remove the  \n    # header and add a Content-Length.                                           \n    del flow.response.headers[\"Transfer-Encoding\"]\n    assert \"Content-Length\" not in flow.response.headers\n    flow.response.headers[\"Content-Length\"] = [\"0\"]", "issue_status": "Closed", "issue_reporting_time": "2013-12-03T21:28:00Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1742": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/185", "issue_id": "#185", "issue_summary": "mitmproxy: page down does not work on Macbook Pro", "issue_description": "djensen47 commented on 2 Dec 2013\nSince the Macbook Pro does not have a Page up/down key, I have to use Fn+Down and Fn+Up. However, it does not work when mitmproxy is running and I'm viewing a flow using the Terminal.app. If I page up (fn+up), it will page up the terminal window but not the response window area.\nMay I suggest alternate keys? Ctrl-U and Ctrl-D is what I use in vim for paging.\nThanks.", "issue_status": "Closed", "issue_reporting_time": "2013-12-02T00:19:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1743": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/183", "issue_id": "#183", "issue_summary": "Problem when filtering by host", "issue_description": "fjcaetano commented on 27 Nov 2013\nHey guys,\nI'm having a problem when I try to intercept connections filtering by host:\nCommand Intercepts?\ngoogle.com NO\n~h \"Host: google.com\" YES\n~h \"Host: .*\\.google\\.com\" YES\n~d google.com NO\n~d \"google.com\" NO\nThe NO cases, nothing happens. No request/response is intercepted. When I try filtering the header host I succeed.\nI checked the code and I see that the ~d pattern tries to find the regex within the host, but it's not working for some reason:\nclass FDomain(_Rex):\n    code = \"d\"\n    help = \"Domain\"\n    def __call__(self, f):\n        return bool(re.search(self.expr, f.request.host, re.IGNORECASE))\nCan you guys help me? Am I doing something wrong? It's really annoying have to filter by host everytime.\nThanks in advance", "issue_status": "Closed", "issue_reporting_time": "2013-11-26T18:42:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1744": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/182", "issue_id": "#182", "issue_summary": "mitmproxy how to work with expired certificates", "issue_description": "mescalante1988 commented on 26 Nov 2013\nHi! Thanks for the tool it helped me to do a project. I'm testing mobile apps in Android and I'm done with the normal testing (capturing the https traffic through mitmproxy to find out ssl flaws) . Now I need to do the same testing but with expired certificates, Cortesi, there is a way you can show me how to replicate those certificates? I'm trying to replicate them with makecert in windows and they seem similar but when I'm trying to test, the apps through \"handshake\" errors. Please let me know if you can help me.\nThanks", "issue_status": "Closed", "issue_reporting_time": "2013-11-26T02:02:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1745": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/181", "issue_id": "#181", "issue_summary": "Move stickyauth and stickycookie into own modules", "issue_description": "Member\nmhils commented on 20 Nov 2013\nHey there,\nWith the next release, we're going to have support for multiple script arguments. Looking at the stickyauth and stickycookie options, are there any particular reasons why we keep them in the mitmproxy core? I see that we have a slight GUI integration, but does that justify it? --anticache is probably a widely used option and should be kept, but how many usecases are there for stickyauth and stickycookies?\nCheers,\nMax", "issue_status": "Closed", "issue_reporting_time": "2013-11-20T11:50:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1746": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/179", "issue_id": "#179", "issue_summary": "Rewriting responses of https server", "issue_description": "masrud commented on 14 Nov 2013\nHi there,\nI'm using mitmproxy to rewrite javascript code of Gmail before being loaded into browser.\nI'm running the following command: ./mitmproxy -s rewrite_js.py\nThe code for rewrite_js.py is as follows:\n\nimport subprocess\nimport jsbeautifier\ndef response(context, flow):\nglobal GLOBAL_COUNTER\ndata = flow.response.getDecodedContent()\nprint ('HERE --- data= %s' % data)\nif (data.find('function') >= 0 and\ndata.find('return') >= 0 and\ndata.find('var ') >= 0 and\ndata.find('!DOCTYPE html') < 0 and\ndata.find('<script') < 0):\nres = jsbeautifier.beautify(data)\nflow.response.replaceContentNewOne(res)\nAlso, I added this simple functions to flow.py:\n\ndef replaceContentNewOne(self, newData):\nwith decoded(self):\nself.content = str(newData)\nThe problem is that Gmail stops loading the modified JS file to the browser and sends multiple request for the file, which are not successful. The file is just beautified. This seems to work for other pages such as facebook.\nIn addition, simple changes in Gmail shows no issue. For example, if I replace rewrite_js.py with the following\n\ndef response(context, flow):\nflow.response.replaceContent('var ', 'var                          ')\nThe file will be loaded and there will be no problem.\nAny help regarding this issue will be appreciated.", "issue_status": "Closed", "issue_reporting_time": "2013-11-14T16:58:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1747": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/178", "issue_id": "#178", "issue_summary": "inline script when running mitmproxy in transparent mode", "issue_description": "masrud commented on 14 Nov 2013\nHi there,\nI was wondering if mitmproxy allows rewriting of server response when running in transparent mode.\nI have an inline script to modify the code and it works when running like this:\n./mitmproxy -s rewrite.py\nhowever in transparent mode it has no effect. I run it as following:\n./mitmproxy -T -s rewrite.py\nThanks,\nMasi", "issue_status": "Closed", "issue_reporting_time": "2013-11-13T21:38:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1748": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/177", "issue_id": "#177", "issue_summary": "libmproxy set transparent_proxy", "issue_description": "nmonkee commented on 8 Nov 2013\nWhen using libmproxy what is the correct way to start the proxy in transparent mode?\nconfig = proxy.ProxyConfig(\ncacert = os.path.expanduser(\"~/.mitmproxy/mitmproxy-ca.pem\")\n)\nserver = proxy.ProxyServer(config,8080)\n??\ntransparent_proxy = True\ntransparent_proxy = 1\n???", "issue_status": "Closed", "issue_reporting_time": "2013-11-07T22:20:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1749": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/176", "issue_id": "#176", "issue_summary": "Add @concurrent decorator for scripts.", "issue_description": "Member\nmhils commented on 31 Oct 2013\nWe should introduce a concurrent decorator to indicate that scripts should be processed in parallel (see mailing list discussion). For example,\ndef response(context, flow):\n    if flow.request.host == 'www.yahoo.com':\n        time.sleep(10)\nshould not block all other requests that arrive after a request to yahoo.", "issue_status": "Closed", "issue_reporting_time": "2013-10-31T10:05:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1750": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/175", "issue_id": "#175", "issue_summary": "How to ignore one or more domain in MITMPROXY?", "issue_description": "timesking commented on 30 Oct 2013\nI'm trying to use mitmproxy to build testing tools for iOS development.\nmitmproxy is really a powerful tools and helps me a lot in testing App job.\nmitmproxy will sit between iOS device and our server, in order to generate logs and run scripts to verify all parameter passed correctly to our server.\nwe got one problem is when I set up mitmproxy, the Apple\u2019s In-App-Purchase did not work.\nI would like to ignore all requests&response of domain \u201capple.com\u201d.\nBecause I do not want to intercept anything in \"apple.com\".\nCould you do me a favor tell me how could I make it?", "issue_status": "Closed", "issue_reporting_time": "2013-10-30T09:49:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1751": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/174", "issue_id": "#174", "issue_summary": "Support for 'chained root' certificates", "issue_description": "Cruz0r commented on 29 Oct 2013\nI've got a cheap COMODO domain certificate which comes with an intermediary public root certificate. Signing order is [root] -> [intermediary root] -> [domain cert]. Currently, mitmproxy is unable to properly use this domain certificate because it doesn't send the intermediary root certificate along in client SSL negotiations. Clients can't validate the chain so the certificate isn't trusted - even when trying to access the actual domain name.\nI've managed to get it working by editing the tcp.py file:\nclass BaseHandler, the convert_to_ssl function needed a 'ctx.load_verify_locations(certificate_chain)'\nwhere certificate_chain should point to the intermediate certificate PEMfile (ie is a filename).\nI have only tested this in transparent mode with 'openssl verify', but it did result in mitmproxy injecting my domain certificate which got trusted.\nWould be nice if this got properly supported.", "issue_status": "Closed", "issue_reporting_time": "2013-10-28T22:09:25Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1752": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/172", "issue_id": "#172", "issue_summary": "Bad cert issuer chain error with firefox when hitting twitter.com", "issue_description": "Kennysan commented on 6 Oct 2013\nScreenshot:\nRunning mac OSX 10.8.5, and trunk for pathod, netlib, and mitmproxy. Observed behavior using Firefox 24.\nstart up mitmproxy from the command line\nbrowse to https://twitter.com in Firefox 24, observe bad issuer chain cert error. Other secure twitter urls don't seem to be affected.\nAs an example of a url that isn't affected, browse to https://2012.twitter.com\nI was not able to reproduce this issue using Chrome and mitmproxy.", "issue_status": "Closed", "issue_reporting_time": "2013-10-06T04:00:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1753": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/171", "issue_id": "#171", "issue_summary": "Location for cert installation on Android 4.2.2 seems to be /sdcard", "issue_description": "smola commented on 29 Sep 2013\nI was following the instructions for Android on http://mitmproxy.org/doc/certinstall/android.html\nAndroid was not detecting the certificate on /sdcard/Downloads but it worked when getting it to just /sdcard/. I'm using CyanogenMod 10.1.3 which is based on Android 4.2.2.\nI could not test on stock or OEM Android yet, nor other Android versions.", "issue_status": "Closed", "issue_reporting_time": "2013-09-29T16:40:03Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1754": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/169", "issue_id": "#169", "issue_summary": "AttributeError: 'NoneType' object has no attribute 'decode'", "issue_description": "codersbrew commented on 18 Sep 2013\nThis might be an issue on my end.\nI am running a localserver apach2 with self signed openssl Cert.\nI then start up the basic mitmproxy via python. I can visit https sites like google or what have you and I see the requests and responses.\nIf I go to my own apache2 server locally via firefox, \"https://127.0.0.1/test.html\" I get the following error.\nError in processing of request from 127.0.0.1:50944\nTraceback (most recent call last):\n  File \"/usr/lib/python2.7/site-packages/netlib/tcp.py\", line 369, in request_thread\n    self.handle_connection(request, client_address)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy.py\", line 511, in handle_connection\n    h.handle()\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy.py\", line 175, in handle\n    while self.handle_request(cc) and not cc.close:\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy.py\", line 191, in handle_request\n    request = self.read_request(cc)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy.py\", line 441, in read_request\n    return self.read_request_proxy(client_conn)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy.py\", line 375, in read_request_proxy\n    dummycert = self.find_cert(client_conn, host, port, host)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/proxy.py\", line 307, in find_cert\n    host = conn.cert.cn.decode(\"utf8\").encode(\"idna\")\nAttributeError: 'NoneType' object has no attribute 'decode'\nThis is the code I am running\n#!/usr/bin/env python\n\"\"\"\nThis example builds on mitmproxy's base proxying infrastructure to\nimplement functionality similar to the \"sticky cookies\" option. This is at\na lower level than the Flow mechanism, so we're dealing directly with\nrequest and response objects.\n\"\"\"\nfrom libmproxy import controller, proxy\nimport os\n\nclass StickyMaster(controller.Master):\n    def __init__(self, server):\n        controller.Master.__init__(self, server)\n        self.stickyhosts = {}\n\n    def run(self):\n        try:\n            return controller.Master.run(self)\n        except KeyboardInterrupt:\n            self.shutdown()\n\n    def handle_request(self, msg):\n        hid = (msg.host, msg.port)\n        #if msg.headers[\"cookie\"]:\n        #    self.stickyhosts[hid] = msg.headers[\"cookie\"]\n        #elif hid in self.stickyhosts:\n        #    msg.headers[\"cookie\"] = self.stickyhosts[hid]\n        msg.reply()\n\n    def handle_response(self, msg):\n        hid = (msg.request.host, msg.request.port)\n        print hid\n        output = msg._get_state()\n        print msg.request.path + msg.request.host + str(output['timestamp_start']) + str(output['timestamp_end'])\n        #if msg.headers[\"set-cookie\"]:\n        #    self.stickyhosts[hid] = msg.headers[\"set-cookie\"]\n        msg.reply()\n\n\nconfig = proxy.ProxyConfig(\n    cacert = os.path.expanduser(\"~/.mitmproxy/mitmproxy-ca.pem\")\n)\nserver = proxy.ProxyServer(config, 8080)\nm = StickyMaster(server)\nm.run()", "issue_status": "Closed", "issue_reporting_time": "2013-09-17T18:33:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1755": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/167", "issue_id": "#167", "issue_summary": "TypeError: __init__() takes exactly 1 argument (2 given)", "issue_description": "nandub commented on 6 Sep 2013\nI tried versions 0.9 and 0.9.1 but I'm getting this error on a Mac OS X Lion 10.7.5\n> mitmproxy               \nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 46, in <module>\n    config = proxy.process_proxy_options(parser, options)\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 664, in process_proxy_options\n    authenticator = authenticator\n  File \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 52, in __init__\n    self.certstore = certutils.CertStore(certdir)\nTypeError: __init__() takes exactly 1 argument (2 given)", "issue_status": "Closed", "issue_reporting_time": "2013-09-06T03:50:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1756": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/165", "issue_id": "#165", "issue_summary": "Server certificate doesn't match the URL", "issue_description": "tfernandes commented on 26 Aug 2013\nHi,\nI am trying to set-up a MITM-like attack using mitmproxy and it seems to work as expected, except that when I visit google.com or facebook for example I get an error saying that the server certificate presented by mitmproxy doesn't match the URL. In this case, given the attack I want to do, the certificate is not trusted (not installed on device) which is excepted, but it was my understanding that the server certificate should still match the URL?\nHere are the command I use to run it:\nmitmdump --cert {location_cert_file} -e -vvv -p {port_setup_iptables) -T -z --host -w {save_location}\nI am using mitmproxy 0.9.\nAm I missing something or doing something wrong?\nThanks a lot in advance for your help!", "issue_status": "Closed", "issue_reporting_time": "2013-08-26T14:39:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1757": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/163", "issue_id": "#163", "issue_summary": "Interrupted System Call Exception", "issue_description": "Member\ncortesi commented on 25 Aug 2013\nWhile testing build packages on OSX, I'm seeing the following, but very rarely:\n^CException in thread Thread-1:\nTraceback (most recent call last):\nFile \"/Users/aldo/tmp/pyinstaller/pyinstaller-pyinstaller-71a4ce2/mitmdump/build/mitmdump/out00-PYZ.pyz/threading\", line 552, in __bootstrap_inner\nFile \"/Users/aldo/tmp/pyinstaller/pyinstaller-pyinstaller-71a4ce2/mitmdump/build/mitmdump/out00-PYZ.pyz/libmproxy.controller\", line 77, in run\nFile \"/Users/aldo/tmp/pyinstaller/pyinstaller-pyinstaller-71a4ce2/mitmdump/build/mitmdump/out00-PYZ.pyz/netlib.tcp\", line 379, in serve_forever\nerror: (4, 'Interrupted system call')\nTraceback (most recent call last):\nFile \"\", line 50, in\nFile \"/Users/aldo/tmp/pyinstaller/pyinstaller-pyinstaller-71a4ce2/mitmdump/build/mitmdump/out00-PYZ.pyz/libmproxy.dump\", line 228, in run\nFile \"/Users/aldo/tmp/pyinstaller/pyinstaller-pyinstaller-71a4ce2/mitmdump/build/mitmdump/out00-PYZ.pyz/libmproxy.controller\", line 112, in run\nFile \"/Users/aldo/tmp/pyinstaller/pyinstaller-pyinstaller-71a4ce2/mitmdump/build/mitmdump/out00-PYZ.pyz/libmproxy.flow\", line 1494, in tick\nFile \"/Users/aldo/tmp/pyinstaller/pyinstaller-pyinstaller-71a4ce2/mitmdump/build/mitmdump/out00-PYZ.pyz/libmproxy.controller\", line 100, in tick\nFile \"/Users/aldo/tmp/pyinstaller/pyinstaller-pyinstaller-71a4ce2/mitmdump/build/mitmdump/out00-PYZ.pyz/Queue\", line 182, in get\nthread.error: release unlocked lock", "issue_status": "Closed", "issue_reporting_time": "2013-08-24T22:08:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1758": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/160", "issue_id": "#160", "issue_summary": "Tests: TestHTTPS test cases fail due to missing SSL cert.", "issue_description": "Member\nmhils commented on 17 Aug 2013\nHey @cortesi,\ntracking down the few test cases that don't work on Windows, I discovered that most of the TestHTTPS test cases don't work because of an untrusted certificate (test_clientcert, _error_post_connect, _http, _large, _replay, _sni). When I replace\nctx.set_verify(SSL.VERIFY_PEER, ver) with ctx.set_verify(SSL.VERIFY_NONE, ver) in tcp.BaseHandler.convert_to_ssl, they pass.\nBefore digging further down the rabbit hole - are you trusting these certs somewhere or is the observed behaviour the result of a different issue?\nCheers,\nMax", "issue_status": "Closed", "issue_reporting_time": "2013-08-17T13:35:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1759": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/158", "issue_id": "#158", "issue_summary": "SSL issue (basic auth?)", "issue_description": "dsultanr commented on 13 Aug 2013\nnot sure that this is mitmproxy issue, but without proxy everything works fine\ncould be reproduced easy\nworkaround:\nmitmproxy and netlib is checked out to the latest version\nrunning pure\nmitmdump -p 8000 -w flows.log -v -v -v > mitmdump.log\nopen URL\nhttps://www.natalie-tours.ru/booking/demandControlServlet\nin firefox (23.0) setted to work via mitmdump at remotehost:8000\ngetting basic auth dialog\nenter anything into login and pass\nwe should get login dialog again, because login and pass are wrong\nbut we have\nfirefox hanging for very long time (until manually stop to fetching url or mitmdump destroy)\nhere is screenshot of firefox while hang\nhttp://clip2net.com/s/5yN8jL\nfirst GET in network profiler is auth dialog, second one is hanged\nhere are flow.log\nhttps://www.dropbox.com/s/h2ke70knztb41if/flows.log\nand mitmdump.log\nhttps://www.dropbox.com/s/zw40hi014tizf18/mitmdump.log\nany thoughts?", "issue_status": "Closed", "issue_reporting_time": "2013-08-13T18:02:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1760": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/157", "issue_id": "#157", "issue_summary": "Use argparse Namespaces rather than Option classes", "issue_description": "Member\nmhils commented on 13 Aug 2013\nHey Aldo,\nadding mitmproxy-gui (HoneyProxy) next to mitmproxy and mitmdump, it seems like the current options handling produces duplicate spaghetti code.\nThe option processing is splitted in cmdline.get_common_options() and the mitmproxy/mitmdump files.\nThe [dump|console].Options classes just repeat the allowed parameters.\nIMHO, we could dump the Options classes and incorporate the get_common_options(opts) logic into the common_options(parser) function. We can pass the options object returned by parser.parse_args() to the FlowMaster then.\nThis would a) reduce fragmentation and b) would reintroduce the point of the Options classes again, namely limiting the option names to a limited set (as it was with slots).\nYour thoughts?\nCheers,\nMax", "issue_status": "Closed", "issue_reporting_time": "2013-08-13T13:57:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1761": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/156", "issue_id": "#156", "issue_summary": "can't import ~/.mitmproxy/mitmproxy-ca-cert.pem to firefox", "issue_description": "dsultanr commented on 12 Aug 2013\nI'm trying to import cert in firefox 23.0\ndoing everything like here: http://mitmproxy.org/doc/certinstall/firefox.html\nin section \"Click \"View Certificates\", \"Import\", and select the certificate file:\"\nafter selecting file mitmproxy-ca-cert.pem nothing happens\nfile choose dialog disappears and I see list of CA's again, mitmproxy not there\ntried also to import into \"Your certificates\" there - but here I'm choosing .p12 file instead of .pem, dialog asks password and after empty password gives error:\n\"Failed to decode the file. Either it is not in PKCS #12 format, has been corrupted, or the password you entered was incorrect.\"\nall this on os x 10.8.4\nalso tried on windows - same problem\nuploaded pem file here https://www.dropbox.com/s/v68aiymbe7voiqm/mitmproxy-ca-cert.pem\nwhat am I doing wrong?", "issue_status": "Closed", "issue_reporting_time": "2013-08-12T15:41:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1762": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/155", "issue_id": "#155", "issue_summary": "support list of subject alternative names for certficate for transparent proxy support", "issue_description": "tyll commented on 11 Aug 2013\nIn case of using a mitmproxy as a transparent proxy and the client does not use SNI, the mitmproxy does not know for which hostnames the certificate needs to be created. Therefore it would be nice if mitmproxy can get hints about hostname/ip-mapping when started, e.g. by reading a hosts file. Also it would be nice if it is possible to inform mitmproxy about new hostnames on the fly when it is running and if mitmproxy could scan returned HTML pages for new hostnames to add them to the mapping.", "issue_status": "Closed", "issue_reporting_time": "2013-08-11T16:27:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1763": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/154", "issue_id": "#154", "issue_summary": "flow.FlowMaster.replay_request doesn't work as expected", "issue_description": "lordillusions commented on 8 Aug 2013\nI made my own DumpMaster, simpler with less options, only what I need just to make libmproxy works more like a spider than a proxy itself.\nI use first flow.FlowMaster.start_client_playback to play an array of flows loaded by _readflow, it works great, but when I try to use replay_request from FlowMaster it hangs and doesn't return.\nI wish I could have a way to replay any flow at any other I wish, after read the response content back from some another previous flow I've ran.\nAnother example, to replay a client request until response.size() < 5000, and keeps comparing the response size every new client replay.\nI don't see a way to do that so far.\nThis is a GREAT project, best work I've seen in years! Congratulations! You Rock!\nBest Regards,\nLordillusions", "issue_status": "Closed", "issue_reporting_time": "2013-08-08T04:45:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1764": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/153", "issue_id": "#153", "issue_summary": "Too many open files error", "issue_description": "apburton commented on 26 Jul 2013\nHi\nI've had my libmproxy based server running for about a week and then it errors with:\nError in processing of request from 80.176.153.206:49325 Traceback (most recent call last):\nFile \"/usr/lib/python2.7/site-packages/netlib/tcp.py\", line 353, in request_thread\nself.handle_connection(request, client_address)\nFile \"/home/staging/sslproxy/libmproxy/proxy.py\", line 559, in handle_connection\nh.handle()\nFile \"/home/staging/sslproxy/libmproxy/proxy.py\", line 189, in handle\nwhile self.handle_request(cc) and not cc.close:\nFile \"/home/staging/sslproxy/libmproxy/proxy.py\", line 204, in handle_request\nrequest = self.read_request(cc)\nFile \"/home/staging/sslproxy/libmproxy/proxy.py\", line 473, in read_request\nreturn self.read_request_transparent(client_conn)\nFile \"/home/staging/sslproxy/libmproxy/proxy.py\", line 371, in read_request_transparent\nself.convert_to_ssl(dummycert, self.config.certfile or self.config.cacert, handle_sni=sni)\nFile \"/usr/lib/python2.7/site-packages/netlib/tcp.py\", line 289, in convert_to_ssl\nctx.use_privatekey_file(key)\nError: [('system library', 'fopen', 'Too many open files'), ('BIO routines', 'FILE_CTRL', 'system lib'), ('SSL routines', 'SSL_CTX_use_PrivateKey_file', 'system lib')]\nThis was a fresh install (with pip install) last week so I should be using the latest packages.\nAny ideas?\nThanks\nAdrian", "issue_status": "Closed", "issue_reporting_time": "2013-07-26T15:42:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1765": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/152", "issue_id": "#152", "issue_summary": "Reverse proxy mode doesn't work with HTTPS", "issue_description": "Contributor\nrgerganov commented on 21 Jul 2013\nI have an HTTPS service running on 192.168.2.4:8443 and I want to setup mitmproxy to forward requests to it in reverse proxy mode. I am running:\n$ mitmproxy -e -P https://192.168.2.4:8443\nWhen I try to access https://localhost:8080 I am getting the following error in the event log:\n127.0.0.1:59189: connect\n127.0.0.1:59189: 400: Bad HTTP request line:\n'\\x16\\x03\\x01\\x00\\xf3\\x01\\x00\\x00\\xef\\x03\\x02Q\\xeb\\xfa8!\\xa3qo\\xd7\\xf1\\xd6\\xc7\\xea\\x0c\\xf7\\xf9\\xeaB\\xf56f\\x0e\\x02&\\xa3\\x17s.\\x90\\x81\\xca\\x8c\\x00\\x00j\\xc0\\x14\\xc0\\n'\n127.0.0.1:59189: disconnect\nDoes mitmproxy support HTTPS in reverse proxy mode? Thanks.", "issue_status": "Closed", "issue_reporting_time": "2013-07-21T15:18:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1766": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/151", "issue_id": "#151", "issue_summary": "Connections automatically closed in transparent mode", "issue_description": "pridkett commented on 20 Jul 2013\nI'm attempting to use mitmproxy 0.9.1 as a transparent proxy with the following command line:\nmitmproxy -T --host -p 3128\nHowever, as soon as any connection is made to the proxy in the mode, it is immediately closed. The event log isn't that helpful either:\n127.0.0.1:56124: connect\n127.0.0.1:56124: [Errno 92] Protocol not available\n127.0.0.1:56124: disconnect\n  -> handled 0 requests\nHere's various elements of potentially relevant system information:\nOS: CentOS 6.4 Final x86_64\nKernel: Linux v525400346172 2.6.32-358.6.2.el6.x86_64 #1 SMP Thu May 16 20:59:36 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux\nPython 2.7.5\nPyOpenSSL 0.13\nmitmproxy works as expected when not in transparent mode and running as an explicit proxy.", "issue_status": "Closed", "issue_reporting_time": "2013-07-20T04:15:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1767": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/150", "issue_id": "#150", "issue_summary": "mitmproxy is generating a cert with an invalid signature", "issue_description": "Kennysan commented on 19 Jul 2013\nThe following error shows up when running mitmproxy 0.9.1 on Firefox 23 on OSX 10.8.4:\nSteps to reproduce: Delete ~/.mitmproxy\nstarts up mitmproxy\nbrowse to any https website.\nerror in the browse:\nPeer's certificate has an invalid signature.\n(Error code: sec_error_bad_signature)\nmitmproxy console pops up with this error:\nError in processing of request from 127.0.0.1:54378\nTraceback (most recent call last):\nFile \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 353, in request_thread\nself.handle_connection(request, client_address)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 533, in handle_connection\nh.handle()\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 188, in handle\nwhile self.handle_request(cc) and not cc.close:\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 203, in handle_request\nrequest = self.read_request(cc)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 452, in read_request\nreturn self.read_request_proxy(client_conn)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 396, in read_request_proxy\nline = self.rfile.readline(line)\nFile \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 160, in readline\nch = self.read(1)\nFile \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 129, in read\ndata = self.o.read(rlen)\nError: [('SSL routines', 'SSL3_READ_BYTES', 'sslv3 alert bad certificate')]\nLooks like mitmproxy is somehow generating a bad certificate.", "issue_status": "Closed", "issue_reporting_time": "2013-07-19T02:16:27Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1768": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/149", "issue_id": "#149", "issue_summary": "Why did i can't capture AppStore HTTPS traffic with mitmproxy?", "issue_description": "jimzhao2012 commented on 16 Jul 2013\nAppStore in my iPhone4 (iOS6.1.3) can't capture;\nbut AppStore in iPod(iOS 5.1.1) can capture;\nwhy? how can i do, then i can capture HTTPS request in iOS 6.1.3?", "issue_status": "Closed", "issue_reporting_time": "2013-07-16T07:17:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1769": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/147", "issue_id": "#147", "issue_summary": "Crashes on receiving a request (urwid encode error)", "issue_description": "aznn commented on 14 Jul 2013\nStack trace\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 75, in <module>\n    m.run()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 596, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/raw_display.py\", line 242, in run_wrapper\n    return fn()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 805, in loop\n    size = self.drawscreen()\n  File \"/usr/local/lib/python2.7/dist-packages/libmproxy/console/__init__.py\", line 788, in drawscreen\n    canvas = self.view.render(size, focus=1)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/container.py\", line 1058, in render\n    focus and self.focus_part == 'body')\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/listbox.py\", line 475, in render\n    focus_canvas = focus_widget.render((maxcol,), focus=focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/widget.py\", line 1751, in render\n    canv = get_delegate(self).render(size, focus=focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/container.py\", line 1493, in render\n    canv = w.render((maxcol,), focus=focus and item_focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/container.py\", line 2055, in render\n    focus = focus and self.focus_position == i)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/widget.py\", line 141, in cached_render\n    canv = fn(self, size, focus=focus)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/widget.py\", line 1008, in render\n    return apply_text_layout(text, attr, trans, maxcol)\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/canvas.py\", line 1291, in apply_text_layout\n    text[s.offs:s.end])\n  File \"/usr/local/lib/python2.7/dist-packages/urwid/util.py\", line 121, in apply_target_encoding\n    s = s.encode( _target_encoding )\nUnicodeEncodeError: 'latin-1' codec can't encode character u'\\u2190' in position 0: ordinal not in range(256)\nI have exported LANG=C.UTF-8. I am on Ubuntu 13.04. Downloaded the latest version via pip.", "issue_status": "Closed", "issue_reporting_time": "2013-07-14T18:03:48Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1770": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/146", "issue_id": "#146", "issue_summary": "note about installing the mitmproxy CA in a java environment", "issue_description": "nlitsme commented on 13 Jul 2013\nseveral methods of installing the mitmproxy CA are listed on http://mitmproxy.org/doc/ssl.html\nI would like to add one more:\nkeytool -importcert -alias mitmproxy -storepass \"changeit\" \n  -keystore /System/Library/Java/Support/CoreDeploy.bundle/Contents/Home/lib/security/cacerts\n  -trustcacerts -file ~/.mitmproxy/mitmproxy-ca-cert.pem\nthis adds the cert to the cacert store for the OSX java environment.\nand \"changeit\" really is the default password.", "issue_status": "Closed", "issue_reporting_time": "2013-07-12T20:37:12Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1771": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/145", "issue_id": "#145", "issue_summary": "tlsv1 alert unknown ca", "issue_description": "crass commented on 13 Jul 2013\nError in processing of request from 127.0.0.1:49021\nTraceback (most recent call last):\n  File \"/home/crass/.local/lib/python2.7/site-packages/netlib/tcp.py\", line 353, in request_thread\n    self.handle_connection(request, client_address)\n  File \"/home/crass/.local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 533, in handle_connection\n    h.handle()\n  File \"/home/crass/.local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 188, in handle\n    while self.handle_request(cc) and not cc.close:\n  File \"/home/crass/.local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 203, in handle_request\n    request = self.read_request(cc)\n  File \"/home/crass/.local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 452, in read_request\n    return self.read_request_proxy(client_conn)\n  File \"/home/crass/.local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 396, in read_request_proxy\n    line = self.rfile.readline(line)\n  File \"/home/crass/.local/lib/python2.7/site-packages/netlib/tcp.py\", line 160, in readline\n    ch = self.read(1)\n  File \"/home/crass/.local/lib/python2.7/site-packages/netlib/tcp.py\", line 129, in read\n    data = self.o.read(rlen)\nError: [('SSL routines', 'SSL3_READ_BYTES', 'tlsv1 alert unknown ca')]\nThis is happening when trying to proxy an ssl connection through mitmproxy with firefox using the default self-signed cert for mitmproxy. When issuing an https connection through the proxy with curl, curl will fail verifying the cert but no exception will be thrown in mitmproxy.\nSince this exception is not caught the ncurses ui is overwritten with the exception until the next user key press.\nIt seems that the problem is that the cert mitmproxy is giving to the client is untrusted. But why the difference with firefox and curl? Either way this exception should be handled gracefully.", "issue_status": "Closed", "issue_reporting_time": "2013-07-12T18:40:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1772": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/144", "issue_id": "#144", "issue_summary": "Error: [('PEM routines', 'PEM_read_bio', 'no start line'), ('SSL routines', 'SSL_CTX_use_certificate_file', 'PEM lib')]", "issue_description": "dsultanr commented on 11 Jul 2013\njust did git clone mitmproxy, but error is still here\nError in processing of request from 46.72.191.27:52247\nTraceback (most recent call last):\nFile \"/opt/python2.7/lib/python2.7/site-packages/netlib/tcp.py\", line 353, in request_thread\nself.handle_connection(request, client_address)\nFile \"/opt/python2.7/lib/python2.7/site-packages/libmproxy/proxy.py\", line 536, in handle_connection\nh.handle()\nFile \"/opt/python2.7/lib/python2.7/site-packages/libmproxy/proxy.py\", line 191, in handle\nwhile self.handle_request(cc) and not cc.close:\nFile \"/opt/python2.7/lib/python2.7/site-packages/libmproxy/proxy.py\", line 206, in handle_request\nrequest = self.read_request(cc)\nFile \"/opt/python2.7/lib/python2.7/site-packages/libmproxy/proxy.py\", line 455, in read_request\nreturn self.read_request_proxy(client_conn)\nFile \"/opt/python2.7/lib/python2.7/site-packages/libmproxy/proxy.py\", line 395, in read_request_proxy\nself.convert_to_ssl(dummycert, self.config.certfile or self.config.cacert, handle_sni=sni)\nFile \"/opt/python2.7/lib/python2.7/site-packages/netlib/tcp.py\", line 290, in convert_to_ssl\nctx.use_certificate_file(cert)\nError: [('PEM routines', 'PEM_read_bio', 'no start line'), ('SSL routines', 'SSL_CTX_use_certificate_file', 'PEM lib')]\nruning libmproxy application on centos 5\ngetting errors\nThere's been a recent contributed patch that could be relevant to this. Could you please try a current git checkout, and see if you still see these problems?\nAlso, please do report this kind of thing on the Github bug tracker. It makes it much easier to keep track of things.\nRegards,\nAldo", "issue_status": "Closed", "issue_reporting_time": "2013-07-11T06:41:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1773": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/141", "issue_id": "#141", "issue_summary": "Crash after deleting a duplicated stream", "issue_description": "jahrome commented on 8 Jul 2013\nTest case :\nDuplicate a flow\nDelete it\nThe following error occurs :\nTraceback (most recent call last):\nFile \"./mitmproxy\", line 75, in\nm.run()\nFile \"/mnt/jer/Sources/Sectools/mitmproxy_git_merge/libmproxy/console/init.py\", line 596, in run\nself.ui.run_wrapper(self.loop)\nFile \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 242, in run_wrapper\nreturn fn()\nFile \"/mnt/jer/Sources/Sectools/mitmproxy_git_merge/libmproxy/console/init.py\", line 804, in loop\nself.statusbar.redraw()\nFile \"/mnt/jer/Sources/Sectools/mitmproxy_git_merge/libmproxy/console/init.py\", line 208, in redraw\nidx = self.master.state.view.index(self.master.currentflow) + 1\nValueError: <libmproxy.flow.Flow instance at 0x7f869810a7e8> is not in list", "issue_status": "Closed", "issue_reporting_time": "2013-07-07T19:23:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1774": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/140", "issue_id": "#140", "issue_summary": "Custom resolver for remote transparent proxy", "issue_description": "apburton commented on 1 Jul 2013\nHi\nI am running my libmproxy as a transparent proxy on a remote server. The original request destination details are sent upon socket connection and just prior to the first request (eg an SSL Client Helo). I have written a custom platform resolver to extract this message data and remove it from the socket ( msg = csock.recv(msg_size) ). However, the call to convert_to_ssl (in the Proxy.read_request_transparent function) throw an exception:\nNetLibError(\"SSL handshake error: (-1, 'Unexpected EOF')\",)\nAny ideas why it might be doing that?\nI have also tried sending this initial message out-of-band and reading it in the resolver with csock.recv(msg_size, socket.MSG_OOB) but this is not returning any data as it still appears to be 'in-band'.\nAppreciate your comments.", "issue_status": "Closed", "issue_reporting_time": "2013-07-01T17:56:15Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1775": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/135", "issue_id": "#135", "issue_summary": "mitmdump: import console", "issue_description": "Member\nmhils commented on 14 Jun 2013\n9e94fdc introduces a console import in mitmdump.\n# The unneccesary console import here is to work around a bug in pyinstaller\nThis breaks mitmdump compatibility with windows as urwid isn't available. I don't know what kind of bug this is referring to. Any chance that there is a different workaround without these implications?", "issue_status": "Closed", "issue_reporting_time": "2013-06-14T18:21:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1776": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/133", "issue_id": "#133", "issue_summary": "0.9 sudden failure", "issue_description": "sashka commented on 8 Jun 2013\nI run mitmproxy 0.9 on OS X 10.8.3.\nIt suddenly failed with a traceback after all:\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 73, in <module>\n    m.run()\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 595, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/Library/Python/2.7/site-packages/urwid/raw_display.py\", line 242, in run_wrapper\n    return fn()\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 818, in loop\n    self.prompt_execute(k)\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 752, in prompt_execute\n    msg = p(txt, *args)\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/flowview.py\", line 344, in edit\n    self.flow.response = flow.Response(self.flow.request, 200, \"OK\", flow.ODictCaseless(), \"\", None)\nTypeError: __init__() takes at least 8 arguments (7 given)\nI can hardly reproduce that :(", "issue_status": "Closed", "issue_reporting_time": "2013-06-08T12:28:05Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1777": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/130", "issue_id": "#130", "issue_summary": "Third-party viewers", "issue_description": "kballenegger commented on 22 May 2013\nThis is not so much an issue as a question I cannot find an answer for in the documentation.\nI'm trying to build a third-party viewer. My use case is this: I routinely use mitmproxy to inspect requests whose request and response body is encrypted and base-64 encoded.\nCurrently, I have a program that will decrypt the request and print the JSON body. I'd like to automate it in some fashion with mitmproxy.\nI've read through the code in contentview.py, and it seems like I could somehow hook into the view / mode system. I see a comment which implies some form of support for third-party viewers:\n # Third-party viewers can fail in unexpected ways...\nhttps://github.com/cortesi/mitmproxy/blob/master/libmproxy/console/contentview.py#L462\nSo\u2026 my question is:\nWould a custom viewer be the best option here? I want the request proxied as is, the decryption is only so that I can inspect it.\nWhat would be the best way to write a custom viewer?\nCould that custom viewer then call the json viewer, for prettification?", "issue_status": "Closed", "issue_reporting_time": "2013-05-22T06:04:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1778": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/128", "issue_id": "#128", "issue_summary": "Content-Length header is being lowercased", "issue_description": "Contributor\nLordMike commented on 21 May 2013\nHi,\nI've been trying to work with mitmproxy (awesome project) for a day, trying to figure out why the embedded browser in an application was giving me \"Unable to display webpage\"-pages when proxied through mitmproxy.\nIt turns out, via. Fiddler, that when Mitmproxy is being used, the Content-Length header is being renamed \"content-Length\". If I in fiddler, intercept the response and rename it to \"Content-Length\", it displays the webpage as expected.\nI've been trying to search for the phrase in the source, but I can't find it anywhere. I'll debug to see if it happens for all requests, or just this one page the embedded browser is viewing.\nThe command for Mitmproxy was:\n./mitmdump -p 8001\nNothing fancy :P\nMike", "issue_status": "Closed", "issue_reporting_time": "2013-05-21T13:26:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1779": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/127", "issue_id": "#127", "issue_summary": "https requests crash when running mitmproxy", "issue_description": "bustavo commented on 20 May 2013\nThis is the error I get when running mitmproxy.\nI checked this post:\nhttps://github.com/cortesi/mitmproxy/issues/117\nI am already running pyOpenSSL 0.13\nDoes anyone know what might be wrong?\nThanks\nError in processing of request from 127.0.0.1:53236\nTraceback (most recent call last):\nFile \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 353, in request_thread\nself.handle_connection(request, client_address)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 533, in handle_connection\nh.handle()\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 188, in handle\nwhile self.handle_request(cc) and not cc.close:\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 203, in handle_request\nrequest = self.read_request(cc)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 452, in read_request\nreturn self.read_request_proxy(client_conn)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 386, in read_request_proxy\ndummycert = self.find_cert(client_conn, host, port, host)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 316, in find_cert\nconn = self.get_server_connection(cc, \"https\", host, port, sni)\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 176, in get_server_connection\nself.server_conn.connect()\nFile \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 75, in connect\nself.convert_to_ssl(cert=clientcert, sni=self.sni)\nFile \"/Library/Python/2.7/site-packages/netlib/tcp.py\", line 198, in convert_to_ssl\nself.connection.set_tlsext_host_name(sni)\nAttributeError: '_socketobject' object has no attribute 'set_tlsext_host_name'", "issue_status": "Closed", "issue_reporting_time": "2013-05-19T23:07:08Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1780": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/126", "issue_id": "#126", "issue_summary": "Android Browser response crashes mitmproxy", "issue_description": "Contributor\nFuzion24 commented on 17 May 2013\nError in processing of request from 10.0.1.187:33816\nTraceback (most recent call last):\nFile \"/usr/local/lib/python2.7/site-packages/netlib/tcp.py\", line 341, in request_thread\nself.handle_connection(request, client_address)\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 533, in handle_connection\nh.handle()\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 188, in handle\nwhile self.handle_request(cc) and not cc.close:\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 203, in handle_request\nrequest = self.read_request(cc)\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 452, in read_request\nreturn self.read_request_proxy(client_conn)\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/proxy.py\", line 392, in read_request_proxy\nself.convert_to_ssl(dummycert, self.config.certfile or self.config.cacert, handle_sni=sni)\nFile \"/usr/local/lib/python2.7/site-packages/netlib/tcp.py\", line 287, in convert_to_ssl\nself.connection.do_handshake()\nTypeError: 'NoneType' object is not callable", "issue_status": "Closed", "issue_reporting_time": "2013-05-16T18:36:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1781": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/125", "issue_id": "#125", "issue_summary": "mitmproxy should check LC_CTYPE before LANG when testing console environment", "issue_description": "jeremy-w commented on 16 May 2013\nWhen I run mitmproxy 0.9, I see:\n% mitmproxy --version\nmitmproxy 0.9\n% mitmproxy\nError: mitmproxy requires a UTF console environment.\nSet your LANG enviroment variable to something like en_US.UTF-8\nBut my console environment is UTF-8 already:\n% locale\nLANG=\nLC_COLLATE=\"C\"\nLC_CTYPE=\"UTF-8\"\nLC_MESSAGES=\"C\"\nLC_MONETARY=\"C\"\nLC_NUMERIC=\"C\"\nLC_TIME=\"C\"\nLC_ALL=\nWhen I check the locale(1) manpage, it says that LC_ALL, if set, overrides LC_*, and that LANG is just a fallback for unset LC_* values. But every possible LC_* value other than LC_ALL is set, so there is no need to set either LC_ALL or LANG.\n% uname -v\nDarwin Kernel Version 12.3.0: Sun Jan  6 22:37:10 PST 2013; root:xnu-2050.22.13~1/RELEASE_X86_64", "issue_status": "Closed", "issue_reporting_time": "2013-05-16T04:57:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1782": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/123", "issue_id": "#123", "issue_summary": "Crash with \"UnicodeEncodeError: 'latin-1' codec can't encode character...\"", "issue_description": "ncoleman commented on 10 May 2013\nNew install, this happens with both 0.8 and latest pull from git. I also pulled latest netlib from git, and I updated urwid to latest 1.1.1.\nOn first use, mitmproxy opens ok and displays help ok. When I set browser to use mitm as proxy, mitmproxy immediately crashes with backtrace:\nTraceback (most recent call last): File \"/usr/bin/mitmproxy\", line 67, in <module> m.run() File \"/usr/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 595, in run self.ui.run_wrapper(self.loop) File \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 242, in run_wrapper return fn() File \"/usr/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 804, in loop size = self.drawscreen() .... File \"/usr/lib/python2.7/site-packages/urwid/widget.py\", line 1008, in render return apply_text_layout(text, attr, trans, maxcol) File \"/usr/lib/python2.7/site-packages/urwid/canvas.py\", line 1291, in apply_text_layout text[s.offs:s.end]) File \"/usr/lib/python2.7/site-packages/urwid/util.py\", line 121, in apply_target_encoding s = s.encode( _target_encoding ) UnicodeEncodeError: 'latin-1' codec can't encode character u'\\u2190' in position 0: ordinal not in range(256)\nThis happens with 0.8 and 0.9 pulled from git. I wonder if this question in StackOverflow provides an answer: http://stackoverflow.com/questions/3942888/unicodeencodeerror-latin-1-codec-cant-encode-character\nThe bt makes it look like it is a bug in urwid, but why is this (apparently, since no one else is reporting it) happening only to me?. Firefox is set to auto detect encoding, and the crash happens on any random page I request. My LANG environment is xxxx.UTF-8.", "issue_status": "Closed", "issue_reporting_time": "2013-05-10T01:51:06Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1783": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/122", "issue_id": "#122", "issue_summary": "tnetstring exception while writing flow: ValueError, no encoding specified for unicode string", "issue_description": "jeremy-w commented on 25 Apr 2013\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 64, in <module>\n    m.run()\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 539, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/Library/Python/2.7/site-packages/urwid/raw_display.py\", line 237, in run_wrapper\n    return fn()\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 763, in loop\n    self.prompt_execute()\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 690, in prompt_execute\n    msg = p(txt, *args)\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 620, in save_one_flow\n    return self._write_flows(path, [flow])\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 614, in _write_flows\n    fw.add(i)\n  File \"/Library/Python/2.7/site-packages/libmproxy/flow.py\", line 1557, in add\n    tnetstring.dump(d, self.fo)\n  File \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 103, in dump\n    file.write(dumps(value,encoding))\n  File \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 93, in dumps\n    _rdumpq(q,0,value,encoding)\n  File \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 174, in _rdumpq\n    size = _rdumpq(q,size,v,encoding)\n  File \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 174, in _rdumpq\n    size = _rdumpq(q,size,v,encoding)\n  File \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 165, in _rdumpq\n    size = _rdumpq(q,size,item,encoding)\n  File \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 165, in _rdumpq\n    size = _rdumpq(q,size,item,encoding)\n  File \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 182, in _rdumpq\n    raise ValueError(\"must specify encoding to dump unicode strings\")\nValueError: must specify encoding to dump unicode strings\nI don't think there was anything outside the ASCII range, so maybe a u\"\" vs. \"\" string problem?\nVersions: mitmproxy 0.8.1, Python 2.7.2", "issue_status": "Closed", "issue_reporting_time": "2013-04-25T16:59:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1784": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/121", "issue_id": "#121", "issue_summary": "crash when trying to log -S error", "issue_description": "jeremy-w commented on 25 Apr 2013\nRunning mitmproxy -S --help yields:\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 63, in <module>\n    m = console.ConsoleMaster(server, opts)\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 392, in __init__\n    self.server_playback_path(options.server_replay)\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 452, in server_playback_path\n    self.statusbar.message(ret)\nAttributeError: ConsoleMaster instance has no attribute 'statusbar'\nAdding logging reveals it's trying to complain of No such file or directory.\nVersion: mitmproxy 0.8.1", "issue_status": "Closed", "issue_reporting_time": "2013-04-25T00:49:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1785": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/120", "issue_id": "#120", "issue_summary": "crash when editing header of non-existent response", "issue_description": "jeremy-w commented on 25 Apr 2013\nSetup:\nStart in reverse proxy\nTrap request\nEnter to view, tab to response, it says there's no response yet.\ne to edit, c for code\nCrash!\nBacktrace:\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 64, in <module>\n    m.run()\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 538, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/Library/Python/2.7/site-packages/urwid/raw_display.py\", line 237, in run_wrapper\n    return fn()\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 760, in loop\n    self.prompt_execute(k)\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 689, in prompt_execute\n    msg = p(txt, *args)\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/flowview.py\", line 331, in edit\n    self.flow.response = flow.Response(self.flow.request, 200, \"OK\", flow.ODictCaseless(), \"\")\nTypeError: __init__() takes at least 7 arguments (6 given)\nVersion: mitmproxy 0.8.1", "issue_status": "Closed", "issue_reporting_time": "2013-04-24T21:46:50Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1786": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/117", "issue_id": "#117", "issue_summary": "Crash with https sites in transparent proxy mode", "issue_description": "poliva commented on 17 Apr 2013\nHello,\nI am running mitmdump from git (cloned today), when I start it in transparent proxy mode (-T), it works fine for http connections, but it crashes on https connections with the following stack trace:\nError in processing of request from 192.168.10.201:50748\nTraceback (most recent call last):\nFile \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 341, in request_thread\nself.handle_connection(request, client_address)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 525, in handle_connection\nh.handle()\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 183, in handle\nwhile self.handle_request(cc) and not cc.close:\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 198, in handle_request\nrequest = self.read_request(cc)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 440, in read_request\nreturn self.read_request_transparent(client_conn)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 335, in read_request_transparent\ndummycert = self.find_cert(client_conn, host, port, host)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 308, in find_cert\nconn = self.get_server_connection(cc, \"https\", host, port, sni)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 171, in get_server_connection\nself.server_conn.connect()\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 71, in connect\nself.convert_to_ssl(cert=clientcert, sni=self.sni)\nFile \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 198, in convert_to_ssl\nself.connection.set_tlsext_host_name(sni)\nAttributeError: '_socketobject' object has no attribute 'set_tlsext_host_name'\nAnything I can do to help?", "issue_status": "Closed", "issue_reporting_time": "2013-04-17T16:28:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1787": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/115", "issue_id": "#115", "issue_summary": "EOF occurred in violation of protocol", "issue_description": "supahacka commented on 16 Apr 2013\nWhen opening https://forums.wildshadow.com/ via a mitmproxy I get\nError connecting to \"forums.wildshadow.com\": [Errno 8] _ssl.c:504: EOF occurred in violation of protocol\nIs that a known problem? Has that to do with the somewhat old TLS 1.2 php ssl bug?\nhttps://bugs.launchpad.net/ubuntu/+source/openssl/+bug/965371", "issue_status": "Closed", "issue_reporting_time": "2013-04-16T16:22:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1788": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/114", "issue_id": "#114", "issue_summary": "UX: Errors in scripts don't get displayed", "issue_description": "Member\nmhils commented on 9 Apr 2013\nHey cortesi,\nWhen using the scripting API with a script that raises an error, there is no sign in mitmdump (and I suppose mitmproxy as well) that an error has occured, unless of course you specify the -e option. I really like the event idea, but for a newcomer it might be frustrating not to know that/how his script is failing (there was one such case on irc today, I struggled with this at the beginning as well). I can of course submit a pull request printing all type='error' events to stderr for mitmdump if you would welcome such a change. Any better thoughts?", "issue_status": "Closed", "issue_reporting_time": "2013-04-08T23:53:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1789": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/111", "issue_id": "#111", "issue_summary": "Android doesn't like mitmproxy's generated certificates", "issue_description": "Contributor\nFuzion24 commented on 4 Apr 2013\nI built mitmproxy from master (and tried the .8 release). When I run mitmproxy with --no-upstream-cert it seems to work OK.\nBelow is some sample code that I've been using to play with mitmproxy:\n        try{\n        String url = \"https://www.openssl.org/\";\n        Proxy proxy = new Proxy(Proxy.Type.HTTP, new InetSocketAddress(\"127.0.0.1\", 8080));\n        HttpsURLConnection conn = (HttpsURLConnection)new URL(url).openConnection(proxy);\n        String s =  new Scanner(conn.getInputStream(),\"UTF-8\").useDelimiter(\"\\\\A\").next();\n        System.out.println(s);\n        }catch (Exception e){\n            e.printStackTrace();\n        }\nThe error I get when running this:\njavax.net.ssl.SSLProtocolException: no more data allowed for version 1 certificate\n    at sun.security.ssl.HandshakeMessage$CertificateMsg.<init>(HandshakeMessage.java:449)\n    at sun.security.ssl.ClientHandshaker.processMessage(ClientHandshaker.java:154)\n    at sun.security.ssl.Handshaker.processLoop(Handshaker.java:868)\nDoing the same on android with either conditions of upstream certs yields:\njavax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0xb851c9f0: Failure in SSL library, usually a protocol error\nerror:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol (external/openssl/ssl/s23_clnt.c:766 0xaed4c5e1:0x00000000)", "issue_status": "Closed", "issue_reporting_time": "2013-04-04T04:22:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1790": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/110", "issue_id": "#110", "issue_summary": "flow.kill() master arg is required but not exposed \"publicly\"", "issue_description": "greenbender commented on 2 Apr 2013\nIf I have a python proxy script and want to 'drop' requests for some 'bad host' it would be nice to be able to kill the flow at the request stage. I assume this is the purpose of the flow.kill() function. The flow.kill() function has a required argument called master. As far as I can tell the only place you can find 'master' in your script is context._master however using this feels a bit dirty since _master is 'private'.\ndef request(context, flow):\n    if flow.request.host.endswith(\"badhost.com\"):\n        flow.kill(context._master)\nCan _master be exposed as public or there is there a way to have master default to a sensible value?", "issue_status": "Closed", "issue_reporting_time": "2013-04-02T10:56:23Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1791": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/109", "issue_id": "#109", "issue_summary": "Crash - raise IndexError, \"no widget at position %s\"", "issue_description": "zpar-ky commented on 2 Apr 2013\nSorry if this is a terrible issue report. I'm new\nOnto the problem...\nI finally got mitmproxy working, the GUI was up and all, and I wanted to use my iPhone (iOS 6.1.2, model 4, jailbroken), the certificate was installed, the port and IP was in, and i started up mitmproxy, typed in nothing, and opened chrome and then instantly this error showed up:\nFile \"/usr/local/bin/mitmproxy\", line 64, in <module> m.run() File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 538, in run self.ui.run_wrapper(self.loop) File \"/Library/Python/2.7/site-packages/pip-1.3.1-py2.7.egg/urwid/raw_display.py\", line 242, in run_wrapper return fn() File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 747, in loop changed = self.tick(self.masterq) File \"/Library/Python/2.7/site-packages/libmproxy/flow.py\", line 1421, in tick return controller.Master.tick(self, q) File \"/Library/Python/2.7/site-packages/libmproxy/controller.py\", line 77, in tick self.handle(msg) File \"/Library/Python/2.7/site-packages/libmproxy/controller.py\", line 95, in handle m(msg) File \"/Library/Python/2.7/site-packages/libmproxy/flow.py\", line 1499, in handle_clientconnect self.add_event(\"Connect from: %s:%s\"%cc.address) File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 948, in add_event self.eventlist.set_focus(len(self.eventlist)) File \"/Library/Python/2.7/site-packages/pip-1.3.1-py2.7.egg/urwid/listbox.py\", line 178, in set_focus raise IndexError, \"No widget at position %s\" % (position,) IndexError: No widget at position 1\nI searched around here and found that typing pip install urwid==1.0.2 does downgrade to 1.0.2, and i even uninstalled 1.1.1, but still get the crash.\nP.S. - I did the downgrading/uninstalling of urwid on the root user. Maybe I have to restart my computer and login as regular user? I will try that and post result. EDIT On my regular user after restarting my computer and still got the error as soon as.", "issue_status": "Closed", "issue_reporting_time": "2013-04-01T22:12:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1792": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/108", "issue_id": "#108", "issue_summary": "Requests with NetlibError don't get recorded", "issue_description": "Member\nmhils commented on 24 Mar 2013\nRequests that raise a NetlibError (e.g. because the domain name doesn't exist) don't get recorded (in a dump file). We probably want to fix that, but we currently assume that a requests exists on some occasions so we should be careful here.\n> python mitmdump -e -w logfile\n127.0.0.1:65313: connect\n127.0.0.1 GET http://invalid.ru/\n<< 502: Error connecting to \"invalid.ru\": [Errno 11004] getaddrinfo failed\n127.0.0.1:65313: 502: Error connecting to \"invalid.ru\": [Errno 11004] getaddrinfo failed\n  -> url: http://invalid.ru/\n127.0.0.1:65313: disconnect\n  -> handled 1 requests\n\n> stat -c %s logfile\n0", "issue_status": "Closed", "issue_reporting_time": "2013-03-23T20:17:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1793": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/105", "issue_id": "#105", "issue_summary": "TypeError when running \"python setup.py install\"", "issue_description": "elee-nst commented on 11 Mar 2013\nHello,\nI just found mitmproxy and it looks ideal for some testing I am doing.\nI tried to install the latest version from github on a mac running osx 10.8.2, but got the following error.\nTraceback (most recent call last):\nFile \"setup.py\", line 95, in\ninstall_requires=[\"netlib>=\"%version.VERSION, \"urwid>=1.1\", \"pyasn1>0.1.2\", \"pyopenssl>=0.12\", \"PIL\", \"lxml\"],\nTypeError: not all arguments converted during string formatting\nI made the following (hacky) changes in setup.py to get it to install. The netlib version I got from github today still had version=0.2.2 (not the 0.9 implied by version.VERSION) so I just made it require netlib>=0.2 and it seems to be working.\ndiff --git a/setup.py b/setup.py\nindex a7ff0bf..58ba0a2 100644\n--- a/setup.py\n+++ b/setup.py\n@@ -1,6 +1,7 @@\n-from distutils.core import setup\n+#from distutils.core import setup\nimport fnmatch, os.path\nfrom libmproxy import version\n+from setuptools import setup\ndef _fnmatch(name, patternList):\nfor i in patternList:\n@@ -92,5 +93,5 @@ setup(\n\"Topic :: Internet :: Proxy Servers\",\n\"Topic :: Software Development :: Testing\"\n],\n   install_requires=[\"netlib>=\"%version.VERSION, \"urwid>=1.1\", \"pyasn1>0.1.2\", \"pyopenssl>=0.12\", \"PIL\", \"lxml\"],\n   install_requires=[\"netlib>=%s\"%'0.2', \"urwid>=1.1\", \"pyasn1>0.1.2\", \"pyopenssl>=0.12\", \"PIL\", \"lxml\"],\n)", "issue_status": "Closed", "issue_reporting_time": "2013-03-10T20:00:37Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1794": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/104", "issue_id": "#104", "issue_summary": "mitmdump -r dumpfile -w cleaned [filter] doesn't work.", "issue_description": "Member\nmhils commented on 4 Mar 2013\nFor all my flows,\npython mitmdump -r raw.dump -w clean.dump ~q ~b test\njust copies every flow from raw.dump to clean.dump, regardless of matching the filter.", "issue_status": "Closed", "issue_reporting_time": "2013-03-03T19:50:42Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1795": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/103", "issue_id": "#103", "issue_summary": "long hostname causes an ASN.1 \"string too long\" exception", "issue_description": "joeshaw commented on 27 Feb 2013\nThis may not be a mitmproxy problem exactly, but I'm not sure the right way to fix it.\nWhen trying to download files off of Rackspace's Cloud Files CDN over SSL, settings subj.CN to the hostname in certutils.dummy_cert throws an exception. Here is the full stack trace:\nException happened during processing of request from ('10.10.230.81', 54766)\nTraceback (most recent call last):\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py\", line 582, in process_request_thread\n    self.finish_request(request, client_address)\n  File \"/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py\", line 506, in finish_request\n    self.RequestHandlerClass(self.config, request, client_address, self, self.masterq)\n  File \"/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py\", line 296, in __init__\n    SocketServer.StreamRequestHandler.__init__(self, request, client_address, server)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py\", line 639, in __init__\n    self.handle()\n  File \"/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py\", line 302, in handle\n    self.handle_request(cc)\n  File \"/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py\", line 311, in handle_request\n    request = self.read_request(cc)\n  File \"/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py\", line 390, in read_request\n    certfile = self.find_cert(host, port),\n  File \"/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py\", line 363, in find_cert\n    ret = certutils.dummy_cert(self.config.certdir, self.config.cacert, host, sans)\n  File \"/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/certutils.py\", line 103, in dummy_cert\n    subj.CN = commonname\nError: [('asn1 encoding routines', 'ASN1_mbstring_ncopy', 'string too long')]\nThe hostname in question is quite long, 770e367a37c3de670b35-249b6e3248188fa4608d24ff1f31e48f.ssl.cf2.rackcdn.com.\nAny workaround?", "issue_status": "Closed", "issue_reporting_time": "2013-02-26T20:09:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1796": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/102", "issue_id": "#102", "issue_summary": "iOS Rejects mitmproxy-ca-cert.pem?", "issue_description": "Contributor\njasonanovak commented on 24 Feb 2013\nI'm running into a weird problem where I can't get iOS to accept the certificate (mitmproxy-ca-cert.pem).\nRunning OS X 10.8.2 with homebrew, I created a virtualenv for mitmproxy, which I then installed in the virtualenv using pip. I then transferred mitmproxy-ca-cert.pem to my iPhone and installed it following the instructions here, http://mitmproxy.org/doc/certinstall/ios.html. The iPhone appeared to install successfully and I was able to configure my iPhone to connect to the proxy.\nWhen observing traffic on my iPhone, I see unencrypted traffic (e.g. traffic to http://www.google.com) without any problems, but when I browse to an SSL site (https://google.com), the iPhone throws an error message.\nAny thoughts as to what the issue could be?", "issue_status": "Closed", "issue_reporting_time": "2013-02-24T03:58:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1797": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/97", "issue_id": "#97", "issue_summary": "Crash when receiving request in reverse proxy mode", "issue_description": "mrzor commented on 24 Jan 2013\nHello!\nI'm launching mitmproxy -P http://localhost:30001 -p 3001.\nUpon first request, mitmproxy crashes with the following strack trace.\nTraceback (most recent call last):\n  File \"/usr/bin/mitmproxy\", line 64, in <module>\n    m.run()\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 538, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/lib/python2.7/site-packages/urwid/raw_display.py\", line 242, in run_wrapper\n    return fn()\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 747, in loop\n    changed = self.tick(self.masterq)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/flow.py\", line 1421, in tick\n    return controller.Master.tick(self, q)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/controller.py\", line 77, in tick\n    self.handle(msg)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/controller.py\", line 95, in handle\n    m(msg)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/flow.py\", line 1499, in handle_clientconnect\n    self.add_event(\"Connect from: %s:%s\"%cc.address)\n  File \"/usr/lib/python2.7/site-packages/libmproxy/console/__init__.py\", line 948, in add_event\n    self.eventlist.set_focus(len(self.eventlist))\n  File \"/usr/lib/python2.7/site-packages/urwid/listbox.py\", line 178, in set_focus\n    raise IndexError, \"No widget at position %s\" % (position,)\nIndexError: No widget at position 1\nI'm an ArchLinux user using mitmproxy 0.8, powered by python 2.7.3, using urwid 1.1.1-1.\nAnything I can do to help?", "issue_status": "Closed", "issue_reporting_time": "2013-01-24T12:47:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1798": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/96", "issue_id": "#96", "issue_summary": "weird issue I cant figure out", "issue_description": "ASKProducts commented on 24 Jan 2013\nSo I'm running mountain lion, and I have come across an error that I cannot figure out. It was just recently working fine, and then I quit out of it ans all of a sudden whenever I try to launch it I get this message.\n    Traceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 19, in <module>\n    from libmproxy import proxy, console, cmdline, version\n  File \"/Library/Python/2.7/site-packages/libmproxy/proxy.py\", line 19, in <module>\n    from netlib import odict, tcp, http, wsgi, certutils, http_status\nImportError: No module named netlib", "issue_status": "Closed", "issue_reporting_time": "2013-01-23T22:54:19Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1799": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/95", "issue_id": "#95", "issue_summary": "Just not working", "issue_description": "ASKProducts commented on 23 Jan 2013\nI am new to all of these concepts, so I mgiht be doing something wring, but the mitmproxy just isn't working. I set it up using pip (although there was an unimaginable about of warnings that came up), and since then whenever I follow the tutorial of launching mitmproxy, then typing in i then ~q, nothing ever shows up in the screen. Anybody have any ideas? (Maybe the pip install doesn't work on mountain lion?)", "issue_status": "Closed", "issue_reporting_time": "2013-01-23T05:57:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1800": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/90", "issue_id": "#90", "issue_summary": "Dictionary comprehensions are not supported in Python <2.7", "issue_description": "geokat commented on 5 Jan 2013\nThe following line causes a syntax error for pythons older than 2.7:\nhttps://github.com/cortesi/mitmproxy/blob/master/libmproxy/authentication.py#L104\nTraceback (most recent call last):\n  File \"./mitmproxy\", line 19, in <module>\n    from libmproxy import proxy, console, cmdline, version\n  File \"/home/geo/0/mitmproxy/libmproxy/proxy.py\", line 21, in <module>\n    import authentication\n  File \"/home/geo/0/mitmproxy/libmproxy/authentication.py\", line 104\n    self.usernames = {username:token for username,token in valid_entries}\n                                       ^\nSyntaxError: invalid syntax", "issue_status": "Closed", "issue_reporting_time": "2013-01-04T22:30:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1801": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/89", "issue_id": "#89", "issue_summary": "Pretty-printing is not work?", "issue_description": "robotment commented on 4 Jan 2013\nHow can I make html or js to look better with mitmproxy? js-beautifier has built in mitmproxy, why is not work?", "issue_status": "Closed", "issue_reporting_time": "2013-01-04T08:56:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1802": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/88", "issue_id": "#88", "issue_summary": "[Enhancement] stream response to client", "issue_description": "jahrome commented on 2 Jan 2013\nhi !\nSounds not convenient to implement but it would be nice to forward server response to client on the fly to prevent streaming issues (ex: on youtube, have to download full video to start playing).\nCheers", "issue_status": "Closed", "issue_reporting_time": "2013-01-01T20:58:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1803": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/87", "issue_id": "#87", "issue_summary": "Not working on OS X 10.8 - Symbol not found: _PyInt_Check", "issue_description": "FiloSottile commented on 1 Jan 2013\nAny way I install it, I get:\n \u2714 Marvin \u2b80 mitmproxy-0.8.1 \u2b80 mitmproxy                                                                                                                                                                                     (env: mitmproxy) \nTraceback (most recent call last):\n  File \"/Users/filosottile/Envs/mitmproxy/bin/mitmproxy\", line 19, in <module>\n    from libmproxy import proxy, console, cmdline\n  File \"/Users/filosottile/Envs/mitmproxy/lib/python2.7/site-packages/libmproxy/proxy.py\", line 24, in <module>\n    import utils, flow, certutils\n  File \"/Users/filosottile/Envs/mitmproxy/lib/python2.7/site-packages/libmproxy/flow.py\", line 24, in <module>\n    import controller, version, certutils\n  File \"/Users/filosottile/Envs/mitmproxy/lib/python2.7/site-packages/libmproxy/certutils.py\", line 4, in <module>\n    import OpenSSL\n  File \"/Users/filosottile/Envs/mitmproxy/lib/python2.7/site-packages/OpenSSL/__init__.py\", line 36, in <module>\n    from OpenSSL import crypto\nImportError: dlopen(/Users/filosottile/Envs/mitmproxy/lib/python2.7/site-packages/OpenSSL/crypto.so, 10): Symbol not found: _PyInt_Check\n  Referenced from: /Users/filosottile/Envs/mitmproxy/lib/python2.7/site-packages/OpenSSL/crypto.so\n  Expected in: flat namespace\n in /Users/filosottile/Envs/mitmproxy/lib/python2.7/site-packages/OpenSSL/crypto.so", "issue_status": "Closed", "issue_reporting_time": "2013-01-01T18:25:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1804": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/86", "issue_id": "#86", "issue_summary": "domain_match not found in python 2.7 cookielib, sticky cookie not working", "issue_description": "jahrome commented on 1 Jan 2013\nHi Aldo,\nI'm wondering if I'm doing things wrong but I don't manage to use sticky cookie feature and I noticed that domain_match is not present in python 2.7 cookielib so it may explain my issue, am I missing something ?\nRegards,\nJerome", "issue_status": "Closed", "issue_reporting_time": "2013-01-01T14:46:07Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1805": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/84", "issue_id": "#84", "issue_summary": "Crash when saving edited flow", "issue_description": "Nuru commented on 31 Dec 2012\nI was trying to use mitmproxy (version 0.8.1 installed with pip on Mac OS 10.7.4) in server-replay mode to fake a response, which I thought would be easier than hacking the server for the test I was running. Turns out it wasn't.\nI edited the response body and saved the flow with no problem, except that in doing so I changed the length of the response. Unfortunately mitmproxy did not change the Content-Length: header to match, so I had to edit that, too. Then when I tried to save the flow I got this error:\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 64, in\nm.run()\nFile \"/Library/Python/2.7/site-packages/libmproxy/console/init.py\", line 538, in run\nself.ui.run_wrapper(self.loop)\nFile \"/Library/Python/2.7/site-packages/urwid/raw_display.py\", line 237, in run_wrapper\nreturn fn()\nFile \"/Library/Python/2.7/site-packages/libmproxy/console/init.py\", line 762, in loop\nself.prompt_execute()\nFile \"/Library/Python/2.7/site-packages/libmproxy/console/init.py\", line 689, in prompt_execute\nmsg = p(txt, *args)\nFile \"/Library/Python/2.7/site-packages/libmproxy/console/init.py\", line 619, in save_one_flow\nreturn self._write_flows(path, [flow])\nFile \"/Library/Python/2.7/site-packages/libmproxy/console/init.py\", line 613, in _write_flows\nfw.add(i)\nFile \"/Library/Python/2.7/site-packages/libmproxy/flow.py\", line 1557, in add\ntnetstring.dump(d, self.fo)\nFile \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 103, in dump\nfile.write(dumps(value,encoding))\nFile \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 93, in dumps\n_rdumpq(q,0,value,encoding)\nFile \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 174, in _rdumpq\nsize = _rdumpq(q,size,v,encoding)\nFile \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 174, in _rdumpq\nsize = _rdumpq(q,size,v,encoding)\nFile \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 165, in _rdumpq\nsize = _rdumpq(q,size,item,encoding)\nFile \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 165, in _rdumpq\nsize = _rdumpq(q,size,item,encoding)\nFile \"/Library/Python/2.7/site-packages/libmproxy/tnetstring.py\", line 182, in _rdumpq\nraise ValueError(\"must specify encoding to dump unicode strings\")\nValueError: must specify encoding to dump unicode strings\nAt which point there was no console display but mitmproxy was still running. The only way I found to kill it was to switch to another terminal window and kill the process.\nI was unsuccessful at trying to edit the saved flow with vi or emacs, either: after editing, mitmproxy would not load them. When I tried to load them via the UI, the UI showed \"Invalid data format.\" When I tried to load the flow with mitmproxy -S flowfile it crashed:\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 63, in\nm = console.ConsoleMaster(server, opts)\nFile \"/Library/Python/2.7/site-packages/libmproxy/console/init.py\", line 392, in init\nself.server_playback_path(options.server_replay)\nFile \"/Library/Python/2.7/site-packages/libmproxy/console/init.py\", line 451, in server_playback_path\nself.statusbar.message(ret)\nAttributeError: ConsoleMaster instance has no attribute 'statusbar'", "issue_status": "Closed", "issue_reporting_time": "2012-12-31T07:22:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1806": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/79", "issue_id": "#79", "issue_summary": "Crash when the PAGER is `less -R`", "issue_description": "alexdong commented on 18 Dec 2012\n> echo $PAGER\nless -R\nThen if I use < or > to navigate, I will get the following exception.\n\u203a mitmproxy -nr game_subway-bmx\n\nTraceback (most recent call last):\n  File \"/usr/local/bin/mitmproxy\", line 67, in <module>\n    m.run()\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 583, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/Library/Python/2.7/site-packages/urwid/raw_display.py\", line 242, in run_wrapper\n    return fn()\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 812, in loop\n    k = self.view.keypress(size, k)\n  File \"/Library/Python/2.7/site-packages/urwid/container.py\", line 1103, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/flowview.py\", line 546, in keypress\n    self.master.spawn_external_viewer(conn.content, t)\n  File \"/Library/Python/2.7/site-packages/libmproxy/console/__init__.py\", line 546, in spawn_external_viewer\n    subprocess.call(cmd, shell=shell)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py\", line 493, in call\n    return Popen(*popenargs, **kwargs).wait()\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py\", line 679, in __init__\n    errread, errwrite)\n  File \"/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/subprocess.py\", line 1228, in _execute_child\n    raise child_exception\nOSError: [Errno 2] No such file or directory", "issue_status": "Closed", "issue_reporting_time": "2012-12-17T22:21:09Z", "fixed_by": "#81", "pull_request_summary": "Fix external viewer function by using shlex", "pull_request_description": "Contributor\nkanzure commented on 25 Dec 2012\nThis makes spawn_external_viewer not crash when $EDITOR or $PAGER have\nspaces or multiple arguments.\nIn addition, spawn_external_viewer now chmods the file to read-only to\nremind users who use only an $EDITOR that this function does not read\nthe file when the user returns.\nAlso, some of the redundant exception case handling for editing has been\nconsolidated.\nfixes #79", "pull_request_status": "Merged", "issue_fixed_time": "2012-12-30T08:43:57Z", "files_changed": [["26", "libmproxy/console/__init__.py"], ["2", "libmproxy/console/flowview.py"]]}, "1807": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/77", "issue_id": "#77", "issue_summary": "Host name in URL not shown for https requests", "issue_description": "leoluk commented on 13 Dec 2012\nThe current release displays the URL just fine:\nhttps://encrypted.google.com/search?q=foo\nThe current development version, however, only displays the IP:\nhttps://173.194.70.101/search?q=foo\nHTTP requests are not affected. The issue appears first in 9130cd6.", "issue_status": "Closed", "issue_reporting_time": "2012-12-12T21:02:56Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1808": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/76", "issue_id": "#76", "issue_summary": "Multiple scripts and script arguments.", "issue_description": "s3c commented on 11 Dec 2012\nmitmproxy is one hell of a tool but I've come across some drawbacks. Looking at the code template and usage it seems that only one script can be active at a time. A nice addition would be to allow multiple scripts per mitmproxy process that would process responses in reverse order to request, ie, the first script would get request first but response last. This would enable multiple scripts per process to be chained.\nPassing arguments to scripts would be usefull as well, perhaps a command line parameter. This would enable slightly tweaking the functionality since I'm finding myself copying scripts over and making slight modifications and then chaining proxies together at the moment.\nI'd be happy to help out but would prefer some guidence of how you would like these features implemented. No used in submitting a patch that doesn't get accepted. Any suggestions?", "issue_status": "Closed", "issue_reporting_time": "2012-12-11T12:05:59Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1809": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/73", "issue_id": "#73", "issue_summary": "crash when editing the response to an intercepted request", "issue_description": "ge0rg commented on 4 Dec 2012\nWhen you try to create a response from the UI, mitmproxy crashes.\nSteps to reproduce:\nset an intercept option\nchoose the pending request ()\nswitch to the response ()\nedit some field (, )\nResult:\n    Traceback (most recent call last):\n      File \"./mitmproxy\", line 67, in <module>\n        m.run()\n      File \"/usr/src/mitmproxy/libmproxy/console/__init__.py\", line 583, in run\n        self.ui.run_wrapper(self.loop)\n      File \"/usr/lib/python2.7/dist-packages/urwid/raw_display.py\", line 242, in run_wrapper\n        return fn()\n      File \"/usr/src/mitmproxy/libmproxy/console/__init__.py\", line 806, in loop\n        self.prompt_execute(k)\n      File \"/usr/src/mitmproxy/libmproxy/console/__init__.py\", line 740, in prompt_execute\n        msg = p(txt, *args)\n      File \"/usr/src/mitmproxy/libmproxy/console/flowview.py\", line 340, in edit\n        self.flow.response = flow.Response(self.flow.request, 200, \"OK\", flow.ODictCaseless(), \"\", None)\n    TypeError: __init__() takes at least 8 arguments (7 given)", "issue_status": "Closed", "issue_reporting_time": "2012-12-04T13:36:54Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1810": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/72", "issue_id": "#72", "issue_summary": "Full-width bars are less than full-width under tmux/screen", "issue_description": "Contributor\nkanzure commented on 4 Dec 2012\nThis wasn't an issue under mitmproxy 0.8 and urwid 1.0.2, but the issue occurred after upgrading mitmproxy to 0.8 as well as in the current master (09c29e8). Also, urwid 1.1.1 shows the same.", "issue_status": "Closed", "issue_reporting_time": "2012-12-04T02:49:55Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1811": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/71", "issue_id": "#71", "issue_summary": "AttributeError when trying to launch an editor with the \"v\" shortcut", "issue_description": "Contributor\nkanzure commented on 4 Dec 2012\nThis occurs on the master branch when I attempt to edit a flow's request's content with the \"v\" shortcut.\nTraceback (most recent call last):\n  File \"/home/bryan/.virtualenvs/envname/bin/mitmproxy\", line 7, in <module>\n    execfile(__file__)\n  File \"/home/bryan/.virtualenvs/envname/src/mitmproxy/mitmproxy\", line 67, in <module>\n    m.run()\n  File \"/home/bryan/.virtualenvs/envname/src/mitmproxy/libmproxy/console/__init__.py\", line 583, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/home/bryan/.virtualenvs/envname/lib/python2.7/site-packages/urwid/raw_display.py\", line 242, in run_wrapper\n    return fn()\n  File \"/home/bryan/.virtualenvs/envname/src/mitmproxy/libmproxy/console/__init__.py\", line 812, in loop\n    k = self.view.keypress(size, k)\n  File \"/home/bryan/.virtualenvs/envname/lib/python2.7/site-packages/urwid/container.py\", line 1103, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/home/bryan/.virtualenvs/envname/src/mitmproxy/libmproxy/console/flowview.py\", line 545, in keypress\n    self.master.spawn_external_viewer(conn.content, t)\n  File \"/home/bryan/.virtualenvs/envname/src/mitmproxy/libmproxy/console/__init__.py\", line 546, in spawn_external_viewer\n    subprocess.call(cmd, shell=shell)\n  File \"/usr/lib/python2.7/subprocess.py\", line 493, in call\n    return Popen(*popenargs, **kwargs).wait()\n  File \"/usr/lib/python2.7/subprocess.py\", line 679, in __init__\n    errread, errwrite)\n  File \"/usr/lib/python2.7/subprocess.py\", line 1249, in _execute_child\n    raise child_exception\nAttributeError: 'NoneType' object has no attribute 'rfind'", "issue_status": "Closed", "issue_reporting_time": "2012-12-04T02:39:32Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1812": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/70", "issue_id": "#70", "issue_summary": "Python 2.6 and argparse", "issue_description": "lsowen commented on 30 Nov 2012\nGood afternoon,\nYour README file states that python 2.6 is supported, but python 2.6 does not contain argparse, just the deprecated optparse module.\nNot sure what the route forward is, but I wanted to bring it to your attention.\nThanks,\nLogan", "issue_status": "Closed", "issue_reporting_time": "2012-11-29T18:45:51Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1813": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/68", "issue_id": "#68", "issue_summary": "fatal error: 'libxml/xmlversion.h' file not found", "issue_description": "lardissone commented on 21 Nov 2012\nI'm getting this error when trying to install it with pip in Mac OS X Mountain Lion.\nThis is the complete pip.log:\nhttps://gist.github.com/4125461\nI've all the latest XCode Command Line Tools installed.\n1", "issue_status": "Closed", "issue_reporting_time": "2012-11-21T15:32:17Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1814": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/67", "issue_id": "#67", "issue_summary": "Preview HTML using lynx", "issue_description": "mrzor commented on 9 Nov 2012\nI'm pretty sure the issue is me not getting it.\nI edited my ~/.mailcap, tried both those lines:\ntext/html; lynx %s; nametemplate=%s.html\ntext/html; lynx %s\nReopened my shiny 0.8 mitmproxy, and sadly, still no lynx while using 'v' on response pages (open in external viewer, if I'm not mistaken).\nAm I doing something wrong?", "issue_status": "Closed", "issue_reporting_time": "2012-11-08T20:09:11Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1815": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/66", "issue_id": "#66", "issue_summary": "Crash on openSUSE 12.1", "issue_description": "hendersj commented on 27 Oct 2012\nIf I run mitmproxy and set Firefox up to use it, I get the following crash:\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 64, in\nm.run()\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/console/init.py\", line 538, in run\nself.ui.run_wrapper(self.loop)\nFile \"/usr/local/lib64/python2.7/site-packages/urwid/raw_display.py\", line 242, in run_wrapper\nreturn fn()\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/console/init.py\", line 747, in loop\nchanged = self.tick(self.masterq)\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/flow.py\", line 1421, in tick\nreturn controller.Master.tick(self, q)\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/controller.py\", line 77, in tick\nself.handle(msg)\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/controller.py\", line 95, in handle\nm(msg)\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/flow.py\", line 1499, in handle_clientconnect\nself.add_event(\"Connect from: %s:%s\"%cc.address)\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/console/init.py\", line 948, in add_event\nself.eventlist.set_focus(len(self.eventlist))\nFile \"/usr/local/lib64/python2.7/site-packages/urwid/listbox.py\", line 178, in set_focus\nraise IndexError, \"No widget at position %s\" % (position,)\nIndexError: No widget at position 1\nI also get a crash if I try to bring up the eventlog:\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 64, in\nm.run()\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/console/init.py\", line 538, in run\nself.ui.run_wrapper(self.loop)\nFile \"/usr/local/lib64/python2.7/site-packages/urwid/raw_display.py\", line 242, in run_wrapper\nreturn fn()\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/console/init.py\", line 766, in loop\nk = self.view.keypress(size, k)\nFile \"/usr/local/lib64/python2.7/site-packages/urwid/container.py\", line 1103, in keypress\nreturn self.body.keypress( (maxcol, remaining), key )\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 208, in keypress\nself.master.toggle_eventlog()\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/console/init.py\", line 430, in toggle_eventlog\nself.view_flowlist()\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/console/init.py\", line 585, in view_flowlist\nself.body = flowlist.BodyPile(self)\nFile \"/usr/local/lib/python2.7/site-packages/libmproxy/console/flowlist.py\", line 76, in init\nself.focus = 0\nAttributeError: can't set attribute\nThey both seem to be related, but I'm not sure - any suggestions on how to resolve?\nThis was installed using pip earlier this evening. The system is x86_64 openSUSE 12.1 with the current updates (as of now) applied.\nmitmdump seems to work OK.", "issue_status": "Closed", "issue_reporting_time": "2012-10-27T06:11:40Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1816": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/65", "issue_id": "#65", "issue_summary": "Replacement of entire file", "issue_description": "alberto-bottarini commented on 11 Oct 2012\nHello, congrats for mitmproxy :)\nIt's possibile to completely replace a response body with a local file? I tried this way but I failed:\n--replace=:site.css:.*:~/site.css\nthanks", "issue_status": "Closed", "issue_reporting_time": "2012-10-11T07:38:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1817": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/64", "issue_id": "#64", "issue_summary": "HTTP CONNECT method (for ssl) not supported?", "issue_description": "patjack commented on 10 Oct 2012\nI'm trying to proxy a connection that uses the HTTP CONNECT method and the request never shows up in the command window (although I know it's happening). Is this currently not supported in Mitmproxy? Thanks!", "issue_status": "Closed", "issue_reporting_time": "2012-10-10T00:18:02Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1818": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/63", "issue_id": "#63", "issue_summary": "Editing dumped file then client-replay", "issue_description": "virindh commented on 19 Sep 2012\nI am using mitmdump to dump some network activity. Then I use textedit on osx to edit then (literally changing one line), but when I try client replay it gives Could not load file: Invalid data format. How do I fix this???? I also tried simple replay w/o editing it and it gives the issue", "issue_status": "Closed", "issue_reporting_time": "2012-09-18T23:12:31Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1819": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/58", "issue_id": "#58", "issue_summary": "Replace optparse with argparse", "issue_description": "Member\nmhils commented on 14 Aug 2012\nHi cortesi,\nmitmproxy currently uses the deprecated optparse for handling console argument parsing. Would you welcome a patch that replaces optparse with argparse or are there any special reasons for sticking with optparse?\nI am asking because we'd love to have support for argument files in HoneyProxy.\nThanks!\nMax", "issue_status": "Closed", "issue_reporting_time": "2012-08-14T14:12:36Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1820": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/55", "issue_id": "#55", "issue_summary": "decoded decorator leads to content encoding failures.", "issue_description": "Member\nmhils commented on 24 Jul 2012\nAs already discussed yesterday, employing the decoded decorator in handle_response breaks some responses. I have not found a page where this is always reproducible, but it occasionally happens to me on www.spiegel.de\nHere is a mitmproxy dump containing two requests to the same resource of which the first one fails. These dumps were produced before applying decorated to the response:\n            if self.o.wfile:\n                self.fwriter.add(flow)\n            with decoded(flow.response):\n                pass\n            if self.o.wfile2:\n                self.fwriter2.add(flow)\nThis file contains the same request after the decoded decorator has been applied. One possible solution might be caching the encoded version in HTTPMsg.decode. While this is definitely not a very nice and clean solution, it would guarantee that every flow get passed as-is.", "issue_status": "Closed", "issue_reporting_time": "2012-07-24T12:33:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1821": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/50", "issue_id": "#50", "issue_summary": "support for upstream proxies", "issue_description": "mubix commented on 9 Jul 2012\nwrapping in proxychains works however DNS is still done locally instead of the proxychained, mitmproxy.\nso would love to have the following happen:\nHTTP request for www.example.com -> mitmproxy forwards request to upstream HTTP proxy -> HTTP Proxy performs DNS and request, response sent to mitmproxy -> mitmproxy adds a few bytes-> modified response provided", "issue_status": "Closed", "issue_reporting_time": "2012-07-09T03:28:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1822": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/49", "issue_id": "#49", "issue_summary": "mitmproxy-0.8.tar.gz gzipped twice", "issue_description": "Contributor\nhackedd commented on 4 Jul 2012\nHi,\nI noticed that the current stable download (at http://mitmproxy.org/download/mitmproxy-0.8.tar.gz) is gzipped twice:\n$ tar -xzf mitmproxy-0.8.tar.gz \ntar: This does not look like a tar archive\ntar: Skipping to next header\ntar: Exiting with failure status due to previous errors\n$ file mitmproxy-0.8.tar.gz\nmitmproxy-0.8.tar.gz: gzip compressed data, from Unix\n$ gunzip mitmproxy-0.8.tar.gz\n$ file mitmproxy-0.8.tar\nmitmproxy-0.8.tar: gzip compressed data, was \"dist/mitmproxy-0.8.tar\", last modified: Mon Apr  9 06:44:19 2012, max compression\n$ tar -xzf mitmproxy-0.8.tar\n$", "issue_status": "Closed", "issue_reporting_time": "2012-07-03T21:04:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1823": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/47", "issue_id": "#47", "issue_summary": "exception throw on request", "issue_description": "Br3nda commented on 30 Jun 2012\nRunning from the latest in git master, I get the following exception flashed briefly, then disappear.\nFile \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 163, in request_thread\nself.handle_connection(request, client_a File \"/usr/local/lib/python2.7/dist-packages/netlib/tcp.py\", line 163, in request_thread\nself.handle_connection(request, client_address)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 352, in handle_connection\nh.handle()\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 118, in handle\nwhile self.handle_request(cc) and not cc.close:\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 139, in handle_request\nrequest = self.read_request(cc)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 293, in read_request\nmethod, scheme, host, port, path, httpversion = http.parse_init_proxy(line)\nTypeError: 'NoneType' object is not iterable\nddress)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 352, in handle_connection\nh.handle()\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 118, in handle\nwhile self.handle_request(cc) and not cc.close:\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 139, in handle_request\nrequest = self.read_request(cc)\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/proxy.py\", line 293, in read_request\nmethod, scheme, host, port, path, httpversion = http.parse_init_proxy(line)\nTypeError: 'NoneType' object is not iterable", "issue_status": "Closed", "issue_reporting_time": "2012-06-30T03:31:49Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1824": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/45", "issue_id": "#45", "issue_summary": "multipart post not supported?", "issue_description": "Centaur commented on 20 Jun 2012\nI am debugging an oauth client and mitmproxy can catch all GET request and application/x-www-form-urlencoded POST request but multipart/form-data POST request no show.", "issue_status": "Closed", "issue_reporting_time": "2012-06-20T07:36:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1825": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/44", "issue_id": "#44", "issue_summary": "Stick window focus to bottom when new requests are intercepted", "issue_description": "dlo commented on 9 Jun 2012\nNo description provided.", "issue_status": "Closed", "issue_reporting_time": "2012-06-08T19:02:24Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1826": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/40", "issue_id": "#40", "issue_summary": "Colors not suited for white terminal background", "issue_description": "rombert commented on 11 May 2012\n(Python 2.7.2 , OpenSUSE Linux 12.1, Gnome )\nWhen launching mitmproxy I get very soft colours on a white background, which is not readable at all. I guess mitmproxy should force a black background color or add a command-line switch to allow the user to specify the background color.", "issue_status": "Closed", "issue_reporting_time": "2012-05-11T12:23:16Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1827": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/39", "issue_id": "#39", "issue_summary": "Problem with upstream-cert", "issue_description": "nomex commented on 11 Apr 2012\nHi, I'm runnin mitmproxy with --upstream-cert, and when I enter into https://www.google.com i'm getting this error:\nException happened during processing of request from ('192.168.XX.XX', 56121)\nTraceback (most recent call last):\nFile \"/usr/lib/python2.6/SocketServer.py\", line 560, in process_request_thread\nself.finish_request(request, client_address)\nFile \"/usr/local/lib/python2.6/dist-packages/libmproxy/proxy.py\", line 506, in finish_request\nself.RequestHandlerClass(self.config, request, client_address, self, self.masterq)\nFile \"/usr/local/lib/python2.6/dist-packages/libmproxy/proxy.py\", line 296, in init\nSocketServer.StreamRequestHandler.init(self, request, client_address, server)\nFile \"/usr/lib/python2.6/SocketServer.py\", line 617, in init\nself.handle()\nFile \"/usr/local/lib/python2.6/dist-packages/libmproxy/proxy.py\", line 302, in handle\nself.handle_request(cc)\nFile \"/usr/local/lib/python2.6/dist-packages/libmproxy/proxy.py\", line 311, in handle_request\nrequest = self.read_request(cc)\nFile \"/usr/local/lib/python2.6/dist-packages/libmproxy/proxy.py\", line 390, in read_request\ncertfile = self.find_cert(host, port),\nFile \"/usr/local/lib/python2.6/dist-packages/libmproxy/proxy.py\", line 361, in find_cert\nsans = cert.altnames\nFile \"/usr/local/lib/python2.6/dist-packages/libmproxy/certutils.py\", line 211, in altnames\naltnames.append(i[0].asOctets())\nAttributeError: IA5String instance has no attribute 'asOctets'\nThanks", "issue_status": "Closed", "issue_reporting_time": "2012-04-11T15:01:26Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1828": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/38", "issue_id": "#38", "issue_summary": "requires PIL", "issue_description": "neuhaus commented on 3 Apr 2012\nthe PIL requirement is not listed in the README\nPIL is available at http://www.pythonware.com/products/pil/", "issue_status": "Closed", "issue_reporting_time": "2012-04-03T15:14:34Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1829": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/37", "issue_id": "#37", "issue_summary": "Installing on Mac OS X 10.7.3", "issue_description": "carlj commented on 20 Mar 2012\nHi,\ni downloaded the source and installed mitmproxy with the following command:\nsudo python setup.py install\nIf i try to start mitmproxy with:\n./mitmproxy -p 8899\nI get the following errors:\nTraceback (most recent call last):\nFile \"./mitmproxy\", line 19, in\nfrom libmproxy import proxy, console, cmdline\nFile \"/Users/carl.jahn/Downloads/cortesi-mitmproxy-bc3ba4c/libmproxy/proxy.py\", line 24, in\nimport utils, flow, certutils\nFile \"/Users/carl.jahn/Downloads/cortesi-mitmproxy-bc3ba4c/libmproxy/certutils.py\", line 2, in\nfrom pyasn1.type import univ, constraint, char, namedtype, tag\nImportError: No module named pyasn1.type\nHow can i fix the errors?", "issue_status": "Closed", "issue_reporting_time": "2012-03-19T22:22:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1830": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/31", "issue_id": "#31", "issue_summary": "no dummy wildcard SSL certs", "issue_description": "sektoid0 commented on 25 Feb 2012\nLooks like the dummy SSL cert's CN is generated from the HOST header which doesn't really work with sites using wildcard certs. It would be more convenient if the dummy's CN was generated based on the pre-fetched real cert's CN.\nDoes it sound feasible?", "issue_status": "Closed", "issue_reporting_time": "2012-02-24T19:06:45Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1831": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/30", "issue_id": "#30", "issue_summary": "AssertionError in m.run() (looks to be urwid related)", "issue_description": "Fitblip commented on 17 Feb 2012\nSo i'm not sure why this is happening, I've downloaded and compiled the newest version of urwid, and pulled from you git repo, for some reason this keeps freaking out whenever I go to get more detail about a connection.\nUbuntu 10.04LTS x86_64 running python 2.6\nVersion 0.6 seems to work fine, although I was getting a traceback with something last night I don't remember...\nTraceback (most recent call last):\nFile \"./mitmproxy\", line 61, in\nm.run()\nFile \"/tmp/mitmproxy/libmproxy/console/init.py\", line 541, in run\nself.ui.run_wrapper(self.loop)\nFile \"/usr/lib/pymodules/python2.6/urwid/raw_display.py\", line 234, in run_wrapper\nreturn fn()\nFile \"/tmp/mitmproxy/libmproxy/console/init.py\", line 733, in loop\nsize = self.drawscreen()\nFile \"/tmp/mitmproxy/libmproxy/console/init.py\", line 717, in drawscreen\nself.ui.draw_screen(size, canvas)\nFile \"/usr/lib/pymodules/python2.6/urwid/raw_display.py\", line 601, in draw_screen\nfor row in r.content():\nFile \"/usr/lib/pymodules/python2.6/urwid/canvas.py\", line 555, in content\nyield shard_body_row(sbody)\nFile \"/usr/lib/pymodules/python2.6/urwid/canvas.py\", line 787, in shard_body_row\nrow.extend(content_iter.next())\nFile \"/usr/lib/pymodules/python2.6/urwid/canvas.py\", line 378, in content\nassert trim_left >= 0 and trim_left < maxcol\nAssertionError", "issue_status": "Closed", "issue_reporting_time": "2012-02-16T18:58:20Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1832": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/28", "issue_id": "#28", "issue_summary": "Add to homebrew?", "issue_description": "tobiastom commented on 15 Feb 2012\nMight be nice to install it with just brew install mitmproxy on Mac OS X.", "issue_status": "Closed", "issue_reporting_time": "2012-02-15T14:35:30Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1833": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/27", "issue_id": "#27", "issue_summary": "Allow JUNK HTTP method", "issue_description": "ghost commented on 9 Feb 2012\nWhen testing certain configurations it is not uncommon to get unusual results with a completely invalid HTTP method such as \"JUNK\".\nCan \"junk\" be added to the changing of request methods to generate a JUNK request? EG:\nJUNK /some.jsp HTTP/1.1\nHost: target.tld\n...\nP", "issue_status": "Closed", "issue_reporting_time": "2012-02-08T20:20:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1834": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/26", "issue_id": "#26", "issue_summary": "Cannot \u201csave request/response body\u201d to file", "issue_description": "remi commented on 8 Feb 2012\nWhen I\u2019m browsing a connection, I want to save the request and response body to a file (with the b key).\nHowever, when I press b, I get the \"Save body request:\" prompt line, but after entering a filename (eg. foo.txt), I get a Python traceback that is pretty hard to copy/paste since it's merged with the current lines on the terminal.\nThe last lines of the traceback are these:\npath = os.path.expanduser(path)\n   NameError: global name 'os' is not defined\nHowever, I am able to save a \"flow\" (with the W key) to foo.txt just fine.", "issue_status": "Closed", "issue_reporting_time": "2012-02-08T15:52:58Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1835": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/25", "issue_id": "#25", "issue_summary": "Requires urwid", "issue_description": "brendanmaguire commented on 8 Feb 2012\nAfter a fresh install of version 0.6 from PyPi, when running mitmproxy I get the following error:\nTraceback (most recent call last):\nFile \"/usr/local/bin/mitmproxy\", line 19, in\nfrom libmproxy import proxy, controller, console, utils, flow, cmdline\nFile \"/usr/local/lib/python2.7/dist-packages/libmproxy/console.py\", line 19, in\nimport urwid\nImportError: No module named urwid\nsetup.py should probably reference urwid (I see it does in the latest code on github).", "issue_status": "Closed", "issue_reporting_time": "2012-02-08T14:14:18Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1836": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/24", "issue_id": "#24", "issue_summary": "mitmproxy crashes when client connects", "issue_description": "nocksock commented on 8 Feb 2012\nHi,\nWhen I run mitmproxy everything seems fine, until a client connects and requests data. Then it Fails with this:\nTraceback (most recent call last):\n  File \"/Users/nilsriedemann/bin/mitmproxy\", line 68, in <module>\n    m.run()\n  File \"/Users/nilsriedemann/bin/src/mitmproxy-0.6/libmproxy/console.py\", line 1249, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/Library/Python/2.7/site-packages/urwid-1.0.1-py2.7-macosx-10.7-intel.egg/urwid/raw_display.py\", line 237, in run_wrapper\n    return fn()\n  File \"/Users/nilsriedemann/bin/src/mitmproxy-0.6/libmproxy/console.py\", line 1568, in loop\n    changed = self.tick(self.masterq)\n  File \"/Users/nilsriedemann/bin/src/mitmproxy-0.6/libmproxy/flow.py\", line 1204, in tick\n    return controller.Master.tick(self, q)\n  File \"/Users/nilsriedemann/bin/src/mitmproxy-0.6/libmproxy/controller.py\", line 77, in tick\n    self.handle(msg)\n  File \"/Users/nilsriedemann/bin/src/mitmproxy-0.6/libmproxy/controller.py\", line 95, in handle\n    m(msg)\n  File \"/Users/nilsriedemann/bin/src/mitmproxy-0.6/libmproxy/flow.py\", line 1268, in handle_clientconnect\n    self.add_event(\"Connect from: %s:%s\"%cc.address)\n  File \"/Users/nilsriedemann/bin/src/mitmproxy-0.6/libmproxy/console.py\", line 1794, in add_event\n    self.eventlist.set_focus(len(self.eventlist))\n  File \"/Library/Python/2.7/site-packages/urwid-1.0.1-py2.7-macosx-10.7-intel.egg/urwid/listbox.py\", line 144, in set_focus\n    raise IndexError\nIndexError\n^C[1]    22725 terminated  mitmproxy", "issue_status": "Closed", "issue_reporting_time": "2012-02-08T11:17:22Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1837": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/23", "issue_id": "#23", "issue_summary": "AttributeError: 'NoneType' object has no attribute 'acked'", "issue_description": "cirrusj commented on 8 Feb 2012\nI'm receiving the following traceback, while intercepting:\nTraceback (most recent call last):\n  File \"./mitmproxy\", line 61, in <module>\n    m.run()\n  File \"/tmp/git/mitmproxy/libmproxy/console.py\", line 1275, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/Library/Python/2.7/site-packages/urwid-1.0.1-py2.7-macosx-10.7-intel.egg/urwid/raw_display.py\", line 237, in run_wrapper\n    return fn()\n  File \"/tmp/git/mitmproxy/libmproxy/console.py\", line 1750, in loop\n    self.view.keypress(size, k)\n  File \"/Library/Python/2.7/site-packages/urwid-1.0.1-py2.7-macosx-10.7-intel.egg/urwid/container.py\", line 641, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/tmp/git/mitmproxy/libmproxy/console.py\", line 247, in keypress\n    return urwid.ListBox.keypress(self, size, key)\n  File \"/Library/Python/2.7/site-packages/urwid-1.0.1-py2.7-macosx-10.7-intel.egg/urwid/listbox.py\", line 766, in keypress\n    key = focus_widget.keypress((maxcol,),key)\n  File \"/tmp/git/mitmproxy/libmproxy/console.py\", line 193, in keypress\n    self.master.view_flow(self.flow)\n  File \"/tmp/git/mitmproxy/libmproxy/console.py\", line 1321, in view_flow\n    self.body = ConnectionView(self, self.state, flow)\n  File \"/tmp/git/mitmproxy/libmproxy/console.py\", line 302, in __init__\n    self.view_request()\n  File \"/tmp/git/mitmproxy/libmproxy/console.py\", line 359, in view_request\n    self.w = self.wrap_body(VIEW_FLOW_REQUEST, body)\n  File \"/tmp/git/mitmproxy/libmproxy/console.py\", line 326, in wrap_body\n    if self.flow.intercepting and not self.flow.response.acked:\nAttributeError: 'NoneType' object has no attribute 'acked'\nMacOSX 10.7.3\nPython 2.7.1", "issue_status": "Closed", "issue_reporting_time": "2012-02-08T09:58:01Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1838": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/20", "issue_id": "#20", "issue_summary": "editing gzipped data", "issue_description": "Chris2048 commented on 9 Dec 2011\nHow is mitmproxy to handle the editing of gzipped data in an external editor?\nWould it be better to let the editor bear the burden of uncompressing/recompressing, or would it be better if mitmproxy did this automatically?\nIf it's the former, I think adding the relevant extension to the file would help the editor identify it as zipped.", "issue_status": "Closed", "issue_reporting_time": "2011-12-08T22:54:21Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1839": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/19", "issue_id": "#19", "issue_summary": "Service unavailable errors", "issue_description": "sledzik1984 commented on 1 Dec 2011\nI'm using arpspoof and mitmproxy on debian testing. When I try to access some sites.(like: eurosport.pl) (on proxied computer) browser tells Service Unavailable. When I disable arpspoof and put mitmproxy ip and port in browser configuration - it works well - no errors.\nCan someone tell me what I am doing wrong? Or maybe it is a bug in mitmproxy?\nBest regards,", "issue_status": "Closed", "issue_reporting_time": "2011-12-01T10:58:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1840": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/18", "issue_id": "#18", "issue_summary": "Mac OSX install problems", "issue_description": "derMick commented on 21 Nov 2011\nHey there!\nI tried to install mitmproxy to test it with my firefoy and my ios device.\nBut after my installation of python and urwid (via macports) the gui of mitmproxy is still blank.\nI googled and tried the following instructions: http://r00tsec.blogspot.com/2011/04/howto-installation-mitmproxy.html\nBut without success...\nDo I have to initiate the SSL connection in a special way?\nThanks for help!", "issue_status": "Closed", "issue_reporting_time": "2011-11-21T14:46:41Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1841": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/17", "issue_id": "#17", "issue_summary": "Production", "issue_description": "carlskii commented on 9 Nov 2011\nHi,\nQuick question re mitmproxy. Would you consider it to be suitable for use in a production environment?\nBest Regards,\nCarl", "issue_status": "Closed", "issue_reporting_time": "2011-11-09T10:07:04Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1842": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/16", "issue_id": "#16", "issue_summary": "Add option to skip processing some responses", "issue_description": "koto commented on 9 Oct 2011\nMitmproxy processes all requests and parses all responses, sending them to the client when the response is complete. For big responses (e.g. streaming movies) this introduces unnecessary delays and/or timeouts.\nI'd like to be able (in a script request method) to mark some requests so as the responses to them will be forwarded straight to client without parsing. They might even be not stored in the dump file.", "issue_status": "Closed", "issue_reporting_time": "2011-10-09T17:15:29Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1843": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/13", "issue_id": "#13", "issue_summary": "Problem to proxify a request on a large file", "issue_description": "vivolo commented on 17 Aug 2011\nSize file is about 5 Go and give an error with the following traceback :\nTraceback (most recent call last):\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/SocketServer.py\", line 558, in process_request_thread\nself.finish_request(request, client_address)\nFile \"/Users/admin/Desktop/mitmproxy-0.6/libmproxy/proxy.py\", line 422, in finish_request\nself.RequestHandlerClass(self.config, request, client_address, self, self.masterq)\nFile \"/Users/admin/Desktop/mitmproxy-0.6/libmproxy/proxy.py\", line 224, in init\nSocketServer.StreamRequestHandler.init(self, request, client_address, server)\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/SocketServer.py\", line 615, in init\nself.handle()\nFile \"/Users/admin/Desktop/mitmproxy-0.6/libmproxy/proxy.py\", line 230, in handle\nself.handle_request(cc)\nFile \"/Users/admin/Desktop/mitmproxy-0.6/libmproxy/proxy.py\", line 259, in handle_request\nresponse = server.read_response()\nFile \"/Users/admin/Desktop/mitmproxy-0.6/libmproxy/proxy.py\", line 208, in read_response\ncontent = read_http_body(self.rfile, self, headers, True)\nFile \"/Users/admin/Desktop/mitmproxy-0.6/libmproxy/proxy.py\", line 63, in read_http_body\ncontent = rfile.read(int(headers[\"content-length\"][0]))\nFile \"/System/Library/Frameworks/Python.framework/Versions/2.6/lib/python2.6/socket.py\", line 351, in read\ndata = self._sock.recv(left)\nOverflowError: signed integer is greater than maximum\nPlease, do you know a workaround ?\nThanks\nO.", "issue_status": "Closed", "issue_reporting_time": "2011-08-17T13:08:09Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1844": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/10", "issue_id": "#10", "issue_summary": "Crash upon viewing JSON response", "issue_description": "novemberborn commented on 19 Jul 2011\nTrying to view a JSON response, content type application/json, crashes with the following stacktrace:\nTraceback (most recent call last):\n  File \"./mitmproxy\", line 68, in <module>\n    m.run()\n  File \"/Users/mark/Code/mitmproxy/libmproxy/console.py\", line 1145, in run\n    self.ui.run_wrapper(self.loop)\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/site-packages/urwid/raw_display.py\", line 234, in run_wrapper\n    return fn()\n  File \"/Users/mark/Code/mitmproxy/libmproxy/console.py\", line 1605, in loop\n    self.view.keypress(size, k)\n  File \"/usr/local/Cellar/python/2.7.1/lib/python2.7/site-packages/urwid/container.py\", line 614, in keypress\n    return self.body.keypress( (maxcol, remaining), key )\n  File \"/Users/mark/Code/mitmproxy/libmproxy/console.py\", line 454, in keypress\n    self.view_response()\n  File \"/Users/mark/Code/mitmproxy/libmproxy/console.py\", line 343, in view_response\n    self.state.view_body_mode\n  File \"/Users/mark/Code/mitmproxy/libmproxy/console.py\", line 323, in _conn_text\n    viewmode\n  File \"/Users/mark/Code/mitmproxy/libmproxy/utils.py\", line 503, in wrap\n    ret = f(self, *args)\n  File \"/Users/mark/Code/mitmproxy/libmproxy/console.py\", line 1030, in _cached_conn_text\n    txt.extend(self._find_pretty_view(content, hdrItems))\n  File \"/Users/mark/Code/mitmproxy/libmproxy/console.py\", line 1001, in _find_pretty_view\n    return self._view_conn_json(lines)\nTypeError: _view_conn_json() takes exactly 3 arguments (2 given)", "issue_status": "Closed", "issue_reporting_time": "2011-07-19T16:16:43Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1845": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/6", "issue_id": "#6", "issue_summary": "transparent proxy redirect to https", "issue_description": "sakti commented on 13 Jul 2011\nwhen i setup mitmproxy for transparent proxy using iptables(NAT redirect to port), mitmproxy always catch request with https instead http.\ne.g\nGET http://news.ycombinator.com/ HTTP/1.1\nin mitmproxy\nGET https://news.ycombinator.com/ HTTP/1.1", "issue_status": "Closed", "issue_reporting_time": "2011-07-13T03:13:14Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1846": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/5", "issue_id": "#5", "issue_summary": "mitmproxy alters headers in transit", "issue_description": "dwmw2 commented on 13 Jul 2011\nStrictly speaking, HTTP headers are supposed to be case-insensitive. So theoretically it shouldn't matter that you convert all the headers in the HTTP response to lower case. But crappy HTTP clients exist, and one of them is the ActiveSync client on the Nokia N900. Using mitmproxy breaks it.", "issue_status": "Closed", "issue_reporting_time": "2011-07-12T21:05:10Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1847": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/3", "issue_id": "#3", "issue_summary": "proxy alters http requests to https also mangles https", "issue_description": "nuhbleach commented on 28 Jun 2011\nsome strange magic going on here, all http requests sent to the proxy are being converted into https by the proxy. Also all https requests are failing do to some mangling of the SSL handshake, Firefox error -12263 (SSL record was too long). My config is the following:\nUbuntu 10.04\nPython 2.6.5\nOpenSSL 0.9.8k\nDebug isn't showing nearly enough info to troubleshoot.. At this point I'm weeding through libmproxy with print statements but if you have a quicker fix let me know.\nThanks", "issue_status": "Closed", "issue_reporting_time": "2011-06-28T15:05:44Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}, "1848": {"issue_url": "https://github.com/mitmproxy/mitmproxy/issues/1", "issue_id": "#1", "issue_summary": "mitmproxy ios certificate", "issue_description": "Yannik commented on 21 May 2011\nCerifitcate expires in 1902 and is not working.\nhttp://imageshack.us/m/405/2772/img0974.png\nDownload cert here:\nhttp://www.mediafire.com/?gcosyenvi03m733", "issue_status": "Closed", "issue_reporting_time": "2011-05-21T11:25:35Z", "fixed_by": "", "pull_request_summary": "", "pull_request_description": "", "pull_request_status": "", "issue_fixed_time": "", "files_changed": []}}}