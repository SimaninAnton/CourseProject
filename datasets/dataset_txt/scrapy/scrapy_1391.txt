Member
kmike commented on Jul 3, 2014
I think that unicode_to_str and str_to_unicode names are misleading: unicode_to_str can accept input which is not unicode, and 'str' is ambiguous in Python 2.x / 3.x; str_to_unicode can accept input which is not str.
What about renaming them to text_to_bytes and text_to_unicode? "Text" will mean "either a bytestring or a unicode string".
Django uses force_bytes / force_text names for similar utilities; the difference is that they acept any objects, not just bytes/unicode as input.
"Text" means "unicode" in Django names. This makes sense because not all bytestrings are a representation of text. I think that for Scrapy bytestrings acceptable by text_to_bytes and text_to_unicode functions are representation of text, so "either a bytestring or a unicode string" meaning is OK in Scrapy.