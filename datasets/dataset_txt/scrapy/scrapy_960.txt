cd65d commented on Apr 15, 2016
FormRequest(response) defaults to method of POST in form.py so I cannot figure out why in some cases form_response() actually sends a GET:
import scrapy

class LoginSpider(scrapy.Spider):
    name = 'foo'
    start_urls = ['http://strongswiftdurable.com/daily-training-sessions/']

    def parse(self, response):
        return scrapy.FormRequest.from_response(
            response,
            formdata={'username':'<username>', #has been redacted
                    'password':'<password>', #has been redacted
                    '_wpnonce':'96700335a2', #this changes every 24hrs via wp_nonce see https://codex.wordpress.org/WordPress_Nonces  
                    '_wp_http_referer':'/daily-training-sessions/',
                    'login':'Login',
                    'redirect':'/daily-training-sessions/',
                    },
            callback=self.after_login
        )

    def after_login(self, response):
        # check login succeed before going on
        if "Daily Training Sessions and Included Plans" in response.body:
            print "worked!"
            return
        else:
            print "Error"
here's the packet capture:
GET /?s=&username=<redacted>%40<redacted>&redirect=%2Fdaily-training-sessions%2F&_wp_http_referer=%2Fdaily-training-sessions%2F&login=Login&password=<redacted>&_wpnonce=96700335a2 HTTP/1.1
Accept-Language: en
Accept-Encoding: gzip,deflate
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
User-Agent: Scrapy/1.0.5 (+http://scrapy.org)
Host: strongswiftdurable.com
Referer: http://strongswiftdurable.com/daily-training-sessions/
So for some reason the request is in the form of a query string vs a POST. however if i recall query string don't usually have the "s=" in the front.