woshichuanqilz commented on Apr 8, 2016
update
I find another link,
I get a optional_features.remove('boto') KeyError: 'boto' when I add the two line in the code :
from scrapy import optional_features
optional_features.remove('boto')
separate line
I try to Using FormRequest.from_response() to simulate a user login and get the example code like
this :
import scrapy

class LoginSpider(scrapy.Spider):
    name = 'example.com'
    start_urls = ['http://www.example.com/users/login.php']
    print 'Hello World 3'

    def parse(self, response):
        print 'Hello World 2' # this print I haven't gotten.
        return scrapy.FormRequest.from_response(
            response,
            formdata={'username': 'john', 'password': 'secret'},
            callback=self.after_login
        )

    def after_login(self, response):
        # check login succeed before going on
        print 'hello world' + response.url 
        if "authentication failed" in response.body:
            self.logger.error("Login failed")
            return

        # continue scraping with authenticated session...
I make a print in the parse function and not get it.
Then I check the debuginfo and get this :
I find the following link:
answer link
and add the following statement , but it doesn't work. How do I solve this question ?
DOWNLOAD_HANDLERS = {'S3': None,}
this is the whole debug info:
(virtualenvscrapy) h:\GitCode\Scrapy\lzscrapy
$ scrapy crawl loginspider
Hello World 3
2016-04-08 10:23:08 [scrapy] INFO: Scrapy 1.0.5 started (bot: lzscrapy)
2016-04-08 10:23:08 [scrapy] INFO: Optional features available: ssl, http11, boto
2016-04-08 10:23:08 [scrapy] INFO: Overridden settings: {'NEWSPIDER_MODULE': 'lzscrapy.spiders', 'SPIDER_MODULES': ['lzscrapy.spiders'], 'BOT_NAME': 'lzscrapy'}
2016-04-08 10:23:10 [scrapy] INFO: Enabled extensions: CloseSpider, TelnetConsole, LogStats, CoreStats, SpiderState
2016-04-08 10:23:10 [boto] DEBUG: Retrieving credentials from metadata server.
2016-04-08 10:23:10 [boto] ERROR: Caught exception reading instance data
Traceback (most recent call last):
File "c:\anaconda2\lib\site-packages\boto\utils.py", line 210, in retry_url
r = opener.open(req, timeout=timeout)
File "c:\anaconda2\lib\urllib2.py", line 431, in open
response = self._open(req, data)
File "c:\anaconda2\lib\urllib2.py", line 449, in _open
'_open', req)
File "c:\anaconda2\lib\urllib2.py", line 409, in _call_chain
result = func(*args)
File "c:\anaconda2\lib\urllib2.py", line 1227, in http_open
return self.do_open(httplib.HTTPConnection, req)
File "c:\anaconda2\lib\urllib2.py", line 1197, in do_open
raise URLError(err)
URLError: <urlopen error [Errno 10051] >
2016-04-08 10:23:10 [boto] ERROR: Unable to read instance data, giving up
2016-04-08 10:23:10 [scrapy] INFO: Enabled downloader middlewares: HttpAuthMiddleware, DownloadTimeoutMiddleware, UserAgentMiddleware, RetryMiddleware, DefaultHeadersMiddleware, MetaRefreshMiddleware, HttpCompressionMiddleware, RedirectMiddleware, CookiesMiddleware, ChunkedTransferMiddleware, DownloaderStats
2016-04-08 10:23:10 [scrapy] INFO: Enabled spider middlewares: HttpErrorMiddleware, OffsiteMiddleware, RefererMiddleware, UrlLengthMiddleware, DepthMiddleware
2016-04-08 10:23:10 [scrapy] INFO: Enabled item pipelines:
2016-04-08 10:23:10 [scrapy] INFO: Spider opened
2016-04-08 10:23:10 [scrapy] INFO: Crawled 0 pages (at 0 pages/min), scraped 0 items (at 0 items/min)
2016-04-08 10:23:10 [scrapy] DEBUG: Telnet console listening on 127.0.0.1:6025
2016-04-08 10:23:11 [scrapy] DEBUG: Crawled (404) <GET http://www.example.com/users/login.php> (referer: None)
2016-04-08 10:23:11 [scrapy] DEBUG: Ignoring response <404 http://www.example.com/users/login.php>: HTTP status code is not handled or not allowed
2016-04-08 10:23:11 [scrapy] INFO: Closing spider (finished)
2016-04-08 10:23:11 [scrapy] INFO: Dumping Scrapy stats:
{'downloader/request_bytes': 228,
'downloader/request_count': 1,
'downloader/request_method_count/GET': 1,
'downloader/response_bytes': 968,
'downloader/response_count': 1,
'downloader/response_status_count/404': 1,
'finish_reason': 'finished',
'finish_time': datetime.datetime(2016, 4, 8, 2, 23, 11, 219000),
'log_count/DEBUG': 4,
'log_count/ERROR': 2,
'log_count/INFO': 7,
'response_received_count': 1,
'scheduler/dequeued': 1,
'scheduler/dequeued/memory': 1,
'scheduler/enqueued': 1,
'scheduler/enqueued/memory': 1,
'start_time': datetime.datetime(2016, 4, 8, 2, 23, 10, 487000)}
2016-04-08 10:23:11 [scrapy] INFO: Spider closed (finished)