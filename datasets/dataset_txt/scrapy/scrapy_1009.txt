Contributor
lagenar commented on Feb 22, 2016
Hi there,
This is not really an issue but just a suggestion to consider to make it easier to subclass the SpiderLoader class. I have a very big list of spiders and what I wanted to do is to optimize how spiders are searched on the file system by caching the location, and also because I want to avoid all spider modules to get imported.
What I found on the init method of that class is:
    def __init__(self, settings):
            self.spider_modules = settings.getlist('SPIDER_MODULES')
            self._spiders = {}
            for name in self.spider_modules:
                for module in walk_modules(name):
                    self._load_spiders(module)`
The problem here is that the constructor is doing too much work and it's a bit difficult to override the default behaviour. Anyway, I think I will just implement my own class without sub classing but looks like this could be refactored a bit.