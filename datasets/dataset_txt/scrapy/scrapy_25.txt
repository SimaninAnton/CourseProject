mredaelli commented on Nov 19, 2019
Description
I have a spider like for a website that has a tree of content like:
Root
|- N1
|   \_N1_1 -> N1_1_1,  N1_1_2,  N1_1_3
|   \_N1_2 -> N1_2_1,  N1_2_2,  N1_2_3
|- N2
|   \_N2_1 -> N2_1_1,  N2_1_2,  N2_1_3
|   \_N2_2 -> N2_2_1,  N2_2_2,  N2_2_3
| ...
My spider is like this:
class Consultations(Spider):
    start_urls = [  "root"  ]

    def parse(self, resp: Response):
       # parses Nx
        for link in resp.xpath("Nx_x").get_all():
            yield Request(url=link.xpath("./@href").get(), callback=self.parse_list, priority=1)

    def parse_list(self, resp: Response):
       # parses Nx_x
        for item in resp.xpath("//table[@class='online_datei']").get_all():
                yield Request(url="..."
                    callback=self.parse_document,
                    priority=2,
                )
    def parse_document(self, resp: Response):
       # parses Nx_x_x
       yield {"something":"something"}
and I added the settings for FIFO crawling as in the FAQ (including the CONCURRENT_xxx=1).
(BTW, is there a typo? CONCURRENT_REQUESTS_PER_DOMAIN appears twice: maybe it was supposed to be CONCURRENT_REQUESTS_PER_IP?)
Expected behavior:
Requests being fired in the order Root, N1, N1_1, N1_1_1, N1_1_2, N1_1_3, N1_2, N1_2_1, N1_2_2, N1_2_3, ...
Actual behavior:
I still see the requests for all the Nx processed before the Nx_x, etc.
Versions
Scrapy 1.6.0