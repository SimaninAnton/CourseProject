osjerick commented on Apr 4, 2017
This piece of code fails:
import json, re
from scrapy.selector import Selector

sample_text = """
<script type="text/javascript">
   pageProductData = {"bulletAttributes":["Mid rise.","Slim through the hip and thigh.","Skinny leg opening.","Inseam: regular 28.5&#34;/72 cm, tall 31&#34;/77 cm, petite 26&#34;/66 cm.","Model is wearing a regular Gap size 27."]};
</script>"""
code_selector = Selector(text=sample_text)
var_value = code_selector.xpath('//script').re_first(r'pageProductData = ({.*?});')
parsed_data = json.loads(var_value)
JSONDecodeError: Expecting ',' delimiter: line 1 column 112 (char 111)
Here, var_value is:
'{"bulletAttributes":["Mid rise.","Slim through the hip and thigh.","Skinny leg opening.","Inseam: regular 28.5"/72 cm, tall 31"/77 cm, petite 26"/66 cm.","Model is wearing a regular Gap size 27."]}'
The problem is because the &#34; HTML character is interpreted (") within the extracted string by the re method, and this damage the string before the JSON decoding.
And this doesn't:
import json, re
from scrapy.selector import Selector

sample_text = """
<script type="text/javascript">
   pageProductData = {"bulletAttributes":["Mid rise.","Slim through the hip and thigh.","Skinny leg opening.","Inseam: regular 28.5&#34;/72 cm, tall 31&#34;/77 cm, petite 26&#34;/66 cm.","Model is wearing a regular Gap size 27."]};
</script>"""
code_selector = Selector(text=sample_text)
var_value = re.search(r'pageProductData = ({.*?});', code_selector.extract())
parsed_data = json.loads(var_value.group(1))
The extracted value here is:
'{"bulletAttributes":["Mid rise.","Slim through the hip and thigh.","Skinny leg opening.","Inseam: regular 28.5&#34;/72 cm, tall 31&#34;/77 cm, petite 26&#34;/66 cm.","Model is wearing a regular Gap size 27."]}'
scrapy version -v:
Scrapy    : 1.3.3
lxml      : 3.6.4.0
libxml2   : 2.9.4
cssselect : 1.0.0
parsel    : 1.1.0
w3lib     : 1.17.0
Twisted   : 17.1.0
Python    : 3.5.3 |Anaconda custom (64-bit)| (default, Feb 22 2017, 21:28:42) [MSC v.1900 64 bit (AMD64)]
pyOpenSSL : 16.2.0 (OpenSSL 1.0.2j  26 Sep 2016)
Platform  : Windows-7-6.1.7601-SP1