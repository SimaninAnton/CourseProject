Member
Gallaecio commented on Jan 25, 2019 â€¢
edited
Given:
>>> from urllib.request import urlopen
>>> with urlopen('https://github.com/blog.atom') as html:
...     body = html.read()
... 
>>> from scrapy.http import TextResponse
>>> response = TextResponse(url='https://github.com/blog.atom',
...                         body=body, encoding='utf8')
According to the documentation, this is expected:
>>> response.xpath("//link")
[]
However, this is what I get:
>>> response.xpath("//link")
[<Selector xpath='//link' data='<link rel="canonical" href="https://gith'>, <Selector xpath='//link' data='<link rel="next" href="https://github.bl'>, <Selector xpath='//link' data='<link rel="dns-prefetch" href="//s0.wp.c'>, <Selector xpath='//link' data='<link rel="dns-prefetch" href="//s.w.org'>, <Selector xpath='//link' data='<link rel="alternate" type="application/'>, <Selector xpath='//link' data='<link rel="stylesheet" id="all-css-0" hr'>, <Selector xpath='//link' data='<link rel="https://api.w.org/" href="htt'>, <Selector xpath='//link' data='<link rel="EditURI" type="application/rs'>, <Selector xpath='//link' data='<link rel="wlwmanifest" type="applicatio'>, <Selector xpath='//link' data='<link rel="shortlink" href="https://wp.m'>, <Selector xpath='//link' data='<link rel="dns-prefetch" href="//v0.word'>, <Selector xpath='//link' data='<link rel="icon" href="https://github.bl'>, <Selector xpath='//link' data='<link rel="icon" href="https://github.bl'>, <Selector xpath='//link' data='<link rel="apple-touch-icon-precomposed"'>]
Is removing namespaces no longer necessary? Is the example URL provided not a good choice to explain this feature?