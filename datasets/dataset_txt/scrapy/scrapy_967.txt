woshichuanqilz commented on Apr 12, 2016
I write a code about the access web need cookie use the meta = {cookiejar}, at first I fill in the user form and get the right response. ( the url is github.com)
And then I want to access the github.com/stars which need login. But the request to the github.com/stars was redirected to the github.com/login seems like that there is something wrong with the cookie?
I paste the debug cookies info and my code bellow.
2016-04-12 17:56:12 [scrapy] DEBUG: Received cookies from: <200 https://github.com/login>

Set-Cookie: logged_in=no; domain=.github.com; path=/; expires=Sat, 12 Apr 2036 09:56:57 -0000; secure; HttpOnly

Set-Cookie: _gh_sess=eyJzZXNzaW9uX2lkIjoiNzZmZGQzYzUwMDEzZWI2YmQ0ZTM0YTg2MTU3ODQxNTMiLCJfY3NyZl90b2tlbiI6ImU3M0VrSDdZSjdNelFWU3hmc3B5Z2xGL2t6TE14VEVJMHpjcDczeVUrUjg9In0%3D--c5afe25f0ad610b934025b078f5a1b59f80d1bdf; path=/; secure; HttpOnly
#!/usr/bin/env python
# -*- coding:utf-8 -*-
import scrapy
from scrapy.selector import Selector
from scrapy.http import Request, FormRequest


class GitHubLogin(scrapy.Spider) :
    name = "GH"
    allowed_domains = ["github.com"]
    start_urls = [
        "http://github.com"
    ]
    def start_requests(self):
        return [Request("https://github.com/login", meta = {'cookiejar' : 1}, callback = self.post_login)]

    def post_login(self, response):
        print 'Preparing login'
        authenticity_token = Selector(response).xpath("/html/body/div[4]/div[1]/div/form/div[1]/input[2]/@value").extract()[0]

        formdata_utf = u"\u2713".encode('utf-8')
        return [FormRequest.from_response(response,   
                            meta = {'cookiejar' : response.meta['cookiejar']},
                            formdata = {
                            'authenticity_token': authenticity_token,
                            'commit': 'Sign in',
                            'login': 'username',
                            'password': 'password',
                            'utf': formdata_utf
                            },
                            callback = self.after_login,
                            dont_filter = True
                            )]

    def after_login(self, response) :
        return [Request("https://github.com/stars", meta = {'cookiejar' : response.meta['cookiejar']}, callback = self.post_login)]

    def post_login(self, response):
        print "the response url is " + response.url