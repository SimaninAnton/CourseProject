jvanasco commented on Aug 13, 2014
first off, thanks for writing this function. it seems to be the best url standardizer i've found in python.
one small suggestion for improvement though -- the netloc could/should be standardized further.
now that there are internationalized domain names, the urls could either be the utf-8 encoded version or the punycode encoded idna version.
for example, I ran into this url shortener:
netloc_utf8 = "âž¡.ws"
scrapy canonicalizes it into:
 %E2%9E%A1.ws
however the idna version (which most browsers not only support, but actually rewrite the percent-encoded version into) is this:
xn--hgi.ws
this creates a problem, because the netloc isn't really standardized -- there are at least 2 versions that are possible.
so it would be great if the function could be trivially improved.
it would also be acceptable to convert IDNA domains to unicode and then to percent encoded, but I think the IDNA structure is more convenient as most web browsers prefer it as the native option.
in any event, the standard library does all the hard work :
def uft8_to_idna(txt):
    try:
        txt = unicode(txt, 'utf-8')
        txt = txt.encode('idna')
    except UnicodeDecodeError:
        raise
    return txt

def unicode_to_idna(txt):
    try:
        txt = txt.encode('idna')
    except UnicodeDecodeError:
        raise
    return txt