Member
kmike commented on Nov 7, 2016
Exception:
___ ImagesPipelineTestCaseCustomSettings.test_custom_settings_for_subclasses ___

self = <tests.test_pipeline_images.ImagesPipelineTestCaseCustomSettings testMethod=test_custom_settings_for_subclasses>
    def test_custom_settings_for_subclasses(self):
        """
            If there are custom settings for subclass and NO class attributes, pipeline should use custom
            settings.
            """
        class UserDefinedImagePipeline(ImagesPipeline):
            pass
    
        prefix = UserDefinedImagePipeline.__name__.upper()
        settings = self._generate_fake_settings(prefix=prefix)
        user_pipeline = UserDefinedImagePipeline.from_settings(Settings(settings))
        for pipe_attr, settings_attr in self.img_cls_attribute_names:
            # Values from settings for custom pipeline should be set on pipeline instance.
            custom_value = settings.get(prefix + "_" + settings_attr)
>           self.assertNotEqual(custom_value, self.default_pipeline_settings[pipe_attr])
/home/travis/build/scrapy/scrapy/tests/test_pipeline_images.py:354: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
self = <tests.test_pipeline_images.ImagesPipelineTestCaseCustomSettings testMethod=test_custom_settings_for_subclasses>
first = 90, second = 90, msg = None

    def assertNotEqual(self, first, second, msg=None):
        """
            Fail the test if C{first} == C{second}.
    
            @param msg: if msg is None, then the failure message will be
            '%r == %r' % (first, second)
            """
        if not first != second:
>           raise self.failureException(msg or '%r == %r' % (first, second))
E           FailTest: 90 == 90