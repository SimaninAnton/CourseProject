grunichev commented on 1 Mar 2017
$ docker version
Client:
Version: 1.13.1
API version: 1.26
Go version: go1.7.5
Git commit: 092cba3
Built: Wed Feb 8 08:47:51 2017
OS/Arch: darwin/amd64
Server:
Version: 1.13.1
API version: 1.26 (minimum version 1.12)
Go version: go1.7.5
Git commit: 092cba3
Built: Wed Feb 8 08:47:51 2017
OS/Arch: linux/amd64
Experimental: true
$ docker info
Containers: 14
Running: 5
Paused: 0
Stopped: 9
Images: 10
Server Version: 1.13.1
Storage Driver: aufs
Root Dir: /var/lib/docker/aufs
Backing Filesystem: extfs
Dirs: 135
Dirperm1 Supported: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
Volume: local
Network: bridge host ipvlan macvlan null overlay
Swarm: active
NodeID: 80c7u88arhzguvpcjitax901l
Is Manager: true
ClusterID: 0nk4187yo2kvywsyxa755q7vy
Managers: 1
Nodes: 1
Orchestration:
Task History Retention Limit: 5
Raft:
Snapshot Interval: 10000
Number of Old Snapshots to Retain: 0
Heartbeat Tick: 1
Election Tick: 3
Dispatcher:
Heartbeat Period: 5 seconds
CA Configuration:
Expiry Duration: 3 months
Node Address: 192.168.65.2
Manager Addresses:
192.168.65.2:2377
Runtimes: runc
Default Runtime: runc
Init Binary: docker-init
containerd version: aa8187dbd3b7ad67d8e5e3a15115d3eef43a7ed1
runc version: 9df8b306d01f59d3a8029be411de015b7304dd8f
init version: 949e6fa
Security Options:
seccomp
Profile: default
Kernel Version: 4.9.8-moby
Operating System: Alpine Linux v3.5
OSType: linux
Architecture: x86_64
CPUs: 1
Total Memory: 992.7 MiB
Name: moby
ID: D2KO:LFYE:2TG3:33P7:2VIM:OXDZ:CJER:E54F:KDVH:M6AK:OERV:DHUM
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): true
File Descriptors: 202
Goroutines: 368
System Time: 2017-03-01T11:52:39.459536793Z
EventsListeners: 3
No Proxy: *.local, 169.254/16
Registry: https://index.docker.io/v1/
Experimental: true
Insecure Registries:
127.0.0.0/8
Live Restore Enabled: false
$ docker-compose version
docker-compose version 1.11.1, build 7c5d5e4
docker-py version: 2.0.2
CPython version: 2.7.12
OpenSSL version: OpenSSL 1.0.2j 26 Sep 2016
docker-compose.yml:
version: '3.1'
services:
    wp:
        image: wordpress:latest

        environment:
            - WORDPRESS_DB_HOST="host"
            - WORDPRESS_DB_USER="user"
            - WORDPRESS_DB_PASSWORD_FILE="/run/secrets/MY_WORDPRESS_DB_PASSWORD"
            - WORDPRESS_DB_NAME="db"
        ports:
            - "80:80"
        secrets: 
            - MY_WORDPRESS_DB_PASSWORD

secrets:
    MY_WORDPRESS_DB_PASSWORD:
        external: true
Trying:
docker stack deploy -c docker-compose.yml my
docker logs from this container:
/usr/local/bin/docker-entrypoint.sh: line 20: "/run/secrets/MY_WORDPRESS_DB_PASSWORD": No such file or directory
If I do the same thing without compose, it works fine:
docker service create \
     --name wp \
     --publish 80:80 \
     --secret source=MY_WORDPRESS_DB_PASSWORD,target=MY_WORDPRESS_DB_PASSWORD,mode=0400 \
     -e WORDPRESS_DB_USER="user" \
     -e WORDPRESS_DB_PASSWORD_FILE="/run/secrets/MY_WORDPRESS_DB_PASSWORD" \
     -e WORDPRESS_DB_HOST="host" \
     -e WORDPRESS_DB_NAME="db" \
     wordpress:latest
I also tried adding source/target/mode to compose secrets, but had the same result.