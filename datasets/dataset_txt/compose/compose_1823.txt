houssemFat commented on 2 Jan 2017
I'm trying to follow the getting started tutorial on windows using the docker-composer.yml below.
version: '2'
services:
  web:
    build: .
    links:
    - redis
    ports:
     - "5000:8081"
    volumes:
     - .:/code
  redis:
    image: "redis:alpine"
    ports:
     - "6379:6379"
    volumes:
     - C:\Users\houssem.fathallah\.docker\data\redis\data:/data
The two containers (services) work fine (web and redis) with no error but the app can't read/write to redis.
Here is my simple python app
from flask import Flask, render_template, request
from redis import Redis
import adapt
import crawler

app = Flask("hi")
# test from outside compose using docker-machine 
#redis = Redis(host='192.168.99.100', port=6379)
# Using docker compose service name 
redis = Redis(host='redis', port=6379)


def incr_hits():
    count = redis.incr('hits')
    return count


@app.route('/')
def index():
    return render_template('index.html',
                           hits=incr_hits(),
                           users=[{"username": "houssem", "url": "ok"}])


@app.route('/analyse', methods=['GET', 'POST'])
def analyse():
    if request.method == "GET":
        return index()
    else:
        parsed_links = crawler.get_page(request.form['link'])
        parsed_results = adapt.tokenize_string(request.form['text'])
        return render_template('index.html',
                               hits=incr_hits(),
                               parsed_results=parsed_results,
                               parsed_links=parsed_links)

print('Staring new app')
app.run('0.0.0.0', 8081, debug=True, use_reloader=True)
I expect to increment counter in every request, the code works fine from non docker compose (normal server) and i can access to <docker_machine_ip>: 6379 redis host but not for the docker compose service.