alexisvincent commented on 28 Jul 2014
Volumes defined in the following fig.yml are silently ignored when running fig up on osx.
web:
  build: ./Docker/
  ports:
     - "80:80"
  volumes:
     - /var/docker/www:/var/www
/var/docker/www refers to a folder on the vagrant proxy machine generated by docker-osx.
I've edited the docker-osx script to include the following line:
 config.vm.synced_folder "~/Documents/Coding/Projects/dockerProject/src", "/var/docker/www", :create => true, mount_options: ["dmode=777,fmode=776"]
This is to mount my project directory on the vagrant proxy machine. I can confirm that this is successfully mounting the folder to /var/docker/www as a "docker-osx ssh" allows me to see these files.
All permissions are fine. Furthermore, if I spawn the a copy of the same container from the proxy machine with
 docker run -p 8080:80 -v /var/docker/www:/var/www containerName 
it correctly mounts the folder in the container. Browsing to port 80, reveals a 404 - file now found, while port 8080 correctly serves index.php
All this leads me to believe that fig is just ignoring the volumes section when booting from osx. On this note I'd like to make a request that when volumes are defined in the fig.yml and the host machine is osx, that fig automatically mounts the "local" folder specified to the proxy vm and then subsequently mounts that folder to the container. For example, the fig.yml should look like this:
web:
  build: ./Docker/
  ports:
     - "80:80"
  volumes:
     - ./src:/var/www
regardless of os, not like the one at the top of this issue.
I find it hard to believe that this hasn't already been implemented as:
It shouldn't be difficult to do
fig.yml files are not consistent across developer machines as people on osx have to redefine their volume to reflect a directory on the proxy machine.