ghost commented on 24 Jun 2015
Server: Ubuntu 14.04
path: /usr/local/bin/docker-compose
We have a line in puppet to run
/usr/local/bin/docker-compose --verbose -f /app/go-server/docker-compose.yml up --no-recreate -d
If i run the docker-compose as full root or from elevated shell it works fine it respects the .dockercfg.
But when i run puppet as root it puppet run docker-compose doesn't read the .dockercfg.
Compose version 1.3.1
Docker base_url: http+docker://localunixsocket
Docker version: KernelVersion=3.13.0-48-generic, Arch=amd64, ApiVersion=1.18, Version=1.6.2, GitCommit=7c8fca2, Os=linux, GoVersion=go1.4.2
docker containers <- (all=True, filters={u'label': [u'com.docker.compose.project=goserver', u'com.docker.compose.service=goserver', u'com.docker.compose.oneoff=False']})
docker containers -> (list with 0 items)
docker containers <- (all=True)
docker containers -> (list with 0 items)
docker containers <- (all=True, filters={u'label': [u'com.docker.compose.project=goserver', u'com.docker.compose.service=agent2', u'com.docker.compose.oneoff=False']})
docker containers -> (list with 0 items)
docker containers <- (all=True)
docker containers -> (list with 0 items)
docker containers <- (all=True, filters={u'label': [u'com.docker.compose.project=goserver', u'com.docker.compose.service=agent1', u'com.docker.compose.oneoff=False']})
docker containers -> (list with 0 items)
docker containers <- (all=True)
docker containers -> (list with 0 items)
docker inspect_image <- ('docker.xxxx.com/onlinedev/go-server:15.1.0')
docker inspect_image -> {u'Architecture': u'amd64',
 u'Author': u'Aravind SV <arvind.sv@gmail.com>',
 u'Comment': u'',
 u'Config': {u'AttachStderr': False,
             u'AttachStdin': False,
             u'AttachStdout': False,
             u'Cmd': [u'/sbin/my_init'],
             u'CpuShares': 0,
             u'Cpuset': u'',
             u'Domainname': u'',
...
docker containers <- (all=True, filters={u'label': [u'com.docker.compose.project=goserver', u'com.docker.compose.service=goserver', u'com.docker.compose.oneoff=False']})
docker containers -> (list with 0 items)
docker inspect_image <- ('docker.xxxxx.com/onlinedev/go-server:15.1.0')
docker inspect_image -> {u'Architecture': u'amd64',
 u'Author': u'Aravind SV <arvind.sv@gmail.com>',
 u'Comment': u'',
 u'Config': {u'AttachStderr': False,
             u'AttachStdin': False,
             u'AttachStdout': False,
             u'Cmd': [u'/sbin/my_init'],
             u'CpuShares': 0,
             u'Cpuset': u'',
             u'Domainname': u'',
...
Creating goserver_goserver_1...
docker create_container <- (hostname='goserver', name=u'goserver_goserver_1', image='docker.xxxxx.com/onlinedev/go-server:15.1.0', labels={u'com.docker.compose.service': u'goserver', 'com.docker.compose.config-hash': '6ec246a7044d409c0aafe9d4e1ebc33e4d0fad2cef42734d442207022100072b', u'com.docker.compose.project': u'goserver', 'com.docker.compose.version': u'1.3.1', u'com.docker.compose.oneoff': u'False', 'com.docker.compose.container-number': '1'}, host_config={'Links': [], 'PortBindings': {'8153/tcp': [{'HostPort': '8153', 'HostIp': ''}]}, 'Binds': [u'/opt/go-server/etc/go:/etc/go:rw', u'/opt/go-server/var/log/go-server:/var/log/go-server:rw', u'/opt/go-server/go-addons:/go-addons:rw', u'/opt/go-server/var/lib/go-server:/var/lib/go-server:rw', u'/etc/htpasswd:/etc/htpasswd:rw'], 'RestartPolicy': {u'MaximumRetryCount': 0, u'Name': u'always'}, 'ExtraHosts': [], 'LogConfig': {'Type': u'json-file', 'Config': {}}, 'VolumesFrom': []}, environment={'AGENT_KEY': 'xxxxxxxxxx'}, volumes={u'/etc/go': {}, u'/var/log/go-server': {}, u'/go-addons': {}, u'/var/lib/go-server': {}, u'/etc/htpasswd': {}}, detach=True, ports=[u'8153'])
docker create_container -> {u'Id': u'4d93a4017099242b8244b688565c24e64592361db2a1aac56af93347fbf38280',
 u'Warnings': None}
docker inspect_container <- (u'4d93a4017099242b8244b688565c24e64592361db2a1aac56af93347fbf38280')
docker inspect_container -> {u'AppArmorProfile': u'',
 u'Args': [],
 u'Config': {u'AttachStderr': False,
             u'AttachStdin': False,
             u'AttachStdout': False,
             u'Cmd': [u'/sbin/my_init'],
             u'CpuShares': 0,
             u'Cpuset': u'',
             u'Domainname': u'',
             u'Entrypoint': None,
...
docker start <- (u'4d93a4017099242b8244b688565c24e64592361db2a1aac56af93347fbf38280')
docker start -> None
docker inspect_image <- ('docker.xxxxx.com/onlinedev/go-agent:15.1.0')
Pulling agent2 (docker.xxxx.com/onlinedev/go-agent:15.1.0)...
docker pull <- (u'docker.xxxx.com/onlinedev/go-agent', tag=u'15.1.0', insecure_registry=False, stream=True)
docker pull -> <generator object _stream_helper at 0x7f447ec48370>
Pulling repository docker.xxxxx.com/onlinedev/go-agent
Traceback (most recent call last):
  File "<string>", line 3, in <module>
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.cli.main", line 31, in main
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.cli.docopt_command", line 21, in sys_dispatch
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.cli.command", line 34, in dispatch
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.cli.docopt_command", line 24, in dispatch
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.cli.command", line 66, in perform_command
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.cli.main", line 460, in up
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.project", line 230, in up
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.service", line 320, in execute_convergence_plan
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.service", line 208, in create_container
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.service", line 236, in ensure_image_exists
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.service", line 694, in pull
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.progress_stream", line 37, in stream_output
  File "/code/build/docker-compose/out00-PYZ.pyz/compose.progress_stream", line 50, in print_output_event
compose.progress_stream.StreamOutputError: Authentication is required.