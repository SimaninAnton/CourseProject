ShadOoW commented on 1 Jul 2016
Output of docker-compose version:
docker-compose version 1.7.1, build 6c29830
docker-py version: 1.8.1
CPython version: 3.5.1
OpenSSL version: OpenSSL 1.0.2h  3 May 2016
Output of docker version:
Client:
 Version:      1.11.2
 API version:  1.23
 Go version:   go1.6.2
 Git commit:   b9f10c9
 Built:        Sun Jun  5 23:17:55 2016
 OS/Arch:      linux/amd64

Server:
 Version:      1.11.2
 API version:  1.23
 Go version:   go1.6.2
 Git commit:   b9f10c9
 Built:        Sun Jun  5 23:17:55 2016
 OS/Arch:      linux/amd64
Output of docker info:
Containers: 3
 Running: 3
 Paused: 0
 Stopped: 0
Images: 18
Server Version: 1.11.2
Storage Driver: devicemapper
 Pool Name: docker-8:5-11288586-pool
 Pool Blocksize: 65.54 kB
 Base Device Size: 10.74 GB
 Backing Filesystem: xfs
 Data file: /dev/loop0
 Metadata file: /dev/loop1
 Data Space Used: 3.018 GB
 Data Space Total: 107.4 GB
 Data Space Available: 20.29 GB
 Metadata Space Used: 10.17 MB
 Metadata Space Total: 2.147 GB
 Metadata Space Available: 2.137 GB
 Udev Sync Supported: true
 Deferred Removal Enabled: false
 Deferred Deletion Enabled: false
 Deferred Deleted Device Count: 0
 Data loop file: /var/lib/docker/devicemapper/devicemapper/data
 WARNING: Usage of loopback devices is strongly discouraged for production use. Either use `--storage-opt dm.thinpooldev` or use `--storage-opt dm.no_warn_on_loop_devices=true` to suppress this warning.
 Metadata loop file: /var/lib/docker/devicemapper/devicemapper/metadata
 Library Version: 1.02.126 (2016-06-03)
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins: 
 Volume: local
 Network: null host bridge
Kernel Version: 4.6.2-1-ARCH
Operating System: Arch Linux
OSType: linux
Architecture: x86_64
CPUs: 4
Total Memory: 7.712 GiB
Name: orochi
ID: DAB4:74AO:RQHC:7F27:CECS:QDJF:E7GH:HHFN:7TO2:HNAB:X7JP:MHOK
Docker Root Dir: /var/lib/docker
Debug mode (client): false
Debug mode (server): false
Registry: https://index.docker.io/v1/
WARNING: bridge-nf-call-iptables is disabled
WARNING: bridge-nf-call-ip6tables is disabled
Additional environment details (AWS, VirtualBox, physical, etc.):
physical
Steps to reproduce the issue:
docker-compose -f environment/development.yaml up or docker-compose -f environment/development.yaml logs
Describe the results you received:
Docker Compose show building logs then python crashes with error UnicodeEncodeError: 'ascii' codec can't encode characters in position 34-36: ordinal not in range(128)
in /usr/lib/python3.5/site-packages/compose/cli/log_printer.py
Describe the results you expected:
docker compose should keep printing logs to console
Additional information you deem important (e.g. issue happens only occasionally):
Problem was resolved by setting export PYTHONIOENCODING=utf8
Not sure if this is specific to my machine, or if docker-compose should set default encoding.