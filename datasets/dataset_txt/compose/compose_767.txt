AnthonyMastrean commented on 29 Mar 2018 â€¢
edited
Description
So, PowerShell incorrectly reports failure ($?) when running docker-compose commands in a remote session, even though the "native" exit code ($LASTEXITCODE) is OK.
I could use the native exit code, but this breaks a lot of PowerShell paradigms (like pipelines) that depend on PowerShell's exit status, especially in systems like CI where I might not have a choice about which exit status/code is read to determine whether to continue or fail.
Any manifest will do:
docker-compose.yml
version: '2'
services:
  dummy:
    image: hello-world
Context
[example.com] PS> docker version
Client:
 Version:       18.03.0-ce
 API version:   1.34 (downgraded from 1.37)
 Go version:    go1.9.4
 Git commit:    0520e24302
 Built: Fri Mar 23 08:31:36 2018
 OS/Arch:       windows/amd64
 Experimental:  false
 Orchestrator:  swarm

Server:
 Engine:
  Version:      17.11.0-ce
  API version:  1.34 (minimum version 1.12)
  Go version:   go1.8.5
  Git commit:   1caf76c
  Built:        Mon Nov 20 18:39:28 2017
  OS/Arch:      linux/amd64
  Experimental: false
[example.com] PS> docker-compose version
docker-compose version 1.20.1, build 5d8c71b2
docker-py version: 3.1.4
CPython version: 3.6.4
OpenSSL version: OpenSSL 1.0.2k  26 Jan 2017
Steps to reproduce the issue
Using the manifest above, run the command in a remote PowerShell session.
PS> Enter-PSSession -ComputerName example
Observed result
PowerShell reports an error ($?) when running this command remotely, even though the "native" exit code ($LASTEXITCODE) is OK.
[example.com]: PS> docker-compose up -d; $?; $LASTEXITCODE
docker-compose : Creating network "temp_default" with the default driver
At line:1 char:1
+ docker-compose up -d
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (Creating networ... default driver:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError

Creating temp_dummy_1 ...
Creating temp_dummy_1 ... done

False
0
However, the network is created OK.
[example.com]: PS> docker network ls
NETWORK ID          NAME                DRIVER              SCOPE
b170367ba141        temp_default        bridge              local
Expected result
When I run the same command locally, I get the expected behavior / output.
PS> docker-compose up -d; $?; $LASTEXITCODE
Creating network "temp_default" with the default driver
Creating temp_dummy_1 ...
Creating temp_dummy_1 ... done

True
0
Stacktrace / full error message
docker-compose : Creating network "temp_default" with the default driver
At line:1 char:1
+ docker-compose up -d
+ ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (Creating networ... default driver:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
Additional information
Docker Toolbox 18.03.0-ce
Windows Server 2012 R2 Datacenter