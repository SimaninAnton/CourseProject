tabroughton commented on 5 Jul 2019
Description of the issue
When using docker-compose.yml with no local image I get a failure - dockerpycreds.errors.InitializationError: docker-credential-secretservice not installed or not available in PATH
[3759] Failed to execute script docker-compose
Worth noting the docker pull <image> works fine
Context information (for bug reports)
Output of docker-compose version
(paste here)
Output of docker version
$ docker version
Client:
 Version:           18.09.7
 API version:       1.39
 Go version:        go1.10.8
 Git commit:        2d0083d657
 Built:             Thu Jun 27 17:56:23 2019
 OS/Arch:           linux/amd64
 Experimental:      false

Server: Docker Engine - Community
 Engine:
  Version:          18.09.7
  API version:      1.39 (minimum version 1.12)
  Go version:       go1.10.8
  Git commit:       2d0083d
  Built:            Thu Jun 27 17:23:02 2019
  OS/Arch:          linux/amd64
  Experimental:     false

$ docker-compose version
docker-compose version 1.24.1, build 4667896b
docker-py version: 3.7.3
CPython version: 3.6.8
OpenSSL version: OpenSSL 1.1.0j  20 Nov 2018
Output of docker-compose config
(Make sure to add the relevant -f and other flags)
networks:
  default:
    external:
      name: web
services:
  backdrop:
    container_name: backdrop
    depends_on:
    - backdrop-db
    environment:
      BACKDROP_DB_HOST: backdrop-db-server
      BACKDROP_DB_NAME: backdrop-db
      BACKDROP_DB_PASSWORD: changeme
      BACKDROP_DB_PORT: '3306'
      BACKDROP_DB_USER: backdropuser
    image: backdrop:latest
    ports:
    - 8888:80/tcp
    restart: unless-stopped
  backdrop-db:
    container_name: backdrop-db-server
    environment:
      MYSQL_DATABASE: backdrop-db
      MYSQL_PASSWORD: changeme
      MYSQL_ROOT_PASSWORD: supersecret
      MYSQL_USER: backdropuser
    image: mariadb:latest
    ports:
    - 3306:3306/tcp
    volumes:
    - /srv/data/backdrop-db:/var/lib/mysql:rw
Steps to reproduce the issue
create a docker-compose.yml file to deploy a non-local image (I'm using backdrop:latest)
run docker-compose up -d
Observed result
docker-compose up -d
Pulling backdrop (backdrop:latest)...
Traceback (most recent call last):
  File "bin/docker-compose", line 6, in <module>
  File "compose/cli/main.py", line 71, in main
  File "compose/cli/main.py", line 127, in perform_command
  File "compose/cli/main.py", line 1085, in up
  File "compose/cli/main.py", line 1081, in up
  File "compose/project.py", line 527, in up
  File "compose/service.py", line 354, in ensure_image_exists
  File "compose/service.py", line 1222, in pull
  File "compose/progress_stream.py", line 102, in get_digest_from_pull
  File "compose/service.py", line 1187, in _do_pull
  File "site-packages/docker/api/image.py", line 381, in pull
  File "site-packages/docker/auth.py", line 48, in get_config_header
  File "site-packages/docker/auth.py", line 322, in resolve_authconfig
  File "site-packages/docker/auth.py", line 235, in resolve_authconfig
  File "site-packages/docker/auth.py", line 262, in _resolve_authconfig_credstore
  File "site-packages/docker/auth.py", line 287, in _get_store_instance
  File "site-packages/dockerpycreds/store.py", line 25, in __init__
dockerpycreds.errors.InitializationError: docker-credential-secretservice not installed or not available in PATH
[3610] Failed to execute script docker-compose
Expected result
pull from docker hub and deployed container
Stacktrace / full error message
see above, let me know if you need more.
(paste here)
Additional information
OS version / distribution, docker-compose install method, etc.
OS Kubuntu (ubuntu 18.10)
Installed from official docker instructions:
curl -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose
chmod +x /usr/local/bin/docker-compose
I have checked apt-get remove docker docker-compose and they don't exist as apt packages in the system