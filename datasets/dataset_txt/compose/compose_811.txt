jipengzhu commented on 9 Mar 2018 •
edited
Description
Describe the results you received:
1. my compose file
version: '3.3'
services:
  elasticsearch:
    image: registry.my.com:5000/elasticsearch/elasticsearch:5.6.4
    deploy:
      mode: global
      resources:
        limits:
          memory: ${MY_LIMIT_MEMORY}
    environment:
      - cluster.name=docker-cluster
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - network.host=_eth0:ipv4_
      - http.host=0.0.0.0
      - discovery.zen.ping.unicast.hosts=tasks.elasticsearch
      - discovery.zen.minimum_master_nodes=${MINIMUM_MASTER_NODES}
      - "ES_JAVA_OPTS=-Xms${MY_JVM_Xms} -Xmx${MY_JVM_Xmx}"
    volumes:
      - esdata:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
      - 9300:9300
    networks:
      - esnet

  kibana:
    depends_on:
      - elasticsearch
    image: registry.my.com:5000/kibana/kibana:5.6.4
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      SERVER_NAME: 0.0.0.0
      ELASTICSEARCH_URL: http://elasticsearch:9200
    ports:
      - 5601:5601
    networks:
      - esnet

volumes:
  esdata:
    driver: local

networks:
  esnet:
    attachable: true
2. the envoriment
➜  elk echo $MINIMUM_MASTER_NODES
2
➜  elk echo $MY_JVM_Xms
512m
➜  elk echo $MY_JVM_Xmx
512m
➜  elk echo $MY_LIMIT_MEMORY
1g
3. the validation output
WARNING: Some services (elasticsearch, kibana) use the 'deploy' key, which will be ignored. Compose does not support 'deploy' configuration - use `docker stack deploy` to deploy to a swarm.
networks:
  esnet:
    attachable: true
services:
  elasticsearch:
    deploy:
      mode: global
      resources:
        limits:
          memory: 1g
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m
      bootstrap.memory_lock: "true"
      cluster.name: docker-cluster
      discovery.zen.minimum_master_nodes: '2'
      discovery.zen.ping.unicast.hosts: tasks.elasticsearch
      http.host: 0.0.0.0
      network.host: _eth0:ipv4_
      xpack.security.enabled: "false"
    image: registry.my.com:5000/elasticsearch/elasticsearch:5.6.4
    networks:
      esnet: null
    ports:
    - published: 9200
      target: 9200
    - published: 9300
      target: 9300
    volumes:
    - esdata:/usr/share/elasticsearch/data:rw
  kibana:
    depends_on:
    - elasticsearch
    deploy:
      placement:
        constraints:
        - node.role == manager
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      SERVER_NAME: 0.0.0.0
    image: registry.my.com:5000/kibana/kibana:5.6.4
    networks:
      esnet: null
    ports:
    - published: 5601
      target: 5601
version: '3.3'
volumes:
  esdata:
    driver: local
the wrong thing
the environment of validation output without the char of '-'
the value of discovery.zen.minimum_master_nodes has a quotation mark around
Additional information you deem important (e.g. issue happens only occasionally):
Output of docker version:
Client:
 Version: 17.12.0-ce
 API version: 1.35
 Go version: go1.9.2
 Git commit: c97c6d6
 Built: Wed Dec 27 20:03:51 2017
 OS/Arch: darwin/amd64

Server:
 Engine:
  Version: 17.12.0-ce
  API version: 1.35 (minimum version 1.12)
  Go version: go1.9.2
  Git commit: c97c6d6
  Built: Wed Dec 27 20:12:29 2017
  OS/Arch: linux/amd64
  Experimental: true
Output of docker info:
Containers: 3
 Running: 3
 Paused: 0
 Stopped: 0
Images: 39
Server Version: 17.12.0-ce
Storage Driver: overlay2
 Backing Filesystem: extfs
 Supports d_type: true
 Native Overlay Diff: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
 Volume: local
 Network: bridge host ipvlan macvlan null overlay
 Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog
Swarm: inactive
Runtimes: runc
Default Runtime: runc
Init Binary: docker-init
containerd version: 89623f28b87a6004d4b785663257362d1658a729
runc version: b2567b37d7b75eb4cf325b77297b140ea686ce8f
init version: 949e6fa
Security Options:
 seccomp
  Profile: default
Kernel Version: 4.9.60-linuxkit-aufs
Operating System: Docker for Mac
OSType: linux
Architecture: x86_64
CPUs: 4
Total Memory: 3.855GiB
Name: linuxkit-025000000001
ID: MSSU:BIL6:LAHN:4YPD:UXSX:5BI3:NGO7:366U:PFRH:4AP7:XMWL:CRLA
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): true
 File Descriptors: 42
 Goroutines: 60
 System Time: 2018-03-08T08:06:53.46223367Z
 EventsListeners: 2
HTTP Proxy: docker.for.mac.http.internal:3128
HTTPS Proxy: docker.for.mac.http.internal:3129
Registry: https://index.docker.io/v1/
Labels:
Experimental: true
Insecure Registries:
 127.0.0.0/8
Registry Mirrors:
 https://registry.docker-cn.com/
Live Restore Enabled: false
Additional environment details (AWS, VirtualBox, physical, etc.):