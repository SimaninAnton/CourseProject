vfaronov commented on 30 Mar 2018
Steps to reproduce the problem:
Create /tmp/saveflows.py with the following text:
def done():
    from mitmproxy import ctx
    ctx.master.commands.call('save.file @all /tmp/all.flows')
Run mitmdump -s /tmp/saveflows.py
Run a few requests through this mitmdump instance.
Exit mitmdump with Ctrl+C.
mitmdump should exit successfully and, by executing the scriptâ€™s done event handler, save all recorded flows into /tmp/all.flows. Instead, it crashes with a chain of tracebacks including:
Traceback (most recent call last):
  File "mitmproxy/types.py", line 359, in parse
  File "mitmproxy/command.py", line 211, in call_args
mitmproxy.exceptions.CommandError: Unknown command: view.resolve
Any other comments? What have you tried so far?
The same script works as expected under mitmproxy instead of mitmdump.
Of course, saving all flows can be accomplished with the built-in --save-stream-file option. But a general mechanism for running commands on mitmdump shutdown may be useful for purposes discussed in #2963 (comment)
System information
Mitmproxy: 3.0.3 binary
Python: 3.5.2
OpenSSL: OpenSSL 1.1.0g 2 Nov 2017
Platform: Linux-4.4.0-116-generic-x86_64-with-debian-stretch-sid