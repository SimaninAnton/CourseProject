ghost commented on 18 Sep 2015
What's the problem?
I recently see mitmdump crashing with errors like
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py", line 120, in handle
    root_layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/transparent_proxy.py", line 21, in __call__
    layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py", line 273, in __call__
    layer()
TypeError: 'NoneType' object is not callable

mitmproxy has crashed!Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py", line 120, in handle
    root_layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/transparent_proxy.py", line 21, in __call__
    layer()
TypeError: 'NoneType' object is not callable

Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py", line 120, in handle
    root_layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/transparent_proxy.py", line 21, in __call__
    layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py", line 273, in __call__
    layer()
TypeError: 'NoneType' object is not callable
mitmproxy has crashed!
mitmproxy has crashed!

Please lodge a bug report at: https://github.com/mitmproxy/mitmproxyPlease lodge a bug report at: https://github.com/mitmproxy/mitmproxy


Please lodge a bug report at: https://github.com/mitmproxy/mitmproxy
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py", line 120, in handle
    root_layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/transparent_proxy.py", line 21, in __call__
    layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py", line 273, in __call__
    layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py", line 162, in __call__
    layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py", line 367, in __call__
    self.get_response_from_server(flow)
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py", line 485, in get_response_from_server
    if flow.response.stream:
AttributeError: 'NoneType' object has no attribute 'response'
[...]

mitmproxy has crashed!
Please lodge a bug report at: https://github.com/mitmproxy/mitmproxy
Traceback (most recent call last):
  File "/usr/local/bin/mitmdump", line 3, in <module>
    mitmdump()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/main.py", line 99, in mitmdump
    master.run()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/dump.py", line 342, in run
    return flow.FlowMaster.run(self)
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py", line 122, in run
    self.tick(self.masterq, 0.1)
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py", line 821, in tick

  File "/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py", line 108, in tick
    self.handle(*msg)
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/controller.py", line 129, in handle
    m(obj)
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/dump.py", line 314, in handle_request
    flow.FlowMaster.handle_request(self, f)
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py", line 1003, in handle_request
    return f
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py", line 914, in process_new_request
    if not pb:
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/flow.py", line 801, in do_server_playback
    flow.reply(response)
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/models/http.py", line 396, in refresh
    c.append(self._refresh_cookie(i, delta))
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/models/http.py", line 355, in _refresh_cookie
    c = Cookie.SimpleCookie(str(c))
  File "/usr/lib/python2.7/Cookie.py", line 576, in __init__
    if input: self.load(input)
  File "/usr/lib/python2.7/Cookie.py", line 629, in load
    self.__ParseString(rawdata)
  File "/usr/lib/python2.7/Cookie.py", line 662, in __ParseString
    self.__set(K, rval, cval)
  File "/usr/lib/python2.7/Cookie.py", line 582, in __set
    M.set(key, real_value, coded_value)
  File "/usr/lib/python2.7/Cookie.py", line 457, in set
    raise CookieError("Illegal key value: %s" % key)
Cookie.CookieError: Illegal key value: f_?RK<
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py", line 120, in handle
    root_layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/modes/transparent_proxy.py", line 21, in __call__
    layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/tls.py", line 273, in __call__
    layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py", line 162, in __call__
    layer()
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py", line 367, in __call__
    self.get_response_from_server(flow)
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py", line 485, in get_response_from_server
    if flow.response.stream:
AttributeError: 'NoneType' object has no attribute 'response'
[...]
What's expected?
mitmdump should not crash but handle the problem.
Which versions are affected?
The master version of mitmdump from yesterday was used.
How to reproduce the problem?
I'm sorry but I do not know exactly how to produce this. I think it should be enough to set up a small server, e.g. with python, that sends a "bad" cookie. Now running mitmdump as a transparent proxy and capturing the data. Afterwards the crash should occur at the replay. But I had not the time to test this.
Why does this happen?
In my captured files there seems to be a bad cookie from match.rtbidder.net/match?[...]. I do not know if this is against any convention but it crashed mitmdump as a result of a Cookie.CookieError.
After modifying mitmdump to log every Cookie in libmproxy/models/http.py _refresh_cookie, it was clear that the following shortened line lead to the error:
uid=Kfyl<1f>]f_?RK<=x__<5/C#j>/KP8>=[...]mC72; path=/; domain=.rtbidder.net; expires=Thu, 15-Sep-2016 [...]
How could the problem be solved?
I modified _refresh_cookie in a way that everything expect the return is covered by a try except block for Cookie.CookieError. If the error occurs the original parameter str(c).strip() is returned. I know that the expiration time is not modified but I thought this is better than a crash.