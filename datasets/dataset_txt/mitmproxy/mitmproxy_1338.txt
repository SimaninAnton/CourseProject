jamiekris commented on 26 Aug 2015
I am running the following scripts on a Linux Mint 17 desktop, mitmproxy was installed through PIP.
The client is a google chrome browser, configured to trust and route through the proxy.
I run the following inline script when processing the raw file generated by mitmproxy.
from libmproxy import filt
def start(context, argv):
        if len(argv) != 2:
                raise ValueError("Usage: -s 'filt.py FILTER'")
        context.filter = filt.parse(argv[1])

#def response(context, flow):
def response(context, flow):
        if flow.match(context.filter):
                print("Flow matches response filter:")
                print("response ",flow.response.timestamp_end, flow)
def request(context, flow):
        if flow.match(context.filter):
                print("Flow matches request filter:")
                print("request ",flow.request.timestamp_start, flow)
I run things as follows:
mitmproxy -w temp
mitmdump -s "script.py FILTER" -r temp  #FILTER is google in the example below
I tried loading the google search page and here is a cutaway from the generated output.
Flow matches request filter:
('request ', 1433945112.59489, <HTTPFlow
  request = HTTPRequest: GET /crossdomain.xml
  response = HTTPResponse: 200 OK (text/x-cross-domain-policy, 169B) ##PROBLEM HERE
  client_conn = ClientConnection: [ssl] IP.IP.IP.IP:52842
  server_conn = ServerConnection: [ssl: client2.google.com] client2.google.com:443)
Flow matches response filter:
('response ', 1433945112.606219, <HTTPFlow
  request = HTTPRequest: GET /crossdomain.xml
  response = HTTPResponse: 200 OK (text/x-cross-domain-policy, 169B)
  client_conn = ClientConnection: [ssl] IP.IP.IP.IP:52842
  server_conn = ServerConnection: [ssl: client2.google.com] client2.google.com:443)
The scripts add the'Flow matches request filter:' tag to the request hook firing.
The weird thing about this output is line 4 in the text above. When a HTTP request
is intercepted, the proxy also seems to write a HTTP response along with the request.
This must not be possible at this time, because the
proxy has just received a request and it fires the hook even before this request is
forwarded to the server. I would like to report this as a potential bug, after advice
from the mitmproxy google group. I have observed this in several other websites
and my own site as well.
Note: I have removed some leading and trailing brackets from the example logs as github ignored lines within them.
Thanks.