jpic commented on 8 Jul 2019
Hi all,
This is a proposal for a task where we have a little budget of $500. I did this in the past so I know it's possible and works really, really great, but i lost the code and it was very hacky because that was 4 years ago. It was a like 200 line long python I did in a week or so by reverse engineering the python internal API of mitmproxy, and it's probably easier today, particularely if you are already an mitmproxy contributor.
You know when developers make applications, they like to have a CI server like gitlab-ci for example that will execute a bunch of tests on every git push.
The tests will typically go through installing all dependencies, such as from PyPi, RubyGem, NPM, and so on.
This is a big waste of time and bandwidth to re-download packages for every push, also blocks CI which means other devs may have to wait in line for their tests to happen.
This mission I'm proposing doesn't have to be in mitmproxy repo itself, it can be a separate app.
The user story to solve is:
As a sysadmin, I run a command that starts mitmproxy with a cache directory, and everytime a package is downloaded through the proxy.*
Why not use an existing caching proxy ? Well:
Squid apparently does not support caching for HTTPS anymore due to abuse by shitty governments, it only supports CONNECT tunnel now,
Any other solution ? Not that I know of.
Sorry for the small budget, we should be able to unlock more if we see this going in the right direction.
Have a great day