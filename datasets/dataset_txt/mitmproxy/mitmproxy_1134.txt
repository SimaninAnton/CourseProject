hackers-terabit commented on 12 Apr 2016
Steps to reproduce the problem:
inline script with mitmproxy transparent proxy mode
inspect/mitm a very large file
wait until OOM killer kills mitmproxy (or mitmdump)
What is the expected behavior?
#1029 and #1036 exist for similar complaints.
Those issues address the problem of how flows are stored and processed.
My inline script only deals with the request and response headers (once each direction)
I expect the inline script interface to have an option where flow caching/memory storage will cease once the necessary operation(s) on the flow is performed.
What went wrong?
This is more of a feature request (or documentation request if the feature already exists)
Any other comments?
Is there a better way to contact the developers or is github issue creation the preferred way?
Mitmproxy Version:
Operating System: