crutledge commented on 17 Feb 2016
Noticed this happened in v 0.16:
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/libmproxy/console/__init__.py", line 498, in run
    self.loop.run()
  File "/usr/local/lib/python2.7/site-packages/urwid/main_loop.py", line 278, in run
    self._run()
  File "/usr/local/lib/python2.7/site-packages/urwid/main_loop.py", line 376, in _run
    self.event_loop.run()
  File "/usr/local/lib/python2.7/site-packages/urwid/main_loop.py", line 682, in run
    self._loop()
  File "/usr/local/lib/python2.7/site-packages/urwid/main_loop.py", line 719, in _loop
    self._watch_files[fd]()
  File "/usr/local/lib/python2.7/site-packages/urwid/raw_display.py", line 393, in <lambda>
    event_loop, callback, self.get_available_raw_input())
  File "/usr/local/lib/python2.7/site-packages/urwid/raw_display.py", line 493, in parse_input
    callback(processed, processed_codes)
  File "/usr/local/lib/python2.7/site-packages/urwid/main_loop.py", line 403, in _update
    self.process_input(keys)
  File "/usr/local/lib/python2.7/site-packages/urwid/main_loop.py", line 503, in process_input
    k = self._topmost_widget.keypress(self.screen_size, k)
  File "/usr/local/lib/python2.7/site-packages/libmproxy/console/window.py", line 39, in keypress
    k = super(self.__class__, self).keypress(size, k)
  File "/usr/local/lib/python2.7/site-packages/urwid/container.py", line 1116, in keypress
    return self.footer.keypress((maxcol,),key)
  File "/usr/local/lib/python2.7/site-packages/libmproxy/console/statusbar.py", line 126, in keypress
    return self.ab.keypress(*args, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/libmproxy/console/statusbar.py", line 83, in keypress
    self.prompt_execute(self._w.get_edit_text())
  File "/usr/local/lib/python2.7/site-packages/libmproxy/console/statusbar.py", line 106, in prompt_execute
    msg = p(txt, *args)
  File "/usr/local/lib/python2.7/site-packages/libmproxy/console/flowlist.py", line 349, in new_request
    f = self.master.create_request(method, scheme, host, port, path)
  File "/usr/local/lib/python2.7/site-packages/libmproxy/flow.py", line 831, in create_request
    clientcert=None
  File "/usr/local/lib/python2.7/site-packages/libmproxy/models/connections.py", line 65, in from_state
    f.set_state(state)
  File "/usr/local/lib/python2.7/site-packages/libmproxy/stateobject.py", line 41, in set_state
    setattr(self, attr, state.pop(attr))
KeyError: 'timestamp_start'
Recreate steps:
bash> mitmproxy
Press n, g (for get) then enter. Crashes back to command line with the above traceback.
This can also be recreated just by calling create_request() from FlowMaster directly.