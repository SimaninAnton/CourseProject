ldbfpiaoran commented 28 days ago
Problem Description
A clear and concise description of what the bug is.
Steps to reproduce the behavior:
`def proxy_address(flow: http.HTTPFlow) -> typing.Tuple[str, int]:
Poor man's loadbalancing: route every second domain through the alternative proxy.
return ("127.0,0,1", 8081)
def response(flow: http.HTTPFlow):
# try:
# print(flow.get_state()['request']['content'])
# except Exception as e:
# print(e)
if flow.request.method == "CONNECT":
# If the decision is done by domain, one could also modify the server address here.
# We do it after CONNECT here to have the request data available as well.
return
address = proxy_address(flow)
flow.live.change_upstream_proxy_server(address) # type: ignore`
such as
mitmdump --rawtcp -s tcp.py --mode upstream:http://127.0.0.1:8081 --ssl-insecure --set upstream_cert=false
3.
the tcp Traffic will not fall back
System Information
Paste the output of "mitmproxy --version" here.