wujek-srujek commented on 3 May 2017 â€¢
edited
Steps to reproduce the problem:
Send a request with the body packed as gzip.
Enter into the request in mitmproxy and notice Content-Length shows the packed length.
Unpack the body (the z key) - notice the Content-Length header doesn't change, although the unpacked content length must be known at this point. Replying the request fails in my case as the server complains about the stream having more data than expected (the un-gzipped data has more bytes than gzipped).
When the users goes into raw body edit mode ('e', than 'r') and just quits the editor, the Content-Length header is updated correctly.
System information
Mitmproxy version: 2.0.2 (release version)
Python version: 3.6.1
Platform: Darwin-14.5.0-x86_64-i386-64bit
SSL version: OpenSSL 1.1.0e 16 Feb 2017
Mac version: 10.10.5 ('', '', '') x86_64
The same behavior observed on an up-to-date Arch linux.