mdkorhon commented on 24 Sep 2014
I was looking at some packet captures I generated while using mitmproxy and noticed that the gmt_unix_time field appears to be set to random bytes instead of the current date and time. Is this expected? The specification states that it doesn't need to be correct, but it looks like the TLS client and server both were using the correct time.
For reference, here's the relevant text from Section 7.4.1.2 of http://tools.ietf.org/html/rfc2246 and http://tools.ietf.org/html/rfc5246
  The ClientHello message includes a random structure, which is used
  later in the protocol.

     struct {
         uint32 gmt_unix_time;
         opaque random_bytes[28];
     } Random;

  gmt_unix_time
     The current time and date in standard UNIX 32-bit format
     (seconds since the midnight starting Jan 1, 1970, UTC, ignoring
     leap seconds) according to the sender's internal clock.  Clocks
     are not required to be set correctly by the basic TLS protocol;
     higher-level or application protocols may define additional
     requirements.  Note that, for historical reasons, the data
     element is named using GMT, the predecessor of the current
     worldwide time base, UTC.

  random_bytes
     28 bytes generated by a secure random number generator.