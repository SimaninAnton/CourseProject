Member
mhils commented on 14 Feb 2015
Currently, we can inspect SSL traffic to the proxy by instructing it to use ciphers without perfect forward secrecy only. As far as I know, inspecting the upstream connection is hard possibly without manual intervention. To debug issues like #472, it would be nice to have a command line option to dump the SSL keys for Wireshark.
There are two complications:
We should log keys if renegotation during the session occurs (see #472), not just after the handshake. I hope we can use the pyOpenSSL equivalent of SSL_CTX_set_info_callback for this?
Writing to a file from different connection threads requires synchronization.
The following works for single-threaded code:
def dump_creds(sock):
    crand = sock.client_random().encode("hex")
    masterkey = sock.master_key().encode("hex")
    with open("keys","ab") as f:
        f.write("CLIENT_RANDOM {} {}\r\n".format(crand, masterkey))