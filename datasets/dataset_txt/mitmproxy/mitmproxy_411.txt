LetMeR00t commented on 9 Feb 2018 â€¢
edited
Steps to reproduce the problem:
Context :
I set up a virtual machine on Windows 7 that can communicate with Internet on ports 80 and 443 only.
Mitmproxy is used as a transparent proxy for these communications in order to decrypt all HTTPS traffic. A redirection is made thanks to my iptables physical host that redirect the traffic on port 8080.
I'm using Internet Explorer v11.0.49 and Mozilla Firefox v58.0.1 on the VM.
I will explain 4 cases concerning this setup and the use of the configuration file :
Configuration for the both first tests : Cipher client used is AES256-SHA256
1st test : browser is Firefox
Communication doesn't work, error on mitmproxy's interface
it seems that mitmproxy doesn't answer to the client (that started the communication using TLSv1.0)
The chosen cipher is well proposed by the client in his list.
2nd test : browser is Internet Explorer
Communication worked
it seems that mitmproxy answered to the client (that started the communication using TLSv1.2)
The chosen cipher is well proposed by the client in his list. (of course)
Configuration for the both last tests : Cipher client used is ECDHE-ECDSA-AES128-SHA256
3rd test : browser is Firefox (same behavior that the 1rst test)
Communication doesn't work, error on mitmproxy's interface
it seems that mitmproxy doesn't answer to the client (that started the communication using TLSv1.0)
The chosen cipher seems to be proposed by the client in his list. I'm not sure regarding the last test however ...
4th test : browser is Internet Explorer
Communication doesn't work, error on mitmproxy's interface
it seems that mitmproxy doesn't answer to the client (that started the communication using TLSv1.2)
The chosen cipher is well proposed by the client in his list.
Any other comments? What have you tried so far?
As you can see, most of the tests were unsuccessful but the context was not the problem because it's worked in test 2 as expected.
I'm more worried about the fact that mitmproxy doesn't answer to the client ? Why did it do that ?
Moreover, the client seems to be legitimate for the connection but he is refused ...
I'm seeing in the code that the cipher suites are not so easily configurable as we can expect ... but the behavior of mitmproxy is very strange !
Could you investigate on this to know if there is a bug ? In all the tests, mitmproxy should be working
What I understand is that the handshake doesn't work because the server thinks that there is no cipher suite available for the client ... I would like to add that when I don't specify the cipher suite, it's working. But because I want to decrypt HTTPS using cuckoo and mitmproxy, I need to specify the cipher suites (AES GCM seems to be problematic for the decryption, see cuckoosandbox/cuckoo#2104)
System information
Mitmproxy: 3.0.0.dev1180 (commit 957a630)
Python: 3.5.2
OpenSSL: OpenSSL 1.1.0g 2 Nov 2017
Platform: Linux-4.13.0-32-generic-x86_64-with-Ubuntu-16.04-xenial