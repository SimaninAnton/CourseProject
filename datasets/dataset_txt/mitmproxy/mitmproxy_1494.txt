Contributor
legendtang commented on 18 Mar 2015
Traceback (most recent call last):
  File "/home/legend/mitmproxy/libmproxy/console/__init__.py", line 805, in run
    self.loop.run()
  File "/usr/lib/python2.7/site-packages/urwid/main_loop.py", line 278, in run
    self._run()
  File "/usr/lib/python2.7/site-packages/urwid/main_loop.py", line 375, in _run
    self.event_loop.run()
  File "/usr/lib/python2.7/site-packages/urwid/main_loop.py", line 678, in run
    self._loop()
  File "/usr/lib/python2.7/site-packages/urwid/main_loop.py", line 715, in _loop
    self._watch_files[fd]()
  File "/usr/lib/python2.7/site-packages/urwid/raw_display.py", line 392, in <lambda>
    event_loop, callback, self.get_available_raw_input())
  File "/usr/lib/python2.7/site-packages/urwid/raw_display.py", line 492, in parse_input
    callback(processed, processed_codes)
  File "/usr/lib/python2.7/site-packages/urwid/main_loop.py", line 396, in _update
    keys = self.input_filter(keys, raw)
  File "/usr/lib/python2.7/site-packages/urwid/main_loop.py", line 535, in input_filter
    return self._input_filter(keys, raw)
  File "/home/legend/mitmproxy/libmproxy/console/__init__.py", line 616, in input_filter
    elif k in self.onekey:
TypeError: 'in <string>' requires string as left operand, not tuple

mitmproxy has crashed!
Please lodge a bug report at:
    https://github.com/mitmproxy/mitmproxy
Shutting down...
I caught this after several tries. It's weird how k became a tuple.
I check the code around libmproxy/console/__init__.py:616 and have no idea about this output.
Occasionally, it would stuck without crashing and even ^C lost its function. At this situation, I used top to track the CPU / Mem usage but it seemed to be fine.
I remembered that I didn't get this when I installed the git version of mitmproxy for the first time. It might relate to recent changes.