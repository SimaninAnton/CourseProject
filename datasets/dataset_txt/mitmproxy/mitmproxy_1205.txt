Member
mhils commented on 16 Feb 2016
From @mhils on February 7, 2014 3:48
Raising a pp.ParseException in _ValueLiteral is probably enough,
but I'm not into the parsing code here.
>>> p.request("get:\\'")

Traceback (most recent call last):
  File "", line 1, in 
    p.request("get:\\'")
  File "C:\Users\user\git\pathod\libpathod\pathoc.py", line 70, in request
    r = language.parse_request(self.settings, spec)
  File "C:\Users\user\git\pathod\libpathod\language.py", line 991, in parse_request
    return Request(Request.expr().parseString(s, parseAll=True))
  File "C:\Users\user\git\pathod\libpathod\contrib\pyparsing.py", line 1021, in parseString
    loc, tokens = self._parse( instring, 0 )
  File "C:\Users\user\git\pathod\libpathod\contrib\pyparsing.py", line 894, in _parseNoCache
    loc,tokens = self.parseImpl( instring, preloc, doActions )
  File "C:\Users\user\git\pathod\libpathod\contrib\pyparsing.py", line 2368, in parseImpl
    loc, exprtokens = e._parse( instring, loc, doActions )
  File "C:\Users\user\git\pathod\libpathod\contrib\pyparsing.py", line 894, in _parseNoCache
    loc,tokens = self.parseImpl( instring, preloc, doActions )
  File "C:\Users\user\git\pathod\libpathod\contrib\pyparsing.py", line 2478, in parseImpl
    ret = e._parse( instring, loc, doActions )
  File "C:\Users\user\git\pathod\libpathod\contrib\pyparsing.py", line 921, in _parseNoCache
    tokens = fn( instring, tokensStart, retTokens )
  File "C:\Users\user\git\pathod\libpathod\contrib\pyparsing.py", line 675, in wrapper
    return func(*args[limit[0]:])
  File "C:\Users\user\git\pathod\libpathod\language.py", line 255, in 
    return e.setParseAction(lambda x: klass(*x))
  File "C:\Users\user\git\pathod\libpathod\language.py", line 232, in __init__
    self.val = val.decode("string_escape")
ValueError: Trailing \ in string
Copied from original issue: mitmproxy/pathod#13