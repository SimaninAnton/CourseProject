Member
mhils commented on 9 Oct 2014
TestProxyChainingSSLReconnect seems to contain a difficult-to-trigger race condition, only surfacing every 100th run or so. This is possibly related to mitmproxy/netlib@e6a8730 - can .recv() trigger an SSL error in rare cases?
Every 0,1s: nosetests -x test_server.py:TestProxyChainingSSLReconnect

F
======================================================================
FAIL: Tests proper functionality of ConnectionHandler.server_reconnect mock.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/media/sf_git/mitmproxy/test/test_server.py", line 685, in test_reconnect
    assert self.chain[0].tmaster.state.flow_count() == 6  # + new request, repeated CONNECT from chain[1]
AssertionError:
-------------------- >> begin captured logging << --------------------
passlib.utils.compat: DEBUG: loaded lazy attr 'SafeConfigParser': <class ConfigParser.SafeConfigParser at 0x7fbf957218d8>
passlib.utils.compat: DEBUG: loaded lazy attr 'NativeStringIO': <built-in function StringIO>
passlib.utils.compat: DEBUG: loaded lazy attr 'BytesIO': <built-in function StringIO>
passlib.registry: DEBUG: registered 'htdigest' handler: <class 'passlib.handlers.digests.htdigest'>
passlib.registry: DEBUG: registered 'apr_md5_crypt' handler: <class 'passlib.handlers.md5_crypt.apr_md5_crypt'>
passlib.registry: DEBUG: registered 'des_crypt' handler: <class 'passlib.handlers.des_crypt.des_crypt'>
passlib.registry: DEBUG: registered 'ldap_sha1' handler: <class 'passlib.handlers.ldap_digests.ldap_sha1'>
passlib.registry: DEBUG: registered 'plaintext' handler: <class 'passlib.handlers.misc.plaintext'>
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): 127.0.0.1
pathod: INFO: 127.0.0.1:56905: app: GET /api/clear_log
requests.packages.urllib3.connectionpool: DEBUG: "GET /api/clear_log HTTP/1.1" 200 2
requests.packages.urllib3.connectionpool: INFO: Starting new HTTPS connection (1): 127.0.0.1
pathod: INFO: 127.0.0.1:45274: app: GET /api/clear_log
requests.packages.urllib3.connectionpool: DEBUG: "GET /api/clear_log HTTP/1.1" 200 2
pathod: INFO: 127.0.0.1:56915: crafting spec: 418:b"content"
--------------------- >> end captured logging << ---------------------

----------------------------------------------------------------------
Ran 1 test in 0.797s

FAILED (failures=1)