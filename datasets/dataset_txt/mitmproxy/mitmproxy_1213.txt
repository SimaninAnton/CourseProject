arnau commented on 10 Feb 2016
Steps to reproduce the problem:
(1). start mitmproxy with no-upstream-cert and an inline script (see below for the script).
mitmproxy --no-upstream-cert --script test.py
# test.py
def request(context, flow):
  print(flow.request.url == "https://google.com/")
(2). run
curl -XGET https://google.com/ \
       --cacert ~/.mitmproxy/mitmproxy-ca-cert.pem \
       --proxy http://localhost:8080
What is the expected behavior?
The printed result should be True (so flow.request.url should be https://google.com/).
Alternatively, flow.request.pretty_url could have the original URL.
What went wrong?
The result is False as flow.request.url == http://google.com:443.
Any other comments?
In situations like https://example.org:8443 the resulting http://example.org:8443 is undistinguishable from a request to http://example.org:8443.
If it is not a bug (I'm not sure it is intended to be the way it is) it would be great to query the original requested URL.
mitmproxy version: 0.15
Operating System: OSX Yosemite 10.10.5
Python: 2.7.11