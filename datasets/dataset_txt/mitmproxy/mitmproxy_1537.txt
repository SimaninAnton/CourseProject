idiotsavant commented on 26 Jan 2015
I am using 0.11.3 on CentOS 6.6. I run the proxy in transparent mode and use iptables to redirect traffic as detailed in the tutorial. The mitdump command is:
mitmdump -T -p 7777 -s 'responseMod.py' --anticache --ciphers '!DH:!ECDH:HIGH:MEDIUM:!aNULL:!MD5'
The traffic flow is:
[Firefox on VM host] <--> [eth1 on VM running proxy]-[eth0 on VM running proxy] <--> [Website]
This works fine; the responses of HTTPS pages are modified as expected.
I am simultaneously capturing the traffic using tcpdump on eth1:
tcpdump -ni eth1 -s0 port 443 -w /tmp/transparent.pcap
Again, this works fine. I can use the mitmproxy-ca.pem key in Wireshark and decrypt the traffic.
The problem is if I switch from transparent to regular mode. I remove the -T option in mitmdump and the iptables rules, and configure Firefox to use the proxy explicitly on 7777 (all protocols) and run:
mitmdump -p 7777 -s 'responseMod.py' --anticache --ciphers '!DH:!ECDH:HIGH:MEDIUM:!aNULL:!MD5'
Now, if I capture in tcpdump I have to specify port 7777:
tcpdump -ni eth1 -s0 port 7777 -w /tmp/regular.pcap
But I cannot decrypt the traffic in Wireshark. Everything is fine in Firefox in both regular and transparent mode - the response of HTTPS pages is modified as expected - but I need the ability to passively capture and decrypt the traffic at the same time, and that only works in transparent mode.
I should say up front that I don't know if this is a bug, a limitation, or just a reflection of my lack of deep understanding of SSL decryption and how it works. Is this expected behaviour? I want to use regular mode if possible as it makes it much easier for users to set up.
Many thanks!