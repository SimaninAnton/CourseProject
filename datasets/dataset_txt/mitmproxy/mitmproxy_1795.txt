joeshaw commented on 27 Feb 2013
This may not be a mitmproxy problem exactly, but I'm not sure the right way to fix it.
When trying to download files off of Rackspace's Cloud Files CDN over SSL, settings subj.CN to the hostname in certutils.dummy_cert throws an exception. Here is the full stack trace:
Exception happened during processing of request from ('10.10.230.81', 54766)
Traceback (most recent call last):
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 582, in process_request_thread
    self.finish_request(request, client_address)
  File "/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py", line 506, in finish_request
    self.RequestHandlerClass(self.config, request, client_address, self, self.masterq)
  File "/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py", line 296, in __init__
    SocketServer.StreamRequestHandler.__init__(self, request, client_address, server)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/SocketServer.py", line 639, in __init__
    self.handle()
  File "/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py", line 302, in handle
    self.handle_request(cc)
  File "/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py", line 311, in handle_request
    request = self.read_request(cc)
  File "/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py", line 390, in read_request
    certfile = self.find_cert(host, port),
  File "/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/proxy.py", line 363, in find_cert
    ret = certutils.dummy_cert(self.config.certdir, self.config.cacert, host, sans)
  File "/private/tmp/virtualenv/lib/python2.7/site-packages/libmproxy/certutils.py", line 103, in dummy_cert
    subj.CN = commonname
Error: [('asn1 encoding routines', 'ASN1_mbstring_ncopy', 'string too long')]
The hostname in question is quite long, 770e367a37c3de670b35-249b6e3248188fa4608d24ff1f31e48f.ssl.cf2.rackcdn.com.
Any workaround?