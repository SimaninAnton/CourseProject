Cruz0r commented on 29 Oct 2013
I've got a cheap COMODO domain certificate which comes with an intermediary public root certificate. Signing order is [root] -> [intermediary root] -> [domain cert]. Currently, mitmproxy is unable to properly use this domain certificate because it doesn't send the intermediary root certificate along in client SSL negotiations. Clients can't validate the chain so the certificate isn't trusted - even when trying to access the actual domain name.
I've managed to get it working by editing the tcp.py file:
class BaseHandler, the convert_to_ssl function needed a 'ctx.load_verify_locations(certificate_chain)'
where certificate_chain should point to the intermediate certificate PEMfile (ie is a filename).
I have only tested this in transparent mode with 'openssl verify', but it did result in mitmproxy injecting my domain certificate which got trusted.
Would be nice if this got properly supported.