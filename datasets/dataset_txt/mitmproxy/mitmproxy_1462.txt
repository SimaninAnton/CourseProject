Contributor
dlethin commented on 1 May 2015
We're attempting to use the proxy in a legacy java application and running into a problem. We've configured java to use a proxy pointing to mitmdump we've started. However, one of the calls is failing. This is apparently because we are using a library which attempts to make an HTTP/1.0 request to the proxy, but the mitmdump is returning "HTTP/1.1"
Here is the failure our application returns:
09:48:57 Message: Unable to tunnel through 127.0.0.1:8897.  Proxy returns "HTTP/1.1 200 Connection established"
I tracked down the corresponding code for the library we are using:
                Socket tunnel = new Socket(proxyHostName, proxyPort);
                OutputStream out = tunnel.getOutputStream();
                String connect = "CONNECT " + host + ":" + port + " HTTP/1.0\r\n\r\n";
                byte buf[];
...
               // We asked for HTTP/1.0, so we should get that back
                if (!replyStr.startsWith("HTTP/1.0 200")) {
                    throw new IOException("Unable to tunnel through "
                                          + proxyHostName + ":" + proxyPort
                                          + ".  Proxy returns \"" + replyStr + "\"");
                }
Is there anything we can do via command line parameters or configuration of mitmdump which will ensure that HTTP 1.0 requests to the proxy will return v1.0 responses? That would be preferable at least in the short term rather than trying to get our application to use a new version of this code.
As additional background on this, we came across this when attempting to move our continuous integration build from a server running on OSX to a server running on Linux (RedHat7). The OSX build is not experiencing this problem (which is running mitmproxy 0.10.1). However, on RedHat7, we get the failure whether I run the latest (v0.11.x) or 0.10.1. I don't know much about origin of how the mitmproxy was installed on the OSX machine. Its a binary executable, where as the one I installed on our linux box was done through pip. The java code being run is that same as well as the java version on both platforms. I don't know enough about mitmproxy to know where the http protocol version is coming from. Maybe its a matter of changing the version of downstream python library dependency.
Thanks.
Doug