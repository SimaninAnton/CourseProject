ghost commented on 18 Sep 2015
What's the problem?
On some site like https://www.amazon.com and https://www.google.com in firefox 38 the error sec_error_bad_der occurs and firefox refuses to load the site. After Upgrading to the current version 40 the error changed to ssl_error_bad_cert_domain and it is possible to manually allow the site, at least if no HSTS is used. Other sites, e.g. Amazon or Google for other some other countries , worked without an error.
There is no problem with Internet Explorer at all.
I'm not sure if this is related to #755.
What's expected?
The sites should be shown without an error.
Which versions are affected?
I used the last master version from yesterday (GMT).
How to reproduce the problem?
I used mitmdump as a transparent proxy and tried to capture data. The error occurred every time.
Why does this happen?
Some parts of the certificate created by mitmdump resp. libmproxy are changed. Specially the Subject Alternative Names are mentioned. The IP of the server is added and that is done in a wrong way. After removing this, the sites worked.
I looked into the source code of firefox and indeed it seems that in version 38.0.5 a problem with Subject Alternative Name would lead to an bad der error; while in version 40.0.? a bad der error is changed to a bad cert domain error.
Despite that I do not know of any reason to add an IP to the certificate, mitmdump add the ip as a domain and not as an ip.
In the RFC (https://tools.ietf.org/html/rfc5280#section-4.2.1.6) it is said that the address MUST be stored in the octet string in "network byte order". Thus an ip like 64.64.64.64 has to be saved as 0x 40 40 40 40 but it is saved as the string "64.64.64.64".
I do not know if ICANN or whoever prohibits domains that could be an ip - how should the browser be know the different - as far as I know there is no TLD with only numbers. Thus a not existing domain is added as a Subject Alternative Name to the certificate. It seems that firefox does not like this and the internet explorer just ignores it.
The ip domain entry for sites working in firefox were added after the requested domain while in sites with the error the ip domain was added in front of it. Thus I think firefox simply ends the search after an error occurred or the domain is found.
How could the problem be solved?
As a workarround and with the fact that I do not know why the ip is added anyway, I commented out line 511 (sans.add(host)) in libmproxy/protocol/tls.py