Contributor
bazzinotti commented on 25 Dec 2015
Premise
Currently, mitmproxy supports client certs by way of the commandline argument --client-certs [dir] and expects cert filenames to be pre-named, apparently by target domain name (the documentation uses "example.org.pem" as an example). There are use-cases where it would more suitable to force the sending of a specific client-cert no matter the destination.
Use Cases
The correct client cert filename(s) are simply not known. The target(s) may have already been modified for MITM, which can be a lengthy process.
a TLS session is established to a known destination with the client cert. A new destination for a TLS session is dynamically determined from within the current TLS session. The connection to the new host requires the same client cert. This inability to know the destination prevents the client-cert from being specified for the new connection.
I found this to be important during a reverse engineering experiment in which I knew the domain, but I saw in a packet capture that the client cert was not being sent .. I tried a variety of symlinks that included subdomain information and whatever else to no avail. Since I had to also deal with the dynamic host aspect, I had to modify mitmproxy.
So, I wound up modifying mitmproxy to automatically always send a specific client certificate. My modifications are trivial PoC (proof-of-concept) modifications right now, and are not proper command-line argument invocations. I'm interested in talking with you if you are experienced with mitmproxy codebase and would like to help me implement an official contribution.
The PoC hard-codes a client-cert in libmproxy/models/connections.py establish_ssl function. To further it into an official update, the cmdline arg will need to be developed. I am thinking of using --force-client-cert
establish_ssl function must check for the existence of a forced-client-cert file (provided via the cmdline arg), verify it, and use it. Else, it simply refers to its prior implementation.
If you would like to give me some mitmproxy-codebase knowledge regarding how to properly implement this feature, please do.
Thanks, I'm hoping to implement this feature via a pull request sometime soon.