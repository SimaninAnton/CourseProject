chumaitoe commented on 5 Nov 2015
I have a transparent proxy interposed between an android device and the internet, such that all traffic runs through the proxy. I want to sort the traffic such that connections to our servers (i.e. from our app) go through the proxy (i.e., display), while other traffic (from the device) goes through a RawTCPLayer so that they are not presented with the mitmproxy cert which they will reject.
I am currently using examples/tls_passthrough.py from (the unreleased) 0.13.1, and it makes a good stopgap, but it is not sufficient, as it may reject our flows due to errors (of exactly the kind I'd be looking for) and/or accept flows from other (insecure or broken) apps, whose problems do not concern me.
I would like an -H flag (name not important), similar to -I, but inverse, that accepts a list of hostnames to accept for TLS proxying. In order for this to work, the compare must be done against the SNI field. The reason for relying on the client request to identify the server is that our servers are cloud based, such that our IP addresses cannot be guaranteed, and the DNS lookup will return CNAMEs, which may change during the course of a session, thus tracking the server side becomes nontrivial.