byteit101 commented on 27 Mar 2015
I got the following error
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/proxy/server.py", line 99, in handle
    protocol_handler(self.conntype)(self, **conn_kwargs).handle_messages()  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py", line 982, in handle_messages
    while self.handle_flow():
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py", line 1069, in handle_flow
    self.process_server_address(flow)  # The inline script may have changed request.host
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/http.py", line 1319, in process_server_address
    self.live.change_server(address, ssl=ssl)
  File "/usr/local/lib/python2.7/dist-packages/libmproxy/protocol/primitives.py", line 230, in change_server
    ssl != self.c.server_conn.ssl_established
AttributeError: 'NoneType' object has no attribute 'ssl_established'

mitmproxy has crashed!
Please lodge a bug report at: https://github.com/mitmproxy/mitmproxy
With the following input (yes, the host does resolve and works fine. Its on a private test net and works 100% without mitmproxy):
GET /m2p1.php HTTP/1.1
TE: deflate,gzip;q=0.3
Connection: TE, close
Host: server-47.n7.alliance.earth
User-Agent: libwww-perl/6.03
with the following script:
from libmproxy import controller, proxy
import os,re
from libmproxy.proxy.server import ProxyServer

class StickyMaster(controller.Master):
    def __init__(self, server):
        controller.Master.__init__(self, server)

    def run(self):
        try:
            return controller.Master.run(self)
        except KeyboardInterrupt:
            self.shutdown()

    def handle_request(self, msg):
        hid = (msg.request.host, msg.request.port)
        print "hello"
        print msg.request
        msg.reply()

config = proxy.ProxyConfig(
port=8080
,http_form_in="relative"
,http_form_out="relative"
)
server = ProxyServer(config)
m = StickyMaster(server)
m.run()