Mradr commented on 15 Sep 2017 â€¢
edited by mhils
Steps to reproduce the problem:
Error in processing of request from 43.243.130.81:44299
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py", line 932, in connection_thread
    self.handle_client_connection(connection, client_address)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py", line 63, in handle_client_connection
    self.channel
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py", line 76, in __init__
    None)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/connections.py", line 33, in __init__
    super().__init__(client_connection, address, server)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py", line 795, in __init__
    super().__init__(connection)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py", line 455, in __init__
    self.ip_address = Address(connection.getpeername())
OSError: [Errno 107] Transport endpoint is not connected
Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py", line 211, in read
    data = self.o.read(rlen)
  File "/usr/lib/python3.5/socket.py", line 575, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py", line 119, in handle
    root_layer()
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/modes/http_proxy.py", line 9, in __call__
    layer()
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/tls.py", line 383, in __call__
    layer()
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http1.py", line 72, in __call__
    layer()
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py", line 188, in __call__
    if not self._process_flow(flow):
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py", line 239, in _process_flow
    request = self.read_request_headers(f)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http1.py", line 14, in read_request_headers
    http1.read_request_head(self.client_conn.rfile)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/http1/read.py", line 53, in read_request_head
    headers = _read_headers(rfile)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/http1/read.py", line 324, in _read_headers
    line = rfile.readline()
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py", line 251, in readline
    ch = self.read(1)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py", line 229, in read
    raise exceptions.TcpDisconnect(str(e))
mitmproxy.exceptions.TcpDisconnect: [Errno 104] Connection reset by peer

mitmproxy has crashed!
Please lodge a bug report at: https://github.com/mitmproxy/mitmproxy
180.126.23.185:52715: Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py", line 211, in read
    data = self.o.read(rlen)
  File "/usr/lib/python3.5/socket.py", line 575, in readinto
    return self._sock.recv_into(b)
ConnectionResetError: [Errno 104] Connection reset by peer

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/server.py", line 119, in handle
    root_layer()
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/modes/http_proxy.py", line 9, in __call__
    layer()
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/tls.py", line 383, in __call__
    layer()
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http1.py", line 72, in __call__
    layer()
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py", line 188, in __call__
    if not self._process_flow(flow):
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http.py", line 239, in _process_flow
    request = self.read_request_headers(f)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/proxy/protocol/http1.py", line 14, in read_request_headers
    http1.read_request_head(self.client_conn.rfile)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/http1/read.py", line 53, in read_request_head
    headers = _read_headers(rfile)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/http/http1/read.py", line 324, in _read_headers
    line = rfile.readline()
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py", line 251, in readline
    ch = self.read(1)
  File "/usr/local/lib/python3.5/dist-packages/mitmproxy/net/tcp.py", line 229, in read
    raise exceptions.TcpDisconnect(str(e))
mitmproxy.exceptions.TcpDisconnect: [Errno 104] Connection reset by peer
As far as what or why - I really don't know. I have my proxy open right now allowing basically random bots to find bugs and other issues with my script but I keep seeing errors like these popping up a lot.
System information
Mitmproxy version: 2.0.2 (release version)
Python version: 3.5.2
Platform: Linux-4.4.0-93-generic-x86_64-with-Ubuntu-16.04-xenial
SSL version: OpenSSL 1.1.0f 25 May 2017
Linux distro: Ubuntu 16.04 xenial