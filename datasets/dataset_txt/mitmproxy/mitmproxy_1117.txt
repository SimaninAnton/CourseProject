Contributor
javabrett commented on 1 May 2016
As at current master (d84fc64), mitmproxy will in certain situations generate X.509 certificates for remote sites which are accepted without error by a web-browser, whereas a direct-connection to the same site would trigger TLS errors such as SSL_ERROR_BAD_CERT_DOMAIN, NET::ERR_CERT_COMMON_NAME_INVALID. This certificate "enrichment", whilst nicely removing a browser-error seen by a direct-connection, makes mitmproxy less transparent, and may prevent or interfere with certain types of testing. Currently this behaviour cannot be configured; the behaviour should be absent or at least configurable, and preferably non-default.
The error-nilling occurs when accessing a domain via a name which is not the Subject CN, and also does not match a subjectAltName (SAN). mitmproxy currently adds the client-request hostname to the SANs, even when upstream certificate-sniffing is enabled (default), so mitmproxy can see that the client's requested hostname does not match, but it is added to the certificate regardless. This occurs here.
A good test-case is https://mitm.it/ , which is not-intended to be accessed over HTTPs, and when it is (directly), it serves the main mitmproxy.org website, but not before throwing a browser-error, because it is using mitmproxy.org's certificate, which has no SAN for mitm.it. If you mitmproxy this connection, the resulting generated certificate will have mitm.it as a SAN, and your browser-connection will be error-less. Normally perhaps a nice thing in removing the error, but I didn't ask mitmproxy to do that, and it is sniffing upstream certs by-default, so I expect the cert to be more-or-less identical, other than the Issuer of course.
Steps to reproduce the problem:
Access https://mitm.it/ directly from your browser (no mitmproxy), observe CN mismatch warning and not mitm.it in CN or SAN.
Access https://mitm.it/ via mitmproxy and observe that mitm.it appears in the certificate SAN.
What is the expected behavior?
When upstream cert sniffing is enabled, just pass-through the Subject CN and the subjectAltName unmodified by-default. Consider some non-default runtime options to:
Copy the Subject CN to a subjectAltName in the unusual case that there is a subjectAltName, but it does not contain the host data in Subject CN. Note that this could change the acceptance of the cert in a client strictly adhering to RFC 2818 (Thunderbird 38?). But can we find such an example certificate on the internet somewhere?
Add the client-request hostname to the SANs (creating if necessary, in which case the CN also needs to be copied-in), to allow the current error-nullifying behaviour to be restored if desired.
Always create subjectAltName if absent from (deprecated) Subject CN. Probably unnecessary since clients always understand Subject CN.
When upstream cert sniffing is disabled with --no-upstream-cert, create both Subject CN (deprecated) and subjectAltName using that name. Although this could result in a different certificate now having subjectAltName, there should be no difference to a client. Hostname error-nullifying is enabled.
What went wrong?
Generated cert allows more names than the upstream server cert.
Any other comments?
An earlier change made in 375dbe0 is correct, and stopped removing a hostname from the SANs, said removal/de-duplication being incorrect. The relevant RFC 2818 https://tools.ietf.org/html/rfc2818 states:
3.1 Server Identity
...
If a subjectAltName extension of type dNSName is present, that MUST be used as the identity. Otherwise, the (most specific) Common Name field in the Subject field of the certificate MUST be used. Although the use of the Common Name is existing practice, it is deprecated and Certification Authorities are encouraged to use the dNSName instead.
That is, if there is a subjectAltName, for clients it ought to be read and be assumed authoritative and complete, and not unioned with a later-read Subject CN. According to that, Thunderbird 38 as mentioned in the comment would be behaving correctly in ignoring the Subject. Certificates that do not include the Subject hostname as a dnsName in subjectAltName are running-foul of the RFCs.
Mitmproxy Version: master (d84fc64)
Operating System: LinuxMint 17.1 3.13.0-24-generic #47-Ubuntu SMP Fri May 2 23:30:00 UTC 2014 x86_64 x86_64 x86_64 GNU/Linux