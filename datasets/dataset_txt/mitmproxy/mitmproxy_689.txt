PranavPrakash52 commented on 11 Apr 2017 â€¢
edited
Steps to reproduce the problem:
1.Copy this script from the examples
# This scripts demonstrates how mitmproxy can switch to a second/different upstream proxy
# in upstream proxy mode.
#
# Usage: mitmdump -U http://default-upstream-proxy.local:8080/ -s change_upstream_proxy.py
#
# If you want to change the target server, you should modify flow.request.host and flow.request.port


def proxy_address(flow):
   return ("proxy-ip", port)


def request(flow):
    if flow.request.method == "CONNECT":
        # If the decision is done by domain, one could also modify the server address here.
        # We do it after CONNECT here to have the request data available as well.
        return
    address = proxy_address(flow)
    if flow.live:
        flow.live.change_upstream_proxy_server(address)
2.Run the above script.
Any other comments? What have you tried so far?
I tried running but i am getting this error
$ mitmdump -U http://127.0.0.1:8085/ -s update_mitmproxy.py --no-http2
Loading script: update_mitmproxy.py
Proxy server listening at http://0.0.0.0:8080
Proxy server listening at http://0.0.0.0:8080
127.0.0.1:58627: clientconnect
127.0.0.1:58627: clientconnect
127.0.0.1:58627: serverconnect
  -> 127.0.0.1:8085
127.0.0.1:58627: Server connection to 127.0.0.1:8085 failed: Error connecting to "127.0.0.1": [Errno 61] Connection refused
127.0.0.1:58627: Server connection to 127.0.0.1:8085 failed: Error connecting to "127.0.0.1": [Errno 61] Connection refused
127.0.0.1:58627: ProtocolException('Server connection to 127.0.0.1:8085 failed: Error connecting to "127.0.0.1": [Errno 61] Connection refused',)
127.0.0.1:58627: clientdisconnect
127.0.0.1:58627: clientdisconnect
 
System information
Mitmproxy version: 2.0.1
Python version: 3.5.2
Platform:Linux-4.4.0-51-generic-x86_64-with-Ubuntu-16.04-xenial
SSL Version:OpenSSL 1.0.2g 1 Mar 2016
Linux distro: Ubuntu 16.04 xenial