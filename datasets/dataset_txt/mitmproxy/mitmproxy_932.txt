Contributor
rofreg commented on 29 Sep 2016
Steps to reproduce the problem:
Get a trusted SSL certificate issued by Comodo (let's say it's for www.rofreg.com), and convert it into a .pem file that includes all intermediate certs
Update your /etc/hosts file to redirect www.rofreg.com to 127.0.0.1
Run mitmproxy --cert=your_cert.pem -R https://www.example.com
Open https://localhost:8080 in Safari
What is the expected behavior?
The page should load without any SSL issues.
What went wrong?
Safari does not trust the intermediate certificates, and the request is blocked.
Any other comments? What have you tried so far?
This one is baffling me pretty good, but I've confirmed that the exact same .pem file DOES work in Safari when served up by a plain Rails server. My hunch is that something is going wrong with the intermediate certs in the .pem file, such that they don't get properly delivered during the handshake, but I'm not yet familiar enough with mitmproxy to know where I should start looking. Any thoughts? I'd be happy to dig into this further myself (especially since I have a valid .pem file that can reproduce the problem), just hoping for some guidance :)
Mitmproxy Version: 0.18
Operating System: OS X 10.11.6