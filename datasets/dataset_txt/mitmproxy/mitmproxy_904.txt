Contributor
chhsiao90 commented on 26 Oct 2016
The problem seems occurred after #1664 .
It seems that the Connection.get_servername() from OpenSSL return bytes.
And that cause json dumps failed.
I would like pick up this problem, and help display sni and cipher (from #582).
Is that just used str(self.connection.get_servername()) to cast it into str is OK?
Steps to reproduce the problem:
mitmweb with latest master version
curl -x https://example.com
mitmweb display error stacktrace
Traceback (most recent call last):
  File "/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/tornado/ioloop.py", line 1041, in _run
    return self.callback()
  File "/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/tools/web/master.py", line 172, in <lambda>
    tornado.ioloop.PeriodicCallback(lambda: self.tick(timeout=0), 5).start()
  File "/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/master.py", line 105, in tick
    handle_func(obj)
  File "/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/controller.py", line 70, in wrapper
    master.addons(f.__name__, message)
  File "/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/addonmanager.py", line 90, in __call__
    self.invoke(i, name, *args, **kwargs)
  File "/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/addonmanager.py", line 85, in invoke
    func(*args, **kwargs)
  File "/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/addons/state.py", line 285, in request
    self.add_flow(f)
  File "/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/addons/state.py", line 205, in add_flow
    self.flows._add(f)
  File "/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/addons/state.py", line 112, in _add
    view._add(f)
  File "/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/tools/web/master.py", line 33, in _add
    data=app.convert_flow_to_json_dict(f)
  File "/Users/han-pc/.pyenv/versions/3.5.2/envs/mitm/lib/python3.5/site-packages/mitmproxy/tools/web/app.py", line 174, in broadcast
    message = json.dumps(kwargs, ensure_ascii=False)
  File "/Users/han-pc/.pyenv/versions/3.5.2/lib/python3.5/json/__init__.py", line 237, in dumps
    **kw).encode(obj)
  File "/Users/han-pc/.pyenv/versions/3.5.2/lib/python3.5/json/encoder.py", line 198, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/Users/han-pc/.pyenv/versions/3.5.2/lib/python3.5/json/encoder.py", line 256, in iterencode
    return _iterencode(o, 0)
  File "/Users/han-pc/.pyenv/versions/3.5.2/lib/python3.5/json/encoder.py", line 179, in default
    raise TypeError(repr(o) + " is not JSON serializable")
TypeError: b'example.com' is not JSON serializable