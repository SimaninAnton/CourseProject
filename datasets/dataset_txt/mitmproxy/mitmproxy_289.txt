Contributor
drzax commented on 26 May 2018
New to this, so apologies if I'm just missing something obvious.
Steps to reproduce the problem:
Define test.py addon
from mitmproxy import ctx
class OptionsTest:
    def load(self, loader):
        loader.add_option(
            name = "anoption",
            typespec = str,
            default = "None",
            help = "Add a header to responses",
        )

    def configure(self, updates):
        ctx.log.info('Test option: %s' % ctx.options.anoption)

    def response(self, flow):
        flow.response.headers["anoption"] = str(ctx.options.anoption)

addons = [
    OptionsTest()
]
Load addon and define anoption in ~/.mitmproxy/config.yaml
scripts:
  - ~/.mitmproxy/test.py
anoption: "foo"
Notice that anoption isn't documented in output from mitmweb --options
Run mitmdump and note that the log shows the option's default value, not the one defined in config.yaml
mitmdump
Loading script ~/.mitmproxy/test.py
Test option: None
Proxy server listening at http://*:8080
Any other comments? What have you tried so far?
Options set on the command line are loaded:
mitmdump --set anoption="bar"
Loading script ~/.mitmproxy/test.py
Test option: bar
Proxy server listening at http://*:8080
System information
mitmproxy --version
Mitmproxy: 4.0.1
Python:    3.6.5
OpenSSL:   OpenSSL 1.0.2o  27 Mar 2018
Platform:  Darwin-17.5.0-x86_64-i386-64bit