xitauw2 commented on 20 Jan 2015
I try to use libmproxy in transparent mode to analyze https traffic. Unfortunatelly I faced with significant memory leaks (which lead to out of memory exception).
from libmproxy import flow, proxy, platform
import sys
from netlib.odict import ODictCaseless
import os

class FlowTest(flow.FlowMaster):
    def run(self):
        try:
            flow.FlowMaster.run(self)
        except KeyboardInterrupt:
            self.shutdown()

    def handle_request(self, r):
        f = flow.FlowMaster.handle_request(self, r)
        if f:
            r.reply()

        return f

    def handle_response(self, r):
        f = flow.FlowMaster.handle_response(self, r)
        if f:
            r.reply()

        return f


if __name__ == '__main__':
    config = proxy.ProxyConfig(
    certfile=os.path.expanduser('./certs/rui.result.pem'),
    transparent_proxy=dict(
        resolver=platform.resolver(),
        sslports=[443, 8443, 9443]
        )
    )
    state = flow.State()
    server = proxy.ProxyServer(config, 8080)
    m = FlowTest(server, state)
    print "Proxy started"
    m.run()