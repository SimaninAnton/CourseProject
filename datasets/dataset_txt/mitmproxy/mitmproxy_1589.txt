xrd commented on 21 Oct 2014
I love mitmproxy but it seems to be an order of magnitude slower than Charles.
I'm using the following script:
#!/usr/bin/env ruby

and_then = Time.now()
puts "Starting charles: #{and_then}"
100.times do |i|
  `curl -s --proxy http://localhost:8888 http://google.com`
end
and_now = Time.now()
puts "Ending charles: #{and_now - and_then}"

and_then = Time.now()
puts "Starting mitmproxy: #{and_then}"
100.times do |i|
  `curl -s --proxy http://localhost:8080 http://google.com`
end
and_now = Time.now()
puts "Ending mitmproxy: #{and_now - and_then}"
My results are this:
Starting charles: 2014-10-20 14:07:19 -0700
Ending charles: 1.567501
Starting mitmproxy: 2014-10-20 14:07:21 -0700
Ending mitmproxy: 19.765162
Is this inevitable given mitmproxy is written in python and Charles is compiled object code? Or, is my test suspect?
This is important because my client app (running on an iPhone) thinks the network has dropped when I use mitmproxy rather than Charles.