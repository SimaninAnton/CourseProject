Member
mhils commented on 4 Aug 2016
Steps to reproduce the problem:
Call reply.send()
What went wrong?
In a handler, we send a reply to the connection thread using reply.send(). The handler thread pauses.
The proxy thread does some stuff and asks for new info from the master.
In the main thread, we are still in the handler from step 1. The handler now calls a child handler (e.g. by calling super() in one of our masters).
controller.handler determines if it is the topmost handler by checking not message.reply.handled. However, message.reply has already been updated to the new reply object which has been set by the connection thread in 2, so the sub handler believes nobody is handling and starts handling the completely different event.
@cortesi: How do we solve this?
(For reference, I reproduced this by swapping the calls to master.addons() and f(master,message) in controller.handler while having an inline script that kills requests)
Mitmproxy Version: master
Operating System: Win10 x64