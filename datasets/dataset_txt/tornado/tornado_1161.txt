carlio commented on 21 Jun 2011
Using a unicode object as the domain value when setting a cookie results in an error message that isn't very helpful:
import tornado.web
import tornado.ioloop
import tornado.httpserver

class AddUnicodeCookieHandler(tornado.web.RequestHandler):

    def get(self):
        self.set_cookie('testcookie', value='some_value', domain=u"fish")
        self.write('hello')

if __name__ == '__main__':
    urllist = (('/',AddUnicodeCookieHandler),)
    app = tornado.web.Application(urllist)

    http_server = tornado.httpserver.HTTPServer(app)
    http_server.listen(9999, 'localhost')

    ioloop = tornado.ioloop.IOLoop.instance()
    ioloop.start()
Running this and access http://localhost:9999/ results in this error:
Traceback (most recent call last):
  File "/home/carl/tmp/tornado-test/env/lib/python2.7/site-packages/tornado/web.py", line 863, in _execute
    self.finish()
  File "/home/carl/tmp/tornado-test/env/lib/python2.7/site-packages/tornado/web.py", line 590, in finish
    self.flush(include_footers=True)
  File "/home/carl/tmp/tornado-test/env/lib/python2.7/site-packages/tornado/web.py", line 555, in flush
    self.request.write(headers + chunk)
  File "/home/carl/tmp/tornado-test/env/lib/python2.7/site-packages/tornado/httpserver.py", line 490, in write
    assert isinstance(chunk, str)
AssertionError
ERROR:root:Cannot send error response after headers written
Obviously using unicode objects is a bit stupid but there could be more checks before it gets all the way to writing the headers.