Contributor
felinx commented on 28 Aug 2010
Some guys are confused about http_server.start() when they reading the docstring of HTTPServer,
The docstring say (httpserver.py Line: 119):
http_server.start() # Forks multiple sub-processes
Acutally, start() without args will not fork sub-processes because
the default num_processes has been modified to one rather than None as before.
The docstring description does not match with the code now, maybe you need update this paragraph.
By default, listen() runs in a single thread in a single process. You
can utilize all available CPUs on this machine by calling bind() and
start() instead of listen():

    http_server = httpserver.HTTPServer(handle_request)
    http_server.bind(8888)
    http_server.start() # Forks multiple sub-processes
    ioloop.IOLoop.instance().start()

start() detects the number of CPUs on this machine and "pre-forks" that
number of child processes so that we have one Tornado process per CPU,
all with their own IOLoop. You can also pass in the specific number of
child processes you want to run with if you want to override this
auto-detection.