Contributor
chrisseto commented on 26 Aug 2014
So a bit of an edge case here but I'm attempting to proxy a streamed upload to Rackspace.
This code does exactly what I need but for amazon's S3 service.
Sadly Rackspace does not seem to support multipart uploads so the only option, without reading the entire file into memory, is to make some form of generator.
So is there any way to turn data_recieved from RequestsHandler decorated with tornado.web.stream_request_body into a generator that could be referenced in prepare and passed to other functions?
Best case scenario the code would look something like this:
@tornado.web.stream_request_body
class UploadHandler(RequestHandler):
    def prepare(self):
        requests.post('RackspaceUrl', data=self.data_received, stream=True)

    def data_received(self, data):
        #Process data if needed
        yield data