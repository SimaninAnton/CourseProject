ihjmh commented on 31 Mar 2017
I'm trying to use AsyncHttpClient to replace requests in a third party SDK, code like this:
class SDKRuquest(object):
        ......
        def request(self,method,url,**kwargs):
              r = requests.request(
                                   method=method,
                                   url=url,
                                  **kwargs
                                                        )
              return r.json()
        .......
here is what i'm trying to do:
class SDKRuquest(object):
        ......
        def request(self,method,url,**kwargs):
              #r=self.async_request(method,url,**kwargs)
              #return r
              # of course it does not work ,have to use gen.corountine and yield 

        @gen.corountine
        def async_request(self,method,url,**kwargs):
              r=yield AsyncHTTPClient().fetch(......)
              return response.body  
        .......
Now you can see, I have to change the all the related functions in order to use AsyncHTTPClient(),I just wanna know if there is a method that don't need the change too much other code of the SDK ,only make async_request work, thanks