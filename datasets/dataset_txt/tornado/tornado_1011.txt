Contributor
ysimonson commented on 11 Feb 2013
I've seen this mentioned a few times ([1], [2]), but I think it's worth revisiting.
My company manages multiple tornado-backed sites, and one problem we've had is the management of middleware-like logic across sites. For example, we use SQLAlchemy for our ORM. Currently on each of the sites we create a base controller that overrides on_finish to ensure per-request DB transactions are closed out.
Now, we could create a single common base controller that all controllers across all of the sites inherit. But there's a couple of problems:
The middleware-like logic across the sites can sometimes be different. e.g. some sites use the default static_url implementation for Tornado, whereas others override it to play well with a CDN deployment.
We'd have to separate out the base controller into a python package so it's easily distributable. This feels heavy.
Ideally, there would just be a way to hook this sort of logic into a site without resorting to creating a base controller - i.e. there would a middleware system. I think this would bring about better modularity, and in turn, get people to share tiny bits of tornado logic that might otherwise remain proprietary. I know we certainly would be happy to move our middleware-like logic into something open source.
This would be a pretty major change, so I'd like some opinions on whether this could feasibly be merged in - and what it might look like - before continuing forward. But I'm willing to code something up and submit a pull request.
One thing to bear in mind is that this might deprecate OutputTransforms, because they would be redundant. That would mean either this would have to be a breaking change, or the middleware engine would have to be designed to support backwards-compatibility with OutputTransforms.
1: #49
2: https://groups.google.com/forum/?fromgroups=#!topic/python-tornado/YPKQYHG6Hg0