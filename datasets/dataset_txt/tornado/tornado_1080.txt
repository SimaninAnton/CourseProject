Contributor
ahassany commented on 18 Apr 2012
I've not figure out what's wrong with this test case, I'm not sure if it's a bug or I'm doing something wrong!
The Request handler implements has asynchronous GET, the get adds a callback for the next IOLoop round. This works fine if I'm running a regular app, but it times out in the unit testing.
import tornado.web
from tornado.ioloop import IOLoop
from tornado.testing import AsyncHTTPTestCase

class LazyHandler(tornado.web.RequestHandler):

    def _lazy_finish(self):
        self.write("finishing request\n")
        self.finish()

    @tornado.web.asynchronous
    def get(self):
        self.write("Lazy Handler\n")
        IOLoop.instance().add_callback(self._lazy_finish)

class LazyHandlerTest(AsyncHTTPTestCase):
    def get_app(self):
        return tornado.web.Application([('/', LazyHandler)])

    def test_get_no_wait(self):
        """This works fine"""
        self.http_client.fetch(self.get_url('/') , self.stop)

    def test_get_using_client(self):
        """This will timeout"""
        self.http_client.fetch(self.get_url('/') , self.stop)
        self.wait()

    def test_get_using_fetch(self):
        """This will timeout"""
        self.fetch('/')