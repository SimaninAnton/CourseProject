892768447 commented on 2 May 2016 â€¢
edited
haha! Once I was writing a library that named http.py
http.py can not found HTTPRequest
Traceback (most recent call last):
File "D:\Python3.4.3\lib\site-packages\tornado-4.3-py3.4-win32.egg\tornado\httputil.py", line 39, in
import Cookie # py2
ImportError: No module named 'Cookie'
During handling of the above exception, another exception occurred:
Traceback (most recent call last):
File "G:\Workspace\PythonProject\utils\http.py", line 5, in
from tornado.httpclient import HTTPRequest
File "D:\Python3.4.3\lib\site-packages\tornado-4.3-py3.4-win32.egg\tornado\httpclient.py", line 49, in
from tornado import httputil, stack_context
File "D:\Python3.4.3\lib\site-packages\tornado-4.3-py3.4-win32.egg\tornado\httputil.py", line 41, in
import http.cookies as Cookie # py3
File "G:\Workspace\PythonProject\utils\http.py", line 5, in
from tornado.httpclient import HTTPRequest
ImportError: cannot import name 'HTTPRequest'
http.py
#!/usr/bin/env python
# -*- coding: utf-8 -*-

from tornado import gen
from tornado.httpclient import HTTPRequest
from tornado.ioloop import IOLoop

try:
    from tornado.curl_httpclient import CurlAsyncHTTPClient as HttpClient    # @UnusedImport
except:
    from tornado.httpclient import AsyncHTTPClient as HttpClient    # @Reimport @UnusedImport

@gen.coroutine
def get():
    response = yield gen.Task(HttpClient().fetch,
        HTTPRequest("http://127.0.0.1/menu",
            method = "GET",
            max_redirects = 3,
            follow_redirects = True, allow_nonstandard_methods = True
        ), raise_error = False,
    )
    print(response.body)

    IOLoop.instance().stop()

io_loop = IOLoop.current()
io_loop.run_sync(get)