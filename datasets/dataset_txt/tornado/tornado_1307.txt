Contributor
weaver commented on 4 Feb 2010
Patch: http://github.com/weaver/tornado/commit/1fea8629440fb4145c1252442b4c6b76f2752cf2
Description
While working on STARTTLS support for a project (see http://gist.github.com/293449) I found that TCP clients would sometimes appear to "hang" after a connection was initially established and they'd called write(). After some digging I saw that under certain conditions, kqueue would only signal a WRITE event when the socket was initially writable, but not always every time IOStream needed a WRITE to send its buffer.
To Reproduce
Run the starttls.py http://gist.github.com/293449 script in OS X or a *BSD. Then, run it again without using the _KQueue implementation included in the example (change line 472 to `io = IOLoop()'). The client never sends its "hello" message.
Solutions
I played around with various options, such as adding a flush() method to IOStream or calling _handle_write() from write(), but these all seemed hacky or required wide-ranging changes in my application code. Refactoring _KQueue seemed best.