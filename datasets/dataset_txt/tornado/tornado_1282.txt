ssadler commented on 18 Apr 2010
To reproduce, start a server with this handler:
pong = 'http://localhost:8888/pong'

class MainHandler(tornado.web.RequestHandler):
    @tornado.web.asynchronous
    def get(self):
        http = tornado.httpclient.AsyncHTTPClient()
        http.fetch(pong, self.async_callback(self.on_response))

    def on_response(self, response):
        self.write("Hello, world")
        self.finish()

class PongHandler(tornado.web.RequestHandler):
    def get(self):
        self.write("Pong")

application = tornado.web.Application([
    (r"/a", MainHandler),
    (r"/pong", PongHandler),
])
And benchmark it with ab at huge concurrency (10000 or so). The idea is to have it encounter a "too many open files" or "IOError: [Errno 9] Bad file descriptor" exception.
Adding _log.addHandler(logging.StreamHandler()) to ioloop.py results in the exceptions being printed as expected.
I also encountered this error when I got Swirl (http://github.com/enaeseth/swirl) to produce an error, except it was trying to use logger "tornado.web".