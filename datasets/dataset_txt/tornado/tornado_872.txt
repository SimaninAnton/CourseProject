paul-ollis commented on 29 Nov 2013
I have seen this occur in version 3.1.1
The affected code is in ioloop.py, method start, which begins at line 549. More
specifically the issue arises in the code loop, starting starting at line 605
which handles expired timeouts.
If an invoked callback takes an unreasonable time to execute and adds a new
timout for itself such that the expirey time has elapsed before it returns then
the the affected code will (I believe) loop forever. Adding the line::
now = self.time()
immediately after line 618, which invokes _run_callback fixes this, at least
for non-pathological code.
FYI I discovered this whilst trying to use Tornado to replace the bulk of some
code I am refactoring. Otherwise, I would probably have naturally used the
PeriodicCallback class and not encountered this issue.
If this 'fix' is considered worthwhile, I am happy to add a matching regression
test and patch file.