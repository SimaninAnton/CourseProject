zhiephie commented on 15 May 2017
This is the point, How to handle global message In class ClientWSConnection(websocket.WebSocketHandler):
self.atg = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
self.atg.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
self.atg.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)
self.atg.connect((atghost, atgport))
class ClientWSConnection(websocket.WebSocketHandler):

    def initialize(self, room_handler):
        """Store a reference to the "external" RoomHandler instance"""
        self.__rh = room_handler
        self.atg = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
        self.atg.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
        self.atg.setsockopt(socket.SOL_SOCKET, socket.SO_KEEPALIVE, 1)
        self.atg.connect((atghost, atgport))

    def open(self):
        self.__clientID =  self.get_cookie("ftc_cid")
        self.__rh.add_client_wsconn(self.__clientID, self)
        logger.info("| WS_OPENED | %s" % self.__clientID)

    def on_message(self, message):
        msg = json.loads(message)
        mlen = len(msg['payload'])
        msg['username'] = self.__rh.client_info[self.__clientID]['nick']