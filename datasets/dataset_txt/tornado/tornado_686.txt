fcicq commented on 15 Feb 2015
Content production can not be paused/resumed based on tcpstream(iostream) congestion,
and no method can be used to pause/resume the receiving side of the iostream,
congestion feedback is impossible at the moment with tornado.
so it may take a lot of memory to serve contents to misbehaving clients like "curl --limit-rate 1" until StreamBufferFullError is raised or something.
I experienced this issue with a proxy server written in tornado,
the receiver side of the proxy have a large Recv-Q seen with netstat,
as it doesn't process and send to the next hop as fast as receiving, causing a big tcp buffer usage.
The real issue is the producer-consumer speed mismatch,
Twisted has solved this problem for a long time with the Twisted producer and consumer system,
so feel free to consider this issue as feature request.
https://twistedmatrix.com/documents/current/core/howto/producers.html