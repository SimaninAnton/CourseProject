awong1900 commented on 21 Apr 2017
Websocket, if yield on on_message, will block ping, pong.
I have read this PR #1909.
Do I need use spawn_callback instead it?
Test code:
import logging
import tornado.escape
import tornado.ioloop
import tornado.options
import tornado.web
import tornado.websocket
import os.path
import uuid
from tornado import gen

from tornado.options import define, options

define("port", default=3000, help="run on the given port", type=int)


class Application(tornado.web.Application):
    def __init__(self):
        handlers = [
            # (r"/", MainHandler),
            (r"/websocket", EchoWebSocket)
        ]
        settings = dict(
            debug=True,
            websocket_ping_interval=5
        )
        super(Application, self).__init__(handlers, **settings)
        
        

class MainHandler(tornado.web.RequestHandler):
    def get(self):
        # self.render("index.html", messages=ChatSocketHandler.cache)
        print ".."
        self.finish()

class EchoWebSocket(tornado.websocket.WebSocketHandler):
    def open(self):
        print("WebSocket opened")

    @gen.coroutine
    def on_message(self, message):
        self.write_message(u"You said: " + message)
        yield gen.sleep(40)
            
    def on_pong(self, data):
        print "on_pong"

    def on_close(self):
        print("WebSocket closed")
        
        
def main():
    tornado.options.parse_command_line()
    app = Application()
    app.listen(options.port)
    tornado.ioloop.IOLoop.current().start()


if __name__ == "__main__":
    main()