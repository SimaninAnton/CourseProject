hanbaga commented on 23 Aug 2017
    def find_handler(self, request, **kwargs):
        for rule in self.rules:
            target_params = rule.matcher.match(request)
            if target_params is not None:
                if rule.target_kwargs:
                    target_params['target_kwargs'] = rule.target_kwargs

                delegate = self.get_target_delegate(
                    rule.target, request, **target_params)

                if delegate is not None:
                    return delegate
        return None
    def headers_received(self, start_line, headers):
        request = httputil.HTTPServerRequest(
            connection=self.request_conn,
            server_connection=self.server_conn,
            start_line=start_line, headers=headers)

        self.delegate = self.router.find_handler(request)
        #the case self.delegate is None if not define rule
        return self.delegate.headers_received(start_line, headers)

    def data_received(self, chunk):
        #the case self.delegate is None  if not define rule
        return self.delegate.data_received(chunk)

    def finish(self):
        #the case self.delegate is None if not define rule
        self.delegate.finish()

    def on_connection_close(self):
        self.delegate.on_connection_close()
please fix the bug when not find any handler.