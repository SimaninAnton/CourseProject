Contributor
ColorFuzzy commented on 17 Dec 2015
There are there different kind of "Timeout" in AsyncHTTPClient.fetch
Request is waiting in the queue, it triggers a timeout before connecting(internal/external server problem).
Request is timeout because of long connecting(DNS/network problem).
Request is timeout because of long interacting after connecting(network/server problem).
Sample code of AsyncHTTPClient.fetch:
URL: https://github.com/tornadoweb/tornado/blob/master/tornado/httpclient.py#L252
    def handle_response(response):
        if raise_error and response.error:
            future.set_exception(response.error)
        else:
            future.set_result(response)
    self.fetch_impl(request, handle_response)
If we raise response.error, we even loose the request_time information, the only message in response.error is just "Timeout".
So, it would be convenient to use different error message, like:
Timeout: in request queue
Timeout: when connecting
Timeout: when interacting
I had add this feature to my company's project, it works well, and it gets pretty easy to distinguish httpclient internal problems with dns/network/external server problems.
I'd like to send a pull request to tornado project, it would better to start a proposal before coding.
Thanks!