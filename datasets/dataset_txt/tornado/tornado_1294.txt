OleLaursen commented on 11 Mar 2010
Hi!
The problem is that self._running is set to true in the constructor instead of in start(). So _running says it's running even if it's not (yet) and furthermore you can't stop() then start() again. Just copy the line self._running = True into start() and change the one in __init__ to False instead of True.
Another thing is that I think _running makes sense as running because it's useful from outside - e.g. I have a use case where if I get a certain kind of request, I need to start a periodic clean up function, the easiest way to model it is as a global PeriodicCallback, then if it's not running, I start it in the request.
Ole