Contributor
emehrkay commented on 18 Jul 2012
I was able to hack together a simple method, but I was wondering if what I did looks correct and if it would be useful to have something like this in web.ReqeustHandler?
I've added this to my main request handler class and it seems to work as expected
    def _template_string(self, string, **kwargs):
        template = web.template.Template(string, autoescape=None)
        args = dict(
            handler=self,
            request=self.request,
            current_user=self.current_user,
            locale=self.locale,
            _=self.locale.translate,
            static_url=self.static_url,
            xsrf_form_html=self.xsrf_form_html,
            reverse_url=self.reverse_url
        )
        args.update(**kwargs)
        args.update(self.ui)
        return template.generate(**args)
I use it with parsed markdown files that may contain template-based functionality like {{ modules.UI_MODULE() }}
The problems with this approach is that I am basically repeating code found in web.ReqeustHandler.render and I am not hooking into any of the cached named templates. Is there a better way to handle this?
Thanks