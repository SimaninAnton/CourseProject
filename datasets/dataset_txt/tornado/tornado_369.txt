kupuguy commented on 24 Mar 2017
At present code such as:
    yield connection.write_message(data)
will throw BadYieldError if called on a closed connection.
Documentation for WebSocketHandler.write_message says it was changed in 4.3 so that it " Returns a .Future which can be used for flow control." In fact it can return either a Future or None. It actually returns the result from the method WebSocketProtocol13._write_frame, and that ends with:
    try:
        return self.stream.write(frame)
    except StreamClosedError:
        self._abort()
so in the case where the stream is closed it will return None. It should instead use gen.Return() to send back None as the result.:
    try:
        return self.stream.write(frame)
    except StreamClosedError:
        self._abort()
    raise gen.Return()