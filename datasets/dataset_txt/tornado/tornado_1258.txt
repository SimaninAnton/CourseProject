vishnevskiy commented on 13 Jul 2010
I am using HTTPClient and AsyncHTTPClient to talk to a local
HTTPServer for RPC calls (POST with body)
On the first request its really fast, but every request after its
always 30ms overhead. I tested all around the code.
Put this an output into HTTPConnection
def _on_request_body(self, data):
logging.warning("TEST %.2fms", 1000.0 * (time.time() -
self._request._start_time))
// other code goes here
At this point there is 30ms overhead.
It is also not the server's fault it seems, but the client's.
Because if I restart the process that is using the client and make
another request, its fast for the first one, and then 30ms for the
rest. (Works anytime I restart the process with HTTPClient)
If I do not have a request body, then this is not an issue. Is CURL
having a delay before sending the body or something?
Any ideas?