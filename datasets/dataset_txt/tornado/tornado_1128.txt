chaselee commented on 6 Oct 2011
Now that debug in 2.1+ shows stacktraces, it's not ideal to use debug in production. This is actually great behavior; however, since the operation of autoreload is tied to the debug arg, autoreload must now be turned off in production. Autoreload is very useful for production servers since it provides seamless updates whereas a lot of tools like Supervisor require a second of downtime to recognize updates. I think it would make sense to allow the separation of autoreload and debug functionality such that supplying debug to the application constructor still starts autoreload and that supplying autoreload to the constructor starts or stops it. This way, for production I can have debug off, so no stacktraces, and autoreload on, and in development, I can just throw debug on (and possibly shut autoreload off if we want to go that route). Thoughts? It seems as simple as adding this to tornado.web just to give the ability to turn on autoreload independent of debug:
if self.settings.get("autoreload") and not wsgi:
import autoreload
autoreload.start()
If we want to go this route I can start a pull request.