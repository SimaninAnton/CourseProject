fredde-fisk commented on 24 Sep 2012
_handle_read and _try_inline_read never allows processing of data as long as new data continues to arrive. The reason is the loop in those methods that will continue reading as long as there are more data in the stream:
while True:
    if self._read_to_buffer() == 0:
        break
So a read_bytes call can end up buffering 100 MiB of data and throwing an "IOError: Reached maximum read buffer size" exception even though it only wanted to read 2 bytes.
I discovered this problem when running a websocket server where the client sends a continuous stream of messages.