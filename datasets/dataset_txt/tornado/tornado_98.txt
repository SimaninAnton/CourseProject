eulersIDcrisis commented on 5 Feb 2019
Right now, there are functions to parse out files received from form data for a request, using calls like: tornado.httputil.parse_multipart_form_data(). Data that is received in this format is made available through the RequestHandler via: self.request.files.
However, this has the drawback that the entire request needs to be stored in memory. Is it possible to implement a "streaming" form of this route that would enable streaming the input files so that the whole request does not need to be stored in memory?
Maybe this could be a decorator that behaves similar to @tornado.web.stream_request_body, with a hook def write_to_file(self, file_info, data_received) instead of def data_received(self, data).