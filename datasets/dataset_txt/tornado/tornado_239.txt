stevegrubb commented on 8 Feb 2018
The code in netutil.py around line 163 calls sock.bind(sockaddr). This can raise an exception when the address family is not supported. When using getaddrinfo, you are supposed to try each address returned until it's successful or the addresses are exhausted. The code appears to be written to loop, but success should only be considered if sock.bind() doesn't cause an exception.
When starting jupyter-notebook on a system that does not have IPv6 enabled, I get the following traceback:
$ jupyter notebook
Traceback (most recent call last):
File "/usr/bin/jupyter-notebook", line 6, in
main()
File "/usr/lib/python3.6/site-packages/jupyter_core/application.py", line 267, in launch_instance
return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)
File "/usr/lib/python3.6/site-packages/traitlets/config/application.py", line 657, in launch_instance
app.initialize(argv)
File "", line 2, in initialize
File "/usr/lib/python3.6/site-packages/traitlets/config/application.py", line 87, in catch_config_error
return method(app, *args, **kwargs)
File "/usr/lib/python3.6/site-packages/notebook/notebookapp.py", line 1368, in initialize
self.init_webapp()
File "/usr/lib/python3.6/site-packages/notebook/notebookapp.py", line 1188, in init_webapp
self.http_server.listen(port, self.ip)
File "/usr/lib64/python3.6/site-packages/tornado/tcpserver.py", line 141, in listen
sockets = bind_sockets(port, address=address)
File "/usr/lib64/python3.6/site-packages/tornado/netutil.py", line 196, in bind_sockets
sock.bind(sockaddr)
OSError: [Errno 99] Cannot assign requested address
Adding a print(sockaddr) before sock.bind(sockaddr) gives the following:
('::1', 8888, 0, 0)
and
ping ::1
connect: Network is unreachable
I think the answer is wrap the sock.bind in a try/catch and continuing to iterate on error.