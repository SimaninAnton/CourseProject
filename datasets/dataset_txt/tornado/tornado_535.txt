Contributor
mrocklin commented on 18 Mar 2016
When yielding from a concurrent.futures.Future I get this exception:
yield thread_pool_executor.submit(func, *args)
  File "/home/mrocklin/Software/anaconda/lib/python3.4/site-packages/tornado/gen.py", line 294, in wrapper
    Runner(result, future, yielded)
  File "/home/mrocklin/Software/anaconda/lib/python3.4/site-packages/tornado/gen.py", line 955, in __init__
    if self.handle_yield(first_yielded):
  File "/home/mrocklin/Software/anaconda/lib/python3.4/site-packages/tornado/gen.py", line 1097, in handle_yield
    self.future, lambda f: self.run())
  File "/home/mrocklin/Software/anaconda/lib/python3.4/site-packages/tornado/ioloop.py", line 592, in add_future
    lambda future: self.add_callback(callback, future))
  File "/home/mrocklin/Software/anaconda/lib/python3.4/site-packages/tornado/concurrent.py", line 262, in add_done_callback
    self._callbacks.append(fn)
AttributeError: 'NoneType' object has no attribute 'append'
distributed.utils - ERROR - 'NoneType' object has no attribute 'append'
After some effort I've been unable to reproduce this error locally (my apologies.) My first thought was that I was operating in a thread unsafe manner but I'm not yet able to find anything like this. Any suggestions on either what I might be doing incorrectly or if this is a proper bug in Tornado?
Looking briefly at the code it seems like there might be an issue if the future were to finish before adding the callback to return to the yield point. Is this a reasonable concern?