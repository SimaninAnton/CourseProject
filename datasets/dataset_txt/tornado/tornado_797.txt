misuzu commented on 17 Jul 2014
from concurrent.futures import ThreadPoolExecutor
from tornado.gen import Return, coroutine
from tornado.ioloop import IOLoop

pool = ThreadPoolExecutor(max_workers=1)


@coroutine
def compute1():
    def make_exception():
        return 1 / 2
    print('compute 1 start')
    result = yield pool.submit(make_exception)
    print('compute 1 end')
    raise Return(result)


@coroutine
def compute2():
    def make_exception():
        return 1 / 0
    print('compute 2 start')
    result = yield pool.submit(make_exception)
    print('compute 2 end')
    raise Return(result)


@coroutine
def run():
    result = yield compute1()
    print(result)
    result = yield compute2()
    print(result)
    raise Return(result)


run()
IOLoop.instance().start()
$ python ~/test_tornado.py 
compute 1 start
compute 1 end
0
compute 2 start
^CTraceback (most recent call last):
  File "/home/misuzu/test_tornado.py", line 38, in <module>
    IOLoop.instance().start()
  File "/home/misuzu/Documents/Virtualenvs/generic/local/lib/python2.7/site-packages/tornado/ioloop.py", line 808, in start
    event_pairs = self._impl.poll(poll_timeout)
KeyboardInterrupt
$ pip freeze | grep tornado
tornado==4.0