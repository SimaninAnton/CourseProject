arthurdarcet commented on 24 Aug 2015
Trying to await more than two coroutines nested starts an infinite loop. Am I using everything correctly ?
import asyncio
import tornado.gen
import tornado.ioloop

async def do():
    await asyncio.sleep(.5)

async def main():
    await do()

io_loop = tornado.ioloop.IOLoop.current()
io_loop.run_sync(lambda: tornado.gen.convert_yielded(main()))
Traceback (most recent call last):
  File "a.py", line 13, in <module>
    io_loop.run_sync(lambda: tornado.gen.convert_yielded(main()))
  File "/Users/arthur/Documents/reaaad/castamere/.venv/lib/python3.5/site-packages/tornado/ioloop.py", line 446, in run_sync
    return future_cell[0].result()
  File "/Users/arthur/Documents/reaaad/castamere/.venv/lib/python3.5/site-packages/tornado/concurrent.py", line 222, in result
    raise_exc_info(self._exc_info)
  File "<string>", line 3, in raise_exc_info
  File "/Users/arthur/Documents/reaaad/castamere/.venv/lib/python3.5/site-packages/tornado/ioloop.py", line 426, in run
    result = func()
  File "a.py", line 13, in <lambda>
    io_loop.run_sync(lambda: tornado.gen.convert_yielded(main()))
  File "/Users/arthur/Documents/reaaad/castamere/.venv/lib/python3.5/functools.py", line 743, in wrapper
    return dispatch(args[0].__class__)(*args, **kw)

#--------
  File "/Users/arthur/Documents/reaaad/castamere/.venv/lib/python3.5/site-packages/tornado/gen.py", line 1086, in convert_yielded
    return _wrap_awaitable(yielded)
  File "/Users/arthur/Documents/reaaad/castamere/.venv/lib/python3.5/site-packages/tornado/gen.py", line 262, in wrapper
    Runner(result, future, yielded)
  File "/Users/arthur/Documents/reaaad/castamere/.venv/lib/python3.5/site-packages/tornado/gen.py", line 867, in __init__
    if self.handle_yield(first_yielded):
  File "/Users/arthur/Documents/reaaad/castamere/.venv/lib/python3.5/site-packages/tornado/gen.py", line 1006, in handle_yield
    self.future = convert_yielded(yielded)
  File "/Users/arthur/Documents/reaaad/castamere/.venv/lib/python3.5/functools.py", line 743, in wrapper
    return dispatch(args[0].__class__)(*args, **kw)
#-------- (repeated)

  File "/Users/arthur/Documents/reaaad/castamere/.venv/lib/python3.5/site-packages/tornado/gen.py", line 1085, in convert_yielded
    elif isawaitable(yielded):
  File "/usr/local/Cellar/python3/3.5.0rc1_2/Frameworks/Python.framework/Versions/3.5/lib/python3.5/inspect.py", line 215, in isawaitable
    isinstance(object, collections.abc.Awaitable))
  File "/Users/arthur/Documents/reaaad/castamere/.venv/bin/../lib/python3.5/abc.py", line 182, in __instancecheck__
    if subclass in cls._abc_cache:
RecursionError: maximum recursion depth exceeded while calling a Python object
sys:1: RuntimeWarning: coroutine 'fetch' was never awaited