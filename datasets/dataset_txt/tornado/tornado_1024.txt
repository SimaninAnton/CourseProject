Contributor
polymorphm commented on 7 Dec 2012
good day!
in module tornado.gen -- need function like:
yield gen.NoWait(key) # oppositely  yield gen.Wait(key)
example of using:
example code without gen.NoWait(..) (the situation is now) :
from tornado import gen

task_A_key = object()
task_A_cb = yield gen.Callback(task_A_key)
task_A_func(..., ..., ..., callback=task_A_cb)

# parallel we doing task "B"
result_of_B = yield gen.Task(task_B_func, ..., ..., ...)

if result_of_B == ... :
    # we will NO wait for task_A_func() !
    task_A_cb()

yield gen.Wait(task_A_key)
this example code but with gen.NoWait(..) :
from tornado import gen

task_A_key = object()
task_A_func(..., ..., ..., callback=yield gen.Callback(task_A_key))

# parallel we doing task "B"
result_of_B = yield gen.Task(task_B_func, ..., ..., ...)

if result_of_B == ... :
    # we will NO wait for task_A_func() !
    yield gen.NoWait(task_A_key)
else:
    yield gen.Wait(task_A_key)
i think -- function yield gen.NoWait(key) -- will making code more clear, in case if we not need wait all operations
thanks in advance!