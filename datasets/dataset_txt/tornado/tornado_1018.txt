truhlikfredy commented on 6 Jan 2013
I have ping application, so server side after receiving relies the data back. I think I get this error when I receive message and try to rely it back while the connection waits in the close handshake (or somewhere there, but around time when it closes the connection).
ERROR:root:Uncaught exception in /
Traceback (most recent call last):
  File "/usr/local/lib/python2.6/dist-packages/tornado-2.4.1-py2.6.egg/tornado/websocket.py", line 258, in wrapper
    return callback(*args, **kwargs)
  File "./t_ping.py-2.py", line 24, in on_message
    self.write_message(message)
  File "/usr/local/lib/python2.6/dist-packages/tornado-2.4.1-py2.6.egg/tornado/websocket.py", line 144, in write_message
    self.ws_connection.write_message(message, binary=binary)
  File "/usr/local/lib/python2.6/dist-packages/tornado-2.4.1-py2.6.egg/tornado/websocket.py", line 526, in write_message
    self._write_frame(True, opcode, message)
  File "/usr/local/lib/python2.6/dist-packages/tornado-2.4.1-py2.6.egg/tornado/websocket.py", line 516, in _write_frame
    self.stream.write(frame)
  File "/usr/local/lib/python2.6/dist-packages/tornado-2.4.1-py2.6.egg/tornado/iostream.py", line 202, in write
    self._check_closed()
  File "/usr/local/lib/python2.6/dist-packages/tornado-2.4.1-py2.6.egg/tornado/iostream.py", line 571, in _check_closed
    raise IOError("Stream is closed")
IOError: Stream is closed
The server side source is:
#!/usr/bin/env python

import os.path
from tornado.httpserver import HTTPServer
from tornado.ioloop import IOLoop
from tornado.web import Application
from tornado.websocket import WebSocketHandler

import datetime

class Handler(WebSocketHandler):
    clients=[]

    def open(self):
        self.clients.append(self)
        print "New connection opened for user #:"+str(self.clients.index(self))
        IOLoop.instance().add_timeout(datetime.timedelta(seconds=5), self.test)

    def on_message(self, message):
        self.write_message(message)

    def on_close(self):
        print "Connection closed for user #"+str(self.clients.index(self))
        self.clients.remove(self)

    def test(self):
        print("scheduled!")

print "Server started."
HTTPServer(Application([("/", Handler)])).listen(8001)
IOLoop.instance().start()
The line number will not match because I removed comments and other stuff, but the line 24 was inside the on_message part.