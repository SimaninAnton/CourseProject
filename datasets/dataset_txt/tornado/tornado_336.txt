serg666 commented on 23 May 2017
Hi!
I have the following code:
import tornado.ioloop
import tornado.web
import tornado.gen
import logging

logging.basicConfig(level=logging.DEBUG)

class MainHandler(tornado.web.RequestHandler):
    async def get(self):
        await tornado.gen.sleep(30)
        self.write("Hello, world")

def make_app():
    return tornado.web.Application([
        (r"/", MainHandler),
    ])

if __name__ == "__main__":
    app = make_app()
    app.listen(8888)
    tornado.ioloop.IOLoop.current().start()
Then I make request with timeout of 20 seconds, for example,
curl -v -m 20  http://127.0.0.1:8888
client close connection before server reply, and due to the code https://github.com/tornadoweb/tornado/blob/master/tornado/http1connection.py in write_headers the exception should be appear
...
        if self.stream.closed():
            future = self._write_future = Future()
            future.set_exception(iostream.StreamClosedError())
            future.exception()
...
but I can not catch it. How can I catch this exception or why it does not appear at all?