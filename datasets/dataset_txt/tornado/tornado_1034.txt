Contributor
pitrou commented on 13 Nov 2012
It seems that when io_loop.add_callback() is called in a thread while io_loop.close() is being called in another thread, you can get the following race condition:
Traceback (most recent call last):
  File "/usr/lib/python2.7/threading.py", line 551, in __bootstrap_inner
    self.run()
  File "/usr/lib/python2.7/threading.py", line 504, in run
    self.__target(*self.__args, **self.__kwargs)
  File "surycat/utils/sockclient.py", line 256, in _run
    self._loop.close()
  File "/usr/lib/python2.7/dist-packages/tornado/ioloop.py", line 195, in close
    self._waker.close()
  File "/usr/lib/python2.7/dist-packages/tornado/platform/posix.py", line 68, in close
    self.writer.close()
IOError: close() called during concurrent operation on the same file object.