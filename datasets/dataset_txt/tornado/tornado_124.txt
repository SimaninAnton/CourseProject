Contributor
WouldYouKindly commented on 17 Oct 2018
Hi!
I have a code like this
from tornado.web import RequestHandler, Application
from tornado.testing import AsyncHTTPTestCase


class Handler(RequestHandler):
    def get(self):
        self.set_status(102)


class TestHandler(AsyncHTTPTestCase):
    def get_app(self):
        return Application(handlers=[('/', Handler)])

    def test(self):
        result = self.fetch('/')
        self.assertEqual(102, result.code)
When I run tests, I get AssertionError: 102 != 599
When I do result = self.fetch('/', raise_error=True), I get
Traceback (most recent call last):
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/simple_httpclient.py", line 424, in _write_body
    yield self.connection.read_response(self)
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/gen.py", line 1133, in run
    value = future.result()
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/gen.py", line 1141, in run
    yielded = self.gen.throw(*exc_info)
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/http1connection.py", line 212, in _read_message
    yield self._read_message(delegate)
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/gen.py", line 1133, in run
    value = future.result()
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/gen.py", line 326, in wrapper
    yielded = next(result)
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/http1connection.py", line 160, in _read_message
    max_bytes=self.params.max_header_size)
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/iostream.py", line 357, in read_until_regex
    self._try_inline_read()
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/iostream.py", line 911, in _try_inline_read
    self._check_closed()
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/iostream.py", line 1112, in _check_closed
    raise StreamClosedError(real_error=self.error)
tornado.iostream.StreamClosedError: Stream is closed

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/testing.py", line 125, in __call__
    result = self.orig_method(*args, **kwargs)
  File "/Users/ptz/stuff/test_t.py", line 16, in test
    result = self.fetch('/', raise_error=True)
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/testing.py", line 423, in fetch
    timeout=get_async_test_timeout())
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/ioloop.py", line 576, in run_sync
    return future_cell[0].result()
  File "/Users/ptz/.virtualenvs/e/lib/python3.7/site-packages/tornado/simple_httpclient.py", line 474, in on_connection_close
    raise HTTPStreamClosedError(message)
tornado.simple_httpclient.HTTPStreamClosedError: Connection closed
This same happens with some other HTTP codes as well.
If I run this server, everything is okay:
$ http http://localhost/
HTTP/1.1 102 Processing
Date: Wed, 17 Oct 2018 17:52:19 GMT
Server: TornadoServer/5.1.1
Am I doing something wrong?