dzharkov commented on 31 Oct 2013
Hi!
I've got some problems when using coroutine-based TracebackFuture in a synchronous function.
For example I have the following coroutine:
   @gen.coroutine
   def foo(url):
           yield self.http_client.fetch(url)
and synchronous function
   def bar():
      f = foo('http://google.com')
      return f.result()
The first problem is that it freezes when I call f.result() becuase application works in a single thread and it becomes locked forever when self._condition.wait(timeout) is being called in a Future
Second Problem is that TracebackFuture overrides result()-method, so 'timeout' argument is unavailable when using @gen.coroutine.
Thank you for comments!
P.S. Sorry for my poor english :(
1