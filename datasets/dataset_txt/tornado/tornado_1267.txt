elephantum commented on 19 Jun 2010
The problem is the following: even the libcurl's documentation says that there is no need to run .perform() again after the E_OK is returned, the truth is more subtle. E_OK is returned in two different cases: 1) there is really nothing to do, 2) CURL_MAX_WRITE_SIZE of data was passed to write_function. There is no way to check whether there is any data available right now. Even epoll'ing wouldn't help in some cases, when data is read into internal libcurl's buffers. This behavior significantly degrades performance of fetching http-resources which are bigger than 16Kb. It is especially well seen when some synchronous work should be done (50-100ms XSL transformations in my case).
The problem can be illustrated with this snippet of code: http://gist.github.com/444860/ run it before and after the patch to feel the difference in downloading speed.
I've developed a workaround for the given problem which I propose for merge into tornado: http://github.com/elephantum/tornado/commit/384ce35b9c4b5de9cb247ac4bd5c810ca632daa0