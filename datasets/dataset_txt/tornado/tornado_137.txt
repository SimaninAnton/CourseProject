ecbftw commented on 7 Sep 2018 â€¢
edited
I don't see a way to control HTTP headers (e.g. removing the Server header, adding security headers) when using the StaticFileHandler when the StaticFileHandler returns an error (e.g. 404s). Here's my current subclass:
csp = "script-src 'self'; connect-src 'self'; style-src 'self' 'unsafe-inline'; frame-ancestors 'self'"

class StaticHandler(tornado.web.StaticFileHandler):
    def set_default_headers(self):
        self.clear_header('Server')
        self.set_header('Content-Security-Policy', csp)
        self.set_header('X-Content-Security-Policy', csp)

    def set_extra_headers(self, path):
        self.set_default_headers()

    def validate_absolute_path(self, root, absolute_path):
        self.set_default_headers()
        return super().validate_absolute_path(root, absolute_path)
StaticFileHandler does not appear to honor overrides of write_error as RequestHandler does, and somehow overriding validate_absolute_path (as above) isn't working either. The HTTP response headers I'm getting on a 404 are unchanged:
HTTP/1.1 404 Not Found
Server: TornadoServer/5.0.2
Content-Type: text/html; charset=UTF-8
Date: Fri, 07 Sep 2018 14:19:58 GMT
Content-Length: 69
Connection: close
To be clear, my desired header changes work just fine on normal 200 responses, just not on errors. What am I missing?