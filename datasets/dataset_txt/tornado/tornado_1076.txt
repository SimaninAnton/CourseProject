ceymard commented on 8 May 2012
changing ExceptionStackContext's code to the following makes everything smooth again :
    def __init__(self, exception_handler):
        self.exception_handler = exception_handler

    def __enter__(self):
        pass
        #self.old_contexts = _state.contexts
        #_state.contexts = (self.old_contexts +
        #                   ((ExceptionStackContext, self.exception_handler),))

    def __exit__(self, type, value, traceback):
        try:
            if type is not None:
                return self.exception_handler(type, value, traceback)
        finally:
            pass
            # _state.contexts = self.old_contexts
I do not understand all the magic's that's going on here, but my problem is that the contexts, by being copied all the time can get to slow everything down to a crawl.
What am I doing wrong ? Why is there so much ExceptionStackContext being run ?