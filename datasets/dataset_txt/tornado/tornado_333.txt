ntrrgc commented on 27 May 2017 â€¢
edited
Steps to reproduce
Copy this script:
from datetime import timedelta

from tornado.ioloop import IOLoop
from tornado.simple_httpclient import SimpleAsyncHTTPClient

client = SimpleAsyncHTTPClient()


def print_initial_result(result):
    print(result)
    print("Now connect to the Internet.")
    IOLoop.instance().add_timeout(timedelta(seconds=10), make_second_request)


def make_second_request():
    print("Making a second request...")
    client.fetch("http://imgur.com", print_second_result)


def print_second_result(result):
    print(result)


client.fetch("http://imgur.com", print_initial_result)

IOLoop.instance().start()
Disconnect from the Internet and run the script.
A failed HTTP response is printed. Now, connect to the Internet before 10 seconds pass. A second request will be made then.
Expected result
The first request must fail (no connection). The second request should succeed (there is a working connection).
Actual result
If the first request failed, any subsequent request to the same host will fail.
HTTPResponse(_body=None,buffer=None,code=599,effective_url='http://imgur.com',error=gaierror(-2, 'Name or service not known'),headers=<tornado.httputil.HTTPHeaders object at 0x7f4d51612e10>,reason='Unknown',request=<tornado.httpclient.HTTPRequest object at 0x7f4d51db2630>,request_time=0.0012538433074951172,time_info={})
Now connect to the Internet.
Making a second request...
HTTPResponse(_body=None,buffer=None,code=599,effective_url='http://imgur.com',error=gaierror(-2, 'Name or service not known'),headers=<tornado.httputil.HTTPHeaders object at 0x7f4d512d4048>,reason='Unknown',request=<tornado.httpclient.HTTPRequest object at 0x7f4d56232208>,request_time=0.0005753040313720703,time_info={})