FlameSky-S commented on 28 Aug 2019
I'm using tornado to accept some POST data sended from clients I don't have access to. Everything works fine if only English characters appear in the data. When utf-8 encoded Chinese characters(3 bytes) are within the data, Tornado gives me this warning and the 'get_argument' function can't get anything at all.
I debuged and simplified my code to the simplest, yet the warning still comes up
class DataHandler(tornado.web.RequestHandler):
    def post(self):
        print("test")
        print(self.get_argument("data"))
        print("1")

application = tornado.web.Application([
    (r"/data", Data),
])

application.listen(5000)
tornado.ioloop.IOLoop.instance().start()
The data the clients post is like:
data={"id":"00f1c423","name":"张三"}
The data is x-www-form-urlencoded and WireShark shows the Chinese characters are perfectly 3-bytes utf-8 which starts with E(1110).
It has nothing to do with the print function because I actually tried simpler codes:
class Data(tornado.web.RequestHandler):
    def post(self):
        return
The warning is still there. So could anyone tell me where does this encoding thing come from since I did nothing about encoding in my code?