Contributor
jvhellemond commented on 18 Apr 2016
This may be a bit of an edge case, but here goes:
RequestHandler.get_template_namespace (web.py:828) calls namespace.update(self.ui), expecting self.ui to be a dict. But RequestHandler.finish (web.py:939) sets self.ui = None after first calling self.on_finish(). This means that any (implicit) call to get_template_namespace in an async on_finish function throws an exception.
In my case I have a on_finish function that waits for (yields) an async HTTP-request and then renders a template, using self.render_string, to send an email. Rendering the template fails, because (I think) get_template_namespace is called, which tries to update the template namespace dict with self.ui which has by now been set to None.
Could setting self.ui = None be delayed until any RequestHandler.on_finish has completed and has no more async results to yield?