ityoung commented on 16 Mar 2018
Hello, I met an error "Async operation timed out after 5 seconds", and I did find some question in issue, but didn'd solve my problem.
Traceback (most recent call last):
  File "/usr/lib/python3.5/unittest/case.py", line 59, in testPartExecutor
    yield
  File "/usr/lib/python3.5/unittest/case.py", line 605, in run
    testMethod()
  File "/usr/local/lib/python3.5/dist-packages/tornado/testing.py", line 136, in __call__
    result = self.orig_method(*args, **kwargs)
  File "/home/yangxin/Geetest/server/gt-message/test/test_pre_gateway.py", line 95, in test_post
    res = self.fetch('/pre_gateway', method='POST', body=json.dumps(opsalt_origin))
  File "/usr/local/lib/python3.5/dist-packages/tornado/testing.py", line 406, in fetch
    return self.wait()
  File "/usr/local/lib/python3.5/dist-packages/tornado/testing.py", line 336, in wait
    self.__rethrow()
  File "/usr/local/lib/python3.5/dist-packages/tornado/testing.py", line 272, in __rethrow
    raise_exc_info(failure)
  File "<string>", line 4, in raise_exc_info
  File "/usr/local/lib/python3.5/dist-packages/tornado/testing.py", line 320, in timeout_func
    timeout)
AssertionError: Async operation timed out after 5 seconds
thats my code below:
from tornado.testing import AsyncHTTPTestCase
from tornado.web import Application

from index import init_redis
from handler.find import FindHandler

import unittest
import json

import asyncio

opsalt_origin = {
    'dns': 'unknown'
}


class TestPreGateway(AsyncHTTPTestCase):

    def setUp(self):
        super(TestPreGateway, self).setUp()

    def get_app(self):
        return Application([('/find', FindHandler)])

    def test_post(self):
        asyncio.get_event_loop().run_until_complete(init_redis())
        res = self.fetch('/find', method='POST', body=json.dumps(opsalt_origin))
        print(res.body)


if __name__ == '__main__':
    unittest.main()
because my index.py is something like this, so I just move the initial func to my test code:
def initialize_utils():
    asyncio.get_event_loop().run_until_complete(init_redis())

if __name__ == "__main__":
    ...
    initialize_utils()
    ...
I'm really confuse that if I want to test a handler which need to connect to redis, I did need to initialize my redis right? Then how to init an async redis setting before I fetch the path?