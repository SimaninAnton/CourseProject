jurreht commented on May 2, 2017 â€¢
edited
Description
Subclassing LassoCV causes fit() to throw KeyError. Note that subclassing Lasso (i.e. without cross validation) in the same manner does work.
Steps/Code to Reproduce
import sklearn.datasets
import sklearn.linear_model

class LassoCVSubclass(sklearn.linear_model.LassoCV):
    def __init__(self):
        super().__init__()

X, y = sklearn.datasets.load_boston(True)

not_subclassed = sklearn.linear_model.LassoCV()
not_subclassed.fit(X, y)  # Works

subclassed = LassoCVSubclass()
subclassed.fit(X, y)  # Raises KeyError
Expected Results
No error
Actual Results
KeyError                                  Traceback (most recent call last)
<ipython-input-8-12d548a5bb42> in <module>()
     12 
     13 subclassed = LassoCVSubclass()
---> 14 subclassed.fit(X, y)  # Raises KeyError

/Volumes/Samsung_T1/venv-imac/lib/python3.5/site-packages/sklearn/linear_model/coordinate_descent.py in fit(self, X, y)
   1177                 for train, test in folds)
   1178         mse_paths = Parallel(n_jobs=self.n_jobs, verbose=self.verbose,
-> 1179                              backend="threading")(jobs)
   1180         mse_paths = np.reshape(mse_paths, (n_l1_ratio, len(folds), -1))
   1181         mean_mse = np.mean(mse_paths, axis=1)

/Volumes/Samsung_T1/venv-imac/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py in __call__(self, iterable)
    756             # was dispatched. In particular this covers the edge
    757             # case of Parallel used with an exhausted iterator.
--> 758             while self.dispatch_one_batch(iterator):
    759                 self._iterating = True
    760             else:

/Volumes/Samsung_T1/venv-imac/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py in dispatch_one_batch(self, iterator)
    606                 return False
    607             else:
--> 608                 self._dispatch(tasks)
    609                 return True
    610 

/Volumes/Samsung_T1/venv-imac/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py in _dispatch(self, batch)
    569         dispatch_timestamp = time.time()
    570         cb = BatchCompletionCallBack(dispatch_timestamp, len(batch), self)
--> 571         job = self._backend.apply_async(batch, callback=cb)
    572         self._jobs.append(job)
    573 

/Volumes/Samsung_T1/venv-imac/lib/python3.5/site-packages/sklearn/externals/joblib/_parallel_backends.py in apply_async(self, func, callback)
    107     def apply_async(self, func, callback=None):
    108         """Schedule a func to be run"""
--> 109         result = ImmediateResult(func)
    110         if callback:
    111             callback(result)

/Volumes/Samsung_T1/venv-imac/lib/python3.5/site-packages/sklearn/externals/joblib/_parallel_backends.py in __init__(self, batch)
    324         # Don't delay the application, to avoid keeping the input
    325         # arguments in memory
--> 326         self.results = batch()
    327 
    328     def get(self):

/Volumes/Samsung_T1/venv-imac/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py in __call__(self)
    129 
    130     def __call__(self):
--> 131         return [func(*args, **kwargs) for func, args, kwargs in self.items]
    132 
    133     def __len__(self):

/Volumes/Samsung_T1/venv-imac/lib/python3.5/site-packages/sklearn/externals/joblib/parallel.py in <listcomp>(.0)
    129 
    130     def __call__(self):
--> 131         return [func(*args, **kwargs) for func, args, kwargs in self.items]
    132 
    133     def __len__(self):

/Volumes/Samsung_T1/venv-imac/lib/python3.5/site-packages/sklearn/linear_model/coordinate_descent.py in _path_residuals(X, y, train, test, path, path_params, alphas, l1_ratio, X_order, dtype)
    966     X_test = X[test]
    967     y_test = y[test]
--> 968     fit_intercept = path_params['fit_intercept']
    969     normalize = path_params['normalize']
    970 

KeyError: 'fit_intercept'
Versions
Darwin-16.5.0-x86_64-i386-64bit
Python 3.5.2 (default, Jul 28 2016, 21:28:00)
[GCC 4.2.1 Compatible Apple LLVM 7.3.0 (clang-703.0.31)]
NumPy 1.11.2
SciPy 0.18.1
Scikit-Learn 0.18.1