Imorton-zd commented on Aug 29, 2016 â€¢
edited
text_clf = Pipeline([('vect',CountVectorizer(decode_error='ignore')),
                      ('tfidf',TfidfTransformer()),
                      ('clf',label_propagation.LabelSpreading(gamma=0.25, max_iter=5))])
         precision    recall  f1-score   support

      0       0.00      0.00      0.00        24
      1       0.00      0.00      0.00       233
      2       0.00      0.00      0.00       780
      3       0.28      1.00      0.44       804
      4       0.00      0.00      0.00       144
      5       0.00      0.00      0.00        91
      6       0.00      0.00      0.00       503
      7       0.00      0.00      0.00       243
avg / total 0.08 0.28 0.13 2822
Confusion matrix
[[  0   0   0  24   0   0   0   0]
 [  0   0   0 233   0   0   0   0]
 [  0   0   0 780   0   0   0   0]
 [  0   0   0 804   0   0   0   0]
 [  0   0   0 144   0   0   0   0]
 [  0   0   0  91   0   0   0   0]
 [  0   0   0 503   0   0   0   0]
 [  0   0   0 243   0   0   0   0]]
All unlabeled data are predicted as the label 3 that the amount of the samples is the most. Which method should I use to handle this imbalance semi-supervised texts classification. Thanks!