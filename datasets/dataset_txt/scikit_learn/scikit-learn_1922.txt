shaoeChen commented on Sep 5, 2017
Description
KPCA when calling fit or fit_transform it memory error
my operation as the follow pictures





Steps/Code to Reproduce
from sklearn.decomposition import KernelPCA
kpca = KernelPCA(n_components=60, kernel='poly', degree=3, n_jobs=1, random_state=0)
X_train_poly = kpca.fit_transform(X_train_std)
i try to build three model about poly,rbf,sigmoid, and all is the same.
Actual Results
MemoryError Traceback (most recent call last)
in ()
2 from sklearn.decomposition import KernelPCA
3 kpca = KernelPCA(n_components=60, kernel='poly', degree=3, n_jobs=1, random_state=0, remove_zero_eig=True)
----> 4 X_train_poly = kpca.fit_transform(X_train_std)
5 # X_test_poly = kpca.transform(X_test_std)
C:\Users\marty.chen\AppData\Local\Continuum\Anaconda3\lib\site-packages\sklearn\decomposition\kernel_pca.py in fit_transform(self, X, y, **params)
260 X_new : array-like, shape (n_samples, n_components)
261 """
--> 262 self.fit(X, **params)
263
264 X_transformed = self.alphas_ * np.sqrt(self.lambdas_)
C:\Users\marty.chen\AppData\Local\Continuum\Anaconda3\lib\site-packages\sklearn\decomposition\kernel_pca.py in fit(self, X, y)
236 """
237 X = check_array(X, accept_sparse='csr', copy=self.copy_X)
--> 238 K = self._get_kernel(X)
239 self._fit_transform(K)
240
C:\Users\marty.chen\AppData\Local\Continuum\Anaconda3\lib\site-packages\sklearn\decomposition\kernel_pca.py in _get_kernel(self, X, Y)
164 return pairwise_kernels(X, Y, metric=self.kernel,
165 filter_params=True, n_jobs=self.n_jobs,
--> 166 **params)
167
168 def _fit_transform(self, K):
C:\Users\marty.chen\AppData\Local\Continuum\Anaconda3\lib\site-packages\sklearn\metrics\pairwise.py in pairwise_kernels(X, Y, metric, filter_params, n_jobs, **kwds)
1403 raise ValueError("Unknown kernel %r" % metric)
1404
-> 1405 return _parallel_pairwise(X, Y, func, n_jobs, **kwds)
C:\Users\marty.chen\AppData\Local\Continuum\Anaconda3\lib\site-packages\sklearn\metrics\pairwise.py in _parallel_pairwise(X, Y, func, n_jobs, **kwds)
1088 if n_jobs == 1:
1089 # Special case to avoid picklability checks in delayed
-> 1090 return func(X, Y, **kwds)
1091
1092 # TODO: in some cases, backend='threading' may be appropriate
C:\Users\marty.chen\AppData\Local\Continuum\Anaconda3\lib\site-packages\sklearn\metrics\pairwise.py in polynomial_kernel(X, Y, degree, gamma, coef0)
772 gamma = 1.0 / X.shape[1]
773
--> 774 K = safe_sparse_dot(X, Y.T, dense_output=True)
775 K *= gamma
776 K += coef0
C:\Users\marty.chen\AppData\Local\Continuum\Anaconda3\lib\site-packages\sklearn\utils\extmath.py in safe_sparse_dot(a, b, dense_output)
138 return ret
139 else:
--> 140 return np.dot(a, b)
141
142
MemoryError:
Versions