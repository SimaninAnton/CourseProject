Member
larsmans commented on Jul 18, 2011
Here's snippet from the current fastica code:
if isinstance(fun, str):
    # ...
elif callable(fun):
    raise ValueError('fun argument should be either a string '
                     '(one of logcosh, exp or cube) or a function')
else:
    def g(x, fun_args):
        return fun(x, **fun_args)

    def gprime(x, fun_args):
        return fun_prime(x, **fun_args)
I haven't tried it out, but it seems to that elif callable(fun) should really be elif not callable(fun). I'd love a push this change to master, but I feel it's not really useful without a test that demonstrates passing arbitrary functions to fastica. Can someone please write such a test?
(@bthirion, @agramfort seem to be mostly responsible for the code in this module.)