alex-baldon commented on Apr 29, 2019 â€¢
edited
Description
In the cross validation section 3.1.1.1. in the sklearn docs, there is an import for recall_score, but it is not used until the second code cell. It might be easier to read if the import occurs in the second code cell, as this seems to be the going pattern in this doc; the cell below it imports other modules anyways seemingly for readability as well.
Please find the doc here:
https://scikit-learn.org/stable/modules/cross_validation.html#cross-validation
Current state:
from sklearn.model_selection import cross_validate
from sklearn.metrics import recall_score
scoring = ['precision_macro', 'recall_macro']
clf = svm.SVC(kernel='linear', C=1, random_state=0)
scores = cross_validate(clf, iris.data, iris.target, scoring=scoring,
                        cv=5, return_train_score=False)
sorted(scores.keys())

scores['test_recall_macro']  
Steps/Code to Reproduce
NA
Expected (suggested) Results
The multiple metrics can be specified either as a list, tuple or set of predefined scorer names:
from sklearn.model_selection import cross_validate
scoring = ['precision_macro', 'recall_macro']
clf = svm.SVC(kernel='linear', C=1, random_state=0)
scores = cross_validate(clf, iris.data, iris.target, scoring=scoring,
                        cv=5, return_train_score=False)
sorted(scores.keys())

scores['test_recall_macro']   
Or as a dict mapping scorer name to a predefined or custom scoring function:
from sklearn.metrics.scorer import make_scorer
from sklearn.metrics import recall_score
scoring = {'prec_macro': 'precision_macro',
           'rec_micro': make_scorer(recall_score, average='macro')}
scores = cross_validate(clf, iris.data, iris.target, scoring=scoring,
                        cv=5, return_train_score=True)
sorted(scores.keys())                 


scores['train_rec_micro'] 
Actual Results
Versions
NA