Member
ogrisel commented on Jul 14, 2011
In the LLE tests, if you replace the line:
rng = np.random.RandomState(42)
by:
rng = np.random.RandomState(1)
The test will fail with:
======================================================================
FAIL: test_locally_linear.test_lle_simple_grid
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/nose/case.py", line 187, in runTest
    self.test(*self.arg)
  File "/home/ogrisel/coding/scikit-learn/scikits/learn/manifold/tests/test_locally_linear.py", line 34, in test_lle_simple_grid
    clf.fit(X, eigen_solver=solver)
  File "/home/ogrisel/coding/scikit-learn/scikits/learn/manifold/locally_linear.py", line 418, in fit
    random_state=self.random_state)
  File "/home/ogrisel/coding/scikit-learn/scikits/learn/manifold/locally_linear.py", line 356, in locally_linear_embedding
    random_state=random_state)
  File "/home/ogrisel/coding/scikit-learn/scikits/learn/manifold/locally_linear.py", line 74, in null_space
    M, X, M=prec, largest=False, tol=tol, maxiter=max_iter)
  File "/usr/lib/python2.7/dist-packages/scipy/sparse/linalg/eigen/lobpcg/lobpcg.py", line 431, in lobpcg
    assert np.allclose( gramA.T, gramA )
AssertionError: 
>>  assert <module 'numpy' from '/usr/lib/pymodules/python2.7/numpy/__init__.pyc'>.allclose( matrix([[  0.,   0.,   0.,  nan,  nan],
            [  0.,   0.,   0.,  nan,  nan],
            [  0.,   0.,   0.,  nan,  nan],
            [ nan,  nan,  nan,  nan,  nan],
            [ nan,  nan,  nan,  nan,  nan]]).T, matrix([[  0.,   0.,   0.,  nan,  nan],
            [  0.,   0.,   0.,  nan,  nan],
            [  0.,   0.,   0.,  nan,  nan],
            [ nan,  nan,  nan,  nan,  nan],
            [ nan,  nan,  nan,  nan,  nan]]) )