mihirpatel7 commented on Feb 12, 2019
Description
I am using sklearn Kmeans Minibatch for clustering large data and I get a memory error.
Here is my laptop configuration on this configuration its working fine:
Core i5 64 bit
Python 3.6.2
8 GB RAM
sklearn version-0.19.1
I stored TfidfVectorizer X in .npz file(426 Mb). I then perform Clustering on that X several times with a different number clusters.
X = sparse.load_npz("D:\clustering_final\sp-k2.npz")
n_samples: 850900, n_features: 1728098
Clustering sparse matrix data with MiniBatchKMeans
Batch_size=1000, n_clusters=500, compute_labels=True, init='k-means++', n_init=100
My python script works fine on this laptop configuration but when I use the same Python(everything same Copied python36 folder as it is) on another laptop, it gives a memory error. Even though the configuration for the other laptop is high:
Core i5 64 bit
Python 3.6.2
16 GB RAM
I checked all of the required libraries and other dependencies but its running perfectly on low configuration laptop. Why doesn't it run on a high configuration laptop?
I know this sounds strange, but its true.
Steps/Code to Reproduce
Error i got when my script worked on 16GB RAM machine.
km=MiniBatchKMeans(n_clusters=500, init='k-means++', n_init=100, batch_size=1000, verbose=False)
X = sparse.load_npz("D:\clustering_final\sp-k2.npz")
km.fit(X)
File "C:\python36\lib\site-packages\sklearn\cluster\k_means_.py", line 1418, in fit init_size=init_size)
File "C:\python36\lib\site-packages\sklearn\cluster\k_means_.py", line 684, in _init_centroids x_squared_norms=x_squared_norms)
File "C:\python36\lib\site-packages\sklearn\cluster\k_means_.py", line 79, in _k_init centers = np.empty((n_clusters, n_features), dtype=X.dtype)
MemoryError
Expected Results
Results i got when my script worked on 8GB RAM machine.
Even I Copy all Python folders to third machin(Core i3 and 8GB RAM) km.fit() complated in 19550 sec with all 500 clusters files.
Load complete
done in 11.343715s
n_samples: 850900, n_features: 1728098

Clustering sparse data with MiniBatchKMeans(n_clusters=500, batch_size=1000, compute_labels=True, 
init='k-means++', init_size=None, max_iter=100, max_no_improvement=10,  n_init=100, 
random_state=None, reassignment_ratio=0.01, tol=0.0, verbose=False)

fit complete in 3982.557838201523s
Versions
sys.version= '3.6.2 (v3.6.2:5fd33b5, Jul 8 2017, 04:57:36) [MSC v.1900 64 bit (AMD64)]'
scipy.version = 1.0.1
sklearn.version= 0.19.1
numpy.version=1.13.3