aewhatley commented on Dec 16, 2015
The following code causes a ValueError from svm.SVC() (and probably other sklearn functions as well, which I have not checked):
a = [1, 1, 1]
b = [2, 2, 2]
c = [1, 1, 3]
from sklearn import preprocessing
import pandas as pd
df = pd.DataFrame()
df[0] = preprocessing.scale(a)
df[1] = preprocessing.scale(b)
df[2] = preprocessing.scale(c)
from sklearn import svm
clf = svm.SVC()
clf.fit(df[[0,1]], df[2])
Traceback (most recent call last):
File "", line 1, in
File "C:\Users\Alexander\Anaconda\lib\site-packages\sklearn\svm\base.py", line
151, in fit
y = self._validate_targets(y)
File "C:\Users\Alexander\Anaconda\lib\site-packages\sklearn\svm\base.py", line
515, in _validate_targets
check_classification_targets(y)
File "C:\Users\Alexander\Anaconda\lib\site-packages\sklearn\utils\multiclass.p
y", line 173, in check_classification_targets
raise ValueError("Unknown label type: %r" % y)
ValueError: Unknown label type: 0 -0.707107
1 -0.707107
2 1.414214
Name: 2, dtype: float64
print(df[0].dtype)
float64
print(df[1].dtype)
float64
Since df[0], df[1], df[2] all have the same dtype, the classifier should be able to classify them.....