Liebeck commented on Nov 15, 2016
Description
I'm using GridSearchCV in version 0.18 and try to use the cv_results_ attribute instead of grid_scores_. If I JSON-serialize the new cv_results_ attribute of GridSearchCV a TypeError is thrown:
TypeError: array([1, 2], dtype=int32) is not JSON serializable
Steps/Code to Reproduce
from sklearn.model_selection import GridSearchCV
from sklearn.pipeline import Pipeline
from sklearn.svm import SVC
import json

X_train = ...
y_train = ...
param_grid = {'classifier__C': [1e3], 'classifier__gamma': [0.005, 0.01]}
classifier = SVC(kernel='rbf', class_weight='balanced', random_state=0)
pipe = Pipeline(steps=[('union', FeatureUnion(...)),
                           ('classifier', classifier)])
gridsearch = GridSearchCV(pipe, param_grid, scoring='f1_macro', cv=2, n_jobs=1, verbose=2)
gridsearch.fit(X_train, y_train)
with open('aaaaa', 'w') as outfile:
    json.dump(gridsearch.cv_results_, outfile, indent=2) 
Expected Results
I expect the dictionary to be JSON serialized. cv_results_ looks like this:
{  
   'split0_test_score':array(   [  
      0.58321668,
      0.57839678
   ]   ),
   'mean_fit_time':array(   [  
      0.12614989,
      0.13276517
   ]   ),
   'std_score_time':array(   [  
      0.00014651,
      0.00222135
   ]   ),
   'mean_test_score':array(   [  
      0.58116813,
      0.58106617
   ]   ),
   'std_fit_time':array(   [  
      0.00212479,
      0.00261819
   ]   ),
   'param_classifier__C':masked_array(data =   [  
      1000.0      1000.0
   ],
   mask =   [  
      False      False
   ],
   fill_value = ?),
   'split0_train_score':array(   [  
      0.65326776,
      0.67262026
   ]   ),
   'param_classifier__gamma':masked_array(data =   [  
      0.005      0.01
   ],
   mask =   [  
      False      False
   ],
   fill_value = ?),
   'split1_train_score':array(   [  
      0.63169577,
      0.64901544
   ]   ),
   'split1_test_score':array(   [  
      0.57911748,
      0.58373831
   ]   ),
   'std_train_score':array(   [  
      0.010786,
      0.01180241
   ]   ),
   'params':(   {  
      'classifier__gamma':0.005,
      'classifier__C':1000.0
   },
   {  
      'classifier__gamma':0.01,
      'classifier__C':1000.0
   }   ),
   'std_test_score':array(   [  
      0.0020496,
      0.00267077
   ]   ),
   'mean_score_time':array(   [  
      0.09029162,
      0.08895802
   ]   ),
   'mean_train_score':array(   [  
      0.64248177,
      0.66081785
   ]   ),
   'rank_test_score':array(   [  
      1,
      2
   ],
   dtype=int32)
}
Actual Results
Traceback (most recent call last):
  File "scripts/sentence/gridsearch.py", line 65, in <module>
    json.dump(gridsearch.cv_results_, outfile, indent=2)
  File "/root/miniconda/lib/python3.5/json/__init__.py", line 178, in dump
    for chunk in iterable:
  File "/root/miniconda/lib/python3.5/json/encoder.py", line 429, in _iterencode
    yield from _iterencode_dict(o, _current_indent_level)
  File "/root/miniconda/lib/python3.5/json/encoder.py", line 403, in _iterencode_dict
    yield from chunks
  File "/root/miniconda/lib/python3.5/json/encoder.py", line 436, in _iterencode
    o = _default(o)
  File "/root/miniconda/lib/python3.5/json/encoder.py", line 179, in default
    raise TypeError(repr(o) + " is not JSON serializable")
TypeError: array([1, 2], dtype=int32) is not JSON serializable
Versions
Python 3.5.2 |Continuum Analytics, Inc.| (default, Jul 2 2016, 17:53:06)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)] on linux
Type "help", "copyright", "credits" or "license" for more information.
Linux-4.2.0-27-generic-x86_64-with-debian-jessie-sid
Python 3.5.2 |Continuum Analytics, Inc.| (default, Jul 2 2016, 17:53:06)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]
NumPy 1.11.2
SciPy 0.18.1