andrewxiwu commented on Apr 30, 2017 â€¢
edited by lesteve
With the following code using robust covariance estimation the following issues will happen:
Negative determinant (which is impossible in theory because covariance matrix is positive semi definite).
Increasing determinant in the concentration step of the fast_mcd algorithm (which is also impossible in theory. And the comment in the implementation also says 'this should not happen')
If you only keep half of the rows of the data_matrix below, you encounter 'singular covariance matrix'. In theory the mcd method or fast_mcd algorithm can handle singular covariance matrices (it should not be an error and stops working..)
from sklearn import covariance

data = [[-0.25835642, -0.53452248],
       [-0.13294068, -0.53452248],
       [-0.13294068, -0.53452248],
       [-0.13294068,  0.80178373],
       [-0.25835642,  0.80178373],
       [-0.25835642, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.13294068,  0.80178373],
       [ 0.11789079,  2.13808994],
       [-0.25835642, -0.53452248],
       [-0.25835642,  0.80178373],
       [-0.25835642,  0.80178373],
       [-0.00752494, -0.53452248],
       [ 6.76492484, -0.53452248],
       [-0.25835642,  0.80178373],
       [-0.25835642, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.25835642,  4.81070235],
       [-0.25835642, -0.53452248],
       [-0.25835642,  0.80178373],
       [-0.25835642,  0.80178373],
       [ 0.74496948, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.25835642,  2.13808994],
       [-0.13294068, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.13294068, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.25835642, -0.53452248],
       [ 0.24330653, -0.53452248],
       [ 0.24330653, -0.53452248],
       [ 1.12121669, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.00752494, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.13294068, -0.53452248],
       [-0.25835642, -0.53452248],
       [ 0.11789079,  0.80178373],
       [-0.25835642, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.25835642,  0.80178373],
       [-0.13294068, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.00752494, -0.53452248],
       [-0.25835642, -0.53452248],
       [-0.25835642,  0.80178373],
       [-0.25835642,  0.80178373]]

mcd = covariance.MinCovDet()
mcd.fit(data)
An example trace
/usr/local/google/home/wuxi/Research/tmp/sklearn/covariance/robust_covariance.py:161: **RuntimeWarning: Warning! det > previous_det (-6.366529756873478 > -75.974760835829784)
  % (det, previous_det), RuntimeWarning)**
/usr/local/google/home/wuxi/Research/tmp/sklearn/covariance/robust_covariance.py:161: **RuntimeWarning: Warning! det > previous_det (-73.168291691327795 > -76.996412053817920)
  % (det, previous_det), RuntimeWarning)**
/usr/local/google/home/wuxi/Research/tmp/sklearn/covariance/robust_covariance.py:161: **RuntimeWarning: Warning! det > previous_det (-73.168291691327795 > -77.994940883929047)
  % (det, previous_det), RuntimeWarning)**
/usr/local/google/home/wuxi/Research/tmp/sklearn/covariance/robust_covariance.py:161: **RuntimeWarning: Warning! det > previous_det (-5.819811210046879 > -75.093170530451758)
  % (det, previous_det), RuntimeWarning)**
/usr/local/google/home/wuxi/Research/tmp/sklearn/covariance/robust_covariance.py:161: **RuntimeWarning: Warning! det > previous_det (-5.819811210046879 > -74.623820999327990)
  % (det, previous_det), RuntimeWarning)**