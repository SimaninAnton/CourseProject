Contributor
varunagrawal commented on Nov 10, 2017
Description
When calling image.extract_patches_2d on an image of say 512 to get a patch size of 512, the _compute_n_patches function raises an exception since the case where max_patches >= all_patches is not handled.
This happens when we have a pool of images of varying sizes and it would be tedious to handle this simple corner case.
Steps/Code to Reproduce
import numpy as np
from sklearn.feature_extraction import image
from PIL import Image

def sample_patches(img, patch_size=512, max_patches=50):

    if isinstance(patch_size, int):
        patch_size = (patch_size, patch_size)
    
    patches = image.extract_patches_2d(img, patch_size, max_patches)
    return patches

patches = sample_patches(np.array(Image.open("sample_512_image.jpg")))
Expected Results
The code should return the max number of patches allowable, i.e. all_patches.
So if it encounters an image of size 512 from a pool of images of varying sizes and we request a patch size of 512, this would simply return a single patch of size 512 instead of erroring out.
Actual Results
Traceback (most recent call last):
  File "sample_patches.py", line 49, in <module>
    main()
  File "sample_patches.py", line 37, in main
    patches = sample_patches(np.array(img), args.patch_size)
  File "sample_patches.py", line 12, in sample_patches
    patches = image.extract_patches_2d(img, patch_size, max_patches)
  File "/usr/local/lib/python3.5/dist-packages/sklearn/feature_extraction/image.py", line 378, in extract_patches_2d
    n_patches = _compute_n_patches(i_h, i_w, p_h, p_w, max_patches)
  File "/usr/local/lib/python3.5/dist-packages/sklearn/feature_extraction/image.py", line 236, in _compute_n_patches
    raise ValueError("Invalid value for max_patches: %r" % max_patches)
ValueError: Invalid value for max_patches: 50
Versions
Linux-4.4.0-97-generic-x86_64-with-Ubuntu-16.04-xenial
Python 3.5.2 (default, Nov 17 2016, 17:05:23)
[GCC 5.4.0 20160609]
NumPy 1.13.3
SciPy 0.18.1
Scikit-Learn 0.19.1