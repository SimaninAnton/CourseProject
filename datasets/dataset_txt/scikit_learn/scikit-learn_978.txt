pswpswpsw commented on Oct 24, 2018 â€¢
edited
Description
linear_models.enet_path give the right sparse model while linear_models.ElasticNet and linear_models.MultiTaskElasticNet give wrong models.
Steps/Code to Reproduce
I am using Python2.7.
please go to my github
git clone https://github.com/pswpswpsw/test_on_sklearn_elasticNet.git
python test.py
If you don't have the time to check the code, read this:
Do you see any difference betwen
alphas_enet, coefs_enet, _ = enet_path(A, B, max_iter=3000, tol=1e-6, 
                                       alphas=np.logspace(-16,1,200), l1_ratio=0.5, fit_intercept=False)
and this
for alpha in alpha_array:
    clf = ElasticNet(alpha=alpha, l1_ratio=0.5, tol=1e-6, max_iter=3000, fit_intercept=False) 
    clf_m = MultiTaskElasticNet(alpha=alpha, l1_ratio=0.5, tol=1e-6, max_iter=3000, fit_intercept=False)
Note: Look for the grey line in the picture!!!!
Expected Results
I expect the enet_path gives the same result as MultiTaskElasticNet
Actual Results
enet_path give the right, coefficient with smallest l1 norm, while the others don't.
Versions
('Python', '2.7.15 |Anaconda, Inc.| (default, May 1 2018, 18:37:09) [MSC v.1500 64 bit (AMD64)]')
('NumPy', '1.14.3')
('SciPy', '1.1.0')
('Scikit-Learn', '0.19.1')