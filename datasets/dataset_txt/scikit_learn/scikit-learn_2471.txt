Contributor
BasilBeirouti commented on Jan 15, 2017
Description
document_classification_20newsgroups.py is throwing TypeError when creating a pipeline.
Steps/Code to Reproduce
cd into the scikit-learn\examples\text directory and run the document_classification_20newsgroups.py example
>>> python documentclassification_20newsgroups.py
Expected Results
Example runs and produces plot comparing multiple classification algorithms (benchmarking against 20 newsgroups)
Actual Results
Error:
Traceback (most recent call last):
  File "/Users/basilbeirouti/Github/scikit-learn/examples/text/document_classification_20newsgroups.py", line 292, in <module>
    ('classification', LinearSVC())
  File "/Users/basilbeirouti/Github/scikit-learn/sklearn/pipeline.py", line 152, in __init__
    self._validate_steps()
  File "/Users/basilbeirouti/Github/scikit-learn/sklearn/pipeline.py", line 199, in _validate_steps
    " '%s' (type %s) doesn't" % (t, type(t)))
TypeError: All intermediate steps should be transformers and implement fit and transform. 'LinearSVC(C=1.0, class_weight=None, dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l1', random_state=None, tol=0.001,
     verbose=0)' (type <class 'sklearn.svm.classes.LinearSVC'>) doesn't
Code:
results.append(benchmark(Pipeline([
  ('feature_selection', LinearSVC(penalty="l1", dual=False, tol=1e-3)),
  ('classification', LinearSVC())
])))
I suspect the intent here is to use l1 loss to perform feature selection by allowing some coefficients to go to zero. This is inherent to the L1 loss function and does not require chaining two LinearSVC steps in a row. So a pipeline is not even necessary.
I also think that this configuration of the algorithm is already tried in line 262:
    results.append(benchmark(LinearSVC(loss='l2', penalty=penalty,
                                            dual=False, tol=1e-3)))
But that code also looks slightly incorrect to me because "l2" is possible argument for penalty, not loss.
In fact I would like to see someone run this code to check it because on my machine this line 91 argv = [] if is_interactive() else sys.argv[1:]
throws an an error before even getting to the benchmarking:
Traceback (most recent call last):
  File "/Users/basilbeirouti/Github/scikit-learn/examples/text/document_classification_20newsgroups.py", line 91, in <module>
    argv = [] if is_interactive() else sys.argv[1:]
  File "/Users/basilbeirouti/Github/scikit-learn/examples/text/document_classification_20newsgroups.py", line 88, in is_interactive
    return not hasattr(sys.modules['__main__ '], '__file__')
KeyError: '__main__ '