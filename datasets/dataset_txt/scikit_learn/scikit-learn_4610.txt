mjanv commented on Nov 5, 2013
In scikit-learn, some homogeneous meta-classifiers exist to combine classifiers (AdaBoost, Bagging,...) by applying differents subdatasets on differents instances of the same classifier. What about heterogeneous ones - combine differents classifiers on the same data training - ?
For my own purpose, i'm writing some of these. My starting point is the work of Kuncheva [1] and Kittler [2]. I've planned to go further and check other strategies. Does "scikit" will be interested by a pull request with some of these algorithms ?
The syntax will look like FeatureUnion and will (obviously) support GridSearchCV and Pipeline.
combined_classifiers = ModelUnion([("svc", SVC(C=0.1)),("sgd",SGDClassifier(penalty="l2"))])
[1]: Kuncheva, L. I., Bezdek, J. C., & Duin, R. P. (2001). Decision templates for multiple classifier fusion: an experimental comparison. Pattern Recognition, 34(2), 299-314.
[2]: Kittler, J., Hatef, M., Duin, R. P., & Matas, J. (1998). On combining classifiers. Pattern Analysis and Machine Intelligence, IEEE Transactions on, 20(3), 226-239.