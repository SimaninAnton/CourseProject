Contributor
albertcthomas commented on Feb 17, 2018 â€¢
edited
Description
This is the example showing how to build a custom scorer using make_scorer in the documentation
import numpy as np
def my_custom_loss_func(ground_truth, predictions):
    diff = np.abs(ground_truth - predictions).max()
    return np.log(1 + diff)

# loss_func will negate the return value of my_custom_loss_func,
#  which will be np.log(2), 0.693, given the values for ground_truth
#  and predictions defined below.
loss  = make_scorer(my_custom_loss_func, greater_is_better=False)
score = make_scorer(my_custom_loss_func, greater_is_better=True)
ground_truth = [[1], [1]]
predictions  = [0, 1]
from sklearn.dummy import DummyClassifier
clf = DummyClassifier(strategy='most_frequent', random_state=0)
clf = clf.fit(ground_truth, predictions)
loss(clf,ground_truth, predictions) 

score(clf,ground_truth, predictions)
In the definition of my_custom_loss_function ground_truth denotes
y data whereas it denotes X data at the end of the example: ground_truth = [[1], [1]], loss(clf,ground_truth, predictions) and score(clf,ground_truth, predictions). I think we should change the name of ground_truth when it denotes X data.