Contributor
tjanez commented on Mar 1, 2013
Here is a small example showing the problem:
import numpy as np
from sklearn import metrics

y_true = np.array([1, 1, 1, 1, 1])
y_pred_proba = np.array([[ 0.71826228,  0.28173772],
 [ 0.75861316,  0.24138684],
 [ 0.27813807,  0.72186193],
 [ 0.31471033,  0.68528967],
 [ 0.79938332,  0.20061668]])
metrics.auc_score(y_true, y_pred_proba[:, 1])
The output (with scikit-learn 0.13.1) is the following:
/home/tadej/Apps/scikit-learn-git/sklearn/metrics/metrics.py:488: UserWarning: No negative samples in y_true, false positive value should be meaningless
  warnings.warn("No negative samples in y_true, "
Traceback (most recent call last):
  File "/home/tadej/Workspace/Random-python/src/sklearn_auc.py", line 12, in <module>
    metrics.auc_score(y_true, y_pred_proba[:, 1])
  File "/home/tadej/Apps/scikit-learn-git/sklearn/metrics/metrics.py", line 240, in auc_score
    return auc(fpr, tpr, reorder=True)
  File "/home/tadej/Apps/scikit-learn-git/sklearn/metrics/metrics.py", line 66, in auc
    x, y = check_arrays(x, y)
  File "/home/tadej/Apps/scikit-learn-git/sklearn/utils/validation.py", line 215, in check_arrays
    _assert_all_finite(array)
  File "/home/tadej/Apps/scikit-learn-git/sklearn/utils/validation.py", line 18, in _assert_all_finite
    raise ValueError("Array contains NaN or infinity.")
ValueError: Array contains NaN or infinity.
While the call to the roc_curve function gives a warning about no negative samples in y_true, the subsequent ValueError confuses the user with the "Array contains NaN or infinity." message.
I think the proper fix would be to check if y_true has two unique values and give an error along the lines of "AUC is defined for binary classification only." if it doesn't.
Related to this issue is issue #1257 and pull request #1432.