depristo commented on Jan 19, 2014
The current code reads like:
def _get_support_mask(self):
    alpha = self.alpha
    sv = np.sort(self.pvalues_)
    threshold = sv[sv < alpha * np.arange(len(self.pvalues_))].max()
    return self.pvalues_ <= threshold
But this doesn't actually control FDR at all, the correct implementation should have:
    bf_alpha = alpha / len(self.pvalues_)
    threshold = sv[sv < bf_alpha * np.arange(len(self.pvalues_))].max()
Note the k / m term in the equation at:
http://en.wikipedia.org/wiki/False_discovery_rate#Benjamini.E2.80.93Hochberg_procedure