chmendoza commented on Jan 7
scikit-learn/sklearn/metrics/pairwise.py
Lines 500 to 503 in a1b6ff8
 def _argmin_min_reduce(dist, start): 
     indices = dist.argmin(axis=1) 
     values = dist[np.arange(dist.shape[0]), indices] 
     return indices, values 
The function _argmin_min_reduce has the parameter start, but it is not being used. According to this
scikit-learn/sklearn/metrics/pairwise.py
Lines 1466 to 1472 in a1b6ff8
     reduce_func : callable, optional 
         The function which is applied on each chunk of the distance matrix, 
         reducing it to needed values.  ``reduce_func(D_chunk, start)`` 
         is called repeatedly, where ``D_chunk`` is a contiguous vertical 
         slice of the pairwise distance matrix, starting at row ``start``. 
         It should return an array, a list, or a sparse matrix of length 
         ``D_chunk.shape[0]``, or a tuple of such objects. 
and this
scikit-learn/sklearn/metrics/pairwise.py
Lines 1542 to 1549 in a1b6ff8
     Where r is defined per sample, we need to make use of ``start``: 
        >>> r = [.2, .4, .4, .3, .1] 
     >>> def reduce_func(D_chunk, start): 
     ...     neigh = [np.flatnonzero(d < r[i]) 
     ...              for i, d in enumerate(D_chunk, start)] 
     ...     return neigh 
     >>> neigh = next(pairwise_distances_chunked(X, reduce_func=reduce_func)) 
It seems that start should be an optional keyword argument.
👍 1