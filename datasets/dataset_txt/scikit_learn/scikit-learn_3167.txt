xueyan2015 commented on Feb 19, 2016
Hi,
Please see my two questions as below
Is there any difference in the use of sample weight in R and in Python if I specify it?
In R, there is an option called "classwt" which is used to specify class weight;
In Python, there is a similar option called "class_weight"; and there is also another option called "sample_weight"; The documents says "class_weight" will be multiplied by "sample_weight" if "sample_weight" is also specified.
Is there any noticeable difference in sampling approach implemented in R and Python?
I am wondering if bootstrapped sampling or non-bootstrapped sampling implemented in R and in Python are exactly the same. I noticed the difference in predicted probabilities between R and Python is larger with bootstrapped sampling than with non-bootstrapped sampling.
I am aware R can also implement stratified sampling. But that is not available in randomforest class/method Python.
Some additional details:
R function for building random forest model: randomForest(). "classwt" option is available in it.
Python class for building random forest model: RandomForestClassifier(). "class_weight" option is available in it. The "sample_weight" option is available in fit(X, y[, sample_weight]) method.
The case study that I used to compare R and Python is a two-class classification problem, with several predictors (more than 80).
Thank you!