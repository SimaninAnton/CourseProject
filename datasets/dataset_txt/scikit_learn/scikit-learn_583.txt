mfrr commented on Apr 17, 2019
Description
When I train the LinearRegression with a sparse matrix I get a small error ~ 75, but when I train with the dense version of the sparse matrix, I get a very different result, the error is ~ 190011367223, which is many times greater. Here's the dataset.
Steps/Code to Reproduce
import numpy as np
import scipy.sparse
from sklearn import linear_model
from sklearn import metrics

from sklearn.model_selection import ShuffleSplit

if __name__ == '__main__':
    X = scipy.sparse.load_npz('X.npz')
    y = np.loadtxt('y.txt')
    
    model = linear_model.LinearRegression()
    cv = ShuffleSplit(n_splits = 15, test_size = .2, random_state = 0)
    (train_index, test_index) = [(train_index, test_index) for (train_index, test_index) in cv.split(X)][1]
    X_train = X[train_index]
    y_train = y[train_index]
    X_test = X[test_index]
    y_test = y[test_index]
    
    ## SPARSE ##
    model.fit(X_train, y_train)
    pred = model.predict(X_test) 
    print (metrics.mean_squared_error(y_test, pred)**.5)
    
    ## DENSE ##
    X_train_dense = X_train.todense()
    X_test_dense = X_test.todense()
    
    model.fit(X_train_dense, y_train)
    pred = model.predict(X_test_dense) 
    print (metrics.mean_squared_error(y_test, pred)**.5)
    print(np.logical_and.reduce(np.logical_and.reduce((X_train == X_train_dense),axis=0),axis=1))
Expected Results
Sparse and Dense versions with a closer error.
Actual Results
Sparse and Dense versions with a very different error.
Versions
System:
python: 3.7.2 (default, Jan 2 2019, 17:07:39) [MSC v.1915 64 bit (AMD64)]
executable: C:\Users\mfrr\AppData\Local\Continuum\anaconda3\pythonw.exe
machine: Windows-10-10.0.17763-SP0
BLAS:
macros:
lib_dirs:
cblas_libs: cblas
Python deps:
pip: 18.1
setuptools: 40.6.3
sklearn: 0.20.3
numpy: 1.15.4
scipy: 1.2.0
Cython: 0.29.2
pandas: 0.23.4