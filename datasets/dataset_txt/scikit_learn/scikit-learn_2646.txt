dorbodwolf commented on Oct 21, 2016 â€¢
edited
I have already got the train_data, train_label, test_data, test_label of every fold. The code is below:
def k_fold_cross_val(folds, X, y):
    n = len(X)
    kf = StratifiedKFold(y, n_folds=folds)
    fold = 0
    for train_index, test_index in kf:
        fold += 1
        print("Fold: %s" % fold)
        x_train, x_test = X[train_index], X[test_index]
        y_train, y_test = y[train_index], y[test_index]
        clf = svm.SVC(kernel = 'linear', C=1)
        clf.fit(x_train, y_train)
        y_pred = clf.predict(x_test)
        cm = confusion_matrix(y_test, y_pred) #confusion matrix of every fold
        ham_loss = hamming_loss(y_test, y_pred) #ham_loss of every fold
        print(cm, ham_loss)
I want to get the train and test loss curves for multiple training-validation splits like this
THX
dorbodwolf