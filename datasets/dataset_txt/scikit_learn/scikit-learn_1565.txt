Interstella12 commented on Feb 9, 2018 â€¢
edited by glemaitre
I found this strange and can't figure out the reason, I hope someone could help me.
We know pipeline helps to simplify the ML work, and today I found that, when using pipeline to train a model,it gives different result to that step-by-step,here is my example,on my own data ,it would be more difference( about 0.82 vs 0.89,step-by-step worse)
from sklearn.datasets import make_classification
from xgboost import XGBClassifier
from sklearn.feature_selection import SelectFromModel
from sklearn.pipeline import Pipeline
from sklearn.model_selection import cross_validate
from sklearn import svm
X,y = make_classification(n_samples=2000, n_features=20, 
                          n_informative=2, n_redundant=2, n_repeated=0, n_classes=2, n_clusters_per_class=2, weights=None, flip_y=0.01, class_sep=1.0, hypercube=True, shift=0.0, scale=1.0, shuffle=True, random_state=None)

fs_model = SelectFromModel(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
       colsample_bytree=1, gamma=0, learning_rate=0.1, max_delta_step=0,
       max_depth=3, min_child_weight=1, missing=None, n_estimators=100,
       n_jobs=1, nthread=-1, objective='binary:logistic', random_state=0,
       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=1, silent=True,
       subsample=1),
        norm_order=1, prefit=False, threshold=None)
X_fs = fs_model.fit_transform(X,y)
score_flow = cross_validate(svm.SVC(probability=True),
                                            X_fs,y,cv=3)
print "score_flow['test_score']: ",
print score_flow['test_score']
fs_model1 = SelectFromModel(estimator=XGBClassifier(base_score=0.5, booster='gbtree', colsample_bylevel=1,
       colsample_bytree=1, gamma=0, learning_rate=0.1, max_delta_step=0,
       max_depth=3, min_child_weight=1, missing=None, n_estimators=100,
       n_jobs=1, nthread=-1, objective='binary:logistic', random_state=0,
       reg_alpha=0, reg_lambda=1, scale_pos_weight=1, seed=1, silent=True,
       subsample=1),
        norm_order=1, prefit=False, threshold=None)
pipeline1 = Pipeline([('fs',fs_model1),('clf',svm.SVC(probability=True))])
score_pipe = cross_validate(pipeline1,X,y,cv=3)
print "score_pipe['test_score']:",
print score_pipe['test_score']

===== print strings====
score_flow['test_score']:  [ 0.90868263  0.91741742  0.88888889]
score_pipe['test_score']: [ 0.91017964  0.91291291  0.89339339]