Hubbitus commented on Apr 4, 2016
I have asked on StackOverflow before and got suggestion fill issue there.
It have fully reproducible sample code on included Boston houses demo data.
Please look:
I want to score different classifiers with different parameters.
For speedup on LogisticRegression I use LogisticRegressionCV (which at least 2x faster) and plan use GridSearchCV for others.
But problem while it give me equal C parameters, but not the AUC ROC scoring.
I'll try fix many parameters like scorer, random_state, solver, max_iter, tol...
Please look at example (real data have no mater):
Test data and common part:
    from sklearn import datasets
    boston = datasets.load_boston()
    X = boston.data
    y = boston.target
    y[y <= y.mean()] = 0; y[y > 0] = 1

    import numpy as np
    from sklearn.cross_validation import KFold
    from sklearn.linear_model import LogisticRegression
    from sklearn.grid_search import GridSearchCV
    from sklearn.linear_model import LogisticRegressionCV

    fold = KFold(len(y), n_folds=5, shuffle=True, random_state=777)
GridSearchCV
    grid = {
        'C': np.power(10.0, np.arange(-10, 10))
         , 'solver': ['newton-cg']
    }
    clf = LogisticRegression(penalty='l2', random_state=777, max_iter=10000, tol=10)
    gs = GridSearchCV(clf, grid, scoring='roc_auc', cv=fold)
    gs.fit(X, y)

    print ('gs.best_score_:', gs.best_score_)
gs.best_score_: 0.939162082194
LogisticRegressionCV
    searchCV = LogisticRegressionCV(
        Cs=list(np.power(10.0, np.arange(-10, 10)))
        ,penalty='l2'
        ,scoring='roc_auc'
        ,cv=fold
        ,random_state=777
        ,max_iter=10000
        ,fit_intercept=True
        ,solver='newton-cg'
        ,tol=10
    )
    searchCV.fit(X, y)

    print ('Max auc_roc:', searchCV.scores_[1].max())
Max auc_roc: 0.970588235294
Solver newton-cg used just to provide fixed value, other tried too.
What I forgot?
P.S. In both cases I also got warning "/usr/lib64/python3.4/site-packages/sklearn/utils/optimize.py:193: UserWarning: Line Search failed
warnings.warn('Line Search failed')" which I can't understand too. I'll be happy if someone also describe what it mean, but I hope it is not relevant to my main question.
import platform; print(platform.platform())
import sys; print("Python", sys.version)
import numpy; print("NumPy", numpy.__version__)
import scipy; print("SciPy", scipy.__version__)
import sklearn; print("Scikit-Learn", sklearn.__version__)
Linux-4.4.5-300.hu.1.pf8.fc23.x86_64-x86_64-with-fedora-23-Twenty_Three
Python 3.4.3 (default, Jun 29 2015, 12:16:01)
[GCC 5.1.1 20150618 (Red Hat 5.1.1-4)]
NumPy 1.10.4
SciPy 0.14.1
Scikit-Learn 0.17