skolouri commented on Jan 7, 2017
Hey,
I am using sklearn.discriminant_analysis.LinearDiscriminantAnalysis (LDA) to learn a discriminant subspace for the data I am analyzing. The projected data points onto the LDA subspace looked fine (i.e. after applying lda.transform(data)). However, when I checked lda.coefficients_ , I found out that the projection coefficients (LDA components) are not orthogonal! Am I missing something? Below is the code on a toy example:
`import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis as LDA
%matplotlib inline
Generate a toy data of three classess of Gaussians in 3D
data=np.random.multivariate_normal(np.asarray([2,-2,2]),
cov=np.asarray([[.3,0,0],[0.1,.4,0.1],[0.0,0.0,.3]]),size=(500))
data=np.concatenate((data,np.random.multivariate_normal(np.asarray([2,2,1]),
cov=np.asarray([[.3,0,0],[0.0,.4,0.1],[0.0,0.1,.4]]),
size=(500))),axis=0)
data=np.concatenate((data,np.random.multivariate_normal(np.asarray([-2.0,-2.0,1]),
cov=np.asarray([[.3,0.1,0.2],[0.0,.3,0.1],[0.0,0.1,.4]])
,size=(500))),axis=0)
labels=np.concatenate((-np.ones((500)),np.zeros((500)),np.ones((500))),0)
Visualize Data
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
for c,m,i in [('b','x',-1),('r','^',0),('g','o',1)]:
indices=np.where(labels==i)
xs=data[indices,0]
ys=data[indices,1]
zs=data[indices,2]
ax.scatter(xs,ys,zs,c=c,marker=m)
ax.set_xlabel('X Label')
ax.set_ylabel('Y Label')
ax.set_zlabel('Z Label')
plt.show()`
Calculate the LDA subspace and project the data onto this subspace.
`n_components=2
lda=LDA(n_components=n_components)
projections=lda.fit_transform(data,labels)
W=lda.coef_
b=lda.intercept_
plt.figure()
for c,m,i in [('b','x',-1),('r','^',0),('g','o',1)]:
indices=np.where(labels==i)
xs=projections[indices,0]
ys=projections[indices,1]
plt.plot(xs,ys,c=c,marker=m)
plt.show()`
As you can see, everything is fine up to here. Now I want to check the orthogonality of W=lda.coef_:
np.matmul(W,W.T)
array([[ 48.61899824, -24.47284063, -24.14615762],
[-24.47284063, 75.07191943, -50.59907881],
[-24.14615762, -50.59907881, 74.74523643]])
and the components of W=lda.coef_ are not orthogonal!!! Am I missing something?
On a side note, since the problem has 3 classes W=lda.coef_ should be a (dim=3)x(num_of_classes-1=2) matrix, but it is a 3x3 matrix. Why is that?
Thank you in advance for your help.