denkorzh commented on Mar 28, 2017
This is my code:
sklearn.__version__
# '0.18.1'

type(word_vectors)
# numpy.ndarray

word_vectors.shape
# (634158, 100)

num_clusters = int(word_vectors.shape[0] / 500)

from sklearn.cluster import KMeans
kmeans_clustering = KMeans(n_clusters=num_clusters)
kmeans_clustering.fit(word_vectors)
After that I get an error:
----> 1 kmeans_clustering.fit(word_vectors)
/home/anaconda2/lib/python2.7/site-packages/sklearn/cluster/k_means_.pyc in fit(self, X, y)
    887                 tol=self.tol, random_state=random_state, copy_x=self.copy_x,
    888                 n_jobs=self.n_jobs, algorithm=self.algorithm,
--> 889                 return_n_iter=True)
    890         return self
    891 

/home/anaconda2/lib/python2.7/site-packages/sklearn/cluster/k_means_.pyc in k_means(X, n_clusters, init, precompute_distances, n_init, max_iter, verbose, tol, random_state, copy_x, n_jobs, algorithm, return_n_iter)
    343                 X, n_clusters, max_iter=max_iter, init=init, verbose=verbose,
    344                 precompute_distances=precompute_distances, tol=tol,
--> 345                 x_squared_norms=x_squared_norms, random_state=random_state)
    346             # determine if these results are the best so far
    347             if best_inertia is None or inertia < best_inertia:

/home/anaconda2/lib/python2.7/site-packages/sklearn/cluster/k_means_.pyc in _kmeans_single_elkan(X, n_clusters, max_iter, init, verbose, x_squared_norms, random_state, tol, precompute_distances)
    392     # init
    393     centers = _init_centroids(X, n_clusters, init, random_state=random_state,
--> 394                               x_squared_norms=x_squared_norms)
    395     centers = np.ascontiguousarray(centers)
    396     if verbose:

/home/anaconda2/lib/python2.7/site-packages/sklearn/cluster/k_means_.pyc in _init_centroids(X, k, init, random_state, x_squared_norms, init_size)
    679     if isinstance(init, string_types) and init == 'k-means++':
    680         centers = _k_init(X, k, random_state=random_state,
--> 681                           x_squared_norms=x_squared_norms)
    682     elif isinstance(init, string_types) and init == 'random':
    683         seeds = random_state.permutation(n_samples)[:k]

/home/anaconda2/lib/python2.7/site-packages/sklearn/cluster/k_means_.pyc in _k_init(X, n_clusters, x_squared_norms, random_state, n_local_trials)
    112         # Compute distances to center candidates
    113         distance_to_candidates = euclidean_distances(
--> 114             X[candidate_ids], X, Y_norm_squared=x_squared_norms, squared=True)
    115 
    116         # Decide which candidate is the best

IndexError: index 634158 is out of bounds for axis 0 with size 634158