lengross commented on Sep 13, 2014
This is the example in scikit learn 3.1.1. Computing cross-validated metrics, It works correctly
import numpy as np
from sklearn import cross_validation
from sklearn import datasets
from sklearn import svm
from sklearn import metrics
iris = datasets.load_iris()
iris.data.shape, iris.target.shape
clf = svm.SVC(kernel='linear', C=1)
scores = cross_validation.cross_val_score(
clf, iris.data, iris.target, cv=5,scoring = 'f1')
print("Scores with f1 scoring = ", scores)
changed scoring to 'mean_squared_errror'
clf = svm.SVC(kernel='linear', C=1)
scores = cross_validation.cross_val_score(
clf, iris.data, iris.target, cv=5,scoring= 'mean_squared_error')
print("Scores withe mean_squared_error scoring = ", scores)
Output
Scores with f1 scoring = [ 0.96658312 1. 0.96658312 0.96658312 1. ]
Scores withe mean_squared_error scoring = [-0.03333333 -0. -0.03333333 -0.03333333 -0. ]
I would not expect a mean_SQUARED_error to be negative.
sys.version = 3.4.1 |Anaconda 2.0.1 (64-bit)| (default, Jun 11 2014, 17:27:11) [MSC v.1600 64 bit (AMD64)]
sklearn.version = 0.15.2