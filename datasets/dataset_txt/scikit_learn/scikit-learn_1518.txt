Contributor
hermidalc commented on Mar 6, 2018
I find when I'm running GridSearchCV using Pipeline and Memory that it's repeating transformer computations on tasks when it could be reusing cached transformers. The reason it does this is not a bug, it's just because it simply looks at whether input data and parameters are identical to any cached transformer and if not then it does the transformer computation from scratch.
But for certain parameter searches, even if the parameter is different, it should be able to reuse a cached transformer and avoid repeating potentially expensive computation if it saved some additional information. The particular examples I've been running into are the feature selection methods that use a callable feature score function, where calling the score function can be computationally expensive depending on the algorithm. The score function calculates scores/p-values for all the input features, so parameter searching across percentile for SelectPercentile, k for SelectKBest, alpha for SelectFpr/SelectFdr/SelectFwe if it saved the score function results it should be able to reuse them for the same fold but it doesn't appear to do that. If you are searching for k = { 5, 10, 20, 30, 40 } if has to repeat the transformer computation 5 x num folds instead of just num folds. The mutual_info_* score functions can be computationally expensive if you have many features, and I've also implemented some custom score functions which are the same, I would save a lot of time if they ran only as many times as the number of folds.
Is there some way to add this functionality or would this require a painful overhaul of how the transformer caching and lookup works? Of the top of my head I would imagine 1) saving the score function result in the cached transformer if it's not already, then 2) making GridSearchCV or Pipeline aware that for particular transformers certain parameters should not be considered in the identity and lookup of a cached transformer.
I'm willing to look into it myself if it's not a difficult overhaul and if I could be pointed in the right direction.