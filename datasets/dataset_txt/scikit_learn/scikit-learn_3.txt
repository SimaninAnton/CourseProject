J535D165 commented 3 days ago
Describe the bug
The linear_model.LogisticRegression estimator doesn't return a NotFittedError when you would expect it.
This is related to the check_is_fitted discussion I think.
Steps/Code to Reproduce
from sklearn.linear_model import LogisticRegression
import numpy
Example 1: oke
kernel = LogisticRegression()
kernel.predict(numpy.random.rand(100,5))
---------------------------------------------------------------------------
NotFittedError                            Traceback (most recent call last)
<ipython-input-30-405c7761b590> in <module>
      1 kernel = LogisticRegression()
----> 2 kernel.predict(numpy.random.rand(100,5))

~/.pyenv/versions/3.8.0/envs/recordlinkage-py3.8/lib/python3.8/site-packages/sklearn/linear_model/_base.py in predict(self, X)
    291             Predicted class label per sample.
    292         """
--> 293         scores = self.decision_function(X)
    294         if len(scores.shape) == 1:
    295             indices = (scores > 0).astype(np.int)

~/.pyenv/versions/3.8.0/envs/recordlinkage-py3.8/lib/python3.8/site-packages/sklearn/linear_model/_base.py in decision_function(self, X)
    264             class would be predicted.
    265         """
--> 266         check_is_fitted(self)
    267 
    268         X = check_array(X, accept_sparse='csr')

~/.pyenv/versions/3.8.0/envs/recordlinkage-py3.8/lib/python3.8/site-packages/sklearn/utils/validation.py in check_is_fitted(estimator, attributes, msg, all_or_any)
    965 
    966     if not attrs:
--> 967         raise NotFittedError(msg % {'name': type(estimator).__name__})
    968 
    969 

NotFittedError: This LogisticRegression instance is not fitted yet. Call 'fit' with appropriate arguments before using this estimator.
Example 2: oke
kernel = LogisticRegression()
kernel.classes_ = numpy.array([0, 1])
kernel.coef_ = numpy.array(numpy.random.rand(2,5))
kernel.intercept_ = numpy.array(numpy.random.rand(1,2))
kernel.predict(numpy.random.rand(100,5))
array([1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1,
       0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0,
       0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0,
       0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 1])
Example 3: unexpected
kernel = LogisticRegression()
kernel.classes_ = numpy.array([0, 1])
kernel.predict(numpy.random.rand(100,5))
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-35-462c1206a605> in <module>
      3 # kernel.coef_ = numpy.array(numpy.random.rand(2,5))
      4 # kernel.intercept_ = numpy.array(numpy.random.rand(1,2))
----> 5 kernel.predict(numpy.random.rand(100,5))

~/.pyenv/versions/3.8.0/envs/recordlinkage-py3.8/lib/python3.8/site-packages/sklearn/linear_model/_base.py in predict(self, X)
    291             Predicted class label per sample.
    292         """
--> 293         scores = self.decision_function(X)
    294         if len(scores.shape) == 1:
    295             indices = (scores > 0).astype(np.int)

~/.pyenv/versions/3.8.0/envs/recordlinkage-py3.8/lib/python3.8/site-packages/sklearn/linear_model/_base.py in decision_function(self, X)
    268         X = check_array(X, accept_sparse='csr')
    269 
--> 270         n_features = self.coef_.shape[1]
    271         if X.shape[1] != n_features:
    272             raise ValueError("X has %d features per sample; expecting %d"

AttributeError: 'LogisticRegression' object has no attribute 'coef_'
Expected Results
Raise a NotFittedError is one of classes_, coef_ or intercept_ is missing.
Actual Results
See above
Versions
System:
    python: 3.8.0 (default, Nov 20 2019, 23:41:41)  [Clang 9.0.0 (tags/RELEASE_900/final)]
executable: /Users/jonathan/.pyenv/versions/3.8.0/envs/recordlinkage-py3.8/bin/python
   machine: macOS-10.14.3-x86_64-i386-64bit

Python dependencies:
       pip: 20.0.2
setuptools: 41.2.0
   sklearn: 0.22.1
     numpy: 1.18.1
     scipy: 1.3.2
    Cython: 0.29.14
    pandas: 1.0.0
matplotlib: 3.1.2
    joblib: 0.14.0

Built with OpenMP: True