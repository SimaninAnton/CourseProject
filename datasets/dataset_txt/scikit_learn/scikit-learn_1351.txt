JYLFamily commented on May 31, 2018
Hi SKlearn team:
I want to custom sklearn estimator.
This is my code:
class XgbWrapper(BaseEstimator, ClassifierMixin):
def __init__(self,
             xgb=xgb, objective="reg:logistic", booster="gbtree", max_depth=6, num_boost_round=10):
    self.xgb = xgb
    self.objective = objective
    self.booster = booster
    self.max_depth = max_depth
    self.num_boost_round = num_boost_round

def fit(self, X, y):
    self.train_ = self.xgb.DMatrix(
        data=X,
        label=y
    )

    self.params_ = {
        "objective": self.objective,
        "booster": self.booster,
        "max_depth": self.max_depth
    }

    self.clf_ = self.xgb.train(
        self.params_,
        self.train_,
        num_boost_round=self.num_boost_round
    )

    return self

def predict(self, X):
    self.test_ = self.xgb.DMatrix(
        data=X
    )

    return self.clf_.predict(self.test_)
I find a error when I use gridsearch.
iris = load_iris()
feature = iris.data[:100]
label = iris.target[:100]
gs = GridSearchCV(XgbWrapper(), param_grid={"max_depth": [1, 3, 5]})
gs.fit(feature, label)
Traceback (most recent call last):
File "C:/Users/puhui/PycharmProjects/Hello_World/Test/XgbWrapper.py", line 58, in
gs.fit(feature, label)
File "C:\Users\puhui\Anaconda3\lib\site-packages\sklearn\model_selection_search.py", line 624, in fit
base_estimator = clone(self.estimator)
File "C:\Users\puhui\Anaconda3\lib\site-packages\sklearn\base.py", line 61, in clone
new_object_params[name] = clone(param, safe=False)
File "C:\Users\puhui\Anaconda3\lib\site-packages\sklearn\base.py", line 52, in clone
return copy.deepcopy(estimator)
File "C:\Users\puhui\Anaconda3\lib\copy.py", line 169, in deepcopy
rv = reductor(4)
TypeError: can't pickle module objects
Why?
Thank you.