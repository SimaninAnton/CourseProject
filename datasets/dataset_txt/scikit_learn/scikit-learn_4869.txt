tobigue commented on Apr 26, 2013
The DictVectorizer throws a ValueError when no features in the dict are known instead of returning an empty vector.
>>> from sklearn.feature_extraction import DictVectorizer
>>> a = DictVectorizer()
>>> data = [{"j":1, "n":1}]
>>> a.fit(data)
DictVectorizer(dtype=<type 'numpy.float64'>, separator='=', sparse=True)
>>> a.transform([{"j":1}])
<1x2 sparse matrix of type '<type 'numpy.float64'>'
  with 1 stored elements in Compressed Sparse Row format>

>>> a.transform([])
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/home/tobi/projectname/eggs/scikit_learn-0.13.1-py2.7-linux-i686.egg/sklearn/feature_extraction/dict_vectorizer.py", line 218, in transform
    indices = np.frombuffer(indices, dtype=np.int32)
ValueError: offset must be non-negative and smaller than buffer lenth (0)

>>> a.transform([{}])
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/home/tobi/projectname/eggs/scikit_learn-0.13.1-py2.7-linux-i686.egg/sklearn/feature_extraction/dict_vectorizer.py", line 218, in transform
    indices = np.frombuffer(indices, dtype=np.int32)
ValueError: offset must be non-negative and smaller than buffer lenth (0)

>>> a.transform([{"x":1}])
Traceback (most recent call last):
  File "<console>", line 1, in <module>
  File "/home/tobi/projectname/eggs/scikit_learn-0.13.1-py2.7-linux-i686.egg/sklearn/feature_extraction/dict_vectorizer.py", line 218, in transform
    indices = np.frombuffer(indices, dtype=np.int32)
ValueError: offset must be non-negative and smaller than buffer lenth (0)