avibrazil commented on Sep 22, 2018 â€¢
edited
There is a chance I'm not doing it in the right way, but I can't pass GridSearchCV.best_params to Pipeline.set_params(). Take this pattern:
priceEstimator=Pipeline([
    ("scale",StandardScaler()),
    ("poly",PolynomialFeatures()),
    ("xgb",XGBRegressor(n_jobs=4))
])

paramGrid={
    'poly__degree': [2,3],
    
    'xgb__n_estimators': [190,210,230],
    'xgb__max_depth': [2,3,4],
    'xgb__reg_alpha': [0.6,0.7,0.8,0.9],
    'xgb__reg_lambda': [0.0,0.05,0.1,0.2],
}

# Find best hyper-parameters:
hparamsearch = GridSearchCV(estimator = priceEstimator, param_grid = paramGrid)
hparamsearch.fit(houses.drop(columns='SalePrice'),np.log(houses['SalePrice']))

# Now use best-found hyper-parameters on priceEstimator:
priceEstimator.set_params(hparamsearch.best_params_)
Last line fails with TypeError: set_params() takes 1 positional argument but 2 were given
It should be easier to exchange parameters found by GridSearchCV() and an encapsulation of transformations and estimators such as a Pipeline(), specially when Pipeline().get_params() returns a dict in the exact same format.
Forgive me if I'm missing something or doing it in the wrong way.