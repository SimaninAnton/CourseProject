auroua commented on Nov 26, 2015
# Convert the image into a graph with the value of the gradient on the
# edges.
graph = image.img_to_graph(img, mask=None)
When set the mask to None the results is quit different from the example. Is this correct?


This is the modified code:
# Convert the image into a graph with the value of the gradient on the
# edges.
graph = image.img_to_graph(img, mask=None)

# Take a decreasing function of the gradient: we take it weakly
# dependent from the gradient the segmentation is close to a voronoi
graph.data = np.exp(-graph.data / graph.data.std())

# Force the solver to be arpack, since amg is numerically
# unstable on this example
labels = spectral_clustering(graph, n_clusters=4, eigen_solver='arpack')
# label_im = -np.ones(mask.shape)
label_im = -np.ones(img.shape)
# label_im[mask] = labels
label_im = labels.reshape((100, 100))
plt.matshow(img)
plt.matshow(label_im)