Contributor
fannix commented on Feb 21, 2013
_graph_laplacian_sparse (in sklearn/utils/graph.py) use the following line to modify the sparse matrix:
lap = lap.tolil()

diagonal_holes = list(set(range(n_nodes)).difference(diag_idx))
lap[diagonal_holes, diagonal_holes] = 1
The last statement is extremely slow. I compare the lil_matrix with dok_matrix with the following script.
import scipy.sparse as sparse
import numpy as np

def test_lil(dense):
    lil = sparse.lil_matrix(dense)
    lil[lil.nonzero()] = 1

def test_dok(dense):
    dok = sparse.dok_matrix(dense)
    index0, index1 = dok.nonzero()
    for i in range(len(index0)):
        dok[index0[i], index1[i]] = 1

if __name__ == "__main__":
    dense = np.identity(1000)
    test_lil(dense)
    test_dok(dense)
And here is the result:
dok_matrix
IPython CPU timings (estimated):
User : 0.08 s.
System : 0.01 s.
Wall time: 0.10 s.
lil_matrix
IPython CPU timings (estimated):
User : 16.42 s.
System : 0.09 s.
Wall time: 16.73 s.