Member
amueller commented on Nov 16, 2019 â€¢
edited
I took the example from the test on string features.
If you start from a dataframe, it's very natural to pass X.columns as the feature_names. That breaks :(
import pandas as pd
from sklearn.datasets import load_boston
boston = load_boston()
from sklearn.inspection import plot_partial_dependence
from sklearn.ensemble import GradientBoostingRegressor

clf_boston = GradientBoostingRegressor().fit(boston.data, boston.target)

X = pd.DataFrame(boston.data, columns=boston.feature_names)

feature_names = boston.feature_names

grid_resolution = 25
# check with str features and array feature names and single column
disp = plot_partial_dependence(clf_boston, X,
                               [('CRIM', 'ZN'), 'ZN'],
                               grid_resolution=grid_resolution,
                               feature_names=X.columns,
                               n_cols=1, line_kw={"alpha": 0.8})
See #15429