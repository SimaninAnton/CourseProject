alanwang93 commented on Mar 14, 2017
Description
I hope to use cross_val_score for my customized classifier, but I got 'NoneType' object has no attribute 'iteritems'
Steps/Code to Reproduce
from sklearn.utils import indexable
from sklearn.model_selection import check_cv
from sklearn.model_selection._validation import _fit_and_score
from sklearn.base import is_classifier, clone
from sklearn.metrics.scorer import check_scoring
from sklearn.externals.joblib import Parallel, delayed, logger

# clf is a customized classifier and nn_scorer is a scorer
clf = nn_clf()
print type(check_cv(10, y, classifier=is_classifier(clf)))
print(type(check_scoring(clf, scoring=nn_scorer)))
scores = cross_val_score(clf, X, y, cv=10, scoring=nn_scorer)
Actual Results
<class 'sklearn.model_selection._split.KFold'>
<class 'sklearn.metrics.scorer._PredictScorer'>
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-8-ea2037da0a62> in <module>()
     27 
     28 #clf = nn_clf()
---> 29 scores = cross_val_score(clf, X, y, cv=10, scoring=nn_scorer)

/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/model_selection/_validation.py in cross_val_score(estimator, X, y, groups, scoring, cv, n_jobs, verbose, fit_params, pre_dispatch)
    138                                               train, test, verbose, None,
    139                                               fit_params)
--> 140                       for train, test in cv_iter)
    141     return np.array(scores)[:, 0]
    142 

/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/externals/joblib/parallel.pyc in __call__(self, iterable)
    756             # was dispatched. In particular this covers the edge
    757             # case of Parallel used with an exhausted iterator.
--> 758             while self.dispatch_one_batch(iterator):
    759                 self._iterating = True
    760             else:

/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/externals/joblib/parallel.pyc in dispatch_one_batch(self, iterator)
    601 
    602         with self._lock:
--> 603             tasks = BatchedCalls(itertools.islice(iterator, batch_size))
    604             if len(tasks) == 0:
    605                 # No more tasks available in the iterator: tell caller to stop.

/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/externals/joblib/parallel.pyc in __init__(self, iterator_slice)
    125 
    126     def __init__(self, iterator_slice):
--> 127         self.items = list(iterator_slice)
    128         self._size = len(self.items)
    129 

/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/model_selection/_validation.py in <genexpr>((train, test))
    138                                               train, test, verbose, None,
    139                                               fit_params)
--> 140                       for train, test in cv_iter)
    141     return np.array(scores)[:, 0]
    142 

/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/base.pyc in clone(estimator, safe)
     66     klass = estimator.__class__
     67     new_object_params = estimator.get_params(deep=False)
---> 68     for name, param in six.iteritems(new_object_params):
     69         new_object_params[name] = clone(param, safe=False)
     70     new_object = klass(**new_object_params)

/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/externals/six.pyc in iteritems(d, **kw)
    437 def iteritems(d, **kw):
    438     """Return an iterator over the (key, value) pairs of a dictionary."""
--> 439     return iter(getattr(d, _iteritems)(**kw))
    440 
    441 def iterlists(d, **kw):

AttributeError: 'NoneType' object has no attribute 'iteritems'
I also tried this
from sklearn.utils import indexable
from sklearn.model_selection import check_cv
from sklearn.model_selection._validation import _fit_and_score
from sklearn.base import is_classifier, clone
from sklearn.metrics.scorer import check_scoring
from sklearn.externals.joblib import Parallel, delayed, logger

clf = nn_clf()
X,y,groups = indexable(X,y,None)
cv = check_cv(10, y, classifier=is_classifier(clf))
cv_iter = list(cv.split(X, y, groups))
scorer = check_scoring(clf, scoring=nn_scorer)
parallel = Parallel(n_jobs=1, verbose=0,
                        pre_dispatch='2*n_jobs')

print(type(cv_iter))
for train, test in cv_iter:
    print test
and the result is:
<type 'list'>
[    0     1     2 ..., 10557 10558 10559]
[10560 10561 10562 ..., 21117 21118 21119]
[21120 21121 21122 ..., 31677 31678 31679]
[31680 31681 31682 ..., 42237 42238 42239]
[42240 42241 42242 ..., 52797 52798 52799]
[52800 52801 52802 ..., 63357 63358 63359]
[63360 63361 63362 ..., 73917 73918 73919]
[73920 73921 73922 ..., 84477 84478 84479]
[84480 84481 84482 ..., 95037 95038 95039]
[ 95040  95041  95042 ..., 105597 105598 105599]
Versions
Darwin-16.4.0-x86_64-i386-64bit
('Python', '2.7.10 (v2.7.10:15c95b7d81dc, May 23 2015, 09:33:12) \n[GCC 4.2.1 (Apple Inc. build 5666) (dot 3)]')
('NumPy', '1.12.0')
('SciPy', '0.19.0')
('Scikit-Learn', '0.18.1')
Seems that cv_iter is a good.
I don't know how Parallel works, but I wonder how I can fix it.
Thanks for your help.