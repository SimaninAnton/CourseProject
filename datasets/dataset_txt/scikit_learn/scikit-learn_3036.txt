Member
ogrisel commented on Apr 25, 2016 â€¢
edited
By reading the new GaussianMixture code, I think it might be interesting to parameterize the full covariance models in terms of precision matrices instead of covariance matrices.
This would allow us to skip the call to linalg.solver_triangular in _estimate_log_gaussian_prob_full which is called both by the E-step and the score_samples / score methods.
Note that this change will not speed up training as the empirical covariance matrix inversion will just be moved to the M-step in that case. But it would speed-up calls to score_samples and score which might be very important in some use cases (e.g. estimate the likelihood for new test samples for an outlier / novelty detection system on low dimensional data).
Furthermore, instead of storing the square precision matrix, we could store it's lower triangular cholesky factorization which would additionally spare a call to the cholesky solver when calling score_samples to compute the determinant. This would move the call to the cholesky solver from the E-step to the M-step too. Or alternatively we could just store the value of the determinant as an additional model parameter.
Disclaimer: I have not tried to implement those changes myself so I have missed something. I just want to use this github issue to discuss the relevance of the proposed change.