HaiQW commented on May 27, 2016
Description
some function is not a valid kernel. Only rbf and knn are supported at this time
I wonder that if some user-specific kernel could be added to two semi-supervised algorithms, LabelPropagation or LabelSpreading. Currently only 'rbf' and 'knn' are supported. I think it is possible
to set the kernel(or weights matrix) manually by user, i.e., kernel=weights_matrix
Related Code
def _get_kernel(self, X, y=None):
    if self.kernel == "rbf":
        if y is None:
            return rbf_kernel(X, X, gamma=self.gamma)
        else:
            return rbf_kernel(X, y, gamma=self.gamma)
    elif self.kernel == "knn":
        if self.nn_fit is None:
            self.nn_fit = NearestNeighbors(self.n_neighbors).fit(X)
        if y is None:
            return self.nn_fit.kneighbors_graph(self.nn_fit._fit_X,
                                                self.n_neighbors,
                                                mode='connectivity')
        else:
            return self.nn_fit.kneighbors(y, return_distance=False)
    else:
        raise ValueError("%s is not a valid kernel. Only rbf and knn"
                         " are supported at this time" % self.kernel)
I think that modifying the above code could enable us to set user-specific kernel(weight matrix).