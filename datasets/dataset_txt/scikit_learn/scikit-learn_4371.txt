loli commented on Jun 5, 2014
I've just been playing with the cross_val_score function and observed the following strange behaviour:
iris = datasets.load_iris()
clf = RandomForestClassifier(n_estimators=1)
for _ in range(10):
    print cross_val_score(clf, iris.data, iris.target, n_jobs=1).mean()
results, as expected, in
0.92
0.953333333333
...
if I know allow multiple processes / threads, the results are all exactly equal, i.e.
iris = datasets.load_iris()
clf = RandomForestClassifier(n_estimators=1)
for _ in range(10):
    print cross_val_score(clf, iris.data, iris.target, n_jobs=2).mean()
leads to
0.933333333333
0.933333333333
0.933333333333
...
Rerunning the last script changes the result itself, but each iteration still yields always the same result as the first.
I could reproduce the behaviour with sklearn 0.14.1 and 0.15-git.
Any ideas what might cause this? And how to overcome it? Probably some difficulties with joblib.Parallel and random seeds? Especially, since both the 3-fold cross validation and the RandomForestClassifier introduce some measures of randomness.
Best,
loli