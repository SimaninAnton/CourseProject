instylefreedom commented on Apr 11, 2019 â€¢
edited
Description
Installed scikit learn developer environment on windows 10 64bit with python 3.7.1 32 bit
pytest sklearn gives doctestfailure and assertionerror
I did see previous issue reports on previous version of scikit-learn having similar error but just wanted to make sure if the current version of error is happening due to other reason
Below are some of the doctestfailure and assertionerror that happened.
Also attached the whole result
FAILURES.docx
Steps/Code to Reproduce
Expected Results
Actual Results
____________ [doctest] sklearn.preprocessing.label.label_binarize _____________
552
553 Returns
554 -------
555 Y : numpy array or CSR matrix of shape [n_samples, n_classes]
556 Shape will be [n_samples, 1] for binary problems.
557
558 Examples
559 --------
560 >>> from sklearn.preprocessing import label_binarize
561 >>> label_binarize([1, 6], classes=[1, 2, 4, 6])
Expected:
array([[1, 0, 0, 0],
[0, 0, 0, 1]])
Got:
array([[1, 0, 0, 0],
[0, 0, 0, 1]], dtype=int32)
C:\Users\YANG\scikit-learn\sklearn\preprocessing\label.py:561: DocTestFailure
_________________________ test_encoder_dtypes_pandas __________________________
def test_encoder_dtypes_pandas():
    # check dtype (similar to test_categorical_encoder_dtypes for dataframes)
    pd = pytest.importorskip('pandas')

    enc = OneHotEncoder(categories='auto')
    exp = np.array([[1., 0., 1., 0., 1., 0.],
                    [0., 1., 0., 1., 0., 1.]], dtype='float64')

    X = pd.DataFrame({'A': [1, 2], 'B': [3, 4], 'C': [5, 6]}, dtype='int64')
    enc.fit(X)
    assert all([enc.categories_[i].dtype == 'int64' for i in range(2)])
    assert_array_equal(enc.transform(X).toarray(), exp)

    X = pd.DataFrame({'A': [1, 2], 'B': ['a', 'b'], 'C': [3., 4.]})
    X_type = [int, object, float]
    enc.fit(X)
  assert all([enc.categories_[i].dtype == X_type[i] for i in range(3)])
E assert False
E + where False = all([False, True, True])
sklearn\preprocessing\tests\test_encoders.py:747: AssertionError
20 failed, 11681 passed, 73 skipped, 1 xfailed, 2472 warnings in 541.19 seconds
Versions
Could not locate executable g77
Could not locate executable f77
Could not locate executable ifort
Could not locate executable ifl
Could not locate executable f90
Could not locate executable efl
Could not locate executable gfortran
Could not locate executable f95
Could not locate executable g95
Could not locate executable efort
Could not locate executable efc
Could not locate executable flang
don't know how to compile Fortran code on platform 'nt'
C:\ProgramData\Anaconda3\lib\site-packages\numpy\distutils\system_info.py:625: UserWarning:
Atlas (http://math-atlas.sourceforge.net/) libraries not found.
Directories to search for the libraries can be specified in the
numpy/distutils/site.cfg file (section [atlas]) or by setting
the ATLAS environment variable.
self.calc_info()
C:\ProgramData\Anaconda3\lib\site-packages\numpy\distutils\system_info.py:625: UserWarning:
Blas (http://www.netlib.org/blas/) libraries not found.
Directories to search for the libraries can be specified in the
numpy/distutils/site.cfg file (section [blas]) or by setting
the BLAS environment variable.
self.calc_info()
C:\ProgramData\Anaconda3\lib\site-packages\numpy\distutils\system_info.py:625: UserWarning:
Blas (http://www.netlib.org/blas/) sources not found.
Directories to search for the sources can be specified in the
numpy/distutils/site.cfg file (section [blas_src]) or by setting
the BLAS_SRC environment variable.
self.calc_info()
System:
python: 3.7.1 (default, Dec 10 2018, 22:09:34) [MSC v.1915 32 bit (Intel)]
executable: C:\ProgramData\Anaconda3\python.exe
machine: Windows-10-10.0.17134-SP0
BLAS:
macros:
lib_dirs:
cblas_libs: cblas
Python deps:
pip: 18.1
setuptools: 40.6.3
sklearn: 0.21.dev0
numpy: 1.15.4
scipy: 1.1.0
Cython: 0.29.2
pandas: 0.23.4