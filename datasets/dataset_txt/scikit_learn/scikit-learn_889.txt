Member
amueller commented on Dec 1, 2018 â€¢
edited
from sklearn.preprocessing import OneHotEncoder
ct = make_column_transformer((cat_features, OneHotEncoder(sparse=False)),
                             remainder=StandardScaler())
ct.transformers
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-3-9232f2ef5d81> in <module>()
      6 
      7 ct = make_column_transformer((cat_features, OneHotEncoder(sparse=False)),
----> 8                              remainder=StandardScaler())
      9 ct.transformers

~/checkout/scikit-learn/sklearn/compose/_column_transformer.py in make_column_transformer(*transformers, **kwargs)
    819         raise TypeError('Unknown keyword arguments: "{}"'
    820                         .format(list(kwargs.keys())[0]))
--> 821     transformer_list = _get_transformer_list(transformers)
    822     return ColumnTransformer(transformer_list, n_jobs=n_jobs,
    823                              remainder=remainder,

~/checkout/scikit-learn/sklearn/compose/_column_transformer.py in _get_transformer_list(estimators)
    735 
    736     # XXX Remove in v0.22
--> 737     if _is_deprecated_tuple_order(estimators):
    738         transformers, columns = columns, transformers
    739         warnings.warn(message, DeprecationWarning)

~/checkout/scikit-learn/sklearn/compose/_column_transformer.py in _is_deprecated_tuple_order(tuples)
    714     """
    715     transformers, columns = zip(*tuples)
--> 716     if (not _validate_transformers(transformers)
    717             and _validate_transformers(columns)):
    718         return True

~/checkout/scikit-learn/sklearn/compose/_column_transformer.py in _validate_transformers(transformers)
    693 
    694     for t in transformers:
--> 695         if t in ('drop', 'passthrough'):
    696             continue
    697         if (not (hasattr(t, "fit") or hasattr(t, "fit_transform")) or not

ValueError: The truth value of an array with more than one element is ambiguous. Use a.any() or a.all()
This came up in one of my teaching notebooks actually (and might be in my book as well).
This is very natural because columns are of type pd.Index, and so if you take some subset of columns from DataFrame.columns you'll now run into this error.
So... 0.20.2?