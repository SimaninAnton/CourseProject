Contributor
reiinakano commented on Mar 18, 2017 â€¢
edited
Currently, model persistence is done through an external library for pickling, most likely with joblib.
Has it ever been considered to add new save and load methods to the estimator classes themselves? I frequently find myself having to add these in manually, for example, when writing scikit-learn wrappers for estimators from other libraries such as Keras to play nicely with the sklearn API, for which simple pickling does not work.
It could be something as simple as:
class Estimator(object):
def save(self, filepath):
    joblib.dump(self, filepath)

@staticmethod
def load(filepath):
    return joblib.load(filepath)
Additionally, things like the incompatibility of pickled Random Forests between 0.17 and 0.18 could(?) be handled in the methods themselves.
Of course, I don't have much knowledge of the inner workings of scikit-learn, so if it's unnecessary complexity for too little benefit, feel free to disregard.