Member
ogrisel commented on Oct 21, 2012
======================================================================
FAIL: sklearn.tests.test_pipeline.test_feature_stacker_weights
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/site-packages/nose/case.py", line 197, in runTest
    self.test(*self.arg)
  File "/Users/ogrisel/coding/scikit-learn/sklearn/tests/test_pipeline.py", line 243, in test_feature_stacker_weights
    assert_array_almost_equal(X_transformed[:, :-1], 10 * pca.fit_transform(X))
  File "/usr/local/lib/python2.7/site-packages/numpy/testing/utils.py", line 800, in assert_array_almost_equal
    header=('Arrays are not almost equal to %d decimals' % decimal))
  File "/usr/local/lib/python2.7/site-packages/numpy/testing/utils.py", line 636, in assert_array_compare
    raise AssertionError(msg)
AssertionError: 
Arrays are not almost equal to 6 decimals

(mismatch 100.0%)
 x: array([[-26.84207125,   3.26607315],
       [-27.15390616,  -1.69556848],
       [-28.8981954 ,  -1.3734561 ],...
 y: array([[ 26.84207125,  -3.26607315],
       [ 27.15390616,   1.69556848],
       [ 28.8981954 ,   1.3734561 ],...
>>  raise AssertionError('\nArrays are not almost equal to 6 decimals\n\n(mismatch 100.0%)\n x: array([[-26.84207125,   3.26607315],\n       [-27.15390616,  -1.69556848],\n       [-28.8981954 ,  -1.3734561 ],...\n y: array([[ 26.84207125,  -3.26607315],\n       [ 27.15390616,   1.69556848],\n       [ 28.8981954 ,   1.3734561 ],...')
Under OX 10.8 with numpy 1.6.1.
We could try to make PCA deterministic by multiplying the components matrix by the sign of the coefficient with the largest absolute value in the largest component for instance.