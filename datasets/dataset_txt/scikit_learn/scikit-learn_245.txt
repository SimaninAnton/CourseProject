aatish-kayyath commented on Sep 19, 2019 â€¢
edited by glemaitre
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-120-70ba7d79e93a> in <module>
      1 
      2 clustering = sklearn.cluster.SpectralClustering(3, affinity='precomputed', n_init=100,assign_labels='discretize')
----> 3 preds = clustering.fit_predict(X_pca)
      4 score1=sklearn.metrics.silhouette_score(X_pca, preds)


    355         # non-optimized default implementation; override when a better
    356         # method is possible for a given clustering algorithm
--> 357         self.fit(X)
    358         return self.labels_
    359 


    491                                            n_init=self.n_init,
    492                                            eigen_tol=self.eigen_tol,
--> 493                                            assign_labels=self.assign_labels)
    494         return self
    495 

\Anaconda3\lib\site-packages\sklearn\cluster\spectral.py in spectral_clustering(affinity, n_clusters, n_components, eigen_solver, random_state, n_init, eigen_tol, assign_labels)
    262                               eigen_solver=eigen_solver,
    263                               random_state=random_state,
--> 264                               eigen_tol=eigen_tol, drop_first=False)
    265 
    266     if assign_labels == 'kmeans':

\Anaconda3\lib\site-packages\sklearn\manifold\spectral_embedding_.py in spectral_embedding(adjacency, n_components, eigen_solver, random_state, eigen_tol, norm_laplacian, drop_first)
    211       https://doi.org/10.1137%2FS1064827500366124
    212     """
--> 213     adjacency = check_symmetric(adjacency)
    214 
    215     try:

\Anaconda3\lib\site-packages\sklearn\utils\validation.py in check_symmetric(array, tol, raise_warning, raise_exception)
    875     if (array.ndim != 2) or (array.shape[0] != array.shape[1]):
    876         raise ValueError("array must be 2-dimensional and square. "
--> 877                          "shape = {0}".format(array.shape))
    878 
    879     if sp.issparse(array):

ValueError: array must be 2-dimensional and square. shape = (292, 9)
Description
Steps/Code to Reproduce
Expected Results
<"Should give a silhouette_score">
Actual Results
Versions