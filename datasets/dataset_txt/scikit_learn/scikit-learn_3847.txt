StevenLOL commented on May 5, 2015
Not sure if it is the same problem as #4556
But I found that in following script the RandomForests gives very low accuracy.
Why RandomForests fail? bug?
from sklearn.cross_validation import train_test_split
from sklearn.datasets import make_classification
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score
from sklearn.svm import SVC


randomState=2015
print 'Generate all data'
datax, datay = make_classification(n_samples=30000,n_features=400, n_classes=50,n_informative=100,random_state=randomState)
print 'split Train/Test set'
trainx, testx, trainy, testy = train_test_split(datax,datay,test_size=0.35, random_state=randomState)

clfs=[RandomForestClassifier(n_estimators=500, n_jobs=-1,random_state=randomState),SVC(kernel='poly',C=1,degree=2,random_state=randomState)]

for clf in clfs:
    print 'traing...',clf
    clf.fit(trainx,trainy)
    print 'predicting...'
    y_pred=clf.predict(testx)
    print '\tAccuracy',accuracy_score(testy,y_pred)
if n_samples=20000 then RandomForests test accuracy is 0.059 , SVC gives 0.483
If n_samples=30000 then RandomForests test accuracy is 0.067, SVC gives 0.616
If n_samples=300000 (64GB memory required) then RandomForests test accuracy is 0.154 , SVC (no time to test)
0.16.1