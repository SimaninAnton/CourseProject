Passenger12138 commented on Nov 29, 2019 •
edited
I encountered a very strange problem when training my neural network using the MNIST dataset. I have successfully downloaded and placed my mnist-original.mat file, but he still prompts when I run my code I
Unknown pad file type, versions 34, 104
I'm very puzzled about this and would really appreciate your help,
Following is my code
from sklearn.datasets import fetch_mldata
mnist=fetch_mldata('MNIST original')
mnist
print('\n\n')
print('.样本数量 :{},样本特征 :{}'.format(mnist.data.shape[0],mnist.data.shape[1]))
X=mnist.data/255.
y=mnist.target
X_train,X_test,y_train,y_test=train_test_split(X,y,train_size=5000,test_size=1000,random_state=62)
mlp_hw=MLPClassifier(solver='lbfgs',hidden_layer_sizes=[100,100],activation='relu',alpha=1e-5,random_state=62)
mlp_hw.fit(X_train,y_train)
print('\n\n')
print('测试集数据打分:{:.2f}%'.format(mlp_hw.score(X_test,y_test)*100))
from PIL import Image
image=Image.open('4.png').convert('F')
image=image.resize((28,28))
arr=[]
for i in range(28):
for j in range(28):
pixel=1.0-float(image.getpixel(j,i))/255.
arr.append(pixel)
arr1=np.array(arr).reshape(1,-1)
print('图像中的数字是:{:.2f}'.format(mlp_hw.predict(arr1[0])))
ValueError Traceback (most recent call last)
in
1 from sklearn.datasets import fetch_mldata
----> 2 mnist=fetch_mldata('MNIST original')
3 mnist
4 print('\n\n')
5 print('.样本数量 :{},样本特征 :{}'.format(mnist.data.shape[0],mnist.data.shape[1]))
~\AppData\Roaming\Python\Python37\site-packages\sklearn\utils\deprecation.py in wrapped(*args, **kwargs)
84 def wrapped(*args, **kwargs):
85 warnings.warn(msg, category=DeprecationWarning)
---> 86 return fun(*args, **kwargs)
87
88 wrapped.doc = self._update_doc(wrapped.doc)
~\AppData\Roaming\Python\Python37\site-packages\sklearn\datasets\mldata.py in fetch_mldata(dataname, target_name, data_name, transpose_data, data_home)
140 # load dataset matlab file
141 with open(filename, 'rb') as matlab_file:
--> 142 matlab_dict = io.loadmat(matlab_file, struct_as_record=True)
143
144 # -- extract data from matlab_dict
C:\ProgramData\Anaconda3\lib\site-packages\scipy\io\matlab\mio.py in loadmat(file_name, mdict, appendmat, **kwargs)
215 variable_names = kwargs.pop('variable_names', None)
216 with _open_file_context(file_name, appendmat) as f:
--> 217 MR, _ = mat_reader_factory(f, **kwargs)
218 matfile_dict = MR.get_variables(variable_names)
219
C:\ProgramData\Anaconda3\lib\site-packages\scipy\io\matlab\mio.py in mat_reader_factory(file_name, appendmat, **kwargs)
70 """
71 byte_stream, file_opened = _open_file(file_name, appendmat)
---> 72 mjv, mnv = get_matfile_version(byte_stream)
73 if mjv == 0:
74 return MatFile4Reader(byte_stream, **kwargs), file_opened
C:\ProgramData\Anaconda3\lib\site-packages\scipy\io\matlab\miobase.py in get_matfile_version(fileobj)
239 if maj_val in (1, 2):
240 return ret
--> 241 raise ValueError('Unknown mat file type, version %s, %s' % ret)
242
243
ValueError: Unknown mat file type, version 34, 104