anbai106 commented on Sep 23, 2019 â€¢
edited
Versions
HI, I want to use sample_weight with sklearn. At the beginning, I tried the LinearSVC (liblinear implementation, better scale with data sample). However, I found that it ignores the parameter sample_weight and always return the same results. Other consideration is that I can define the problem setting (dual or primal) and also the regularization type (l1 or l2).
                model = LinearSVC(penalty=options.regularization_type, dual=options.dual_solver, C=options.penalty_scale, fit_intercept=False,
                                  class_weight=options.class_weight)
Then I tried SVC, which is based on libsvm, I only used linear kernel like this:
model = SVC(kernel='linear', C=options.penalty_scale,
                                  class_weight=options.class_weight)
Then I fit my data:
                ## fit the different SVM/hyperplanes
                model.fit(X, y, sample_weight=np.ascontiguousarray(weight_sample[:, m], dtype=float))


                weight_coef = model.coef_
                intesept = model.intercept_
However, this gave me the following error:
    if sp.issparse(coef[0]):
IndexError: list index out of range
I saw in the documentation, coef_ : array, shape = [n_class * (n_class-1) / 2, n_features]
Weights assigned to the features (coefficients in the primal problem). This is only available in the case of a linear kernel. I assume that SVC solve my problem as primal (the feature is ROI, not high dimension). I did not see parameters to choose the problem setting or the regulirazation type (l1 or l2). I assume that with a linear kernel, you can solve the problem with both primal or dual?
Could you please help me clarify this issue?
Thanks in advance!
Hao