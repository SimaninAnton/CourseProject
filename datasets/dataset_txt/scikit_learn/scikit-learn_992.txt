Contributor
Connossor commented on Oct 15, 2018
Often the max_features parameter of an IsolationForest is set as a float, to represent a fraction of the number of features to use. To convert to an integer, this equation is currently used: max_features = int(self.max_features * self.n_features_)
However, this often leads to a ValueError if the result is rounded down to zero. This may occur if the number of features is often unknown (for example, due to hyperparameter tuning in an earlier stage).
A more robust formula would be max_features = max(1, int(self.max_features * self.n_features_) )
Relevant location of suggested change:
scikit-learn/sklearn/ensemble/bagging.py
Lines 310 to 317 in 906f078
 # Validate max_features 
 if isinstance(self.max_features, (numbers.Integral, np.integer)): 
     max_features = self.max_features 
 else:  # float 
     max_features = int(self.max_features * self.n_features_) 
    if not (0 < max_features <= self.n_features_): 
     raise ValueError("max_features must be in (0, n_features]") 
Code to reproduce error:
import numpy as np
from sklearn.ensemble import IsolationForest

X = np.random.randint(0, 5, size=(5,2))
y = np.random.randint(0, high=1, size=5)
Iso = IsolationForest(max_features=0.3)
Iso.fit(X, y)
Error trace:
ValueErrorTraceback (most recent call last)
<ipython-input-14-ecf8f6b6e1bc> in <module>()
      2 y = np.random.randint(0, high=1, size=5)
      3 Iso = IsolationForest(max_features=0.3)
----> 4 Iso.fit(X, y)

~/.conda/envs/py3-atlantis/lib/python3.6/site-packages/sklearn/ensemble/iforest.py in fit(self, X, y, sample_weight)
    263         super(IsolationForest, self)._fit(X, y, max_samples,
    264                                           max_depth=max_depth,
--> 265                                           sample_weight=sample_weight)
    266 
    267         if self.behaviour == 'old':

~/.conda/envs/py3-atlantis/lib/python3.6/site-packages/sklearn/ensemble/bagging.py in _fit(self, X, y, max_samples, max_depth, sample_weight)
    315 
    316         if not (0 < max_features <= self.n_features_):
--> 317             raise ValueError("max_features must be in (0, n_features]")
    318 
    319         # Store validated integer feature sampling value

ValueError: max_features must be in (0, n_features]
Sklearn version information:
System
------
    python: 3.6.3 |Anaconda, Inc.| (default, Nov  3 2017, 19:19:16)  [GCC 7.2.0]
executable: /anon/.conda/envs/py3-atlantis/bin/python
   machine: Linux-3.10.0-693.17.1.el7.x86_64-x86_64-with-centos-7.5.1804-Core

BLAS
----
    macros: SCIPY_MKL_H=None, HAVE_CBLAS=None
  lib_dirs: /anon/.conda/envs/py3-atlantis/lib
cblas_libs: mkl_rt, pthread

Python deps
-----------
       pip: 10.0.1
setuptools: 27.2.0
   sklearn: 0.20.0
     numpy: 1.15.1
     scipy: 1.1.0
    Cython: None
    pandas: 0.23.0