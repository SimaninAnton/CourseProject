trmanish commented on May 31, 2018 â€¢
edited
Hi
I am trying to run t-sne from sklearn on a reduced dimensions data.
To start with I have a tfidf matrix. Here is the code for the same.
def tf_vectorizer(docs):
    """ Extract Term frequency vector for each document
    
    """
    
    from sklearn.feature_extraction.text import TfidfVectorizer
    print("Extracting tfidf features for clustering...\n")
    tf_vec = TfidfVectorizer(max_df=0.95, min_df=2,norm='l2').fit(docs)
    
    print("Tf-idf features extracted!!\n")
    return tf_vec
Then I am using TruncatedSVD to reduce the dimensions from 11K to 500. Here it is
def reduce_dimensions(tfidf_data,n_components):
    """ This function will reduce the dimension of the dataset"""
    
    
    from sklearn.decomposition import TruncatedSVD
    svd=TruncatedSVD(n_components=n_components,random_state=42)
    
    svd_reduced_data=svd.fit_transform(tfidf_data)
    svd_reduced_data=svd_reduced_data.astype('float')
    #print("Explained Variance of all components {}".format(svd.explained_variance_ratio_))
    print("Total variance explained {}".format(svd.explained_variance_ratio_.sum()))
    
    return svd_reduced_data
I checked the output of svd_reduced_data to check if there is any NaN or Inf.
np.isnan(svd_reduced_data).sum()
0
So this shows there are no missing values in this data. Now I pass this data of 500 dimensions to tsne to reduce it to 2 dimensions as follows:
  from sklearn.manifold import TSNE
   tsne=TSNE(n_components=n_components,n_iter=300,random_state=42)
   tsne_reduced_data=tsne.fit_transform(svd_reduced_data)
And I get this error:
/Users/anaconda/envs/dl/lib/python3.5/site-packages/scipy/linalg/misc.py in norm(a, ord, axis, keepdims)
    127     """
    128     # Differs from numpy only in non-finite handling and the use of blas.
--> 129     a = np.asarray_chkfinite(a)
    130 
    131     # Only use optimized norms if axis and keepdims are not specified.

/Users/anaconda/envs/dl/lib/python3.5/site-packages/numpy/lib/function_base.py in asarray_chkfinite(a, dtype, order)
   1231     if a.dtype.char in typecodes['AllFloat'] and not np.isfinite(a).all():
   1232         raise ValueError(
-> 1233             "array must not contain infs or NaNs")
   1234     return a
   1235 

ValueError: array must not contain infs or NaNs
I have tried this snippet code too and it gives the same error:
import random
from sklearn.manifold import TSNE
random.seed(1)
a = np.random.uniform(size=(100,20))
TSNE(n_components=2).fit_transform(a)
I have Mac OX High Sierra.
Numpy 1.14.2
Sklearn: 0.18.1
Not sure why it is giving this error when the underlying data has no NaN. Any help?