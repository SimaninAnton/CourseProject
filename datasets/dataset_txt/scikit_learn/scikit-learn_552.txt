gccmbr commented on May 1, 2019 â€¢
edited
Description
sklearn.PCA when used with StandardScaler(with_std=True) produces incorrect eigenvalues (explained_variance_). The explained_variance_ratio is correct. However, the sklearn.PCA with_std=False produces correct results.
Steps/Code to Reproduce
from sklearn import datasets
from sklearn.decomposition import PCA
from sklearn import preprocessing
import numpy as np
iris = datasets.load_iris()
pca = PCA().fit(iris.data)
scaler = preprocessing.StandardScaler(with_mean=True, with_std=True)
xstd = scaler.fit_transform(iris.data)
pca = PCA().fit(xstd)
pca.explained_variance_
vs. numpy correct result:
scaler = preprocessing.StandardScaler(with_mean=True, with_std=True)
xstd = np.asmatrix(scaler.fit_transform(iris.data))
xmat = (1 / xstd.shape[0]) * xstd.T @ xstd
eigw, eigv = np.linalg.eig(xmat)
eigw
Expected Results
array([2.91849782, 0.91403047, 0.14675688, 0.02071484])
Actual Results
array([2.93808505, 0.9201649 , 0.14774182, 0.02085386])
Versions
System:
python: 3.7.3 | packaged by conda-forge | (default, Mar 27 2019, 23:01:00) [GCC 7.3.0]
executable: /home/miniconda3/envs/rabbit/bin/python
machine: Linux-3.10.0-957.5.1.el7.x86_64-x86_64-with-centos-7.6.1810-Core
Python deps:
pip: 19.0.3
setuptools: 40.8.0
sklearn: 0.20.3
numpy: 1.16.2
scipy: 1.2.1
Cython: None
pandas: 0.24.1