HugoDLopes commented on Jul 12, 2018 â€¢
edited
Description
When I have the same distribution in a binary classification problem for both 0 and 1, then no classifier can get an AUC above 0.5, so this is the target value for this type of data distribution. However, I get an AUC of 0.052.
Steps/Code to Reproduce
import pandas as pd
import numpy as np
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import roc_auc_score
from sklearn.model_selection import train_test_split

train = pd.DataFrame(np.random.RandomState(12).normal(loc=1.0, scale=0.3, size=(20000, 10)))
y_train = np.ones(train.shape[0])
test = train.copy()
y_test =  np.zeros(test.shape[0])

X = np.concatenate((train, test))
y = np.concatenate((y_train, y_test))
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, random_state=42)

rf = RandomForestClassifier(n_estimators=100, random_state=123).fit(X_train, y_train)
probas = rf.predict_proba(X_test)[:, 1]

roc_auc_score(y_test, probas)
Expected Results
AUC of 0.5 or very close to that, never a value so close to 0.
Actual Results
AUC score of 0.05207687786393272
Versions
Linux-4.13.13-5-pve-x86_64-with-Ubuntu-16.04-xenial
Python 3.5.2 (default, Nov 17 2016, 17:05:23)
[GCC 5.4.0 20160609]
NumPy 1.14.5
SciPy 1.1.0
Scikit-Learn 0.19.1