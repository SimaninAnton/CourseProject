Contributor
glemaitre commented on Nov 29, 2019
Description
We need to add pos_label=pos_label when computing the average_precision_recall.
Steps/Code to Reproduce
from pandas.api.types import CategoricalDtype
from sklearn.datasets import fetch_openml
from sklearn.experimental import enable_hist_gradient_boosting
from sklearn.ensemble import HistGradientBoostingClassifier
from sklearn.metrics import plot_precision_recall_curve
from sklearn.model_selection import train_test_split
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import OrdinalEncoder
from sklearn.compose import make_column_transformer
from sklearn.compose import make_column_selector as selector
from sklearn.pipeline import make_pipeline


X, y = fetch_openml("adult", version=2, return_X_y=True, as_frame=True)

X_train, X_test, y_train, y_test = train_test_split(
    X, y, stratify=y, random_state=42)

categorical_processor = make_pipeline(
    SimpleImputer(strategy="constant", fill_value="missing"),
    OrdinalEncoder()
)

preprocessor = make_column_transformer(
    (categorical_processor, selector(dtype_include=CategoricalDtype)),
    remainder="passthrough"
)

model = make_pipeline(
    preprocessor, HistGradientBoostingClassifier(random_state=42)
)

model.fit(X_train, y_train)
plot_precision_recall_curve(
    model, X_test, y_test
)
Actual Results
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
/tmp/tmp.py in <module>
     33 model.fit(X_train, y_train)
     34 plot_precision_recall_curve(
---> 35     model, X_test, y_test
     36 )

~/Documents/packages/scikit-learn/sklearn/metrics/_plot/precision_recall_curve.py in plot_precision_recall_curve(estimator, X, y, sample_weight, response_method, name, ax, **kwargs)
    163                                                   sample_weight=sample_weight)
    164     average_precision = average_precision_score(y, y_pred,
--> 165                                                 sample_weight=sample_weight)
    166     viz = PrecisionRecallDisplay(precision, recall, average_precision,
    167                                  estimator.__class__.__name__)

~/Documents/packages/scikit-learn/sklearn/metrics/_ranking.py in average_precision_score(y_true, y_score, average, pos_label, sample_weight)
    209         if len(present_labels) == 2 and pos_label not in present_labels:
    210             raise ValueError("pos_label=%r is invalid. Set it to a label in "
--> 211                              "y_true." % pos_label)
    212     average_precision = partial(_binary_uninterpolated_average_precision,
    213                                 pos_label=pos_label)

ValueError: pos_label=1 is invalid. Set it to a label in y_true.
Versions
on master