bclayman commented on Jan 27, 2018 â€¢
edited
Hi there,
I'm using GridSearchCV to evaluate my xgboost model with different hyperparameter settings on the Kaggle Titanic dataset. I call .fit(X, y) on my GridSearchCV object and all is well.
I make a few changes to the hyperparameters I want to explore, re-run my code, and it hangs. I re-tried, using the same hyperparameters on the second run as on the first and it still hangs.
Here's my code (for reproducibility):
import pandas as pd
import numpy as np
import sklearn as sk
import matplotlib as plt
import xgboost as xgb
from sklearn.model_selection import KFold
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import GridSearchCV

model = xgb.XGBClassifier()

params = {"nthread": [8], "learning_rate": [0.005, 0.01, 0.015], "max_depth": [5, 6, 7], "subsample": [0.8], "n_estimators": [150, 200, 250]}

clf = GridSearchCV(model, params, n_jobs=-1, cv=10, verbose=2)

clf.fit(X, y)
However, it never makes any progress. Given that I used verbose=2, it should indicate it's making progress.
Expected Results
I expect to see a bunch of output exploring different hyperparameters (all combinations).
Actual Results
When I run this code the second time, I get this as output:
Fitting 10 folds for each of 27 candidates, totalling 270 fits
[CV] learning_rate=0.005, max_depth=5, n_estimators=150, nthread=8, subsample=0.8 
[CV] learning_rate=0.005, max_depth=5, n_estimators=150, nthread=8, subsample=0.8 
[CV] learning_rate=0.005, max_depth=5, n_estimators=150, nthread=8, subsample=0.8 
[CV] learning_rate=0.005, max_depth=5, n_estimators=150, nthread=8, subsample=0.8 
[CV] learning_rate=0.005, max_depth=5, n_estimators=150, nthread=8, subsample=0.8 
[CV] learning_rate=0.005, max_depth=5, n_estimators=150, nthread=8, subsample=0.8 
[CV] learning_rate=0.005, max_depth=5, n_estimators=150, nthread=8, subsample=0.8 
[CV] learning_rate=0.005, max_depth=5, n_estimators=150, nthread=8, subsample=0.8 
Versions
Darwin-17.3.0-x86_64-i386-64bit
Python 3.6.4 |Anaconda custom (64-bit)| (default, Jan 16 2018, 12:04:33) 
[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]
NumPy 1.12.1
SciPy 1.0.0
Scikit-Learn 0.19.1
Thanks for the help!