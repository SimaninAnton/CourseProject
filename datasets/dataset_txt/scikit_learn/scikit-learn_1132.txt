Contributor
agamemnonc commented on Aug 28, 2018 â€¢
edited
Currently it is not possible to use the score() method in any regressor and specify the multioutput variable, as we can otherwise do if we use the r2_score() function directly.
For example, this works fine:
from sklearn.datasets import make_regression
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score

X, Y = make_regression(n_samples=1000, n_features=100, n_informative=30, 
                       n_targets=5, bias=1.0, noise=1e2, random_state=10)

X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2)

lr = LinearRegression().fit(X_train, Y_train)
score = lr.score(X_test, Y_test)
assert score == r2_score(Y_test, lr.predict(X_test), 
                         multioutput='variance_weighted')
However, the following is not currently possible:
score = lr.score(X_test, Y_test, multioutput='uniform_average')
assert score == r2_score(Y_test, lr.predict(X_test), 
                         multioutput='uniform_average')
All that needs to be done to fix this is to include the multioutput arugment in the score() method of the RegressorMixin class.
Happy to submit a PR.