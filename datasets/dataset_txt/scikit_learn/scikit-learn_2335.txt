e-dorigatti commented on Mar 7, 2017 â€¢
edited
Description
Trying to use the OneHotEncoder on a particular subset of the features, with a given number of categories for each of them.
Steps/Code to Reproduce
from sklearn.preprocessing import OneHotEncoder
import numpy as np
X = (np.random.random((10, 4)) * 10).astype(np.int)
nominal = [1, 3]
n_values = np.zeros(X.shape[1])
n_values[nominal] = np.max(X[:, nominal]) + 1
OneHotEncoder(n_values=n_values, categorical_features=nominal).fit_transform(X)
Expected Results
It should work smoothly, because the condition that triggers the exception (i.e. n_values.ndim < 1 or n_values.shape[0] != X.shape[1]) is False when invoking fit_transform.
Actual Results
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "C:\Users\s166979\AppData\Local\Continuum\Anaconda3\lib\site-packages\sklearn\preprocessing\data.py", line 1902, in fit_transform
    self.categorical_features, copy=True)
  File "C:\Users\s166979\AppData\Local\Continuum\Anaconda3\lib\site-packages\sklearn\preprocessing\data.py", line 1719, in _transform_selected
    X_sel = transform(X[:, ind[sel]])
  File "C:\Users\s166979\AppData\Local\Continuum\Anaconda3\lib\site-packages\sklearn\preprocessing\data.py", line 1870, in _fit_transform
    raise ValueError("Shape mismatch: if n_values is an array,"
ValueError: Shape mismatch: if n_values is an array, it has to be of shape (n_features,).
The same error happens even when categorical_features is a mask, e.g. [False, True, False, True].
Versions
Windows-10-10.0.14393-SP0
Python 3.6.0 |Anaconda 4.3.0 (64-bit)| (default, Dec 23 2016, 11:57:41) [MSC v.1900 64 bit (AMD64)]
NumPy 1.11.3
SciPy 0.18.1
Scikit-Learn 0.18.1