Contributor
Jeffrey04 commented on Oct 19, 2015
Suppose I have my collection of data scaled with MinMaxScaler. Then I need to transform a new sparse matrix with one row (sparse vector?), eg.
  (0, 56839)    0.462743526481
  (0, 55421)    0.469655562306
  (0, 54368)    0.203714596644
  (0, 54060)    0.0962621236939
  (0, 51441)    0.540495850676
  (0, 48518)    0.056152354043
  (0, 45181)    0.0652388777274
  (0, 38682)    0.230776053348
  (0, 31876)    0.199738544715
  (0, 14641)    0.280892719445
  (0, 434)  0.207189026352
the shape is (1, 58188)
However, if I attempt to transform the 1-row sparse matrix above (so I can do comparison with the training data), I get this assertion error
Traceback (most recent call last):
  File "./address-query.py", line 41, in <module>
    main()
  File "./address-query.py", line 28, in main
    query = scaler.transform(query_)[0].toarray()
  File "/Users/jeffrey04/.local/lib/python3.5/site-packages/sklearn/preprocessing/data.py", line 792, in transform
    inplace_row_scale(X, 1.0 / self.scale_)
  File "/Users/jeffrey04/.local/lib/python3.5/site-packages/sklearn/utils/sparsefuncs.py", line 200, in inplace_row_scale
    inplace_csr_row_scale(X, scale)
  File "/Users/jeffrey04/.local/lib/python3.5/site-packages/sklearn/utils/sparsefuncs.py", line 61, in inplace_csr_row_scale
    assert scale.shape[0] == X.shape[0]
the value for scaler._scale.shape is (58188,)
The workaround to the problem is to use a matrix that has more than 1 row, due to this part of the code (if I am not mistaken)
        if sparse.issparse(X):
            if X.shape[0] == 1:
                inplace_row_scale(X, self.scale_)
            else:
                inplace_column_scale(X, self.scale_)
I am using 0.17b1 of scikit-learn with python 3.5, on os x 10.10 yosemite (installed by homebrew)