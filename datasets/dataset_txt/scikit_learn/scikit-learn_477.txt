Contributor
ab-anssi commented on Jun 6, 2019
This part of the test check_sparse_input in sklearn/ensemble/tests/test_gradient_boosting.py is never executed.
scikit-learn/sklearn/ensemble/tests/test_gradient_boosting.py
Lines 1220 to 1238 in ec35ed2
 if isinstance(EstimatorClass, GradientBoostingClassifier): 
     assert_array_almost_equal(sparse.predict_proba(X), 
                               dense.predict_proba(X)) 
     assert_array_almost_equal(sparse.predict_log_proba(X), 
                               dense.predict_log_proba(X)) 
        assert_array_almost_equal(sparse.predict_proba(X), 
                               auto.predict_proba(X)) 
     assert_array_almost_equal(sparse.predict_log_proba(X), 
                               auto.predict_log_proba(X)) 
        assert_array_almost_equal(sparse.decision_function(X_sparse), 
                               sparse.decision_function(X)) 
     assert_array_almost_equal(dense.decision_function(X_sparse), 
                               sparse.decision_function(X)) 
        assert_array_almost_equal( 
         np.array(sparse.staged_decision_function(X_sparse)), 
         np.array(sparse.staged_decision_function(X))) 
The problem is that isinstance(EstimatorClass, GradientBoostingClassifier) is never True. It should be replaced by issubclass(EstimatorClass, GradientBoostingClassifier) or EstimatorClass == GradientBoostingClassifier.
However, when I update the code, the last assert fails.
assert_array_almost_equal(np.array(sparse.staged_decision_function(X_sparse)), np.array(sparse.staged_decision_function(X)))
Error message :
test_gradient_boosting.py:1254:
test_gradient_boosting.py:1239: in check_sparse_input
np.array(sparse.staged_decision_function(X)))
x = array(<generator object GradientBoostingClassifier.staged_decision_function at 0x7fd190f5d6d0>,
dtype=object)
y = array(<generator object GradientBoostingClassifier.staged_decision_function at 0x7fd190f5d678>,
dtype=object)
def compare(x, y):
    try:
        if npany(gisinf(x)) or npany( gisinf(y)):
            xinfid = gisinf(x)
            yinfid = gisinf(y)
            if not (xinfid == yinfid).all():
                return False
            # if one item, x and y is +- inf
            if x.size == y.size == 1:
                return x == y
            x = x[~xinfid]
            y = y[~yinfid]
    except (TypeError, NotImplementedError):
        pass

    # make sure y is an inexact type to avoid abs(MIN_INT); will cause
    # casting of x later.
    dtype = result_type(y, 1.)
    y = array(y, dtype=dtype, copy=False, subok=True)
  z = abs(x - y)
E TypeError: unsupported operand type(s) for -: 'generator' and 'generator'
../../../sklearn_venv/lib/python3.5/site-packages/numpy/testing/_private/utils.py:998: TypeError