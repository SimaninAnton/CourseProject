Contributor
djv commented on Oct 4, 2012
I'm trying to chain a feature extraction class and a classifier in a pipeline. I'm giving the feature extractor the parameter preprocessor=itemgetter('col1') where col1 is a column in the dataframe data that is passed to fit. I'm getting:
---> 64 pipeline.fit(data, data.outcome)

/Library/Python/2.7/site-packages/sklearn/pipeline.pyc in fit(self, X, y, **fit_params)
    123         data, then fit the transformed data using the final estimator.
    124         """
--> 125         Xt, fit_params = self._pre_transform(X, y, **fit_params)
    126         self.steps[-1][-1].fit(Xt, y, **fit_params)
    127         return self

/Library/Python/2.7/site-packages/sklearn/pipeline.pyc in _pre_transform(self, X, y, **fit_params)
    113         for name, transform in self.steps[:-1]:
    114             if hasattr(transform, "fit_transform"):
--> 115                 Xt = transform.fit_transform(Xt, y, **fit_params_steps[name])
    116             else:
    117                 Xt = transform.fit(Xt, y, **fit_params_steps[name]) \

/Library/Python/2.7/site-packages/sklearn/feature_extraction/text.pyc in fit_transform(self, raw_documents, y)
    714         vectors: array, [n_samples, n_features]
    715         """
--> 716         X = super(TfidfVectorizer, self).fit_transform(raw_documents)
    717         self._tfidf.fit(X)
    718         # X is already a transformed view of raw_documents so

/Library/Python/2.7/site-packages/sklearn/feature_extraction/text.pyc in fit_transform(self, raw_documents, y)
    396         # (see XXX up ahead)
    397         for doc in raw_documents:
--> 398             term_count_current = Counter(analyze(doc))
    399             term_counts.update(term_count_current)
    400 

/Library/Python/2.7/site-packages/sklearn/feature_extraction/text.pyc in <lambda>(doc)
    311 
    312             return lambda doc: self._word_ngrams(
--> 313                 tokenize(preprocess(self.decode(doc))), stop_words)
    314 
    315         else:

TypeError: string indices must be integers
The problem is the iteration for doc in raw_documents: which for DataFrames iterates over the column names instead of the rows. There could be a check in the code so that it behaves correctly for DataFrames.
Iterating over the rows could be done with:
for doc in raw_documents.iterrows():
    ...