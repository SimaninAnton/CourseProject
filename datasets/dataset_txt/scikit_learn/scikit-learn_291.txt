phmochi commented on Aug 29, 2019 â€¢
edited
Description
When fitting tree based regressors to data with y of magnitude say e-4, the model is unable to fit and just returns the mean. Can currently work around this by scaling the value of y before fitting and then re-scaling it after predicting, but not sure why this is the case.
Steps/Code to Reproduce
Example:
from sklearn.tree import DecisionTreeRegressor
from sklearn.ensemble import RandomForestRegressor
import numpy as np
import pandas as pd

X = np.arange(100).reshape(-1,1)
y = np.random.normal(size=100) / 4000

tree = DecisionTreeRegressor()
tree.fit(X, y)
print(tree.feature_importances_)
print(tree.predict(X))

tree_rf = RandomForestRegressor()
tree_rf.fit(X, y)
print(tree_rf.feature_importances_)
print(tree_rf.predict(X))

y = y * 4000

tree.fit(X, y)
print(tree.feature_importances_)
print(tree.predict(X))

tree_rf.fit(X, y)
print(tree_rf.feature_importances_)
print(tree_rf.predict(X))

#### Expected Results
Expected results are the last 2 printed predictions

#### Actual Results
Actual results are the first 2 printed predictions

#### Versions
System:
    python: 3.7.3 | packaged by conda-forge | (default, Jul  1 2019, 14:38:56)  [Clang 4.0.1 (tags/RELEASE_401/final)]
executable: ###
   machine: Darwin-17.7.0-x86_64-i386-64bit

Python deps:
       pip: 19.2.2
setuptools: 41.0.1
   sklearn: 0.21.3
     numpy: 1.17.0
     scipy: 1.3.1
    Cython: None
    pandas: 0.25.0