Contributor
oleksandr-pavlyk commented on May 30, 2019
Description
(vanilla) C:\Users\me\devel\git>pytest --pyargs sklearn.preprocessing.tests.test_encoders::test_encoder_dtypes_pandas
================================================= test session starts =================================================
platform win32 -- Python 3.7.3, pytest-4.5.0, py-1.8.0, pluggy-0.12.0
rootdir: C:\Users\me\devel\git
collected 1 item

. F                                                                                                              [100%]

====================================================== FAILURES =======================================================
_____________________________________________ test_encoder_dtypes_pandas ______________________________________________

    def test_encoder_dtypes_pandas():
        # check dtype (similar to test_categorical_encoder_dtypes for dataframes)
        pd = pytest.importorskip('pandas')

        enc = OneHotEncoder(categories='auto')
        exp = np.array([[1., 0., 1., 0., 1., 0.],
                        [0., 1., 0., 1., 0., 1.]], dtype='float64')

        X = pd.DataFrame({'A': [1, 2], 'B': [3, 4], 'C': [5, 6]}, dtype='int64')
        enc.fit(X)
        assert all([enc.categories_[i].dtype == 'int64' for i in range(2)])
        assert_array_equal(enc.transform(X).toarray(), exp)

        X = pd.DataFrame({'A': [1, 2], 'B': ['a', 'b'], 'C': [3., 4.]})
        X_type = [int, object, float]
        enc.fit(X)
>       assert all([enc.categories_[i].dtype == X_type[i] for i in range(3)])
E       assert False
E        +  where False = all([False, True, True])

..\miniconda3cb3\envs\vanilla\lib\site-packages\sklearn\preprocessing\tests\test_encoders.py:762: AssertionError
============================================== 1 failed in 1.33 seconds ===============================================
Steps/Code to Reproduce
Create vanilla conda environment and pip install into it scikit-learn 0.21.2 and pandas
conda create -n vanilla python=3
conda activate vanilla
pip --no-cache-dir install scikit-learn==0.21.2 numpy pandas ipython pytest
# run the test
pytest --pyargs sklearn.preprocessing.tests.test_encoders::test_encoder_dtypes_pandas
Triaging
The failure is due to dtype=int being interpreted as np.int32, and that pandas and numpy differer in dtype inference opinions:
In [7]: import pandas as pd

In [8]: X = pd.DataFrame({'A': [1, 2], 'B': ['a', 'b'], 'C': [3., 4.]})

In [9]: X['A'].dtype
Out[9]: dtype('int64')

In [10]: np.array([1,2]).dtype
Out[10]: dtype('int32')