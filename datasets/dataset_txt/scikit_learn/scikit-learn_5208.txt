Contributor
erg commented on Sep 26, 2012
Each file seems to have some quirks in its docs. We could identify these quirks and fix them as we find them so that the docs are easier to use.
For instance, in DecisionTreeClassifier, predict_proba returns type p, but in SGDClassfiier it returns type T or there's no type listed.
In [5]: ?clf.predict_proba()
Type:       instancemethod
String Form:
<bound method DecisionTreeClassifier.predict_proba of DecisionTreeClassifier(compute_importances= <...> s=None, min_density=0.1,
           min_samples_leaf=1, min_samples_split=1, random_state=None)>
File:       /usr/lib/python2.7/site-packages/sklearn/tree/tree.py
Definition: clf.predict_proba(self, X)
Docstring:
Predict class probabilities of the input samples X.

Parameters
----------
X : array-like of shape = [n_samples, n_features]
    The input samples.

Returns
-------
p : array of shape = [n_samples, n_classes], or a list of n_outputs
    such arrays if n_outputs > 1.
    The class probabilities of the input samples. Classes are ordered
    by arithmetical order.
    def predict_proba(self, X):
        """Probability estimates.

        Probability estimates are only supported for binary classification.

        Parameters
        ----------
        X : {array-like, sparse matrix}, shape = [n_samples, n_features]

        Returns
        -------
        array, shape = [n_samples, n_classes]
            Returns the probability of the sample for each class in the model,
            where classes are ordered as they are in self.classes_.

        References
        ----------

        The justification for the formula in the loss="modified_huber"
        case is in the appendix B in:
        http://jmlr.csail.mit.edu/papers/volume2/zhang02c/zhang02c.pdf
        """

    def predict_log_proba(self, X):
        """Log of probability estimates.

        Log probability estimates are only supported for binary classification.

        Parameters
        ----------
        X : array-like, shape = [n_samples, n_features]

        Returns
        -------
        T : array-like, shape = [n_samples, n_classes]
            Returns the log-probability of the sample for each class in the
            model, where classes are ordered as they are in self.classes_.
        """
Input arrays have two styles for the shape:
    def predict_log_proba(self, X):
        """Log of probability estimates.

        Log probability estimates are only supported for binary classification.

        Parameters
        ----------
        X : array-like, shape = [n_samples, n_features]
vs
In [12]: ?DecisionTreeClassifier.predict_log_proba
Type:       instancemethod
String Form:<unbound method DecisionTreeClassifier.predict_log_proba>
File:       /usr/lib/python2.7/site-packages/sklearn/tree/tree.py
Definition: DecisionTreeClassifier.predict_log_proba(self, X)
Docstring:
Predict class log-probabilities of the input samples X.

Parameters
----------
X : array-like of shape = [n_samples, n_features]
    The input samples.
The first way, array-like, shape looks like two return values, especially in the case above for predict_proba where there's no return identifier listed. Perhaps we should standardize on X : array-like of shape?
There are little spacing differences here and there, like "strings ending with a space. " Or indenting three spaces instead of four in doc-strings as in decision_function and predict in SGDClassifier.
Anyway, I'd volunteer to clean a lot of this up if we figured out the right style.