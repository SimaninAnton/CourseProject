dhanush-ai1990 commented on Jan 25, 2018 â€¢
edited
The below is the source code:
import sqlite3
import re
import time
import csv
import numpy as np
from sklearn.naive_bayes import MultinomialNB
from sklearn.naive_bayes import BernoulliNB
from sklearn.naive_bayes import GaussianNB
from sklearn.utils import shuffle
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.learning_curve import learning_curve
from sklearn.model_selection import GridSearchCV,RandomizedSearchCV
from matplotlib import pyplot as pl
from matplotlib.backends.backend_pdf import PdfPages
from scipy import sparse
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.feature_extraction.text import HashingVectorizer
from sklearn.ensemble import RandomForestClassifier
from sklearn.ensemble import ExtraTreesClassifier
from sklearn.ensemble import AdaBoostClassifier
from sklearn.tree import DecisionTreeClassifier
from sklearn.datasets import make_blobs
from sklearn import svm
from sklearn.externals import joblib
from sklearn.metrics import precision_recall_fscore_support
from sklearn.metrics import f1_score
from sklearn.metrics import accuracy_score
import glob,os
#MultiNomial
from xgboost import XGBClassifier
import xgboost
from tpot import TPOTClassifier
tpot_config = {
'xgboost.XGBClassifier': {
'n_estimators':[50,100,150,200],
'max_depth':[2,3,4,5,6,7,8,9],
'min_child_weight':[2,3,4,5],
'colsample_bytree':[0.2,0.6,0.8],
'colsample_bylevel':[0.2,0.6,0.8],
'objective':['multi:softprob']
}
}
param = {
'n_estimators':[200],
'max_depth':[3,5,4],
'min_child_weight':[4,5,3],
'colsample_bytree':[0.2,0.6,0.8],
'colsample_bylevel':[0.2,0.6,0.8]
}
#pipeline_optimizer = TPOTClassifier(generations=5, population_size=20, cv=2,max_eval_time_mins=30,random_state=42, verbosity=200, config_dict=tpot_config,n_jobs = 10)
clf=XGBClassifier(objective= 'multi:softprob')
gsearch1 = GridSearchCV(estimator = clf, param_grid = param,cv=2,verbose = 100,n_jobs = -1)
gsearch1.fit(X_train, y_train)
print gsearch1.bestscore
print gsearch1.bestparams
#Omitted code relevant to data loading. It works fine for n_jobs =1
I am using Python 2.7.12 (v2.7.12:d33e0cf91556, Jun 26 2016, 12:10:39).
scikit-learn (0.19.1)
Because of this issue, TPOT also hangs as it uses SciKit learn GridSearchCV for internal operations.