Contributor
dengemann commented on Sep 8, 2013
I've recently witnessed huge performance jumps in a down-stream application depending on random state while everything else was kept constant. I'm now wondering at which level to implement parallel ICA decomposition on different random seeds.
If people think this would be neat to have in sklearn I'm happy to look into it. The idea would be to a) add a function that returns a list of ICA objects or b) to add a scorer / score function parameter and do the computations inside the ICA class + selecting the best components. Such a score function would only require to take an ICA object as input and return e.g. return a scalar value. Of course such a score function could also be parameter for case a). I just realize cross_val_scores could be abused for this purpose by adding a custom cv generator and parametrizing ICA appropriately. In that case it might make sense to add an example.
Wdyt?
cc @agramfort @GaelVaroquaux