raphaelsulzer commented on Sep 25, 2017 â€¢
edited by jnothman
Hi,
I am grid searching over different parameters of a pipeline, including a scaler, a PCA or RFECV and an estimator at the end. In order to get a confusion matrix for the best classification I am fitting the GridSearch.best_estimator_ again in a new kfold-CV after the grid search. However, even though I can see that GridSearch.best_estimator_ includes all the steps, from the scaler, to the best found dimensionality reduction to the best estimator, the GridSearch.best_estimator_.fit(X_train, y_train) does not transform the data, e.g. selecting only the features from the best dimensionality reduction.
An easy way to illustrate this is doing sth like this:
gs = GridSearchCV(estimator=clf_pipe, param_grid=param_grid, scoring='accuracy', cv=k_fold, refit='accuracy')

gs.fit(X, y) 
best_pipe = gs.best_estimator_

mask = best_pipe.named_steps['rdm'].support_
print(mask)

#best_pipe.transform(X)
best_pipe.fit(X,y)

mask = best_pipe.named_steps['rdm'].support_
print(mask)
Here the first and second print of mask gives me to different results.
Calling best_pipe.transform(X) will give an error saying that the classifier (e.g. DecisionTree) doesn't have a transform object.
Am I doing sth wrong here?
If my grid search results in the fact that I am getting the best results only using feature subset A from the whole feature set, shouldn't this subset then also be used for (fitting and) predicting new data?