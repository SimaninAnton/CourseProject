Member
ogrisel commented on Jan 19, 2013
PMML (predictive models markup language) is standard interchange format for trained predictive models (and more).
Here is a list of industry players and open source projects supporting PMML:
http://www.dmg.org/products.html
In particular, BigML is supporting export / import of PMML for decision tree models (and maybe ensemble of tree models too, need to check).
This the discussion in the comments of this thread:
http://www.quora.com/Machine-Learning/What-are-the-pros-and-cons-of-using-PMML-as-an-interchange-format-for-predictive-analytics-models/answer/Francisco-J-Martin
Note: BigML also supports a simpler, more compact and human readable JSON version of PMML named JSON PML as documented on this gist:
https://gist.github.com/4565563
Supporting PMML and/or JSON PML export of scikit-learn decision trees would make it possible to use the BigML web user interface to introspect the trees and run them on datasets loaded on the platform or publish them using the BigML features.
Using an external format for the persistence of some scikit-learn models (maybe not all) would also provide a partial solution to the issue of persistence / loading of models trained using a prior, class incompatible version of scikit-learn.
PMML export would also make it easier to perform science experiment replication (and help with reproduction too) if scientist using decision tree models would publish the PMML export of their ensemble of trees as technical annex to a paper for instance as already R/Rattle and Weka support PMML exports and imports.
Open questions:
how big (in bytes) would be a PMML export of a realistic ensemble of trees model such as the ones used in computer vision?
the PMML format looks very verbose, we could probably devise more compact model export format using msgpack BSON, Avro, Protocol Buffers or Parquet as a more generic solution for the persistence of scikit-learn model that does not rely upon the python class structure.