Member
ogrisel commented on Aug 27, 2014
For instance when running a Python 2 script that loads the olivetti dataset when it has already been loaded with Python 3 in the past:
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-4-d64d4cc01dcf> in <module>()
      1 from sklearn import datasets
----> 2 lfw_people = datasets.fetch_olivetti_faces()
      3 lfw_people.data.shape

/Users/ogrisel/venvs/py27/lib/python2.7/site-packages/sklearn/datasets/olivetti_faces.pyc in fetch_olivetti_faces(data_home, shuffle, random_state, download_if_missing)
    116         del mfile
    117     else:
--> 118         faces = joblib.load(join(data_home, TARGET_FILENAME))
    119     # We want floating point data, but float32 is enough (there is only
    120     # one byte of precision in the original uint8s anyway)

/Users/ogrisel/code/joblib/joblib/numpy_pickle.pyc in load(filename, mmap_mode)
    417                               'ignoring mmap_mode "%(mmap_mode)s" flag passed'
    418                               % locals(), Warning, stacklevel=2)
--> 419             unpickler = ZipNumpyUnpickler(filename, file_handle=file_handle)
    420         else:
    421             unpickler = NumpyUnpickler(filename, file_handle=file_handle,

/Users/ogrisel/code/joblib/joblib/numpy_pickle.pyc in __init__(self, filename, file_handle)
    306         NumpyUnpickler.__init__(self, filename,
    307                                 file_handle,
--> 308                                 mmap_mode=None)
    309
    310     def _open_pickle(self, file_handle):

/Users/ogrisel/code/joblib/joblib/numpy_pickle.pyc in __init__(self, filename, file_handle, mmap_mode)
    264         self._dirname = os.path.dirname(filename)
    265         self.mmap_mode = mmap_mode
--> 266         self.file_handle = self._open_pickle(file_handle)
    267         Unpickler.__init__(self, self.file_handle)
    268         try:

/Users/ogrisel/code/joblib/joblib/numpy_pickle.pyc in _open_pickle(self, file_handle)
    309
    310     def _open_pickle(self, file_handle):
--> 311         return BytesIO(read_zfile(file_handle))
    312
    313

/Users/ogrisel/code/joblib/joblib/numpy_pickle.pyc in read_zfile(file_handle)
     63     length = file_handle.read(len(_ZFILE_PREFIX) + _MAX_LEN)
     64     length = length[len(_ZFILE_PREFIX):]
---> 65     length = int(length, 16)
     66     # We use the known length of the data to tell Zlib the size of the
     67     # buffer to allocate.

ValueError: invalid literal for int() with base 16: '0x1900a2           x'
This should be fixed upstream in joblib but it's good to track the issue here as well for discoverability.