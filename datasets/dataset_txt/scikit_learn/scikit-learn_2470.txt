guoqinlong commented on Jan 16, 2017 •
edited
Description
In this page, there is a sentence:
If smooth_idf=True (the default), the constant “1” is added to the numerator and denominator of the idf as if an extra document was seen containing every term in the collection exactly once, which prevents zero divisions: idf(d, t) = log [ (1 + n) / 1 + df(d, t) ] + 1.
I think there are two problems here:
According to the description mentioned above, there should be a pair of brackets in "1 + df(d, t)", i.e. the formula of idf(d, t) should be idf(d, t) = log [ (1 + n) / (1 + df(d, t)) ] + 1.
The tf-idf result is not as expeted as the formula, an example is below. Is there anything that I missed in the formula?
Steps/Code to Reproduce
from sklearn.feature_extraction.text import TfidfTransformer

if __name__ == '__main__':

    transformer = TfidfTransformer()
    counts = [[1, 1],
              [1, 0]]
    tfidf = transformer.fit_transform(counts)
    print tfidf.toarray()
Expected Results
[[ 0.5 0.70273255]
[ 1. 0. ]]
0.5 = float(1) / 2 * (numpy.log(float(2 + 1) / (2 + 1)) + 1)
0.70273255 = float(1) / 2 * (numpy.log(float(2 + 1) / (1 + 1)) + 1)
[[ 1. 1.40546511]
[ 1. 0. ]]
1 = 1 * (numpy.log(float(2 + 1) / (2 + 1)) + 1)
1.40546511 = 1 * (numpy.log(float(2 + 1) / (1 + 1)) + 1)
Actual Results
[[ 0.57973867 0.81480247]
[ 1. 0. ]]
Versions
C:\Anaconda\python.exe E:/Project/NLP/Sentiment/Classification-Experiment/src/sklearn_version.py
Windows-8-6.2.9200
('Python', '2.7.9 |Anaconda 2.2.0 (64-bit)| (default, Dec 18 2014, 16:57:52) [MSC v.1500 64 bit (AMD64)]')
('NumPy', '1.11.2')
('SciPy', '0.18.1')
('Scikit-Learn', '0.18')