silentsnooc commented on Jun 18, 2018 â€¢
edited
Description
Using MultiLabelBinarizer is not working as expected when used in a pipeline.
Steps/Code to Reproduce
Example:
from sklearn.pipeline import Pipeline
from sklearn.preprocessing import MultiLabelBinarizer
from sklearn.feature_extraction.text import CountVectorizer

labels = [['A', 'B'], ['A']]

# Works
CountVectorizer(tokenizer=lambda x: x, lowercase=False).fit_transform(labels)
# Works
Pipeline([('ct_vec', CountVectorizer(tokenizer=lambda x: x, lowercase=False))]).fit_transform(labels)
# Works
MultiLabelBinarizer().fit_transform(labels)
# Not working!
Pipeline([('mlb', MultiLabelBinarizer())]).fit_transform(labels)
If the code is too long, feel free to put it in a public gist and link
it in the issue: https://gist.github.com
Expected Results
In all cases, there should be a (sparse) matrix
[[1,1],
 [1,0]]
Actual Results
The call
Pipeline([('mlb', MultiLabelBinarizer())]).fit_transform(labels)
throws
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-11-4823ecb8ee72> in <module>()
     13 MultiLabelBinarizer().fit_transform(labels)
     14 # Not working!
---> 15 Pipeline([('mlb', MultiLabelBinarizer())]).fit_transform(labels)

~/miniconda3/lib/python3.6/site-packages/sklearn/pipeline.py in fit_transform(self, X, y, **fit_params)
    281         Xt, fit_params = self._fit(X, y, **fit_params)
    282         if hasattr(last_step, 'fit_transform'):
--> 283             return last_step.fit_transform(Xt, y, **fit_params)
    284         elif last_step is None:
    285             return Xt

TypeError: fit_transform() takes 2 positional arguments but 3 were given
Versions
Linux-4.4.0-128-generic-x86_64-with-debian-stretch-sid
Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19)
[GCC 7.2.0]
NumPy 1.14.3
SciPy 1.1.0
Scikit-Learn 0.19.1