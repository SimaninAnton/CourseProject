Contributor
buma commented on Aug 6, 2012
I am trying to create a Naive bayes classifier but If I cross validate with 5 folds it segfaults.
I have finally succeeded in creating example that also segfaults.
The problem is that program segfaults if I change cv to 5 in here:
scores = cross_val_score(classifier, X_train, y_train, cv=3, n_jobs=1)
primer.py
X_all.pickle
y.pickle
Valgrind dump:
==32594== Warning: set address range perms: large range [0x18851018, 0x28851038) (noaccess)
==32594== Warning: set address range perms: large range [0x8c4b028, 0x1c3252a0) (undefined)
==32594== Warning: set address range perms: large range [0x1c326028, 0x2fa002b1) (undefined)
==32594== Warning: set address range perms: large range [0x1c326018, 0x2fa002c1) (noaccess)
==32594== Warning: set address range perms: large range [0x8c4b018, 0x1c3252b0) (noaccess)
==32594== Warning: set address range perms: large range [0x8c4b028, 0x2726235c) (undefined)
==32594== Warning: set address range perms: large range [0x76b9f028, 0x951b636d) (undefined)
==32594== Warning: set address range perms: large range [0x76b9f018, 0x951b637d) (noaccess)
==32594== Warning: set address range perms: large range [0x8c4b018, 0x2726236c) (noaccess)
==32594== Warning: set address range perms: large range [0x38d41018, 0x58d41038) (noaccess)
Loaded X
Loaded y
SPlit
==32594== Warning: set address range perms: large range [0x7389b028, 0x8eed5318) (undefined)
==32594== Invalid read of size 4
==32594== at 0x4F3960B: trivial_three_operand_loop (in /home/mabu/kaggle/zascikit/lib/python2.7/site-packages/numpy/core/umath.so)
==32594== by 0x4F4EEF7: PyUFunc_GenericFunction (in /home/mabu/kaggle/zascikit/lib/python2.7/site-packages/numpy/core/umath.so)
==32594== by 0x4F4F1BA: ufunc_generic_call (in /home/mabu/kaggle/zascikit/lib/python2.7/site-packages/numpy/core/umath.so)
==32594== by 0x409025F: PyObject_Call (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x4090347: call_function_tail (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x409045F: _PyObject_CallFunction_SizeT (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x4E67B80: PyArray_GenericBinaryFunction (in /home/mabu/kaggle/zascikit/lib/python2.7/site-packages/numpy/core/multiarray.so)
==32594== by 0x408BE25: binary_op1 (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x408DC35: PyNumber_Add (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x4125781: PyEval_EvalFrameEx (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x412A03C: PyEval_EvalCodeEx (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x4128233: PyEval_EvalFrameEx (in /usr/lib/libpython2.7.so.1.0)
==32594== Address 0x1c is not stack'd, malloc'd or (recently) free'd
==32594==
==32594==
==32594== Process terminating with default action of signal 11 (SIGSEGV)
==32594== Access not within mapped region at address 0x1C
==32594== at 0x4F3960B: trivial_three_operand_loop (in /home/mabu/kaggle/zascikit/lib/python2.7/site-packages/numpy/core/umath.so)
==32594== by 0x4F4EEF7: PyUFunc_GenericFunction (in /home/mabu/kaggle/zascikit/lib/python2.7/site-packages/numpy/core/umath.so)
==32594== by 0x4F4F1BA: ufunc_generic_call (in /home/mabu/kaggle/zascikit/lib/python2.7/site-packages/numpy/core/umath.so)
==32594== by 0x409025F: PyObject_Call (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x4090347: call_function_tail (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x409045F: _PyObject_CallFunction_SizeT (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x4E67B80: PyArray_GenericBinaryFunction (in /home/mabu/kaggle/zascikit/lib/python2.7/site-packages/numpy/core/multiarray.so)
==32594== by 0x408BE25: binary_op1 (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x408DC35: PyNumber_Add (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x4125781: PyEval_EvalFrameEx (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x412A03C: PyEval_EvalCodeEx (in /usr/lib/libpython2.7.so.1.0)
==32594== by 0x4128233: PyEval_EvalFrameEx (in /usr/lib/libpython2.7.so.1.0)
This is on yesterday's master scikit, scipy, numpy.