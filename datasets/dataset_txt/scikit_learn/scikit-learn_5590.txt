Contributor
tkamishima commented on Jul 16, 2011
When linear_model.LogisticRegression is fit by data whose classes are the same, the resultant classifier doesn't return legal probabilities.
If a training set consists of two classes, a predict_proba method returns legal probabilities::
import numpy as np
from scikits.learn.linear_model import LogisticRegression
X = np.arange(12, dtype=np.float).reshape(3,4)
y = np.array([1,0,1]).astype(np.float)
clf = LogisticRegression()
clf.fit(X, y)
print clf.predict_proba(X)
I got legal probabilities::
[[ 0.39416015  0.60583985]
 [ 0.35283566  0.64716434]
 [ 0.31360104  0.68639896]]
However, if y contains only zeros::
y = np.zeros(3)
clf.fit(X, y)
print clf.predict_proba(X)
We got::
[[ 0.88033282]
 [ 0.99514032]
 [ 0.99982459]]
The sum of each row is not one. This violates the restriction of probabilities. In this case, isn't better to add some columns?