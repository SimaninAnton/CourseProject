Member
arjoly commented on Jul 31, 2014
Here the script to reproduce.
In [1]: from sklearn.ensemble import GradientBoostingClassifier

In [2]: clf = GradientBoostingClassifier(warm_start=True)

In [3]: clf.fit([[0, 1], [2, 3]], [0, 1])
Out[3]: 
GradientBoostingClassifier(init=None, learning_rate=0.1, loss='deviance',
              max_depth=3, max_features=None, max_leaf_nodes=None,
              min_samples_leaf=1, min_samples_split=2,
              min_weight_fraction_leaf=0.0, n_estimators=100,
              random_state=None, subsample=1.0, verbose=0, warm_start=True)

In [4]: clf.fit([[0, 1], [2, 3]], [0, 1])
---------------------------------------------------------------------------
UnboundLocalError                         Traceback (most recent call last)
<ipython-input-4-03e3eff789e2> in <module>()
----> 1 clf.fit([[0, 1], [2, 3]], [0, 1])

/Users/ajoly/git/scikit-learn/sklearn/ensemble/gradient_boosting.pyc in fit(self, X, y, monitor)
   1144         self.classes_, y = np.unique(y, return_inverse=True)
   1145         self.n_classes_ = len(self.classes_)
-> 1146         return super(GradientBoostingClassifier, self).fit(X, y, monitor)
   1147 
   1148     def _score_to_proba(self, score):

/Users/ajoly/git/scikit-learn/sklearn/ensemble/gradient_boosting.pyc in fit(self, X, y, monitor)
    783         # fit the boosting stages
    784         n_stages = self._fit_stages(X, y, y_pred, random_state,
--> 785                                     begin_at_stage, monitor)
    786         # change shape of arrays after fit (early-stopping or additional ests)
    787         if n_stages != self.estimators_.shape[0]:

/Users/ajoly/git/scikit-learn/sklearn/ensemble/gradient_boosting.pyc in _fit_stages(self, X, y, y_pred, random_state, begin_at_stage, monitor)
    855                 if early_stopping:
    856                     break
--> 857         return i + 1
    858 
    859     def _make_estimator(self, append=True):

UnboundLocalError: local variable 'i' referenced before assignment
I would have expected a warning or nothing as in the random forest module. (ping @pprett)