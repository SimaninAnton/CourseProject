Member
jnothman commented on Aug 7, 2019
from sklearn.feature_extraction.text import CountVectorizer

# This should raise a warning because stop_words is not used when analyzer != 'word'
CountVectorizer(analyzer='char_wb', stop_words='english').fit(X)
# This should raise a warning because tokenizer is not used when analyzer != 'word'
CountVectorizer(analyzer='char_wb', tokenizer=lambda s: s.split()).fit(X)
# This should raise a warning because token_pattern is not used when tokenizer is not None
CountVectorizer(tokenizer=lambda s: s.split(), token_pattern=r'\w+').fit(X)
Similarly warn when:
preprocessor != None and callable(analyzer)
ngram_range != None and callable(analyzer)
...
The warning would be unnecessary if the callable analyzer happens to have been constructed with access to the vectorizer's attributes... but I think we're better off protecting the users from themselves, as it is unclear which parameters are unused given other parameters.
üëç 1