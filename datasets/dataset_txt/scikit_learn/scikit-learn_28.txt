zachmayer commented 23 days ago â€¢
edited
This request is a generalization of #15873.
sklearn.compose.make_column_selector already supports selecting number and category variables, which is great for pipelines with steps like StandardScaler or OneHotEncoder.
However, sometimes you want more flexibility when choosing columns. 2 examples:
Routing categorical features to a OneHotEncoder vs an OrdinalEncoder based on cardinality (see #15873).
Using heuristics to detect text columns in np.object columns, and routing text columns to TfidfVectorizer and categorical columns to OneHotEncoder.
Using heuristics to detect categorical columns in np.int columns, and route category columns to OneHotEncoder and numeric columns to StandardScalar
I can imagine many other scenarios where you want a flexible way to detect certain kind of columns and route them to specific parts of the pipeline.
I'd like to propose adding another argument to make_column_selector: selector_function (or something with a similar name). This function will be applied to each column in the pandas dataframe, and columns where the selector returns True will be used to make the column selector.
If this seems like a good idea, I am happy to make PR.