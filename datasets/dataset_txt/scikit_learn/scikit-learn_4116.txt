Member
amueller commented on Dec 12, 2014
I'd like to make SGDClassifier and related models shuffle the input data by default. That will make the model much more robust and make it work out of the box in many more cases, and will incur basically no cost.
Actually it should be enough to shuffle the dataset once in the beginning to get good results.
So I was thinking about adding an option shuffle='once' and making this the default.
Questions:
Do you think shuffling by default is a good idea?
Do you think adding another option for shuffling only once makes sense?
If so, how should it be implemented?
I think the main downside of shuffling by default is that results are not reproducible by default. That is not so nice. Fixing the default seed would be an option but we don't usually do that.
For the implementation strategy, I ran some benchmarks here. The options I tried are "don't shuffle", "shuffle at each iteration", "shuffle once in the beginning using a data copy" and "shuffle once in the beginning by using the dataset shuffle function".
It seems for more iterations doing a copy pays off, but the difference to shuffling at every iteration is pretty small, so I'm not sure that is enough to warrant a new parameter.