Contributor
mfeurer commented on Feb 22, 2018 â€¢
edited
Description
When building a pipeline which contains an imputer and a one hot encoder with an array marking the categorical features, the imputer can remove columns (in case they're completely missing) which makes the one hot encoder crash.
Steps/Code to Reproduce
import numpy as np

import sklearn.pipeline
import sklearn.preprocessing

X = [[np.NaN, 1], [np.NaN, np.NaN]]

imp = sklearn.preprocessing.Imputer()
ohe = sklearn.preprocessing.OneHotEncoder(categorical_features=[False, True])
pipeline = sklearn.pipeline.Pipeline([('imp', imp), ('ohe', ohe)])

print(pipeline.fit_transform(X))
Expected Results
Not 100% sure, but either no exception or an argument to the imputer which configures the behavior in such cases (similar to one hot encoding where one can specify how to handle unknowns).
Actual Results
Traceback (most recent call last):
  File "/home/feurerm/projects/[...]/auto-sklearn/bug.py", line 12, in <module>
    print(pipeline.fit_transform(X))
  File "/home/feurerm/miniconda3_4.3.30/envs/[...]/lib/python3.6/site-packages/sklearn/pipeline.py", line 283, in fit_transform
    return last_step.fit_transform(Xt, y, **fit_params)
  File "/home/feurerm/miniconda3_4.3.30/envs/[...]/lib/python3.6/site-packages/sklearn/preprocessing/data.py", line 2019, in fit_transform
    self.categorical_features, copy=True)
  File "/home/feurerm/miniconda3_4.3.30/envs/[...]/lib/python3.6/site-packages/sklearn/preprocessing/data.py", line 1820, in _transform_selected
    sel[np.asarray(selected)] = True
IndexError: boolean index did not match indexed array along dimension 0; dimension is 1 but corresponding boolean dimension is 2
Versions
Linux-4.4.0-112-generic-x86_64-with-debian-stretch-sid
Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19) 
[GCC 7.2.0]
NumPy 1.14.0
SciPy 1.0.0
Scikit-Learn 0.19.1