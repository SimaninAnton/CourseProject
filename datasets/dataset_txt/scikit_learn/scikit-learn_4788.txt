Contributor
erg commented on Jun 25, 2013
+1 for letting all classifiers trivially fit on a dataset with a single class.
In [25]: from sklearn.tree import DecisionTreeClassifier

In [26]: clf = DecisionTreeClassifier()

In [27]: clf.fit([[1]], [0])
Out[27]: 
DecisionTreeClassifier(compute_importances=False, criterion='gini',
            max_depth=None, max_features=None, min_density=0.1,
            min_samples_leaf=1, min_samples_split=2, random_state=None)



In [28]: from sklearn.linear_model import SGDClassifier

In [29]: clf = SGDClassifier()

In [30]: clf.fit([[1]], [0])
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-30-d939e271ffd7> in <module>()
----> 1 clf.fit([[1]], [0])

/usr/lib/python2.7/site-packages/sklearn/linear_model/stochastic_gradient.pyc in fit(self, X, y, coef_init, intercept_init, class_weight, sample_weight)
    522                          coef_init=coef_init, intercept_init=intercept_init,
    523                          class_weight=class_weight,
--> 524                          sample_weight=sample_weight)
    525 
    526 

/usr/lib/python2.7/site-packages/sklearn/linear_model/stochastic_gradient.pyc in _fit(self, X, y, alpha, C, loss, learning_rate, coef_init, intercept_init, class_weight, sample_weight)
    421 
    422         self._partial_fit(X, y, alpha, C, loss, learning_rate, self.n_iter,
--> 423                           classes, sample_weight, coef_init, intercept_init)
    424 
    425         # fitting is over, we can now transform coef_ to fortran order

/usr/lib/python2.7/site-packages/sklearn/linear_model/stochastic_gradient.pyc in _partial_fit(self, X, y, alpha, C, loss, learning_rate, n_iter, classes, sample_weight, coef_init, intercept_init)
    380                              sample_weight=sample_weight, n_iter=n_iter)
    381         else:
--> 382             raise ValueError("The number of class labels must be "
    383                              "greater than one.")
    384 

ValueError: The number of class labels must be greater than one.




In [31]: from sklearn.svm import SVC

In [32]: clf = SVC()

In [33]: clf.fit([[1]], [0])
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-33-d939e271ffd7> in <module>()
----> 1 clf.fit([[1]], [0])

/usr/lib/python2.7/site-packages/sklearn/svm/base.pyc in fit(self, X, y, sample_weight)
    132 
    133         X = atleast2d_or_csr(X, dtype=np.float64, order='C')
--> 134         y = self._validate_targets(y)
    135 
    136         sample_weight = np.asarray([]

/usr/lib/python2.7/site-packages/sklearn/svm/base.pyc in _validate_targets(self, y)
    440             raise ValueError(
    441                 "The number of classes has to be greater than one; got %d"
--> 442                 % len(cls))
    443 
    444         self.classes_ = cls

ValueError: The number of classes has to be greater than one; got 1