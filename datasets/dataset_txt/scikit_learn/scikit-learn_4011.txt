ghost commented on Feb 20, 2015
Hi,
scikit-learn IsotonicRegression class seems to be malfunctioning in its score method.
I am feeding it perfectly fine floating number arrays, the fit method works without raising any exceptions, and then the score method raises the following errors:
.../anaconda/lib/python2.7/site-packages/scipy/interpolate/interpolate.py:445: RuntimeWarning: invalid value encountered in true_divide
  slope = (y_hi - y_lo) / (x_hi - x_lo)[:, None]
Traceback (most recent call last):
  File "iostonic_error.py", line 20, in <module>
    print model.score(x_1d,y_1d)
  File ".../anaconda/lib/python2.7/site-packages/sklearn/base.py", line 324, in score
    return r2_score(y, self.predict(X), sample_weight=sample_weight)
  File ".../anaconda/lib/python2.7/site-packages/sklearn/metrics/metrics.py", line 2324, in r2_score
    y_type, y_true, y_pred = _check_reg_targets(y_true, y_pred)
  File ".../anaconda/lib/python2.7/site-packages/sklearn/metrics/metrics.py", line 65, in _check_reg_targets
    y_true, y_pred = check_arrays(y_true, y_pred)
  File ".../anaconda/lib/python2.7/site-packages/sklearn/utils/validation.py", line 283, in check_arrays
    _assert_all_finite(array)
  File ".../anaconda/lib/python2.7/site-packages/sklearn/utils/validation.py", line 43, in _assert_all_finite
    " or a value too large for %r." % X.dtype)
ValueError: Input contains NaN, infinity or a value too large for dtype('float64').
Here is some minimal example code to recreate this bug:
from sklearn.isotonic import IsotonicRegression

x_1d = [ 3.97948718,4.,2.,2.97948718,4.48974359,4.46923077,
  2.,3.46923077,4.46923077,4.46923077,3.97948718,3.97948718,
  5.46923077,3.,2.48974359]
y_1d = [ 19.,9.,27.,27.,12.,17.,34.,30.,23.,25.,18.,21.,11.,24.,33.]


model = IsotonicRegression(y_min=0, increasing=False, out_of_bounds='clip')

model.fit(x_1d,y_1d)

print model.score(x_1d,y_1d) 