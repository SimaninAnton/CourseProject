Contributor
alexitkes commented on Jul 28, 2019 â€¢
edited by glemaitre
In case of a callable object given as refit_ parameter to GridSearchCV constructor, the following things happen.
In[2]:
(X_train, X_test, y_train, y_test) = train_test_split(X, y, random_state=0, stratify=y, test_size=0.1)
model = GradientBoostingClassifier(random_state=0)
grid = GridSearchCV(
    model,
    param_grid=[{'n_estimators': [50, 100, 150]}],
    cv=10,
    refit=_refit_cb,
    scoring='roc_auc',
    n_jobs=-1)
grid.fit(X_train, y_train)
In[3]:
pp.pprint(grid.best_score_)
Out[3]:
AttributeError                            Traceback (most recent call last)
<ipython-input-18-4d8e6b6c1f16> in <module>
      1 # There is no best score if refit is callable
----> 2 pp.pprint(grid.best_score_)
AttributeError: 'GridSearchCV' object has no attribute 'best_score_'
In[4]:
pp.pprint(grid.best_params_)
Out[4]:
{'n_estimators': 150}
In[5]:
pp.pprint(grid.best_estimator_)
# All OK
So the best_estimator_ and best_parameters_ attributes are set properly while there is no best_score_. That seems a bit unexpected for me. May it be better to return also the best score for callable refit, or document this behavior more clear?