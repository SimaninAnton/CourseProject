s-lopez commented on Jul 12, 2019
Description
If I create a OneHotEncoder instance defining the categories manually and then try to transform data directly (skipping the fitting step), I get a NotFittedError.
Steps/Code to Reproduce
import numpy as np
from sklearn.preprocessing import OneHotEncoder
categories = ['a', 'b', 'c']
ohe = OneHotEncoder(categories=categories)
new = ohe.transform(['a', 'c', 'b', 'b'])
Expected Results
No error, since the categories were defined manually. This is the behaviour that I expected from the documentation:
By default, the encoder derives the categories based on the unique values in each feature. Alternatively, you can also specify the categories manually.
Actual Results
NotFittedError Traceback (most recent call last)
in
3 categories = ['a', 'b', 'c']
4 ohe = OneHotEncoder(categories=categories)
----> 5 new = ohe.transform(['a', 'c', 'b', 'b'])
~\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\preprocessing_encoders.py in transform(self, X)
724 Transformed input.
725 """
--> 726 check_is_fitted(self, 'categories_')
727 if self._legacy_mode:
728 return _transform_selected(X, self._legacy_transform, self.dtype,
~\AppData\Local\Continuum\anaconda3\lib\site-packages\sklearn\utils\validation.py in check_is_fitted(estimator, attributes, msg, all_or_any)
912
913 if not all_or_any([hasattr(estimator, attr) for attr in attributes]):
--> 914 raise NotFittedError(msg % {'name': type(estimator).name})
915
916
NotFittedError: This OneHotEncoder instance is not fitted yet. Call 'fit' with appropriate arguments before using this method.
Versions
Windows-10-10.0.17134-SP0
Python 3.7.3 (default, Apr 24 2019, 15:29:51) [MSC v.1915 64 bit (AMD64)]
NumPy 1.16.4
SciPy 1.2.1
Scikit-Learn 0.21.2