nicoTrombon commented on Mar 10, 2015
Is there a test reproducing the svm.svr.predict(X)? I tried to reproduce the function and am getting different results from the ones expected.
from sklearn import svm
import math
import numpy as np

X = [[0, 0], [1, 1], [1,2], [1,2]]
y = [0, 1, 1, 1]
clf = svm.SVR(gamma=1e-3)
clf.fit(X, y)
Xtest = [0,0]
print 'clf.decision_function:'
print clf.decision_function(Xtest)

sup_vecs = clf.support_vectors_
dual_coefs = clf.dual_coef_
gamma = clf.gamma
intercept = clf.intercept_

diff = sup_vecs - Xtest

# Vectorized method for reproduction
norm2 = np.array([np.linalg.norm(diff[n, :]) for n in range(np.shape(sup_vecs)[0])])
dec_func_vec = -1 * (dual_coefs.dot(np.exp(-gamma*(norm2**2))) - intercept)
print 'decision_function replication:'
print dec_func_vec
The results I'm getting for this example are:
clf.decision_function:
[[ 0.89500898]]
decision_function replication:
[ 0.89900498]
The following threads show examples for replication for SVM's used for Classification:
http://stackoverflow.com/questions/28503932/calculating-decision-function-of-svm-manually?noredirect=1#comment45487831_28503932
http://stackoverflow.com/questions/20113206/scikit-learn-svc-decision-function-and-predict/27752709#27752709
I tried with both (adapting what I think is necessary to move from Classification to Regression, but still can't reproduce it.
Is there a test showing the replication?
Thank you