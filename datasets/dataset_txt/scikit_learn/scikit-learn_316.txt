simetenn commented on Aug 23, 2019
Description
pairwise_distance with metric="euclidean" returns the wrong result for the distance between two large, but close points.
I suspect the difference is due differences in the sklearn implementation and the scipy implementation. However, this might be because sklearn uses a faster, but less precise method, and therefore this result is as expected?
Steps/Code to Reproduce
import numpy as np
from sklearn.metrics import pairwise_distances

a = 50000
b = a + 0.001

positions = np.array([[a], [b]])

euclidean_distance = pairwise_distances(positions, metric="euclidean")
minkowski_distance =  pairwise_distances(positions, metric="minkowski", p=2)

print(f"Euclidean distance:\n{euclidean_distance}")
print(f"Minkowski distance:\n{minkowski_distance}")
Expected Results
The expected result is to get a distance of 0.001.
Actual Results
I get the following output:
Euclidean distance:
[[0.         0.00069053]
 [0.00069053 0.        ]]
Minkowski distance:
[[0.    0.001]
 [0.001 0.   ]]
Versions
System:
    python: 3.6.9 |Anaconda, Inc.| (default, Jul 30 2019, 19:07:31)  [GCC 7.3.0]
executable: /home/simen/src/miniconda3/envs/sklearn/bin/python
   machine: Linux-4.18.0-25-generic-x86_64-with-debian-buster-sid

Python deps:
       pip: 19.2.2
setuptools: 41.0.1
   sklearn: 0.21.3
     numpy: 1.17.0
     scipy: 1.3.1
    Cython: None
    pandas: None