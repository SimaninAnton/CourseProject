Member
jeremiedbb commented on Jul 12, 2018
The current implementation of the SimpleImputer can't deal with zeros stored explicitly in sparse matrix.
Even when stored explicitly, we'd expect that all zeros are treating equally, right ?
See for example the code below:
import numpy as np
from scipy import sparse
from sklearn.impute import SimpleImputer

X = np.array([[0,0,0],[0,0,0],[1,1,1]])
X = sparse.csc_matrix(X)
X[0] = 0    # explicit zeros in first row

imp = SimpleImputer(missing_values=0, strategy='mean')
imp.fit_transform(X)

>>> array([[0.5, 0.5, 0.5],
           [0.5, 0.5, 0.5],
           [1. , 1. , 1. ]])
Whereas the expected result would be
>>> array([[1. , 1. , 1. ],
           [1. , 1. , 1. ],
           [1. , 1. , 1. ]])