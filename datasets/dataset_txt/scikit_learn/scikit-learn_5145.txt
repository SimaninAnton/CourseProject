Contributor
mbatchkarov commented on Nov 1, 2012
The confusion matrix method outputs zero matrix when the labels are string. To replicate, run
print confusion_matrix(['1', '0', '0', '1'], ['1', '1', '0', '0'])
And the output is:
[[0 0]
 [0 0]]
Running the same command with integer labels produces the expected output:
print confusion_matrix([1, 0, 0, 1], [1, 1, 0, 0])
[[1 1]
 [1 1]]
------------------------- UPDATE -------------------------
It appears I have two version of confusion_matrix--- one from sklearn and one from scikits.learn. I am not sure how the sklearn package appeared on my machine, I suspect it shipped with my python distribution (EPD). The bug reported above only occurs with the sklearn version. If I install scikit.learn 0.8.1 through pip and run
from scikits.learn.metrics import confusion_matrix
import numpy as np
print confusion_matrix(np.array([1, 0, 0, 1]), np.array([1, 1, 0, 0]))
I get the correct result
[[1 1]
 [1 1]]
The call requires me to convert the list explicitly to a numpy array, otherwise I get
print confusion_matrix([1, 0, 0, 1], [1, 1, 0, 0])
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
/<ipython-input-3-8a31087aae8f> in <module>()
----> 1 print confusion_matrix([1, 0, 0, 1], [1, 1, 0, 0])
/Library/Frameworks/EPD64.framework/Versions/7.2/lib/python2.7/site-packages/scikits/learn/metrics/metrics.pyc in     confusion_matrix(y_true, y_pred, labels)
 52     """
 53     if labels is None:
---> 54         labels = unique_labels(y_true, y_pred)
 55     else:
 56         labels = np.asarray(labels, dtype=np.int)

/Library/Frameworks/EPD64.framework/Versions/7.2/lib/python2.7/site-packages/scikits/learn/metrics/metrics.pyc in     unique_labels(*list_of_labels)
 22     """
 23     list_of_labels = [np.unique(labels[np.isfinite(labels)].ravel())
---> 24                       for labels in list_of_labels]
 25     list_of_labels = np.concatenate(list_of_labels)
 26     return np.unique(list_of_labels)

TypeError: only integer arrays with one element can be converted to an index
With string lists, I get
print confusion_matrix(['1', '0', '0', '1'], ['1', '1', '0', '0'])
---------------------------------------------------------------------------
NotImplementedError                       Traceback (most recent call last)
/<ipython-input-2-b1aa3286a9d3> in <module>()
----> 1 print confusion_matrix(['1', '0', '0', '1'], ['1', '1', '0', '0'])
/Library/Frameworks/EPD64.framework/Versions/7.2/lib/python2.7/site-packages/scikits/learn/metrics/metrics.pyc in         confusion_matrix(y_true, y_pred, labels)
 52     """
 53     if labels is None:
---> 54         labels = unique_labels(y_true, y_pred)
 55     else:
 56         labels = np.asarray(labels, dtype=np.int)
/Library/Frameworks/EPD64.framework/Versions/7.2/lib/python2.7/site-packages/scikits/learn/metrics/metrics.pyc in     unique_labels(*list_of_labels)
 22     """
 23     list_of_labels = [np.unique(labels[np.isfinite(labels)].ravel())
---> 24                       for labels in list_of_labels]
 25     list_of_labels = np.concatenate(list_of_labels)
 26     return np.unique(list_of_labels)

NotImplementedError: Not implemented for this type