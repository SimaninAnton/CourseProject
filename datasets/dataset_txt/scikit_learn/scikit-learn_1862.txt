zilion22 commented on Sep 27, 2017 ‚Ä¢
edited by TomDLT
Description
Steps/Code to Reproduce
Example:
from sklearn import preprocessing
from sklearn.metrics import classification_report

y_desc=np.array(['a', 'b', 'c'])

labels=preprocessing.LabelEncoder()
y=labels.fit_transform(y_desc)

y_test=np.array([0, 2])
y_pred=np.array([0, 2])

print(classification_report(y_test, y_pred))
print(classification_report(y_test, y_pred, target_names=labels.classes_))
Expected Results
precision recall f1-score support
      0       1.00      1.00      1.00         1
      2       1.00      1.00      1.00         1
avg / total 1.00 1.00 1.00 2
         precision    recall  f1-score   support

      a       1.00      1.00      1.00         1
      c       1.00      1.00      1.00         1
avg / total 1.00 1.00 1.00 2
Actual Results
precision recall f1-score support
      0       1.00      1.00      1.00         1
      2       1.00      1.00      1.00         1
avg / total 1.00 1.00 1.00 2
         precision    recall  f1-score   support

      a       1.00      1.00      1.00         1
      b       1.00      1.00      1.00         1
avg / total 1.00 1.00 1.00 2
Versions
Linux-4.4.0-93-generic-x86_64-with-Ubuntu-16.04-xenial
Python 2.7.12 (default, Nov 19 2016, 06:48:10)
[GCC 5.4.0 20160609]
NumPy 1.13.1
SciPy 0.19.1
Scikit-Learn 0.19.0
üëç 1