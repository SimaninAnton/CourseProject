Member
jakevdp commented on Sep 3, 2015
I was trying to figure out whether I wanted to use super() or not in one of my projects, and decided to see how scikit-learn does it. I found the following:
$ cd sklearn/
$ git grep "\.__init__(self" -- `git ls-files | grep -v "^\(utils\|externals\)"` | wc
      10      31     914
$ git grep "super(.*, self).__init__" -- `git ls-files | grep -v "^\(utils\|externals\)"` | wc
      71     222    5463
That is, super(Base, self).__init__ is used in 70 places in scikit-learn's core, while Base.__init__(self) is used in ten cases.
There seems to be broad disagreement about whether super() is harmful or, well, super, but there is agreement on the fact that whichever pattern you use, it should be used consistently throughout individual projects.
Do we have a policy on this? Should the non-supers be changed to supers here?