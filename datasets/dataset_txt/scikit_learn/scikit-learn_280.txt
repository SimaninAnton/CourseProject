Member
amueller commented on Sep 4, 2019 â€¢
edited
import pandas as pd
from sklearn.impute import SimpleImputer

SimpleImputer().fit(pd.DataFrame({'a': ['b', 'c']}))
is not validated correctly:
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
~/checkout/scikit-learn/sklearn/impute/_base.py in _validate_input(self, X)
    198             X = check_array(X, accept_sparse='csc', dtype=dtype,
--> 199                             force_all_finite=force_all_finite, copy=self.copy)
    200         except ValueError as ve:

~/checkout/scikit-learn/sklearn/utils/validation.py in check_array(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, warn_on_dtype, estimator)
    496                 warnings.simplefilter('error', ComplexWarning)
--> 497                 array = np.asarray(array, dtype=dtype, order=order)
    498             except ComplexWarning:

~/miniconda3/lib/python3.7/site-packages/numpy/core/numeric.py in asarray(a, dtype, order)
    537     """
--> 538     return array(a, dtype, copy=False, order=order)
    539 

ValueError: could not convert string to float: 'b'

During handling of the above exception, another exception occurred:

AttributeError                            Traceback (most recent call last)
<ipython-input-6-f08c4f6715ce> in <module>
----> 1 SimpleImputer().fit(pd.DataFrame({'a': ['b', 'c']}))

~/checkout/scikit-learn/sklearn/impute/_base.py in fit(self, X, y)
    230         self : SimpleImputer
    231         """
--> 232         X = self._validate_input(X)
    233 
    234         # default fill_value is 0 for numerical input and "missing_value"

~/checkout/scikit-learn/sklearn/impute/_base.py in _validate_input(self, X)
    202                 raise ValueError("Cannot use {0} strategy with non-numeric "
    203                                  "data. Received datatype :{1}."
--> 204                                  "".format(self.strategy, X.dtype.kind))
    205             else:
    206                 raise ve

~/miniconda3/lib/python3.7/site-packages/pandas/core/generic.py in __getattr__(self, name)
   5065             if self._info_axis._can_hold_identifiers_and_holds_name(name):
   5066                 return self[name]
-> 5067             return object.__getattribute__(self, name)
   5068 
   5069     def __setattr__(self, name, value):

AttributeError: 'DataFrame' object has no attribute 'dtype'