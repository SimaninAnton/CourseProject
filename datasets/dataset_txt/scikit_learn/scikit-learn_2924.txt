williamsmj commented on Jul 9, 2016
Description
No module named 'sklearn.exceptions'
Steps/Code to Reproduce
Tried on both Linux and OS X, and with both virtualenv and anaconda:
pip install scikit-learn (or pip install --no-use-wheel scikit-learn, or conda install scikit-learn), then from sklearn.exceptions import NotFittedError
Expected Results
sklearn.exceptions is imported, per e.g. http://scikit-learn.org/dev/modules/generated/sklearn.exceptions.NotFittedError.html
Actual Results
---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
<ipython-input-2-098ac4f586a2> in <module>()
----> 1 from sklearn.exceptions import NotFittedError

ImportError: No module named 'sklearn.exceptions'
Note that sklearn.__file__ points to a directory containing a scikit-learn installation that, as far as I can tell, works in all other ways. But exceptions.py is missing:
>>> import sklearn
>>> sklearn.__file__
'/home/user/directory/venv/lib/python3.4/site-packages/sklearn/__init__.py'
$ ls /home/user/directory/venv/lib/python3.4/site-packages/sklearn/
base.py                   feature_selection/         naive_bayes.py
_build_utils.py           gaussian_process/          neighbors/
calibration.py            grid_search.py             neural_network/
__check_build/            __init__.py                pipeline.py
cluster/                  _isotonic.cpython-34m.so*  preprocessing/
covariance/               isotonic.py                __pycache__/
cross_decomposition/      kernel_approximation.py    qda.py
cross_validation.py       kernel_ridge.py            random_projection.py
datasets/                 lda.py                     semi_supervised/
decomposition/            learning_curve.py          setup.py
discriminant_analysis.py  linear_model/              svm/
dummy.py                  manifold/                  tests/
ensemble/                 metrics/                   tree/
externals/                mixture/                   utils/
feature_extraction/       multiclass.py
Versions
Have tried this on several platforms (including python 2.7 and python 3.5), but here's an example:
In [3]: import sys; print("Python", sys.version)
Python 3.4.3 (default, Mar 26 2015, 22:03:40)
[GCC 4.9.2]

In [4]: import numpy; print("NumPy", numpy.__version__)
NumPy 1.11.0

In [5]: import scipy; print("SciPy", scipy.__version__)
SciPy 0.17.1

In [6]: import sklearn; print("Scikit-Learn", sklearn.__version__)
Scikit-Learn 0.17.1