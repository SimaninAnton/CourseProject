srmcc commented on Oct 29, 2016
Description
I'm trying to understand the numerical instability in the code that causes the solution to deviate from least squares when the penalty coefficient alpha=0. The issue is mentioned in passing in the documentation but not where it fails. I have an example that fails to give the least squares solution on only one out of five components. I'm having trouble finding the source of the bad behavior in the code. Anyone have any ideas?
I have also posted to:
http://stackoverflow.com/questions/40228021/sklearn-lassolars-solution-not-least-squares-when-alpha-0
Steps/Code to Reproduce
from sklearn import linear_model
import numpy as np

y= np.array([ -6.45006793,  -3.51251449,  -8.52445396,   6.12277822, -19.42109366])
x=np.array([[ 0.47299829,  0.        ,  0.        ,  0.        ,  0.        ],
   [ 0.08239882,  0.85784863,  0.        ,  0.        ,  0.        ],
   [ 0.30114139, -0.07501577,  0.80895216,  0.        ,  0.        ],
   [-0.01460346, -0.1015233 ,  0.0407278 ,  0.80338378,  0.        ],
   [-0.69363927,  0.06754067,  0.18064514, -0.0803561 ,  0.40427291]])
test=linear_model.LassoLars(0, fit_intercept=False)
test.fit(x.T, y)
test_compare=linear_model.LinearRegression(fit_intercept=False)
test_compare.fit(x.T, y)

test.coef_- test_compare.coef_
Expected Results
test.coef_- test_compare.coef_
>>> array([  4.26325641e-14,  -5.96744876e-15,  -3.57739709e-14,
     1.37667655e-14,   2.84217094e-14])
Actual Results
test.coef_- test_compare.coef_
>>> array([  4.26325641e-14,  -5.96744876e-15,  -3.57739709e+00,
     1.37667655e-14,   2.84217094e-14])
Versions
import platform; print(platform.platform())
Linux-3.13.0-92-generic-x86_64-with-debian-jessie-sid
import sys; print("Python", sys.version)
('Python', '2.7.11 |Continuum Analytics, Inc.| (default, Dec 6 2015, 18:08:32) \n[GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]')
import numpy; print("NumPy", numpy.version)
('NumPy', '1.8.0')
import scipy; print("SciPy", scipy.version)
('SciPy', '0.13.3')
import sklearn; print("Scikit-Learn", sklearn.version)
('Scikit-Learn', '0.16.1')