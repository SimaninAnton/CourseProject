cstich commented on Apr 2, 2015
Hi,
I am experiencing a somewhat weird behavior when using DBSCAN, the haversine metric and relatively small values for eps. In particular if I call DBSCAN with these arguments
1: db = DBSCAN(eps=1.567855942887398e-06, min_samples=3, metric='haversine', algorithm="ball_tree").fit(x)
I get smaller clusters than if I call DBSCAN with these arguments
2: db = DBSCAN(eps=1.567855942887398e-07, min_samples=3, metric='haversine', algorithm="ball_tree").fit(x)
If I map the clusters, they also look much more dispersed for the smaller eps value. This is a very counter-intuitive behavior, in my humble opinion. It almost feels like I hit a lower-bound for eps values, and indeed much bigger values for eps work as expected. For example, a much larger value for eps as in:
3: db = DBSCAN(eps=0.0001567855942887398 , min_samples=3, metric='haversine', algorithm="ball_tree").fit(x)
produces the results that I would expect. In particular, 3 produces much bigger clusters than 1.
Shouldn't the clusters become smaller if you decrease the eps parameter? Does anybody have any idea what's going on?
Also, I am on Ubuntu 12.04 with Python 2.7.3 and scikit-learn 0.15.2 and I am happy to triage some more if anybody points me where to start looking.