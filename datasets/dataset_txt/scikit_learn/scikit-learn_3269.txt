lejlot commented on Jan 13, 2016
There are two basic ways to get inertia value from fitted kmeans model, one is through .inertia_ field (computed generally by call to the cython module) and one is through .score (up to sign; computed purely in numpy). Unfortunately, these two methods lead to different results (originally spotted by member555 on SO), for the simplest case consider one dimensional uniform distribution with 2 clusters.
import numpy as np
from sklearn.cluster import KMeans

X = np.random.rand(1000000,1)
clf = KMeans(n_clusters=2).fit(X)
print clf.inertia_ 
print -clf.score(X)
which produces (for a particular run, but this is consistent issue)
20822.[...]
20820.[...]
tested on sklearn 0.16.1.
The difference seems to get larger for datasets where there is barely any structure (like uniform distribution), and dissapears for easily separable data (like two Gaussians)