Member
amueller commented on Mar 12, 2016
I just noticed that it's pretty non-trivial to pass check_estimator. I think being strict is good, but we should also provide examples on how to actually pass. It took me like 10 minutes to make a trivial classifier pass.
here it is for reference:
from sklearn.metrics import euclidean_distances
from sklearn.utils.multiclass import unique_labels
from sklearn.utils.validation import check_is_fitted, check_X_y, check_array

class MyClassifier(BaseEstimator, ClassifierMixin):
    def __init__(self, my_parameter="stuff"):
        self.my_parameter = my_parameter

    def fit(self, X, y):
        X, y = check_X_y(X, y)
        self.classes_ = unique_labels(y)
        self.X_ = X
        self.y_ = y
        return self

    def predict(self, X):
        check_is_fitted(self, ["X_", "y_"])
        X = check_array(X)
        closest = np.argmin(euclidean_distances(X, self.X_), axis=1)
        return self.y_[closest]
This is a 1-nn classifier. calling unique_labels is necessary to check if y is a floating array, and having a classes_ attribute is also required.
üëç 2