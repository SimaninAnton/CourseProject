dataspren commented on Dec 24, 2017 â€¢
edited
Description
When we fit our LOF to X and use _decision_function to generate contours with a mesh grid, the resulting level sets are different depending on the mesh bounds.
Steps/Code to Reproduce
Using the anomaly detection with LOF example with a loop:
import numpy as np
import matplotlib.pyplot as plt
from sklearn.neighbors import LocalOutlierFactor

np.random.seed(42)

# generate the training data
X = 0.3 * np.random.randn(100, 2)
X_outliers = np.random.uniform(low=-4, high=4, size=(20, 2))
X = np.r_[X + 2, X - 2, X_outliers]

# fit the model
clf = LocalOutlierFactor(n_neighbors=20)
y_pred = clf.fit_predict(X)
y_pred_outliers = y_pred[200:]

# plot the level sets of the decision function
fig, ax = plt.subplots(1, 2)
for index, bound in enumerate((4, 10)):
    xx, yy = np.meshgrid(np.linspace(-bound, bound, 50), np.linspace(-bound, bound, 50))
    Z = clf._decision_function(np.c_[xx.ravel(), yy.ravel()])
    Z = Z.reshape(xx.shape)

    ax[index].set_title("LOF (-{bound} to {bound})".format(bound=bound))
    ax[index].contourf(xx, yy, Z, cmap=plt.cm.Blues_r)

    a = ax[index].scatter(X[:200, 0], X[:200, 1], c='w', edgecolor='k', s=20)
    b = ax[index].scatter(X[200:, 0], X[200:, 1], c='r', edgecolor='k', s=20)
    ax[index].axis('scaled')
Expected Results
Since our LOF is fitted to X, shouldn't the level sets from _decision_function stay the same regardless of the mesh size?
Actual Results
The samples occupy fewer level sets as the mesh grows.
Versions
Linux-4.14.4-1-ARCH-x86_64-with-arch
Python 3.6.3 (default, Oct 24 2017, 14:48:20)
[GCC 7.2.0]
NumPy 1.13.3
SciPy 1.0.0
Scikit-Learn 0.19.1