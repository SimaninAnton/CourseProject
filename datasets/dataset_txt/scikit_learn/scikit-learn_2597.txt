Contributor
jbednar commented on Nov 9, 2016 â€¢
edited
DBSCAN has worked well for some applications of ours. However, according to the docstring for DBSCAN, the results are not deterministic:
The algorithm is non-deterministic, but the core samples will always belong to the same clusters (although the labels may be different). The non-determinism comes from deciding to which cluster a non-core sample belongs. A non-core sample can have a distance lower than eps to two core samples in different clusters. By the triangular inequality, those two core samples must be more distant than eps from each other, or they would be in the same cluster. The non-core sample is assigned to whichever cluster is generated first, where the order is determined randomly. Other than the ordering of the dataset, the algorithm is deterministic, making the results relatively stable between runs on the same data.
And indeed, I am seeing different results for different runs for the same dataset and parameter values. But as I'm not (deliberately) reordering the dataset, it would seem that DBSCAN must be doing so? I don't see anything in the DBSCAN source code that randomizes the input, but if there is something like that, can there please be a parameter to stop it? Having results that are not reproducible is a major problem in practice!