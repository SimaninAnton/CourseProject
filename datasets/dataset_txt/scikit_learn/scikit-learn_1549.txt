ahara commented on Feb 19, 2018
Description
LogisticRegression with warm_start and multinomial options fails when not all classes present in second fit call
Steps/Code to Reproduce
import numpy as np
from sklearn.linear_model import LogisticRegression

clf = LogisticRegression(random_state=0, solver='sag', multi_class='multinomial', warm_start=True)
clf.fit(np.array([[1., 1.], [2., 2.], [3., 3.]]), np.array([0, 1, 2]))
clf.fit(np.array([[1., 1.], [2., 2.]]), np.array([0, 2]))
Expected Results
Model updated without error and supports online learning.
Actual Results
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-44-200a41cfc795> in <module>()
      1 clf = LogisticRegression(random_state=0, solver='sag', multi_class='multinomial', warm_start=True)
      2 clf.fit(np.array([[1., 1.], [2., 2.], [3., 3.]]), np.array([0, 1, 2]))
----> 3 clf.fit(np.array([[1., 1.], [2., 2.]]), np.array([0, 1]))

/d0/nlpdata/jupyter/estimators_env/lib/python3.4/site-packages/sklearn/linear_model/logistic.py in fit(self, X, y, sample_weight)
   1239                       max_squared_sum=max_squared_sum,
   1240                       sample_weight=sample_weight)
-> 1241             for (class_, warm_start_coef_) in zip(classes_, warm_start_coef))
   1242 
   1243         fold_coefs_, _, n_iter_ = zip(*fold_coefs_)

/d0/nlpdata/jupyter/estimators_env/lib/python3.4/site-packages/sklearn/externals/joblib/parallel.py in __call__(self, iterable)
    756             # was dispatched. In particular this covers the edge
    757             # case of Parallel used with an exhausted iterator.
--> 758             while self.dispatch_one_batch(iterator):
    759                 self._iterating = True
    760             else:

/d0/nlpdata/jupyter/estimators_env/lib/python3.4/site-packages/sklearn/externals/joblib/parallel.py in dispatch_one_batch(self, iterator)
    606                 return False
    607             else:
--> 608                 self._dispatch(tasks)
    609                 return True
    610 

/d0/nlpdata/jupyter/estimators_env/lib/python3.4/site-packages/sklearn/externals/joblib/parallel.py in _dispatch(self, batch)
    569         dispatch_timestamp = time.time()
    570         cb = BatchCompletionCallBack(dispatch_timestamp, len(batch), self)
--> 571         job = self._backend.apply_async(batch, callback=cb)
    572         self._jobs.append(job)
    573 

/d0/nlpdata/jupyter/estimators_env/lib/python3.4/site-packages/sklearn/externals/joblib/_parallel_backends.py in apply_async(self, func, callback)
    107     def apply_async(self, func, callback=None):
    108         """Schedule a func to be run"""
--> 109         result = ImmediateResult(func)
    110         if callback:
    111             callback(result)

/d0/nlpdata/jupyter/estimators_env/lib/python3.4/site-packages/sklearn/externals/joblib/_parallel_backends.py in __init__(self, batch)
    324         # Don't delay the application, to avoid keeping the input
    325         # arguments in memory
--> 326         self.results = batch()
    327 
    328     def get(self):

/d0/nlpdata/jupyter/estimators_env/lib/python3.4/site-packages/sklearn/externals/joblib/parallel.py in __call__(self)
    129 
    130     def __call__(self):
--> 131         return [func(*args, **kwargs) for func, args, kwargs in self.items]
    132 
    133     def __len__(self):

/d0/nlpdata/jupyter/estimators_env/lib/python3.4/site-packages/sklearn/externals/joblib/parallel.py in <listcomp>(.0)
    129 
    130     def __call__(self):
--> 131         return [func(*args, **kwargs) for func, args, kwargs in self.items]
    132 
    133     def __len__(self):

/d0/nlpdata/jupyter/estimators_env/lib/python3.4/site-packages/sklearn/linear_model/logistic.py in logistic_regression_path(X, y, pos_class, Cs, fit_intercept, max_iter, tol, verbose, solver, coef, copy, class_weight, dual, penalty, intercept_scaling, multi_class, random_state, check_input, max_squared_sum, sample_weight)
    674                     'shape (%d, %d) or (%d, %d)' % (
    675                         coef.shape[0], coef.shape[1], classes.size,
--> 676                         n_features, classes.size, n_features + 1))
    677             w0[:, :coef.shape[1]] = coef
    678 

ValueError: Initialization coef is of shape (3, 3), expected shape (2, 2) or (2, 3)
Versions
Linux-2.6.32-573.12.1.el6.x86_64-x86_64-with-centos-6.7-Final
Python 3.4.3 (default, Jun 2 2015, 13:59:03)
[GCC 4.4.7 20120313 (Red Hat 4.4.7-11)]
NumPy 1.10.4
SciPy 0.15.1
Scikit-Learn 0.18.1