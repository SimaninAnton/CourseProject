TheodoreGalanos commented on Feb 13, 2017
Hello,
I am really not sure how relevant this is going to be so I apologize in advance if it is way out of subject.
This relates to an issue I am facing in production, meaning in the practical use of ML in my field.
I usually generate very large feature spaces (each row representing a models in my case), with each feature being one parameter in the model. After the feature spaces are generated, I want to select a subset of those models to run in order to generate my labels (which are not known before hand).
So far I have been using a random selection out of the space but this leads to serious problems of under-representation of certain parameter values.
I was wondering if something similar to the stratified split in train_test_split function could be used for something like this. I am at the point when I'm thinking to try doing this by iterating through feature columns and assigning one of them at a time as the 'label' and then feeding the table to the train_test_split function and somehow merging the individual results at the end. But this, apart from being completely wrong, might be a bit inefficient in large spaces.
I was wondering if this is interesting enough for sklearn to develop. If not, I would welcome any pointers that can lead me to developing smth like this myself.
Thank you for a wonderful project and all the good work!
Kind regards,
Theodore.