jaradc commented on Mar 23, 2017
High-level, low-priority question.
Is there a computational reason that "X" data needs to be a 2D array, shape (n_samples, n_features)? Is sklearn designed this way for convention and standardization-purposes, or is there a code and mathematical reason pertaining to vector operations (ex: matrix multiplication)?
Reason I'm curious: if a user passes in a pandas Series or numpy array (n, ), why make the user reshape? Why not automatically infer based on the data passed in? if isinstance(X, pd.Series): X.values.reshape(-1, 1). Is this a "better to be explicit than assume" kind of design decision?