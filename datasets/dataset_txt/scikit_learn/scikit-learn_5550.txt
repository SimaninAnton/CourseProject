tehf0x commented on Sep 29, 2011
I run a lot of predict() calls with sparse vectors, and wanted to start using scikit-learn's libsvm wrapper due to its csrmatrix support. I patched in the code in a matter of minutes, but quickly realised I had a big memory leak issue. After an afternoon of thinking it was my fault, then pulling out valgrind, I've found the following:
==13996== 310,293,560 bytes in 13,927 blocks are definitely lost in loss record 1,716 of 1,716
==13996== at 0x4C2779D: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==13996== by 0x12AEDC28: csr_set_model (libsvm_sparse_helper.c:145)
==13996== by 0x12AF9B08: __pyx_pf_7sklearn_3svm_6sparse_6libsvm_1libsvm_sparse_predict (libsvm.c:3010)
==13996== by 0x49C32C: PyEval_EvalFrameEx (in /usr/bin/python2.6)
==13996== by 0x49D389: PyEval_EvalFrameEx (in /usr/bin/python2.6)
==13996== by 0x49D389: PyEval_EvalFrameEx (in /usr/bin/python2.6)
==13996== by 0x49D389: PyEval_EvalFrameEx (in /usr/bin/python2.6)
==13996== by 0x49DFDE: PyEval_EvalCodeEx (in /usr/bin/python2.6)
==13996== by 0x49C749: PyEval_EvalFrameEx (in /usr/bin/python2.6)
==13996== by 0x49D389: PyEval_EvalFrameEx (in /usr/bin/python2.6)
==13996== by 0x49DFDE: PyEval_EvalCodeEx (in /usr/bin/python2.6)
==13996== by 0x53072A: ??? (in /usr/bin/python2.6)
Line 145 in that file is:
if ((model->sv_coef[i] = malloc((model->l) * sizeof(double))) == NULL)
So it seems these sv_coefs aren't getting freed. I'm not very intimate with libsvm's code so I thought I'd bring this to your attention first before trying to dig away any further at this issue.
Thanks,
Gabe