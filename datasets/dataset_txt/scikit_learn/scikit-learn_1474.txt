StevenElsworth commented on Mar 21, 2018 â€¢
edited
Description
Cluster centres produced are not the centres of the clusters.
I perform kmeans on two dimensional data, then represent each piece by its cluster centre. The mean of the data before and after kmeans is different.
Steps/Code to Reproduce
Download pickle file: https://www.dropbox.com/s/dchj8c3rkicd4yn/matrix.p?dl=0
May need to increase the number of samples to find an example that breaks.
import pickle
import numpy as np
np.random.seed(0)
from sklearn.cluster import KMeans
from scipy.cluster.vq import kmeans2

Data = pickle.load(open('matrix.p', 'rb'))

for i in range(3):
    print('Before KMeans:', np.sum(Data[:,0]), np.sum(Data[:,1]))

    kmeans = KMeans(n_clusters=8).fit(Data)
    centres = kmeans.cluster_centers_
    labels = kmeans.labels_  
    
    Data2 = np.empty([0,2])
    for l in labels:
        pc = centres[l]
        Data2 = np.vstack([Data2, pc]) 
    print('sklearn:', np.sum(Data2[:,0]), np.sum(Data2[:,1]))    
    
    centres, labels = kmeans2(Data, 8)  
    Data3 = np.empty([0,2])
    for l in labels:
        pc = centres[l]
        Data3 = np.vstack([Data3, pc]) 
    print('scipy:', np.sum(Data3[:,0]), np.sum(Data3[:,1]))
    
    print('\n')
Expected Results
Would expect the sum of the rows to be the same for each matrix. Scipy kmeans implementation does as expected.
Actual Results
Before KMeans: -0.4833969392289883 1023.0
sklearn: -2.6499904222782558 1022.9589328390963
scipy: -0.48339693922892657 1022.9999999999998
Before KMeans: -0.4833969392289883 1023.0
sklearn: 4.0738917331483595 1023.0094562647755
scipy: -0.4833969392294719 1022.9999999999999
Before KMeans: -0.4833969392289883 1023.0
sklearn: -0.4833969392289559 1023.0000000000007
scipy: -0.4833969392297277 1023.0000000000001
Versions
Darwin-17.4.0-x86_64-i386-64bit
Python 3.6.3 |Anaconda custom (64-bit)| (default, Oct 6 2017, 12:04:38)
[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]
NumPy 1.14.2
SciPy 0.19.1
Scikit-Learn 0.19.1