sergiofenoll commented on Dec 11, 2018
Description
While calling OneHotEncoder.fit_transform() exception ValueError: Expected 2D array, got 1D array instead when the given input is actually a 2D array.
Steps/Code to Reproduce
movie_genres = pd.Series(["Action", "Action,Thriller", "Comedy", "Drama, Comedy"]) # Example
genres_ohencoder = OneHotEncoder(handle_unknown="ignore")
ohe_genres_split = [genres.split(",") for genres in movie_genres]
ohe_genres_array = genres_ohencoder.fit_transform(ohe_genres_split).toarray()
ohe_genres_features = ["genre_" + feature[3:] for feature in genres_ohencoder.get_feature_names()]
ohe_genres = pd.DataFrame(ohe_genres_array, columns=ohe_genres_features)
Expected Results
No error being thrown, a DataFrame with one column per genre and 0 or 1 per row depending on wether the genre was in the given row.
Actual Results
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-379-96c21912205c> in <module>
     12 genres_ohencoder = OneHotEncoder(handle_unknown="ignore")
     13 ohe_genres_split = [genres.split(",") for genres in movie_genres]
---> 14 ohe_genres_array = genres_ohencoder.fit_transform(ohe_genres_split).toarray()
     15 ohe_genres_features = ["genre_" + feature[3:] for feature in genres_ohencoder.get_feature_names()]
     16 ohe_genres = pd.DataFrame(ohe_genres_array, columns=ohe_genres_features)

~/.local/lib/python3.6/site-packages/sklearn/preprocessing/_encoders.py in fit_transform(self, X, y)
    514                 self._categorical_features, copy=True)
    515         else:
--> 516             return self.fit(X).transform(X)
    517 
    518     def _legacy_transform(self, X):

~/.local/lib/python3.6/site-packages/sklearn/preprocessing/_encoders.py in fit(self, X, y)
    425             return self
    426         else:
--> 427             self._fit(X, handle_unknown=self.handle_unknown)
    428             return self
    429 

~/.local/lib/python3.6/site-packages/sklearn/preprocessing/_encoders.py in _fit(self, X, handle_unknown)
     59 
     60     def _fit(self, X, handle_unknown='error'):
---> 61         X = self._check_X(X)
     62 
     63         n_samples, n_features = X.shape

~/.local/lib/python3.6/site-packages/sklearn/preprocessing/_encoders.py in _check_X(self, X)
     45 
     46         """
---> 47         X_temp = check_array(X, dtype=None)
     48         if not hasattr(X, 'dtype') and np.issubdtype(X_temp.dtype, np.str_):
     49             X = check_array(X, dtype=np.object)

~/.local/lib/python3.6/site-packages/sklearn/utils/validation.py in check_array(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, warn_on_dtype, estimator)
    550                     "Reshape your data either using array.reshape(-1, 1) if "
    551                     "your data has a single feature or array.reshape(1, -1) "
--> 552                     "if it contains a single sample.".format(array))
    553 
    554         # in the future np.flexible dtypes will be handled like object dtypes

ValueError: Expected 2D array, got 1D array instead:
array=[list(['Action']) list(['Action', 'Thriller']) list(['Comedy'])
 list(['Drama', ' Comedy'])].
Reshape your data either using array.reshape(-1, 1) if your data has a single feature or array.reshape(1, -1) if it contains a single sample.
Versions
System:
    python: 3.6.6 (default, Jul 19 2018, 16:29:00)  [GCC 7.3.1 20180303 (Red Hat 7.3.1-5)]
executable: /usr/bin/python3
   machine: Linux-4.18.19-100.fc27.x86_64-x86_64-with-fedora-27-Twenty_Seven

BLAS:
    macros: 
  lib_dirs: 
cblas_libs: cblas

Python deps:
       pip: 18.1
setuptools: 37.0.0
   sklearn: 0.20.1
     numpy: 1.15.4
     scipy: 1.1.0
    Cython: None
    pandas: 0.23.4
None