rhoef commented on Jul 8, 2013
I try to correct class labels (produced by an svm classifier). Class labels are 1,2,... 8
The following exception occurs:
 File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/hmm.py", line 322, in predict
    _, state_sequence = self.decode(obs, algorithm)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/hmm.py", line 305, in decode
    logprob, state_sequence = decoder[algorithm](obs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/hmm.py", line 242, in _decode_viterbi
    framelogprob = self._compute_log_likelihood(obs)
  File "/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/site-packages/sklearn/hmm.py", line 967, in _compute_log_likelihood
    return self._log_emissionprob[:, obs].T
IndexError: index (8) out of range (0<=index<7) in dimension 1
It turns out that class labels are internally used as array indices. That definitely should not be. Labels are completely arbitrary, and have a semantically meaning, while array indices and how indexing works is part of python syntax. This must not be mixed up.
Example from text book.
2 classes (labels -1 and 1)
The function
self._log_emissionprob[:, obs].T
will return always the same values since obs is always a list list of that contains -1's an 1's.