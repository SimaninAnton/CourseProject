twolodzko commented on Jan 29, 2018
I saw the below code used in several places so that LabelBinarizer() can be used within pipeline. Can it be added as a part of sklearn default?
from sklearn.preprocessing import LabelBinarizer

class LabelBinarizerPipelineFriendly(LabelBinarizer):
    def fit(self, X, y=None):
        """this would allow us to fit the model based on the X input."""
        super(LabelBinarizerPipelineFriendly,self).fit(X)
    def transform(self, X, y=None):
        return super(LabelBinarizerPipelineFriendly, self).transform(X)
    def fit_transform(self, X, y=None):
        return super(LabelBinarizerPipelineFriendly, self).fit(X).transform(X)
The problem is that LabelBinarizer()'s functions take one parameter, while they should take the X, y = None params. I undestand that this would lead to changing interface (=major change), but it seems to be reasonable and consistent with the general interface.