mattreid9956 commented on Sep 12, 2015
Hi, I have been using mixture.GMM function as of sklearn 15.2. When I moved to 16.1, i found that my code no longer worked. I will paste an example of unexpected result.
import pandas as pd
from sklearn import mixture
import numpy as np
from sklearn.utils import validation as vd

width1 = 1.0
width2 = 4.0
components = 2
N = 100

# Create Gaussian Mixture Model.
clf = mixture.GMM( n_components = components,
                   covariance_type = "full",
                   random_state = 2
                 )

# Create dataframe with two different normals.
df = pd.DataFrame( dict( A = np.append( np.random.normal( loc = 0.0, scale = width1, size = N ),
                                        np.random.normal( loc = 1.0, scale = width2, size = N )
                                      )
                       )
                 )

# This is where it will riase an exception due to incorrect dimensionality.
X = df[ "A" ]
clf.fit( X )
Leading to:
Traceback (most recent call last):
File "example.py", line 25, in
clf.fit( df[ "A" ] )
File "/usr/local/lib/python3.4/dist-packages/sklearn/mixture/gmm.py", line 435, in fit
(self.n_components, X.shape[0]))
I have managed to work around this by performing the 2d expansion and transpose prior to parsing to the fit command,
X = np.expand_dims( df[ "A" ], axis = 1 )
Could this not be built in for 1d arrays as an additional check? The issue occurs in utils.validation.check_array function as there is an ensure_2d argument set to True by default (perhaps it should be set to False as an argument in this class?). The error is thrown because it calls
array =  np.atleast_2d( array )
Which for a 1d array such as mine will add a new dimension whilst creating a transposed np.ndarray, so my initial X.shape - (200,) --> (1,200) which then causes an exception as seen in the Traceback. In the case where I perform the dimension expansion before all is good, but it is not intuitive to me that a user should have to do this. Look forward to hearing from you, thanks for any help.