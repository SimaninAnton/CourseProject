KimDoubleB commented on Sep 19, 2019 â€¢
edited
Hi. This is my first open source issue.
Description
Error name: IndexingError: Too many indexers
After creating a model with scikit-learn, an IndexingError occurs in the fit and score. I used LogisticRegression, DecisionTreeClassifier and SVC as models.
The input data for fit and score was used as pandas DataFrame (using iloc). Input data is put into df.iloc[train, :] and an error occurs. But df.iloc[train] does not cause errors and operates normally.
As df.iloc[train, :] and df.iloc[train] are the same DataFrame, I think both should be free from errors.
Steps/Code to Reproduce
# read file
df = pd.read_csv('heart.csv')
df.head()

# split into data and target
X = df.iloc[:,:-1]
y = df.iloc[:, -1]

model = LogisticRegression() # or DecisionTreeClassifier or SVC
kfold = KFold(n_splits=3, shuffle=True, random_state=42)
for i, (train, test) in enumerate(kfold.split(X, y)):
    model.fit(X.iloc[train,:], y.iloc[train,:])
    model.score(X.iloc[test,:], y.iloc[test,:])
    
'''
But the code below works without errors.
    
    model.fit(X.iloc[train], y.iloc[train])
    score = model.score(X.iloc[test], y.iloc[test])
'''
Expected Results
No error is thrown.
Actual Results
---------------------------------------------------------------------------
IndexingError                             Traceback (most recent call last)
<ipython-input-16-21f26c6e1fee> in <module>
     10 kfold = KFold(n_splits=3, shuffle=True, random_state=42)
     11 for i, (train, test) in enumerate(kfold.split(X, y)):
---> 12     model.fit(X.iloc[train,:], y.iloc[train,:])
     13     model.score(X.iloc[test,:], y.iloc[test,:])
     14 

C:\Anaconda3\lib\site-packages\pandas\core\indexing.py in __getitem__(self, key)
   1416                 except (KeyError, IndexError, AttributeError):
   1417                     pass
-> 1418             return self._getitem_tuple(key)
   1419         else:
   1420             # we by definition only have the 0th axis

C:\Anaconda3\lib\site-packages\pandas\core\indexing.py in _getitem_tuple(self, tup)
   2090     def _getitem_tuple(self, tup):
   2091 
-> 2092         self._has_valid_tuple(tup)
   2093         try:
   2094             return self._getitem_lowerdim(tup)

C:\Anaconda3\lib\site-packages\pandas\core\indexing.py in _has_valid_tuple(self, key)
    231         for i, k in enumerate(key):
    232             if i >= self.obj.ndim:
--> 233                 raise IndexingError("Too many indexers")
    234             try:
    235                 self._validate_key(k, i)

IndexingError: Too many indexers
Versions
System:
    python: 3.7.4 (default, Aug  9 2019, 18:34:13) [MSC v.1915 64 bit (AMD64)]
executable: C:\Anaconda3\python.exe
   machine: Windows-10-10.0.17763-SP0

BLAS:
    macros: 
  lib_dirs: 
cblas_libs: cblas

Python deps:
       pip: 19.2.2
setuptools: 41.0.1
   sklearn: 0.21.2
     numpy: 1.16.5
     scipy: 1.3.1
    Cython: 0.29.13
    pandas: 0.25.1