javierfs commented on May 22, 2019
I am modifying the function of cross_validate from Scikit-learn so it resamples the training data in each fold before fitting the model. I use a virtual environment in a remote machine where I have Scikit-learn installed.
I would like to use following libraries from imblearn:
from imblearn.under_sampling import RandomUnderSampler
from imblearn.over_sampling import SMOTE, SMOTENC
When I add a new parameter in the function cross_validate in _validation.py:
from
def cross_validate(estimator, X, y=None, groups=None, scoring=None, cv='warn',
                   n_jobs=None, verbose=0, fit_params=None,
                   pre_dispatch='2*n_jobs', return_train_score=False,
                   return_estimator=False, error_score='raise-deprecating'):
to
def cross_validate(estimator, X, resample_method, y=None, groups=None, scoring=None, cv='warn',
                   n_jobs=None, verbose=0, fit_params=None,
                   pre_dispatch='2*n_jobs', return_train_score=False,
                   return_estimator=False, error_score='raise-deprecating'):
It looks (by running it) that the changes are not stored since it sets 'y' as 'resample method'. So it does not recognise there is a new parameter in the arguments of the function. How can I deal with this? How can I modify an script from Scikit-learn that is installed in a virtual environment in a remote machine?