alexsavio commented on Mar 6, 2015
Using the example:
import numpy as np
from sklearn import cross_validation

for i in range(10):
    X = np.array([[1, 2], [0, 1], [3, 4], [1, 2], [3, 4], [4, 5], [6, 7], [8, 9]])
    y = np.array([0, 0, 0, 1, 1, 1, 1, 1])
    skf = cross_validation.StratifiedKFold(y, n_folds=3, random_state = None)
    print(skf)  


    for train_index, test_index in skf:
       print("TRAIN:", train_index, "TEST:", test_index)
       X_train, X_test = X[train_index], X[test_index]
       y_train, y_test = y[train_index], y[test_index]
This prints always the same partition of the dataset.
I've tested different options for random_state: None, an integer, or a RandomState. All of them gave the same response.