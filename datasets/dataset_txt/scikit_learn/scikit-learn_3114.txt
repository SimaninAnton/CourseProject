Contributor
alvarouc commented on Mar 12, 2016
Linux-4.4.3-300.fc23.x86_64-x86_64-with-fedora-23-Twenty_Three
Python 3.4.3 (default, Jun 29 2015, 12:16:01)
[GCC 5.1.1 20150618 (Red Hat 5.1.1-4)]
NumPy 1.10.2
SciPy 0.16.1
Scikit-Learn 0.18.dev0
In the following snippet of code
from sklearn.linear_model import LogisticRegression
from sklearn.cross_validation import StratifiedKFold, cross_val_score
import numpy as np
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import roc_auc_score
# Generate simulation data
data = np.random.normal(0,1,(100,2))
label = (np.random.normal(0,1,(100))>0)*1
# scale data 
data = StandardScaler().fit_transform(data)
# Generate folds
kf = list(StratifiedKFold(label, n_folds=5, random_state=1988))
# Build a classifier
clf = LogisticRegression()
# Manually fit a score
train, test = kf[0]
X = data[train, :]
y = label[train]
clf.fit(X, y)
ypred = clf.predict(X)
print(roc_auc_score(y, ypred))
# Use cross_val_score for fit and score
print(cross_val_score(clf, data, label, cv = kf, scoring='roc_auc'))
I expect the scores to be the same for the same classifier fitted with the same training data, but I get the following for three runs:
In [68]: run manual_class.py
0.513888888889
[ 0.55555556 0.45454545 0.54545455 0.36363636 0.45454545]
In [69]: run manual_class.py
0.559343434343
[ 0.49494949 0.28282828 0.64646465 0.44444444 0.68686869]
In [70]: run manual_class.py
0.54954954955
[ 0.29090909 0.45454545 0.2020202 0.65555556 0.12222222]
The first score does not match any from cross_val_score.