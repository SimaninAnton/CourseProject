Contributor
maheshakya commented on Feb 28, 2014
This issue relates to the GSOC project idea in the ideas page.
As stated in the wiki page , there are five methods of LSH functions and two of them deal with binary data.
Bit sampling for Hamming distance.
Random projection. (This can be binary or 1s and -1s)
But in numpy or scikit-learn, there is no efficient way to work with binary data. So what may be the possible solutions for this?
Moreover when approximating neighbor search, there are large number of hash tables with random collections of hash functions computed using LSH. So we need an efficient way to store them as well.
(I have mentioned this and a tentative implementation procedure in the mailing list)