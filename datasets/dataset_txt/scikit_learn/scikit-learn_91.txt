Contributor
lkubin commented on Dec 10, 2019
Description
I found a weird behavior in the function cross_val_predict when passing method="predict_proba" and y=None, while using a custom estimator. I believe that the problem is due to the local variable encode that is defined into the function cross_val_predict (it should be pretty easy to fix it).
Steps/Code to Reproduce
This is a minimal example to reproduce this issue.
import numpy as np

from sklearn.base import BaseEstimator
from sklearn.model_selection import cross_val_predict


class TestEstimator(BaseEstimator):

    def fit(self, X, y=None):
        pass

    def predict(self, X):
        return np.zeros(len(X))

    def predict_proba(self, X):
        return np.column_stack((np.zeros(len(X)), np.ones(len(X))))


data = np.random.random((100, 10))
te = TestEstimator()
y_hat = cross_val_predict(te, data, method='predict')
print(y_hat.shape)
y_proba_hat = cross_val_predict(te, data, method='predict_proba')
print(y_proba_hat.shape)
Expected Results
When I run y_proba_hat = cross_val_predict(te, data, method='predict_proba') I get the following exception:
TypeError: Singleton array array(None, dtype=object) cannot be considered a valid collection.