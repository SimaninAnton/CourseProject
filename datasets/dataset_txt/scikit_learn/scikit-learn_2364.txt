Member
amueller commented on Mar 1, 2017
Many people use jupyter for data analysis. I like us to be as responsive and interactive in this environment as possible. I also like API to be discoverable by pressing .
Unfortunately it's not possible to access attributes on pipelines without writing out full names.
afaik there's two ways to access attributes:
coef = pipeline.steps[1][1].coef_
coef = pipeline.named_steps['logisticregression'].coef_
I usually prefer the second one because I like names better than counting and it's more explicit for anyone reading the code.
But that requires me to know two things that I can't get via tab-completion: the names of the steps and the name of the attribute.
I think it would be awesome if I could get to coef_ using a tab-completable, which would make the whole thing much more discoverable.
I'm not sure that's very easy to do, though.
One option would be to either overload Pipelines __getattr__ and __dir__ so that you could do
pipeline.logisticregression.coef_
That requires some magic and it would not work for the names that contain numbers in them. I would be fine if we don't support names with -1 and -2 in them for now.
But more magic in the pipeline is not great.
We could also overload __getattr__ and __dir__ on ```pipeline.named_steps. That would limit the magic to named_steps`` which is just for convenience and not used internally anywhere afaik. And we already have an implementation of this: the bunch object.
So we could replace named_steps with a Bunch object and get an API that is way more discoverable (and easier on my fingertips ;)