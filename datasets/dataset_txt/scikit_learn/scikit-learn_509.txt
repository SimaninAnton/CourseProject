AbhilashMathews commented on May 20, 2019 â€¢
edited
Are there any recommended methods for computing the derivative and its associated error when applying Gaussian process regression? For instance, following the example here, one can simply find the mean and variance of regression on the original data, y, through y_mean, y_cov = gp.predict(X_[:, np.newaxis], return_cov=True). But is it possible to then compute the mean and variance of dy/dx?
Of course one can simply compute the mean of dy/dx numerically by taking np.gradient(y_mean,X). And this works. But how then should one go about computing the variance of dy/dx? The formula for doing this is given by equation (9.1), although is it correct to simply do the following: compute K = gp.kernel_(X,X), and then apply dKdx = np.gradient(K,X) and then d2Kdx2 = np.gradient(dKdx,X), where d2Kdx2 would be equal to the error on dy/dx as referenced above? Are there different ways to compute the variance corresponding to dy/dx?