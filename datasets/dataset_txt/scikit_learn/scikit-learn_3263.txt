IoDmitri commented on Jan 15, 2016
The following code produces the following stack trace in a multi-threaded environment,
svc =     SVC(kernel='linear',cache_size=4000,
class_weight='balanced',verbose=True,decision_function_shape='ovr')

train_sizes, train_scores, valid_scores = learning_curve(svc,xtscale,np.ravel(ytran), 
train_sizes=[10000,20000,30000],scoring=make_scorer(accuracy_score),n_jobs=6,verbose=2)

print train_sizes , train_scores, valid_scores, svc.get_params()
plt.figure()
plt.title("svc")
plt.xlabel("Training examples")
plt.ylabel("Score")
train_scores_mean = np.mean(train_scores, axis=1)
train_scores_std = np.std(train_scores, axis=1)
test_scores_mean = np.mean(valid_scores, axis=1)
test_scores_std = np.std(valid_scores, axis=1)
plt.grid()

plt.fill_between(train_sizes, train_scores_mean - train_scores_std,
             train_scores_mean + train_scores_std, alpha=0.1,
             color="r")
plt.fill_between(train_sizes, test_scores_mean - test_scores_std,
             test_scores_mean + test_scores_std, alpha=0.1, color="g")
plt.plot(train_sizes, train_scores_mean, 'o-', color="r",
     label="Training score")
plt.plot(train_sizes, test_scores_mean, 'o-', color="g",
     label="Cross-validation score")

plt.legend(loc="best")
plt.show()
The exception log
Traceback (most recent call last):
  File "C:\MachineLearning\SFCrime\crime.py", line 73, in <module>
    train_sizes=[10000,20000,30000],scoring=make_scorer(accuracy_score),n_jobs=6,verbose=2)
  File "C:\Python27\lib\site-packages\sklearn\learning_curve.py", line 153, in learning_curve
    for train, test in cv for n_train_samples in train_sizes_abs)
  File "C:\Python27\lib\site-packages\sklearn\externals\joblib\parallel.py", line 812, in __call__
    self.retrieve()
  File "C:\Python27\lib\site-packages\sklearn\externals\joblib\parallel.py", line 762, in retrieve
    raise exception
sklearn.externals.joblib.my_exceptions.JoblibMemoryError: JoblibMemoryError
___________________________________________________________________________
Multiprocessing exception:
...........................................................................
C:\MachineLearning\SFCrime\crime.py in <module>()
     68         # param_grid = {'C': [0.5, 1, 10]}
     69  #      gs = grid_search.GridSearchCV(svc, param_grid,n_jobs=4,verbose=1)
     70  #      gs.fit(testData[:,0:-2],np.ravel(testData[:,-1]))
     71         #print gs.best_estimator_
     72         train_sizes, train_scores, valid_scores = learning_curve(svc,xtscale,np.ravel(ytran)
,
---> 73                 train_sizes=[10000,20000,30000],scoring=make_scorer(accuracy_score),n_jobs=6
,verbose=2)
     74         #svc.fit(testData[:,0:7],np.ravel(testData[:,7]))
     75         #valData = xydecider[np.random.randint(0,xydecider.shape[0],10000)]
     76         #print svc.predict(xtransf.transform(np.matrix([2015,7,14,8,35, -122.3935620,37.7782
485])))
     77

...........................................................................
C:\Python27\lib\site-packages\sklearn\learning_curve.py in learning_curve(estimator=SVC(C=1.0, cache
_size=4000, class_weight='balanc...=None, shrinking=True,
  tol=0.001, verbose=True), X=array([[  0.00000000e+00,   1.73165030e+00,  -4....603501e-02,   3.210
82024e-02,  -1.99147226e-02]]), y=array([ 1,  2,  2, ...,  3,  5, 13]), train_sizes=[10000, 20000, 3
0000], cv=[(array([107733, 192190, 212425, ..., 878046, 878047, 878048]), array([     0,      1,
  2, ..., 465259, 466404, 486091])), (array([     0,      1,      2, ..., 878046, 878047, 878048]),
array([107733, 192190, 212425, ..., 718561, 718572, 718573])), (array([     0,      1,      2, ...,
718561, 718572, 718573]), array([316490, 337880, 481804, ..., 878046, 878047, 878048]))], scoring=ma
ke_scorer(accuracy_score), exploit_incremental_learning=False, n_jobs=6, pre_dispatch='all', verbose
=2)
    148             scorer, verbose) for train, test in cv)
    149     else:
    150         out = parallel(delayed(_fit_and_score)(
    151             clone(estimator), X, y, scorer, train[:n_train_samples], test,
    152             verbose, parameters=None, fit_params=None, return_train_score=True)
--> 153             for train, test in cv for n_train_samples in train_sizes_abs)
        cv = [(array([107733, 192190, 212425, ..., 878046, 878047, 878048]), array([     0,      1,
     2, ..., 465259, 466404, 486091])), (array([     0,      1,      2, ..., 878046, 878047, 878048]
), array([107733, 192190, 212425, ..., 718561, 718572, 718573])), (array([     0,      1,      2, ..
., 718561, 718572, 718573]), array([316490, 337880, 481804, ..., 878046, 878047, 878048]))]
    154         out = np.array(out)[:, :2]
    155         n_cv_folds = out.shape[0] // n_unique_ticks
    156         out = out.reshape(n_cv_folds, n_unique_ticks, 2)
    157

...........................................................................
C:\Python27\lib\site-packages\sklearn\externals\joblib\parallel.py in __call__(self=Parallel(n_jobs=
6), iterable=<generator object <genexpr>>)
    807             if pre_dispatch == "all" or n_jobs == 1:
    808                 # The iterable was consumed all at once by the above for loop.
    809                 # No need to wait for async callbacks to trigger to
    810                 # consumption.
    811                 self._iterating = False
--> 812             self.retrieve()
        self.retrieve = <bound method Parallel.retrieve of Parallel(n_jobs=6)>
    813             # Make sure that we get a last message telling us we are done
    814             elapsed_time = time.time() - self._start_time
    815             self._print('Done %3i out of %3i | elapsed: %s finished',
    816                         (len(self._output), len(self._output),

---------------------------------------------------------------------------
Sub-process traceback:
---------------------------------------------------------------------------
MemoryError                                        Thu Jan 14 11:16:44 2016
PID: 4652                             Python 2.7.10: C:\Python27\python.exe
...........................................................................
C:\Python27\lib\site-packages\sklearn\externals\joblib\parallel.pyc in __call__(self=<sklearn.extern
als.joblib.parallel.BatchedCalls object>)
     67     def __init__(self, iterator_slice):
     68         self.items = list(iterator_slice)
     69         self._size = len(self.items)
     70
     71     def __call__(self):
---> 72         return [func(*args, **kwargs) for func, args, kwargs in self.items]
     73
     74     def __len__(self):
     75         return self._size
     76

...........................................................................
C:\Python27\lib\site-packages\sklearn\cross_validation.pyc in _fit_and_score(estimator=SVC(C=1.0, ca
che_size=4000, class_weight='balanc...=None, shrinking=True,
  tol=0.001, verbose=True), X=memmap([[  0.00000000e+00,   1.73165030e+00,  -4...603501e-02,   3.210
82024e-02,  -1.99147226e-02]]), y=memmap([ 1,  2,  2, ...,  3,  5, 13]), scorer=make_scorer(accuracy
_score), train=array([    0,     1,     2, ..., 29997, 29998, 29999]), test=memmap([107733, 192190,
212425, ..., 718561, 718572, 718573]), verbose=2, parameters=None, fit_params={}, return_train_score
=True, return_parameters=False, error_score='raise')
   1519     if parameters is not None:
   1520         estimator.set_params(**parameters)
   1521
   1522     start_time = time.time()
   1523
-> 1524     X_train, y_train = _safe_split(estimator, X, y, train)
   1525     X_test, y_test = _safe_split(estimator, X, y, test, train)
   1526
   1527     try:
   1528         if y_train is None:

...........................................................................
C:\Python27\lib\site-packages\sklearn\cross_validation.pyc in _safe_split(estimator=SVC(C=1.0, cache
_size=4000, class_weight='balanc...=None, shrinking=True,
  tol=0.001, verbose=True), X=memmap([[  0.00000000e+00,   1.73165030e+00,  -4...603501e-02,   3.210
82024e-02,  -1.99147226e-02]]), y=memmap([ 1,  2,  2, ...,  3,  5, 13]), indices=array([    0,     1
,     2, ..., 29997, 29998, 29999]), train_indices=None)
   1586             if train_indices is None:
   1587                 X_subset = X[np.ix_(indices, indices)]
   1588             else:
   1589                 X_subset = X[np.ix_(indices, train_indices)]
   1590         else:
-> 1591             X_subset = safe_indexing(X, indices)
   1592
   1593     if y is not None:
   1594         y_subset = safe_indexing(y, indices)
   1595     else:

...........................................................................
C:\Python27\lib\site-packages\sklearn\utils\__init__.pyc in safe_indexing(X=memmap([[  0.00000000e+0
0,   1.73165030e+00,  -4...603501e-02,   3.21082024e-02,  -1.99147226e-02]]), indices=array([    0,
    1,     2, ..., 29997, 29998, 29999]))
    158             return X.copy().iloc[indices]
    159     elif hasattr(X, "shape"):
    160         if hasattr(X, 'take') and (hasattr(indices, 'dtype') and
    161                                    indices.dtype.kind == 'i'):
    162             # This is often substantially faster than X[indices]
--> 163             return X.take(indices, axis=0)
    164         else:
    165             return X[indices]
    166     else:
    167         return [X[idx] for idx in indices]

MemoryError:
___________________________________________________________________________