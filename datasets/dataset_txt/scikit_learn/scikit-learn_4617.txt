Member
agramfort commented on Oct 30, 2013
this code returns:
import numpy as np
from  scipy import sparse
from sklearn.preprocessing import Imputer

X = np.random.randn(100, 2)
X[::2] = np.nan

for strategy in ['mean', 'median', 'most_frequent']:
    imputer = Imputer(strategy=strategy)
    X_ = imputer.fit_transform(X)
    print X.shape, X_.shape

    X_ = imputer.fit_transform(sparse.csr_matrix(X))
    print X.shape, X_.shape
(100, 2) (100, 2)
(100, 2) (100, 2)
(100, 2) (100, 1)
(100, 2) (100, 2)
(100, 2) (100, 2)
(100, 2) (100, 2)
so returns (100, 1) with dense + median