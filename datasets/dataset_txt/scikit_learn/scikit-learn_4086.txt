Member
amueller commented on Jan 8, 2015
Univariate feature selection crashes if no feature is selected with an unhelpful message:
from sklearn.feature_selection import SelectFdr

rng = np.random.RandomState(0)
X = rng.rand(40, 10) 
y = rng.randint(0, 4, size=40)

fdr = SelectFdr()
fdr.fit(X, y)
fdr.transform(X)
ValueError                                Traceback (most recent call last)
<ipython-input-7-5cd77e510247> in <module>()
----> 1 asdf.transform(X)

/home/andy/checkout/scikit-learn/sklearn/feature_selection/base.pyc in transform(self, X)
     73         """
     74         X = check_array(X, accept_sparse='csr')
---> 75         mask = self.get_support()
     76         if len(mask) != X.shape[1]:
     77             raise ValueError("X has a different shape than during fitting.")

/home/andy/checkout/scikit-learn/sklearn/feature_selection/base.pyc in get_support(self, indices)
     44             values are indices into the input feature vector.
     45         """
---> 46         mask = self._get_support_mask()
     47         return mask if not indices else np.where(mask)[0]
     48 

/home/andy/checkout/scikit-learn/sklearn/feature_selection/univariate_selection.pyc in _get_support_mask(self)
    488         alpha = self.alpha
    489         sv = np.sort(self.pvalues_)
--> 490         threshold = sv[sv < alpha * np.arange(len(self.pvalues_))].max()
    491         return self.pvalues_ <= threshold
    492 

/usr/lib/python2.7/dist-packages/numpy/core/_methods.pyc in _amax(a, axis, out, keepdims)
     15 def _amax(a, axis=None, out=None, keepdims=False):
     16     return um.maximum.reduce(a, axis=axis,
---> 17                             out=out, keepdims=keepdims)
     18 
     19 def _amin(a, axis=None, out=None, keepdims=False):

ValueError: zero-size array to reduction operation maximum which has no identity