hmaarrfk commented on Dec 9, 2019
______ test_early_stopping_regression[neg_mean_squared_error-None-5-0.1] _______
[gw0] linux -- Python 3.7.3 $PREFIX/bin/python

scoring = 'neg_mean_squared_error', validation_fraction = None
n_iter_no_change = 5, tol = 0.1

    @pytest.mark.parametrize(
        'scoring, validation_fraction, n_iter_no_change, tol', [
            ('neg_mean_squared_error', .1, 5, 1e-7),  # use scorer
            ('neg_mean_squared_error', None, 5, 1e-1),  # use scorer on train data
            (None, .1, 5, 1e-7),  # same with default scorer
            (None, None, 5, 1e-1),
            ('loss', .1, 5, 1e-7),  # use loss
            ('loss', None, 5, 1e-1),  # use loss on training data
            (None, None, None, None),  # no early stopping
            ])
    def test_early_stopping_regression(scoring, validation_fraction,
                                       n_iter_no_change, tol):
    
        max_iter = 200
    
        X, y = make_regression(n_samples=50, random_state=0)
    
        gb = HistGradientBoostingRegressor(
            verbose=1,  # just for coverage
            min_samples_leaf=5,  # easier to overfit fast
            scoring=scoring,
            tol=tol,
            validation_fraction=validation_fraction,
            max_iter=max_iter,
            n_iter_no_change=n_iter_no_change,
            random_state=0
        )
>       gb.fit(X, y)

../_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold/lib/python3.7/site-packages/sklearn/ensemble/_hist_gradient_boosting/tests/test_gradient_boosting.py:87: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
../_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold/lib/python3.7/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py:362: in fit
    X_binned_val, y_val,
../_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold/lib/python3.7/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py:436: in _check_early_stopping_scorer
    self.scorer_(self, X_binned_small_train, y_small_train)
../_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold/lib/python3.7/site-packages/sklearn/metrics/_scorer.py:169: in __call__
    sample_weight=sample_weight)
../_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold/lib/python3.7/site-packages/sklearn/metrics/_scorer.py:205: in _score
    y_pred = method_caller(estimator, "predict", X)
../_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold/lib/python3.7/site-packages/sklearn/metrics/_scorer.py:52: in _cached_call
    return getattr(estimator, method)(*args, **kwargs)
../_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold/lib/python3.7/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py:813: in predict
    return self._raw_predict(X).ravel()
../_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold/lib/python3.7/site-packages/sklearn/ensemble/_hist_gradient_boosting/gradient_boosting.py:594: in _raw_predict
    raw_predictions[k, :] += predict(X)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <sklearn.ensemble._hist_gradient_boosting.predictor.TreePredictor object at 0xffff8391af28>
X = array([[24, 39, 41, ..., 46, 35, 16],
       [41,  2, 40, ..., 15, 26, 45],
       [27, 31, 31, ...,  0, 28, 27],
    ... 0, 21, 34, ..., 21, 23,  5],
       [16, 19, 24, ..., 29, 31,  1],
       [28, 22,  2, ..., 22,  7, 46]], dtype=uint8)
missing_values_bin_idx = 255

    def predict_binned(self, X, missing_values_bin_idx):
        """Predict raw values for binned data.
    
        Parameters
        ----------
        X : ndarray, shape (n_samples, n_features)
            The input samples.
        missing_values_bin_idx : uint8
            Index of the bin that is used for missing values. This is the
            index of the last bin and is always equal to max_bins (as passed
            to the GBDT classes), or equivalently to n_bins - 1.
    
        Returns
        -------
        y : ndarray, shape (n_samples,)
            The raw predicted values.
        """
        out = np.empty(X.shape[0], dtype=Y_DTYPE)
>       _predict_from_binned_data(self.nodes, X, missing_values_bin_idx, out)
E       Failed: Timeout >300.0s
Build log attached.
logs_conda-forge_scikit-learn-feedstock_2_2.log
logs_conda-forge_scikit-learn-feedstock_2_1.log