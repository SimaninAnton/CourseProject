Contributor
scottgigante commented on Jun 14, 2018 â€¢
edited
Description
sklearn.utils.extmath.randomized_svd (and its object-oriented interface, sklearn.decomposition.TruncatedSVD) is extremely slow for certain types of sparse matrix.
Steps/Code to Reproduce
>>> import numpy as np
>>> import scipy.sparse as sp
>>> from sklearn.utils.extmath import randomized_svd
>>> import timeit
>>> 
>>> def test(X, seed=42):
>>>  U, S, VT = randomized_svd(X, 50, random_state=seed)
>>> 
>>> np.random.seed(42)
>>> X = np.random.normal(0,1,[1000,1000]) * np.random.poisson(0.1, [1000,1000])
>>> X = sp.csr_matrix(X)
>>> %timeit -n 50 test(X)
50 loops, best of 3: 381 ms per loop
>>> 
>>> X = sp.csc_matrix(X)
>>> %timeit -n 50 test(X)
50 loops, best of 3: 400 ms per loop
>>> 
>>> X = sp.bsr_matrix(X)
>>> %timeit -n 50 test(X)
50 loops, best of 3: 392 ms per loop
>>> 
>>> X = sp.coo_matrix(X)
>>> %timeit -n 50 test(X)
50 loops, best of 3: 578 ms per loop
>>> 
>>> X = sp.lil_matrix(X)
>>> %timeit -n 50 test(X)
50 loops, best of 3: 1.45 s per loop
>>> 
>>> X = sp.dok_matrix(X)
>>> %timeit -n 50 test(X)
50 loops, best of 3: 22.1 s per loop
Expected Results
Either all sparse matrices should be processed in roughly the same amount of time, or a warning should be printed.
Actual Results
randomized_svd silently takes up to 50x longer than necessary.
Versions
Windows-10-10.0.17134-SP0
Python 3.6.0 |Anaconda 4.3.1 (64-bit)| (default, Dec 23 2016, 11:57:41) [MSC v.1900 64 bit (AMD64)]
NumPy 1.14.4
SciPy 1.1.0
Scikit-Learn 0.19.1
Also tested on:
Linux-4.16.11-1-ARCH-x86_64-with-arch-Arch-Linux
Python 3.6.5 (default, May 11 2018, 04:00:52)
[GCC 8.1.0]
NumPy 1.14.5
SciPy 1.1.0
Scikit-Learn 0.19.1