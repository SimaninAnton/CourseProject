Member
mblondel commented on Jun 11, 2014
KernelDensity's sample method returns a scalar when the number of samples to generate is n_samples=1 and n_features=1. The expected result is an array of shape (1, 1). The bug only affects kernel="gaussian". Here's a minimal example to reproduce the problem:
import numpy as np
from sklearn.neighbors import KernelDensity

N = 100
np.random.seed(1)
X = np.concatenate((np.random.normal(0, 1, 0.3 * N),
                    np.random.normal(5, 1, 0.7 * N)))[:, np.newaxis]

kde = KernelDensity(kernel="gaussian", bandwidth=0.5).fit(X)

x = kde.sample(1)
print x
print

x = kde.sample(2)
print x
print x.shape
On a related note, this line seems to be using an undocumented functionality of rng.normal. The documentation says that "loc" should be a scalar but here a 2d array is passed. What does rng.normal do in this case? I guess it generates each feature independently (i.e. diagonal covariance matrix) but a comment would be definitely helpful.
CC @jakevdp