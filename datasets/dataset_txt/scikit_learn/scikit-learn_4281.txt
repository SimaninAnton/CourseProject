Contributor
gchers commented on Aug 3, 2014
It looks to me there's an issue when using some distance different from 'euclidean' in tsne implementation.
Example:
import numpy as np
from sklearn.manifold import TSNE
x=np.random.randn(10,10)
t=TSNE(metric='chebyshev')
z=t.fit_transform(x)
Produces:
TypeError: pdist() got an unexpected keyword argument 'squared'
In fact at lines 438-439 of sklearn/manifold/t_sne.py function _fit() I read:
distances = pairwise_distances(X, metric=self.metric, squared=True)
which means that it always provides 'squared' argument to pairwise_distances(). Now, not all the distances support this (see sklearn/metric/pairwise.py), which leads to an error.
I report this as an issue because in t_sne.py from line 338 it says:
If metric is a string, it must be one of the options
allowed by scipy.spatial.distance.pdist for its metric parameter, or
a metric listed in pairwise.PAIRWISE_DISTANCE_FUNCTIONS.
I'd suggest to substitute line 438 with something like:
if self.metric == 'euclidean':
    distances = pairwise_distances(X, metric=self.metric, squared=True)
else:
    distances = pairwise_distances(X, metric=self.metric)
but I'm quite sure it's not as simple as that: I don't, for example, understand why the author wanted squared=True.
Cheers