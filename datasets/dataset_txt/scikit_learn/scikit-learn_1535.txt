mayou36 commented on Feb 25, 2018 â€¢
edited
Description
My understanding: importing sklearn should lead to the possibility of using
sklearn.manifold (for example). This is why an __all__ is defined in __init__.py (sklearn.__init__.py to be precise) containing, within others, 'manifold'. But the problem is, that 'manifold' is not imported inside __init__. This leads, of course, to an attribute error when doing the above.
Steps/Code to Reproduce
Python 3.5/3.6 (and probably more)
import sklearn
sklearn.manifold  (or other module)
Expected Results
nothing (no error)
Actual Results
AttributeError: module 'sklearn' has no attribute 'manifold'
Versions
scikit-learn: newest master and older (0.19.1, 0.18.)
Linux-4.13.0-36-generic-x86_64-with-debian-stretch-sid
Python 3.6.4 |Anaconda, Inc.| (default, Jan 16 2018, 18:10:19)
[GCC 7.2.0]
NumPy 1.14.1
SciPy 1.0.0
Looking through the tests and examples, I realised that this is nowhere imported like that but always as from foo import bar.
I also do not see any imports inside __init__ of the modules (as in other __init__).
Maybe there was/is some confusion about __all__ or it was just forgotten to also import the modules.
Or maybe I am missing something completely here. Let me know!