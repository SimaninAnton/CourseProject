Member
thomasjpfan commented on Dec 13, 2019
If the entire training data was set as the grid for _partial_dependence_recursion, should the following be equal?
from sklearn.experimental import enable_hist_gradient_boosting
from sklearn.ensemble import HistGradientBoostingRegressor
from sklearn.datasets import make_regression
from sklearn.inspection._partial_dependence import _partial_dependence_recursion
import numpy as np
from numpy.testing import assert_allclose

target_feature = 0

X, y = make_regression(random_state=0, n_features=5, n_informative=5)
y = y - y.mean()

est = HistGradientBoostingRegressor(random_state=0)
est.fit(X, y)

features = np.array([target_feature], dtype=np.int32)
grid = X[:, features]
grid = np.sort(grid, axis=0)

pdp = _partial_dependence_recursion(est, grid, features)

mean_predictions = []
for val in grid.ravel():
    X_ = X.copy()
    X_[:, target_feature] = val
    mean_predictions.append(est.predict(X_).mean())
    
pdp = pdp[0]
    
assert_allclose(pdp, mean_predictions, rtol=1e-1)
This snippet is based off of:
scikit-learn/sklearn/inspection/tests/test_partial_dependence.py
Line 170 in 6c58288
 def test_partial_dependence_helpers(est, method, target_feature): 
CC @NicolasHug