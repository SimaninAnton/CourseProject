Treora commented on Feb 9, 2015
I have not scrutinised this properly, but the way random state is used in the BernoulliRBM looks dubious. If random_state is set with an integer, check_random_state will return a new random genenator with that state. If I'm not mistaken this could lead to state loops when trying to do many iterations of gibbs sampling, as the new state has become a deterministic function of the old state (see line 214).
partial_fit seems to already sets a self.random_state_ to circumvent problems with reusing random state (line 236). Perhaps a single random generator could be set in __init__? Like so:
self.random_state = check_random_state(random_state)