Contributor
MLopez-Ibanez commented on Apr 4, 2017
Description
There is no consistent way to avoid a warning without reshaping the data in the middle of the analysis.
Steps/Code to Reproduce
The following code (code 1):
from sklearn.datasets import load_boston
boston = load_boston()
print(boston.DESCR)
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = \
    train_test_split(boston.data, boston.target, test_size = 0.25)
# Standardization (z-score normalization)
from sklearn.preprocessing import StandardScaler
# We fit the scaler on the train data and apply to both train and test
# We get some warnings, but it is ok to ignore them.
scalerX = StandardScaler().fit(X_train)
scalery = StandardScaler().fit(y_train)
X_train = scalerX.transform(X_train)
y_train = scalery.transform(y_train)
X_test = scalerX.transform(X_test)
y_test = scalery.transform(y_test)
from sklearn.neural_network import MLPRegressor
mlp = MLPRegressor(solver='lbfgs', hidden_layer_sizes=50)
mlp.fit(X_train, y_train)
results in the following warnings:
C:\Anaconda3\lib\site-packages\sklearn\preprocessing\data.py:586: DeprecationWarning: Passing 1d arrays as data is deprecated in 0.17 and will raise ValueError in 0.19. Reshape your data either using X.reshape(-1, 1) if your data has a single feature or X.reshape(1, -1) if it contains a single sample.
warnings.warn(DEPRECATION_MSG_1D, DeprecationWarning)
C:\Anaconda3\lib\site-packages\sklearn\preprocessing\data.py:649: DeprecationWarning: Passing 1d arrays as data is deprecated in 0.17 and will raise ValueError in 0.19. Reshape your data either using X.reshape(-1, 1) if your data has a single feature or X.reshape(1, -1) if it contains a single sample.
warnings.warn(DEPRECATION_MSG_1D, DeprecationWarning)
C:\Anaconda3\lib\site-packages\sklearn\preprocessing\data.py:649: DeprecationWarning: Passing 1d arrays as data is deprecated in 0.17 and will raise ValueError in 0.19. Reshape your data either using X.reshape(-1, 1) if your data has a single feature or X.reshape(1, -1) if it contains a single sample.
warnings.warn(DEPRECATION_MSG_1D, DeprecationWarning)
However, changing boston.target to boston.target.reshape(-1,1) produces:
C:\Anaconda3\lib\site-packages\sklearn\neural_network\multilayer_perceptron.py:1266: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples, ), for example using ravel().
y = column_or_1d(y, warn=True)
sklearn functions should be consistent in what the acceptable format is.
Windows-7-6.1.7601-SP1
Python 3.5.3 |Anaconda 4.0.0 (64-bit)| (default, Feb 22 2017, 21:28:42) [MSC v.1900 64 bit (AMD64)]
NumPy 1.11.3
SciPy 0.18.1
Scikit-Learn 0.18.1