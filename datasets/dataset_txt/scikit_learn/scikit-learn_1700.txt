Contributor
adelr commented on Dec 6, 2017
Description
LatentDirichletAllocation computation runs on multiple cores even when n_jobs is set to 1.
Steps/Code to Reproduce
Example:
from sklearn.datasets import fetch_20newsgroups
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.decomposition import LatentDirichletAllocation

categories = ['rec.motorcycles', 'rec.sport.baseball', 'comp.graphics', 'sci.space', 'sci.med']
newsgroups_train = fetch_20newsgroups(subset='train', categories=categories)

docs = newsgroups_train.data
vec = CountVectorizer(max_features=10000)
lda_features = vec.fit_transform(docs)

lda_model = LatentDirichletAllocation( 
 n_components=5,
 learning_method='batch', 
 batch_size=1000, 
 n_jobs=1)

model = lda_model.fit(lda_features)
Expected Results
The code above is expected to run on a single core.
Actual Results
More than one core is used.
Versions
macOS:
Darwin-15.6.0-x86_64-i386-64bit
Python 3.6.3 |Anaconda, Inc.| (default, Nov 8 2017, 18:10:31)
[GCC 4.2.1 Compatible Clang 4.0.1 (tags/RELEASE_401/final)]
NumPy 1.13.3
SciPy 1.0.0
scikit-learn 0.19.1
joblib 0.11
Linux (Ubuntu 16.04):
Linux-4.10.0-40-generic-x86_64-with-debian-stretch-sid
Python 3.6.3 |Anaconda custom (64-bit)| (default, Nov 20 2017, 20:41:42)
[GCC 7.2.0]
NumPy 1.13.3
SciPy 1.0.0
scikit-learn 0.19.1
joblib 0.11