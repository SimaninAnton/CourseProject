Member
arjoly commented on May 21, 2014
Here a script to reproduce, it pops from #3173 whenever I clean the input type checking.
import numpy as np
from scipy.sparse import csr_matrix
from sklearn.utils.validation import safe_asarray
from sklearn.datasets import make_multilabel_classification

from sklearn.linear_model import LassoCV
from sklearn.linear_model import ElasticNetCV

X, y = make_multilabel_classification(n_classes=1, random_state=0,
                                      return_indicator=True)
X = safe_asarray(csr_matrix(X), dtype=np.float32)
y = y.ravel()

for Estimator in [LassoCV, ElasticNetCV]:
    try:
        estimator = Estimator()
        estimator.fit(X, y)
    except ValueError as e:
        print("\nFailed with %s" % estimator)
        print(e)
The output is
Failed with LassoCV(alphas=None, copy_X=True, cv=None, eps=0.001, fit_intercept=True,
    max_iter=1000, n_alphas=100, n_jobs=1, normalize=False, positive=False,
    precompute='auto', tol=0.0001, verbose=False)
Buffer dtype mismatch, expected 'DOUBLE' but got 'float'

Failed with ElasticNetCV(alphas=None, copy_X=True, cv=None, eps=0.001, fit_intercept=True,
       l1_ratio=0.5, max_iter=1000, n_alphas=100, n_jobs=1,
       normalize=False, positive=False, precompute='auto', tol=0.0001,
       verbose=0)
Buffer dtype mismatch, expected 'DOUBLE' but got 'float'
Should it coerce its input type to np.float64 (aka DOUBLE)?