dwyatte commented on Apr 17, 2016 â€¢
edited
d = [{'thing': 'a', 'number': 2}, {'thing': 'b', 'number': 1}, {'thing': 'c', 'number': 0}]
vec = DictVectorizer(sparse=False)
vec.fit_transform(d)
array([[ 2., 1., 0., 0.],
[ 1., 0., 1., 0.],
[ 0., 0., 0., 1.]])
vec.inverse_transform(vec.fit_transform(d))
[{'number': 2.0, 'thing=a': 1.0},
{'number': 1.0, 'thing=b': 1.0},
{'thing=c': 1.0}]
Ideally, the third record in inverse_transform should include 'number': 0.0, but this is not possible due to the implementation which only returns keys/values if the value is != 0, presumably to deal with one-hot-encoding.