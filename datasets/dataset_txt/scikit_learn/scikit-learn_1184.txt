chandu8542 commented on Aug 6, 2018 â€¢
edited
I'm incrementally training MLPClassifier for multiclass classification using partial_fit. Here is part of my code.
from sklearn.datasets import load_svmlight_file
import numpy as np
from scipy.sparse import hstack
from sklearn.neural_network import MLPClassifier
import math

data_path = "/home/chandresh/ckm/data/multiclass data/"
tranfile= 'letter.scale.tr' # download this data from 
# https://www.csie.ntu.edu.tw/~cjlin/libsvmtools/datasets/multiclass.html

def get_data():
    data = load_svmlight_file(data_path+tranfile)
    return data[0], data[1].astype(int)

X, y = get_data()

# add bias column

X = hstack([np.array([[1] for _ in range(X.shape[0])]), X])
X = X.toarray()

n, d = X.shape
no_classses =len( np.unique(y)) # 26 classes


clf = MLPClassifier(hidden_layer_sizes=(d), solver='sgd', warm_start=True, batch_size=1, max_iter=1, random_state=1)
# for online learning, I'm extracting at least one instance from each class and doing partial_fit
# xtr, ytr contain one instance from each class.
xtr=[]
ytr=[]
ind=[]

for i in range(1,no_classses+1):
    s, = np.where(y==i)
    ind.append(s[0])

xtr = X[ind,:]
ytr = y[ind]

X = np.delete(X,ind,0)
y = np.delete(y, ind,0)

n = X.shape[0]
classes  = np.unique(y)
clf.partial_fit(xtr,ytr, classes)
for t in range(0,n):
    xt = X[t,:]
    yt = int(y[t])-1
    p  = clf.predict_proba([xt])      
     # update the MLP
    clf = clf.partial_fit([xt],[yt], classes)      
If you run the code above, error is this:
'ValueError: warm_start can only be used where y has the same classes as in the previous call to fit. Previously got [ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24
25 26], y has [21]
'
As per sklean doc about partial_fit, classes can be omitted in the next call to partial_fit, but it does not help. Instead of mini-batching, I'm training MLP one example at a time. Hence, subsequent calls to partial_fit will not have all classes and that' why the error. Any hack?
Thanks.