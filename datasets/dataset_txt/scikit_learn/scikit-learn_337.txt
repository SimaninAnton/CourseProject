dth5 commented on Aug 15, 2019
my example below is in python 3.6.7 and sklearn 0.21.2
you can see that the pipeline and parameters seem to work well with gridsearchcv but fail with randomizedsearchcv. A potential issue, I believe, is that randomizedsearchcv doesn't like being passed this list of dictionary lists. So it's fine with { list of dictionaries} but not [{list of dictionaries}, {list of dictionaries}].
numpy.random.seed(52)
MY_RAND_SEED=numpy.random.seed(52)

pipe = Pipeline([
    ('imputer', SimpleImputer(strategy='median')),
    ('scaler' , StandardScaler()),
    ('classify', LogisticRegression())
])

X, y = make_classification(n_samples= 500, n_features=58, n_redundant=13, n_informative=7, n_clusters_per_class=2)

param_grid_linear = [
    {'classify' : [LogisticRegression(),],
     'classify__penalty' : ['l1', 'l2'],
     'classify__C' : numpy.logspace(-4, 4, 50),
     'classify__solver' : ['liblinear']},
    {'classify' : [LogisticRegression(),],
     'classify__penalty' : ['l2'],
     'classify__C' : numpy.logspace(-4, 4, 50),
     'classify__solver' : ['lbfgs']},
    {'classify': [SVC(),],
     'classify__kernel': ['linear',],
     'classify__C': numpy.linspace(0.001,200, 10),},
]


innercv=StratifiedKFold(n_splits=5, shuffle=True, random_state=numpy.random.seed(52))
gridA = GridSearchCV(pipe, param_grid_linear, scoring='accuracy', iid=False, verbose=1, n_jobs=12)
gridA.fit(X, y)
print("finished grid search")

gridB = RandomizedSearchCV(pipe, param_grid_linear, scoring='accuracy', n_iter=5, iid=False, verbose=1, n_jobs=12)
gridB.fit(X, y)