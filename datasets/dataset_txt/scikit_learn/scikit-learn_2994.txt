naught101 commented on May 19, 2016
At the moment, there are only two recommended way to deal with missing values, either delete the incomplete rows, or use the imputer preprocessor.
Another useful method would be to have an sklearn estimator return an all NaN row when ever it encounters an incomplete row. I think this could basically be handled as a preprocessor transform: check all rows for completeness, retain an appropriate index (fit step), select only complete rows and pass them on to the model, then put the returned output back into a matrix with the same nrows as the original using the retained index, and fill other values with np.nan.
This would be useful when working with gridded/masked data, where the area outside the mask is irrelevant, but it's useful to have the data come out in the same shape as it went in (see pydata/xarray#818 (comment) for example).
Would something like this be useful in sklearn? If so, I can make a PR.