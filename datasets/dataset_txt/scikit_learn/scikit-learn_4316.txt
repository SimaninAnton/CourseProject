Member
arjoly commented on Jul 18, 2014
In the multiclass module, there are 6 functions that duplicate the ovr, the ovo and the ecoc meta-estimators.
multiclass.fit_ovr(estimator, X, y[, n_jobs])   Fit a one-vs-the-rest strategy.
multiclass.predict_ovr(estimators, ...) Make predictions using the one-vs-the-rest strategy.
multiclass.fit_ovo(estimator, X, y[, n_jobs])   Fit a one-vs-one strategy.
multiclass.predict_ovo(estimators, classes, X)  Make predictions using the one-vs-one strategy.
multiclass.fit_ecoc(estimator, X, y[, ...]) Fit an error-correcting output-code strategy.
multiclass.predict_ecoc(estimators, classes, ...)   Make predictions using the error-correcting output-code strategy.
I propose to deprecate those and make them private and later refactor those functions in the meta-estimators. What do you think?