GillesJ commented on Nov 14, 2016 â€¢
edited by jnothman
Description
Crossvalidation objects allow for using a custom scorer object as explained here. My use-case is a common one: per fitted fold, print multiple metrics (cf. MWE below). The expected output is for each fitted fold is one printout of the specified information. Instead, a second call is made to the scorer which produces garbage output printing (close to) perfect performance.
This is a fairly common use-case and I have seen examples where it used a lot, but never a mention of issues, maybe this is a problem with 18.01?
Steps/Code to Reproduce
from sklearn import svm
from sklearn.model_selection import GridSearchCV
import numpy as np
import scipy
from sklearn.metrics.scorer import f1_scorer, accuracy_scorer, precision_scorer, recall_scorer

def my_scorer(clf, X, y):
    f1_cand = f1_scorer(clf, X, y)
    p_cand = precision_scorer(clf, X, y)
    recall_cand = recall_scorer(clf, X, y)
    params_cand = str(clf.get_params())
    print("Params: {}\tF1: {}\tP: {}\tR: {}".format(params_cand, f1_cand, p_cand, recall_cand))
    return f1_cand

PARAM_GRID = {'C': [1, 10], 'kernel': ['linear']}
m = 500
n = 1000
X = scipy.sparse.random(m, n, format='csr')
y = np.random.choice([-1, 1], m)
svr = svm.SVC()
clf = GridSearchCV(svr, PARAM_GRID, scoring=my_scorer, cv=2)
clf.fit(X, y)
Expected Results
Params: {'kernel': 'linear', 'C': 1, 'verbose': False, 'probability': False, 'degree': 3, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 'auto', 'class_weight': None} F1: 0.568181818182 P: 0.547445255474 R: 0.590551181102
Params: {'kernel': 'linear', 'C': 10, 'verbose': False, 'probability': False, 'degree': 3, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 'auto', 'class_weight': None} F1: 0.609022556391 P: 0.586956521739 R: 0.6328125
Params: {'kernel': 'linear', 'C': 10, 'verbose': False, 'probability': False, 'degree': 3, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 'auto', 'class_weight': None} F1: 0.497991967871 P: 0.508196721311 R: 0.488188976378
Actual Results
Params: {'kernel': 'linear', 'C': 1, 'verbose': False, 'probability': False, 'degree': 3, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 'auto', 'class_weight': None} F1: 0.606060606061 P: 0.588235294118 R: 0.625
Params: {'kernel': 'linear', 'C': 1, 'verbose': False, 'probability': False, 'degree': 3, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 'auto', 'class_weight': None} F1: 0.996078431373 P: 0.9921875 R: 1.0
Params: {'kernel': 'linear', 'C': 1, 'verbose': False, 'probability': False, 'degree': 3, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 'auto', 'class_weight': None} F1: 0.568181818182 P: 0.547445255474 R: 0.590551181102
Params: {'kernel': 'linear', 'C': 1, 'verbose': False, 'probability': False, 'degree': 3, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 'auto', 'class_weight': None} F1: 0.996108949416 P: 0.992248062016 R: 1.0
Params: {'kernel': 'linear', 'C': 10, 'verbose': False, 'probability': False, 'degree': 3, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 'auto', 'class_weight': None} F1: 0.609022556391 P: 0.586956521739 R: 0.6328125
Params: {'kernel': 'linear', 'C': 10, 'verbose': False, 'probability': False, 'degree': 3, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 'auto', 'class_weight': None} F1: 1.0 P: 1.0 R: 1.0
Params: {'kernel': 'linear', 'C': 10, 'verbose': False, 'probability': False, 'degree': 3, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 'auto', 'class_weight': None} F1: 0.497991967871 P: 0.508196721311 R: 0.488188976378
Params: {'kernel': 'linear', 'C': 10, 'verbose': False, 'probability': False, 'degree': 3, 'shrinking': True, 'max_iter': -1, 'decision_function_shape': None, 'random_state': None, 'tol': 0.001, 'cache_size': 200, 'coef0': 0.0, 'gamma': 'auto', 'class_weight': None} F1: 1.0 P: 1.0 R: 1.0
Versions
Linux-4.4.0-22-generic-x86_64-with-Ubuntu-16.04-xenial
('Python', '2.7.12 (default, Jul 1 2016, 15:12:24) \n[GCC 5.4.0 20160609]')
('NumPy', '1.11.2')
('SciPy', '0.18.1')
('Scikit-Learn', '0.18')
('Joblib', '0.10.3')