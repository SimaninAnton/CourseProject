Contributor
mhavard999 commented on May 1, 2015
This is the docstring for get from api.py:
    """Sends a GET request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    """
So when someone does help(requests.get) they won't see anything about the optional kwarg params used to attach query string parameters to the request. If they're extra clever, they'll understand what "Optional arguments that request takes" mean and do help(requests.request), which then explains the params kwarg parameter. Note that the docstring of requests.post mentions data and json, even though those params are explained in the docstring of requests.requests. Since query string parameters are as relevant to GET requests as body and json parameters are to POST requests, should the requests.get be changed to:
def get(url, params=None, **kwargs):
    """Sends a GET request.

    :param url: URL for the new :class:`Request` object.
    :param params: (optional) Dictionary or bytes to be sent in the query string for the :class:`Request`.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    """

    kwargs.setdefault('allow_redirects', True)
    return request('get', url, params=params, **kwargs)
Current version for reference:
def get(url, **kwargs):
    """Sends a GET request.

    :param url: URL for the new :class:`Request` object.
    :param \*\*kwargs: Optional arguments that ``request`` takes.
    :return: :class:`Response <Response>` object
    :rtype: requests.Response
    """

    kwargs.setdefault('allow_redirects', True)
    return request('get', url, **kwargs)