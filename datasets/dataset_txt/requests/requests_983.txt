rasgo-cc commented on Aug 8, 2016
Hi,
I'm using Requests to send data to a Firebase database. Data contained in the JSON file is UTF-8 encoded. I'm sending that data as follows:
data_to_send = json.dumps(data).encode("utf-8")
request_object = self.requests.put(request_ref, headers=headers, data=data_to_send)
But this is sent as "latin-1" text no matter what, because the underlying HTTP client library always sends the body's text with that encoding.
        if isinstance(body, str):
            # RFC 2616 Section 3.7.1 says that text default has a
            # default charset of iso-8859-1.
            body = _encode(body, 'body')
This results on weird characters displayed on my website.
If instead of:
data_to_send = json.dumps(data).encode("utf-8")
or
data_to_send = json.dumps(data, ensure_ascii=False).encode("utf-8")
I do this:
data_to_send = json.dumps(data, ensure_ascii=False)
Then, HTTP client library throws this error:
"client.py", line 1150, in _send_request
    body = _encode(body, 'body')
  File "C:\Users\mribeiro\AppData\Local\Programs\Python\Python35-32\lib\http\client.py", line 161, in _encode
    (name.title(), data[err.start:err.end], name)) from None
UnicodeEncodeError: 'latin-1' codec can't encode character '\u2030' in position 164: Body ('â–’') is not valid Latin-1. Use body.encode('utf-8') if you want to send it encoded in UTF-8.
So, how am I supposed to POST UTF-8 encoded data using Requests?