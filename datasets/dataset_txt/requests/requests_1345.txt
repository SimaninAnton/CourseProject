EliRibble commented on Aug 1, 2015
Here's my minimal reproducing script:
Your branch is behind 'origin/master' by 1 commit, and can be fast-forwarded.
#!/usr/bin/env python
import requests

url = 'https://prod-vision-analysis.s3.amazonaws.com/3ad6c771-52aa-4a1a-b2b6-6cdb17068321-40-real?Signature=khZjzyCjahKuK7z0QFrLhdIP6iE%3D&Expires=1438388766&AWSAccessKeyId=AKIAJEDT3K6WCNEGLKTA'

data = 190079 # works
data = 190080 # does not
image = b'1' * data
requests.put(url, data=image[:data], headers={'Content-Type': 'image/png'}, timeout=60, verify=False)
Executing that script, provided my signed S3 URL doesn't expire, will cause the following stack trace on my mac:
/usr/local/lib/python2.7/site-packages/requests/packages/urllib3/connectionpool.py:768: InsecureRequestWarning: Unverified HTTPS request is being made. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.org/en/latest/security.html
  InsecureRequestWarning)
Traceback (most recent call last):
  File "./test-upload.py", line 9, in <module>
    requests.put(url, data=image[:data], headers={'Content-Type': 'image/png'}, timeout=60, verify=False)
  File "/usr/local/lib/python2.7/site-packages/requests/api.py", line 122, in put
    return request('put', url, data=data, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/requests/api.py", line 50, in request
    response = session.request(method=method, url=url, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/requests/sessions.py", line 465, in request
    resp = self.send(prep, **send_kwargs)
  File "/usr/local/lib/python2.7/site-packages/requests/sessions.py", line 573, in send
    r = adapter.send(request, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/requests/adapters.py", line 415, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', error(14, 'Bad address'))
If I change the script to use 190079 rather than 190080 for the data length the request goes through just fine.
If I change the script to not have a timeout the request goes through just fine
If I change the script to set the timeout to be any other value, anything at all, it will still fail. It just has to be non-zero and non-None and long enough that the request can reasonably go through