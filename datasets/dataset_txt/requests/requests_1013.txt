huoneefi commented on Jul 14, 2016
In an application, I can't use DNS resolving. So I request the IP address directly while setting the host header (vhosts). In this case, SSL certificate validation (/SNI) doesn't work properly because it doesn't respect the explicitly set host header:
Python 2.7.11:
>>> import requests
>>> requests.__version__
'2.10.0'
>>> requests.get(url="http://example.org")
<Response [200]>
>>> requests.get(url="https://example.org")
<Response [200]>
>>> requests.get(url="http://93.184.216.34", headers={"Host": "example.org"})
<Response [200]>
>>> requests.get(url="https://93.184.216.34", headers={"Host": "example.org"})
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "[...]/requests/api.py", line 71, in get
    return request('get', url, params=params, **kwargs)
  File "[...]/requests/api.py", line 57, in request
    return session.request(method=method, url=url, **kwargs)
  File "[...]/requests/sessions.py", line 475, in request
    resp = self.send(prep, **send_kwargs)
  File "[...]/requests/sessions.py", line 585, in send
    r = adapter.send(request, **kwargs)
  File "[...]/requests/adapters.py", line 477, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: hostname '93.184.216.34' doesn't match either of 'www.example.org', 'example.com', 'example.edu', 'example.net', 'example.org', 'www.example.com', 'www.example.edu', 'www.example.net'