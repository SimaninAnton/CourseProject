correcthorsebatterystaple- commented on Apr 5, 2016
Hi there,
First off, Requests is awesome. Thank you for the great library!
I'm writing a script that places a series of requests and manually follows some redirects, and one of the redirects is to a URL that starts with "HTTPS" (that is, the protocol is uppercase, like HTTPS://www.example.com instead of https://www.example.com). It would seem that Requests generates the wrong request when the following three conditions are met:
The protocol is HTTPS.
The protocol contains one or more uppercase letters. (e.g. "HTTPS", "httpS", "hTTps", "Https", etc.)
Proxies are being used.
I wrote a test script that uses a Session to GET www.example.com with variations in case for both http and https protocols, and here are the results:
proto proxies result
http no [OK]
htTp no [OK]
HTTP no [OK]
https no [OK]
HTTPS no [OK]
htTps no [OK]
httpS no [OK]
Https no [OK]
http YES [OK]
htTp YES [OK]
HTTP YES [OK]
https YES [OK]
HTTPS YES [ERROR]
htTps YES [ERROR]
httpS YES [ERROR]
Https YES [ERROR]
In the ERROR case, my proxy (Burp) was generating the following error:
Error
Invalid client request received: First line of request did not contain an absolute URL - try enabling invisible proxy support.
GET / HTTP/1.1
Host: localhost:8080
Connection: keep-alive
Accept-Encoding: gzip, deflate
Accept: /
User-Agent: python-requests/2.9.1
The issue can be replicated with the following couple lines of code:
import requests
requests.request('GET', 'HTTPS://www.example.com/test', proxies=dict(http='localhost:8080', https='localhost:8080'))
What happens will depend on your proxy. With Burp, when errors are given back as valid HTTP responses, the above will result in a 200 OK response object, and when you inspect the content of the response, you'll see Burp's error. However, if you suppress Burp errors, then Burp returns an empty response, causing requests to raise a ConnectionError exception:
requests.exceptions.ConnectionError: ('Connection aborted.', BadStatusLine("''",))
Thank you for your time!
Best Regards,
-Justin