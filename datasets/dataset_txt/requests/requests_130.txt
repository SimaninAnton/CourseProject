ghost commented on Dec 19, 2018 •
edited by ghost
Here is my situation:
When I use a for loop to login some REST-Web site for about 100 ~500 times, if I use requests.post method to lanch my request, requests freamwork is aways issuing the titled Bug. code as follow:
# coding: UTF-8  
"""
@Author:    ITACHY
@Contact:   zongliangzhu@ecarx.com.cn 
@CreateTime:2018/12/19 17:26
"""
import datetime
import uuid
import requests


def login_test(num):
    start = datetime.datetime.now()
    url = XXXXX
    uid = str(uuid.uuid4())
    body = {
        "type": "login",
        "clientinfo":
            {
                "deviceid": uid,
                "uid": uid,
                "timezone": "Asia/Shanghai",
                "osFamily": "ANDROID",
                "osVersion": "22",
                "deviceType": "MOBILE",
                "deviceModel": "1.0",
                "appVersion": "1.0.0-SNAPSHOT",
                "location":
                    {
                        "longitude": 116.407394,
                        "latitude": 39.904211,
                        "type": "GCJ02"
                    }
            }
    }
    header = {
        'Content-Type': 'application/json; charset=UTF-8',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36'
    }
    # response = requests.post(url, json = body, headers = header)
    response = requests.post(url, json = body, headers = header)
    if response.status_code == 200:
        result = response.json()
        print('Count: {}, Result: {}'.format(num, result))
        if result["code"] == 0:
            due = datetime.datetime.now() - start
            print('Count: {}, Uid: {}, Token: {}, Time； {}, '.format(str(i), uid, result["data"]["accessToken"], str(due)))
        else:
            due = datetime.datetime.now() - start
            print('Count: {}, Uid: {}, Response: {}, Time: {}, '.format(str(i), uid, result, str(due)))
    else:
        print('Count: {}, Login failed. Code: {}, Msg: {}'.format(num, response.status_code, response.text))


if __name__ == '__main__':

    for i in range(500):
        login_test(i)
But when I change my code to following:
# coding: UTF-8
"""
@Author:    ITACHY
@Contact:   zongliangzhu@ecarx.com.cn
@CreateTime:2018/12/19 17:26
"""
import datetime
import uuid
import requests


# import logging


def login(count, session):
    start = datetime.datetime.now()
    url = XXXXXXX
    uid = str(uuid.uuid4())
    body = {
        "type": "login",
        "clientinfo":
            {
                "deviceid": uid,
                "uid": uid,
                "timezone": "Asia/Shanghai",
                "osFamily": "ANDROID",
                "osVersion": "22",
                "deviceType": "MOBILE",
                "deviceModel": "1.0",
                "appVersion": "1.0.0-SNAPSHOT",
                "location":
                    {
                        "longitude": 116.407394,
                        "latitude": 39.904211,
                        "type": "GCJ02"
                    }
            }
    }
    header = {
        'Content-Type': 'application/json; charset=UTF-8',
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36'
    }
    # try:
    # response = requests.post(url, json = body, headers = header)
    response = session.post(url, json = body, headers = header)
    if response.status_code == 200:
        result = response.json()
        # print(result)
        if result["code"] == 0:
            due = datetime.datetime.now() - start
            print('Count: {}, Uid: {}, Token: {}, Time； {}, '.format(str(count), uid, result["data"]["accessToken"], str(due)))
        else:
            due = datetime.datetime.now() - start
            print('Count: {}, Uid: {}, Response: {}, Time: {}, '.format(str(count), uid, result, str(due)))
    else:
        print('Login failed. Code: {}, Msg: {}'.format(response.status_code, response.text))
    # except Exception as e:
    #     print(e)


if __name__ == '__main__':
    with requests.Session() as session:
        for i in range(5000):
            login(i, session)
There everything goes well, I think the second way just create only ONE session and the First create lots of sessions, please check it. Thanks in advance if anyone could confirm it.
BTW: The server is behind an Apache NGINX.