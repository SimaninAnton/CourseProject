jayesh92 commented on Jan 17, 2018 •
edited
I have an API which returns Chunked response. As per the requests documentation I'm reading using iter_content with chunk_size as None.
Documentation Referenced: http://docs.python-requests.org/en/master/user/advanced/#chunk-encoded-requests
Sample Code:
import time
import requests


def get_chunked_response():
    session = requests.Session()
    chunked_response = session.post(
        URL,
        json={},
        stream=True,
        timeout=(60, 60))

    assert chunked_response.headers['Transfer-Encoding'] == 'chunked'

    return chunked_response


def stich_dashboards(chunked_response):
    chunks_read = 0
    output = ''
    for chunk in chunked_response.iter_content(chunk_size=None,
                                               decode_unicode=False):
        chunks_read += 1
        output += chunk
        time.sleep(0.001)

    print "Total Chunks read {0}, Output size {1}".format(
        chunks_read, len(output))


chunks = get_chunked_response()
stich_dashboards(chunks)
Output
 jlahori@jlahori-ld2 ~  while [ 1 ]; do python test_requests.py; done
Total Chunks read 109771, Output size 444895380
Total Chunks read 117570, Output size 476956539
Total Chunks read 97814, Output size 395584817
Total Chunks read 116737, Output size 472958565
Why should I get different output sizes each time ?
However when I remove the time.sleep(0.001) from the code, I see the output size is consistent however, number of chunks read still differ.
Output with this change:
 jlahori@jlahori-ld2 ~  while [ 1 ]; do python test_requests.py; done
Total Chunks read 176138, Output size 715589558
Total Chunks read 176012, Output size 715589558
Total Chunks read 176225, Output size 715589558
Total Chunks read 176161, Output size 715589558
jlahori@jlahori-ld2 ~  pip freeze | grep requests
requests==2.18.4
curl to the server always returns the same received size.
 jlahori@jlahori-ld2 ~  while [ 1 ]; do curl -i -X POST <URL> -d '{}' --raw > ~/out; done
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  628M    0  628M    0     2   142M      0 --:--:--  0:00:04 --:--:--  145M
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  628M    0  628M    0     2   140M      0 --:--:--  0:00:04 --:--:--  143M
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  628M    0  628M    0     2   137M      0 --:--:--  0:00:04 --:--:--  137M
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
100  628M    0  628M    0     2   145M      0 --:--:--  0:00:04 --:--:--  146M
Any helps on this issue would be much appreciated. Thanks !