robcowie commented on Jul 9, 2013
I've just been scratching my head whilst trying to figure out how to create a Request() instance independently of a session and have that session 'prepare' it by augmenting it with the session context (cookies etc.) before sending it. Looks like it isn't possible without custom transports (described in #1280)
My use case is thus...
My code is provided with a session, constructed elsewhere. Typically it has auth cookies.
One of several functions that build and return an unprepared request instance are selected at run time and called. The request is then potentially manipulated by yet more code, also determined by run-time conditions.
The request is prepared - in the context of the existing session - and sent.
Currently this is not possible. I am required to manually add cookies and other session-borne context to the request before preparing it and passing to session.send(). It therefore seems difficult to separate session creation and request creation.
It would be nice to have some way of providing an unprepared request to a session and have the session prepare it. Something like...
response = Session().send(unprepared_request)
# or...
s = Session()
request = s.prepare(unprepared_request)
s.send(request)
# or...
Session().request(method, uri, return_response=true, **kargs)
It appears that similar requests have been declined in the past. I'd like to re-open the discussion if possible. If there is still no appetite for it, I'll have to maintain a fork I guess. Rather that than complicate matters with custom transports.