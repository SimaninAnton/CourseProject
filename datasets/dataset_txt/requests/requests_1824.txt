Contributor
jaraco commented on Feb 11, 2014
Consider this script:
import logging

import requests

def setup_requests_logging(level):
    requests_log = logging.getLogger("requests.packages.urllib3")
    requests_log.setLevel(level)
    requests_log.propagate = True

    # enable debugging at httplib level
    requests.packages.urllib3.connectionpool.HTTPConnection.debuglevel = level <= logging.DEBUG

logging.basicConfig(level=logging.DEBUG)
setup_requests_logging(logging.getLogger().level)

requests.get('http://google.com')
If I run that script on Python 3.4.0rc1, the output is clumsy and less than fully helpful:
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): google.com
send: b'GET / HTTP/1.1\r\nHost: google.com\r\nAccept-Encoding: gzip, deflate, compress\r\nAccept: */*\r\nUser-Agent: python-requests/2.2.1 CPython/3.4.0b3 Windows/8\r\n\r\n'
reply: 'HTTP/1.1 301 Moved Permanently\r\n'
DEBUG:requests.packages.urllib3.connectionpool:"GET / HTTP/1.1" 301 219
INFO:requests.packages.urllib3.connectionpool:Starting new HTTP connection (1): www.google.com
header: Location header: Content-Type header: Date header: Expires header: Cache-Control header: Server header: Content-Length header: X-XSS-Protection header: X-Frame-Options header: Alternate-Protocol send: b'GET / HTTP/1.1\r\nHost: www.google.com\r\nUser-Agent: python-requests/2.2.1 CPython/3.4.0b3 Windows/8\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, compress\r\n\r\n'
reply: 'HTTP/1.1 200 OK\r\n'
DEBUG:requests.packages.urllib3.connectionpool:"GET / HTTP/1.1" 200 None
header: Date header: Expires header: Cache-Control header: Content-Type header: Set-Cookie header: Set-Cookie header: P3P header: Server header: X-XSS-Protection header: X-Frame-Options header: Alternate-Protocol header: Transfer-Encoding
Note, that formatting is how the output is logged. Header names are printed but not their values, and there's only a space following the name. It would be much preferable if the headers were printed line-by-line with their values, or if they were printed as a repr(dict) or json representation. As they are, the output isn't very helpful.