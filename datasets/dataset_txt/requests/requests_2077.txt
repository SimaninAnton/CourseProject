Contributor
chinux23 commented on Jun 25, 2013
 rv = decoder.decode('', final=True) should be
 rv = decoder.decode(b'', final=True)
otherwise, this fails:
import codecs
decoder = codecs.getincrementaldecoder("utf-8")(errors='replace')
rv = decoder.decode('', final=True)
Traceback:
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-21-86c335a3edfc> in <module>()
----> 1 rv = decoder.decode('', final=True)

/Users/chen/Virtualenvs/python3Env/lib/python3.3/codecs.py in decode(self, input, final)
    297     def decode(self, input, final=False):
    298         # decode input (taking the buffer into account)
    --> 299         data = self.buffer + input
    300         (result, consumed) = self._buffer_decode(data, self.errors, final)
    301         # keep undecoded input until the next call

TypeError: can't concat bytes to str
Original Code attached:
def stream_decode_response_unicode(iterator, r):
    """Stream decodes a iterator."""

    if r.encoding is None:
        for item in iterator:
            yield item
        return

    decoder = codecs.getincrementaldecoder(r.encoding)(errors='replace')
    for chunk in iterator:
        rv = decoder.decode(chunk)
        if rv:
            yield rv
    rv = decoder.decode('', final=True)
    if rv:
        yield rv