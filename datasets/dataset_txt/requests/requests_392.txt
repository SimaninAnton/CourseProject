ghost commented on Jan 16, 2018 â€¢
edited by ghost
I've a scraper that uses 200 threads to scrape and one thread to post data to an api with POST method.
Here's an excerpt from the log (normal behaviour with DEBUG loglevel):
06:25:44 MainThread : Before sending
06:25:46 MainThread : Resetting dropped connection: api.autosforsale.com
06:25:50 MainThread : http://api.autosforsale.com:80 "POST /acceptbulkrecords/?api_key=xxx HTTP/1.1" 200 None
06:25:50 MainThread : After sending: <Response [200]>
06:25:51 MainThread : Sent 1005. API STATUS: 200 {
And then when it's about to send another batch:
06:27:26 MainThread : Before sending
06:27:27 MainThread : Resetting dropped connection: api.autosforsale.com
There's no response in 8 hours.
I'm ok with anything that'll give a way to retry. I don't remember exactly, but I think I get this problem every now and then, although quite rarely.
The piece of code (s=Session()):
    b=BytesIO(dumps(batch).encode())
    lg.info('Before sending')
    r=s.post(API_URL, params={'api_key': API_KEY},
             files=[('files[]', ('.json', b, 'application/octet-stream'))],
             data={'source': 'cargurus', 'time_stamp': import_start},
             timeout=20
    )
    lg.info('After sending: {}'.format(r))
System Information
$ python -m requests.help
{
  "chardet": {
    "version": "3.0.4"
  },
  "cryptography": {
    "version": ""
  },
  "idna": {
    "version": "2.6"
  },
  "implementation": {
    "name": "CPython",
    "version": "3.6.3"
  },
  "platform": {
    "release": "2.6.32-696.10.3.el6.x86_64",
    "system": "Linux"
  },
  "pyOpenSSL": {
    "openssl_version": "",
    "version": null
  },
  "requests": {
    "version": "2.18.4"
  },
  "system_ssl": {
    "version": "1000105f"
  },
  "urllib3": {
    "version": "1.22"
  },
  "using_pyopenssl": false
}