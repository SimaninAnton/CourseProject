fpghost commented on May 16, 2017 •
edited
Consider the URL: https://www.sainsburys.co.uk/shop/gb/groceries/chablis/chablis-premièr-cru-brocard-75cl. This URL contains the unicode character uè. If you open in most major browsers there should be no problem, similarly cURLing like curl -L 'https://www.sainsburys.co.uk/shop/gb/groceries/chabllis-premi%C3%A8r-cru-brocard-75cl' works without issue (i.e. we request the percent encoded utf8 encoded URL).
However if we try to get this url with python requests as follows:
unicode_url = u'https://www.sainsburys.co.uk/shop/gb/groceries/chablis/chablis-premièr-cru-brocard-75cl'
r = requests.get(unicode_url)
then it will 404. At this point I considered that maybe I just need to UTF8 encode the url and pass the byte str to requests:
r =  requests.get(unicode_url.encode('utf8'))
Nope, 404 again. Finally I considered also manually doing the percent encoding (although I'm sure requests deals with this):
r = requests.get(urllib.quote(unicode_url.encode('utf8')))
Nope, it really doesn't like that.
I also tried requests.get(unicode_url.encode('latin1')) but now got a UnicodeDecodeError (presumably because requests is attempting to decode with utf8).
So how on earth can I request this URL in python-requests in python 2.7?