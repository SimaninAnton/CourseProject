Contributor
idan commented on Apr 22, 2012
Background
Auth callables, in their current incarnation, run much in the same fashion as a hookâ€”they get the request at some point after it is asked to execute itself, and may mutate it. Currently, auth callables run before the pre_request hook.
The problem with this arises with auth schemes that expect the request's information to be immutable, like OAuth, because they are signing data in the request. If the pre_request hook comes along and changes a header, the signature would no longer be valid.
I'm suggesting that we swap the order of auth and pre_request: auth would run later in the cycle, directly after pre_request.
Impact
Existing pre-request hooks which rely on the request content not changing after they run would suffer the same problems as the OAuth callable scenario described above. We'd need to document the fact that pre-request hooks do not have a guarantee of immutability if used together with some kinds of auth callables.
I don't think this is a big deal to change, but wanted to hear if anybody had some case I hadn't thought of.
Edit
Worth noting that a potential solution here is simply to document that Auth callables are the ones with no guarantees. This would allow us to leave auth callables in their current location.