Contributor
vlaci commented on Oct 1, 2012
Although, requests sends a Proxy-Connection: keep-alive header, it forcibly closes the connection after each requests.
I tracked down the issue's origin to models.py, how the connection is acquired:
if proxy and not any(map(_p.hostname.endswith, no_proxy)):
    conn = poolmanager.proxy_from_url(proxy)
vs
if self.config.get('keep_alive'):
    conn = self._poolmanager.connection_from_url(url)
else:
    conn = connectionpool.connection_from_url(url)
In the proxy case, a poolmanager is instantiated in every request, while without proxy the given self._poolmanager instance is reused.
I have a workaround for the issue via using poolmanager.ProxyManager(self._poolmanager.connection_from_url(proxy)) call instead of poolmanager.proxy_from_url(proxy) if keep_alive is configured.
If you find my solution adequate, I prepare a patch for the issue in the upcoming days.