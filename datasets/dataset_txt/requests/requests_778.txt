sharmaeklavya2 commented on Feb 8, 2017
Many functions in requests take a parameter named params. There we are supposed to pass a mapping which will be used to construct the querystring. Here is the documentation I found about it:
http://docs.python-requests.org/en/master/user/quickstart/#passing-parameters-in-urls
http://docs.python-requests.org/en/master/api/#requests.request
In none of these places there is any mention of whether it's allowed to pass non-string objects. This example shows that even ints and bools are accepted.
>>> Request(url='http://localhost', params={1: True}).prepare().url
'http://localhost/?1=True'
After some experimentation, it seems that requests can accept anything which can be converted to a string. I looked at the source code of requests.models._encode_params so I know why it's behaving like this. But is this the intended behavior?
Also, comments in the source code of requests.models._encode_params say that a list of 2-tuples is also accepted. Even this isn't mentioned in the documentation links above.
So my point is that I want to know what is the intended way of using the params parameter in requests. What can and cannot be passed in as params? Is there some existing documentation about this which I haven't been able to find? If no, this information needs to be documented somewhere.
(I'm actually trying to improve typeshed stubs for requests. Whether non-string objects are allowed in params or not will determine how to write stubs.)