Member
nateprewitt commented on Nov 13, 2016 â€¢
edited
The documentation for streaming requests supplies a code snippet (below) that hits #3359 which is also experienced in iter_lines due to its use of iter_content.
r = requests.get('http://httpbin.org/stream/20', stream=True)

for line in r.iter_lines():
    if line:
        print(json.loads(line))
Since iter_lines default is decode_unicode=False, it returns bytes causing Python 3 to barf on json.loads(lines). Unfortunately, decode_unicode=True doesn't work either because httpbin.org doesn't provide a charset in the Content-Type header.
As for fixing the example, we can manually decode line before passing it into json.loads. This exposes some of our dirty laundry though, and may give the user the wrong idea that they need to manually decode their strings in all cases.
Alternatively, we update httpbin to pass a charset with the Content-Type and change the example to use decode_unicode=True.
Edit: Moving semi-related comment to appropriate issue. (#3359)