paultiplady commented on Mar 31, 2017
If I do a request() with JSON containing unserializable types, an exception is raised from the json module.
e.g. requests.post('http://example.com', json={'time': datetime.datetime.now()})
#1380 looks vaguely related, but doesn't directly cover this.
https://docs.python.org/2/library/json.html#json.JSONEncoder seems pretty well suited for this case; if it was possible to configure the json encoder class that Requests uses, then users could supply an implementation that handles their special cases.
Should be possible to either plumb the encoder through from the request call, or make it package-level config in some way. Would you consider a patch to make the JSONEncoder that request uses configurable?
(The solution of just massaging the data is viable in many cases, but for complex dicts it is going to be quite painful.)