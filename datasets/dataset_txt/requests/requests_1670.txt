guardrex commented on Aug 21, 2014
I'm having trouble with SSL cert verification for a valid CA-signed cert ... and I can't seem to add the CA cert that I need to the cacert.pem file.
Computer: Raspberry Pi connecting to a website on IIS8/WS2012 (TLS 1.0/1.1/1.2; Note: SSL3 is not supported by this server)
OS: Arch Linux (3.12.26-1-ARCH)
Language: Python 3.4.1
Certificate Chain: my_site_cert > RapidSSL CA (Serial #: 0236d1) > GeoTrust Global CA (Serial #: 023456)
Trying to get an secure session open to some valid CA-signed endpionts (e.g,. Microsoft Azure endpoints with certificates signed by Baltimore CyberTrust Root) work fine with requests. However, attempting to open a secure connection to a website with an equally valid certificate signed by a GeoTrust Global CA fails with the invalid certificate error.
It looks like requests is using the CA bundle at:
/usr/lib/python3.4/site-packages/requests/cacert.pem
... and that bundle does contain a GeoTrust Global CA. Looking at the cert entry for the GeoTrust Global CA entry, I can see that it does not match the base64-encoded cert that I pulled down from my certificate chain. The serial numbers don't match either.
I took the base64-encoded certificate block for the one I presumably need
-----BEGIN CERTIFICATE-----
xxxxxxx
-----END CERTIFICATE-----
... and pasted it into the cacert.pem file that requests uses. I rebooted. This did not work. I'm still getting the exception:
[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:598)
What do I need to do to get my CA cert installed in such a way that requests will pick it up and grant my secure connection? The docs are too vague about the specific path to use for other ca bundles in Arch Linux (e.g., ca-certificates or openssl ca bundles), and there is no information about getting other CA certs in the right spot for requests to pick them up. I certainly don't want to run a production system with verify=False.