Arfrever commented on Oct 6, 2012
Test results from git head:
$ PYTHONPATH="$(pwd)" python3.3 tests/test_cookies.py -v
test_convert_jar_to_dict (__main__.CookieTests)
Test that keys, values, and items are defined and that we can convert ... ok
test_cookies_from_response (__main__.CookieTests)
Basic test that we correctly parse received cookies in the Response object. ... ok
test_crossdomain_cookies (__main__.CookieTests)
Cookies should not be sent to domains they didn't originate from. ... ok
test_disabled_cookie_persistence (__main__.CookieTests)
Test that cookies are not persisted when configured accordingly. ... /usr/lib64/python3.3/collections/__init__.py:55: ResourceWarning: unclosed <socket.socket object, fd=4, family=2, type=1, proto=6>
  self.__map = {}
ok
test_jar_utility_functions (__main__.CookieTests)
Test utility functions such as list_domains, list_paths, multiple_domains. ... ok
test_none_cookie (__main__.CookieTests)
Regression test: don't send a Cookie header with a string value of 'None'! ... /tmp/requests/requests/structures.py:21: ResourceWarning: unclosed <socket.socket object, fd=3, family=2, type=1, proto=6>
  self._lower_keys = dict((k.lower(), k) for k in list(self.keys()))
ok
test_overwrite (__main__.CookieTests)
Cookies should get overwritten when appropriate. ... ok
test_redirects (__main__.CookieTests)
Test that cookies set by a 302 page are correctly processed. ... ok
test_secure_cookies (__main__.CookieTests)
Test that secure cookies can only be sent via https. ... ERROR
test_cookiejar_persistence (__main__.LWPCookieJarTest)
Test that we can save cookies to a FileCookieJar. ... ok
test_crossdomain (__main__.LWPCookieJarTest)
Test persistence of the domains associated with the cookies. ... ok
test_persistent_cookies (__main__.LWPCookieJarTest)
Test that we correctly interpret persistent cookies. ... ok
test_cookiejar_persistence (__main__.MozCookieJarTest)
Test that we can save cookies to a FileCookieJar. ... ok
test_crossdomain (__main__.MozCookieJarTest)
Test persistence of the domains associated with the cookies. ... ok
test_persistent_cookies (__main__.MozCookieJarTest)
Test that we correctly interpret persistent cookies. ... ok

======================================================================
ERROR: test_secure_cookies (__main__.CookieTests)
Test that secure cookies can only be sent via https.
----------------------------------------------------------------------
Traceback (most recent call last):
  File "tests/test_cookies.py", line 99, in test_secure_cookies
    secure_resp = requests.get('https://httpbin.org/cookies', cookies=cookies, verify=False)
  File "/tmp/requests/requests/api.py", line 65, in get
    return request('get', url, **kwargs)
  File "/tmp/requests/requests/safe_mode.py", line 39, in wrapped
    return function(method, url, **kwargs)
  File "/tmp/requests/requests/api.py", line 51, in request
    return session.request(method=method, url=url, **kwargs)
  File "/tmp/requests/requests/sessions.py", line 241, in request
    r.send(prefetch=prefetch)
  File "/tmp/requests/requests/models.py", line 605, in send
    cookie_header = get_cookie_header(self.cookies, self)
  File "/tmp/requests/requests/cookies.py", line 115, in get_cookie_header
    jar.add_cookie_header(r)
  File "/usr/lib64/python3.3/http/cookiejar.py", line 1328, in add_cookie_header
    cookies = self._cookies_for_request(request)
  File "/usr/lib64/python3.3/http/cookiejar.py", line 1254, in _cookies_for_request
    cookies.extend(self._cookies_for_domain(domain, request))
  File "/usr/lib64/python3.3/http/cookiejar.py", line 1243, in _cookies_for_domain
    if not self._policy.return_ok(cookie, request):
  File "/usr/lib64/python3.3/http/cookiejar.py", line 1077, in return_ok
    if not fn(cookie, request):
  File "/usr/lib64/python3.3/http/cookiejar.py", line 1103, in return_ok_secure
    if cookie.secure and request.type != "https":
AttributeError: 'MockRequest' object has no attribute 'type'

----------------------------------------------------------------------
Ran 15 tests in 21.789s

FAILED (errors=1)