za-creature commented on Jun 2, 2014
From my understanding, the point of requests.Session is that it emulates what a dumb* browser does when asked to render a webpage. This means keeping cookies, following redirects and in my opinion, setting the HTTP "Referer" header.
The Session class doesn't seem to touch neither the referer header nor it's properly spelled variant. I consider this to be non-pythonic because both the documentation as well as the "Session" class name suggest that all requests in a session are performed sequentially, and each individual request may update the state of the session by setting cookies, or by returning 3xx responses which in turn forward the session to a different URL.
As such, I propose setting a default value for the "referer" header (perhaps setting the properly spelled "referrer" header as well for future-proofing) to the final form of the most recently executed request. This seems to be consistent with the way cookies are handled in that performing a request will automatically parse and update any cookies in the jar. Since this will break backwards compatibility (for a few servers, an undefined referrer is better than a wrong one), this should probably be implemented pending a check to Session.follow_referrer which should default to False.
I can create a patch for this if the package maintainer agrees that this is a bug.
By dumb I mean a browser incapable of rendering images, executing scripts or handling stylesheets and limited to just parsing and rendering HTML, which is arguably what most robots do.
üëç 5
üéâ 3