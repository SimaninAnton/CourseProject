Contributor
PascalVA commented on Aug 25, 2017 â€¢
edited
The problem
When using requests sessions to connect to a https website with a self signed certificate, requests throws a SSLError. It is working pefectly fine when using requests without sessions.
What I am using:
python2.7
requests (2.18.4)
exported REQUESTS_CA_BUNDLE environment variable
Imported certificate to ca-certificates on underlying Debian os
Note: The certificate validates more than one hostname (e.g. kubernetes, kubernetes.default, kubernets.default.svc, kubernetes.default.svc.cluster.local, ...)
Steps to reproduce
# Normal request
import requests
requests.get('https://kubernetes.default.svc')
<Response [401]>

# Session request
s = requests.Session()
request = requests.Request('GET', 'https://kubernetes.default.svc')
prepared_request = s.prepare_request(request)
response = s.send(prepared_request)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/local/lib/python2.7/site-packages/requests/sessions.py", line 612, in send
    r = adapter.send(request, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/requests/adapters.py", line 504, in send
    raise ConnectionError(e, request=request)
requests.exceptions.ConnectionError: HTTPSConnectionPool(host='kubernetes.default.svc', port=443): Max retries exceeded with url: / (Caused by SSLError(SSLError(1, u'[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:661)'),))