jcfrank commented on Apr 9, 2014 •
edited
Test Script
Send a muli-part post file request with custom boundary.
import requests
import os.path

filepath = '/tmp/test.tgz'

with open(filepath, 'rb') as f:
    files = {'file':f}
    headers = {'Content-Type':'multipart/form-data;boundary=***someboundary***'}
    r = requests.post('http://127.0.0.1:56500/', files=files, headers=headers)
Actual Result
$ nc -p 56500 -l
POST / HTTP/1.1
Host: 127.0.0.1:56500
Accept-Encoding: gzip, deflate, compress
User-Agent: python-requests/2.2.1 CPython/3.4.0 Linux/3.8.0-35-generic
Content-Length: 277
Content-Type: multipart/form-data;boundary=***someboundary***
Accept: */*

--84989444e2484915a216e1718e0f93f0
Content-Disposition: form-data; name="file"; filename="test.tgz"

VlES�
��aws9���"ـ����E�)f��i�>.!;қ�>1ܼ5��I�<���Q���|lf���S���~    �8�C
--84989444e2484915a216e1718e0f93f0--
Expected Result
$ nc -p 56500 -l
POST / HTTP/1.1
Host: 127.0.0.1:56500
Accept-Encoding: gzip, deflate, compress
User-Agent: python-requests/2.2.1 CPython/3.4.0 Linux/3.8.0-35-generic
Content-Length: 277
Content-Type: multipart/form-data;boundary=***someboundary***
Accept: */*

--***someboundary***
Content-Disposition: form-data; name="file"; filename="test.tgz"

VlES�
��aws9���"ـ����E�)f��i�>.!;қ�>1ܼ5��I�<���Q���|lf���S���~    �8�C
--***someboundary***--
'boundary' is a parameter required by multipart entities. However, when I specify the custom boundary in headers, the sent request still uses generated boundary. It dosen't help even if I remove the 'boundary=...' part.
The only way to avoid this issue is to not specify the custom Content-Type as multipart in headers and let the scripts themselves generate it.
I am new to this package and the issue got me stuck for hours. So... maybe there should be a warning about this in document or maybe the customized boundary part should be implemented?
👍 3
❤️ 2