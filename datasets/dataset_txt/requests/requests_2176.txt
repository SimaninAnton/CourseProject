Anorov commented on Mar 10, 2013
I'm currently working on integrating SOCKS proxies into urllib3 (see: urllib3/urllib3#68 (comment)), and this is a minor change that I think could be useful. Idea was obtained from here: #1192 (comment)
I feel the proxies keyword argument to Session() should accept a plain string URL in addition to the current dict-of-URLs option ({"http": "...", "https": "..."}). In the case of a string being passed, that proxy would be used regardless of the destination URL scheme.
Original:
requests.get(url, proxies={"http": "http://1.1.1.1:8080"})
(Proxy would only be used for "http://website.com").
Proposed:
requests.get(url, proxies="http://1.1.1.1:8080")
(Proxy would be used for "https://website.com" and "http://website.com").
Both would be permitted.
It's very common for users to only specify one proxy. After SOCKS proxies become supported, this will become even more common because SOCKS proxies can handle every kind of connection (an FTP destination, HTTP, HTTPS, etc.). So if a user is using a SOCKS proxy, it doesn't really make sense to specify multiple proxies in a dict. Use of a SOCKS5 proxy would look as follows: requests.get(url, proxies="socks5://1.1.1.1:1080")
This would not break the old API in any way, just add a new way of setting a proxy. The only disadvantage is that it creates a bit of a naming mismatch, since proxies is plural. I think it would be sillier to create a new proxy parameter, though (unless proxy simply became an alias for proxies).