Humbertzhang commented on Nov 29, 2017 â€¢
edited
When I use requests, I find that you can't let requests stop when redirected a fixed times.
But I think someone(like me) will need headers or something else among those redirections.
Expected Result
If I set a flag to let requests.session stop when it comes to the max redirection limit, and then, It won't raise a TooManyRedirects, but will stop and let you could get the headers or anything in this request.
Actual Result
It will raise a TooManyRedirects Exception.
Reproduction Steps
It will work like that:
import requests

session  = reqeusts.Session()
session.max_redirects = 3
session.stopflag = True    # flag that will let redirects stop when it comes to max redirect time.
r = session.get(will_redirect_many_times_url)    # it will stop when redirect 3 times
# And then I can get the infomation at this request.
h = r.headers
Actually I modified my requests a little bit,
I add that code:
if i == self.max_redirects:
    break
before:
if i >= self.max_redirects:
    raise TooManyRedirects('Exceeded %s redirects.' % self.max_redirects)
At requests/session.py at 113 lines
and It will stop when comes to max redirect limit.
System Information
$ python -m requests.help
{
  "chardet": {
    "version": "3.0.4"
  }, 
  "cryptography": {
    "version": "1.2.3"
  }, 
  "idna": {
    "version": "2.6"
  }, 
  "implementation": {
    "name": "CPython", 
    "version": "2.7.12"
  }, 
  "platform": {
    "release": "4.4.0-98-generic", 
    "system": "Linux"
  }, 
  "pyOpenSSL": {
    "openssl_version": "1000207f", 
    "version": "0.15.1"
  }, 
  "requests": {
    "version": "2.18.4"
  }, 
  "system_ssl": {
    "version": "1000207f"
  }, 
  "urllib3": {
    "version": "1.22"
  }, 
  "using_pyopenssl": true
}