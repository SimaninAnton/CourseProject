Contributor
rhyselsmore commented on Aug 26, 2012
As per the RFC (RFC2616), the "OPTIONS" method is used to identify communication options on the request/response chain.
Within a RESTful System, the OPTIONS method can be used to display which methods are allowed for the authenticated user.
Typically they are returned as comma-seperated values within the 'Allow' header.
e.g Allow: GET, POST, PUT
These non-cacheable headers allow for a client to discover the methods available against a resource.
I am proposing that the allow headers are parsed if available, and presented within a pragmatic and pythonic way.
Here are my thoughts so far (note that the github API does not support options for any of the methods I tried, this is all theoretical):
a = requests.options('https://github.com')
a.allow('get')
True
a.allow('post')
False
Some key things to think of:
Some API will not return allow headers when options is called.
Should this parsing be available only for the options call. Within a RESTful architecture no other method should return the "Allow" header.
All comparisons should be completed on lowercase strings.
Can I get your thoughts around introducing this header parsing for the OPTIONS method?