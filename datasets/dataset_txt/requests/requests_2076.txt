yieldsfalsehood commented on Jun 26, 2013
With an environment like this (assuming the server's certificate is in whatever bundle being referenced):
REQUESTS_CA_BUNDLE=/etc/ssl/certs/ca-certificates.crt
This code block works fine, and it fails expectedly if the certificate is missing from the bundle above.
>>> requests.get('https://some-domain')
This code block fails, throwing a "certificate verify failed" exception.
>>> s = requests.Session()
>>> req = requests.Request('GET', 'https://some-domain')
>>> s.send(req)
The first block calls Session.request, which creates a request object then passes it to the session's send method. In Session.request there's logic to try populating the value of verify with REQUESTS_CA_BUNDLE from the environment. Whatever value winds up in verify is then handed off to the session's send method.
In the second block, manually calling the send method doesn't allow for that environment lookup logic to be called. It seems like it'd be more consistent and convenient moving that logic to the adapter's cert_verify method.