Contributor
derlin commented on Jul 24, 2018
I get encoding issues when extracting text from some URLs, for example this one. After some digging, it seems that although the headers dictionary is case-insensitive, the parsing of the content-type header entry is not. For example, if the server sends:
text/html; Charset=UTF-8
Because of the uppercase C, response.encoding returns the default ISO-8859-1 instead of UTF-8.
Expected Result
r.encoding should return utf-8, as it is stated in the content-type header.
Actual Result
r.encoding returns the defaultISO-8859-1.
Reproduction Steps
import requests
resp = requests.get("https://zuri.net/magazin/slang/33/thema_small-talk.htm")
print(resp.encoding)
System Information
$ python -m requests.help
{
  "chardet": {
    "version": "3.0.4"
  },
  "cryptography": {
    "version": ""
  },
  "idna": {
    "version": "2.7"
  },
  "implementation": {
    "name": "CPython",
    "version": "3.6.5"
  },
  "platform": {
    "release": "17.6.0",
    "system": "Darwin"
  },
  "pyOpenSSL": {
    "openssl_version": "",
    "version": null
  },
  "requests": {
    "version": "2.19.1"
  },
  "system_ssl": {
    "version": "100020ff"
  },
  "urllib3": {
    "version": "1.23"
  },
  "using_pyopenssl": false
}
Suggestion
The code responsible is in utils.py, method _parse_content_type_header. Here, either use a case-insensitive dictionary, or transform the keys to lowercase (params_dict[key.lower()] = value).