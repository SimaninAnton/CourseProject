stxlvt commented on Mar 7, 2017
Multiple places in the source code there are checks involving six.PY3, like in this example:
if not six.PY3 and isinstance(value, six.text_type):  # Python 2:
This will needlessly break on python 4 when it is eventually released. Instead, all checks should generally be on the value of six.PY2:
if six.PY2 and isinstance(value, six.text_type):  # Python 2:
(I'm not sure that there's any good use at all for the value of six.PY3. It seems like it was a mistake by the six developers to include it at all, because it encourages writing code that will break on python 4. Unlike python 3, python 4 will not be backwards incompatible, but simply the version of python after 3.9, IIRC.)