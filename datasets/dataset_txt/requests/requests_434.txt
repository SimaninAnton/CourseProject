adam-j-turner commented on Nov 29, 2017
I have a script that submits either a POST or PATCH request with a particular binary file. It fails when using PATCH but is successful using POST. Testing with Postman gives expected results.
Expected Result
Post & Patch with same content-length
Actual Result
Patch method has much smaller content-length (not sure if being calculated wrong or if the body is malformed)
Reproduction Steps
import requests

testFile = open('testfile.png', 'rb')

postResp = requests.post(
    "https://httpbin.org/post", 
    files = {'file': testFile}
)

patchResp = requests.patch(
    "https://httpbin.org/patch", 
    files = {'file': testFile}
)

print("Post content length:" + postResp.headers['content-length'])
print("Patch content length:" + patchResp.headers['content-length'])
System Information
$ python -m requests.help
{
  "chardet": {
    "version": "3.0.4"
  },
  "cryptography": {
    "version": ""
  },
  "idna": {
    "version": "2.6"
  },
  "implementation": {
    "name": "CPython",
    "version": "3.6.3"
  },
  "platform": {
    "release": "7",
    "system": "Windows"
  },
  "pyOpenSSL": {
    "openssl_version": "",
    "version": null
  },
  "requests": {
    "version": "2.18.4"
  },
  "system_ssl": {
    "version": "100020bf"
  },
  "urllib3": {
    "version": "1.22"
  },
  "using_pyopenssl": false
}
This command is only available on Requests v2.16.4 and greater. Otherwise,
please provide some basic information about your system (Python version,
operating system, &c).