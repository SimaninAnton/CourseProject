Contributor
cqpx commented on Jun 26, 2011
# *-* coding: utf-8 *-*

from flask import Flask
from flask import request
import requests

app = Flask(__name__)

@app.route('/', methods=["POST", "GET"])
def index():
    if request.method == "GET":
        return str(len( request.args.getlist('ck') ))
    else:
        return str(len( request.form.getlist('ck') ))

if __name__ == '__main__':
    app.run(host="localhost", port=7999, debug=True)
import requests
import unittest

class TE(unittest.TestCase):
    def test_url1(self):
        self.assertEqual('1', requests.get('http://localhost:7999?ck=1').read())

    def test_url3(self):
        self.assertEqual('3', requests.get('http://localhost:7999?ck=1&ck=2&ck=3').read())

    def test_get1(self):
        self.assertEqual('1', requests.get('http://localhost:7999', data={
            "ck":"1"
        }).read())

    def test_get3(self):
        self.assertEqual('3', requests.get('http://localhost:7999', data={
            "ck":"1",
            "ck":"2",
            "ck":"3",
        }).read())

    def test_post1(self):
        self.assertEqual('1', requests.post('http://localhost:7999', data={
            "ck":"1"
        }).read())

    def test_post3(self):
        self.assertEqual('3', requests.post('http://localhost:7999', data={
            "ck":"1",
            "ck":"2",
            "ck":"3",
        }).read())

if __name__ == "__main__":
    unittest.main()
.-(~/multipart)----------------------------------------------------(px@Rainbow)-
`--> nosetests -s
.F.F..
======================================================================
FAIL: test_get3 (test.TE)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/px/multipart/test.py", line 20, in test_get3
    "ck":"3",
AssertionError: '3' != '1'

======================================================================
FAIL: test_post3 (test.TE)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/px/multipart/test.py", line 32, in test_post3
    "ck":"3",
AssertionError: '3' != '1'

----------------------------------------------------------------------
Ran 6 tests in 0.427s

FAILED (failures=2)
It's related to my previous issues post..
And the origin of all my questions is
response = requests.post(url, data=oauth_request.to_postdata(), files=files).read()
oauth_request.to_postdata() will return a string of encoded url,
without files, it works great,
but if files present, requests.post will try to update a dict with a string
if self.data:
    self.files.update(self.data)