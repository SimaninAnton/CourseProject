glebourgeois commented on Oct 17, 2013
I have a question about the models module behaviour, around the text method.
When no encoding is given, there is an encoding detection, which is a good thing :
if self.encoding is None:  
    encoding = self.apparent_encoding
When an encoding is given, first try use it for decoding :
try:  
    content = str(self.content, encoding, errors='replace')  
except (LookupError, TypeError):  
    content = str(self.content, errors='replace')
What I don't understand is, when an exception occurs, why it is not tried to use the self.apparent_encoding method, to do the
content = str(self.content, errors='replace') 
in a more clever way.
It then would be something like that :
try:  
    content = str(self.content, encoding, errors='replace')  
except (LookupError, TypeError):
    encoding = self.apparent_encoding
    content = str(self.content, encoding, errors='replace')
Wouldn't it be better to try to detect the encoding instead of using locale one ?