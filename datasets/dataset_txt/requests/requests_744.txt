jgallucci32 commented on Mar 8, 2017
Currently we are using Ansible with Python 2.7 (2.7.5-34) and boto3 (1.4.4-1) to make calls against Eucalyptus using an HTTPS endpoint and some of their modules are failing with the requests modules with boto3 regarding SSL certificates. Here is the environment variables I have tried to set with no success
export REQUESTS_CA_BUNDLE=/etc/pki/tls/certs/ca-bundle.crt
export DEFAULT_CA_BUNDLE_PATH=/etc/pki/tls/certs/ca-bundle.crt
export CURL_CA_BUNDLE=/etc/pki/tls/certs/ca-bundle.crt
Here is the python error from the Ansible module
Traceback (most recent call last):
  File "/tmp/ansible_JFwCEJ/ansible_module_iam_server_certificate_facts.py", line 172, in <module>
    main()
  File "/tmp/ansible_JFwCEJ/ansible_module_iam_server_certificate_facts.py", line 163, in main
    results = get_server_certs(iam, cert_name)
  File "/tmp/ansible_JFwCEJ/ansible_module_iam_server_certificate_facts.py", line 122, in get_server_certs
    server_certs = [iam.get_server_certificate(ServerCertificateName=name)['ServerCertificate']]
  File "/usr/lib/python2.7/site-packages/botocore/client.py", line 253, in _api_call
    return self._make_api_call(operation_name, kwargs)
  File "/usr/lib/python2.7/site-packages/botocore/client.py", line 530, in _make_api_call
    operation_model, request_dict)
  File "/usr/lib/python2.7/site-packages/botocore/endpoint.py", line 141, in make_request
    return self._send_request(request_dict, operation_model)
  File "/usr/lib/python2.7/site-packages/botocore/endpoint.py", line 170, in _send_request
    success_response, exception):
  File "/usr/lib/python2.7/site-packages/botocore/endpoint.py", line 249, in _needs_retry
    caught_exception=caught_exception, request_dict=request_dict)
  File "/usr/lib/python2.7/site-packages/botocore/hooks.py", line 227, in emit
    return self._emit(event_name, kwargs)
  File "/usr/lib/python2.7/site-packages/botocore/hooks.py", line 210, in _emit
    response = handler(**kwargs)
  File "/usr/lib/python2.7/site-packages/botocore/retryhandler.py", line 183, in __call__
    if self._checker(attempts, response, caught_exception):
  File "/usr/lib/python2.7/site-packages/botocore/retryhandler.py", line 251, in __call__
    caught_exception)
  File "/usr/lib/python2.7/site-packages/botocore/retryhandler.py", line 277, in _should_retry
    return self._checker(attempt_number, response, caught_exception)
  File "/usr/lib/python2.7/site-packages/botocore/retryhandler.py", line 317, in __call__
    caught_exception)
  File "/usr/lib/python2.7/site-packages/botocore/retryhandler.py", line 223, in __call__
    attempt_number, caught_exception)
  File "/usr/lib/python2.7/site-packages/botocore/retryhandler.py", line 359, in _check_caught_exception
    raise caught_exception
botocore.vendored.requests.exceptions.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:765)
My current workaround to the problem is to replace the default certificate that comes with the requests module with my OS certificates as follows
sed -i "s/^DEFAULT_CA_BUNDLE_PATH.*/DEFAULT_CA_BUNDLE_PATH = '\/etc\/pki\/tls\/certs\/ca-bundle.crt'/" /usr/lib/python2.7/site-packages/botocore/vendored/requests/utils.py