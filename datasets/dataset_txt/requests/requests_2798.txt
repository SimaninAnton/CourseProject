pydanny commented on May 27, 2011
The specification for HTTP POST is that it has a "message body". HTML forms sticks encoded key/values representing form inputs into that message body when submitted. However, this means that currently requests.post can't accept JSON or XML message bodies, which could make it hard to use with some APIs. Therefore, I propose the following:
"""inside of requests.post method"""

if isinstance(data, dict):
    # process as existing code now handles POST
elif isinstance(data, str) or isinstance(data, unicode):
    # Stick into message body
    # Do encoding if that is what the spec demands (I'm not sure)
else:
    # raise InvalidRequestDataFormat

"""Example of implementation"""

import json

import requests

post_dict = {"hello":"world"}
r = request.post(form_url, post_dict)

post_json = json.dumps(post_dict)
r = request.post(json_url, post_json)