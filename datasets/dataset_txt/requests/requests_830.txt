mendaxi commented on Dec 15, 2016
eyo this is my first time submitting a bug report of value (i think)
so a day or so ago I discovered that when you don't get an SSL error when you do:
requests.get("revoked.badssl.com")
which isn't very good
the problem isn't with OpenSSL, opening the following fails because of the bad certificate.
openssl s_client -connect revoked.badssl.com:443
I did some digging, as I'm working with SSL in my personal project, and I think know what the issue is.
when you use the regular old' ssl.wrap_socket(), you get the same behavior, where the module flat out ignores the bad certificate. It seems the correct way to do this is to do something similar to the following:
default_context = ssl.create_default_context(purpose=ssl.Purpose.CLIENT_AUTH)
default_context.verify_mode = ssl.CERT_REQUIRED
wrapped_socket = default_context.wrap_socket(your_socket_here)
This will then create an error when you try to get the webpage.
It seems that the issue stems from here, and was somewhat referenced here
running python 3.5.2 on debian stretch with requests version 2.12.3, if that helps at all
tl;dr it seems that revoked ssl certs aren't being rejected, which could be an issue
I also wanted to thank y'all for making such an amazing python HTTP(S) module. I don't know what I would do without you guys.