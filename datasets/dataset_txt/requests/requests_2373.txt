craigholm commented on Sep 16, 2012
Importing requests adds its internal packages directory to sys.path. This causes problems on Python 3, because modules that try to use chardet end up importing requests.packages.chardet (which is incompatible with Python 3), even if a Python 3 chardet is available.
For example, beautifulsoup4:
>>> import requests
>>> import bs4
>>> bs4.BeautifulSoup(b'\xae')
Traceback (most recent call last):
  File "<pyshell#4>", line 1, in <module>
    bs4.BeautifulSoup(b'\xae')
  File "C:\Python32\lib\site-packages\bs4\__init__.py", line 169, in __init__
    self.builder.prepare_markup(markup, from_encoding))
  File "C:\Python32\lib\site-packages\bs4\builder\_lxml.py", line 68, in prepare_markup
    dammit = UnicodeDammit(markup, try_encodings, is_html=True)
  File "C:\Python32\lib\site-packages\bs4\dammit.py", line 223, in __init__
    u = self._convert_from(chardet_dammit(self.markup))
  File "C:\Python32\lib\site-packages\bs4\dammit.py", line 30, in chardet_dammit
    return chardet.detect(s)['encoding']
  File "C:\Python32\lib\site-packages\requests\packages\chardet\__init__.py", line 21, in detect
    import universaldetector
ImportError: No module named universaldetector
If you install chardet2 (the version that works with Python 3), and import that module before importing requests, it works fine:
>>> import chardet
>>> import requests
>>> import bs4
>>> bs4.BeautifulSoup(b'\xae')
<html><body><p>Â®</p></body></html>
>>> 
I reproduced this issue on Linux and Windows 7, with Python 3.2.3 and 3.3.0rc2.