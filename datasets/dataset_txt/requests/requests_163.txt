brysontyrrell commented on Oct 30, 2018
Summary
I am trying to setup backoff and retry for 429 errors in a module I'm working on.
I want to ignore any Retry-After headers that are returned by the target API. According to the requests/urllib3 documentation I've followed, the code below should work, but instead of my backoff the full 3600 seconds set in the response to http://httpstat.us/429 (which I'm testing against) is being used for the sleep.
Reproduction Steps
import logging

import requests
from requests.adapters import HTTPAdapter
from urllib3.util.retry import Retry

logging.basicConfig(level=logging.DEBUG)

session = requests.Session()
retries = Retry(
    total=3,
    backoff_factor=0.3,
    status_forcelist=[429],
    raise_on_status=False,
    respect_retry_after_header=False
)
session.mount('https://', HTTPAdapter(max_retries=retries))
session.mount('http://', HTTPAdapter(max_retries=retries))

resp = session.get('http://httpstat.us/429', timeout=5)
System Information
$ python -m requests.help
{
  "chardet": {
    "version": "3.0.4"
  }, 
  "cryptography": {
    "version": ""
  }, 
  "idna": {
    "version": "2.7"
  }, 
  "implementation": {
    "name": "CPython", 
    "version": "2.7.10"
  }, 
  "platform": {
    "release": "18.0.0", 
    "system": "Darwin"
  }, 
  "pyOpenSSL": {
    "openssl_version": "", 
    "version": null
  }, 
  "requests": {
    "version": "2.20.0"
  }, 
  "system_ssl": {
    "version": "20000000"
  }, 
  "urllib3": {
    "version": "1.24"
  }, 
  "using_pyopenssl": false
}
üëç 1