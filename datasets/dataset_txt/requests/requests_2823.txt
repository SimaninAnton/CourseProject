brunobord commented on Feb 14, 2011
sometimes, a "40x" header does not mean you don't have content in your response. In fact, that's the 2nd time I'm working on a HTTP client that has to handle content, even if the HTTP return code is different than "200". An example : a webservice that throws a "403" error (forbidden) but outputs some content - in an XML structure, for example, a reason for the error : incorrect password, unauthorized operation, etc. This result is meaningful, and it helps to debug code.
Usually, I have to create a workaround using urllib rather than urllib2 to catch the response body, even if a "40x" error is thrown.
I thought "requests" would handle this, but I've tried to request my small test webservice, and here's the result :
>>> resp = requests.post('http://my-server/webservices/stuff', {'user': 'yada', 'pass': yada'})
>>> print resp
>>> <Response [403]> # this is correct, because user/pass is wrong
>>> print resp.content
None
But in my actual response body, I've got XML (and I've checked).