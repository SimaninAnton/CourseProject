CianciuStyles commented on Apr 20, 2017
I'm trying to send a PUT request passing as the data kwarg an instance of a InMemoryUploadedFile (which is the model Django uses for uploaded files, see for reference https://docs.djangoproject.com/en/1.10/ref/files/uploads/#django.core.files.uploadedfile.InMemoryUploadedFile), like this:
files = request.FILES.getlist('file')
for uploaded_file in files:
    [...]
    requests.put(upload_url, data=uploaded_file)
The problem is that the resulting request will not have the expected Content-Length header, but the Transfer-Encoding one. I think the problem is at https://github.com/kennethreitz/requests/blob/master/requests/models.py#L492, where requests sets one header or the other based on the if length check. In the case of a stream with 0 length, the check fails and the Transfer-Encoding header gets set.
The snippet above works as intended when the file is non-empty (because the if length check passes), and also requests.put(upload_url, data=uploaded_file.read()) works (as this is not a stream anymore, but it could cause problems when reading a huge file in memory).