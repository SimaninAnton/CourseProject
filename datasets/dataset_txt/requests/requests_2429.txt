JakeAustwick commented on Jul 12, 2012
I'm going to open this here, as I believe the issue/bug is in the requests library, rather than the gevent library, as other http libs work with gevent. If you don't agree with this, feel free to close.
After importing gevent and monkeypatching the socket class, Requests simply ignores the timeout parameter. This wouldn't be a huge problem on its own, the problem is that it then defaults to never timing out, bringing the whole script to a halt if you try requesting a page that never responds, or takes a extremely long time. I don't have time right now to dig through the requests code (or likely enough Python knowledge), but the below example demonstrates the error:
Example 1:
>>> import requests
>>> from gevent import monkey
>>> monkey.patch_all(thread=False, select=False)

# This site takes a ridiculously long time to respond, so brings the whole script to a stop.
>>> requests.get('http://www.whatzonip.com/wiki9/index.php', timeout=5)
Example 2:
>>> import requests
>>> from gevent import monkey
>>> monkey.patch_all(thread=False, select=False)

# This shouldn't return a response, as should raise a TimeoutError first.
# But ignores the timeout, and returns the Response object after 10 seconds.
>>> requests.get('http://httpbin.org/delay/10', timeout=5)
<Response [200]>