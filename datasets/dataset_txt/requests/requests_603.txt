aJetHorn commented on Jun 9, 2017
I am using Requests Version: 2.11.1 catching all request exceptions like this:
except requests.exceptions.RequestException as e:
logger.debug("%s", str(e))
However, this does not catch a NewConnectionError thrown by requests.packages.urllib3.connection.HTTPConnection
The full error statement is:
ConnectionError: HTTPConnectionPool(host='REDACTED', port=27001): Max retries exceeded with url: /REDACTED (Caused by NewConnectionError('<requests.packages.urllib3.connection.HTTPConnection object at 0x6bf5a50>: Failed to establish a new connection: [Errno 111] ECONNREFUSED',))
Based off #1572, it appears that all urllib3 exceptions should be caught by requests.exceptions.RequestException and that this falls into the category of an exception leak.
Full trace:
Traceback (most recent call last):
...
File "REDACTED/app/process.py", line 399, in REDACTED
r = requests.post(url, data=json.dumps(payload), headers=headers)
File "/usr/lib/python2.7/site-packages/requests/api.py", line 110, in post
return request('post', url, data=data, json=json, **kwargs)
File "/usr/lib/python2.7/site-packages/requests/api.py", line 56, in request
return session.request(method=method, url=url, **kwargs)
File "/usr/lib/python2.7/site-packages/requests/sessions.py", line 475, in request
resp = self.send(prep, **send_kwargs)
File "/usr/lib/python2.7/site-packages/requests/sessions.py", line 596, in send
r = adapter.send(request, **kwargs)
File "/usr/lib/python2.7/site-packages/requests/adapters.py", line 487, in send
raise ConnectionError(e, request=request)
ConnectionError: HTTPConnectionPool(host='REDACTED', port=27000): Max retries exceeded with url: REDACTED (Caused by NewConnectionError('<requests.packages.urllib3.connection.HTTPConnection object at 0x6bf5a50>: Failed to establish a new connection: [Errno 111] ECONNREFUSED',))