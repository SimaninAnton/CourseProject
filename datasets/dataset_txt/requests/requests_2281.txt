Contributor
etscrivner commented on Dec 18, 2012
Running Python 2.7 on Ubuntu 12.04 with requests 1.0.2
The following line of code which performs an HTTP POST request with an attached image file breaks (worked in previous versions of requests):
[1] requests.post(url, data=data, files={'file': ('test.jpg', open('/tmp/test123.jpg', 'rb'))}, params=params)
...
UnicodeDecodeError: 'ascii' codec can't decode byte 0xff in position 1066: ordinal not in range(128)
Running this through iPDB and stepping down through the requests API the problem seems directly related to issue #444 - If you're attaching a file then it will be encoded in the final HTTP body as a series of bytes.
The problem is prepare_method in models.py:223 - which, regardless of the version of Python used, tries to unicode encode the HTTP method name in all situations. This causes urllib3 trouble when trying to come up with a final encoding. Since the file serialization behavior is handled in requests and creates HTTP requests with inconsistent encodings in some situations this seems like a bug to me.
A potential solution would be to check for attached files and leave the encoding alone when preparing a request.