jkryanchou commented on Mar 20, 2016
Hi all,
There was a issue with sending https requests via the rotating proxy service named ProxyMesh. Here is the code snippet.
  >>> import requests
  >>> auth = requests.auth.HTTPProxyAuth('foo', 'PASSWORD')
  >>> proxies = {'https': 'http://us-ca.proxymesh.com:31280'}
  >>> response = requests.get('https://example.com', proxies=proxies, auth=auth)
I couldn't get the tunnel CONNECT responses headers in the final response. While it contains the service-specified header X-ProxyMesh-IP which could be useful to requests-rate control.
http://proxymesh.com/blog/pages/proxy-server-headers.html#https
I have read source code related to https request handling, and found that requests mainly use the underlaying http library urllib3 to process http/https connections. It uses the ssl.wrap_socket() to wrap ssl suites on http connection and do some subsequent operations on the SSL Tunnel.
ref: https://github.com/kennethreitz/requests/blob/master/requests/packages/urllib3/util/ssl_.py
Is there any methods could inject or attach the CONNECT responses headers into final response returned by https requests? or some suggestions on using requests with rotating proxy services like ProxyMesh crawlera?
I wonder is there anyone have ever thought how to get the CONNECT response headers?