itaiin commented on Oct 26, 2014
Sending an https request with timeout, does not make retries when it gets a timeout.
Code:
import requests
s = requests.session()
s.mount('https://localhost:10000', requests.adapters.HTTPAdapter(max_retries = 3))
s.post('https://localhost:10000', timeout = 3)
Raises this exception (with no retries):
File "/usr/local/lib/python2.7/dist-packages/requests/sessions.py", line 498, in post
    return self.request('POST', url, data=data, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/requests/sessions.py", line 456, in request
    resp = self.send(prep, **send_kwargs)
  File "/usr/local/lib/python2.7/dist-packages/requests/sessions.py", line 559, in send
    r = adapter.send(request, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/requests/adapters.py", line 382, in send
    raise SSLError(e, request=request)
SSLError: _ssl.c:492: The handshake operation timed out
A similar request (even using the same session object) with http instead of https raises the exception Timeout: HTTPConnectionPool(host='localhost', port=10000): Read timed out. (read timeout=1) after 3 retries as expected.
This does not seem to be a general issue with ssl + retries - I've successfully used both
The problem was found on version 2.3.0 both on linux and windows, and also on the latest version - 2.4.3 (tried on linux only).