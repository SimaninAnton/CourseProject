Contributor
cdunklau commented on Apr 27, 2013
When updating a requests.sessions.Session object's headers with a differently-cased existing header name, subsequent requests made with the session object include both the default and the wrongly-cased version. This is surprising considering the docs mention the session's header dict is case insensitive.
While I would normally just think "ok, i'll just use the same casing as the default key", the examples in the docs use lowercase header names. The session header behavior also differs from the behavior of headers when supplied in the request itself with the headers kwarg:
import requests
s = requests.Session()
# Update dict as suggested by the session docs
s.headers.update({'accept': 'application/json'})
s.get('http://localhost:8080')
The request as received by the server (note "accept" and "Accept"):
GET / HTTP/1.1
Host: localhost:8080
accept: application/json
Accept-Encoding: gzip, deflate, compress
Accept: */*
User-Agent: python-requests/1.2.0 CPython/2.7.3rc2 Linux/3.2.0-4-amd64
Versus:
headers = {'accept': 'application/json'}
requests.get('http://localhost:8080', headers=headers)
Received request:
GET / HTTP/1.1
Host: localhost:8080
Accept-Encoding: gzip, deflate, compress
Accept: application/json
User-Agent: python-requests/1.2.0 CPython/2.7.3rc2 Linux/3.2.0-4-amd64
Obviously the docs are misleading, but I happen to really like the behavior demonstrated in the second request. I'm not sure how to try to fix the behavior. Perhaps a add_header method? That seems ugly though.