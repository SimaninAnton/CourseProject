VeniceBeachBum commented on May 3, 2012
I'm scripting a site that returns a redirect in response to the post of a multipart-encoded form. When I do so, I get the following exception:
File "C:\Python27\lib\site-packages\requests\sessions.py", line 259, in post
    return self.request('post', url, data=data, **kwargs)
File "C:\Python27\lib\site-packages\requests\sessions.py", line 209, in request
    r.send(prefetch=prefetch)
File "C:\Python27\lib\site-packages\requests\models.py", line 624, in send
    self._build_response(r)
File "C:\Python27\lib\site-packages\requests\models.py", line 297, in _build_response
    cert=self.cert
File "C:\Python27\lib\site-packages\requests\models.py", line 119, in __init__
    self.files, self._enc_files = self._encode_files(files)
File "C:\Python27\lib\site-packages\requests\models.py", line 346, in _encode_files
    fields = dict(self.data)
TypeError: 'NoneType' object is not iterable
Browsing through the code, I found the following snippet in models.py - _build_response:
                # Do what the browsers do if strict_mode is off...
                if (not self.config.get('strict_mode')):

                    if r.status_code in (codes.moved, codes.found) and self.method == 'POST':
                        method = 'GET'
                        data = None

                    if (r.status_code == 303) and self.method != 'HEAD':
                        method = 'GET'
                        data = None
I'm guessing that self.files should also get set to None here, so that it doesn't get re-used in the subsequent request (causing the exception).