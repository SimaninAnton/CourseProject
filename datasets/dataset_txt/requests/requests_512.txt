achapkowski commented on Sep 12, 2017
Summary.
I would like to pass multiple authentication handlers to the auth variable on requests.
In the urllib.request package when you build an opener, you can chain hanlders.
Example:
password_mgr = urllib.request.HTTPPasswordMgrWithDefaultRealm()

# Add the username and password.
# If we knew the realm, we could use it instead of None.
top_level_url = "http://example.com/foo/"
password_mgr.add_password(None, top_level_url, username, password)

handler1 = urllib.request.HTTPBasicAuthHandler(password_mgr)
handler2 = urllib.request.HTTPDigestAuthHandler(password_mgr)
# create "opener" (OpenerDirector instance)
opener = urllib.request.build_opener([handler1, handler2])

# use the opener to fetch a URL
opener.open(a_url)

# Install the opener.
# Now all calls to urllib.request.urlopen use our opener.
urllib.request.install_opener(opener)
It takes each handler in order and tried one from the list to see what will take. This will help for sites that use multiple forms of authentication or with site where you don't know the auth type.
Is there a way to do this with requests? If I pass in a list of authhandlers to the auth variable, I see the __str__ representation of the class being given in the auth part of the request.
Thank you