twiggy commented on Apr 7, 2015
As we move into the cloud world with multiple subnets failing over transparently is becoming more and more of a pain.
Many database systems for instance support the DNS entry for the server having multiple IP addresses in a set. The client is smart enough to know which IP is up and listening and failover to the other quickly.
HTTP doesn't come with such facilities, but Requests is a perfect place to add it.
Imagine website.com having a record set of 10.10.10.5/24 and 10.10.11.5/25. Imagine these are load balancers such as nginx or haproxy sitting in two distinct subnets perhaps even in two data centers.
The client is going to make web service requests of website.com. If 10.10.11.5/24 goes down the clients should make requests to 10.10.10.5/24 only.
This is more a request for peoples opinions on whether this should be added to the framework and where. Typically this kind of functionality is accomplished transparently to the web clients using a "smart" dns server with health checks among other things. IMHO I feel like that just creates complexities that could be done better and more importantly faster at the client level.
Thanks,
Eric