mzfr commented on Feb 11, 2019
I am trying to use treq for downloading a file from https://speed.hetzner.de/100MB.bin (this link is just for testing). Now if I use requests to send a get the file like
import requests
url = 'https://speed.hetzner.de/100MB.bin'
r = requests.get(url)
I get the content and checking the headers
>>> r.headers
{'Server': 'nginx', 'Date': 'Mon, 11 Feb 2019 13:51:08 GMT', 'Content-Type': 'application/octet-stream', 'Content-Length': '104857600', 'Last-Modified': 'Tue, 08 Oct 2013 11:48:13 GMT', 'Connection': 'keep-alive', 'ETag': '"5253f0fd-6400000"', 'Strict-Transport-Security': 'max-age=15768000; includeSubDomains', 'Accept-Ranges': 'bytes'}
We can see the content length i.e 104857600 but If I do the same thing with treq and then try to find the response Content-Length then it returns unknow size.
I have talked on treq mailing list and they told me
Do you have Chunked encoding
https://en.wikipedia.org/wiki/Chunked_transfer_encoding
In this case, the content length is not advertised in the response headers.
So I just wanted to know how does requests shows the content length? Is there any special function in requests that finds out the content length of such kind of files?
Thanks