PatrickDChampion commented on Feb 9, 2017
I use to use Requests and Python 2.7.6 to access a server with a REST interface. After our organization update their servers, I got the "InsecurePlatformWarning: A true SSLContext object is not available" message and then a certificate failure at the bottom of the call stack.
I have now upgraded to Python 2.7.13 and tried. I stopped getting the InsecurePlatformWarning, but I still got the certificate failure at the end. So, then I updated using pip the Requests from version 2.7.0 to the current 2.13.0. I still get the same certificate failure (without the insecure warning). Below is the call stack. If I force the get() to ignore verification "r = s.get(url, params=addr, verify=False)", the transaction works fine, but I would like to maintain security and use the certificates. I am using Windows 7 Enterprise Service Pack 1 (64 bit) and 64bit Python.
Any idea on what is going wrong. Any suggestions?
Starting Session
Sending request
Traceback (most recent call last):
File "S:\FY2015\ChoiceCard\DailyQ\checkSoftAuthOld.py", line 20, in
r = s.get(url,params=addr)
File "C:\Python27\lib\site-packages\requests\sessions.py", line 501, in get
return self.request('GET', url, **kwargs)
File "C:\Python27\lib\site-packages\requests\sessions.py", line 488, in request
resp = self.send(prep, **send_kwargs)
File "C:\Python27\lib\site-packages\requests\sessions.py", line 630, in send
history = [resp for resp in gen] if allow_redirects else []
File "C:\Python27\lib\site-packages\requests\sessions.py", line 190, in resolve_redirects
**adapter_kwargs
File "C:\Python27\lib\site-packages\requests\sessions.py", line 609, in send
r = adapter.send(request, **kwargs)
File "C:\Python27\lib\site-packages\requests\adapters.py", line 497, in send
raise SSLError(e, request=request)
requests.exceptions.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:661)