corytu commented on Apr 12, 2018
Expected Result
I am parsing a table on an aspx webpage: https://www.ntuh.gov.tw/labmed/檢驗目錄/Lists/2015/BC.aspx. The tr elements are in a tbody structure. I expected to find them there.
Actual Result
An empty list is returned as if there's nothing.
Reproduction Steps
import requests
from selenium import webdriver
from time import sleep
from lxml import etree, html

url = "https://www.ntuh.gov.tw/labmed/檢驗目錄/Lists/2015/BC.aspx"

# With selenium
browser = webdriver.Chrome()
browser.get(url)
# The url is visited with Chrome correctly
root = etree.fromstring(browser.page_source, etree.HTMLParser())
root.xpath("//table[@class='ms-listviewtable']/tbody/tr")
# It gives me several tr elements for further process

# With requests
result = ""
while result == "":
    try:
        # Certificate is not verified to bypass the SSLError
        # Not secure though
        result = requests.get(url, verify = False)
        break
    except:
        sleep(5)
        continue
# Transform it into an element tree
root = etree.fromstring(result.content, etree.HTMLParser())
# Parse the information with the same XPath
root.xpath("//table[@class='ms-listviewtable']/tbody/tr")
# It gives me an empty list
# However, this following line works:
root.xpath("//table[@class='ms-listviewtable']/tr")
I've also posted my question on Stack Overflow: The same xpath yields different extraction results from the same webpage.
System Information
python -m requests.help
{
  "chardet": {
    "version": "3.0.4"
  },
  "cryptography": {
    "version": "2.2.1"
  },
  "idna": {
    "version": "2.6"
  },
  "implementation": {
    "name": "CPython",
    "version": "3.6.4"
  },
  "platform": {
    "release": "17.5.0",
    "system": "Darwin"
  },
  "pyOpenSSL": {
    "openssl_version": "100020ef",
    "version": "17.5.0"
  },
  "requests": {
    "version": "2.18.4"
  },
  "system_ssl": {
    "version": "100020ff"
  },
  "urllib3": {
    "version": "1.22"
  },
  "using_pyopenssl": true
}