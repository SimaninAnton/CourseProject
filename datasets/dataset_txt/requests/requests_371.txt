lrodri29 commented on Feb 6, 2018
Hello!
I am using requests to access some data from a localhost. When I run the code I have attached below on Python2, it seems to work perfectly, however when I switch to Python3, r.content displays a much larger octet_stream length string. Perhaps this is due to the data type being pulled by requests? Any recommendations? It seems requests is not consistent across Python2 and Python3
import requests
import numpy as np

def get_cutout(chan, res, xspan, yspan, zspan, api = "http://localhost:8000"):

    """
        ID MUST BE STRING ""
        xpix = "x" how many pixels traveled in x
        ypix = "y" how many pixels traveled in y
        zpix = "z" how many pixels traveled in z
        xo, yo, zo (x,y,z offsets)
        type = "raw"
        scale = "grayscale"
    """
    #Defining used variables
    chan = chan.split("/")
    UUID = chan[0]
    exp = chan[1]

    xpix = xspan[1]-xspan[0]
    print(xpix)
    xo = xspan[0]
    ypix = yspan[1]-yspan[0]
    yo = yspan[0]
    zpix = zspan[1]-zspan[0]
    zo = zspan[0]

    size = str(xpix) + "_" + str(ypix) + "_" + str(zpix)
    offset = str(xo) + "_" + str(yo) + "_" + str(zo)

    #User entered IP address with added octet-stream line to obtain data from api in octet-stream form
    #0_1_2 specifies a 3 dimensional octet-stream "xy" "xz" "yz"
    address = api + "/api/node/" + UUID + "/" + exp + "/raw/0_1_2/" + size + "/" + offset + "/octet-stream"
    r = requests.get(address)
    octet_stream = str(r.content)
    print(len(octet_stream))

     #Converts obtained octet-stream into a numpy array of specified type uint8
    block = np.fromstring(octet_stream, dtype = np.uint8)
    print(block.shape)
    
    #Specifies the 3 dimensional shape of the numpy array of the size given by the user
    volumeOut =  block.reshape(zpix,ypix,xpix)

    #Returns a 3-dimensional numpy array to the user
    return volumeOut

def get_channel(UUID, coll, exp):
    """
        Method to input all channel hierarchy requirememnts, works as a dummy
        for BossRemote Parallelism.

        Args:
            UUID (str) : Root UUID of the repository
            col (str) : Name of collection
            exp (str) : Name of experiment

        Returns:
            chan (str) : String of UUID/col/exp
    """

    chan = UUID + "/" + coll + "/" + exp
    return chan

UUID = "30eb"
volumeD = get_cutout(
    get_channel(UUID, "dyer15_3_maskim_DUmmy", "dyer15_3_maskim_DUmmy"), 0,
    [0,2560], [0,2560], [290,292]
)