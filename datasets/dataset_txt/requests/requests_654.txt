devt commented on May 22, 2017 â€¢
edited
I need to overwrite the default behavior of choosing which ssl_version or ciphers are allowed to be negotiated.
There is a 'broken' internal site which accepts TLS v1.0 only. It works with curl and Chrome (who end up selecting TLSv1.0 / DES-CBC3-SHA), but from Python it ends up 'choosing' SSLv3 and you get the error requests.exceptions.SSLError: [SSL: UNSUPPORTED_PROTOCOL] unsupported protocol (_ssl.c:590)
I implemented the overwrite for requests.packages.urllib3.poolmanager as described in http://docs.python-requests.org/en/latest/user/advanced/#example-specific-ssl-version or https://lukasa.co.uk/2013/01/Choosing_SSL_Version_In_Requests/, but that still does not 'prohibit' the use of SSLv3 and you end up again using it.
I implemented the changes of SSLContext as suggested at http://stackoverflow.com/questions/29153271/sending-tls-1-2-request-in-python-2-6 and this fixes the issue, but I had to directly patch the code in requests.packages.urllib3.connection, since there is no way to overwrite which 'kind' of HTTPSConnection it will instantiate. Or is there a way to do that?