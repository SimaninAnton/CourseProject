Contributor
jvanasco commented on Nov 7, 2014
Total Request Timeout is a request in #1928, but I think it could be implemented at the same time as a Filesize Max.
As a user of requests, there are 2 issues I often run into:
I don't necessarily know how large the remote file is. It is 100k or 2GB? Large files can create issues based on my machine's memory and filesystem. I can't trust the data in response headers, as it's not always provided or correct.
I can often encounter slow connections or data streams, where information is continually provided. The current read/connection timeouts handle the amount of time between data being sent -- but not the overall amount of time.
Both of these issues can be handled by developers using the current requests API, but variants of these issues often appear on StackOverflow and this issue tracker -- and I think they could be more elegantly handled within requests and (mostly) a single chunk of code.
My suggestion is the following:
new (default=None) arguments for max_filesize and max_connectiontime
if either are set, the response is read in chunks (r.raw.read)
if the full response is read, the data is transferred to the content stash
if only a portion of the response is read, an Exception is raised. details about the connection and the read response data are available on the exception instance.
I think this logic would mostly go in requests.apapters.HTTPAdapter.send, but I could be wrong