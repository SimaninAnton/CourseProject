richtier commented on Dec 22, 2017
in request.auth there is HTTPBasicAuth , HTTPProxyAuth, and HTTPDigestAuth, but no HTTPBearerAuth - for bearer authentication.
It would look something like this:
class HTTPBearerAuth(requests.auth.AuthBase):
    def __init__(self, token):
        self.token = token

    def __eq__(self, other):
        return self.token == getattr(other, 'token', None)

    def __ne__(self, other):
        return not self == other

    def __call__(self, r):
        r.headers['Authorization'] = 'Bearer ' + self.token
        return r
Is there a reason to not add bearer auth to the codebase?
üëç 12