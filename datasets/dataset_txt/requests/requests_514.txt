gjthompson1 commented on Sep 11, 2017 â€¢
edited
Summary.
I would expect this to timeout but it doesn't.
r = requests.get('http://mywatchedmovies.com', stream=True, timeout=1)
But the following does
r = requests.head('http://mywatchedmovies.com', stream=True, timeout=1)
Not sure why?
Stackoverflow question: https://stackoverflow.com/questions/46158883/requests-stream-timeout-not-working-for-given-website
Reproduction Steps
import requests

def fetch_url(url, timeout, max_content, headers):

    r = requests.get(url, stream=True, timeout=timeout, headers=headers)
    r.raise_for_status()

    if int(r.headers.get('Content-Length',0)) > max_content:
        raise ValueError('response too large')

    content = r.raw.read(max_content+1, decode_content=True)
    if len(content) > max_content:
        print(url)
        raise ValueError('Too large a response')
    return {'url':url,'content':content,'status_code':r.status_code}

timeout = 10
max_content = 5000000
headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2228.0 Safari/537.36'}

fetch_url('http://mywatchedmovies.com', timeout, max_content, headers)
System Information
$ python -m requests.help
{
  "chardet": {
    "version": "3.0.4"
  },
  "cryptography": {
    "version": ""
  },
  "idna": {
    "version": "2.6"
  },
  "implementation": {
    "name": "CPython",
    "version": "3.5.2"
  },
  "platform": {
    "release": "4.4.0-1032-aws",
    "system": "Linux"
  },
  "pyOpenSSL": {
    "openssl_version": "",
    "version": null
  },
  "requests": {
    "version": "2.18.4"
  },
  "system_ssl": {
    "version": "1000207f"
  },
  "urllib3": {
    "version": "1.22"
  },
  "using_pyopenssl": false
}