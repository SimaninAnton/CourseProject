Member
nateprewitt commented on Jul 1, 2016 â€¢
edited
An unintended side effect of using chunk_size=None (as referenced in PR #3368) is a failure in iter_slices(). The two code snippets below will both trigger reused_chunks being chosen as the return value of iter_content. The generator is produced by iter_slices which currently requires the chunk_size to be an integer, otherwise it raises a TypeError when trying to add an int and NoneType.
Perhaps these are obscure enough edge cases, that it's not an issue. I just wanted to make a quick note of it.
Examples
def test_stream():
    s = requests.Session()
    req = requests.Request('GET', 'https://httpbin.org/get').prepare()
    resp = s.send(req, stream=False)
    next(resp.iter_content(None))

def test_decode():
    r = requests.Response()
    r.raw = io.BytesIO(b'the content')
    all_content = r.content
    decoded_chunk = next(r.iter_content(None, True))