uttampawar commented on Nov 11, 2017 â€¢
edited
Summary.
I've a node.js server running with local certificate for SSL connection created using openssl command as,
$ openssl req -x509 -newkey rsa:2048 -nodes -sha256 -subj '/CN=localhost'   -keyout localhost-privkey.pem -out localhost-cert.pem
Trying to use requests module to initiate communication with this node.js server which fails with various errors.
Reproduction Steps
>>> import requests
>>> requests.get("https://localhost:9000/getcpuinfo")
...
requests.exceptions.SSLError: ("bad handshake: Error([('SSL routines', 'tls_process_server_certificate', 'certificate verify failed')],)",)
So I tried to pass verify=False option as,
>>>  requests.get("https://localhost:9000/getcpuinfo", verify=False)
equests.exceptions.SSLError: ("bad handshake: SysCallError(-1, 'Unexpected EOF')",)
I tested the server with "curl" utility as shown below,
$ curl  https://localhost:9000/loaddb
curl: (60) SSL certificate problem: self signed certificate <--- fails 
But it works with "-k" to ignore certificate verification step,
$ curl -k  https://localhost:9000/getcpuinfo
{"hw":{"architecture":"x64","model":"Intel(R) Core(TM) i7-6700K CPU @ 4.00GHz","speed":899,"sys":3600700,"irq":0,"idle":2617236700,"user":17612800,"nice":39400,"endianness":"LE","totalmem":33605652480,"freemem":27233288192},"sw":{"platform":"linux","release":"4.9.0-3-amd64","type":"Linux","uptime":265048},"appName":"Cluster","version":{"http_parser":"2.7.0","node":"9.0.0-pre","v8":"6.1.534.42","uv":"1.14.1","zlib":"1.2.11","ares":"1.13.0","modules":"58","nghttp2":"1.25.0","openssl":"1.0.2l","icu":"59.1","unicode":"9.0","cldr":"31.0.1","tz":"2017b"},"cpuCount":0}
So why doesn't requests module ignores certificate validation when "verify=False"?
Environment details:
OS:
Linux nodejs-work 4.9.0-3-amd64 #1 SMP Debian 4.9.30-2+deb9u5 (2017-09-19) x86_64 GNU/Linux
Python:
Python 2.7.13 (default, Jan 19 2017, 14:48:08)
[GCC 6.3.0 20170118] on linux2
Client/Public certificate (localhost-cert.pem),
----BEGIN CERTIFICATE-----
MIIC/jCCAeagAwIBAgIJAKATu2AY/QT4MA0GCSqGSIb3DQEBCwUAMBQxEjAQBgNV
BAMMCWxvY2FsaG9zdDAeFw0xNzExMDkyMTQ1NTBaFw0xNzEyMDkyMTQ1NTBaMBQx
EjAQBgNVBAMMCWxvY2FsaG9zdDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoC
ggEBAJTPk5nao0wG/EDFGnq7BvXMkEZ5oUVq7PAUxWi+E/byJk924l7Z5kACgWBa
zQL0lLXLpdMk97EFGWMblz5Ehtqh7U8HaE9OZ6x/pesDTka+REnpXecklRrdZHX7
lfFnNIU58grPpB2GyUXrRdOtcPlaKXUo+VTd7PgwMtYVtt8pyTWxSB2MMYrqJGT8
78KX6trRzQLm7tas3U0jD59+R8j7gxU6FyFaNJBrkJ5T9kHGKOsAzSqZdCgRBjl5
i7xcXJfOAAnZ3jhGlY5DQht+HZDHhjkLG9kcZZhFDYteFk8drzbd3lBw96nLq+8A
Sy92FtQL4GiYSwZ0WVAmwmTCGjUCAwEAAaNTMFEwHQYDVR0OBBYEFLYjwGKbcV9h
sYHxe8l9UvXVivByMB8GA1UdIwQYMBaAFLYjwGKbcV9hsYHxe8l9UvXVivByMA8G
A1UdEwEB/wQFMAMBAf8wDQYJKoZIhvcNAQELBQADggEBAHl7okBCJlms+cwfzLhs
sbyyuX2wgngxyvjy497zBmeh1TiueGPhOx9u/sfJSZmoUaeRd/zPGkp2DcPQ+Lo2
EHYrXMPE1Ecgpu/15JZ8jNuE+FwZb9lllULLwzq8pDkdbdsSRltdV/rFlZ2YkscB
c+xvVaCltw5KpKnY6AWHoqwoDcd8TZKzyKXLSuluKbHNC1lvg8cMzs6hFA9P92Ae
9P08AKLAIOGJ7QzRrXQIsAO4p9rHheeZeYQZyNiRrXPQUoWos4+OjynaNs+FabhN
XBtSl/GGPRRRfU/D9v4iKfQx15CEvs1AKn1Z6mIPF05pSqbgIoz2mJBV6UM7e+hz
TRs=
-----END CERTIFICATE-----