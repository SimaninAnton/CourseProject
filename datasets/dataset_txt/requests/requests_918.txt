do3cc commented on Sep 27, 2016
-> request = session.get(url, verify=cert)
(Pdb) c
Traceback (most recent call last):
  File "inventory.py", line 195, in <module>
    inventory()
  File "/Users/do3cc/dev/ansible/lib/python2.7/site-packages/click/core.py", line 716, in __call__
    return self.main(*args, **kwargs)
  File "/Users/do3cc/dev/ansible/lib/python2.7/site-packages/click/core.py", line 696, in main
    rv = self.invoke(ctx)
  File "/Users/do3cc/dev/ansible/lib/python2.7/site-packages/click/core.py", line 889, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/Users/do3cc/dev/ansible/lib/python2.7/site-packages/click/core.py", line 534, in invoke
    return callback(*args, **kwargs)
  File "inventory.py", line 192, in inventory
    print get_host(host)
  File "inventory.py", line 174, in get_host
    for host in get_all_infrastructure_elements():
  File "inventory.py", line 98, in get_all_infrastructure_elements
    request = session.get(url, verify=cert)
  File "/Users/do3cc/dev/ansible/lib/python2.7/site-packages/requests/sessions.py", line 488, in get
    return self.request('GET', url, **kwargs)
  File "/Users/do3cc/dev/ansible/lib/python2.7/site-packages/requests/sessions.py", line 475, in request
    resp = self.send(prep, **send_kwargs)
  File "/Users/do3cc/dev/ansible/lib/python2.7/site-packages/requests/sessions.py", line 596, in send
    r = adapter.send(request, **kwargs)
  File "/Users/do3cc/dev/ansible/lib/python2.7/site-packages/cachecontrol/adapter.py", line 47, in send
    resp = super(CacheControlAdapter, self).send(request, **kw)
  File "/Users/do3cc/dev/ansible/lib/python2.7/site-packages/requests/adapters.py", line 497, in send
    raise SSLError(e, request=request)
requests.exceptions.SSLError: ("bad handshake: Error([('SSL routines', 'ssl3_get_server_certificate', 'certificate verify failed')],)",)
This happens under mac. openssl gets installed via brew.
I have installed requests with pip via requests[security]
Versions:
python: 2.7.10
SSL: python -c 'import ssl;print(ssl.OPENSSL_VERSION)'
OpenSSL 1.0.2j 26 Sep 2016
I have downloaded the certificate via:
/usr/local/Cellar/openssl/1.0.2j/bin/openssl s_client -showcerts -connect ourserver:443 </dev/null | openssl x509 -outform PEM > eam_cert.pem
I have verified that the cert itself is ok via:
curl --cacert eam_cert.pem https://ourserver
This used to work in the past, but the server got a new certificate.
Right now I am out of ideas what I could be doing wrong here.