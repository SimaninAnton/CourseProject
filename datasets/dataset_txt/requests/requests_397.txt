uthunderbird commented on Jan 13, 2018
Hi there. I've just completed some test, and decided to discuss a behaviour of auth option.
The solution I'm using now it's just a password or ''. I don't think it's a good approach.
Expected Result
I know I can write something like uthunderbird@example.com to attach HTTP Basic Auth header to request to example.com in browser. Actually, it's true for any URI as I know. So it was pretty expected for me that this : transport.auth = ('uthunderbird', ) will work for case if I don't want to send password.
The second idea was to write transport.auth = ('uthunderbird', None), but it get a horrible result.
Actual Result
tuple is not callable
I sent auth header with dXRodW5kZXJiaXJkOk5vbmU=, which means 'uthunderbird:None'. Wow, such JSish.
Reproduction Steps
python
import requests

a = requests.get('https://api.github.com/user', auth=('user', ))
python
import base64
import requests

a = requests.get('https://api.github.com/user', auth=('user', None)
base64.b64decode(a.request.headers['authorization'][6:]).decode()
System Information
$ python -m requests.help
{
  "chardet": {
    "version": "3.0.4"
  },
  "cryptography": {
    "version": ""
  },
  "idna": {
    "version": "2.6"
  },
  "implementation": {
    "name": "CPython",
    "version": "3.6.3"
  },
  "platform": {
    "release": "10",
    "system": "Windows"
  },
  "pyOpenSSL": {
    "openssl_version": "",
    "version": null
  },
  "requests": {
    "version": "2.18.4"
  },
  "system_ssl": {
    "version": "100020bf"
  },
  "urllib3": {
    "version": "1.22"
  },
  "using_pyopenssl": false
}```

(I'm pretty sure it's not required here, but ok)
üëç 1