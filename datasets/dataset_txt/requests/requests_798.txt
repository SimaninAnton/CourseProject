LarsMichelsen commented on Jan 15, 2017
When creating a mod_python (Python 2.7, mod_python 3.3.1) page handler that just imports the requests module (version 2.12.3), it breaks pyOpenSSL (pyOpenSSL-16.2.0, cryptography-1.5.3, idna-2.1 in my case). For example creating certificates like this is not working anymore:
from OpenSSL import crypto
pkey = crypto.PKey()
pkey.generate_key(crypto.TYPE_RSA, 2048)
An exception like this is raised: Error ([('rsa routines', 'RSA_BUILTIN_KEYGEN', 'BN lib')])
  File "key_mgmt.py", line 224, in _generate_key
    pkey.generate_key(crypto.TYPE_RSA, 2048)

  File "lib/python/pyOpenSSL-16.2.0-py2.7.egg/OpenSSL/crypto.py", line 258, in generate_key
    _openssl_assert(result == 1)

  File "lib/python/pyOpenSSL-16.2.0-py2.7.egg/OpenSSL/_util.py", line 61, in openssl_assert
    exception_from_error_queue(error)

  File "lib/python/pyOpenSSL-16.2.0-py2.7.egg/OpenSSL/_util.py", line 48, in exception_from_error_queue
    raise exception_type(errors)
When removing this from requests init.py, it works again:
try:
    from .packages.urllib3.contrib import pyopenssl as pyopenssl
    pyopenssl.inject_into_urllib3()
except ImportError:
    pass
I tried to remove only the pyopenssl.inject_into_urllib3() call, but that did not solve the issue. I had to remove the import which then fixed the issue. So it seems that it is somehow related to that module directly or some dependency.
The same code works when running as dedicated python script. Maybe it's related to the mod_python importer or something.
Any ideas?