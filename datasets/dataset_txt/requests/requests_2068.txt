kylestev commented on Jul 10, 2013
I am behind a proxy at work and in order for my requests to be routed (even internally) I have to connect to a proxy. I have tried doing so in multiple different ways in order to get my script to function.
I can run things such as the easy_install command line tool if I set the http_proxy and https_proxy environment variables to: protocol://my_username:my_password@proxy_fqdn:proxy_port (protocol = http or https). It appears that Requests does not look for this information however so I am left to use an HTTPProxyAuth object.
Relevant information to my setup/environment
Python 2.6
Requests 1.2.3
Red Hat Enterprise Linux 6.4
My full username has a backslash () in it since all employees use Active Record credentials (ie: domain\username) - the domain only consists of alphabetic characters
My password has symbols in it (ie: !@#$%^&* etc.)
Stack trace
Traceback (most recent call last):
  File "mpss.py", line omitted, in <module>
    print main(args)
  File "mpss.py", line omitted, in main
    content = sesh.get(URL_MPSS_BUILDS, proxies=PROXIES, auth=auth).content
  File "/usr/lib/python2.6/site-packages/requests-1.2.3-py2.6.egg/requests/sessions.py", line 347, in get
    return self.request('GET', url, **kwargs)
  File "/usr/lib/python2.6/site-packages/requests-1.2.3-py2.6.egg/requests/sessions.py", line 335, in request
    resp = self.send(prep, **send_kwargs)
  File "/usr/lib/python2.6/site-packages/requests-1.2.3-py2.6.egg/requests/sessions.py", line 438, in send
    r = adapter.send(request, **kwargs)
  File "/usr/lib/python2.6/site-packages/requests-1.2.3-py2.6.egg/requests/adapters.py", line 331, in send
    raise SSLError(e)
requests.exceptions.SSLError: [Errno 8] _ssl.c:490: EOF occurred in violation of protocol
Source
from requests import Session
from requests.auth import HTTPProxyAuth

URL_MPSS_BUILDS = 'https://sub.domain.employer.com/builds/mpss/'

PROXIES = {
    'http':  'http://proxy.campus.employer.com:911',
    'https': 'https://proxy.campus.employer.com:911'
}

sesh = Session()
auth = HTTPProxyAuth(username, password)
content = sesh.get(URL_MPSS_BUILDS, proxies=PROXIES, auth=auth).content
Please note that my actual code looks a lot nicer - I have extracted the relevant lines as needed to reproduce this bug.
Is there anything I am doing wrong? I have also tried the following variations to find a fix:
Remove protocol from value portion of the PROXIES dictionary --> Causes a KeyError similar to #997
Tried formatting the PROXIES values with user:pass@fqdn:port but that didn't work - didn't expect it to either
Proxy preferences in RHEL 6.4 - this is the system I am running this script on as well as where I got the initial proxy FQDNs from. I checked the laptop that was issued to me by my employer and it has the same settings as well.