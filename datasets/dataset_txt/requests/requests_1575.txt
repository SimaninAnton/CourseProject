achorrath commented on Nov 12, 2014
HTTPDigestAuth is not thread-safe when used on a session object. This script demonstrates the problem:
import Queue
import sys
import threading

import requests

s = requests.Session()
s.auth = requests.auth.HTTPDigestAuth('user', 'passwd')

def tprint(astr):
    t = threading.current_thread().name
    sys.stdout.write('%s: %s\n' % (t, astr))

def worker():
    resp = s.get('http://httpbin.org/digest-auth/auth/user/passwd')
    tprint(resp.status_code)

t1 = threading.Thread(target=worker)
t1.start()

t2 = threading.Thread(target=worker)
t2.start()

t1.join()
t2.join()
With debugging tprint()s added to auth.HTTPDigestAuth.handle_401(), the script generates output like this:
$ python threads_digest_1.py 
Thread-1: handle_401: num_401_calls: 1
Thread-1: handle_401: s_auth: Digest qop=auth, nonce="929169e53bab111e1c06e7a5207fe63b", realm="me@kennethreitz.com", opaque="3e5078f698656ced77637bf72881e06b"
Thread-2: handle_401: num_401_calls: 2
Thread-2: handle_401: s_auth: Digest qop=auth, nonce="f9bf0aa7be1fb59e85cbe0000f67a56a", realm="me@kennethreitz.com", opaque="b0d6dee4bc0030c5bdefc2c76342479d"
Thread-2: 401
Thread-1: 200
$