toidi commented on Jan 11, 2017 â€¢
edited
Set up following scenario to reproduce the issue:
backend side:
CloudFlare is proxying to AWS ELB.
ELB is proxying to Nginx.
client side:
Create private subnet and attach AWS NAT Gateway to it.
Launch EC2 instance in private subnet and use a script below to reproduce the issue.
Request path is:
EC2 instance(originating) -> AWS NAT Gateway -> CloudFlare -> AWS ELB -> Nginx.
I created a script which reproduces the issue:
import requests
import time


def request_with_timeout(url, minutes):
    session = requests.Session()
    session.get(url, allow_redirects=False)
    time.sleep(minutes * 60)
    session.get(url, allow_redirects=False)


request_with_timeout('https://coins.ph', 6)
After executing - requests raises an exception:
>>> request_with_timeout('https://coins.ph', 6)
/opt/app/accounting/venv/local/lib/python2.7/site-packages/requests/packages/urllib3/util/ssl_.py:315: SNIMissingWarning: An HTTPS request has been made, but the SNI (Subject Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#snimissingwarning.
  SNIMissingWarning
/opt/app/accounting/venv/local/lib/python2.7/site-packages/requests/packages/urllib3/util/ssl_.py:120: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.
  InsecurePlatformWarning
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "<stdin>", line 5, in request_with_timeout
  File "/opt/app/accounting/venv/local/lib/python2.7/site-packages/requests/sessions.py", line 480, in get
    return self.request('GET', url, **kwargs)
  File "/opt/app/accounting/venv/local/lib/python2.7/site-packages/requests/sessions.py", line 468, in request
    resp = self.send(prep, **send_kwargs)
  File "/opt/app/accounting/venv/local/lib/python2.7/site-packages/requests/sessions.py", line 576, in send
    r = adapter.send(request, **kwargs)
  File "/opt/app/accounting/venv/local/lib/python2.7/site-packages/requests/adapters.py", line 426, in send
    raise ConnectionError(err, request=request)
requests.exceptions.ConnectionError: ('Connection aborted.', error(104, 'Connection reset by peer'))
Software versions:
Python 2.7.6
requests==2.9.1
But also reproduced on Python 2.7.12 and requests 2.12.4