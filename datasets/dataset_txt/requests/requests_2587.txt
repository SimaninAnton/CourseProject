arty-name commented on Feb 2, 2012
Simplest way to reproduce that:
requests.get('http://example.com/', auth=('a','b'), data='\xff')
â€¦
  File "/usr/lib/python2.7/httplib.py", line 810, in _send_output
    msg += message_body
UnicodeDecodeError: 'ascii' codec can't decode byte 0xff in position 0: ordinal not in range(128)
It appear that when you specify auth parameters whole HTTP headers section becomes unicode string, and when httplib tries to append binary body to it the thing goes kaboom.
Probably this is caused by following lines in auth.py:
from __future__ import unicode_literals
and decode('utf8') in
return 'Basic ' + b64encode(("%s:%s" % (username, password)).encode('utf-8')).strip().decode('utf8')
However fixing this line isn't enough to make this work through proxy. This will still throw then:
requests.get('http://example.com/', auth=('a','b'), data='\xff', proxies=proxy_config)