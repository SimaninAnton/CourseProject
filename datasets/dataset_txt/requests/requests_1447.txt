logc commented on Apr 10, 2015
This is a feature request, not a bug.
When creating a new Session in order to issue multiple requests, one can specify a CookiePolicy to reject all cookies (e.g. this way). But for each new request, a new RequestsCookieJar is created, with a DefaultCookiePolicy, where previous cookies are merged.
Since there are no previous cookies, the behaviour is correct (no cookies are accepted), but the creation of those objects is costly and leads to a decreased performance. Working around this issue, with a subclass of Session that does not perform any cookie handling, gives a speedup of 1.32x or more, in our measurements.
Furthermore, it is a bit surprising that Session imposes this object creation to users, even if the user has specified that no cookie handling is needed (by setting the custom CookiePolicy after initialization), and even for a single request that does not create a Session (since a Session is created under the hood by all convenience methods like requests.get, requests.post).
Why is this behaviour so? Are there plans to create a variant of Session where cookies can be fully disabled? May we contribute our own workaround, if there is interest from other users?