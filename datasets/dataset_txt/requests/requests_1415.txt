Beluki commented on May 9, 2015
The requests documentation suggests using the following idiom to partially read response bodies (e.g. when stream = True):
from contextlib import closing

with closing(requests.get('http://httpbin.org/get', stream=True)) as r:
    # Do things with the response here.
I thought this would be applicable to sessions, but it seems it's not enough.
The following program reliably raises an exception (BadStatusLine) even while it uses contextlib.closing, and the only way to stop that from happening is to consume the whole response content:
import contextlib
import random
import requests

urls = [
    'http://reddit.com',
    'http://news.ycombinator.com',
    'http://github.com',
    'http://bitbucket.org',
]

try:
    session = requests.Session()

    while True:
        try:
            with contextlib.closing(session.get(random.choice(urls), stream = True)) as r:
                # uncomment the line below and the errors dissapear:
                # r.content
                pass

        except Exception as ex:
            print(str(ex))

except KeyboardInterrupt:
    pass
Is this the expected behavior or actually a bug? (to be fair the documentation doesn't actually say that the idiom is also applicable to requests coming from sessions).