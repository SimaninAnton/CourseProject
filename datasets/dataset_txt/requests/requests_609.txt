Contributor
edmorley commented on Jun 7, 2017
The docs for streaming responses currently state:
If you find yourself partially reading request bodies (or not reading them at all) while using stream=True, you should consider using contextlib.closing (documented here), like this:
from contextlib import closing

with closing(requests.get('http://httpbin.org/get', stream=True)) as r:
    # Do things with the response here.
It would be great to be able to omit contextlib.closing() entirely, and use the call to requests directly within a with statement, like so:
with requests.get('http://httpbin.org/get', stream=True) as r:
    # Do things with the response here.
However that currently results in AttributeError: __exit__, since Requests.Response doesn't have the __enter__ and __exit__ methods expected of a context manager:
https://docs.python.org/3/reference/datamodel.html#context-managers
I think it would be worthwhile to add them, to allow safe streaming without the extra boilerplate. (There's also prior art - Requests.Session() can be used as a context-manager.)
üëç 3