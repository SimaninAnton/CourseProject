ringods commented on Jun 19, 2018 â€¢
edited
We have an application which returns JSON responses. In such a response document, some string values could have encoded Unicode characters like \u003C (<) or \u003E (>). But requests seems to "process" this return value.
Expected Result
Simplified version of my response JSON:
{ "key": "\u003CSome Text Here\u003E" }
Actual Result
{ "key": "\\u003CSome Text Here\\u003E" }
The single backslash becomes a double backslash. I don't have this with plain curl or the Insomnia Mac REST client app.
Reproduction Steps
Set up an nginx server serving document encoded.json with content:
{
    "key": "\u003CSome text here\u003E"
}
Instructions:
$ docker pull nginx
$ docker run --name json-server -p:8080:80 -v `pwd`:/usr/share/nginx/html:ro -d nginx
In a Python shell:
>>> import requests
>>> r = requests.Session()
>>> response = r.get('http://localhost:8080/encoded.json')
>>> response.headers
{'Server': 'nginx/1.15.0', 'Date': 'Tue, 19 Jun 2018 08:21:05 GMT', 'Content-Type': 'application/json', 'Content-Length': '44', 'Last-Modified': 'Tue, 19 Jun 2018 08:07:58 GMT', 'Connection': 'keep-alive', 'ETag': '"5b28b9de-2c"', 'Accept-Ranges': 'bytes'}
>>> response.encoding
>>> response.content
b'{\n    "key": "\\u003CSome text here\\u003E"\n}\n'
>>> response.text
'{\n    "key": "\\u003CSome text here\\u003E"\n}\n'
Note that response.encoding is not set.
System Information
$ python -m requests.help
{
  "chardet": {
    "version": "3.0.4"
  },
  "cryptography": {
    "version": ""
  },
  "idna": {
    "version": "2.6"
  },
  "implementation": {
    "name": "CPython",
    "version": "3.6.4"
  },
  "platform": {
    "release": "17.6.0",
    "system": "Darwin"
  },
  "pyOpenSSL": {
    "openssl_version": "",
    "version": null
  },
  "requests": {
    "version": "2.19.1"
  },
  "system_ssl": {
    "version": "100020ff"
  },
  "urllib3": {
    "version": "1.23"
  },
  "using_pyopenssl": false
}
Also doesn't work with urllib 1.22 and requests 2.18.4.