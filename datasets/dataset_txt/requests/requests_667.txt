Contributor
kaptajnen commented on May 17, 2017 â€¢
edited
It is not clear from the documentation if this is supposed to work, but it did work previously.
If you set the cert attribute on a Session and then make an HTTP request, an AttributeError exception is thrown since key_file does not exist on an HTTPConnectionPool object. This behavior was introduced in this commit
From what I can tell it would continue to work if the certificate was set as a tuple instead, since that would then add the key_file attribute to the HTTPConnectionPool a few lines above.
>>> import requests
>>> s = requests.Session()
>>> s.cert='/path/to/file.pem'
>>> s.get('http://example.com')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/local/lib/python2.7/site-packages/requests/sessions.py", line 531, in get
    return self.request('GET', url, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/requests/sessions.py", line 518, in request
    resp = self.send(prep, **send_kwargs)
  File "/usr/local/lib/python2.7/site-packages/requests/sessions.py", line 639, in send
    r = adapter.send(request, **kwargs)
  File "/usr/local/lib/python2.7/site-packages/requests/adapters.py", line 407, in send
    self.cert_verify(conn, request.url, verify, cert)
  File "/usr/local/lib/python2.7/site-packages/requests/adapters.py", line 247, in cert_verify
    if conn.key_file and not os.path.exists(conn.key_file):
AttributeError: 'HTTPConnectionPool' object has no attribute 'key_file'