DelboyJay commented on Jul 29, 2015
I have a problem with Requests 2.7.0 and proxies. If I use the following code without setting the *_PROXY environment variables the requests takes up to 2 minutes to get the information I'm requesting by it does work. If I then set the HTTP_PROXY and HTTPS_PROXY env variables it takes 2 seconds to complete. It should be noted that the browsers on the machine are setup to use the proxy and the requests code does indeed pick up these settings from the registry as well as me specifying the values via the proxies parameter.
proxies = {
"http": "http://%s:3128/" % ipaddr,
"https": "http://%s:3128/" % ipaddr
}
r = requests.get("http://nvd.nist.gov/download/nvd-rss.xml", proxies=proxies)
I have profiled the code in pyCharm without use of the env variables and it says the following:
Name Call Count Time(ms) OwnTime(ms)
built-in method gethostbyaddr 3 41998 41998
built-in method gethostbyname 3 38378 38378
Debugging into sessions.py it seems that line 614 which calls get_environ_proxies takes quite a bit of time because it is indirectly calling socket.gethostbyname and socket.getfqdn in proxy_bypass_registry, request.py:2516 and the former throws an OSError but getfqdn succeeds giving the same answer as the rawHost variable.
Running the same test but with the HTTP_PROXY and HTTPS_PROXY environmental variables set shows in the profiler that the gethostbyaddr and gethostbyname take no time at all and the whole call takes 2 seconds.
Am I doing something silly here or is this something that can be fixed in requests? The proxy settings in the registry and passed via the proxies attribute just seem to be being ignored in parts of the code it would appear.