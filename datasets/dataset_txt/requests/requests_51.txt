xNinjaKittyx commented on Sep 20, 2019
Have a bunch of code using verify=False because it's a local server with no certificate.
Fails with something like:
requests.exceptions.SSLError: HTTPSConnectionPool(host='hostname', port=80): Max retries exceeded with url: /api (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),))
I was able to work around this by reverting back to 1.25.3 instead of 1.25.4
Expected Result
Expected it to not check SSL Certificate.
Actual Result
It checked SSL Certificate
Reproduction Steps
import requests

requests.get('https://nocertdomain.com/', verify=False)
# Certificate_verify_failed
System Information
$ python -m requests.help
{
  "chardet": {
    "version": "3.0.4"
  },
  "cryptography": {
    "version": ""
  },
  "idna": {
    "version": "2.8"
  },
  "implementation": {
    "name": "CPython",
    "version": "3.6.7"
  },
  "platform": {
    "release": "4.15.0-60-generic",
    "system": "Linux"
  },
  "pyOpenSSL": {
    "openssl_version": "",
    "version": null
  },
  "requests": {
    "version": "2.22.0"
  },
  "system_ssl": {
    "version": "1010100f"
  },
  "urllib3": {
    "version": "1.25.4"
  },
  "using_pyopenssl": false
}
This command is only available on Requests v2.16.4 and greater. Otherwise,
please provide some basic information about your system (Python version,
operating system, &c).