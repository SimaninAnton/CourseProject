noseworthy commented on Oct 3, 2014
Hello,
I've looked through open and closed issues but haven't seen this raised before. Sorry if I'm bringing up something that's already been addressed. That said, here we go:
I'm running a flask-restful app and returning JSON responses to requests. Flask-restful helpfully encodes the response body as UTF-8 and sets the Content-Type to "application/json". When i make a request to my server using requests, requests can't properly detect the encoding and it looks like this is because I haven't set the charset on the Content-Type header. However, according to RFC 4627 the encoding for application/json responses is either UTF-8, UTF-16, or UTF-32. The default is UTF-8, but you can detect which one of the three encodings is being used by looking at the first four bytes as mentioned in RFC 4627.
When requests receives a response with a Content-Type header of application/json shouldn't it try to detect the encoding as UTF-8, UTF-16, or UTF-32 and set the encoding on the response object accordingly? This would help greatly with using response.text. Right now I'm setting the encoding on the response object manually.
Just to note: response.json() works perfectly so I realize this is a bit of a corner case since users will probably just deserialize the response anyway.
Thanks for your time, and all your awesome work. I absolutely love requests.
Mike
Possibly Related Issues: #1665 #1467
Reference to @mitsuhiko's opinion on the matter: pallets/flask#454 (comment)