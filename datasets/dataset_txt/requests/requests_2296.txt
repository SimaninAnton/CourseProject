jeanmarcrousseau commented on Dec 12, 2012
Hello All,
I am a big fan of Requests, and have just upgraded from v0.14.0 on Python 3.2.3 to v0.14.2 on Python 3.3.0. I think that the upgrade to Requests broke my code when using a requests.session() object. I use Fiddler for some transport debugging, which is why I'm using the loopback address on port 8888.
Please note that everything works as expected if I use a requests.post() object instead of using a requests.session() object for the request (obviously bypassing the proxy).
My code looks as follows:
s = requests.session(proxies={'http': '127.0.0.1:8888'})
r = s.post(url, data=soap_req, headers=headers)
The call to s.post() results in a KeyError: None exception in connection_from_host() in class PoolManager in poolmanager.py.
The offending line is:
    pool_cls = pool_classes_by_scheme[scheme]
Debugging shows pool_key = (None, '127.0.0.1', 8888)
What puzzles me is that scheme shows up as None (as shown in the 1st element in the tuple above). Debugging indeed verifies scheme is NoneType, which makes no sense, since it has a default value of 'http' when it enters the method.
I would appreciate anyone who can shed light and/or provide a fix for the above. I'm at the limit of my debugging skills. Please advise if you need more info from my side for further troubleshooting.
Thanks in advance,
Jean-Marc