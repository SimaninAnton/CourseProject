jab commented on Sep 6, 2014
It looks like there are some problems with the get_unicode_from_response() function from requests.utils. The docstring says:
Returns the requested content back in unicode.

:param r: Response object to get unicode content from.

Tried:

1. charset from content-type

2. every encodings from ``<meta ... charset=XXX>``

3. fall back and replace all unicode characters
but here is the code:
def get_unicode_from_response():
    tried_encodings = []

    # Try charset from content-type
    encoding = get_encoding_from_headers(r.headers)

    if encoding:
        try:
            return str(r.content, encoding)
        except UnicodeError:
            tried_encodings.append(encoding)

    # Fall back:
    try:
        return str(r.content, encoding, errors='replace')
    except TypeError:
        return r.content
Step 1 and step 3 of the docstring are there, but it looks like step 2 is missing. It looks like the intention was to call get_encodings_from_content if the result of get_encoding_from_headers didn't pan out, but it's not actually doing that.
A more minor issue is the tried_encodings list doesn't appear to be serving any benefit, so I'm not sure it's worth its memory / GC cost.
Please advise if you'd accept a pull request or have feedback otherwise. Thanks!
P.S. In researching this issue I noticed that a tag for v2.4.0 is missing: https://github.com/kennethreitz/requests/tags
Here is a reference to this code in the most recent tag available:
https://github.com/kennethreitz/requests/blob/v2.3.0/requests/utils.py#L346..L376