monocasual commented on Sep 25, 2013
Hi guys, thank you for this great library!
I'm trying to publish a tweet with a picture in it, by calling update_with_media, without success. This is my code so far:
import requests_oauthlib
import requests
auth = requests_oauthlib.OAuth1(YOUR_APP_KEY, YOUR_APP_SECRET, USER_OAUTH_TOKEN, USER_OAUTH_TOKEN_SECRET)
req = requests.request('POST', 'https://api.twitter.com/1.1/statuses/update_with_media.json', data={'status':'test'}, files={'media[]' : open('/tmp/tmp.jpg', 'rb').read()})
print req.json() # error!
and the result is:
{u'errors': [{u'message': u'Bad Authentication data', u'code': 215}]}
That's not true, because I can call any other API's end point, both via POST and GET. For example, I can tweet a text-only message:
import requests_oauthlib
import requests
auth = requests_oauthlib.OAuth1(YOUR_APP_KEY, YOUR_APP_SECRET, USER_OAUTH_TOKEN, USER_OAUTH_TOKEN_SECRET)
req = requests.request('POST', 'https://api.twitter.com/1.1/statuses/update.json', data={'status':'test'})
print req.json() # ok!
This is what I found reading some Twitter docs and support pages:
Parameters being sent to the API that are not the oauth_* named parameters do not become part of the OAuth signature base string when the HTTP method being used is POST but the post body is not of the "Content-Type: x-www-form-urlencoded" variety.

Since you're using multipart POST, you're not sending a POST body with the Content-Type set as x-www-form-urlencoded and it's therefore erroneous to include parameters like "status" or "media[]" in the OAuth signature base string.

Some implementations of OAuth do not account for this gotcha.
I sense there's something wrong with the headers or the body: maybe a missing parameter in my request() call?
Requests version: 1.2.3
Python version: 2.7.3