nathan-rice commented on 31 Aug 2017
The behavior of the float converter not matching decimal-less values is a poor choice in my opinion. The problem is that Javascript lacks separate number types, and it will happily produce decimal-less number values from operations on several floating point values (e.g. 0.5 + 0.5). As a result, some combinations of user input cause a route with a float converter to fail to resolve.
I think better behavior would be for the float converter to match decimal-less values, but at a lower priority than the integer converter. This would avoid the problem edge case route failures while still letting people define overlapping routes if they really wanted to.
Environment
Python version: 3.6.1
Flask version: 0.12.2
Werkzeug version: 0.12.2