jqxl0205 commented on 12 Oct 2010
When SERVER_NAME in conf is not None and different to "localhost", app.test_request_context() will be failure.
Instead, we can do like this
  environ_overrides=dict(HTTP_HOST=app.conf['SERVER_NAME'],
                        SERVER_NAME=app.conf['SERVER_NAME'])

  app.text_request_context(environ_overrides=environ_overrides)
That's OK. Just look at above there is no issue in test_request_context, but what can extensions which use test_request_context do ? It is not a good idea if it handled by themselves.
For example, in Flask-Script's shell command, it will make a text_request_context and run shell in this context. If Flask-Script don't deal with SERVER_NAME environ, shell command will fail.
I believe that Flask should do something for that because SERVER_NAME is imported by Flask and using in create_url_adapter method and others.