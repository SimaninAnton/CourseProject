serkandaglioglu commented on 6 Oct 2014
i am using wtforms with flask framework. when i use DateTimeField i add format parameter.
But datetime format is coming from user which is logged in
forms.py
    from flask import g
    from wtforms import *
    import wtforms.validators as v
    from flask.ext.babel import lazy_gettext as _
    from flask.ext.babel import npgettext as _n

    from app.app import app
    from app.base_forms import *
    from app.modules.post.models import *

    class PostForm(BaseForm):
        post_date = DateTimeField("Post Date", format = app.config.get("DATETIME_FORMAT"), validators =[v.Required(message=_("Post date is required"))]  )
i set value of app.config.get("DATETIME_FORMAT") on before request
    @app.before_request
    def before_request():
        if g.user.language == "tr"
            app.config["DATETIME_FORMAT"] = "%d.%m.%Y %H:%M"
        else:
            app.config["DATETIME_FORMAT"] = "%m-%d-%Y %H:%M"
my application structure
    /app
        /modules
            /post
                /controllers.py
                /forms.py
                /models.py
        /app.py
    /run.py
content of /app/app.py
    from flask import Flask, url_for, g, request, redirect, render_template
    app = Flask(__name__)
    app.config.from_object('app.config.config.ConfigDevelopment')

    # Import Modules
    from modules.post.controllers.admin import module as modulePostAdmin
    app.register_blueprint(modulePostAdmin)

    # other codes here

    @app.before_request
    def before_request():
        if g.user.language == "tr"
            app.config["DATETIME_FORMAT"] = "%d.%m.%Y %H:%M"
        else:
            app.config["DATETIME_FORMAT"] = "%m-%d-%Y %H:%M"
content of /run.py
    from app.app import app
    app.run(host='localhost', port=8080, debug=True)
when i start app it throws that error "KeyError: 'DATETIME_FORMAT'". i think forms.py load before request so it throws keyError.
This problem is not only about wtforms, i will get this problem in every codes which out of context. What is the correct way for solving this problem.