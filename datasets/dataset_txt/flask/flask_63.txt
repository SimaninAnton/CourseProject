jjnurminen commented on 10 Sep 2019 â€¢
edited
Hi,
I have a Python package, let's call it mypackage. After creating a Flask app inside the package, I noticed that all logging messages from my own package started appearing twice.
I tracked the cause to Flask automatically creating a logging.Logger instance (accessible as app.logger) that has the name mypackage. This follows from the fact that name of my Flask app is also mypackage (this is required to set up some static assets correctly). However, as logging.Logger instances are singletons, Flask ends up accessing an existing logger inside my package hierarchy and silently attaching its own stderr handler to it. Since all logging messages from my package end up propagating into the mypackage logger (before they propagate to the root logger), I now get all log messages twice.
Possible remedies that I can think
do not automatically set up logging handlers inside Flask, or only set them up in special circumstances
if the app logger really needs to be automagically set up and equipped with a handler, give it a name of 'Flask.{insert_appname}' or something to reduce chance of name collisions
Using Flask 1.1.1, Python 2.7.16