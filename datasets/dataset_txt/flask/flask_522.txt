dmulter commented on 18 Oct 2017
Expected Behavior
It may be an unusual case, but I initialize Config objects just to load remote secure environment variables in addition to my normal app config loading. I've always just initialized with Config(None) under Python 2, but have just switched over to Python 3 and it throws an exception as described below. Note that the file is loaded into a local temp file.
I can work around the problem by putting anything in for root_path, but it would be cleaner if I could pass None for the root_path. I would expect Flask to assume fully qualified paths for files if root_path is not set.
config = Config(None)
with tempfile.NamedTemporaryFile() as s3_file:
    if get_config_file(stage, s3_file.name):
        config.from_pyfile(s3_file.name)
Actual Behavior
The os.path.join() call fails since the root_path is None.
  File "/app/config.py", line 28, in _from_s3
    config.from_pyfile(s3_file.name)
  File "/usr/lib/python3.6/site-packages/flask/config.py", line 125, in from_pyfile
    filename = os.path.join(self.root_path, filename)
  File "/usr/lib/python3.6/posixpath.py", line 78, in join
    a = os.fspath(a)
TypeError: expected str, bytes or os.PathLike object, not NoneType
Environment
Python version: 3.6
Flask version: 0.12.2
Werkzeug version: 0.12.2