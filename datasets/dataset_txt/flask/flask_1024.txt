rawrgulmuffins commented on 6 Jun 2015
In Python2.7 get_loader returns an empty string if a loader isn't found.
$ python
Python 2.7.6 (default, Mar 22 2014, 22:59:56) 
[GCC 4.8.2] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import pkgutil
>>> pkgutil.get_loader("testing")
>>> pkgutil.get_loader(__name__)
<pkgutil.ImpLoader instance at 0x7f03a435f8c0>
>>> 
Python3.4 an AttributeError is thrown.
$ python
Python 3.4.0 (default, Apr 11 2014, 13:05:11) 
[GCC 4.8.2] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> import pkgutil
>>> pkgutil.get_loader(__name__)
<class '_frozen_importlib.BuiltinImporter'>
>>> pkgutil.get_loader("testing")
Traceback (most recent call last):
File "<stdin>", line 1, in <module>
File "/usr/lib/python3.4/pkgutil.py", line 467, in get_loader
    return find_loader(fullname)
File "/usr/lib/python3.4/pkgutil.py", line 488, in find_loader
    return spec.loader
AttributeError: 'NoneType' object has no attribute 'loader'
>>> 
This means that if someone does something like
from flask import Flask
app = Flask("testing")
Then
AttributeError: 'NoneType' object has no attribute 'loader'
is thrown on Python3.4
Suggested changes in flask/flask/helpers.py
in get_root_path
637    # Next attempt: check the loader.
638    loader = pkgutil.get_loader(import_name)
to
load =  None
try:
    loader = pkgutil.get_loader(import_name)
except AttributeError:
    pass