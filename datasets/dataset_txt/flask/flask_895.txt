adamhadani commented on 28 Jan 2016
Hello,
I'd like to propose splitting off the config.py module (encompassing the Config application and its various helpers) into it's own standalone Python module, and adding it as a dependency.
Reasoning:
It's a great standalone piece of functionality! People would find this useful on its own and be able to contribute / maintain it separately as an open source Python package, with all the benefits that has (e.g test coverage, functionality such as support for more config types etc etc - things that come with more usage and visibility of the project)
Specific real-world use case in mind which I ran into - In a scenario of having a SOA architecture comprised of many micro-services, and among those services having a mix of Flask webapps (e.g APIs) and daemons (e.g services that have no web interface but run some periodic logic), it would be great to be able to use the same configuration mechanism to configure both types. Flask would only used for the API (webapp) services, and it feels excessive to need to add it as a requirement only to be able to extract its flask.config module...