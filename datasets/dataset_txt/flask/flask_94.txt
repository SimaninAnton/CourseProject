celine-m-s commented on 22 Jul 2019 â€¢
edited
Hello!
I have a problem in my Flask application. When the "Referer" header field is longer than about 1700 characters in any view, Flask does not perform the redirection but issues a 503 error.
Actual behavior
# PDB
import requests

headers = {
    {
        'host': 'https://myhost.com',
        'referer': 'https://myhost.com?id_token_hint=asuperlongtokenstrippedoutforconvenience'    
    }
}

requests.get('https://myurl.com', headers=headers)
<Response [503]>
# views.py
@app.route('/aview')
def original_view():
    return redirect(url_for('home'))

@app.route('/')
def home():
    return render_template('home.html')
The redirection works when the referrer field is shorter than about 1700 characters, I tested it several times. Note that this happens only on staging or on production and never on my dev environment.
My direction to bypass this problem is to change the referrer and then perform the redirection.
But if I change it in original_view, the referrer is still present in the redirected view (home). It does nothing. Example:
# views.py
from flask import request

@app.route('/aview')
def original_view():
    real_request = request._get_current_object()
    real_request.environ['HTTP_REFERER'] = ''
    return redirect(url_for('home'))
Doing this, the request object is changed in original_view but reappears as it was before in home with the old referrer still present.
I read that Flask stores WSGI variables in a local thread but I did not manage to change it and I don't know if it's even possible. I tried to get the context using _request_ctx_stack from current app but even if I change the referrer here, it still reappears after the redirection.
Does someone have an idea of what I can do to solve this problem in an elegant way? Thanks in advance!
Expected Behavior
Perform the redirection without a 503 or delete the referrer.
Environment
Python version: 3.6.7
Flask version: 0.12.4
Werkzeug version: 0.11.10