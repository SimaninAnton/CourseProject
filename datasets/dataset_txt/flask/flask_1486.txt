boomlinde commented on 31 Aug 2012
I'm dynamically generating a bunch of views in a piece of code that essentially boils down to
for manager in managers:
    app.add_url_rule('/managers/%s/<parameter>' % manager['identifier'], manager['lambda']
where the lambda key in the manager objects is a lambda object using a small set of common functions with varying input parameters based on values in the manager object.
The issue is that when adding multiple url rules pointing to lambdas in the same module, all the routes will point to the lambda that was defined last. Upon further investigation, it seems Flask URL rules only refer to endpoint functions by name in a string, so all the endpoints that point to lambdas in the same scope will end up pointing at the same lambda, referred to as "package.".
I realize that keeping names is necessary for reverse lookup of URL rules, but I think that ideally Flask should keep track of the endpoint function object itself by a pointer as well and use that to call.