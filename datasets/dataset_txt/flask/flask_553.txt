ginkoid commented on 15 Aug 2017 â€¢
edited
Expected Behavior
Normally, if you want a permanent cookie, you can set
session.permanent = True
app.permanent_session_lifetime = datetime.timedelta(weeks=156)  # 3 years
However, if you also change SESSION_COOKIE_NAME in app.config to something else, this should only change the name of the cookie, however, it also makes the session cookies invalidate after a browser session, not the permanent_session_lifetime.
Demo:
import datetime
from flask import Flask, session

app = Flask(__name__)
app.secret_key = 'super_secret'

@app.before_request
def settings():
    app.config['PERMANENT_SESSION_LIFETIME'] = datetime.timedelta(weeks=156)  # 3 years
    # app.config['SESSION_COOKIE_NAME'] = 'other_name'

@app.route('/')
def index():
    if 'test' in session:
        return 'You have a cookie'
    return 'You do not have a cookie'
    
@app.route('/get_cookie')
def get_cookie():
    session['test'] = 'testcookie'
    return 'Cookie sent'

app.run()
Actual Behavior
If you run the above script, and visit /get_cookie, then visit /, notice that it works as expected. You can also close and reopen the browser, and the cookie stays, as expected, because of the permanent_session_lifetime.
However, if you uncomment the bit that sets the SESSION_COOKIE_NAME, then re-run the script, and follow the above steps again (including reopening the browser), you will notice that the session is invalidated upon reopening the browser.
Environment
Python version: 3.5.2
Flask version: 0.12.2
Werkzeug version: 0.12.2