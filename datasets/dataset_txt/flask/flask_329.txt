wayneworkman commented on 10 Jul 2018 â€¢
edited
Issue
Jsonify always returns datetime objects as GMT timezone. Seems like this has been a problem in the past with these issues:
#2392
#2374
Environment
Python version: 2.7.5
Flask version: 1.0.2
Werkzeug version: 0.14.1
pytz version: 2018.5
Testcode
#!/usr/bin/env python2.7

from werkzeug.http import http_date
from datetime import datetime
import pytz

from flask import Flask, jsonify

app = Flask(__name__)

@app.route('/')
def root():
    # Localize time
    local_time = pytz.timezone("America/Chicago")
    time = datetime.utcnow().replace(microsecond=0).replace(tzinfo=pytz.utc)
    time = time.astimezone(local_time)

    print("iso format:", time.isoformat())
    print("object:", time.tzinfo)
    print("http date:", http_date(time))

    result = [time]

    print("Test object: %s" % result)

    return jsonify(result)

app.run(host='127.0.0.1', port=8080, debug=False)
Console output:
Test object: [datetime.datetime(2018, 7, 10, 11, 45, 20, tzinfo=<DstTzInfo 'America/Chicago' CDT-1 day, 19:00:00 DST>)]
Jsonify output:
["Tue, 10 Jul 2018 16:45:20 GMT"]