vimalloc commented on 25 Apr 2017
(I'm not sure if I should open this here or at uwsgi, feel free to close if this is not appropriate).
Using a QueueHandler with flask works fine when using the built in flask server, but it fails to log to any of the handlers specified in the QueueHandler when run behind uwsgi (Flask==0.12.1, uWSGI==2.0.15, python==3.5.2).
Here is an example app to demonstrate this:
import logging
from logging.handlers import SMTPHandler, QueueHandler, QueueListener
from queue import Queue
from flask import jsonify, Flask

app = Flask(__name__)
app.debug = False
app.logger.setLevel(logging.INFO)

# Setup logging formatting
log_fmt = logging.Formatter(
    fmt='%(levelname)s: %(asctime)s - %(name)s - %(message)s',
    datefmt='%m/%d/%Y %H:%M:%S'
)

# Setup file log handler
file_handler = logging.FileHandler('/tmp/test_logger.log')
file_handler.setLevel(logging.INFO)
file_handler.setFormatter(log_fmt)

# Setup email log handler
mail_handler = SMTPHandler(
    'localhost',
    'flask_app_error@domain.tld',
    ['email@domain.tld'],
    'Error in flask app'
)
mail_handler.setLevel(logging.ERROR)
mail_handler.setFormatter(log_fmt)

# Setup a queue handler which will handle logs on a separate thread
log_queue = Queue(-1)
queue_handler = QueueHandler(log_queue)
queue_listener = QueueListener(log_queue, mail_handler, file_handler,
                               respect_handler_level=True)
app.logger.addHandler(queue_handler)
queue_listener.start()

log = logging.getLogger(__name__)

@app.route('/error')
def error_test():
    log.error("Test logging")
    return jsonify({'foo': 'bar})

if __name__ == '__main__':
    app.run()
And I run it with:
uwsgi --http :5000 --mount /=test_logger:app --manage-script-name
If instead of using a QueueHandler/QueueListener, I pass the log handlers to the app.logger directly, things work as expected.
app.logger.addHandler(file_handler)
app.logger.addHandler(mail_handler)
However, I would like to be able to utilize QueueHandler and QueueListener to do logging on a separate thread if possible.