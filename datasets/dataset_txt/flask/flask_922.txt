galgalesh commented on 23 Dec 2015
Hi
When calling a flask webserver from angularjs, you get method not allowed and content-type not allowed errors. This is because the flask OPTIONS response does not specify Access-Control-Allow-Headers and Access-Control-Allow-Methods by default.
This is fixed by following code fragment:
@app.after_request
def apply_caching(response):
    response.headers['Access-Control-Allow-Headers'] = 'Content-Type'
    response.headers['Access-Control-Allow-Methods'] = 'GET,PUT'
    return response
Is the exclusion of these headers intentional or is this a bug? I think a lot of people call Flask from angularjs, so supporting these headers by default might be good for adoption and ease of use?
Kind regards