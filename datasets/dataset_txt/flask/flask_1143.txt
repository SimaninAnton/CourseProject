nklever commented on 27 Nov 2014
As you mentioned in Unicode in Flas Flask is totally Unicode based. And more "Flask just assumes that if you are sending Unicode out you want it to be UTF-8 encoded. Flask will do the encoding and setting of the appropriate headers for you."
This assumption is on my opinion be broken in uploading files, because the read method of the FileStorage io.BytesIO stream in the following code is returning an ascii string (type 'str') and not an unicode string (type 'unicode') - so you have to decode this string to the Flask Unicode Behaviour:
@app.route('/upload', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        f = request.files['the_file']
        content = f.stream.read()
        if isinstance(content, str): print('content is str')
        content = content.decode('utf-8')
        if isinstance(content, unicode): print('content is unicode')
        ...
I know, that Flask don't knows if an uploaded file will be utf-8 or any other, but analogue as in the assumption above, Flask should assume utf-8 and not ascii as default encoding.