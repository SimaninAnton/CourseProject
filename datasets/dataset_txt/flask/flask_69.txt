kafonek commented on 5 Sep 2019
Expected Behavior
I am adding headers to the response of every request in my app (a pep 503 style web-app to serve out internally hosted python libraries). The extra header shows up in almost every response.
app = Flask(__name__)

@app.after_request
def extra_header(response):
    response.headers['foo'] = 'bar'
    return response

### pep 503 endpoint to serve pip installs
@app.route('/packages/<package_name>/<filename>')
def get_package(package_name, filename):
    ### logic to get library from internal databases
    ### directory, filename get defined here
    return send_from_directory(directory, filename)
Then the users run a pip install index-url=<flask-app url>. Every request/response must include the custom header though or it is blocked by internal gates.
Actual Behavior
When a user runs a pip install 'internal_library>1.2' or similar syntax without a --no-cache-dir option, pip sends a GET to the server with If-None-Match and If-Modified-Since headers. When those match, the web-server responds with status code 304 and headers that include ETag and Cache-Control, but not the custom headers specified in the after_request function.
Environment
Python version: 3.5.1
Flask version: 0.12.2
Werkzeug version: 0.12.2