Contributor
flying-sheep commented on 18 Jan 2015
Currently, i have to do this if i want to simply reply 304.
given an object f with the fields mime, modified and data:
rv = send_file(BytesIO(f.data), mimetype=f.mime)
rv.last_modified = f.modified.timestamp()
return rv.make_conditional(request)
using python 2, this would be worse, as it is most times:
rv.last_modified = (f.modified - datetime(1970, 1, 1)).total_seconds()
iâ€™d like to have a way to make use of a datetime object or POSIX timestamp in combination with the existing conditional argument to send_file. a way that one can use without having to discover last_modified and make_conditional both, e.g. (last_modified can be a datetime or timestamp):
return send_file(BytesIO(f.data), mimetype=f.mime,
                 conditional=True, last_modified=f.modified)
Docs
the documentation to the conditional parameter would be extended to mention that last_timestamp has to be supplied if the first argument is a file handle instead of a name.
Implementation
we could create a helper function:
def to_timestamp(da_ti):
    if PY2:
        epoch = datetime(1970, 1, 1, tzinfo=da_ti.tzinfo)  # use tzinfo to ensure subtractability
        return (da_ti - epoch).total_seconds()
    else:  # we do require python 3 >= 3.3, right?
        return da_ti.timestamp()