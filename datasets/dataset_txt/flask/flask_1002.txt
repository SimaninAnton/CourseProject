benjamin-hodgson commented on 1 Jul 2015
I get an exception when I attempt to use a relative import with Flask in debug mode.
Steps to reproduce
My package looks like this:
mypkg\
  __init__.py
  mymodule.py
Here's __init__.py:
xyz = 123
And in mymodule.py:
from flask import Flask
from . import xyz

app = Flask(__name__)
app.run(debug=True)
Run the application using python -m mypkg.mymodule. I'm using Python 3.4.3 on a Windows machine, with Flask 0.10.1 (the version from PyPI).
Actual results
The usual "you attempted to use a relative import but you're not in a package" exception:
Traceback (most recent call last):
  File "...\mymodule.py", line 2, in <module>
    from . import xyz
SystemError: Parent module '' not loaded, cannot perform relative import
If you remove debug=True, or use an absolute import (from mypkg import xyz), there is no error. The error persists if you name your module __main__.py (instead of mymodule.py) and use python -m mypkg. The error persists if you attempt to import a name from a submodule of the package (it's nothing to do with the import being from __init__.py).
I'm guessing it's something to do with Flask's magical reloading of edited files in debug mode.
Expected results
No error; xyz is imported as usual.