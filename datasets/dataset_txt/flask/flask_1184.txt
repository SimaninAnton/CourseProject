k-bx commented on 18 Sep 2014
I know this might sound silly, but it's actually quite a problem for me.
I have integration tests that test our infrastructure, which contains multiple web services and daemons. I wrote a small wrapper that, inside a test, when you try to access a web service, would launch it. How it works for our non-python web apps is that it launches server process and waits for a regexp that it would produce, containing "listening on ..." phrase. That would mean it's ready to serve requests.
Currently, our flask app prints this output when you launch app.py:
(tldr-env)➜  tldr-mediabuyer git:(staging) ✗ python app.py
 * Running on http://127.0.0.1:5000/
 * Restarting with reloader
Unfortunately, neither of these means app actually listens on those ports (it takes more than a second to actually serve requests).
So, my proposal is to only print "Running on ..." when you actually accept requests. Same for "Restarting with reloader".
I hope idea is clear and not too weird :) Thanks!
p.s.: when I said "quite a problem" I didn't mean it's hard to solve. It can be "solved" in multiple ways, but I would prefer this one as one that doesn't require you to either "sleep" or "curl some url in a loop" solutions.