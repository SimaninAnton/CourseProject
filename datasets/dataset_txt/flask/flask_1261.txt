joernhees commented on 28 Apr 2014
It's quite common to use the app.route decorator together with other decorators to restrict access like this for example:
@app.route('/foo')
@auth.admin_required
def foo():
  pass
This can easily become a security issue (also described in gae-init/gae-init#149) if you sloppily swap the order of the decorators:
@auth.admin_required
@app.route('/foo')
def foo():
  pass
This will silently register foo without any guards and can easily hit developers "off-guard" ;). IMO this is a bit too easy and silent. I'd even bet that quite some people make this mistake.
I can think of a solution based on inspection at decoration time (inside app.route above app.route.decorator) check that @app.route decorators are not decorated with anything else. This doesn't feel nice but might prevent security flaws... thoughts?
1