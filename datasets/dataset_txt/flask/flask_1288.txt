lingthio commented on 1 Mar 2014
Dear Flask Team,
THANK YOU SO MUCH for developing such a delightful platform.
I truly love my work in large part because of Flask!
I have an opportunity to 'give back' to the Flask community. I would like to submit an extension for listing in the Flask Extension Registry, and have it accepted as an Approved Extension.
Warmly,
Ling.
Extension: https://pypi.python.org/pypi/Flask-User
Version: v0.3.6
I have followed your guidelines below:
o. An approved Flask extension requires a maintainer.
Maintainer: Ling Thio <ling.thio [at] gmail.com>
Repository: https://github.com/lingthio/flask-user
An approved Flask extension must provide exactly one package or module named flask_extensionname.
Module: flask_user
It must ship a testing suite that can either be invoked with make test or python setup.py test.
python setup.py test
Runs automated tests and coverage currently runs at 98%.
APIs of approved extensions will be checked
UserManager.init(app) sets self.app = app
UserManager.init_app(app) does NOT set self.app
The license must be BSD/MIT/WTFPL licensed.
BSD License
The naming scheme for official extensions
Flask-User
Approved extensions must define all their dependencies in the setup.py file
mkvirtualenv test # brand new env
pip install flask-user
can run the flask_user/example_apps/basic_app.py
The extension must have documentation that uses one of the two Flask themes for Sphinx documentation.
See http://pythonhosted.org//Flask-User/
The setup.py description (and thus the PyPI description) has to link to...
The documentation: http://pythonhosted.org//Flask-User/
Home page: https://github.com/lingthio/flask-user
Bug track: https://github.com/lingthio/flask-user/issues
Development version: n/a
The zip_safe flag in the setup script must be set to False
setup.py:
zip_safe=False,
An extension currently has to support Python 2.6 as well as Python 2.7
Travis-CI runs Flask-Utils on Python 2.6, 2.7 and 3.3