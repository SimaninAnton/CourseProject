sonnguyen2201 commented on 12 Oct 2019 â€¢
edited
from flask_api import FlaskAPI
from flask import request
from werkzeug.exceptions import HTTPException
from flask import json


app = FlaskAPI(__name__)


@app.errorhandler(HTTPException)
def handle_exception(e):
    """Return JSON instead of HTML for HTTP errors."""
    # start with the correct headers and status code from the error
    response = e.get_response()
    # replace the body with JSON
    response.data = json.dumps({
        "code": e.code,
        "name": e.name,
        "description": e.description,
    })
    response.content_type = "application/json"
    return response


@app.route('/', methods=['GET'])
def get_value():
    key = request.args.get('key')

    if not key:
        raise HTTPException("HELLO")

    return "done"


if __name__ == "__main__":
    app.run(debug=True)
When making a request on http://127.0.0.1:5000/ I get:
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>None Unknown Error</title>
<h1>Unknown Error</h1>
<p>HELLO</p>
By changing the original code by:
    if not key:
        raise HTTPException()
I thought that the code above will assign the error as HTTP error and I expect the result would return JSON instead of HTML but it doesn't work.
Another try on http://127.0.0.1:5000/abcdef, I get:
{
    "code": 404,
    "description": "The requested URL was not found on the server. If you entered the URL manually please check your spelling and try again.",
    "name": "Not Found"
}
Environment
Python version: 3.7
Flask version: 1.1.1
Werkzeug version: 0.16.0