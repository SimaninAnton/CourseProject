robodude666 commented on 11 Aug 2014
I love Flask. It's really great.
But one of the things that bothers me about it is how un-opinionated it tries to be, which I think in the end makes it a lot more difficult to use.
There are at least half a dozen or so way of setting configurations:
You can set values manually.
You can read from an object.
You can read from a JSON file.
You can read from an environment variable.
You can read from a string to a module.
Not to mention all of the other extensions that add support for yaml, and other methods.
And then, where do you place them?
You can use instance folders.
You can not use instance folders.
You can use some path defined in an environment variable.
You can dump them with the app.
This makes it very difficult to figure out what the best way of setting up a project, because if you look through all of the different example starter projects on GitHub, they're all laid out completely differently.
Then it comes to, how to structure your app?
Do you use an app factory?
Do you not use an app factory?
If you do use an app factory, and you want to use gunicorn:
Do I create a simple gunicorn.py that creates an app from the factory and makes an app?
Do I write a custom script with Click or Flask-Script that launches gunicorn?
Certainly, if you've deployed dozens of Flask apps already, and you have your own template project setup and figured out the way you want to do everything it's okay. But, for those new to Flask, or coming from other Frameworks it can be a bit daunting to have so many options, and not having anyone agree on what should be used.