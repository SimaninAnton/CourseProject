infinite-Joy commented on 21 Sep 2016
This seems like a bug on windows:
Test run on windows gave me the following error
> py.test tests\test_helpers.py
←[1m============================= test session starts ==========================
===←[0m
platform win32 -- Python 2.7.10, pytest-3.0.2, py-1.4.31, pluggy-0.3.1
rootdir: , inifile: setup.cfg
collected 42 items ←[0m←[1m
←[0m
tests\test_helpers.py ........................................F.

================================== FAILURES ===================================
←[1m←[31m_________________________ TestSafeJoin.test_safe_join _________________
________←[0m

self = <test_helpers.TestSafeJoin object at 0x02F3F790>

←[1m    def test_safe_join(self):←[0m
←[1m        # Valid combinations of *args and expected joined paths.←[0m
←[1m        passing = (←[0m
←[1m            (('a/b/c', ), 'a/b/c'),←[0m
←[1m            (('/', 'a/', 'b/', 'c/', ), '/a/b/c'),←[0m
←[1m            (('a', 'b', 'c', ), 'a/b/c'),←[0m
←[1m            (('/a', 'b/c', ), '/a/b/c'),←[0m
←[1m            (('a/b', 'X/../c'), 'a/b/c', ),←[0m
←[1m            (('/a/b', 'c/X/..'), '/a/b/c', ),←[0m
←[1m            # If last path is '' add a slash←[0m
←[1m            (('/a/b/c', '', ), '/a/b/c/', ),←[0m
←[1m            # Preserve dot slash←[0m
←[1m            (('/a/b/c', './', ), '/a/b/c/.', ),←[0m
←[1m            (('a/b/c', 'X/..'), 'a/b/c/.', ),←[0m
←[1m            # Base directory is always considered safe←[0m
←[1m            (('../', 'a/b/c'), '../a/b/c'),←[0m
←[1m            (('/..', ), '/..'),←[0m
←[1m        )←[0m
←[1m    ←[0m
←[1m        for args, expected in passing:←[0m
←[1m>           assert flask.safe_join(*args) == expected←[0m
←[1m←[31mE           assert '/a\\b\\c' == '/a/b/c'←[0m
←[1m←[31mE             - /a\\b\\c←[0m
←[1m←[31mE             + /a/b/c←[0m

←[1m←[31mtests\test_helpers.py←[0m:803: AssertionError
←[1m←[31m===================== 1 failed, 41 passed in 1.33 seconds =============
========←[0m
In windows the directories on an external location can be accessed using four back-slashes "\\" from python code. So I would suggest to return "\\a\b\c" if the env is windows. Of course this line of thinking can be naïve and maybe there is a better approach there.