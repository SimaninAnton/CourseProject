woxcab commented on 13 May 2018
If register an error handler for exception class A then this error handler will be called for any exception B that isn't A or subclass of A.
Expected Behavior
Given error handler must be called only for exceptions that's instance of A or instance of subclass of A.
Actual Behavior
Error handler processes any exception.
How to reproduce
Minimal code:
import flask
from werkzeug.exceptions import HTTPException

app = flask.Flask(__name__)
app.register_error_handler(HTTPException, lambda e: (str(e), e.code))

@app.route('/')
def index():
    raise ValueError()

app.run()
Run script
Go to http://127.0.0.1:5000/
Server logs exception AttributeError: 'ValueError' object has no attribute 'code', i.e. registered error handler is called for ValueError exception, but the error handler is registered only for HTTPException and its subclasses.
Environment
Python version: 3.5.2
Flask version: 1.0.2
Werkzeug version: 0.14.1