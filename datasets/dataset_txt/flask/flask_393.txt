harveyslash commented on 27 Apr 2018
I had written a simple wrapper to take all the response primitives, and jsonify them before returning to client like so:
class JSONifyResponseWrapper(Response):
    default_mimetype = 'application/json'

    @classmethod
    def force_type(cls, rv, environ=None):
        try:
            rv = jsonify(rv)
        finally:
            return super(JSONifyResponseWrapper, cls).force_type(rv, environ)
Then i set app.response_class to the class above.
However, in flask 1.0 , the routes are required to return a tuple.
This means if I have a route like this:
@base_blueprint.route('', methods=['Post'])
def hello():
    a = {"hello":"world"} 
   return a
The client receives a valid json object.
But if I do this:
@base_blueprint.route('', methods=['Post'])
def hello():
    a = [i for i in range(100)]
   return a
Flask will throw this error:
TypeError: The view function did not return a valid response tuple. The tuple must have the form (body, status, headers), (body, status), or (body, headers)`