snordhausen commented on 23 Dec 2019
Expected Behavior
In Python 3.7.5, this works just fine and does nothing:
from unittest.mock import patch
import flask

@patch("flask.request")
def foo(patched_request):
    pass

foo()
Actual Behavior
In Python 3.8.0, it fails with
RuntimeError: Working outside of request context.
This happens because patch now tries to return an AsyncMock in some cases and Python's mock.py line 51 calls asyncio.iscoroutinefunction() on flask.request. This will then call getattr(func, '_is_coroutine', None) in coroutines.py line 167 which flask then complains about.
It might be fixable by adding a special case to raise AttributeError instead when the _is_coroutine attribute is accessed.
Environment
Python version: 3.8.0
Flask version: 1.1.1 and git master
Werkzeug version: 0.16.0 and git master