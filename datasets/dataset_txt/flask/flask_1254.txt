idella commented on 6 May 2014
with pypy; $ pypy -V
Python 2.7.3 (87aa9de10f9ca71da9ab4a3d53e0ba176b67d086, Apr 09 2014, 00:32:56) [PyPy 2.2.1]
 * pypy: running distutils-r1_run_phase python_test
............E...............................................................................................................F..........................F.............................F......................................E............
======================================================================
ERROR: test_build_error_handler (flask.testsuite.basic.BasicFunctionalityTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/basic.py", line 758, in test_build_error_handler
    flask.url_for('spam')
TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType

======================================================================
ERROR: test_session_transactions_no_null_sessions (flask.testsuite.testing.TestToolsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/testing.py", line 106, in test_session_transactions_no_null_sessions
    with c.session_transaction() as sess:
TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType

======================================================================
FAIL: test_uninstalled_package_paths (flask.testsuite.config.InstanceTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/config.py", line 167, in test_uninstalled_package_paths
    self.assert_equal(app.instance_path, os.path.join(here, 'test_apps', 'instance'))
  File "/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/__init__.py", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: '/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/test_apps/config_package_app/instance' != '/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/test_apps/instance'

======================================================================
FAIL: test_json_key_sorting (flask.testsuite.helpers.JSONTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/helpers.py", line 200, in test_json_key_sorting
    '}'
  File "/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/__init__.py", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: Lists differ: [u'{', u'"values": {', u'"0": ... != ['{', '"values": {', '"0": "fo...

First differing element 4:
"10": "foo",
"2": "foo",

Diff is 955 characters long. Set self.maxDiff to None to see it.

======================================================================
FAIL: test_appcontext_signals (flask.testsuite.signals.SignalsTestCase)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/signals.py", line 118, in test_appcontext_signals
    self.assert_equal(recorded, ['push', 'pop'])
  File "/mnt/gen2/TmpDir/portage/dev-python/flask-0.10.1-r1/work/Flask-0.10.1/flask/testsuite/__init__.py", line 139, in assert_equal
    return self.assertEqual(x, y)
AssertionError: Lists differ: ['push', 'push'] != ['push', 'pop']

First differing element 1:
push
pop

- ['push', 'push']
?            ^^^

+ ['push', 'pop']
?            ^^


----------------------------------------------------------------------
Ran 233 tests in 5.798s

FAILED (failures=3, errors=2)
ditto py2.7 3.3. Not got deps installed under py3.4 at this stage.
To me it appears the tests are simply written for py2 py3 and pypy misses out because of how pypy selects and or uses exception classes in case of the errors triggered by these tests. As for the failures=3, well, 1 is a unicode issue, the others just don't work.
Oh. see 837