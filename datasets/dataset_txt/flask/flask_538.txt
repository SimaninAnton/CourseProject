jeffrey commented on 9 Sep 2017
In response to a POST, I wanted to construct a URL pointing at a different URL (the home of the created object) which did NOT support POST.
It turns out, this doesn't work with Flask==0.12.2. The rule I want doesn't match, so I end up matching a less specific rule, with the distinguishing name treated as a parameter, not a path.
What appears to be happening is that default method is being pulled out of _request_ctx early in url_for(). In this case, that method will be a POST.
I'm not sure if defaulting to the request's current method is really desirable. How often are you responding to a POST and want url_for to respond with the best match for POST? I think typically most endpoints will respond to a GET, but many endpoints won't respond to a POST.
The workaround is to include the undocumented _method keyword argument. That will work (hopefully permanently), but I'd prefer:
A) for this to be explicitly supported by the API, and
B) I think the default should probably always be GET. My guess is that will be correct far more