trstringer commented on 9 Nov 2018
Expected Behavior
When streaming from a generator, if there is an exception thrown then the application's custom exception handler should catch this exception.
from flask import Flask, Response

app = Flask(__name__)

@app.route('/')
def default_route():
    return 'hello world'

@app.route('/error')
def error_route():
    raise Exception('error in error_route')

@app.route('/streamingerror')
def streaming_error_route():
    def inner_gen():
        raise Exception('error from streaming_error_route')
        yield 'hello'
    return Response(inner_gen())

@app.errorhandler(Exception)
def custom_exception_handler(_):
    return 'handled by custom exception handler'
Actual Behavior
 $ curl localhost:5000
hello world~
 $ curl localhost:5000/error
handled by custom exception handler~
 $ curl localhost:5000/streamingerror
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<title>500 Internal Server Error</title>
<h1>Internal Server Error</h1>
<p>The server encountered an internal error and was unable to complete your request.  Either the server is overloaded or there is an error in the application.</p>
The request to /streamingerror should also pass through the custom exception handler.
Environment
Python version: 3.6.3
Flask version: 1.0.2
Werkzeug version: 0.14.1
Other notes
I had tried with stream_with_context and the same behavior still exists.
4