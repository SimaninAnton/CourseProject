mavroprovato commented on 12 Nov 2014
I'm using Flask v0.10.1 and I have the following project structure:
test
├── api
│   ├── hello.py
│   └── __init__.py
├── config
│   ├── config.py
│   └── __init__.py
└── __init__.py
The hello.py file is:
import sys
import flask
from test.config import config

app = flask.Flask(__name__)

@app.route('/hello')
def hello():
    return config.MESSAGE

def main(argv):
    reloader = '--reloader' in argv
    print('Starting with reloader={}'.format(reloader))
    app.run(host='0.0.0.0', port=8080, debug=True, use_reloader=reloader)

if __name__ == '__main__':
    main(sys.argv)
and the config.py is simply
MESSAGE = 'Hello!'
When I run api.py with use_reloader=False (python -m test.api.hello) the server starts correctly. If I run it with use_reloader=True (python -m test.api.hello --reloader) it fails with:
Starting with reloader=True
 * Running on http://0.0.0.0:8080/
 * Restarting with reloader
Traceback (most recent call last):
  File "/home/kostas/Tmp/testproj/test/api/hello.py", line 3, in <module>
    from test.config import config
ImportError: No module named config