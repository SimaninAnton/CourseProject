zakahmad commented on 11 May 2019
Expected Behavior
Hi folks. I'm not sure if this is a Flask issue or an Atom one. The issue is Flask can't find the app name when the project is added to Atom.
What should happen is Flask should start the app after running flask run when the project is added to Atom (under File -> Add Project Folder). Instead, I get this error Error: Could not import "hello".
This has happened to me in two other projects.
The immediate and obvious solution is to not add projects to Atom. I'm reporting this because there might be other implications.
Actual Behavior
I started off clean, then created an app as shown in my terminal dump
zak-mbp:git zakariaahmad$ mkdir hello2
zak-mbp:git zakariaahmad$ cd hello2
zak-mbp:hello2 zakariaahmad$ pipenv --python 3.7
Creating a virtualenv for this project‚Ä¶
Pipfile: /Volumes/GoogleDrive/My Drive/git/hello2/Pipfile
Using /usr/local/opt/python/libexec/bin/python (3.7.3) to create virtualenv‚Ä¶
‚†ß Creating virtual environment...Using base prefix '/usr/local/Cellar/python/3.7.3/Frameworks/Python.framework/Versions/3.7'
New python executable in /Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG/bin/python3.7
Also creating executable in /Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG/bin/python
Installing setuptools, pip, wheel...
done.
Running virtualenv with interpreter /usr/local/opt/python/libexec/bin/python

‚úî Successfully created virtual environment!
Virtualenv location: /Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG
Creating a Pipfile for this project‚Ä¶
zak-mbp:hello2 zakariaahmad$ pipenv install flask
Installing flask‚Ä¶
Adding flask to Pipfile's [packages]‚Ä¶
‚úî Installation Succeeded
Pipfile.lock not found, creating‚Ä¶
Locking [dev-packages] dependencies‚Ä¶
Locking [packages] dependencies‚Ä¶
‚úî Success!
Updated Pipfile.lock (662286)!
Installing dependencies from Pipfile.lock (662286)‚Ä¶
  üêç   ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ 6/6 ‚Äî 00:00:01
To activate this project's virtualenv, run pipenv shell.
Alternatively, run a command inside the virtualenv with pipenv run.
zak-mbp:hello2 zakariaahmad$ vim hello.py
zak-mbp:hello2 zakariaahmad$ cat hello.py
from flask import Flask
app = Flask(__name__)

@app.route('/')
def hello_world():
    return 'Hello, World!'
zak-mbp:hello2 zakariaahmad$ pipenv shell
Launching subshell in virtual environment‚Ä¶
bash-3.2$  . /Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG/bin/activate
(hello2) bash-3.2$ FLASK_APP=hello.py flask run
 * Serving Flask app "hello.py"
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
127.0.0.1 - - [10/May/2019 15:41:17] "GET / HTTP/1.1" 200 -
^C(hello2) bash-3.2$ ls -la
total 48
drwx------  2 zakariaahmad  staff  4096 May 10 15:39 .
drwx------  5 zakariaahmad  staff  4096 May 10 15:38 ..
-rw-------  1 zakariaahmad  staff   150 May 10 15:39 Pipfile
-rw-------  1 zakariaahmad  staff  4566 May 10 15:39 Pipfile.lock
-rw-------  1 zakariaahmad  staff   109 May 10 15:39 hello.py
(hello2) bash-3.2$ FLASK_APP=hello.py flask run
 * Serving Flask app "hello.py"
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
127.0.0.1 - - [10/May/2019 15:41:41] "GET / HTTP/1.1" 200 -
^C(hello2) bash-3.2$ mkdir templates
(hello2) bash-3.2$ vim templates/index.html
(hello2) bash-3.2$ cat templates/index.html
<!doctype html>
<html>
  <head>
    <title>This is the title of the webpage!</title>
  </head>
  <body>
    <p>This is an example paragraph.</p>
  </body>
</html>
(hello2) bash-3.2$ vim hello.py
(hello2) bash-3.2$ cat hello.py
from flask import Flask
from flask import render_template
app = Flask(__name__)

@app.route('/')
def hello_world():
    return render_template('index.html')
(hello2) bash-3.2$ FLASK_APP=hello.py flask run
 * Serving Flask app "hello.py"
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
 * Running on http://127.0.0.1:5000/ (Press CTRL+C to quit)
127.0.0.1 - - [10/May/2019 15:44:54] "GET / HTTP/1.1" 200 -
^C(hello2) bash-3.2$ ls -la
total 56
drwx------  3 zakariaahmad  staff  4096 May 10 15:44 .
drwx------  5 zakariaahmad  staff  4096 May 10 15:38 ..
-rw-------  1 zakariaahmad  staff   150 May 10 15:39 Pipfile
-rw-------  1 zakariaahmad  staff  4566 May 10 15:39 Pipfile.lock
-rw-------  1 zakariaahmad  staff   157 May 10 15:44 hello.py
drwx------  2 zakariaahmad  staff  4096 May 10 15:43 templates
Next, I added the hello2 folder project to Atom (from File -> Add Project Folder), and this is the terminal dump after adding it to Atom. As you can see, it's not changing the contents of hello.py nor adding any file(s) to the hello2 project that might interfere with hello.py. Then I receive the error shown at the end.
(hello2) bash-3.2$ cat hello.py
from flask import Flask
from flask import render_template
app = Flask(__name__)

@app.route('/')
def hello_world():
    return render_template('index.html')
(hello2) bash-3.2$ ls -la
total 56
drwx------  3 zakariaahmad  staff  4096 May 10 15:44 .
drwx------  5 zakariaahmad  staff  4096 May 10 15:38 ..
-rw-------  1 zakariaahmad  staff   150 May 10 15:39 Pipfile
-rw-------  1 zakariaahmad  staff  4566 May 10 15:39 Pipfile.lock
-rw-------  1 zakariaahmad  staff   157 May 10 15:44 hello.py
drwx------  2 zakariaahmad  staff  4096 May 10 15:43 templates
(hello2) bash-3.2$ FLASK_APP=hello.py flask run
 * Serving Flask app "hello.py"
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: off
Usage: flask run [OPTIONS]

Error: Could not import "hello".
Traceback dump (after enabling debug mode):
flask.cli.NoAppException
flask.cli.NoAppException: Could not import "hello".

Traceback (most recent call last)
File "/Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG/lib/python3.7/site-packages/flask/cli.py", line 235, in locate_app
__import__(module_name)
During handling of the above exception, another exception occurred:
File "/Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG/lib/python3.7/site-packages/flask/cli.py", line 325, in __call__
self._flush_bg_loading_exception()
File "/Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG/lib/python3.7/site-packages/flask/cli.py", line 313, in _flush_bg_loading_exception
reraise(*exc_info)
File "/Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG/lib/python3.7/site-packages/flask/_compat.py", line 35, in reraise
raise value
File "/Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG/lib/python3.7/site-packages/flask/cli.py", line 302, in _load_app
self._load_unlocked()
File "/Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG/lib/python3.7/site-packages/flask/cli.py", line 317, in _load_unlocked
self._app = rv = self.loader()
File "/Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG/lib/python3.7/site-packages/flask/cli.py", line 372, in load_app
app = locate_app(self, import_name, name)
File "/Users/zakariaahmad/.local/share/virtualenvs/hello2-xmwDkloG/lib/python3.7/site-packages/flask/cli.py", line 246, in locate_app
'Could not import "{name}".'.format(name=module_name)
flask.cli.NoAppException: Could not import "hello".
Environment
Python version: 3.7.3
Flask version: 1.0.2
Werkzeug version: 0.15.2