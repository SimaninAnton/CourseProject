Contributor
SimonSapin commented on 29 Jul 2012
It is apparently a common mistake to make multiple/distinct view functions sharing the same endpoint, the last overriding the earlier ones in the app.view_functions dict.
With a decorator: http://stackoverflow.com/questions/11064263/flask-custom-decorator-breaks-the-routing
With class-based views: http://stackoverflow.com/questions/11700698/flask-route-query-parameter
Is there an use case to using app.route() or app.add_url_rule() with an existing endpoint and overriding it? I think it is more often a mistake than not. I suggest that such cases issue a warning or even raise an exception, in order to catch the mistake early. In uncommon scenarios where overriding is actually desired, the user can always use del app.view_functions[endpoint] before registering the new function.
(I can provide a patch, but Iâ€™d like to discuss the idea first.)