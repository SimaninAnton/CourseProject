elamje commented on 9 Oct 2019
Expected Behavior
Users are authenticated with flask-login, and should only be able to view files that they upload. current_user.uuid stores a unique directory for their uploads to go to so that unauthenticated users cannot access a specific users uploaded files.
@app.route('/show/<filename>')
@login_required
def show(filename: str) -> Union[Response, str]:
    print('show hit')
    filename = secure_filename(filename)  # clean user input
    user_dir = os.path.join(app.config['UPLOAD_FOLDER'], current_user.uuid)
    if os.path.exists(os.path.join(user_dir, filename)):
        return send_from_directory(directory=user_dir, filename=filename)
    else:
        abort(404)
Actual Behavior
I can visit the show/x.png url and I will be able to see x.png regardless of my authentication status.
The strange thing is that in production (Nginx, Dokku, gunicorn), the show/x.png request never hits the flask app, possibly cached? (Nginx doesn't have caching set up, Gunicorn doesn't cache, so not sure what's happening, not my browser cache either)
Locally, I can reproduce this as well, even when I'm confident there is no browser caching going on.
Environment
Python version: 3.7
Flask version: 1.1.1
Werkzeug version: 0.15.5