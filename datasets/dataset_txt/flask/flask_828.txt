djc commented on 30 May 2016
While trying to package 0.11 on Gentoo Linux, I've run into the following test failure:
============================================= FAILURES =============================================
_____________________________________ test_egg_installed_paths _____________________________________

install_egg = <function inner at 0x7f5eebfa9668>
modules_tmpdir = local('/var/tmp/portage/dev-python/flask-0.11/temp/pytest-of-portage/pytest-0/test_egg_installed_paths0/modules_tmpdir')
modules_tmpdir_prefix = local('/var/tmp/portage/dev-python/flask-0.11/temp/pytest-of-portage/pytest-0/test_egg_installed_paths0/modules_tmpdir')

    def test_egg_installed_paths(install_egg, modules_tmpdir,
                                 modules_tmpdir_prefix):
        modules_tmpdir.mkdir('site_egg').join('__init__.py').write(
            'import flask\n\napp = flask.Flask(__name__)'
        )
>       install_egg('site_egg')

tests/test_instance_config.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/conftest.py:116: in inner
    egg_path, = modules_tmpdir.join('dist/').listdir()
/usr/lib64/python2.7/site-packages/py/_path/local.py:379: in listdir
    names = py.error.checked_call(os.listdir, self.strpath)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <py._error.ErrorMaker object at 0x7f5eee4382d0>, func = <built-in function listdir>
args = ('/var/tmp/portage/dev-python/flask-0.11/temp/pytest-of-portage/pytest-0/test_egg_installed_paths0/modules_tmpdir/dist',)
kwargs = {}, __tracebackhide__ = False, cls = <class 'py.error.ENOENT'>
value = OSError(2, 'No such file or directory'), tb = <traceback object at 0x7f5eebfa6c68>
errno = 2

    def checked_call(self, func, *args, **kwargs):
        """ call a function and raise an errno-exception if applicable. """
        __tracebackhide__ = True
        try:
            return func(*args, **kwargs)
        except self.Error:
            raise
        except (OSError, EnvironmentError):
            cls, value, tb = sys.exc_info()
            if not hasattr(value, 'errno'):
                raise
            __tracebackhide__ = False
            errno = value.errno
            try:
                if not isinstance(value, WindowsError):
                    raise NameError
            except NameError:
                # we are not on Windows, or we got a proper OSError
                cls = self._geterrnoclass(errno)
            else:
                try:
                    cls = self._geterrnoclass(_winerrnomap[errno])
                except KeyError:
                    raise value
>           raise cls("%s%r" % (func.__name__, args))
E           ENOENT: [No such file or directory]: listdir('/var/tmp/portage/dev-python/flask-0.11/temp/pytest-of-portage/pytest-0/test_egg_installed_paths0/modules_tmpdir/dist',)

/usr/lib64/python2.7/site-packages/py/_error.py:84: ENOENT
Also note that it's pretty unclear that you now require py.test for test running, might want to add that as an explicit dependency somehow.