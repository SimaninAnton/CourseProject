senabIsShort commented on 26 Mar 2019
Issue came up while trying to send an empty file (and filename) to an HTTPbin form.
Using Flask you're unable to differentiate between the content of a text field in a form and a non-uploaded file from the request object
Example test
Using flask alone;
User @moy helped with this and prompted me to post this bug report
from flask import Flask, flash, request, redirect, url_for, escape

app = Flask(__name__)

@app.route('/', methods=['GET', 'POST'])
def upload_file():
    if request.method == 'POST':
        return '<pre>{}</pre>'.format(escape(str(request.form) + '\n' + str(request.files)))
    return '''
    <!doctype html>
    <title>Upload new Files</title>
    <h1>Upload new Files</h1>
    <form method=post enctype=multipart/form-data>
      <input name="normal_field" value="field_value" />
      <input type=file name=file>
      <input type=file name=secondfile>
      <input type=submit value=Upload>
    </form>
    '''
Expected Behavior
Submitting with only the first file field set in the browser,
one would expect to find :
the content of both file fields in the same object ;
the content of normal text input fields in a separate objects ;
So something along the lines of
ImmutableMultiDict([('normal_field', 'field_value')])
ImmutableMultiDict([('file', <FileStorage: 'tmp-rg1.xpi' ('application/x-xpinstall')>), 
                    ('secondfile', <FileStorage: '' ('...')>)
                   ])
Actual Behavior
Submitting with only one file (the first field) set in the browser gives:
ImmutableMultiDict([('normal_field', 'field_value'), ('secondfile', '')])
ImmutableMultiDict([('file', <FileStorage: 'tmp-rg1.xpi' ('application/x-xpinstall')>)])
The first is the form's field, the second the actual files uploaded. I see no way to distinguish between an empty text field and a non-uploaded file from the request object.
Is this behavior intended ?