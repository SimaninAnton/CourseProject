Soviut commented on 25 Oct 2012
I have a Flask 0.9 project that has all dependencies stored locally beside my app.py file. The intention is to keep everything self-contained within a version control repository so anyone using or contributing to it won't need to make any additional installations.
This being the case, I want to use some Flask extensions and decided try manually installing the Flask-Login extension. I copied the flask_login.py file to the flask/ext directory and tried to import flask.ext.login from my app.py file the same way the example does. I got an ImportError: No module named login. I then tried import flask.ext.flask_login and that too failed.
The solution I wound up with from Stack Overflow was to comment out the setup() function in the flask/ext/__init__.py file and import flask.ext.flask_login directly in my app.py file.
http://stackoverflow.com/questions/13065682/how-to-manually-install-flask-extensions
I would really like to be able to use an unmodified version of Flask locally and without a virtual environment that can still import extensions the expected way.