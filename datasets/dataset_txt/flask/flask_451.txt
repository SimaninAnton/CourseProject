antialiasis commented on 19 Feb 2018
This is a bit of a weird one cropping up under very particular circumstances, but I spent a while last week puzzling over the issue. Probably best explained through the example.
Expected Behavior
Entering "Todd" into the form field in this simple example app and submitting the form takes the user to /hello/Todd, just like clicking the "Click here if your name is Todd" link does.
from flask import Flask, redirect, request, url_for
app = Flask(__name__)

@app.route("/")
def form():
    return """
        <p><a href="{}">Click here if your name is Todd</a><p>
        <form action="{}" method="post">
            <input type="text" name="name">
            <button type="submit">This is my name!</button>
        </form>
    """.format(
        url_for("hello", name="Todd"),
        url_for("hello")
    )

@app.route("/hello", methods=["GET", "POST"])
@app.route("/hello/<name>")
def hello(name=None):
    if request.method == "POST":
        return redirect(url_for("hello", name=request.form.get("name")))
    if name:
        return "Hello {}!".format(name)
    else:
        return "Hello World!"
Actual Behavior
Submitting the form instead takes you to /hello?name=Todd.
Through my own testing I've concluded that url_for("hello", name="Todd") will return /hello?name=Todd if
we are currently processing a POST request, and
the target endpoint has a parameter-less route with the POST method allowed (/hello), but the route we actually want (/hello/<name>) only allows GET requests.
This seems obviously bizarre and counterintuitive.
Environment
Python version: 3.6.4
Flask version: 0.12.2
Werkzeug version: 0.13