kenjones-cisco commented on 15 Jan 2015
If it is possible to provide optional data input as part of request, and content type is set to application/json, but no data was provided as it was optional, a call flask.request.json or flask.request.get_json will result in a BadRequest exception.
Instead of attempting to perform a json.loads on None or empty string, add at line 153:
if not data: return None
I do realize there is a silent option, but that would seem to apply to situations when data was supplied but incorrectly formatted such that json was unable to load the data. Versus the situation where there is no data at all to even load.
I have also opened an issue with flask-restful (flask-restful/flask-restful#387) as well to change how or when the call to get_json happens, always pass silent=True, or provide consumers an option to pass through the option silent=True.
But it seems cleaner to check for the existence of data prior to trying to process the data.