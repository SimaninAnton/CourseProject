LarsKumbier commented on 3 Dec 2013
When using the test_client for unittesting, the return of the the tester is cast to bytestring instead of utf-8. As the default charset for webpages is now utf-8 and Flask also returning utf-8, the test_client should honor that.
app.py:
from flask import Flask
app = Flask(__name__)

@app.route("/")
def hello():
    return "Héllo, Wôrld!"

if __name__ == "__main__":
    app.run()
test.py
from app import app

import unittest

class BasicTestCase(unittest.TestCase):
    def test_DefaultReturnShouldBeUtf8(self):
        tester = app.test_client(self)
        response = tester.get("/", content_type="html/text")
        self.assertRegex(response.content_type, "charset=utf-8")
        self.assertEqual(response.data, "Héllo, Wôrld!")

    def test_DefaultReturnShouldBeUtf8_Workaround(self):
        tester = app.test_client(self)
        response = tester.get("/", content_type="html/text")
        self.assertRegex(response.content_type, "charset=utf-8")
        self.assertEqual(response.data.decode("utf-8", "strict"), "Héllo, Wôrld!")

if __name__ == "__main__":
    unittest.main()