apocrypth commented on 21 Aug 2019 â€¢
edited
I have stumbled upon this, at least for me, unexpected behaviour. For specific reasons, I have dictionary, which has str type key and None type key. When I try to use flask's json.dumps, it throws me TypeError, which I think should not happen, as is also described here: https://docs.python.org/3/library/json.html#json.dump
If skipkeys is true (default: False), then dict keys that are not of a basic type (str, int, float, bool, None) will be skipped instead of raising a TypeError.
So I understand this as that if skipkeys is False (and it is False by default and I am not setting it otherwise) and I have a dictionary with key types str or None, I should not receive TypeError.
Which is the case, when I try the same with regular python json library like this:
>>> import json
>>> print(json.dumps(test))
{"aa": 0, "null": {}}
>>> 
Expected Behavior
So my expectation is, that I should have the same behaviour also with flask's json implementation for the same dictionary keys:
>>> from flask import json as fjson
>>> test = {'aa': 0, None: {}}
>>> print(fjson.dumps(test))
{"aa": 0, "null": {}}
should print: {"aa": 0, "null": {}}
Actual Behavior
But instead of that, I receive TypeError.
>>> from flask import json as fjson
>>> test = {'aa': 0, None: {}}
>>> print(fjson.dumps(test))
ends up with: TypeError: '<' not supported between instances of 'NoneType' and 'str'
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/home/user/path/project/venv/lib/python3.7/site-packages/flask/json/__init__.py", line 211, in dumps
    rv = _json.dumps(obj, **kwargs)
  File "/usr/lib/python3.7/json/__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "/usr/lib/python3.7/json/encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "/usr/lib/python3.7/json/encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
TypeError: '<' not supported between instances of 'NoneType' and 'str'
>>> 
Environment
Python version: 3.7
Flask version: 1.1.1
Werkzeug version: 0.15.2