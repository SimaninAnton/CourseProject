chuck-bass commented on 16 Dec 2018 â€¢
edited
Expected Behavior
I wanna write code capable of python3. So i add "from future import unicode_literals" on the top of file.Meanwhile, i use MethodView to build rest api in the same file. I wish it could work fine.
Here is an example:
  # -*- coding: utf-8 -*-

  from __future__ import unicode_literals
  from flask import Flask
  from flask import Blueprint, request, current_app, g, abort
  from flask.views import MethodView

  masterviews = Blueprint('newmasterviews', __name__)


  class TeamAPI(MethodView):

      def get(self):
          pass


  team_view = TeamAPI.as_view('team_api')

  app = Flask(__name__)

  app.register_blueprint(masterviews, url_prefix='/rest/master')
Actual Behavior
However, when i run the web app, it thows the error,
"lib/python2.7/site-packages/flask/views.py", line 98, in as_view
view.__name__ = name
TypeError: __name__ must be set to a string object". 
I soon realize that because i use the "from future import unicode_literals" in py2 so the function name is unicode type, but the name of a function should be string type.So i wonder is it possible to change the
source code in the views.py and add the if-then workflow to convert name of function from unicode type into string type to handle the situation .
Environment
python2.7
Flask==1.0.2
Werkzeug==0.14.1