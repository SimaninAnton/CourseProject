Contributor
zvin commented on 3 Oct 2013
Hello,
When you set an initialization function with the before_app_first_request decorator you expect this function to be launched once before the first request.
But, if this function takes some time to execute, flask may respond to requests before it has finished.
Here is the code of Flask.try_trigger_before_first_request_functions(self)
if self._got_first_request:
    return
with self._before_request_lock:
    if self._got_first_request:
        return
    self._got_first_request = True
    for func in self.before_first_request_funcs:
        func()
Now, imagine 2 concurrent requests when the server starts:
the first one takes the lock and sets _got_first_request to True BEFORE calling functions in self.before_first_request_funcs
the second sees that _got_first_request is True and returns
The fix is simple: just put self._got_first_request = True after the calls to functions in self.before_first_request_funcs.