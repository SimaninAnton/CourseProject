osk386 commented on 26 Nov 2015
I am trying to deploy a flask application into an url subroot like
localhost/flaskapp
I configured my project with this settings:
wsgi.ini
[uwsgi]
socket = /tmp/wsgi.sock
chmod-socket    = 666
uid = www-data
gid = www-data
chdir= /var/www/flaskproject
module = wsgi 
callable = application
logto = /var/www/flaskproject/logs/t.log 
nginx.conf
location / {
     root   /var/www/website;
  }


location = /flaskapp { rewrite ^ /flaskapp/; }
location /flaskapp { try_files $uri @application; }
location @application {
  include uwsgi_params;
  uwsgi_param SCRIPT_NAME /flaskapp;
  uwsgi_modifier1 30;
  uwsgi_pass unix:/tmp/wsgi.sock;
}
wsgi.py
from myapp import application

if __name__ == "__main__":
    application.run()
myapp.py
from flask import Flask

application = Flask(__name__)

@application.route("/")
def index():
    try:
        import http.client
        fr = "OK Python 3.x"

    except ImportError:         
        fr = "OK Python 2.x"           
    return fr

@application.route("/more")
def sdf():
    return "OK deeper subroot"

if __name__ == "__main__":
    application.run(host='0.0.0.0')
I execute this into virtualenvs for python 2.7 and python 3.4, each one with their respective uwsgi modules compiled( I mean compiled for python 2.7 and 3.4).
When I run each one, open my browser and I got this:
_2.7 venv:_
localhost: webpage (it's ok)
localhost/flaskapp: "OK Python 2.x"
localhost/flaskapp/more: "OK deeper subroot"
_3.4 venv_
localhost: webpage (it's ok)
localhost/flaskapp: "Not found" message
localhost/flaskapp/more: "Not found" message
As you can see, this works with python 2.7 but in python 3.4. I want to know how to run this with python 3.4,
Thank you