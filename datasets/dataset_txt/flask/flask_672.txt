Parakleta commented on 20 Feb 2017 â€¢
edited
I'm not sure if this is intended behaviour and maybe I should know better, but I spent ages trying to figure out why I was getting a code 400, message Bad request syntax error and it turned out to be because I was not consuming the data associated with a request when raising an Unauthorized exception.
This seems to be a massive hole because if you are not expecting data with a request and so don't read anything then that data is left in the input stream (assuming keep-alive) and so forms the start of the next request. In fact I have even tried sending a request with another request in the data and Flask processes that data as if it were the next request and sends that in response to the following request.
I have resolved this issue by copying the body of the finally clause in the wrapper function inside exhaust_stream from formparser.py in pallets/werkzeug and having this new function decorated with @app.teardown_request. This ensures that the input stream is always drained after every request and so left over data is not mis-interpreted as the start of the next request.
Anyway, if I am expected to handle this situation manually as I have done can something be added to the documentation (or if it's already there can you point it out to me, somehow I couldn't find it). Otherwise, I think Flask should drain the input stream so that subsequent requests are always correctly aligned.