Contributor
dag commented on 19 Apr 2011
It should be made clear that for some problems (such as a custom Jinja environment), subclassing is the solution and Flask is explicitly designed for it.
Some examples and best-practices would be helpful, maybe as a 'pattern'. How to extend rather than replace the defaults, how to deal with immutable containers etc.
The reasons for the need to subclass, and the design choice of immutable containers, could be explained and defended. (Needed at construction time?)
On IRC, questions for which subclassing is the answer, are not uncommon, and at the same time few realize that you can and should do this for some things, and they're often confused as to how it's properly done.
If I find the energy I might try to draft some of the above.