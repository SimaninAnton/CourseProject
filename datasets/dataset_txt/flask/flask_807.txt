Contributor
nickjj commented on 11 Jun 2016 â€¢
edited
The get_cookie_domain function specifically fixes issues with webkit browsers by doing this:
# https://github.com/pallets/flask/blob/0.11.1/flask/sessions.py#L198-222
if rv == '.localhost':
    rv = None
The problem is that nowadays many people are using Docker and other techniques (Vagrant, etc.) to create a better development environment so they are no longer running Flask on localhost.
In Docker's case, you'd likely end up with an IP address based host name which means you'd set your SERVER_NAME to something like 192.168.99.100.
At this point Chrome and other webkit based browsers will freak out by reject setting the cookie which in turn will make your Flask app throw CSRF token related issues when submitting forms.
Since Flask is already hard coding a fix for this, I think you should allow users to configure which domain name gets skipped with a proper config option.
This could be named something like SESSION_COOKIE_IGNORE_DOMAIN (feel free to improve the name :)). It could default to localhost so that it's backwards compatible and nothing changes for most users.
Right now the work around is to modify your /etc/hosts file to map an IP address to a FQDN with a TLD if you're stuck using an IP based SERVER_NAME. That seems a little lame and preventable at the Flask level.
What do you think?