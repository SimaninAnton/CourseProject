squarewave24 commented on 8 May 2019 â€¢
edited
i've spent a day on this, and can't find any documentation for why this is happening, but it appears Flask does some kind of sanitation of headers if they are used inside before_request
whenever i try to extract token from 'Bearer xxxxxx' it makes the entire header disappear. regardless if doing string.split(' ') or substring.
all of this works just fine in controllers. but i am trying to make it generic for all controller actions. so i don't want to decorate every endpoint.
the Authorization header looks like this Bearer xxxxxxxxx. but i also tested this on other custom headers and same thing happens.
bp = Blueprint('default', __name__)  # type: Blueprint

def create_app() -> Flask:
    app = Flask(__name__)
    add_request_authorization(bp)  # i tried this with app and bp
    app.register_blueprint(bp)
    return app

def add_request_authorization(bp):
    """
    register okta verification event
    """
    @bp.before_request
    def verify_okta_for_request(*args, **kwargs):
        auth_header = request.headers.get('Authorization')  # this is ok
        print('auth:', auth_header)   # prints
        token = auth_header.split(' ')[1]  # makes the whole header "None" including on lines above
        token = auth_header[7:]  # makes the whole header 'None" 
looks like even if i try to assign the raw header to another variable, it vanishes!
i also tried before_app_request