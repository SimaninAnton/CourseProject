joh commented on 28 Jul 2010
If an URL rule has more than one handlers for different HTTP methods (typical for RESTful apps), OPTIONS will incorrectly report only the methods of the first handler.
Consider the following example:
@app.route('/things/<thing>')
def one_thing(thing):
    return "it's a " + thing + "!"

@app.route('/things/<thing>', methods=['PUT'])
def put_thing(thing):
    return "Thanks for the thing."
Performing an OPTIONS request on /things/foo incorrectly reports only the methods of the first handler:
$ curl -IXOPTIONS http://localhost:8080/things/foo
HTTP/1.0 200 OK
Content-Type: text/html; charset=utf-8
Allow: HEAD, OPTIONS, GET
...
Werkzeug gets it right though, if an invalid method is attempted:
$ curl -IXFOO http://localhost:8080/things/foo
HTTP/1.0 405 METHOD NOT ALLOWED
Content-Type: text/html
Allow: PUT, HEAD, OPTIONS, GET
...
I figure something along the lines of MapAdapter.match() in werkzeug/routing.py is required (loop through all matching handlers and add up the supported methods)
Thanks :-)