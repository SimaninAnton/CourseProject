noahcgreen commented on 31 Jul 2016
The docs on the FLASK_APP variable state that
In that imported file the name of the app needs to be called app or optionally be specified after a colon. For instance mymodule:application would tell it to use the application object in the mymodule.py file.
However, creating the following script (run.py):
from flask import Flask

webapp = Flask(__name__)
setting FLASK_APP=run.py:webapp, and running flask run gives me an ImportError:
Traceback (most recent call last):
  File "/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py", line 156, in __call__
    self._flush_bg_loading_exception()
  File "/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py", line 144, in _flush_bg_loading_exception
    reraise(*exc_info)
  File "/Users/me/app/venv/lib/python3.5/site-packages/flask/_compat.py", line 33, in reraise
    raise value
  File "/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py", line 133, in _load_app
    self._load_unlocked()
  File "/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py", line 148, in _load_unlocked
    self._app = rv = self.loader()
  File "/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py", line 209, in load_app
    rv = locate_app(self.app_import_path)
  File "/Users/me/app/venv/lib/python3.5/site-packages/flask/cli.py", line 89, in locate_app
    __import__(module)
ImportError: No module named 'run'
Interestingly, using FLASK_APP=run.py actually works even with the app named "webapp". So while I'm not sure how much of this is error on my part vs. error on flask's, the docs are wrong in saying that the Flask object needs to be named "app".