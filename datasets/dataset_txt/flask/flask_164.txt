johnnymetz commented on 6 Apr 2019
Expected Behavior
I'm trying to add a decorator to a flask route, but the status code of the Response object is wrong. Here's an example (note I changed the status code to 202 just as an example):
from flask import Flask, jsonify
from functools import wraps

def my_decorator(og_func):
    @wraps(og_func)
    def wrapper(*args, **kwargs):
        result, status_code = og_func(*args, **kwargs)
        print(f"status code of flask.wrappers.Response object: {result.status_code}")
        print(f"status code of actual response: {status_code}")
        # log status code somewhere
        return result, status_code
    return wrapper

app = Flask(__name__)

@app.route("/")
@my_decorator
def home():
    data = {"hello": "world"}
    return jsonify(data), 202
I'd image the status code on the response object would be the same as the status code I returned.
Actual Behavior
If I run this flask api and hit the home endpoint using postman or curl, I get the following logs on my backend:
status code of Response object: 200
status code of actual response: 202
127.0.0.1 - - [04/Apr/2019 11:44:42] "GET / HTTP/1.1" 202 -
Any reason why the status code on the response object is incorrect? Am I doing something wrong or is this a bug?
Environment
Python version: 3.6.8
Flask version: 1.0.2
Werkzeug version: 0.14.1