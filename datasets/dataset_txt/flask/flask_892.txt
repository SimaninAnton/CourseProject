erwagasore commented on 29 Jan 2016
I have a number of custom commands that I have created
@app.cli.command()
@click.option('-c', '--with-coverage', is_flag=True, help="Turn on coverage reporting")
@click.option('-d', '--debug', is_flag=True, help="Enter pdb on test fail or error")
@click.option('-f', '--failfast', is_flag=True, help="Stop the test run after the first error or failure")
@click.option('-v', '--verbose', is_flag=True, help="Print test case names and statuses")
def tests(with_coverage, debug, failfast, verbose):
    """Testing operation commands"""
    options = list()
    options.append(sys.argv[0])

    if with_coverage:
        options.append('-C')
    if debug:
        options.append('-D')
    if failfast:
        options.append('-F')
    if verbose:
        options.append('-v')

    defaults = ['--coverage={}'.format(app.config['PROJECT_DIR']),
                '--coverage-config={}'.format(app.config['COVERAGE_CONFIG']),
                '--coverage-report=term-missing']
    options.extend(defaults)
    discover(argv=options)
Click provides a CliRunner class to help testing Click commands. Trying to test I get NoAppException with this message
Could not locate Flask application. You did not provide FLASK_APP or the --app parameter
Here is the test snippet
from app.commands import tests
from click.testing import CliRunner

runner = CliRunner()

Class TestCommands(unittest.TestCase):
    def test_tests(self):
        result = runner.invoke(tests)
        self.assertTrue(result.exit_code == 0) # fails