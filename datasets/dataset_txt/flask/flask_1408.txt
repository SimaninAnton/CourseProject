Contributor
Turbo87 commented on 3 Jun 2013
if the context is preserved for later inspection, it doesn't get popped off the stack immediately, but later, when the next context gets pushed. And when it does eventually get popped, the teardown_appcontext handler is called with no exception, instead of the one that was handled by the debugger. this is causing the Flask-SQLAlchemy extension to commit() the session even though the rollback() method should have been called instead.
(see pallets/flask-sqlalchemy#131 and pallets/flask-sqlalchemy#115)
thanks to @mgax for the further investigation of the issue