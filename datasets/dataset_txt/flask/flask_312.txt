abitrolly commented on 13 Aug 2018
Expected Behavior
flask.url_for(endpoint, **values) prototype should be intuitively understood by general public. That could be done if Flask doesn't redefine common understanding of endpoint its own abstraction.
The common understanding is that endpoint is an URL.
https://stackoverflow.com/questions/9807382/what-is-a-web-service-endpoint
https://en.wikipedia.org/wiki/Web_API#Endpoints
If Flask uses routename instead of endpoint, then documentation could make sense for people not aware with Flask specifics. I mean this is not normal - https://stackoverflow.com/questions/19261833/what-is-an-endpoint-in-flask - 77 votes, 52 favorites (means people need to get back to it), 176 upvotes (about 99 people who maybe thought they know what endpoint is, but maybe was confused about real meaning or function).
Alternative text.
 flask.url_for(routename, **values)

    Generates a URL for the given `routename` with URL arguments converted from `values`.

    `values` that are missing from route declaration are appended to the generated URL as query 
arguments. If the value of a query argument is None, the whole pair is skipped. In case blueprints are 
active you can shortcut references to the same blueprint by prefixing the local endpoint with a dot (.).

    This will reference the index function local to the current blueprint:

    url_for('.index')

    For more information, head over to the Quickstart.

    To integrate applications, Flask has a hook to intercept URL build errors through 
Flask.url_build_error_handlers. The url_for function results in a BuildError when the current app does 
not have a URL for the given routename and values.
...
Actual Behavior
http://flask.pocoo.org/docs/1.0/api/#flask.url_for
Environment
Flask version: 1.0.2
1