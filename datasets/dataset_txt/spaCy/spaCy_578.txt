ccoppa commented on 27 Jun 2019 â€¢
edited
How to reproduce the behaviour
I tried different ways to define the patterns, but none gave me the expected output. I'm not sure how the output ended up combining both defined entities together with an extra token "for".
import spacy
from spacy.pipeline import EntityRuler

patterns1 = [ {"label": "ORG", "pattern": "XYZ Company"}, 
{"label": "XYZ_PRODUCT", "pattern": "Fitness Services"}
 ]

patterns2 = [ {"label": "ORG", "pattern": [{"ORTH": "XYZ"},{"ORTH": "Company"}]}, 
{"label": "XYZ_PRODUCT", "pattern": [{"ORTH": "Fitness"},{"ORTH":"Services"}]}
 ]

patterns3 = [ {"label": "ORG", "pattern": [{"lower": "xyz company"}]}, 
{"label": "XYZ_PRODUCT", "pattern": [{"lower": "fitness services"}]}
 ]

patterns4 = [{"label": "ORG", "pattern": [{"lower": "xyz"},{"lower": "company"}]}, 
{"label": "XYZ_PRODUCT", "pattern": [{"lower": "fitness"},{"lower":"services"}]}
 ]

patterns5 = [{"label": "ORG", "pattern": [{"lower": {"IN": ["xyz company"]}}]}, 
{"label": "XYZ_PRODUCT", "pattern": [{"lower":{"IN": ["fitness services"]}}]}
 ]


patterns = [patterns1,patterns2,patterns3,patterns4,patterns5]

for i in range(0,len(patterns)):
  nlp = spacy.load("en_core_web_sm")
  ruler = EntityRuler(nlp, overwrite=True)
  ruler.add_patterns(patterns[i])
  nlp.add_pipe(ruler, after="ner")
  doc = nlp(u"I joined XYZ Company for Fitness Services")
  print([(ent.text, ent.label_) for ent in doc.ents])
Output
[('XYZ Company for Fitness Services', 'ORG')]
[('XYZ Company for Fitness Services', 'ORG')]
[('XYZ Company for Fitness Services', 'ORG')]
[('XYZ Company for Fitness Services', 'ORG')]
[('XYZ Company for Fitness Services', 'ORG')]
Also tried using overwrite=False got different output but still not solving the issue completely. Some got the XYZ_PRODUCT CORRECT but all got the ORG entity span wrong.
Ideally, I'd hope format like pattern5 to work as I want to use lower and IN for data processing and scalibility.
for i in range(0,len(patterns)):
  nlp = spacy.load("en_core_web_sm")
  ruler = EntityRuler(nlp, overwrite=False)
  ruler.add_patterns(patterns[i])
  nlp.add_pipe(ruler, before="ner")
  doc = nlp(u"I joined XYZ Company for Fitness Services")
  print([(ent.text, ent.label_) for ent in doc.ents])
Output
[('XYZ Company for', 'ORG'), ('Fitness Services', 'XYZ_PRODUCT')]
[('XYZ Company for', 'ORG'), ('Fitness Services', 'XYZ_PRODUCT')]
[('XYZ Company for Fitness Services', 'ORG')]
[('XYZ Company for', 'ORG'), ('Fitness Services', 'XYZ_PRODUCT')]
[('XYZ Company for Fitness Services', 'ORG')]
Your Environment
Operating System: macOS Mojave 10.14.5
Python Version Used: Python 3.7.1
spaCy Version Used: spaCy 2.1.4