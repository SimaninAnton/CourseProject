oliviercwa commented on 3 Dec 2019
Save/Load cycle fails if pipe name differs from the factory name
How to reproduce the behaviour
1- Create a pipe using create_pipe
2- Insert the component inside a pipeline using add_pipe and assign a name other than the factory name
3- Save and Load back the pipeline
Result: Exception E002 raised
Code below repros the problems with a single component
Expected: Be able to save and load a pipeline that was previously created. If Spacy lets me give an arbitrary pipe name, it should be able to load the pipeline back. Today there's an expectation that the pipe name == factory name
Note: This issue was raised in #4712 and I believe it was incorrectly closed.
import spacy
import os
from spacy.language import Language

class MockComponent():
  def __call__(self, doc):
    return doc

Language.factories['MockComponent'] = lambda nlp, **cfg: MockComponent(**cfg) 

nlp = spacy.blank('en')
foobar = nlp.create_pipe('MockComponent')
nlp.add_pipe(foobar, 'foobar', first=True)
nlp.to_disk(os.path.join(os.path.dirname(__file__), 'temp'))
nlp2 = spacy.load(os.path.join(os.path.dirname(__file__), 'temp'))
The code above throws on loading:
[E002] Can't find factory for 'foobar'. This usually happens when spaCy calls nlp.create_pipe with a component name that's not built in - for example, when constructing the pipeline from a model's meta.json. If you're using a custom component, you can write to Language.factories['foobar'] or remove it from the model meta and add it via nlp.add_pipe instead."
Your Environment
Operating System: Windows 10
Python Version Used: 3.7.4
spaCy Version Used: 2.1.9
Environment Information: