Collaborator
adrianeboyd commented on 15 Aug 2019
A match ending with {"OP": "?"} only returns the match with this token, not without, unless the preceding token is the last token in the document.
If you change ? to * all matches are returned as expected.
If there is another matched token after {"OP": "?"} it also works as expected.
I suspect this is related to some of the other OP Matcher bugs, but I hadn't seen this test case yet. The test suite includes * but not ?.
How to reproduce the behaviour
import spacy
from spacy.matcher import Matcher
from spacy.tokens import Doc

nlp = spacy.load('en')

matcher = Matcher(nlp.vocab)

pattern = [
    {"ORTH": "a"},
    {"OP": "?"},
]

matcher.add("TEST", None, pattern)

doc = Doc(nlp.vocab, words=["a", "b", "c"])
print(matcher(doc))
# [(1046765068364475028, 0, 2)] # expected match "a" from (0, 1) is missing

doc = Doc(nlp.vocab, words=["a"])
print(matcher(doc))
# [(1046765068364475028, 0, 1)] # but it works at the end of a document

matcher = Matcher(nlp.vocab)

pattern = [
    {"ORTH": "a"},
    {"OP": "?"},
    {"ORTH": "b"},
]

matcher.add("TEST", None, pattern)
doc = Doc(nlp.vocab, words=["a", "b", "b", "c"])
print(matcher(doc))
# [(1046765068364475028, 0, 2), (1046765068364475028, 0, 3)] # good

matcher = Matcher(nlp.vocab)

pattern = [
    {"ORTH": "a"},
    {"OP": "?"},
    {"ORTH": "b", "OP": "?"},
]

matcher.add("TEST", None, pattern)
doc = Doc(nlp.vocab, words=["a", "b", "b", "c"])
print(matcher(doc))
# [(1046765068364475028, 0, 2), (1046765068364475028, 0, 3)] # "a" is missing
Your Environment
spaCy version: 2.1.8
Platform: Linux-4.19.0-5-amd64-x86_64-with-debian-10.0
Python version: 3.7.3
Models: xx, en