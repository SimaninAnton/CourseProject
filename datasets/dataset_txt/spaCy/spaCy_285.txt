studiocardo commented on 4 Oct 2019 •
edited
Hi guys
Per the subject line.
For comparison, I was able to load the en_pytt_bertbaseuncased_lg and en_pytt_xlnetbasecased_lg models and ran them successfully. But both en_pytt_robertabase_lg and en_pytt_distilbertbaseuncased_lg are causing KeyError problems.
For roberta, it's KeyError: vocab.
For distilledbert, it's ValueError: Unexpected config. Keys: finetuning_task, num_labels, output_attentions, output_hidden_states, torchscript, vocab_size, max_position_embeddings, sinusoidal_pos_embds, n_layers, n_heads, dim, hidden_dim, dropout, attention_dropout, activation, initializer_range, tie_weights_, qa_dropout, seq_classif_dropout, layer_norm_eps, vocab_size_or_config_json_file
How to reproduce the behaviour
nlp = spacy.load("en_pytt_robertabase_lg")
doc = nlp("Here is some text to encode.")
KeyError Traceback (most recent call last)
in
----> 1 nlp = spacy.load("en_pytt_robertabase_lg")
2 doc = nlp("Here is some text to encode.")
~/miniconda3/envs/squad/lib/python3.6/site-packages/spacy/init.py in load(name, **overrides)
25 if depr_path not in (True, False, None):
26 deprecation_warning(Warnings.W001.format(path=depr_path))
---> 27 return util.load_model(name, **overrides)
28
29
~/miniconda3/envs/squad/lib/python3.6/site-packages/spacy/util.py in load_model(name, **overrides)
132 return load_model_from_link(name, **overrides)
133 if is_package(name): # installed as package
--> 134 return load_model_from_package(name, **overrides)
135 if Path(name).exists(): # path to model data directory
136 return load_model_from_path(Path(name), **overrides)
~/miniconda3/envs/squad/lib/python3.6/site-packages/spacy/util.py in load_model_from_package(name, **overrides)
153 """Load a model from an installed package."""
154 cls = importlib.import_module(name)
--> 155 return cls.load(**overrides)
156
157
~/miniconda3/envs/squad/lib/python3.6/site-packages/en_pytt_robertabase_lg/init.py in load(**overrides)
10
11 def load(**overrides):
---> 12 return load_model_from_init_py(file, **overrides)
~/miniconda3/envs/squad/lib/python3.6/site-packages/spacy/util.py in load_model_from_init_py(init_file, **overrides)
194 if not model_path.exists():
195 raise IOError(Errors.E052.format(path=path2str(data_path)))
--> 196 return load_model_from_path(data_path, meta, **overrides)
197
198
~/miniconda3/envs/squad/lib/python3.6/site-packages/spacy/util.py in load_model_from_path(model_path, meta, **overrides)
177 component = nlp.create_pipe(name, config=config)
178 nlp.add_pipe(component, name=name)
--> 179 return nlp.from_disk(model_path)
180
181
~/miniconda3/envs/squad/lib/python3.6/site-packages/spacy/language.py in from_disk(self, path, exclude, disable)
834 # Convert to list here in case exclude is (default) tuple
835 exclude = list(exclude) + ["vocab"]
--> 836 util.from_disk(path, deserializers, exclude)
837 self._path = path
838 return self
~/miniconda3/envs/squad/lib/python3.6/site-packages/spacy/util.py in from_disk(path, readers, exclude)
634 # Split to support file names like meta.json
635 if key.split(".")[0] not in exclude:
--> 636 reader(path / key)
637 return path
638
~/miniconda3/envs/squad/lib/python3.6/site-packages/spacy/language.py in (p, proc)
829 continue
830 deserializers[name] = lambda p, proc=proc: proc.from_disk(
--> 831 p, exclude=["vocab"]
832 )
833 if not (path / "vocab").exists() and "vocab" not in exclude:
pipes.pyx in spacy.pipeline.pipes.Pipe.from_disk()
~/miniconda3/envs/squad/lib/python3.6/site-packages/spacy/util.py in from_disk(path, readers, exclude)
634 # Split to support file names like meta.json
635 if key.split(".")[0] not in exclude:
--> 636 reader(path / key)
637 return path
638
pipes.pyx in spacy.pipeline.pipes.Pipe.from_disk.load_model()
~/miniconda3/envs/squad/lib/python3.6/site-packages/spacy_pytorch_transformers/_tokenizers.py in from_bytes(self, bytes_data, exclude, **kwargs)
53 msg = srsly.msgpack_loads(bytes_data)
54 for field in self.serialization_fields:
---> 55 setattr(self, field, msg[field])
56 self.finish_deserializing()
57 return self
KeyError: 'vocab'
And here's the installation message from python -m spacy download en_pytt_robertabase_lg
Collecting en_pytt_robertabase_lg==2.1.0 from https://github.com/explosion/spacy-models/releases/download/en_pytt_robertabase_lg-2.1.0/en_pytt_robertabase_lg-2.1.0.tar.gz#egg=en_pytt_robertabase_lg==2.1.0
Downloading https://github.com/explosion/spacy-models/releases/download/en_pytt_robertabase_lg-2.1.0/en_pytt_robertabase_lg-2.1.0.tar.gz (291.9MB)
|████████████████████████████████| 291.9MB 119.4MB/s
Building wheels for collected packages: en-pytt-robertabase-lg
Building wheel for en-pytt-robertabase-lg (setup.py) ... done
Created wheel for en-pytt-robertabase-lg: filename=en_pytt_robertabase_lg-2.1.0-cp36-none-any.whl size=295936799 sha256=f3a25f88a794970bca6acb016e89e6eb74e695aedcc4f9d090bb1f9b170a9c2a
Stored in directory: /tmp/pip-ephem-wheel-cache-qjxyme81/wheels/46/ec/e1/01b719774e9b2323e7263c0f93aacb40091e136d62aa071403
Successfully built en-pytt-robertabase-lg
Installing collected packages: en-pytt-robertabase-lg
Successfully installed en-pytt-robertabase-lg-2.1.0
Your Environment
Operating System: Ubuntu 16.4
Python Version Used: 3.6.7
spaCy Version Used: 2.1.8
Environment Information: