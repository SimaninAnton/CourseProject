Ruler26 commented on 9 Jul 2019
After upgrading to spaCy 2.1.4 nlp=spacy.load('nl_core_news_sm') no longer works giving the error "error: bad escape \p at position 257"
loading an english model nlp=spacy.load('en_core_web_sm') does work.
The full error code is as follows:
error Traceback (most recent call last)
in
----> 1 nlp=spacy.load('nl_core_news_sm')
2
D:\Anaconda\lib\site-packages\spacy_init_.py in load(name, **overrides)
25 if depr_path not in (True, False, None):
26 deprecation_warning(Warnings.W001.format(path=depr_path))
---> 27 return util.load_model(name, **overrides)
28
29
D:\Anaconda\lib\site-packages\spacy\util.py in load_model(name, **overrides)
129 return load_model_from_link(name, **overrides)
130 if is_package(name): # installed as package
--> 131 return load_model_from_package(name, **overrides)
132 if Path(name).exists(): # path to model data directory
133 return load_model_from_path(Path(name), **overrides)
D:\Anaconda\lib\site-packages\spacy\util.py in load_model_from_package(name, **overrides)
150 """Load a model from an installed package."""
151 cls = importlib.import_module(name)
--> 152 return cls.load(**overrides)
153
154
D:\Anaconda\lib\site-packages\nl_core_news_sm_init_.py in load(**overrides)
10
11 def load(**overrides):
---> 12 return load_model_from_init_py(file, **overrides)
D:\Anaconda\lib\site-packages\spacy\util.py in load_model_from_init_py(init_file, **overrides)
188 if not model_path.exists():
189 raise IOError(Errors.E052.format(path=path2str(data_path)))
--> 190 return load_model_from_path(data_path, meta, **overrides)
191
192
D:\Anaconda\lib\site-packages\spacy\util.py in load_model_from_path(model_path, meta, **overrides)
171 component = nlp.create_pipe(name, config=config)
172 nlp.add_pipe(component, name=name)
--> 173 return nlp.from_disk(model_path)
174
175
D:\Anaconda\lib\site-packages\spacy\language.py in from_disk(self, path, exclude, disable)
789 # Convert to list here in case exclude is (default) tuple
790 exclude = list(exclude) + ["vocab"]
--> 791 util.from_disk(path, deserializers, exclude)
792 self._path = path
793 return self
D:\Anaconda\lib\site-packages\spacy\util.py in from_disk(path, readers, exclude)
628 # Split to support file names like meta.json
629 if key.split(".")[0] not in exclude:
--> 630 reader(path / key)
631 return path
632
D:\Anaconda\lib\site-packages\spacy\language.py in (p)
779 deserializers["meta.json"] = lambda p: self.meta.update(srsly.read_json(p))
780 deserializers["vocab"] = lambda p: self.vocab.from_disk(p) and _fix_pretrained_vectors_name(self)
--> 781 deserializers["tokenizer"] = lambda p: self.tokenizer.from_disk(p, exclude=["vocab"])
782 for name, proc in self.pipeline:
783 if name in exclude:
tokenizer.pyx in spacy.tokenizer.Tokenizer.from_disk()
tokenizer.pyx in spacy.tokenizer.Tokenizer.from_bytes()
D:\Anaconda\lib\re.py in compile(pattern, flags)
232 def compile(pattern, flags=0):
233 "Compile a regular expression pattern, returning a Pattern object."
--> 234 return _compile(pattern, flags)
235
236 def purge():
D:\Anaconda\lib\re.py in _compile(pattern, flags)
284 if not sre_compile.isstring(pattern):
285 raise TypeError("first argument must be string or compiled pattern")
--> 286 p = sre_compile.compile(pattern, flags)
287 if not (flags & DEBUG):
288 if len(_cache) >= _MAXCACHE:
D:\Anaconda\lib\sre_compile.py in compile(p, flags)
762 if isstring(p):
763 pattern = p
--> 764 p = sre_parse.parse(p, flags)
765 else:
766 pattern = None
D:\Anaconda\lib\sre_parse.py in parse(str, flags, pattern)
928
929 try:
--> 930 p = _parse_sub(source, pattern, flags & SRE_FLAG_VERBOSE, 0)
931 except Verbose:
932 # the VERBOSE flag was switched on inside the pattern. to be
D:\Anaconda\lib\sre_parse.py in _parse_sub(source, state, verbose, nested)
424 while True:
425 itemsappend(_parse(source, state, verbose, nested + 1,
--> 426 not nested and not items))
427 if not sourcematch("|"):
428 break
D:\Anaconda\lib\sre_parse.py in _parse(source, state, verbose, nested, first)
534 break
535 elif this[0] == "\":
--> 536 code1 = _class_escape(source, this)
537 else:
538 if set and this in '-&~|' and source.next == this:
D:\Anaconda\lib\sre_parse.py in _class_escape(source, escape)
335 if len(escape) == 2:
336 if c in ASCIILETTERS:
--> 337 raise source.error('bad escape %s' % escape, len(escape))
338 return LITERAL, ord(escape[1])
339 except ValueError:
error: bad escape \p at position 257
Info about spaCy
spaCy version: 2.1.4
Platform: Windows-2012ServerR2-6.3.9600-SP0
Python version: 3.7.3