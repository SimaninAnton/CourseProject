lautel commented on 9 Sep 2019 •
edited
How to reproduce the behaviour
0. Load libraries
from spacy.matcher import PhraseMatcher
from spacy.lang.ja import Japanese
1. Define a Phrase Matcher to find custom entities in Japanese text:
def phrase_matcher_test(text):

    nlp = Japanese()

    matcher = PhraseMatcher(nlp.vocab, attr="LOWER")
    patterns = ["nakagawa jun", "中川 潤", "nakagawa@xxxx.jp", "japan"]
    patterns_doc = list(nlp.pipe(patterns))
    matcher.add("ENTITY", None, *patterns_doc)

    doc = nlp(text)

    matches = matcher(doc)
    print(f'\n{len(matches)} matches found!')

    for match_id, start, end in matches:
        print(doc.vocab.strings[match_id]+': ', doc[start:end].text)
3. Call the function
input_text = "Nakagawa Jun (中川潤) のﾒｰﾙはnakagawa@xxxx.jpです. 彼はJapanで働いています"
phrase_matcher_test(input_text )
4. Result
Output:
3 matches found!
ENTITY: 中川潤
ENTITY: nakagawa@xxxx.jp
ENTITY: Japan
Expected output:
4 matches found!
ENTITY: Nakagawa Jun
ENTITY: 中川潤
ENTITY: nakagawa@xxxx.jp
ENTITY: Japan
5. Additional info
If
input_text = "nakagawa jun (中川潤) のﾒｰﾙはnakagawa@xxxx.jpです. 彼はJapanで働いています"
it almost works as expected (note lowercase in 'nakagawa jun', but not in 'Japan'). By almost I mean that it matches the name but deletes the blank space between name and surname. See the following output.
Output:
ENTITY: nakagawajun
ENTITY: 中川潤
ENTITY: nakagawa@xxxx.jp
ENTITY: Japan
Your Environment
spaCy version: 2.1.8
Platform: Windows-10-10.0.17134-SP0
Python version: 3.7.3