ales004 commented on 11 Oct 2019
How to reproduce the behaviour
Run this:
    toka = ['a', 'terrific', 'log', '-', 'jam', 'of']
    tokb = ['a', 'terrific', 'log-', 'jam', 'of']
    _, a2b, b2a, b2a_multi, a2b_multi = align(toka, tokb)
    print(f"a2b: {a2b}")
    print(f"b2a: {b2a}")
    print(f"a2b_multi: {a2b_multi}")
    print(f"b2a_multi: {b2a_multi}")
output:
a2b: [ 0  1 -1 -1  3  4]
b2a: [0 1 3 4 5]
a2b_multi: {}
b2a_multi: {2: 2, 3: 2}
In my opinion a2b_multi and b2a_multi are interchanged. According to the documentation:
a2b_multi: A dictionary mapping indices in tokens_a to indices in tokens_b, where multiple tokens of tokens_a align to the same token of tokens_b.
b2a_multi: A dictionary mapping indices in tokens_b to indices in tokens_a, where multiple tokens of tokens_b align to the same token of tokens_a.
So I would have expected a2b_multi={2: 2, 3: 2} and b2a_multi={} because toka[2] + toka[3] == tokb[2] instead I get the opposite.
Your Environment
Info about spaCy
spaCy version: 2.1.8
Platform: Ubuntu 18.04
Python version: 3.6.8