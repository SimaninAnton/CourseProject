erotavlas commented 28 days ago â€¢
edited
[spacy version 2.1.8]
I think I'm encountering an issue relating to this
#3853 (comment)
What I have in my script is this piece of code that loads a new NER model on demand. the script starts by first loading an initial model
try:
 dataPath = Path(input())
 modelPath = Path(input())

 set_data_path(dataPath)
 nlp_model = spacy.load(modelPath, disable=["parser", "tagger"])
 print("ready")
except BaseException as error:
 print("Error 1:", sys.exc_info()[0], error, dataPath, modelPath)
Then I enter a loop where I can continually submit text for evaluation and get back results. At any time I can change the model
 elif a == 'loadmodel':
  try:
   modelPath = input()
   nlp_model = spacy.load(modelPath, disable=["parser", "tagger"])
   print("ready")
  except BaseException as error:
   print("Error 2:", sys.exc_info()[0], error,  modelPath)
I've been comparing models built using different training data as well using different word vectors and when I start with an old model and load a new model, the predictions are different than those I would get if I started with the new model alone (no reloading)
I think something is being held in memory, perhaps the word vectors and it is affecting the predictions of the model that has been loaded.
Example
Green highlighted text is Date, and Purple highlight is Organization
1 - Start script
2 - Load the new model (spacy.load called only once) - these the expected results for the new model
1 - Start script
2 - Load old model and don't change it yet (spacy.load called first time)
3 - Load new model after the old one (spacy.load called a second time)
Is there any way to solve this?