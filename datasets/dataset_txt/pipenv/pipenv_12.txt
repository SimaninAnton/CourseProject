hongyi-zhao commented on 17 Dec 2019
Hi,
I'm learning machine-learning and cloned this project:
$ git clone https://github.com/mbeyeler/opencv-machine-learning.git opencv-machine-learning.git
Then I construct the python environment for this local repo with pipenv:
$ pipenv --python 3.6.9
Creating a virtualenv for this project…
Pipfile: /home/werner/Desktop/opencv-machine-learning.git/Pipfile
Using /home/werner/.pyenv/versions/3.6.9/bin/python3.6m (3.6.9) to create virtualenv…
⠹ Creating virtual environment...Already using interpreter /home/werner/.pyenv/versions/3.6.9/bin/python3.6m
Using base prefix '/home/werner/.pyenv/versions/3.6.9'
New python executable in /home/werner/Desktop/opencv-machine-learning.git/.venv/bin/python3.6m
Also creating executable in /home/werner/Desktop/opencv-machine-learning.git/.venv/bin/python
Installing setuptools, pip, wheel...
done.
Running virtualenv with interpreter /home/werner/.pyenv/versions/3.6.9/bin/python3.6m

✔ Successfully created virtual environment! 
Virtualenv location: /home/werner/Desktop/opencv-machine-learning.git/.venv
requirements.txt found, instead of Pipfile! Converting…
✔ Success! 
Warning: Your Pipfile now contains pinned versions, if your requirements.txt did. 
We recommend updating your Pipfile to specify the "*" version, instead.
As you can see, the Pipfile is converted from the original requirements.txt which included pinned versions dependent packages.
For your info, the content of Pipfile is as follows:
$ cat Pipfile 
[[source]]
name = "pypi"
url = "https://pypi.org/simple"
verify_ssl = true

[dev-packages]

[packages]
numpy = "==1.12"
scipy = "==0.19.1"
scikit-learn = "==0.18.1"
matplotlib = "*"
opencv = "==3.1"
jupyter = "==1.0"
notebook = ">=5.7.2"
pandas = "==0.22"
mkl-service = "==1.1.2"
Theano = "*"
Keras = "==2.1.5"

[requires]
python_version = "3.6"
But your pipenv suppose to specify the "*" version. I want to know how to achieve this using pipenv's options without revise the Pipfile itself?
Regards