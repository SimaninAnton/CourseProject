pcattori commented on 13 Sep 2017 â€¢
edited
Pipfiles have a [require] section where python_version can be specified.
Currently AFAIK it is up to the user to manually install that version of Python on their machine and pass it to pipenv via the --python flag.
I think its desirable to:
(1) automatically download/install a new Python version if there are no existing Python versions compatible with the project already on the machine
(2) specify Python version number instead of executable
eg.
$ pipenv
This project requires python version '>=3.6'. No compatible python version found.
Downloading python 3.6.2...
Installing python 3.6.2...
<rest of project dependency installation happens here>
...
$ pipenv init --python >=2.7.8,==2.*
Compatible python version found! Using python 2.7.12.
<rest of project initialization happens here>
...
This could be done by integrating with pyenv. Here's a proof-of-concept for the pyenv integration.
In short, python is just another dependency of the project that is explicitly specified in the Pipfile and should be treated as such.
Would this functionality be desirable for pipenv?