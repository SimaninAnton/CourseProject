Contributor
joshfriend commented on 24 Jan 2018
Setup
Pipenv 9.0.3
macOS 10.12.6
Python 2.7.14
Pipfile:
[[source]]

url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"

[dev-packages]
pytest = "*"
pytest-flask = "*"

[packages]
Flask = "==0.10.1"

[requires]

python_full_version = "2.7.14"
Expected
After running pipenv install --dev, Flask 0.10.1 should be installed because 0.10.1 is requested specifically by the main dependencies section, and while the pytest-flask dependency in the dev-packages section also depends on Flask, it does not require any specific version.
Actual
Flask 0.12.2 is installed instead (sometimes, see below)
More Funkyness:
Run pipenv install --dev
The version of Flask that will be installed should be 0.10.1
Re-run pipenv install --dev
The version of Flask that will be installed should still be 0.10.1
Re-run pipenv install --dev
The version of Flask that will be installed will now be 0.12.2
This is true even though the Pipfile specifically requests 0.10.1 in the default section
The Pipfile.lock will show Flask being pinned to 0.10.1 in the default section, but 0.12.2 in the develop section (since pytest-flask depends on no specific flask version and the newest flask release is 0.12.2)
Re-run pipenv install --dev
The version of Flask that will be installed should now be 0.10.1
Repeat steps 5-8 any number of times and the installed version of flask will keep toggling between the requested version (0.10.1) and the latest version (0.12.2)
The Pipfile.lock ends up looking like this after step 3 and remains unchanged through the rest of the steps:
Pipfile.lock
Workaround:
Add Flask = "==0.10.1" to the dev-packages section as well.
To summarize, I'm seeing two problems here:
Pipenv seems to be non-deterministic when installing packages
Pipenv does not obey the requested package version when the same package is depended upon by a package in a different section ('develop'), even if the sub-dependency is not pinned to a specific or conflicting version (e.g. "*")