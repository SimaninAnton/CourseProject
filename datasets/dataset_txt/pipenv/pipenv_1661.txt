fbender commented on 12 Jan 2018
Looking at the available documentation and repo, I'm struggling to understand how Anaconda/Miniconda fits into pipenv. My understanding is that the conda distributions can be installed instead/alongside CPython (via pyenv). It is not clear how the conda and pipenv virtual environments work together or interact.
More importantly, how does pipenv interact with conda's environment.yml file, does it at all? E.g. can you have a master Pipfile which includes environment.yml entries (by pipenv reading and taking the environment.yml into account), or (more likely to be useful) delegate from the Pipfile to conda's environment.yml?
This is important to know for mixed environments and eventual migration from conda to pipenv. To be able to analyse pipenv and justify a potential migration, I (and countless others, I suppose ;) ) need to know how these two solutions interact with each other (or if they do at all). Again, this is currently not clear from the available documentation. May you please clarify?
If no such integration exists, it would be really nice to think about a general "extension" mechanism (in pipenv and probably Pipfile as well) to integrate other package managers (may it be conda or even cross-language tools like cargo, npm, etc.).
5