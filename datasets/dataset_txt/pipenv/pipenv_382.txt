dimaqq commented on 6 Dec 2018
MRE:
(some project)> time pipenv sync
Installing dependencies from Pipfile.lock (47701c)‚Ä¶
  üêç   ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ 55/55 ‚Äî 00:00:32
All dependencies are now up-to-date!
       37.30 real        41.37 user        14.58 sys
5 seconds remain unaccounted for.
It seems to me that perhaps pipenv assumes that installing(?) packages will take the most time. Perhaps that's most common use case. For me though, there are times when downloading packages takes long, and sometimes version resolution.
> time pipenv update --pre
Running $ pipenv lock then $ pipenv sync.
Locking [dev-packages] dependencies‚Ä¶
‚úî Success!
Locking [packages] dependencies‚Ä¶
‚úî Success!
Updated Pipfile.lock (e12946)!
Installing dependencies from Pipfile.lock (e12946)‚Ä¶
An error occurred while installing git+https://github.com/pgjones/hypercorn.git@80147629343a2b7467a69be6c460ea8d204fb3e2#egg=hypercorn! Will try again.
An error occurred while installing multidict==4.5.2 --[snipped for brevity] Will try again.
An error occurred while installing git+https://github.com/pgjones/quart.git@d1688a435aaeab77d6c3b8c8e4d4983cd3f9017d#egg=quart! Will try again.
  üêç   ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ 20/20 ‚Äî 00:00:07
Installing initially failed dependencies‚Ä¶
  ‚ò§  ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ 3/3 ‚Äî 00:00:07
To activate this project's virtualenv, run pipenv shell.
Alternatively, run a command inside the virtualenv with pipenv run.
All dependencies are now up-to-date!
       39.77 real        31.65 user         6.46 sys
That's 25 seconds unaccounted for.
This doesn't prevent me from using pipenv; pipenv is still awesome!
I do wish pipenv was a bit more... transparent?
I've seen some flame on the subject (won't link because it's flame).