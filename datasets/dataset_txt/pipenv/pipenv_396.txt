mskoenz commented on 30 Nov 2018
This issue is very similar to the closed issue #920, I just added recursive to the title and changed install to lock.
Issue description
pipenv fails during locking to resolve a private dependency of a private dependency. By private I mean the URL/git-repo is specified via dependency_links in setup.py and not (yet) available on pipy.
The module structure is:
demo_lib: no dependency
demo_measure: depends on demo_lib
demo_paper: depends on demo_measure
running PIP_PROCESS_DEPENDENCY_LINKS=1 pipenv install -e . in project demo_lib or demo_measure (the situation of issue #920) works fine, but running it in demo_paper yields a resolve error for demo_lib.
Expected result
It should work like pip install -e . --process-dependency-links.
Not sure if it easy to fix, since one needs to inspect the dependency_links of all setup.py of all dependencies, not just the current project's one. But from installing, it should be possible to track the source (i.e. the private git repo specified in dependency_links).
Running my own pip-server is not impossible, but it's just so convenient to use dependency_links during closed dev and then just drop it in setup.py when published.
Actual result
install is fine, output:
locking fails, output:
Steps to replicate
I made the three dummy-repos on my gitlab public for reproducibility (https://gitlab.fubar.science/mskoenz/demo_paper)
git clone git@gitlab.fubar.science:mskoenz/demo_paper.git
cd demo_paper
PIP_PROCESS_DEPENDENCY_LINKS=1 pipenv install -e . -v
$ pipenv --support
7