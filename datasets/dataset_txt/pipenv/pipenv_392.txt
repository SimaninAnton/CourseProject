NotTheEconomist commented on 1 Dec 2018 •
edited
Issue description
I'm using pipenv to manage my venv for a toy project that has the following structure:
D:\projectroot
|   Pipfile
|   README.md
|   setup.py
|
\---src
    +---module
        |   some.py
        |   files.py
        \---__init__.py
My setup.py includes lines like:
setuptools.setup(
        # NOTE: many lines elided for brevity
        packages=setuptools.find_packages('src', exclude=['tests*']),
        package_dir={'': 'src'},
        install_requires= [
            "click>=7.0",
        ],
        entry_points = '''
            [console_scripts]
            app=module.files:entrypoint
        ''',
        python_requires=">=3.6"
    )
and I can install using
pipenv run pip install -e .
which creates a .egg-info folder in D:/projectroot/src as sibling to module, allowing me to continue with pipenv run app. This, however, doesn't help my Pipfile at all, which makes it rather pointless.
If I instead use
pipenv install -e .
Then pipenv creates the egg in both D:/projectroot/ and D:/projectroot/src. When the lock file attempts to resolve it finds the former first and throws an AssertionError:
D:\projectroot>pipenv install -e .
Installing -e .…
Adding module to Pipfile's [packages]…
Installation Succeeded
Pipfile.lock not found, creating…
Locking [dev-packages] dependencies…
Locking [packages] dependencies…
Success!
Updated Pipfile.lock (bef76c)!
Installing dependencies from Pipfile.lock (bef76c)…
An error occurred while installing -e .! Will try again.
  ================================ 2/2 - 00:00:01
Installing initially failed dependencies…
[pipenv.exceptions.InstallError]:   File "c:\users\adsmith\appdata\local\programs\python\python36-32\lib\site-packages\pipenv\core.py", line 1987, in do_install
[pipenv.exceptions.InstallError]:       skip_lock=skip_lock,
[pipenv.exceptions.InstallError]:   File "c:\users\adsmith\appdata\local\programs\python\python36-32\lib\site-packages\pipenv\core.py", line 1232, in do_init
[pipenv.exceptions.InstallError]:       pypi_mirror=pypi_mirror,
[pipenv.exceptions.InstallError]:   File "c:\users\adsmith\appdata\local\programs\python\python36-32\lib\site-packages\pipenv\core.py", line 841, in do_install_dependencies
[pipenv.exceptions.InstallError]:       retry_list, procs, failed_deps_queue, requirements_dir, **install_kwargs
[pipenv.exceptions.InstallError]:   File "c:\users\adsmith\appdata\local\programs\python\python36-32\lib\site-packages\pipenv\core.py", line 748, in batch_install
[pipenv.exceptions.InstallError]:       _cleanup_procs(procs, not blocking, failed_deps_queue, retry=retry)
[pipenv.exceptions.InstallError]:   File "c:\users\adsmith\appdata\local\programs\python\python36-32\lib\site-packages\pipenv\core.py", line 676, in _cleanup_procs
[pipenv.exceptions.InstallError]:       raise exceptions.InstallError(c.dep.name, extra=err_lines)
[pipenv.exceptions.InstallError]: ['Obtaining file:///D:/projectroot', 'Installing collected packages: module', '  Found existing installation: module 1.0.0']
[pipenv.exceptions.InstallError]: ['Exception:', 'Traceback (most recent call last):', '  File "c:\\users\\adsmith\\.virtualenvs\\2018-2-yckuetpo\\lib\\site-packages\\pip\\_internal\\cli\\base_command.py", line 143, in main', '    status = self.run(options, args)', '  File "c:\\users\\adsmith\\.virtualenvs\\2018-2-yckuetpo\\lib\\site-packages\\pip\\_internal\\commands\\install.py", line 366, in run', '    use_user_site=options.use_user_site,', '  File "c:\\users\\adsmith\\.virtualenvs\\2018-2-yckuetpo\\lib\\site-packages\\pip\\_internal\\req\\__init__.py", line 42, in install_given_reqs', '    auto_confirm=True', '  File "c:\\users\\adsmith\\.virtualenvs\\2018-2-yckuetpo\\lib\\site-packages\\pip\\_internal\\req\\req_install.py", line 682, in uninstall', '    uninstalled_pathset = UninstallPathSet.from_dist(dist)', '  File "c:\\users\\adsmith\\.virtualenvs\\2018-2-yckuetpo\\lib\\site-packages\\pip\\_internal\\req\\req_uninstall.py", line 369, in from_dist', "    '(at %s)' % (link_pointer, dist.project_name, dist.location)", 'AssertionError: Egg-link d:\\projectroot\\src does not match installed location of module (at d:\\projectroot)']
As a workaround, I can then delete the D:/projectroot/module.egg-info and do pipenv sync completes as expected.
Expected result
I expect pipenv install -e . to have the same behavior as pip install -e ., but additionally populate my Pipfile and Pipfile.lock
Actual result
It produces two eggs, confusing itself.
Steps to replicate
Create a project structure where ./setup.py is not sibling to the package it installs, then pipenv install -e .
Below is the result of pipenv --support. I've not sanitized the below for brevity, so the paths and names below may not match the above (below you're seeing the real project and folder names, not just D:\projectroot)
$ pipenv --support