Contributor
vlcinsky commented on 8 Apr 2018
pipenv can create Pipenv.lock containing hashes for all available package formats. This allows the same package be safely installed in multiple execution environments such as Linux or Windows where compiled versions of C-based packages are likely to differ.
Pipfile.lock also contains markers, so if some of installed libraries used markers to declare conditional dependencies (e.g. only for python version 2.x), it will be present in Pipfile.lock and all things are great.
Problem: Some setup.py code I have seen is building list of dependencies install_requires dynamically using pure python code and not using markers.
Question: Is pipenv able to detect python code defined conditional list of dependencies (not using markers) and reflect it properly in Pipfile.lock?
I can imagine how complex such task could be and complete implementation is probably impossible.
If such scenarios exists (and I would assume they exist), it would be great to describe these limitations in documentation and also to recommend best practice to package authors to refrain from pure code created list of dependencies and use exclusively markers.