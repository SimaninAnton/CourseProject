Senpos commented on 17 Jan 2018 â€¢
edited
If package name case that i want to update differs from the one in Pipfile - pipenv will not see that package as installed and won't update it. On the other hand, if i want to uninstall that package - pipenv will find it and all will work fine.
I've discovered this issue after converting my old requirements.txt.
Describe your environment
Windows 10, 1607
Python version: Python 3.6.4
Pipenv version: pipenv, version 9.0.3
Expected result
django should be recognized by pipenv as installed package while updating, even if in Pipfile package name is Django. This is expected behavior, since this is how it works with uninstall command.
Actual result
django was not found in your Pipfile! while updating it, but uninstalling works fine.
Steps to replicate
Step 1
Create requirements.txt:
echo Django==1.11.3 > requirements.txt
Step 2
Install packages from requirements.txt with Pipenv:
pipenv install -r requirements.txt --verbose
Output









































































































































































Step 3
Look into the Pipenv file:
cat Pipfile
Output



Step 4
Try to update django:
pipenv update django --verbose
Output
Step 5
Try to uninstall django:
pipenv uninstall django
Output




1