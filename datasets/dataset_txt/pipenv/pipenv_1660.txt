festinuz commented on 12 Jan 2018 •
edited
When working with multiple package indexes, package dependencies are not resolved correctly.
For example, if a package in local package index depends on requests library from pypi, requests wont be found and installed during pipenv install local_package.
My environment
OS: Ubuntu 16.04.3 LTS
Python version: 2.7.12
Pipenv version: 9.0.1
Expected result
While resolving dependencies, pipenv checks all available package indexes, which would be in-line with how pip behaves.
Actual result
With Pipfile like this:
[[source]]
url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"


[[source]]
url = "http://10.8.0.1:8081/simple"
verify_ssl = false
name = "local_pypi"
...
Running pipenv install to install package from local_pypi produces this result:
festinuz@homePC:~/test_project$ pipenv install crawler_base
Installing crawler_base…
Collecting crawler_base
  Downloading http://10.8.0.1:8081/packages/crawler_base-4.2.0-py2.py3-none-any.whl
Collecting requests<3,>=2.13.0 (from crawler_base)

Error:  An error occurred while installing crawler_base!
  Could not find a version that satisfies the requirement requests<3,>=2.13.0 (from crawler_base) (from versions: )
No matching distribution found for requests<3,>=2.13.0 (from crawler_base)
Steps to replicate
Add additional package index to Pipfile;
Install package from added index that depends on packages located in the main index.