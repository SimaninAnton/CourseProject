Contributor
fridex commented on 15 Oct 2018
I'm trying to understand the purpose of "index" key in the Pipfile.lock file that is automatically inserted by Pipenv. For a simple Pipfile file shown bellow:
[[source]]
url = "https://index-aicoe.a3c1.starter-us-west-1.openshiftapps.com/fedora28/1.9/jemalloc"
verify_ssl = true
name = "redhat-aicoe-experiments"

[[source]]
url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"

[packages]
click = "<6.7"
tensorflow = {version="==1.9.0rc0", index="redhat-aicoe-experiments"}

[dev-packages]
Pipenv correctly computes Pipfile.lock file. However, the "index" key is stated in Pipfile.lock only for direct dependencies - in this case tensorflow and click where tensorflow was explicitly configured to use the provided index. All the transitive dependencies of these packages do not have the "index" key set (I observed this, not sure if this happens in every case) - see for example click (direct dependency) and termcolor (indirect dependency):
...
        "click": {
            "hashes": [...],
            "index": "pypi",
            "version": "==6.6"
        },
...
        "termcolor": {
            "hashes": [...],
            No index provided here
            "version": "==1.1.0"
        },
...
I'm wondering about the logic here (this is somehow related to the comment I posted earlier
in #2159 (comment)).
Is the index configuration stated only for direct dependencies?
I haven't check implementation details, but would it be possible to include also information about index that was used for indirect dependencies?
From where this "index" item comes from?
Why there is implicitly inserted the pypi index in case of click? (it was not explicitly configured in the Pipfile)
This issue is trying to start a discussion around this, if there is a need to write a PEEP, I'm happy to do it, but first I would like to understand the initial purpose of this behavior.
$ pipenv --support