Contributor
skurfer commented on 10 May 2018 â€¢
edited
With PIPENV_VENV_IN_PROJECT true, pipenv --two tries to use Python 3 and fails to create a virtual environment.
Note that if you installed using Homebrew, you need to run /usr/local/Cellar/pipenv/11.10.4/libexec/bin/python -m pipenv.help
$ python -m pipenv.help output
------------
Expected result
With PIPENV_VENV_IN_PROJECT undefined, pipenv --two does what I expect:
Creates a Pipfile with python_version = "2.7"
Creates a new virtual environment using Python 2 in $WORKON_HOME
Actual result
If I enable PIPENV_VENV_IN_PROJECT and run pipenv --two:
A Pipfile is created with python_version = "3.6"
No virtual environment is created at .venv
If I run pipenv shell, it attempts to create a virtual environment in .venv using Python 3, but that and everything after fails.
Steps to replicate
sample shell commands and output
A work-around is to manually run virtualenv -p python2 .venv before running any pipenv commands.