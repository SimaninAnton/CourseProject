davidfstr commented on 25 Aug 2018
Issue description
If I run pip3 install ruamel.yaml==0.10.11 (A) in a clean virtual environment, it installs successfully, pulling in its one additional dependency ruamel.base (B).
If I do the similar pipenv install ruamel.yaml==0.10.11 (A) in an empty directory, it generates a Pipfile.lock with both the expected ruamel.base (B) dependency but also an unexpected ruamel.ordereddict (C), and attempts to install all 3.
I don't know why pipenv has decided to attempt to install ruamel.ordereddict (C). It does not show up in pipenv's computed graph:
$ pipenv graph
ruamel.yaml==0.10.11
  - ruamel.base [required: >=1.0.0, installed: 1.0.0]
Unfortunately the install of the mystery ruamel.ordereddict (C) fails, so I am unable to migrate ruamel.yaml==0.10.11 (A) from my requirements.txt setup to a new pipenv setup.
Expected result
The command pip3 install ruamel.yaml==0.10.11 should generate a Pipenv.lock file containing only the 2 packages {ruamel.yaml, ruamel.base} and attempt to install them.
Actual result
The command pip3 install ruamel.yaml==0.10.11 actually generates a Pipenv.lock file containing the 3 packages {ruamel.yaml, ruamel.base, ruamel.ordereddict} and attempts to install them.
If I look at the output of pipenv lock --verbose I notice that pipenv thinks that ruamel.yaml (A) depends directly on ruamel.ordereddict (C). Strange.
Steps to replicate
Install the latest pipenv, currently 2018.7.1.
Create the following Pipfile in an empty directory.
[[source]]
url = "https://pypi.org/simple"
verify_ssl = true
name = "pypi"

[packages]
"ruamel.yaml" = "==0.10.11"

[dev-packages]

[requires]
python_version = "3.6"
Run command pipenv lock. Notice that the Pipfile.lock it generates has the 3 packages mentioned instead of the expected 2.
$ pipenv --support