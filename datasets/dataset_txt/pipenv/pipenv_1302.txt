LegoStormtroopr commented on 21 Mar 2018
I am working on a project that uses a mono-repo and want my Pipfile to have subdirectories in that project as dependencies.
If I lock the following Pipfile:
[[source]]
url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"

[dev-packages]

[packages]
django = "~=1.11"
"aristotle-cloud" = {path = "./python/aristotle-cloud", editable = false}

[requires]
python_version = "3.6"
I get the following entry in my Pipfile.lock
    "default": {
        "aristotle-cloud": {
            "editable": false,
            "path": "./python/aristotle-cloud"
        },
But as soon as any git dependency shows up, for example:
[packages]
django = "~=1.11"
django-data-importer = {ref = "master", git = "https://github.com/LegoStormtroopr/django-data-importer"}
"aristotle-cloud" = {path = "./python/aristotle-cloud", editable = false}
Locking it now produces this entry in the Pipfile.lock file:
        "aristotle-cloud": {
            "editable": true,
            "git": "https://github.com/LegoStormtroopr/aristotle-cloud",
            "ref": "ccc9b36237fdde97d68cf4b101ca926dbce2aef8",
            "subdirectory": "python/aristotle-cloud"
        },
I'm guessing that its picking up the fact that the file is in a git repo, but this isn't what I want. What I want is to lock the Pipfile to still require the subdirectorys when it is checked out, and install all of the packages in it from that directory, not have it go and try and fetch a different commit and install from there (which in this case it can't because its a private repo).