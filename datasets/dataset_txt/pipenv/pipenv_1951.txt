tfeldmann commented on 11 Oct 2017
I've run into a strange error where a environment variable declared in a .env file is available in pipenv run python but not in pipenv shell. This only happens if the variable is named DYLD_LIBRARY_PATH.
I'm using macOs High Sierra, Python 3.6.3, pipenv 8.2.6.
Setup to reproduce:
$ mkdir envtest
$ cd envtest
$ pipenv --three
Creating a virtualenv for this project…
Using /usr/local/bin/python3.6m to create virtualenv…
⠋Running virtualenv with interpreter /usr/local/bin/python3.6m
Using base prefix '/usr/local/Cellar/python3/3.6.3/Frameworks/Python.framework/Versions/3.6'
New python executable in /Users/tf/.local/share/virtualenvs/envtest-S14rkyS9/bin/python3.6
Also creating executable in /Users/tf/.local/share/virtualenvs/envtest-S14rkyS9/bin/python
Installing setuptools, pip, wheel...done.

Virtualenv location: /Users/tf/.local/share/virtualenvs/envtest-S14rkyS9
Creating a Pipfile for this project…
$ echo "DYLD_LIBRARY_PATH=Teststring" > .env
$ cat .env
DYLD_LIBRARY_PATH=Teststring
Now this works as expected:
$ pipenv run python
>>> import os; os.environ['DYLD_LIBRARY_PATH']
'Teststring'
And this does not:
$ pipenv shell
Loading .env environment variables…
Spawning environment shell (/bin/zsh). Use 'exit' to leave.
source /Users/tf/.local/share/virtualenvs/envtest-S14rkyS9/bin/activate
$ echo $DYLD_LIBRARY_PATH

$ python
>>> import os; os.environ['DYLD_LIBRARY_PATH']
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/Users/tf/.local/share/virtualenvs/envtest-S14rkyS9/bin/../lib/python3.6/os.py", line 669, in __getitem__
    raise KeyError(key) from None
KeyError: 'DYLD_LIBRARY_PATH'