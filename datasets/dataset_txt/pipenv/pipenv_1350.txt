zyv commented on 14 Mar 2018
The problem appears on systems with Python 2 installed as a default (unfortunately, will still be around for at least several years!) and pipenv installed on Python 2 accordingly, when users are trying to create and manage Python 3 virtualenvs.
See details about my specific setup here:
#1686 (comment)
Expected result
pipenv works.
Actual result
pipenv bails out with an exception:
zaytsev@work:~/src/pipenv$ docker run -it --rm pipenv-bug
port Link
  File "/root/.local/lib/python2.7/site-packages/pipenv/../pipenv/vendor/pip9/index.py", line 31, in <module>
    from pip9.wheel import Wheel, wheel_ext
  File "/root/.local/lib/python2.7/site-packages/pipenv/../pipenv/vendor/pip9/wheel.py", line 6, in <module>
    import compileall
  File "/usr/lib/python3.6/compileall.py", line 20, in <module>
    from concurrent.futures import ProcessPoolExecutor
  File "/root/.local/lib/python2.7/site-packages/pipenv/../pipenv/../concurrent/futures/__init__.py", line 8, in <module>
    from concurrent.futures._base import (FIRST_COMPLETED,
  File "/root/.local/lib/python2.7/site-packages/pipenv/../pipenv/../concurrent/futures/_base.py", line 414
    raise exception_type, self._exception, self._traceback
                        ^
SyntaxError: invalid syntax
Steps to replicate
# Build image
zaytsev@work:~/src/pipenv$ docker build . --tag pipenv-bug

# Reproduce bug
zaytsev@work:~/src/pipenv$ docker run -it --rm pipenv-bug

# Debug live
zaytsev@work:~/src/pipenv$ docker run -it --rm pipenv-bug /bin/sh
Dockerfile:
zaytsev@work:~/src/pipenv$ cat Dockerfile 
FROM python:2.7-alpine3.7

WORKDIR /opt

RUN apk add --no-cache python3 gcc musl-dev libffi-dev openssl-dev

RUN pip install --user pipenv

ENV PATH="/root/.local/bin:${PATH}" SHELL="/bin/sh"

RUN pipenv --python 3.6

# Installing this breaks pipenv!
RUN pip install --user futures

CMD ["pipenv", "update", "--dry-run"]
Duplicates:
#1686
#1603
#1589
#1553