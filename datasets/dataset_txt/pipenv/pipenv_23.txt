Janssena commented on 23 Nov 2019
Be sure to check the existing issues (both open and closed!), and make sure you are running the latest version of Pipenv.
Check the diagnose documentation for common issues before posting! We may close your issue if it is very similar to one of them. Please be considerate, or be on your way.
Make sure to mention your debugging experience if the documented solution failed.
Hey all,
I've recently bought a new laptop running Ubuntu 19.10 and transferred a Python3.7 pipenv project I've been working on from my Mac. This project has tensorflow2.0 as a dependency, which did not cause me any issues on Mac, but is failing the lock process on Ubuntu. It tries to install functools32, resulting in a "python setup.py egg_info" error in /tmp/tmp0p5qww0zbuild/functools32/. I've been checking the tensorflow repo, and they have defined
"'functools32 >= 3.2.3;python_version<"3"" (under tensorflow/tools/pip_package/setup.py) to keep it from installing on Python3. Clearly pipenv is not playing nice with this on Linux.
In the bazel setup for tensorflow Google put srcs_version = PY2AND3 for functools32
(under third_party/functools32.BUILD). Is pipenv actually using this setup information? If so, I will create a PR for their repo.
Describe the issue briefly here.
Expected result
After seeing the line "'functools32 >= 3.2.3;python_version<"3"" in the setup.py of tensorflow, pipenv should not install functools32 on python versions >= 3
Actual result
output of pipenv install tensorflow
pip9.exceptions.InstallationError: Command "python setup.py egg_info" failed with error code 1 in /tmp/tmp0p5qww0zbuild/functools32/
or as a result of pipenv lock only when tensorflow is included as a dependecy in the Pipfile.
Steps to replicate
Provide the steps to replicate (which usually at least includes the commands and the Pipfile).
In a Python3.7 project on Ubuntu 19.10 run pipenv install tensorflow
Please run $ pipenv --support, and paste the results here. Don't put backticks (`) around it! The output already contains Markdown formatting.
If you're on macOS, run the following:
$ pipenv --support | pbcopy
If you're on Windows, run the following:
> pipenv --support | clip
If you're on Linux, run the following:
$ pipenv --support | xclip