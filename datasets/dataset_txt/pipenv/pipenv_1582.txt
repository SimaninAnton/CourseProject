manihamidi commented on 8 Feb 2018 â€¢
edited
Is the only way to install package on private index (specifically one which has public subdependencies on PyPI) to "manually" fill the "Pipfile" and do pipenv install as implied here?
In other words, pipenv install pkgname --extra-index-url <link-to-index> doesn't work (neither does pipenv install pkgname -i <link-to-index> (as it shouldn't since -i corresponds to --index-url which is not desirable in this context.)
Describe your environment
OS Type: windows 7
Python version: $ python -V 2.7
Pipenv version: $ pipenv --version 9.0.3
Expected result
I expect for package to be installed from the private index, and its sub-dependencies (specified in its setup.py) be installed from the public index (PyPI). Ideally the additional [[sources]] paragraph would be added to the Pipefile and the private package's "index" key would point to this "extra-index-url" as its source.
I understand that this service just may not be provided by pipenv (yet?), but I wonder if there is some existing solution that i'm not finding.
Actual result
pipenv can't find the private package to collect/install it. This is using either the -i or --extra-index-url as mentioned above.
Error:  An error occurred while installing pkgname!
  Could not find a version that satisfies the requirement pkgname (from versions: )
No matching distribution found for pkgname
Steps to replicate
Create package called pkgname.
Use install_requires in its setup.py to specify some public package as a dependency (e.g., pandas)
Upload it to private index.
Try to install it with pipenv
pipenv install pkgname --extra-index-url <link-to-index>
3