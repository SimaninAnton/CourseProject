Contributor
jacebrowning commented on 4 Mar 2017
This is a feature request inspired by Bundler.
I have PIPENV_VENV_IN_PROJECT=true set in my build scripts, but occasionally I will run a pipenv command manually which triggers the creation of a whole new virtual environment despite one existing locally in .venv.
It would be nice if pipenv could locate the virtual environment for a project a bit more intelligently.
Bundler solves this problem by creating a local, hidden configuration file. After installing gems to a specific location:
$ bundle install --path=vendor/bundler
Bundler writes to .bundler/config:
---
BUNDLE_PATH: "vendor/bundler"
BUNDLE_DISABLE_SHARED_GEMS: "true"
So that future calls to $ bundle install with use vendor/bundler without needed to specify a custom path.
pipenv could do something similar with a configuration file or simply rely on the fact that .venv is a convention for virtual environments and use .venv if it exists.
1