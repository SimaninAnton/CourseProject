lambe commented on 13 Aug 2018 •
edited
Issue description
Creating the virtual environment and installing packages from pip with pipenv install is fine, but I get a Read timed out. error while creating the lock file. I'm running pipenv install numpy as the working example with Python version 2.7.12 on Ubuntu 16.04. (I do have pyenv installed but for this example the shim just points to the system python.)
Running pip list in the virtual environment shows the package installed correctly. (As does running the import statement in the python shell.) It's just the lock file that has problems. I also tried running pipenv lock --clear with the created Pipfile, and the same error shows up.
Expected result
Clean exit and production of Pipfile.lock (not produced in practice)
Actual result
pipenv install numpy --verbose
Installing numpy...
⠋Installing u'numpy'
$ "/home/andrew/.local/share/virtualenvs/pipenv-test-folder-5LVhMAsj/bin/pip" install   --verbose    "numpy" -i https://pypi.org/simple --exists-action w
...
Adding numpy to Pipfile's [packages]...
Pipfile.lock not found, creating...
Locking [dev-packages] dependencies...
Locking [packages] dependencies...
using sources: [{u'url': u'https://pypi.org/simple', u'verify_ssl': True, u'name': u'pypi'}]
Using pip: -i https://pypi.org/simple

                          ROUND 1                           
Current constraints:
  numpy (from -r /tmp/pipenv-bKDTaP-requirements/pipenv-p_tTUY-constraints.txt (line 2))

Finding the best candidates:
  found candidate numpy==1.15.0 (constraint was <any>)

Finding secondary dependencies:
  numpy==1.15.0             requires numpy==1.15.0; python_version >= "2.7" and python_version != "3.0.*" and python_version != "3.1.*" and python_version != "3.2.*" and python_version != "3.3.*"

New dependencies found in this round:
  adding [u'numpy', '==1.15.0', '[]']
Removed dependencies in this round:
Unsafe dependencies in this round:
------------------------------------------------------------
Result of round 1: not stable

                          ROUND 2                           
Current constraints:
  numpy==1.15.0 (from -r /tmp/pipenv-bKDTaP-requirements/pipenv-p_tTUY-constraints.txt (line 2))

Finding the best candidates:
  found candidate numpy==1.15.0 (constraint was ==1.15.0)
Finding secondary dependencies:
  numpy==1.15.0             requires numpy==1.15.0; python_version >= "2.7" and python_version != "3.0.*" and python_version != "3.1.*" and python_version != "3.2.*" and python_version != "3.3.*"
------------------------------------------------------------
Result of round 2: stable, done

Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/pipenv/resolver.py", line 87, in <module>
    main()
  File "/usr/local/lib/python2.7/dist-packages/pipenv/resolver.py", line 76, in main
    system=system,
  File "/usr/local/lib/python2.7/dist-packages/pipenv/resolver.py", line 63, in resolve
    allow_global=system,
  File "/usr/local/lib/python2.7/dist-packages/pipenv/utils.py", line 402, in resolve_deps
    req_dir=req_dir
  File "/usr/local/lib/python2.7/dist-packages/pipenv/utils.py", line 294, in actually_resolve_deps
    hashes = resolver.resolve_hashes(results)
  File "/usr/local/lib/python2.7/dist-packages/pipenv/patched/piptools/resolver.py", line 74, in resolve_hashes
    return {ireq: self.repository.get_hashes(ireq) for ireq in ireqs}
  File "/usr/local/lib/python2.7/dist-packages/pipenv/patched/piptools/resolver.py", line 74, in <dictcomp>
    return {ireq: self.repository.get_hashes(ireq) for ireq in ireqs}
  File "/usr/local/lib/python2.7/dist-packages/pipenv/patched/piptools/repositories/pypi.py", line 448, in get_hashes
    for candidate in matching_candidates
  File "/usr/local/lib/python2.7/dist-packages/pipenv/patched/piptools/repositories/pypi.py", line 448, in <setcomp>
    for candidate in matching_candidates
  File "/usr/local/lib/python2.7/dist-packages/pipenv/patched/piptools/repositories/pypi.py", line 72, in get_hash
    hash_value = self._get_file_hash(location)
  File "/usr/local/lib/python2.7/dist-packages/pipenv/patched/piptools/repositories/pypi.py", line 81, in _get_file_hash
    for chunk in iter(lambda: fp.read(8096), b""):
  File "/usr/local/lib/python2.7/dist-packages/pipenv/patched/piptools/repositories/pypi.py", line 81, in <lambda>
    for chunk in iter(lambda: fp.read(8096), b""):
  File "/usr/local/lib/python2.7/dist-packages/pipenv/patched/notpip/_vendor/urllib3/response.py", line 401, in read
    raise IncompleteRead(self._fp_bytes_read, self.length_remaining)
  File "/usr/lib/python2.7/contextlib.py", line 35, in __exit__
    self.gen.throw(type, value, traceback)
  File "/usr/local/lib/python2.7/dist-packages/pipenv/patched/notpip/_vendor/urllib3/response.py", line 316, in _error_catcher
    raise ReadTimeoutError(self._pool, None, 'Read timed out.')
pipenv.patched.notpip._vendor.urllib3.exceptions.ReadTimeoutError: HTTPSConnectionPool(host='files.pythonhosted.org', port=443): Read timed out.
/usr/local/lib/python2.7/dist-packages/pipenv/_compat.py:113: ResourceWarning: Implicitly cleaning up <TemporaryDirectory '/tmp/pipenv-bKDTaP-requirements'>
  warnings.warn(warn_message, ResourceWarning)

/usr/local/lib/python2.7/dist-packages/pipenv/_compat.py:113: ResourceWarning: Implicitly cleaning up <TemporaryDirectory '/tmp/pipenv-IF40st-requirements'>
  warnings.warn(warn_message, ResourceWarning)
Steps to replicate
Just pipenv install numpy in a clean folder.
$ pipenv --support
4