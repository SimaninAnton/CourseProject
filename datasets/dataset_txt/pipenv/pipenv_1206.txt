cpoptic commented on 12 Apr 2018
Be sure to check the existing issues (both open and closed!).
Describe the issue briefly here.
Running pipenv install produces error:
Pipfile.lock not found, creating…
Locking [dev-packages] dependencies…
Locking [packages] dependencies…
Warning: Your dependencies could not be resolved. You likely have a mismatch in your sub-dependencies.
You can use $ pipenv install --skip-lock to bypass this mechanism, then run $ pipenv graph to inspect the situation.
Could not find a version that matches basemap
Tried: (no version found at all)
I then follow instructions and run >>
pipenv install --skip-lock
Installing dependencies from Pipfile…
An error occurred while installing time! Will try again.
An error occurred while installing calendar! Will try again.
An error occurred while installing codecs! Will try again.
An error occurred while installing json! Will try again.
An error occurred while installing sys! Will try again.
An error occurred while installing gzip! Will try again.
An error occurred while installing string! Will try again.
An error occurred while installing glob! Will try again.
An error occurred while installing re! Will try again.
An error occurred while installing matplotlib.pyplot! Will try again.
================================ 35/35 - 00:00:05
An error occurred while installing basemap! Will try again.
Installing initially–failed dependencies…
Collecting time --------------------- 0/11 - 00:00:00
Could not find a version that satisfies the requirement time (from -r C:\Users\Chris\AppData\Local\Temp\pipenv-gnbsva_j-requirements\pipenv-2r7msx_f-requirement.txt (line 1)) (from versions: )
No matching distribution found for time (from -r C:\Users\Chris\AppData\Local\Temp\pipenv-gnbsva_j-requirements\pipenv-2r7msx_f-requirement.txt (line 1))
 ================================ 0/11 - 00:00:01
It seems to get hung up looking for "time" dependency, which is strange.
When I check the C:\Users\Chris\AppData\Local\Temp directory, there is no folder named "pipenv-gnbsva_j-requirements", so I'm guessing it's looking for a requirements.txt file in a folder that no longer exists. How to fix this?
Please run $ python -m pipenv.help, and paste the results here.
Pipenv version: '11.10.0'
Pipenv location: 'C:\\ProgramData\\Anaconda3\\lib\\site-packages\\pipenv'
Python location: 'C:\\ProgramData\\Anaconda3\\python.exe'
Other Python installations in PATH:
2.7: C:\Python27\python.exe
3.6: C:\ProgramData\Anaconda3\python.exe
3.6.3: C:\ProgramData\Anaconda3\python.exe
2.7.2: C:\Python27\python.exe
2.7.2: C:\Windows\py.exe
PEP 508 Information:
{'implementation_name': 'cpython',
 'implementation_version': '3.6.3',
 'os_name': 'nt',
 'platform_machine': 'AMD64',
 'platform_python_implementation': 'CPython',
 'platform_release': '10',
 'platform_system': 'Windows',
 'platform_version': '10.0.16299',
 'python_full_version': '3.6.3',
 'python_version': '3.6',
 'sys_platform': 'win32'}
System environment variables:
ALLUSERSPROFILE
APPDATA
ASL.LOG
COMMONPROGRAMFILES
COMMONPROGRAMFILES(X86)
COMMONPROGRAMW6432
COMPUTERNAME
COMSPEC
CONFIGSETROOT
CUDA_PATH
CUDA_PATH_V9_0
FPS_BROWSER_APP_PROFILE_STRING
FPS_BROWSER_USER_PROFILE_STRING
GDAL_DATA
HADOOP_HOME
HOMEDRIVE
HOMEPATH
LOCALAPPDATA
LOGONSERVER
MKL_THREADING_LAYER
MSMPI_BIN
NUMBER_OF_PROCESSORS
NVCUDASAMPLES9_0_ROOT
NVCUDASAMPLES_ROOT
NVTOOLSEXT_PATH
ONEDRIVE
OPENSSL_CONF
OS
PATH
PATHEXT
POSTGIS_ENABLE_OUTDB_RASTERS
POSTGIS_GDAL_ENABLED_DRIVERS
PROCESSOR_ARCHITECTURE
PROCESSOR_IDENTIFIER
PROCESSOR_LEVEL
PROCESSOR_REVISION
PROGRAMDATA
PROGRAMFILES
PROGRAMFILES(X86)
PROGRAMW6432
PROMPT
PSMODULEPATH
PUBLIC
PYSPARK_DRIVER_PYTHON
PYSPARK_DRIVER_PYTHON_OPTS
SESSIONNAME
SPARK_HOME
SYSTEMDRIVE
SYSTEMROOT
TEMP
TMP
USERDOMAIN
USERDOMAIN_ROAMINGPROFILE
USERNAME
USERPROFILE
VBOX_MSI_INSTALL_PATH
VS140COMNTOOLS
WINDIR
PYTHONDONTWRITEBYTECODE
PIP_PYTHON_PATH
PYTHONUNBUFFERED
Pipenv–specific environment variables:
Debug–specific environment variables:
PATH: C:\ProgramData\Anaconda3\Library\bin;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin;D:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\bin;D:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v9.0\libnvvp;C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC;D:\utils\cuda;C:\Program Files\Microsoft MPI\Bin\;C:\ProgramData\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files\dotnet\;C:\Program Files\nodejs\;C:\Program Files\erl9.2\bin;C:\Program Files (x86)\Elixir\bin;C:\Users\Chris\.mix\escripts;C:\ProgramData\Anaconda3;C:\ProgramData\Anaconda3\Scripts;C:\Python27;C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\bin;C:\Program Files\Calibre2\;C:\Program Files (x86)\Gow\bin;D:\utils\spark-2.2.1-bin-hadoop2.7\bin;C:\Program Files\CMake\bin;C:\Program Files\Git\cmd;C:\Users\Chris\AppData\Local\Microsoft\WindowsApps;C:\Users\Chris\AppData\Roaming\npm;C:\Users\Chris\AppData\Local\atom\bin;C:\ProgramData\Anaconda3;C:\ProgramData\Anaconda3\Scripts;
Contents of Pipfile ('D:\projects\Pipfile'):
[[source]]
url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"

[packages]
jupyterlab = "*"
watermark = "*"
flask = "*"
numpy = "*"
matplotlib = "*"
tqdm = "*"
"eli5" = "*"
yellowbrick = "*"
seaborn = "*"
datetime = "*"
dask = "*"
pandas = "*"
cython = "*"
pandas-profiling = "*"
forestci = "*"
"bs4" = "*"
nltk = "*"
lxml = "*"
shapely = "*"
gensim = "*"
time = "*"
calendar = "*"
codecs = "*"
json = "*"
sys = "*"
gzip = "*"
string = "*"
glob = "*"
re = "*"
"matplotlib.pyplot" = "*"
tweepy = "*"
networkx = "*"
basemap = "*"
studioml = "*"
tensorflow = "*"

[dev-packages]
If you're on MacOS, just run the following:
$ python -m pipenv.help | pbcopy