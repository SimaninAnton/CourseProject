arowla commented on 13 Oct 2017
I was going to fork and develop a patch for this, or at least produce a failing test, but running pipenv install on this repo throws a dependency mismatch error. I skipped the lock to work around it and activated the shell, but pytest isn't present. So I'm throwing up my hands at the moment.
But the real issue is that I recently updated a number of my requirements.txt files to use the "compatibile release specifier" as defined in PEP 440 (~=). pipenv chokes on these and throws a parsing error during the phase while it's trying to generate a Pipfile from the requirements.txt. That error looks like this.
Requirements.txt found, instead of Pipfile! Converting…
Warning: Your Pipfile now contains pinned versions, if your requirements.txt did.
We recommend updating your Pipfile to specify the "*" version, instead.
Pipfile.lock not found, creating…
Locking [dev-packages] dependencies…
Locking [packages] dependencies…
Traceback (most recent call last):
  File "/usr/bin/pipenv", line 9, in <module>
    load_entry_point('pipenv==8.2.6', 'console_scripts', 'pipenv')()
  File "/usr/lib/python2.7/site-packages/pipenv/vendor/click/core.py", line 722, in __call__
    return self.main(*args, **kwargs)
  File "/usr/lib/python2.7/site-packages/pipenv/vendor/click/core.py", line 697, in main
    rv = self.invoke(ctx)
  File "/usr/lib/python2.7/site-packages/pipenv/vendor/click/core.py", line 1066, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/usr/lib/python2.7/site-packages/pipenv/vendor/click/core.py", line 895, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/usr/lib/python2.7/site-packages/pipenv/vendor/click/core.py", line 535, in invoke
    return callback(*args, **kwargs)
  File "/usr/lib/python2.7/site-packages/pipenv/cli.py", line 1785, in install
    do_init(dev=dev, allow_global=system, ignore_pipfile=ignore_pipfile, system=system, skip_lock=skip_lock, verbose=verbose, concurrent=concurrent, deploy=deploy)
  File "/usr/lib/python2.7/site-packages/pipenv/cli.py", line 1293, in do_init
    do_lock(system=system)
  File "/usr/lib/python2.7/site-packages/pipenv/cli.py", line 1083, in do_lock
    pre=pre
  File "/usr/lib/python2.7/site-packages/pipenv/utils.py", line 386, in resolve_deps
    constraint = [c for c in pip.req.parse_requirements(t, session=pip._vendor.requests)][0]
  File "/usr/lib/python2.7/site-packages/pipenv/patched/pip/req/req_file.py", line 93, in parse_requirements
    for req in req_iter:
  File "/usr/lib/python2.7/site-packages/pipenv/patched/pip/req/req_file.py", line 158, in process_line
    isolated=isolated, options=req_options, wheel_cache=wheel_cache
  File "/usr/lib/python2.7/site-packages/pipenv/patched/pip/req/req_install.py", line 234, in from_line
    wheel_cache=wheel_cache, constraint=constraint)
  File "/usr/lib/python2.7/site-packages/pipenv/patched/pip/req/req_install.py", line 90, in __init__
    "Invalid requirement: '%s'\n%s" % (req, add_msg))
pip.exceptions.InstallationError: Invalid requirement: 'jsonpath-rw=1.4.0'
= is not a valid operator. Did you mean == ?
Keep in mind that the requirements.txt file actually specifies jsonpath-rw~=1.4.0, not with a single equals sign as the error states.