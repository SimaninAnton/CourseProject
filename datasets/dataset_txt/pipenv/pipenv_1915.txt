Contributor
gsemet commented on 18 Oct 2017
Hello
It's common when writing a Dockerfile for Python project to split installation on 2 Docker layers, the first one for dependencies and the second one for the module of the application being deployed, so that when developing, when a change on the code occurs, only the second layer is rebuilt by docker build, without having to reinstall all the dependencies.
It works pretty well and speed up development.
Here the kind of Dockerfile I write using pipenv:
...
# first layer
WORKDIR     /app
COPY        Pipfile* /app/
RUN         pipenv install --system

# second layer
COPY        . /app/
RUN         cd /app \
        &&  pip install .
I would prefer having a nice pipenv install option for the last command that simply do not try installing the dependency. Something like pipen install --system --ignore-deps. I have to use pip install, in this case it is faster that pipenv install because it does not try to install dependencies.
Also, do you think this can be documented on pipenv website? It can be very valuable for new developers