matejcik commented on 5 Sep 2018
We're using pipenv in the following scenario: our main application has a Pipfile with several python libraries, including our testing library. This is used in Travis.
We want to be able to lock all "regular" dependencies, as well as the testing library's dependencies. At the same time, we always want to use testing library from git master.
This is because we always want to get updated features and testcases from the testing library, but we used to experience problems when the dependencies had conflicts in versions with the "regular" dependencies or with Python packages provided by Travis. Admittedly, a little strange scenario.
There are some potential failure modes when the library grows a dependency or changes a version, but we would learn about this from a failed Travis run and update Pipfile when appropriate.
This was working fine for us when we locked to "ref": "master" in Pipfile.lock. But at some point, this stopped working - pipenv will now lock to an explicit commit.
Admittedly, that makes much more sense! But on the other hand, I don't see a way to support our scenario anymore. For now, my solution is to edit Pipfile manually and put back "ref": "master" where appropriate. It would be nice if there was an option to either tell pipenv to do this by itself, or an option to mark a dependency as "should not be locked", without this affecting its dependencies.