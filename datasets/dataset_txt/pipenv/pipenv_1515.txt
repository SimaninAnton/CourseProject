Contributor
jsatt commented on 26 Feb 2018
When a default package is locked (django==1.8.18), and a dev package with a dependency (django-debug-toolbar==1.9.1 -> django>=1.8) exists, running pipenv install --dev doesn't properly respect the locked version (installing django 1.11 in this case).
This was brought up as part of #1137, but may be a different root cause. I've tried the following Pipfile with both 10.1.0 and current master of pipenv installed. In cases where the dev package is moved to packages it seems to always resolve properly.
Pipfile
[[source]]
url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"

[requires]
python_version = "2.7"

[dev-packages]
django-debug-toolbar = "==1.9.1"

[packages]
django = "==1.8.18"
Full output:
>> mkvirtualenv test
New python executable in /home/jsatt/.virtualenvs/test/bin/python
Installing setuptools, pip, wheel...done.
virtualenvwrapper.user_scripts creating /home/jsatt/.virtualenvs/test/bin/predeactivate
virtualenvwrapper.user_scripts creating /home/jsatt/.virtualenvs/test/bin/postdeactivate
virtualenvwrapper.user_scripts creating /home/jsatt/.virtualenvs/test/bin/preactivate
virtualenvwrapper.user_scripts creating /home/jsatt/.virtualenvs/test/bin/postactivate
virtualenvwrapper.user_scripts creating /home/jsatt/.virtualenvs/test/bin/get_env_details

(test)>> pip install pipenv==10.1.0
Collecting pipenv==10.1.0
Collecting urllib3>=1.21.1 (from pipenv==10.1.0)
  Using cached urllib3-1.22-py2.py3-none-any.whl
Collecting pew>=0.1.26 (from pipenv==10.1.0)
  Using cached pew-1.1.2-py2.py3-none-any.whl
Collecting requests>2.18.0 (from pipenv==10.1.0)
  Using cached requests-2.18.4-py2.py3-none-any.whl
Collecting virtualenv (from pipenv==10.1.0)
  Using cached virtualenv-15.1.0-py2.py3-none-any.whl
Requirement already satisfied: pip>=9.0.1 in /home/jsatt/.virtualenvs/test/lib/python2.7/site-packages (from pipenv==10.1.0)
Collecting pathlib; python_version == "2.7" (from pew>=0.1.26->pipenv==10.1.0)
Collecting shutilwhich; python_version == "2.7" (from pew>=0.1.26->pipenv==10.1.0)
Collecting backports.shutil-get-terminal-size; python_version == "2.7" (from pew>=0.1.26->pipenv==10.1.0)
  Using cached backports.shutil_get_terminal_size-1.0.0-py2.py3-none-any.whl
Requirement already satisfied: setuptools>=17.1 in /home/jsatt/.virtualenvs/test/lib/python2.7/site-packages (from pew>=0.1.26->pipenv==10.1.0)
Collecting virtualenv-clone>=0.2.5 (from pew>=0.1.26->pipenv==10.1.0)
Collecting idna<2.7,>=2.5 (from requests>2.18.0->pipenv==10.1.0)
  Using cached idna-2.6-py2.py3-none-any.whl
Collecting certifi>=2017.4.17 (from requests>2.18.0->pipenv==10.1.0)
  Using cached certifi-2018.1.18-py2.py3-none-any.whl
Collecting chardet<3.1.0,>=3.0.2 (from requests>2.18.0->pipenv==10.1.0)
  Using cached chardet-3.0.4-py2.py3-none-any.whl
Installing collected packages: urllib3, pathlib, shutilwhich, backports.shutil-get-terminal-size, virtualenv, virtualenv-clone, pew, idna, certifi, chardet, requests, pipenv
Successfully installed backports.shutil-get-terminal-size-1.0.0 certifi-2018.1.18 chardet-3.0.4 idna-2.6 pathlib-1.0.1 pew-1.1.2 pipenv-10.1.0 requests-2.18.4 shutilwhich-1.1.0 urllib3-1.22 virtualenv-15.1.0 virtualenv-clone-0.2.6

(test)>> pipenv install --dev
Courtesy Notice: Pipenv found itself running within a virtual environment, so it will automatically use that environment, instead of creating its own for any project.
Installing dependencies from Pipfile.lock (4fbe45)…
  🐍   ▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉▉ 5/5 — 00:00:02

(test)>> pip freeze
backports.shutil-get-terminal-size==1.0.0
certifi==2018.1.18
chardet==3.0.4
Django==1.11.10
django-debug-toolbar==1.9.1
idna==2.6
pathlib==1.0.1
pew==1.1.2
pipenv==10.1.0
pytz==2018.3
requests==2.18.4
shutilwhich==1.1.0
sqlparse==0.2.4
urllib3==1.22
virtualenv==15.1.0
virtualenv-clone==0.2.6
2