josephong commented on 28 Nov 2018 â€¢
edited
Hey there ya'll!
Apologies if this is intended behavior, if I'm making a simple mistake, or if there's another related issue. I tried searching but because terms like "install" and "install_requires" overlap it was hard to know for sure if an existing issue was already open.
Issue description
pipenv, version 2018.11.26
After an initial installation of an editable install of the local directory, pipenv install fails to update Pipfile.lock if setup.py is subsequently changed.
Code running in the repository fails to run because the changed dependencies are not installed.
Expected result
I expect pipenv install to generate a fairly consistent environment (within the bounds of abstract dependencies) regardless of whether it is run from an existing env or a new env.
Here, if setup.py had a new dependency added after a first install, I would expect pipenv install to update Pipfile.lock and to install the additional dependency.
Actual result
Pipfile.lock isn't updated when setup.py is changed, and thus the output of a fresh pipenv install is different from that of running pipenv install on an pre-existing setup.
While it's possible to always run pipenv lock --clear on every setup.py change, it makes the usage of the tool a little more awkward/prone to forgetfulness errors.
Steps to replicate
Use the following files:
Pipfile
[dev-packages]

[packages]
dependency_test = {editable = true,path = "."}

[requires]
python_version = "3.6"
setup.py
from setuptools import find_packages, setup

PACKAGE_NAME = 'dependency_test'

REQUIRED_PACKAGES = [
    'requests>=2.19.1',
]

setup(
    name=PACKAGE_NAME,
    version='0.1.0',
    packages=find_packages(),
    install_requires=REQUIRED_PACKAGES,
    package_data={ '': [] },
)
Run pipenv install. Note requests is installed.
Update files:
setup.py
from setuptools import find_packages, setup

PACKAGE_NAME = 'dependency_test'

REQUIRED_PACKAGES = [
    'requests>=2.19.1',
    'tqdm>=4.25.0',
]

setup(
    name=PACKAGE_NAME,
    version='0.1.0',
    packages=find_packages(),
    install_requires=REQUIRED_PACKAGES,
    package_data={ '': [] },
)
Run pipenv install. Note that tqdm is not installed.