varnion commented on 31 Jan 2018 â€¢
edited
Dependencies pinned on default enviroment are overrided on development env.
I'll use an example to better illustrate a situation:
You are developing a django app and you don't want to use django >= 2, so you install it like this:
pipenv install "django<2"
Then you decide to install django-debug-toolbar and tag it as a development dependency:
pipenv install django-debug-toolbar --dev
The generated Pipfile.lock will have django on default pinned at 1.11.* and on develop it will be locked at 2.*
For now, the way i'm dealing with this copying all non "*" dependencies to develop on Pipfile, so the generated Pipfile.lock will respect it. Not sure if this is indeed a bug or an design decision.
Describe your environment
OS Type: Linux (Ubuntu 16.04.3 LTS)
Python version: 3.6.2
Pipenv version: 9.0.3
Expected result
I expected Pipfile.lock on develop to respect default rules unless they were explicitly overrided on develop.
Actual result
Pipenv.lock overrides the dependencies on default even when they are not specified.
Steps to replicate
Using my example, run pipenv lock with the following Pipfile:
[[source]]

verify_ssl = true
url = "https://pypi.python.org/simple"
name = "pypi"

[packages]

django = "<2"

[dev-packages]

django-debug-toolbar = "*"
1