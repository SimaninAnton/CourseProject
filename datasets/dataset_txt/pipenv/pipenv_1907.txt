dougthor42 commented on 21 Oct 2017 â€¢
edited
Is it possible to activate a pipenv environment without creating a new shell?
Example:
user@host:~/some_project$ pipenv activate
(some_project-OH5ik22OJ) user@host:~/some_project$
(Edit:) I should mention that this is possible by running
user@host:~/some_project$ . `pipenv --venv`/bin/activate
But I'm more interested in the "why spawn a new shell?"
Why am I asking?
I guess I don't really see the advantage of spawning a new shell. I do, however, see disadvantages:
When exiting the shell, your CWD changes to the path you were at when you spawned the shell, not the path you were in when exiting the shell
After exiting, you don't get your command history from when you were inside the shell
Examples of the disadvantages:
user@host:~/some_project$echo "outside of shell"
outside of shell
user@host:~/some_project$pipenv shell
<snip>
(some_project-AGMeXx6P) user@host:~/some_project$cd src
(some_project-AGMeXx6P) user@host:~/some_project/src$ echo "inside shell"
inside shell
(some_project-AGMeXx6P) user@host:~/some_project/src$ exit
user@host:~/some_project$ history | tail -n 10                # dir changed!
   1  echo "outside of shell"
   2  pipenv shell
   3  history | tail -n 10                                    # `echo "inside shell"` missing!
Describe you environment
Windows, WSL, and Linux
Python version: 3.5.2
Pipenv version: 8.2.6
12