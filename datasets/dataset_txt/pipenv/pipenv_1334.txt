Contributor
gsemet commented on 16 Mar 2018 â€¢
edited
I only have Python 3 on my mac, and do not have a pip command available. Only pip3. I think the official transition to pip as an alias to pip3 hasn't been made yet (current PEP is PEP394 I guess)
So we I do a pipenv --update, I get this result:
$ pipenv --update
Courtesy Notice: Pipenv 11.8.0 is now available. Automatically upgrading!
Traceback (most recent call last):
  File "/Users/gaetan/Library/Python/3.6/bin//pipenv", line 11, in <module>
    sys.exit(cli())
  File "/Users/gaetan/Library/Python/3.6/lib/python/site-packages/pipenv/vendor/click/core.py", line 722, in __call__
    return self.main(*args, **kwargs)
  File "/Users/gaetan/Library/Python/3.6/lib/python/site-packages/pipenv/vendor/click/core.py", line 697, in main
    rv = self.invoke(ctx)
  File "/Users/gaetan/Library/Python/3.6/lib/python/site-packages/pipenv/vendor/click/core.py", line 1043, in invoke
    return Command.invoke(self, ctx)
  File "/Users/gaetan/Library/Python/3.6/lib/python/site-packages/pipenv/vendor/click/core.py", line 895, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/Users/gaetan/Library/Python/3.6/lib/python/site-packages/pipenv/vendor/click/core.py", line 535, in invoke
    return callback(*args, **kwargs)
  File "/Users/gaetan/Library/Python/3.6/lib/python/site-packages/pipenv/vendor/click/decorators.py", line 17, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/Users/gaetan/Library/Python/3.6/lib/python/site-packages/pipenv/cli.py", line 71, in cli
    core.ensure_latest_self()
  File "/Users/gaetan/Library/Python/3.6/lib/python/site-packages/pipenv/core.py", line 171, in ensure_latest_self
    sys.modules['pip'].main(args)
KeyError: 'pip'
The following commands work:
$ pip3
$ python3 -m pip
$ python3 -m pip install --upgrade pipenv
But these do not, obviously:
$ pip
command not found: pip
$ python -m pip
/usr/bin/python: No module named pip
So to upgrade pipenv I usually do:
$ pip3 install --upgrade pipenv
Not sure why pipenv --upgradecomplains about the modulepipmissing, I see it uses Python3 interpreter and the code should be similar topython3 -m pip`.
So I'd like to propose a fallback mecanism, where it detect which version of python it is under and call the executable python -m pip install --upgrade pipenv or python3 -m pip install --upgrade pipenv.
3