futursolo commented on 12 Nov 2017
This can be observed when pipenv lock -r > requirements.txt is used to generate requirements.txt in an environment without an existing virtualenv.
My environment
OS: CI(Docker Image) python:3.6(based on Debian 9.0 stretch)
Python version: Python 3.6.3
Pipenv version: pipenv, version 8.3.2
Expected result
Only dependencies from Pipfile should be printed into requirements.txt.
Actual result
When the former command is executed under an environment without an existing virtualenv, it not only prints the dependencies but also prints Using /usr/local/bin/python3.6m to create virtualenvâ€¦ into the file.
Steps to replicate
As described above.
Workarounds or Solutions
The current workaround I found is to execute any PipEnv commands prior to the generation of requirements.txt as this would let PipEnv create the Virtual Environment.
The solution would be to suppress the output.
Moreover, IMO, PipEnv should only create virtualenvs when it's needed. pipenv lock -r shouldn't create virtualenvs since there's no actual use of the virtualenv under this situation and it consumes a long time and a lot of resources to create a virtualenv and install dependencies.
1