cs01 commented on 17 Nov 2017 •
edited
Ran the following
pipenv run ...
Creating a virtualenv for this project…
Using /usr/bin/python2.7 to create virtualenv…
⠋Running virtualenv with interpreter /usr/bin/python2.7
New python executable in /home/user/.virtualenvs/...-RVyaMy2x/bin/python2.7
Also creating executable in /home/user/.virtualenvs/...-RVyaMy2x/bin/python
Installing setuptools, pip, wheel...done.
...
ImportError: No module named yaml
Describe your environment
Ubuntu 16.04
Python 2.7.12
pipenv, version 8.3.2
Expected result
Expected one of the following:
Automatically install dependencies when pipenv run ... is called and all dependencies aren't in the virtualenv
Add optional flag to do 1
Add command to test if dependencies are installed so that I can run pipenv install before running pipenv run ... (as it stands now, pipenv install is fairly time consuming so I don't want to run it unconditionally)
Modify pipenv check to check if all dependencies are installed and correct
I can try to make this change, just wanted to make sure it's something that you'd be okay merging.
Actual result
Virtualenv was installed but packages were not.
Steps to replicate
Run pipenv run ... on a python file with Pipfile.lock present, without running pipenv install first.