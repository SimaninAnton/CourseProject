vovimayhem commented on 2 Jun 2018 â€¢
edited
I'm trying to use pipenv just for it's deterministic package fetching & locking for my Docker-based development envs, but I'm getting frustrated when for even the simplest task of adding a package to my project requires working with virtualenv, which is redundant and even represents an undesired/useless overhead when working with isolated containers, where it's totally OK to use system packages. For example, see how using the --system option at pipenv install blocks you from installing a package, and without the package it won't update the lock file.
How easy/complicated would it be to extract the package fetching /locking parts (the ones dealing exclusively with the Pipfile + lock) out of pipenv to a new project? (and make it a dependency for pipenv?)
IMHO although this project is inspired on others (ruby's bundler, nodejs's yarn, etc), I think this one does a bit too much to support a (totally valid) workflow, while hindering other workflows.