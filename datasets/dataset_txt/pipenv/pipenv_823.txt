ryangallen commented on 19 Jul 2018
I believe this is a unique concern after checking through open issues and reviewing the diagnose documentation, including the No module named section.
I have pipenv 2018.7.1 (latest) installed according to the Pragmatic Installation of Pipenv instructions in a debian/contrib-stretch64 Vagrant VM running Python 3.7 (same issue in 3.6 as well). Django version 2.0.7 (latest) is installed with pipenv.
Issue description
I am able to run Django commands using pipenv run python manage.py ..., but with pipenv shell a ModuleNotFoundError exception is thrown.
Expected result
pipenv run <command> and pipenv shell + <command> should produce the same result.
$ pipenv run python manage.py check
System check identified no issues (0 silenced).        
$ pipenv shell
(vagrant) $ python manage.py check
System check identified no issues (0 silenced).        
Actual result
pipenv run <command> works as expected but pipenv shell + <command> produces ModuleNotFoundError
$ pipenv run python manage.py check                                              
Loading .env environment variables...                                                                                                                                                                               
System check identified no issues (0 silenced).                                                                  
$ pipenv shell                                                                   
Loading .env environment variables...                                                                            
Launching subshell in virtual environmentâ€¦                                                                       
$  . /vagrant/.venv/bin/activate                                                 
(vagrant) $ python manage.py check                                                
Traceback (most recent call last):                                                                               
  File "manage.py", line 8, in <module>                                                                          
    from django.core.management import execute_from_command_line                                                 
ModuleNotFoundError: No module named 'django'                                                                    
                                                                                                                 
The above exception was the direct cause of the following exception:                                             
                                                                                                                 
Traceback (most recent call last):                                                                               
  File "manage.py", line 14, in <module>                                                                         
    ) from exc                                                                                                   
ImportError: Couldn't import Django. Are you sure it's installed and available on your PYTHONPATH environment var
iable? Did you forget to activate a virtual environment?                                                         
Steps to replicate
$ python3 -m pip install --user pipenv
$ cd myproject
$ pipenv install django
$ pipenv shell 
(myproject-gKDsaKU3) $ python manage.py check
$ pipenv --support