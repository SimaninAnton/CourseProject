francyi commented on 9 Jul 2018
Issue description
'pipenv install' fails since version 2018.6.25 if the Pipfile contains a package reference to a Gitlab repository, like e.g.: my_package = {git = "git@my.domain.com:gitlab_username/my_package.git", ref = "master"}
Here, my.domain.com is a replacement for the properly resolving domain.
Downgrading to 2018.5.18 resolves the issue.
Expected result
It should install 'my_package'.
Actual result
Obtaining my_package from git+ssh://git@my.domain.com:gitlab_username/my_package.git@856f8ff9146dc7fbfc1ae3595203a9f3af8cf023#egg=my_package
  Cloning ssh://git@my.domain.com:gitlab_username/my_package.git (to revision 856f8ff9146dc7fbfc1ae3595203a9f3af8cf023) to /home/me/.local/share/virtualenvs/my_project-WRKZN-2y/src/my_package
ssh: Could not resolve hostname my.domain.com:gitlab_username: Name or service not known
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

Command "git clone -q ssh://git@my.domain.com:gitlab_username/my_package.git /home/me/.local/share/virtualenvs/my_project-WRKZN-2y/src/my_package" failed with error code 128 in None
pipenv seems to append ':gitlab_username' to the domain name and as a result fails to resolve the hostname.
Steps to replicate
Replace git@my.domain.com:gitlab_username/my_package.git correspondingly and run pipenv install
[[source]]
url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"

[requires]
python_version = "2.7"

[dev-packages]

[packages]
my_package = {ref = "v1.0.0", git = "git@my.domain.com:gitlab_username/my_package.git", editable = true}
$ pipenv --support