AlexP11223 commented on 23 Aug 2019
I was trying to install pipenv from Git as suggested in #3902 (looks like I also need to add #egg=pipenv, otherwise it gives error about this) on PopOS (Ubuntu) 19.04: pip3 install --user -e git+https://github.com/pypa/pipenv.git@master#egg=pipenv
but got this error:
alex@pop-os:~$ pip3 install --user -e git+https://github.com/pypa/pipenv.git@master#egg=pipenv
Obtaining pipenv from git+https://github.com/pypa/pipenv.git@master#egg=pipenv
  Cloning https://github.com/pypa/pipenv.git (to revision master) to ./src/pipenv 
  Installing build dependencies ... done
Requirement already satisfied: pip>=18.0 in /usr/lib/python3/dist-packages (from pipenv) (18.1)
Requirement already satisfied: certifi in /usr/lib/python3/dist-packages (from pipenv) (2018.8.24)
Requirement already satisfied: setuptools>=36.2.1 in /usr/lib/python3/dist-packages (from pipenv) (40.8.0)
Requirement already satisfied: virtualenv-clone>=0.2.5 in /usr/lib/python3/dist-packages (from pipenv) (0.3.0)
Requirement already satisfied: virtualenv in /usr/lib/python3/dist-packages (from pipenv) (15.1.0)
Installing collected packages: pipenv
  Running setup.py develop for pipenv
    Complete output from command /usr/bin/python3 -c "import setuptools, tokenize;__file__='/home/alex/src/pipenv/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))" develop --no-deps --user --prefix=:
    usage: -c [global_opts] cmd1 [cmd1_opts] [cmd2 [cmd2_opts] ...]
       or: -c --help [cmd1 cmd2 ...]
       or: -c --help-commands
       or: -c cmd --help
    
    error: option --user not recognized
    
    ----------------------------------------
Command "/usr/bin/python3 -c "import setuptools, tokenize;__file__='/home/alex/src/pipenv/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\r\n', '\n');f.close();exec(compile(code, __file__, 'exec'))" develop --no-deps --user --prefix=" failed with error code 1 in /home/alex/src/pipenv/
(calling without --user is the same, it complains about some other command inside)
`