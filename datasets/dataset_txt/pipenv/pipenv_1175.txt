jambonrose commented on 19 Apr 2018 •
edited
This is not an exact duplicate of #2019, but the two are certainly related.
Help Output:
$ python -m pipenv.help output
Expected result
I expect to be able to install a pre-release like I would a full-release package if there are no full-releases for a package, or else to receive a note about the --pre flag.
Actual result
When I attempt to install a dependency currently in pre-release (black in the following instances) with pipenv and a >= pin, I'm told it's unable to resolve the dependency, and that the error exists in the subgraph. However, if I use a == pin, then everything works. This behavior is inconsistent and confusing, and the error message is misleading. I note that I can use the >= pin if I specify the --pre tag.
$ # the following work
$ pipenv install black --pre
$ pipenv install 'black>=18.4a0' --pre # installs 18.4a2
$ pipenv install 'black==18.4a0'

$ # the following do not; error output below
$ pipenv install black
$ pipenv install 'black>=18.4a0'
The error message (shown in the output below) did nothing to make it clear that the --pre flag is missing from the last two commands. What's more, if the --pre flag is not required with ==, then I would not expect it to be required with the >= pin.
Optimally, pipenv should have installed the package with a warning, or else asked me whether I wanted to install a pre-release, rather than error cryptically as it did. To clarify, if my options are all pre-releases, I think pipenv should succeed installation, either with a warning or after a prompt. At the very least, a better error message should be provided.
I imagine the --pre flag as being relevant only in the context of packages that have full-releases and pre-releases. My perspective is that if I have two choices for the latest, such as 1.3.0 and 2.0a1, I think pipenv should ask which I want. However I understand that this is a feature change and changes how --pre operates. Given the existing behavior but also that people new to pipenv are unaware of the --pre flag, it would be nice to print a message about the flag if an distribution like 2.0a1 is available but the --pre flag has not been specified.
Imagined behavior:
$ pipenv install black # command should succeed ...
Warning! pipenv installed pre-release 18.4a2.

$ pipenv install black # ... or else ask for correct behavior
black does not have a full-release. Install pre-release 18.4a2? y
Installed black 18.4a2

$ pipenv install imagined-package # add warning text about --pre due to alpha version
Warning! imagined-package pre-release 2.0a1 is available. Stable version 1.3.0 was installed. Please use the --pre flag with pipenv if you meant to install version 2.0a1.

$ pipenv install imagined-package --pre # no changed behavior
Installed pre-release 2.0a1
Steps to replicate
Setup:
$ python -V
Python 3.6.4

$ pip -V
pip 10.0.0 from /Users/andrew/.virtualenvs/static-site-test/lib/python3.6/site-packages/pip (python 3.6)

$ rm -r ~/Library/Caches/pip

$ rm -r ~/Library/Caches/pipenv

$ rm -r Pipfile*

$ pip freeze # nothing installed

$ pip install pipenv
Collecting pipenv
  Downloading https://files.pythonhosted.org/packages/e5/fd/740a41c68c38262265d73191fb686f38d26c4ea1ea6080a65b2b626bedc7/pipenv-11.10.0-py3-none-any.whl (5.6MB)
    100% |████████████████████████████████| 5.6MB 403kB/s 
Collecting virtualenv (from pipenv)
  Downloading https://files.pythonhosted.org/packages/ed/ea/e20b5cbebf45d3096e8138ab74eda139595d827677f38e9dd543e6015bdf/virtualenv-15.2.0-py2.py3-none-any.whl (2.6MB)
    100% |████████████████████████████████| 2.6MB 1.3MB/s 
Requirement already satisfied: setuptools>=36.2.1 in /Users/andrew/.virtualenvs/static-site-test/lib/python3.6/site-packages (from pipenv) (39.0.1)
Collecting virtualenv-clone>=0.2.5 (from pipenv)
  Downloading https://files.pythonhosted.org/packages/6d/c2/dccb5ccf599e0c5d1eea6acbd058af7a71384f9740179db67a9182a24798/virtualenv_clone-0.3.0-py2.py3-none-any.whl
Collecting certifi (from pipenv)
  Downloading https://files.pythonhosted.org/packages/7c/e6/92ad559b7192d846975fc916b65f667c7b8c3a32bea7372340bfe9a15fa5/certifi-2018.4.16-py2.py3-none-any.whl (150kB)
    100% |████████████████████████████████| 153kB 1.7MB/s 
Requirement already satisfied: pip>=9.0.1 in /Users/andrew/.virtualenvs/static-site-test/lib/python3.6/site-packages (from pipenv) (10.0.0)
Installing collected packages: virtualenv, virtualenv-clone, certifi, pipenv
Successfully installed certifi-2018.4.16 pipenv-11.10.0 virtualenv-15.2.0 virtualenv-clone-0.3.0
I try to install black as I would with pip.
$ pipenv install black
Courtesy Notice: Pipenv found itself running within a virtual environment, so it will automatically use that environment, instead of creating its own for any project. You can set PIPENV_IGNORE_VIRTUALENVS=1 to force pipenv to ignore that environment and create its own instead.
Creating a Pipfile for this project…
Installing black…
Collecting black
  Downloading https://files.pythonhosted.org/packages/e1/e6/dee648e0b1c7997eafa14e51911eeacbed026b2611605bd34d0f824ab6d7/black-18.4a2-py36-none-any.whl (64kB)
Collecting click (from black)
  Downloading https://files.pythonhosted.org/packages/34/c1/8806f99713ddb993c5366c362b2f908f18269f8d792aff1abfd700775a77/click-6.7-py2.py3-none-any.whl (71kB)
Collecting attrs>=17.4.0 (from black)
  Downloading https://files.pythonhosted.org/packages/b5/60/4e178c1e790fd60f1229a9b3cb2f8bc2f4cc6ff2c8838054c142c70b5adc/attrs-17.4.0-py2.py3-none-any.whl
Installing collected packages: click, attrs, black
Successfully installed attrs-17.4.0 black-18.4a2 click-6.7

Adding black to Pipfile's [packages]…
Pipfile.lock not found, creating…
Locking [dev-packages] dependencies…
Locking [packages] dependencies…

Warning: Your dependencies could not be resolved. You likely have a mismatch in your sub-dependencies.
  You can use $ pipenv install --skip-lock to bypass this mechanism, then run $ pipenv graph to inspect the situation.
Could not find a version that matches black
Tried: 18.3a0, 18.3a0, 18.3a1, 18.3a1, 18.3a2, 18.3a2, 18.3a3, 18.3a3, 18.3a4, 18.3a4, 18.4a0, 18.4a0, 18.4a1, 18.4a1, 18.4a2, 18.4a2
The error message is incredibly misleading, and is identical if I instead run pipenv install 'black>=18.4a0'.
2