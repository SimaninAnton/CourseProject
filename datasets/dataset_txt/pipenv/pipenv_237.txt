flaviut commented on 15 Mar 2019
Issue description
When I try to install a prerelease of a package, I actually get the current release. My pipfile specifies the prerelease, and so does the Pipfile.lock.
Expected result
I expect to get the prerelease.
Actual result
I get the older stable release
Steps to replicate
$ pipenv install --pre
Creating a virtualenv for this project‚Ä¶
Pipfile: /home/user/dev/inventory/Pipfile
Using /usr/bin/python (3.7.2) to create virtualenv‚Ä¶
‚†è Creating virtual environment...Already using interpreter /usr/bin/python
Using base prefix '/usr'
New python executable in /home/user/etc/.virtualenvs/inventory-HrJj1m_g/bin/python
Installing setuptools, pip, wheel...done.

‚úî Successfully created virtual environment! 
Virtualenv location: /home/user/etc/.virtualenvs/inventory-HrJj1m_g
Installing dependencies from Pipfile.lock (cfc8b3)‚Ä¶
  üêç   ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ‚ñâ 24/24 ‚Äî 00:01:51
To activate this project's virtualenv, run pipenv shell.
Alternatively, run a command inside the virtualenv with pipenv run.
$ grep VERSION /home/user/etc/.virtualenvs/inventory-HrJj1m_g/lib/python3.7/site-packages/django/__init__.py
VERSION = (2, 1, 7, 'final', 0)
I've tried the each of the items in https://pipenv.readthedocs.io/en/latest/diagnose/#your-dependencies-could-not-be-resolved with no luck.
$ pipenv --support