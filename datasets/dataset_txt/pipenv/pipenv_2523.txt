wybiral commented on 24 Jan 2017
pipenv install on Windows (Python 3.5.2) creates .venv in the parent directory instead of the directory that Pipfile is located (the project / current directory). For example...
On Windows I get:
C:\Users\davy\Code\pipenv-test>mkdir example

C:\Users\davy\Code\pipenv-test>ls -a
.  ..  example

C:\Users\davy\Code\pipenv-test>cd example

C:\Users\davy\Code\pipenv-test\example>pipenv install
Creating a Pipfile for this project...
Creating a virtualenv for this project...
Using base prefix 'c:\\program files (x86)\\python35-32'
New python executable in C:\Users\davy\Code\pipenv-test\.venv\Scripts\python.exe
Installing setuptools, pip, wheel...done.

Virtualenv location: C:\Users\davy\Code\pipenv-test\.venv
No package provided, installing all dependencies.
Pipfile found at C:\Users\davy\Code\pipenv-test\example/Pipfile. Considering this to be the project home.
Installing dependencies from Pipfile...
Pipfile.lock not found, creating...
Assuring all dependencies from Pipfile are installed...
Locking [dev-packages] dependencies...
Locking [packages] dependencies...
Note: your project now has only default [packages] installed.
To keep [dev-packages] next time, run: $ pipenv lock --dev
To activate this project's virtualenv, run the following:
 $ pipenv shell

C:\Users\davy\Code\pipenv-test\example>ls -a
.  ..  Pipfile  Pipfile.lock

C:\Users\davy\Code\pipenv-test\example>cd ..

C:\Users\davy\Code\pipenv-test>ls -a
.  ..  .venv  example
On Ubuntu I get:
davy@dev:~/Code/pipenv-test$ mkdir example

davy@dev:~/Code/pipenv-test$ ls -a
.  ..  example

davy@dev:~/Code/pipenv-test$ cd example

davy@dev:~/Code/pipenv-test/example$ pipenv install
Creating a Pipfile for this project...
Creating a virtualenv for this project...
New python executable in /home/davy/Code/pipenv-test/example/.venv/bin/python
Installing setuptools, pip, wheel...done.

Virtualenv location: /home/davy/Code/pipenv-test/example/.venv
No package provided, installing all dependencies.
Pipfile found at /home/davy/Code/pipenv-test/example/Pipfile. Considering this to be the project home.
Installing dependencies from Pipfile...
Pipfile.lock not found, creating...
Assuring all dependencies from Pipfile are installed...
Locking [dev-packages] dependencies...
Locking [packages] dependencies...
Note: your project now has only default [packages] installed.
To keep [dev-packages] next time, run: $ pipenv lock --dev
To activate this project's virtualenv, run the following:
 $ pipenv shell

davy@dev:~/Code/pipenv-test/example$ ls -a
.  ..  Pipfile  Pipfile.lock  .venv

davy@dev:~/Code/pipenv-test/example$ cd ..

davy@dev:~/Code/pipenv-test$ ls -a
.  ..  example