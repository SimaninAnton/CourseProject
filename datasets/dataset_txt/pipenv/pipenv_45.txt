kraulin commented on 8 Oct 2019
Issue description
I've successfully locked my Apache instance down with SSL and required Client Certs to gain access to my private package repository.
I've generated *.p12 files to load into browsers that respond to the challenge from Apache and let the user in.
I've used openssl to generate *.PEM files directly from those p12 files.
When I pass those generated PEM files into pip's command line, I get no joy.
With Client Verification disabled and --trusted-host localhost in the command line, all of this works as intended. (with the noted exception of not being the slightest bit secure)
What I'm interested in is this, do guide lines exist for creating PEM certs that are compatible with pip
Expected result
I expect the package repository to be accessible and for pip to install the requested package at the version level I indicate.
Steps to replicate
I'm using Virtual Box, Ubuntu 18.04, Apache2, openssl 1.1.1, Python 3.6.8, and pip 19.2.3
I've followed many tutorials and learned much about PKI and SSL. This is the tutorial that I think has gotten me closest to my goal.
https://www.makethenmakeinstall.com/2014/05/ssl-client-authentication-step-by-step/
PIP Output
pip --verbose --client-cert ~/my_client_cert/take4.pem install --index-url https://localhost/simple my-python-widget==1.50
Created temporary directory: /tmp/pip-ephem-wheel-cache-r2ome3xp
Created temporary directory: /tmp/pip-req-tracker-y5d7m1sk
Created requirements tracker '/tmp/pip-req-tracker-y5d7m1sk'
Created temporary directory: /tmp/pip-instalal-hsht892c
Looking in indexes: https://localhost/simple
Collecting my-python-widget==1.50
1 location(s) to search for versions of my-python-widget:
https://localhost/simple/my-python-widget/
Getting page https://localhost/simple/my-python-widget/
Found index url https://localhost/simple
Looking up "https://localhost/simple/my-python-widget/" in the cache
Request header has "max_age" as 0, cache bypassed
Starting new HTTPS connection (1): localhost:443
Enter PEM pass phrase:
Incremented Retry for (url='/simple/my-python-widget/'): Retry(total=4, connect=None, read=None, redirect=None, status=None)
WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /simple/my-python-widget/
Starting new HTTPS connection (2): localhost:443
Enter PEM pass phrase:
Incremented Retry for (url='/simple/my-python-widget/'): Retry(total=3, connect=None, read=None, redirect=None, status=None)
WARNING: Retrying (Retry(total=3, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /simple/my-python-widget/
Starting new HTTPS connection (3): localhost:443
Enter PEM pass phrase:
Incremented Retry for (url='/simple/my-python-widget/'): Retry(total=2, connect=None, read=None, redirect=None, status=None)
WARNING: Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /simple/my-python-widget/
Starting new HTTPS connection (4): localhost:443
Enter PEM pass phrase:
Incremented Retry for (url='/simple/my-python-widget/'): Retry(total=1, connect=None, read=None, redirect=None, status=None)
WARNING: Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /simple/my-python-widget/
Starting new HTTPS connection (5): localhost:443
Enter PEM pass phrase:
Incremented Retry for (url='/simple/my-python-widget/'): Retry(total=0, connect=None, read=None, redirect=None, status=None)
WARNING: Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)': /simple/my-python-widget/
Starting new HTTPS connection (6): localhost:443
Enter PEM pass phrase:
Could not fetch URL https://localhost/simple/my-python-widget/: There was a problem confirming the ssl certificate: HTTPSConnectionPool(host='localhost', port=443): Max retries exceeded with url: /simple/my-python-widget/ (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:852)'),)) - skipping
Given no hashes to check 0 links for project 'my-python-widget': discarding no candidates
ERROR: Could not find a version that satisfies the requirement my-python-widget==1.50 (from versions: none)
Cleaning up...
Removed build tracker '/tmp/pip-req-tracker-y5d7m1sk'
ERROR: No matching distribution found for my-python-widget==1.50
Exception information:
Traceback (most recent call last):
File "/home/me/venvs/testing/lib/python3.6/site-packages/pip/_internal/cli/base_command.py", line 188, in main
status = self.run(options, args)
File "/home/me/venvs/testing/lib/python3.6/site-packages/pip/_internal/commands/install.py", line 345, in run
resolver.resolve(requirement_set)
File "/home/me/venvs/testing/lib/python3.6/site-packages/pip/_internal/legacy_resolve.py", line 196, in resolve
self._resolve_one(requirement_set, req)
File "/home/me/venvs/testing/lib/python3.6/site-packages/pip/_internal/legacy_resolve.py", line 359, in _resolve_one
abstract_dist = self._get_abstract_dist_for(req_to_install)
File "/home/me/venvs/testing/lib/python3.6/site-packages/pip/_internal/legacy_resolve.py", line 307, in _get_abstract_dist_for
self.require_hashes
File "/home/me/venvs/testing/lib/python3.6/site-packages/pip/_internal/operations/prepare.py", line 134, in prepare_linked_requirement
req.populate_link(finder, upgrade_allowed, require_hashes)
File "/home/me/venvs/testing/lib/python3.6/site-packages/pip/_internal/req/req_install.py", line 211, in populate_link
self.link = finder.find_requirement(self, upgrade)
File "/home/me/venvs/testing/lib/python3.6/site-packages/pip/_internal/index.py", line 1228, in find_requirement
'No matching distribution found for %s' % req
pip._internal.exceptions.DistributionNotFound: No matching distribution found for bvti_acs_client==1.50
(testing) me@shop:~/my_client_cert$