tony commented on 16 Nov 2017 â€¢
edited
First, thank you for the great software @kennethreitz
I have an out of date pytest (was at 3.2.3, and --dry-run wouldn't report 3.2.5)
pipenv, version 8.3.2
Python 3.6.3
diff --git a/Pipfile b/Pipfile
index a7761214..f9f35a30 100644
--- a/Pipfile
+++ b/Pipfile
@@ -15,9 +15,10 @@ collectfast = "==0.5.2"
 python-memcached = "==1.58"
 pytest-django = "==3.1.2"
 pytest-factoryboy = "==1.3.1"
-pytest = "==3.2.3"
+pytest = "==3.2.5"
I had to update manually via pipenv install --dev pytest==3.2.5
I had to do that by hand because I saw another project I had notified me of it. I've been running pipenv update --dry-run --dev on a near daily basis, and it seems non of my main or dev packages need an update.
For instance: I have sqlalchemy 1.1.14 in Pipfile, but I've never see any mention of 1.1.15 being available
Prior to my conversion to pipenv, I used https://github.com/sesh/piprot to detect package updates. Unfortunately, I haven't yet been able to replace it pipenv's way of detecting outdated packages. (Unless I'm getting something wrong, which also happens)
related to request for outdated command #469
I don't have enough information to substantiate or isolate at this point. Is anyone else experiencing issues with the correctness of pipenv update --dry-run and pipenv update --dry-run --dev?