junaruga commented on 20 Apr 2017
I saw pipenv is using bundled 3rd party (vendor)'s package internally.
$ tar tzvf pipenv-3.5.6.tar.gz | grep vendor | head
drwxr-xr-x kennethreitz/staff     0 2017-04-03 14:12 pipenv-3.5.6/pipenv/vendor/
...
drwxr-xr-x kennethreitz/staff     0 2017-04-03 14:12 pipenv-3.5.6/pipenv/vendor/pexpect/
...
https://github.com/kennethreitz/pipenv/blob/v3.5.6/pipenv/__init__.py#L10
Why are we managing those dependency packages instead of setting the dependency packages in setup.py install_requires?
The reason why I am asking this question is that this situation is painful to make a RPM package of pipenv for Linux distributions.
There is a apt-get format package for Debian, Ubuntu and etc.
There is a RPM package for RPM base distribution such as Fedora Project, CentOS, and etc.
There is a brew package for Mac.
Below is a document for Fedora Project for that, as I am in Fedora Project.
I think that other Linux distributions or Mac must have similar rules for the packaging.
https://fedoraproject.org/wiki/Bundled_Libraries
These are some of the reasons why it's painful for us to have bundled libraries in the distribution.
Is it possible to split vendor's packages from pipenv?
Thanks.