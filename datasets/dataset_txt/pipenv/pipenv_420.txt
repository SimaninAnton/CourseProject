Contributor
greysteil commented on 22 Nov 2018 •
edited
Issue description
Calling pipenv lock on a Pipfile that specifies extras that don't exist results in a TypeError (using ac05a48).
Expected result
Previously, Pipenv silently ignored extras that didn't exist.
Actual result
Locking [packages] dependencies…
✘ Locking Failed! 
Traceback (most recent call last):
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/resolver.py", line 126, in <module>
    main()
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/resolver.py", line 119, in main
    parsed.requirements_dir, parsed.packages)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/resolver.py", line 85, in _main
    requirements_dir=requirements_dir,
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/resolver.py", line 69, in resolve
    req_dir=requirements_dir
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/utils.py", line 707, in resolve_deps
    req_dir=req_dir,
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/utils.py", line 475, in actually_resolve_deps
    deps, index_lookup, markers_lookup, project, sources,
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/utils.py", line 237, in get_resolver_metadata
    req = Requirement.from_line(dep)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/requirements.py", line 1092, in from_line
    r = FileRequirement.from_line(line_with_prefix, extras=extras)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/requirements.py", line 548, in from_line
    return cls.create(**arg_dict)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/requirements.py", line 477, in create
    setup_info = SetupInfo.from_ireq(ireq)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/setup_info.py", line 431, in from_ireq
    created.get_info()
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/setup_info.py", line 349, in get_info
    self.get_egg_metadata()
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/setup_info.py", line 325, in get_egg_metadata
    extras = ensure_reqs(extras)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/setup_info.py", line 74, in ensure_reqs
    for req in reqs:
TypeError: 'NoneType' object is not iterable
File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/resolver.py", line 126, in <module>
    main()
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/resolver.py", line 119, in main
    parsed.requirements_dir, parsed.packages)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/resolver.py", line 85, in _main
    requirements_dir=requirements_dir,
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/resolver.py", line 69, in resolve
    req_dir=requirements_dir
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/utils.py", line 707, in resolve_deps
    req_dir=req_dir,
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/utils.py", line 475, in actually_resolve_deps
    deps, index_lookup, markers_lookup, project, sources,
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/utils.py", line 237, in get_resolver_metadata
    req = Requirement.from_line(dep)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/requirements.py", line 1092, in from_line
    r = FileRequirement.from_line(line_with_prefix, extras=extras)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/requirements.py", line 548, in from_line
    return cls.create(**arg_dict)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/requirements.py", line 477, in create
    setup_info = SetupInfo.from_ireq(ireq)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/setup_info.py", line 431, in from_ireq
    created.get_info()
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/setup_info.py", line 349, in get_info
    self.get_egg_metadata()
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/setup_info.py", line 325, in get_egg_metadata
    extras = ensure_reqs(extras)
  File "/Users/greysteil/code/dependabot-core/helpers/python/src/pipenv/pipenv/vendor/requirementslib/models/setup_info.py", line 74, in ensure_reqs
    for req in reqs:
TypeError: 'NoneType' object is not iterable
Steps to replicate
pyenv exec pipenv lock --verbose on the following
Pipfile:
[[source]]
url = "https://pypi.python.org/simple"
verify_ssl = true

[dev-packages]
pytest = "==3.4.0"

[packages]
requests = "==2.18.0"
"e1839a8" = {path = ".", editable = true, extras=["socks"]}
setup.py
from setuptools import setup

setup(
  name="sanitized-package",
  version="0.0.1",
  install_requires=["raven==5.32.0"],
  extras_require={
    'PDF': ["flask"]
  }
)
$ pipenv --support