Contributor
gsemet commented on 4 Dec 2017
pipenv, version 8.3.2
Use Case:
python project A uses submodules to include a submodule B in a directory deps/B
dependency is registered in Pipfile with: pipenv install -e ./deps/B. Result is:
B = {path = "./deps/B", editable = true}
Pipfile.lock is correctly updated to:
    "B": {
        "editable": true,
        "path": "./deps/B"
    },
So, it works great after this, the lock file is fine, the environment is fine.
However, next time pipenv install is executed (to install a new package), the Pipfile.lock is modified to:
    "B": {
        "editable": true,
        "git": "git@myserver:path/to/B.git@0c8fa9152a794312a1ca20a2b709d5043c327247",
        "subdirectory": "../../../deps/B"
    },
For information, this dependency uses relative URL from gitlab, but this should not impact pipenv. It's like when it generate the lock file the second time, it execute a different code where it discovers it is a git directory and try to add the url in the lock file. My recommendation is to provide a way for user to disable this "magic" git-awareness discovery and stick to what user entered when he did a pipenv install ...
Workaround: have to pipenv --rm && pipenv install --dev after each manual pipenv install mynewpackage
Thanks