ahussain3 commented on 23 May 2018 â€¢
edited
I have a dependency which I maintain myself, and installed with pip install -e.
The generated Pipfile shows the dependency and correctly points to https://github.com..., however Pipfile.lock references the Pypi version of the dependency rather than the one I want.
I believe this is because there is another package which depends on the Pypi version of the managed dependency, and pipenv is getting mixed up.
Expected result
If I have a Pipfile like this:
[packages]
graphql-core = {git = "https://github.com/xxxxxxx/graphql-core.git", ref = "6358ad32479"}
then I can run pipenv lock to generate a Pipfile.lock which contains:
"default": {
        "graphql-core": {
            "git": "https://github.com/xxxxxxx/graphql-core.git",
            "ref": "6358ad32479"
        },
}
Actual result
However, if I have another dependency which also lists graphql-core as one of its dependencies, and only specifies a version number, e.g:
[packages]
graphene = "<2.1,>=2.0" # has graphql-core="==2.0" as one of its dependencies
graphql-core = {git = "https://github.com/xxxxxxx/graphql-core.git", ref = "6358ad32479"}
then my Pipfile.lock will look like this - i.e. it has forgotten that this should be an "editable" dependency:
"default": {
         "graphql-core": {
             "hashes": [
                 "sha256:4830699be53f9154273fa15726fc8b0c90bc22bbb8fc7c932586503b3cb9330e",
                 "sha256:539355351343dede3ecb771e0d273a1b72405cb6d64f45bb8f92ecc4d7109af0"
             ],
             "version": "==2.0"
         }.
         "graphene": { ... }
}