pdilyard commented on 13 Oct 2018 â€¢
edited
Issue description
One of our projects has a dependency on a private git repo. The dependency is in a subdirectory of that repo, which is a monorepo. The dependency is specified in the Pipfile like this:
mypackage = {editable = true, subdirectory = "mypackage", git = "ssh://git@github.com/myorg/myrepo.git"}
Expected result
The repo should be cloned, and pipenv should execute the setup.py in the subdirectory of the repo. I have confirmed this is the case in the following versions of pipenv:
2018.05.18
2018.7.1
Actual result
Pipenv tries to execute python setup.py ... in the root of the dependency, rather than in the subdirectory as expected. Installing the same dependency using the latest version of pip directly still works. I verified that this issue was introduced in pipenv==2018.10.9.
Steps to replicate
Create a git repo with a Python package in a subdirectory of the repo. The subdirectory should contain a setup.py, but the root of the repo should not.
Create a second Python package with a dependency on the package from step 1, as per the above Pipfile config.
Run pipenv install and note that the installation of the dependency fails because pipenv looks for setup.py in the root of the cloned repo, rather than in the subdirectory.