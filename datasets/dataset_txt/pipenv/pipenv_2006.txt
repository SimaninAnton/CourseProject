Contributor
WhyNotHugo commented on 1 Oct 2017
If a dependency depends on a beta version of another dependency, and that dependency is also required for my project, dependency resolution fails.
Sorry, that's probably very hard to read, assume this:
myapp depends on mylib
mylib depends on anotherlib >=1.0b1
run pipenv install anotherlib (unpinned).
It fails to dependency resolution; although it's clear that 1.0b1 should be used in this case.
If you'd like to create a real example to try this out:
$ mkdir test-123
$ cd test-123
$ pipenv install django-afip
$ pipenv install pybarcode
Could not find a version that matches pybarcode==0.7,>=0.8b1                                   
Tried: 0.5.1, 0.6, 0.7, 0.8b1                  
The reason that I'm mentioning/installing the transitive dependency is because it's explicitly used in my project -- I don't include transitive dependencies in general, but since it's explicitly being used, it makes sense to do so.
Note that the same scenario can also occur is two of my dependencies depend on a same third dependency, one being pre-relase:
mylib1 depends on otherlib>=1.0b1
mylib2 depends on otherlib