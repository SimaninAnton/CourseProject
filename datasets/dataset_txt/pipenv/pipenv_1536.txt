sametmax commented on 23 Feb 2018
Be sure to check the existing issues, both open and closed.
If you are in a directory not associated with a virtualenv, pipenv install will create it. While it's a great feature, I noticed during numerous training I gave that it bites the beginners more often than not:
they often pipenv install from the wrong directory by mistake
they will install the wrong python version
I'm suggesting that if pipenv is run in a directory not associated with a virtualenv, then it should not immediatly proceed. It should pause, and prompt the user with something like:
You are currently in:
/stuff/thing
But this directory is not associated with a virtualenv yet. What do you want to do:
[1] Create a virtualenv with Python x.w
[2] Create a virtualenv with Python x.x
[3] Create a virtualenv with Python y.y
[4] Create a virtualenv with Python y.x
[5] Abort.
This would have several benefits:
Limit creation by mistake in the wrong directory.
Allow the user to know that there are several Python executables available and that he/she can choose.
Of course, this prompt should be disabled with an option such as --no-prompt for automation.