jmichalicek commented on 18 Oct 2017 •
edited
Be sure to check the existing issues, both open and closed.
Using Python 3 as my main python and pipenv to create and manage a Python 2.7 project, dependencies which use sys.version_info in their setup.py appear to be picking up the wrong version.
I have seen this with two different packages today.
When installing social-auth-app-django and python-social-core the python-social-core app uses sys.version_info to determine whether to install python-openid or python3-openid.
Weasyprint uses the same technique to determine which version of CairSVG to install and consistently takes the python 3 path when installing into a Python 2 environment.
Describe you environment
OS: OS X Sierra 10.12.6
Python and pipenv info:
➜ t python -V
Python 3.6.3
➜ t pipenv --version
pipenv, version 8.2.7
➜ t pipenv run python -V
Python 2.7.12
Expected result
When installing social-auth-app-django and python-social-core the python-social-core app uses sys.version_info to determine whether to install python-openid or python3-openid. With the environment above I should get python-openid in my Pipfile.lock
Actual result
I am actually getting python3-openid in my Pipfile.lock. Here is various pipenv and pip output after installation.
social-auth-app-django results
pipenv graph outout:
python3-openid==3.1.0
  - defusedxml [required: <=0.4.1, installed: 0.5.0]
social-auth-app-django==1.2.0
  - six [required: Any, installed: 1.11.0]
  - social-auth-core [required: >=1.2.0, installed: 1.4.0]
    - oauthlib [required: >=1.0.3, installed: 2.0.4]
    - PyJWT [required: >=1.4.0, installed: 1.5.3]
    - python-openid [required: >=2.2.5, installed: ?]
    - requests [required: >=2.9.1, installed: 2.18.4]
      - certifi [required: >=2017.4.17, installed: 2017.7.27.1]
      - chardet [required: >=3.0.2,<3.1.0, installed: 3.0.4]
      - idna [required: >=2.5,<2.7, installed: 2.6]
      - urllib3 [required: <1.23,>=1.21.1, installed: 1.22]
    - requests-oauthlib [required: >=0.6.1, installed: 0.8.0]
      - oauthlib [required: >=0.6.2, installed: 2.0.4]
      - requests [required: >=2.0.0, installed: 2.18.4]
        - certifi [required: >=2017.4.17, installed: 2017.7.27.1]
        - chardet [required: >=3.0.2,<3.1.0, installed: 3.0.4]
        - idna [required: >=2.5,<2.7, installed: 2.6]
        - urllib3 [required: <1.23,>=1.21.1, installed: 1.22]
    - six [required: >=1.10.0, installed: 1.11.0]
Pipfile.lock includes the following:
        "python3-openid": {
            "hashes": [
                "sha256:0086da6b6ef3161cfe50fb1ee5cceaf2cda1700019fda03c2c5c440ca6abe4fa",
                "sha256:628d365d687e12da12d02c6691170f4451db28d6d68d050007e4a40065868502"
            ],
            "version": "==3.1.0"
        },
pip freeze from pipenv shell:
➜  t pipenv shell
Spawning environment shell (/bin/zsh). Use 'exit' to leave.
source /Users/justin/.local/share/virtualenvs/t-bYCa1uGv/bin/activate
➜  t source /Users/justin/.local/share/virtualenvs/t-bYCa1uGv/bin/activate
(t-bYCa1uGv) ➜  t pip freeze |grep -i openid
python3-openid==3.1.0
(t-bYCa1uGv) ➜  t python --version
Python 2.7.12
weasyprint results
➜  t pipenv install
Pipfile.lock not found, creating…
Locking [dev-packages] dependencies…
Locking [packages] dependencies…
Traceback (most recent call last):
  File "/Users/justin/.pyenv/versions/3.6.3/bin/pipenv", line 11, in <module>
    load_entry_point('pipenv==8.2.7', 'console_scripts', 'pipenv')()
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/vendor/click/core.py", line 722, in __call__
    return self.main(*args, **kwargs)
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/vendor/click/core.py", line 697, in main
    rv = self.invoke(ctx)
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/vendor/click/core.py", line 1066, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/vendor/click/core.py", line 895, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/vendor/click/core.py", line 535, in invoke
    return callback(*args, **kwargs)
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/cli.py", line 1780, in install
    do_init(dev=dev, allow_global=system, ignore_pipfile=ignore_pipfile, system=system, skip_lock=skip_lock, verbose=verbose, concurrent=concurrent, deploy=deploy)
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/cli.py", line 1291, in do_init
    do_lock(system=system)
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/cli.py", line 1082, in do_lock
    pre=pre
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/utils.py", line 452, in resolve_deps
    resolved_tree.update(resolver.resolve(max_rounds=PIPENV_MAX_ROUNDS))
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/patched/piptools/resolver.py", line 102, in resolve
    has_changed, best_matches = self._resolve_one_round()
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/patched/piptools/resolver.py", line 200, in _resolve_one_round
    for dep in self._iter_dependencies(best_match):
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/patched/piptools/resolver.py", line 296, in _iter_dependencies
    dependencies = self.repository.get_dependencies(ireq)
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/patched/piptools/repositories/pypi.py", line 153, in get_dependencies
    result = reqset._prepare_file(self.finder, ireq)
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/patched/pip/req/req_set.py", line 671, in _prepare_file
    check_dist_requires_python(dist)
  File "/Users/justin/.pyenv/versions/3.6.3/lib/python3.6/site-packages/pipenv/patched/pip/utils/packaging.py", line 56, in check_dist_requires_python
    os.environ['PIP_PYTHON_VERSION']
pip.exceptions.UnsupportedPythonVersion: CairoSVG requires Python '>=3.4' but the running Python is 2.7.12
➜  t pipenv run python --version
Python 2.7.12
➜  t python --version
Python 3.6.3
Steps to replicate
install pipenv under python 3
make directory for package and cd into it
pipenv install --python 2.7.12
pipenv install social-auth-app-django
social-auth-app-django Pipfile used to test:
[[source]]

url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"


[packages]

social-auth-app-django = "*"


[dev-packages]



[requires]

python_version = "2.7"
weasyprint Pipfile
[[source]]

url = "https://pypi.python.org/simple"
verify_ssl = true
name = "pypi"


[packages]

weasyprint = "*"


[dev-packages]



[requires]

python_version = "2.7"
Here are links to the actual code having problems:
social-core: https://github.com/python-social-auth/social-core/blob/19382028ef1af08782130f5aeb90ef591955f2ba/setup.py#L46
weasyprint: https://github.com/Kozea/WeasyPrint/blob/master/setup.py#L42