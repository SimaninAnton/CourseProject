tuukkamustonen commented on 19 Oct 2017 â€¢
edited
To install a set of pinned packages in remote systems, there is:
pipenv install --system  # won't install dev dependencies
However, this requires both Pipfile and Pipfile.lock to be present, and also pipenv to be installed in the target system. It's way more inconvenient than just being able to (maybe first copy package wheel into remote system and) say pip install <mypackage> (and letting pip to pull in the pinned dependencies specified in setup.py's install_requires).
(Or is there some benefit in using pipenv install --system instead?)
To be able to generate pinned requiremets.txt that excludes development packages, add --no-dev option to pipenv lock, that seems to by default include also dev packages. Or maybe even change to default to match that of pipenv install, and exclude dev-packages by default?
As per #209 (comment) this is already supported in code:
from pipenv.project import Project
from pipenv.utils import convert_deps_to_pip

pfile = Project(chdir=False).parsed_pipfile
requirements = convert_deps_to_pip(pfile['packages'], r=False)
Although there is workaround for this need already, supporting it right in the cli would/could be nice.
2