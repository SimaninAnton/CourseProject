Contributor
adrianliaw commented on 6 Feb 2017
Currently, there is a restriction that the version numbers of installed libraries have to be matching ^[\d]+\.[\d]+.* (starting with this regex)
I'm trying to install pdfminer.six in my project, but due to the "irregular" version number that looks something like 20160614, pipenv seemed to be failing to catch the version number and failed to write it properly into the lock file.
And it ended up looking like this:
"pdfminer.six": {
    "hash": "sha256:8897b7ca5e94329aef5b862e501834ea2c0460c9940c904fdbd07dba297c2553",
    "version": "=="
},
Which causes an installation failure while running pipenv install, that shows Could not find a version that satisfies the requirement pdfminer.six==
A way to fix this is to simply use another way to determine the version number when installing a package. That is, instead of looping through every component inside the downloaded distribution's file name separated by "-" and detect the version number using regex, we simply exclude the package name itself and file extension from the download fname, the leaving middle part is just the version number.
Will this approach be more suitable? Or is there a special reason for using the original approach?