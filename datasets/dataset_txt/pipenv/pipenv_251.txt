ipiqueras commented on 6 Mar 2019
Issue description
In a project where Pipfiles are not under current working directory, pipenv update fails.
In contrast, pipenv sync works well (if foo already contains a Pipfile.lock file). So the problem happens when trying to create Pipfile.lock.
 + foo
    - Pipfile
set PIPENV_PIPFILE=foo\Pipfile
pipenv update --verbose
Expected result
I expect pipenv to create Pipfile.lock under foo directory.
Actual result
λ pipenv update --verbose
Running $ pipenv lock then $ pipenv sync.
Locking [dev-packages] dependencies…
Locking Failed!
Traceback (most recent call last):
  File "c:/python37/lib/site-packages/pipenv/resolver.py", line 126, in <module>
    main()
  File "c:/python37/lib/site-packages/pipenv/resolver.py", line 119, in main
    parsed.requirements_dir, parsed.packages)
  File "c:/python37/lib/site-packages/pipenv/resolver.py", line 72, in _main
    from pipenv.core import project
  File "c:\python37\lib\site-packages\pipenv\core.py", line 22, in <module>
    from .project import Project, SourceNotFound
  File "c:\python37\lib\site-packages\pipenv\project.py", line 110, in <module>
    raise RuntimeError("Given PIPENV_PIPFILE is not found!")
RuntimeError: Given PIPENV_PIPFILE is not found!
File "c:/python37/lib/site-packages/pipenv/resolver.py", line 126, in <module>
    main()
  File "c:/python37/lib/site-packages/pipenv/resolver.py", line 119, in main
    parsed.requirements_dir, parsed.packages)
  File "c:/python37/lib/site-packages/pipenv/resolver.py", line 72, in _main
    from pipenv.core import project
  File "c:\python37\lib\site-packages\pipenv\core.py", line 22, in <module>
    from .project import Project, SourceNotFound
  File "c:\python37\lib\site-packages\pipenv\project.py", line 110, in <module>
    raise RuntimeError("Given PIPENV_PIPFILE is not found!")
RuntimeError: Given PIPENV_PIPFILE is not found!
Remarks
If I set PIPENV_SKIP_LOCK and then execute:
pipenv install
Then there is no problem. Which confirms that the problem is somehow that pipenv fails to create Pipfile.lock when PIPENV_PIPFILE is not on the working directory.