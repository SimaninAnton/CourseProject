mulmschneider commented on 11 May 2018
I'm trying to introduce version pinning for our company's python projects, but am having trouble adopting Pipenv to our needs and would welcome some guidance.
We are using a private PyPI mirror (Artifactory remote repository) to cache all upstream packages.
Due to the fact that we use a libmusl based Linux distribution (Alpine), there are no matching binary wheels available on PyPI, requiring us to build a lot of stuff from source.
To reduce build times we cache the built upstream packages by uploading them as wheels to our private PyPI mirror (Artifactory virtual repository). This is done automatically by our buildsystem.
From my current understanding, this seems to be incompatible with Pipfile.lock, because the hashes of these new wheels aren't available at the point in time that the Pipfile.lock was written.
Currently I see these choices:
a) Use pipenv just for version pinning but disable hashing
b) Let the buildsystem commit a new Pipfile.lock to git every time it caches new upstream wheels
c) Expect the developers to manually upload built upstream wheels before running Pipfile.lock
d) Don't do upstream build caching
e) Contribute toward a MUSL wheel variant for PyPI
f) ...?
a) looks acceptable to me, but I haven't found a way to disable hashing / hash checking - is there anything I can provide in the Pipfile or the command line to do so?
If not, would you be willing to add something to that effect, or accept contributions for it?
Tangentially related: After reading through #2159 am I correct in assuming that the [[source]]urls in the Pipfile are used like --extra-index-url and not as --index-url?
If so, is it possible to force pipenv to not use https://pypi.python.org/simple?