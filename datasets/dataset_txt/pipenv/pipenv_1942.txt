tony commented on 12 Oct 2017 â€¢
edited
Thank you for the project. I am officially switched over to it on 2 projects, for local development as well as production. I am finally going to be able to scrap away bootstrapper scripts.
Is there a canonical way to verify installation dependencies briefly and only install if needed?
As it stands, I have two scenarios where there's a longer time than pip install -r requirements.txt:
When deploying to server, pipenv install, it'll run through all 76 packages, each time. Even though a virtualenv with the packages already exists.
When replacing a bootstrapper script that installs via subprocess commands to pip, using pipenv install, the time to bootstrap when a virtualenv already exists.
I don't know if I'm a.) Having environmental issues (but I'm having this issue on a Ubuntu, a Mac, and a server), b.) not using the most efficient command (maybe there's a command that can quickly check the Pipfile/Pipfile.lock against the virtualenv packages and not take so long?)
All machines are:
Python 2.7.14
pipenv 8.2.6