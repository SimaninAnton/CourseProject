frenetic commented on 25 Apr 2018
Description
I created a Pipfile with only two dependencies. One is a package from Pypi. The other is a repository.
[[source]]
url = "https://pypi.python.org/simple"
name = "pypi"
verify_ssl = true

[dev-packages]

[requires]
python_version = "3.5"

[packages]
python_firebase-master = {git = "https://github.com/assisantunes/python-firebase.git", ref = "28a8f45d7b18e487d6ddf85c136f814efd389843"}
django-allauth = "==0.30.0"
The repository one (python_firebase-master) has a direct dependency on requests, targeting at required: <1.2.99,>=1.2.0. (It reads better this way: >=1.2.0, <1.2.99).
The pypi one (django-allauth) has a dependency which depends on requests, targeting at required: >=2.0.0.
This scenario is well explicited at the dependency graph:
Expected result
Pipenv should not allow me to proceed with installing packages, since we have conflicts with dependencies.
Actual result
Pipenv installs a wrong version of a third party dependency, making an application break.
Steps to replicate
Create a new directory
Create a new Pipfile inside it, and paste the content from above
pipenv install
Then check the graph with pipenv graph.
$ python -m pipenv.help output