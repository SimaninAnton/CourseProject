johnoshea commented on 8 Feb 2018
I have a large tmux pane across the top 75% of the window, with two small ones split 50/50 below, each running zsh. Vim is running in the large pane and has two vertically-split windows. vim-tmux-navigator lets me use <c-h/j/k/l> to navigate the vim windows and zsh panes using the same keystrokes (e.g. from the left Vim window, <c-l> switches to the right Vim window, <c-j> switches to the zsh pane below and <c-k> switches back to the previous Vim window)
Describe your environment
OS Type: macOS 10.13.3
Python version: 3.5.2 (base version), 3.6.4 (inside pipenv shell)
Pipenv version: 9.0.1
Vim: VIM - Vi IMproved 8.0 / macOS version / Included patches: 1-1450
zsh: 5.4.2
iTerm2 build 3.1.5
vim-tmux-navigator
Expected result
<c-h/j/k/l> moves seamlessly between Vim windows in the top tmux pane and the zsh sessions in the lower two panes
Actual result
With Vim running inside the pipenv shell the <c-h/j/k/l> shortcuts don't work inside Vim - only - but do work to navigate between Vim and the zsh panes. Per the previous example, <c-h/l> appear to do nothing, but <c-j/k> moves between Vim and the zsh panes. The full :TmuxNavigateLeft/:TmuxNavigateRight commands continue to work and the keyboard mappings in Vim haven't been changed.
Closing the lower zsh splits doesn't restore the original Vim keyboard shortcut behaviour.
Steps to replicate
cd new/empty/dir
pipenv shell
vim foo
[inside vim] :vsplit bar
<c-h>/<c-l> do nothing
:qa 
exit
vim foo
[inside vim] :vsplit bar
<c-h>/<c-l> move to left/right vim windows
Comparing the output of env between the original shell and the pipenv shell doesn't show anything obvious - $TERM, $SHELL, $TMUX, $TERM_SESSION are all identical - the only notable changes are to $PATH, $PKG_CONFIG_PATH and $GVM_PATH_BACKUP and none of those seem incriminating
3