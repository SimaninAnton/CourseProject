pbudzon commented on 29 May 2019
Hi everyone.
I'm attempting to create a deployment process for a new project using pipenv. The process is meant to use Jenkins, which will build a deployment package (code + dependecies) that can be deployed onto running servers.
The process would look somewhat like this:
Jenkins: Checkout code from repo
Jenkins: Run PIPENV_VENV_IN_PROJECT=1 pipenv install --deploy
Jenkins: Package the whole dir.
Jenkins: Upload the package to servers.
Restart web server on the servers to make sure code changes are seen.
The main issue I'm encountering with pipenv is the fact that the path to the virtualenv created on Jenkins is hardcoded in various files inside .venv (for example, setting VIRTUAL_ENV in bin/activate). This is an issue, since the path in which the project is built in Jenkins (/var/lib/jenkins/workspace/project/.venv) is different to the path it sits on the actual application servers (/var/www/.venv). I could not find an obvious way to solve this, I thought PIPENV_NO_INHERIT=1 was meant for this, but it seems to have no effect in this regard.
Hence my question: what is the intended build and deployment strategy with pipenv? Is there a way to pre-build a deployment package (the app code + dependencies) that's ready to be uploaded to the application servers? Or is pipenv expecting that I'll run pipenv install on each and every server I want to deploy to?
I'm hoping there's an obvious option I missed somewhere! :)