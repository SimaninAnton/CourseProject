arielnmz commented on 12 Jul 2018
Issue description
I am using a small lib that I pull from git using its tag, this is how the entry looks in the Pipfile:
my_lib = {git = "ssh://git@bitbucket.org/user/my_lib.git", ref = "v0.2.0"}
I did some changes and pushed a new tag, so I updated my Pipfile accordingly
my_lib = {git = "ssh://git@bitbucket.org/user/my_lib.git", ref = "v0.2.1"}
I then locked dependencies:
pipenv lock
This is how the lib entry looks in the Pipenv.lock:
"nopal-framework-django": {
    "git": "ssh://git@bitbucket.org/user/my_lib.git",
    "ref": "v0.2.1"
},
And sync'ed packages:
$ pipenv sync
Expected result
I expect the correct tag to be pulled
Actual result
As the title suggests the package is not being installed correctly, as the graph shows otherwise:
$ pipenv graph
my-lib==0.2.0
  - django [required: Any, installed: 2.0.7]
    - pytz [required: Any, installed: 2018.5]
  - djangorestframework [required: Any, installed: 3.8.2]
Steps to replicate
I tried this on two different environments with the same Pipfile and package
Create a new Pipfile
Add a git entry
Lock and sync
Change the ref in the Pipfile
Lock and sync again
Graph still shows the old package
One way around this is to just remove the package and reinstall it with the desired ref
Please run $ pipenv --support, and paste the results here. Don't put backticks (`) around it! The output already contains Markdown formatting.
Error: no such option: --support