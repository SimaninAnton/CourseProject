3lnc commented on 2 Jul 2018
Hi. I'm looking for some guide/tutorial on using pipenv in development-delivery cycle, currently I'm missing two key points in docs:
What is proper way to deploy microservice based on Pipfile[.lock] (i.e., how to build docker container?).
My feeling is that during deployment only .lock should be read, as described set of dependencies developed/tested with, but it's not clear what's the proper way:
sync seems to be appropriate (reads .lock file, installs packages), but doesn't support --system (addressed in #2227) ­— which is default approach while building containers
install --system is ok for installing in container, also support --deploy — is it defferent from sync? Docs says "This will fail a build if the Pipfile.lock is out–of–date" — does it check against PyPI or Pipfile?
install --ignore-pipfile — is it the same as sync?
What's the way to use editable installs while developing? Pretty often I develop library and app (using that library) at the same time — to ensure compatibility/ease of interface use/etc.
While working with pip I can do one-timer like pip install -e path/to/local/lib, or manage some requirements-dev that's local for every developer. During dev install we can feed all requirement files, for CI — only libraries from upstream.
I'm looking for something similar with pipenv — support for [dev-packages] is perfect in terms of handling priorities during install and locking, but I can't put there any "per developer"-specific configuration. And afaik, pipenv can not work with multiple Pipfiles.