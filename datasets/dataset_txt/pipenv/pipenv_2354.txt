Contributor
nonylene commented on 14 Apr 2017 â€¢
edited
PIPE and REDIRECTION are not working with pipenv run, because this uses pexpect.spawn
pexpect.spawn.wait with non-interactive environment.
$ pipenv run python3 -c "print('foo')" | grep foo
# => not found
$ pipenv run python3 -c "print('foo')" > bar.txt
# => bar.txt is empty
If use os.exec instead of spawn, pipe and redirection are available.
diff --git a/pipenv/cli.py b/pipenv/cli.py
index 62a4165..f48b9e7 100644
--- a/pipenv/cli.py
+++ b/pipenv/cli.py
@@ -997,7 +997,8 @@ def run(command, args, no_interactive=False, three=None, python=False):

     # Spawn the new process, and interact with it.
     try:
-        c = pexpect.spawn(which(command), list(args))
+        os.execv(which(command), [command] + list(args))
+        # c = pexpect.spawn(which(command), list(args))
     except pexpect.exceptions.ExceptionPexpect:
         click.echo(crayons.red('The command ({0}) was not found within the virtualenv!'.format(which(command))))
         sys.exit(1)
$ python3 -m pipenv run python3 -c "print('foo')" | grep foo
foo
$ python3 -m pipenv run python3 -c "print('foo')" > bar.txt
$ cat bar.txt
foo
Can you add exec subcommand like bundler, or change run command to use os.exec ?
version
3.5.6, or current master (7b17058)
1