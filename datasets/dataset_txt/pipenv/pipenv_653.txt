HermannBjorgvin commented on 20 Sep 2018 â€¢
edited
Greetings. I am trying to set up a Docker image using the base python:3 image from the official docker repository. I start by installing pyenv and setting the PYENV_ROOT environmental variable as well as the correct PATH environmental variable for pyenv. I have this running on my desktop machine similarly where I run pipenv install and if I don't have the correct Python version on my machine it offers to download using pyenv.
I was hoping to see the same functionality from pipenv on docker, where I could simply run pipenv install when I build and it would fetch the correct python version for me to use in the virtual environment.
I know this is pretty simple to solve just by adding a line to my Dockerfile pyenv install python 3.6.6. But I just think it's more cool if pipenv handles it for me automatically instead of having to change the language version in two places.
This might be a bug, might be a feature request, or I might be missing something. Can anyone help me out with this or maybe share some insight into what I could be doing instead? I've tried to find something like a --yes or --install-pyenv flag but with no luck.
Thanks in advance for any help.
FROM python:3
ENV PYENV_ROOT="/root/.pyenv" \
 PATH="/root/.pyenv/shims:/root/.pyenv/bin:${PATH}"
RUN apt-get update && \
    apt-get install -y git mercurial build-essential libssl-dev libbz2-dev zlib1g-dev libreadline-dev libsqlite3-dev curl && \
curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash
RUN pip3 install pipenv

COPY . /app
WORKDIR /app

RUN pipenv install --deploy --ignore-pipfile

RUN pipenv run python --version
./docker-compose.yml
$ docker-compose build
-------------------------------------------------------------------------------
$ pipenv --support