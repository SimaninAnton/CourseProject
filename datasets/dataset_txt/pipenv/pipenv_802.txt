dankeder commented on 24 Jul 2018
Is your feature request related to a problem? Please describe.
When I run pipenv install <somepackage> in a directory where the Pipfile doesn't exist yet pipenv automatically creates the Pipfile. While this is convenient, sometimes I accidentally run it in a wrong directory. After that happens I have to manually remove both Pipenv & Pipenv.lock.
Describe the solution you'd like
To prevent the mistakes like the one described above, I propose this:
Introduce a pipenv subcommand init:
pipenv init     # Create the initial Pipfile and/or Pipfile.lock in the current directory
pipenv install <somepackage>     # Install packages as usual
Modify the subcommand inistall so that it doesn't create Pipfile automatically; if the command is issued and Pipfile doesn't exist in the current directory or in one of the parent directories, print a message and exit. The message may contain a hint that the user should first run pipenv init.
Also, there are other well-known tools that work in a similar fashion, for example git or vagrant.