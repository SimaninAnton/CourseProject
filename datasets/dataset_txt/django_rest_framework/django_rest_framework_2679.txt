hxu commented on 12 Nov 2013
If I have three models:
class ModelOne(models.Model):
    children = models.ManyToMany(Farm, null=True, blank=True, related_name="parents"

class ModelTwo(models.Model):
    pass

class ModelThree(models.Model):
    parent = models.ForeignKey(ModelTwo, null=True, blank=True)
Then this serializer will break for an instance of ModelThree where parent is None:
class ModelThreeSerializer(serializers.ModelSerializer):
    parentParent = serializers.PrimaryKeyRelatedField(many=True, source="parent.parents", read_only=True, required=False)
    class Meta:
        model = ModelThree
It will throw this error: 'NoneType' object has no attribute 'parents'
My specific case uses PrimaryKeyRelatedField and with this kind of model hierarchy, but I suspect that it will break for other RelatedFields too. Sorry I don't have a test for this. I just wanted to get this logged, and may return later to with a pull request with the test/fix.