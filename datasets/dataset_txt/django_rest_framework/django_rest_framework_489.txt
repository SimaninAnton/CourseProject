kevgathuku commented on 7 Feb 2018 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
Example project: https://github.com/kevgathuku/drf-repro
Having this models.py
from django.conf import settings
from django.db import models


class Document(models.Model):
  title = models.CharField(max_length=255, blank=False)
  owner = models.ForeignKey(settings.AUTH_USER_MODEL, on_delete=models.CASCADE)
And this invald serializers.py
from rest_framework import serializers
from .models import Document

class DocumentSerializer(serializers.HyperlinkedModelSerializer):
    # this is invalid, but fails silently
    owner = serializers.ReadOnlyField(source='owner.this-doesn-t-esits')

    class Meta:
        model = Document
        fields = '__all__'
The app runs okay and never raises an error, despite the source of the ReadOnlyField being invalid
Expected behavior
I expected to get an error when trying to access a non-existent field on the source parameter
Actual behavior
The incorrect code fails silently and I am not made aware of the error in form of a warning or exception
I tracked it down to this location in the source code:
https://github.com/encode/django-rest-framework/blob/master/rest_framework/fields.py#L445-L446