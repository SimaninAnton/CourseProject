Contributor
hamishcampbell commented on 22 Sep 2014
Canvassing to see if anyone has done this already, and if not, whether others would be interested in this feature.
We have summary list views that return data like so:
[
    {
        "id": 11, 
        "url": "https://[site]/data/11/", 
        "name": "First Thing", 
        "published_version": "https://[site]/data/11/versions/10/"
    },
   ...
]
In this case, published_version is a detailed view with a lot more information about a specific version of the object.
In the JIRA REST APIs (https://docs.atlassian.com/jira/REST/latest/) you can specify "expansions" that will include more information for specific keys. In our case, it would be useful to be able to specific expansions for keys that are URLs to other API views.
For example, hitting the above endpoint with expansion=published_version would reverse the URL and return the serialized response instead of the URL:
[
    {
        "id": 11, 
        "url": "https://[site]/data/11/", 
        "name": "First Thing", 
        "published_version": {
            "id": 10,
            "title": "First Thing",
            "created_at": "2014-03-19T21:01:00.504Z"
    },
   ...
]
If this hasn't already been done elsewhere, I'd be interested in opinions on how this should work. For example:
OPTIONS requests should list expandable keys. Should this exist under the GET actions against keys, or in an expansions list?
Should dot notation traversing be respected (like in the JIRA example), or is one level of expansion enough?
Does the expansion query param approach make sense, or is there a better way.