Contributor
dbrgn commented on 28 Jul 2011
Hi. This is less of a bug than a support request.
I have created a REST interface using the Django authenticator that I need to use both internally (non-AJAX) and with JavaScript (AJAX). The JavaScript part works great, but now I need to "create" a POST request internally so that I don't have to create redundant code.
The "internal" view currently looks like this:
@render_to('monitoring_added.html')
def add_monitoring(request, entity_id):
    request.META['REQUEST_METHOD'] = 'POST'
    request.META['HTTP_ACCEPT'] = 'application/json'
    user_id = ... # Get user_id here
    request.POST = QueryDict('entity_id=%s&User=%s' % (entity_id, user_id))
    response = MonitoringApi.as_view()(request)
    return {'content': response.content}
The request gets passed on correctly, but django-rest-framework does not accept the POST data. It always returns an error message saying that entity_id and User are required fields.
Is my approach completely wrong? Ir have I just overlooked some issue with the request or my code? Should I create a new HttpRequest instead?