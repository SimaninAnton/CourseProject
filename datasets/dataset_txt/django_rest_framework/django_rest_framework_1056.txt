vesterbaek commented on 12 Sep 2016
I would like to declare som common fields in a mixin class, used by subclasses of both serializer.Serializer and serializer.ModelSerializer. These fields, however, seems not to be picked up, even though defined in Meta.fields. Is this by design?
Repro:
class TestSerializerMixin:
    def test_mixin(self):
        class MyMixin(object):
            some_field = serializers.BooleanField()

        class MySerializer(MyMixin, serializers.Serializer):
            class Meta:
                fields = ['some_field']

        serializer = MySerializer(data={})
        serializer.is_valid()
        assert 'some_field' in serializer.errors
=>
    assert 'some_field' in serializer.errors
E   assert 'some_field' in {}
E    +  where {} = MySerializer(data={}):.errors