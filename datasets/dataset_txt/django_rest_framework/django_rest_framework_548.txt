Contributor
blueyed commented on 14 Dec 2017 •
edited
We have a viewset to get the current user (via self.request.user), but it requires to override the DefaultRouter / SimpleRouter to support having an empty kwarg / regex for the URL:
class CurrentUserViewSet(…, mixins.RetrieveModelMixin, viewsets.GenericViewSet):
    model = User
    lookup_url_kwarg = ''

    def get_object(self):
        qs = self.get_queryset()
        user = get_object_or_404(qs, pk=self.request.user.pk)
        self.check_object_permissions(self.request, user)
        return user
from rest_framework.routers import DefaultRouter

class Router(DefaultRouter):
    def get_lookup_regex(self, viewset, lookup_prefix=''):
        """Custom method to support lookup_url_kwarg=''."""
        lookup_url_kwarg = getattr(viewset, 'lookup_url_kwarg', None)
        if lookup_url_kwarg == '':
            return ''
        return super().get_lookup_regex(viewset, lookup_prefix)
Is there a better way to achieve this already, or would having support for lookup_url_kwarg == '' make sense for DRF's SimpleRouter?
Maybe SimpleRouter.get_lookup_regex should look for an lookup_regex attribute on the viewset, and use that if it is provided?
Update:
The problem is that the detail-url will contain two slashes.
A simpler solution, without a custom/changed router seems to register the route without a prefix:
router.register(r'', CurrentUserViewSet, base_name='me')
But then just using an @api_view method might be better in general.