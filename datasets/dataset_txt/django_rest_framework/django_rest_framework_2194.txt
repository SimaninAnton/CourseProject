Contributor
matthewwithanm commented on 5 Dec 2014
Sorry if this is covered somewhere else. I feel like this must be a common issue but haven't been able to find anything related except for this SO question and #667 (which is a different problem but shares the same cause).
The situation is this:
You have a DRF API that's happily chugging along. The API is consumed by a client-side app on the same domain. At some point, you decide to add a new section to your app and password protect it using basic auth. (This doesn't use Django users.) Once a user has authenticated successfully for this new section, browsers will send the Authorization header with all subsequent requests to the domain. Since the username and password don't correspond to a Django user, they'll fail DRF's authentication check, preventing access to public resources and breaking the original consumer.
I realize that I could write a custom authentication class and return None on an authentication failure (and maybe that's what I should be doing?) but the fact that a completely unrelated change somewhere else on the domain can cause this issue kinda makes me feel like it's broken by default. Unlike #667, this isn't an issue with authentication failing loud and early in the general caseâ€”it's only a problem with basic auth given how browsers treat the Authorization header (i.e. sending it on every request after success).
Thanks!