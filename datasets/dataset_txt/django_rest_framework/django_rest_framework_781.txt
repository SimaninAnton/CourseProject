fdhadzh commented on 19 May 2017 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
class Group(models.Model):
    display_name = models.CharField(max_length=255)

    owner = models.ForeignKey(
        settings.AUTH_USER_MODEL, on_delete=models.CASCADE)

    last_modified = models.DateTimeField(auto_now=True)

    class Meta:
        ordering = ('last_modified', )

class GroupSerializer(serializers.ModelSerializer):

    class Meta:
        model = Group

        fields = ('id', 'display_name', 'owner_id', 'last_modified')

class GroupListCreateAPIView(ListCreateAPIView):
    serializer_class = GroupSerializer

    def get_queryset(self):
        return self.request.user.group_set.all()
Expected behavior
Group creation with user.group_set.
Actual behavior
Group creation as standalone model.
I tried this for perform_create (works in some cases):
def perform_create(self, serializer):
    queryset = self.get_queryset()
    queryset.create(**serializer.validated_data)