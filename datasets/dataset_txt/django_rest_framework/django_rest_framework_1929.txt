ghost commented on 19 Mar 2015
Clarification of #2694 with possible implementation thoughts.
Permissions for OPTIONS requests currently break the overall permissions pattern where permissions are checked on the resource list level and then the object level. Because of how OPTIONS routing is currently implemented, all permissions logic associated with metadata requests has to be captured entirely on the list level, which works against the benefits brought in from the two tier approach all other requests go through.
Permissions for OPTIONS requests should be handled more or less the same as permissions for GET requests, as you would want to manipulate/limit both in similar ways for similar reasons - e.g. users requesting information about their own profile vs others', or filtering returned results to a cilent transparently.
This could be as simple as adding a conditional call to get_object() (which in turn fires the object permissions check) or it could be something cleaner that checks object permissions in a way thats not obvious to me right now.
If a get_object() call did make sense, that could also be a good opportunity to potentially pass a reference to the object along as an optional argument to determine_metadata() so developers have more tools to play around with.
I can potentially put together a pull request if needed.