9gix commented on 6 Jul 2014
I'm trying to create a nested writable on a single object. I got this working on a many to many from this #1457.
But because in m2m there is no checking on whether the related objects is already exists by the previous object, which can cause a duplicate object created on its related field, hence I have to do it one by one for each objects.
So I tried to create a single object, hoping that it would update its relationship. But got a validation errors instead. Here's an example
class Fruit(models.Model):
    name = models.CharField(max_length=10, unique=True)

class Stall(models.Model):
    name = moels.CharField(max_length=10)

class FruitSerializer(serializers.ModelSerializer):
    class Meta:
        model = Fruit

class StallSerializer(serializers.ModelSerializer):
    fruit = FruitSerializer()
    class Meta:
        model = Stall

# Let's update our shop with an existing fruits
serializer = StallSerializer(stall, data={'name': 'Old Shop', 'fruit':{'id': 1, 'name': 'Banana'}})
serializer.is_valid() # True


# Let's create a new shop, with existing Fruits
serializer = StallSerializer(data={'name': 'My New Shop', 'fruit':{'id': 1, 'name': 'Banana'}})
serializer.is_valid() # False
serializer.errors # {'fruit': [{'name': 'Fruit with this Name already exists'}]}