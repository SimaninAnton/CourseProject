ghost commented on 18 Sep 2015
I am trying to create object with nested serializer. Same question is asked at stack overflow.
I want user to put multiple bid for a given running auction.
I have followed example given at http://www.django-rest-framework.org/api-guide/serializers/#writable-nested-representations
#Serializers.py
class ItemSerializer(serializers.ModelSerializer):
    class Meta:
        model = Item


class AuctionSerializer(serializers.ModelSerializer):
    item = ItemSerializer(read_only=True)
    class Meta:
        model = Auction

class BidSerializer(serializers.ModelSerializer):
    auction = AuctionSerializer()
    class Meta:
        model = Bid

    def create(self, validated_data):
        print "create: ", validated_data
        return serializers.ModelSerializer.create(self, validated_data)
For a running auction I want to place a bid for that item,
I m sending post request with data,
{
    "auction": {
        "id": 149, 
    }, 
    "bid_price": 2.0, 
}
I get error that auction Id is not unique. I believe it is trying to create new auction instance.
For this reason I want to override serializer create method. create method is not getting called unless I set,
class BidSerializer(serializers.ModelSerializer):
    auction = AuctionSerializer(read_only=True) ##<---
    class Meta:
        model = Bid

    def create(self, validated_data):
        print "create: ", validated_data
        return serializers.ModelSerializer.create(self, validated_data)
Since auction is an read only field, I am not able to access it's value in create method. auction is not present in validated_data.
Only solution I see is to use flat serializer representation. But I would like to have it in nested format. OR please tell me if there is any better way?
Thanks,
Nikhil