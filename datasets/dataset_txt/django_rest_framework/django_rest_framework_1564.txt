lukeburden commented on 9 Sep 2015
Hi there,
I'm using iso8601 for date representation but want to prevent microseconds from being displayed.
I've created my own DateTimeField with an overridden to_representation and injected it as a default field in my own ModelSerializer subclass.
class DateTimeField(serializers.DateTimeField):
    def to_representation(self, value):
        value = value.replace(microsecond=0)
        return super(DateTimeField, self).to_representation(value)

class ModelSerializer(serializers.ModelSerializer):
    serializer_field_mapping = copy(serializers.ModelSerializer.serializer_field_mapping)
    serializer_field_mapping[models.DateTimeField] = DateTimeField
All good and works, but kind of a lot of shuffling of code to get something so simple done and it strikes me that the vast majority of the time users won't need microsecond precision on their APIs. Thoughts were:
a setting to prevent microsecond precision being rendered, but this doesn't play well with the datetime format settings in general
allowing DATETIME_FORMAT setting to point to a callable, and test for this in DateTimeField.to_representation
@tomchristie, how would you like to see this done, if at all?
1