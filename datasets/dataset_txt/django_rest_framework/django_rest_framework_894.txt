childeoapp commented on 28 Feb 2017
Steps to reproduce
Considering the following models:
class Farm(models.Model):
    name = models.CharField(max_length=200)

class Animal(models.Model):
    name = models.CharField(max_length=200)

class AnimalFarm(models.Model):
    farm = models.ForeignKey(Farm, related_name='farm_animal')
    animal = models.ForeignKey(Animal, related_name='farm_animal')

    class Meta:
        unique_together = ('farm', 'animal')
Here, we cannot use a 'through' ManyToMany relationship because Farm and Animal are part of 2 different apps that we cannot modify. We can only work on AnimalFarm.
For the serializer we make:
class FarmSerializer(serializers.HyperlinkedModelSerializer):
    animals = serializers.HyperlinkedRelatedField(
        many=True,
        read_only=True,
        view_name='animal-detail',
        source='farm_animal.animal'
    )

    class Meta:
        model = Farm
        fields = ('name', 'animals')
Expected behavior
We expect that the animals fields become an array that contains the URL of all Animals that are related with the current Farm
Actual behavior
This create an AttributeError 'RelatedManager' object has no attribute 'animal'
When working with a "normal" ForeignKey the "." notation doesn't create this error, neither if I use a 'through' ManyToMany relationship.
PS: if the source is just 'farm_animal' it's get the good id