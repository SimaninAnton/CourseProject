bartek commented on 2 Nov 2012
Hi there,
I've setup a class to do custom authentication, like so:
class TokenAuthentication(BaseAuthentication):
    model = ClientApplication

    def authenticate(self, request):
        auth = request.META.get('HTTP_AUTHORIZATION', '').split()

        if len(auth) == 2 and auth[0].lower() == 'token':
            key = auth[1]
            try:
                token = self.model.objects.get(api_key=token)
            except self.model.DoesNotExist:
                return None
            return (token, token.api_key)
I've set this in my settings and have rest_framework.authtoken in INSTALLED_APPS
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'core.permissions.TokenAuthentication',
    ),
}
However, when I curl a view I made, the authentication is never hit. Why?
Curl is simply: curl -H "Authorization: Token abc123" http://localhost:8000/api/agent/999/
My view is as follows:
class AgentDetail(APIView):
    def get(self, request, agent_code):
       # removed for brevity
       # ...
       return Response(context)
Any ideas? I did a little looking around and tracing in the Request, and although self.authenticators is populated in the Request class it never seems to take use of them.
Thanks!