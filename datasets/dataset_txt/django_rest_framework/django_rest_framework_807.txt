elmehalawi commented on 3 May 2017
Steps to reproduce
Create ModelViewSets and Serializers. Register the ViewSets in a router:
class ResultSerializer(serializers.ModelSerializer):
    test = serializers.PrimaryKeyRelatedField(queryset=Test.objects.all())
    certification = serializers.PrimaryKeyRelatedField(queryset=Certification.objects.all())
    value = serializers.CharField()

    class Meta:
        model = Result
        fields = '__all__'

class ResultViewSet(ModelViewSet):
    queryset = Result.objects.all()
    serializer_class = ResultSerializer


router = DefaultRouter()
router.register(r'results', ResultViewSet)
urls = router.urls
Add router URLs and documentation URLs to URLconf:
urlpatterns = [
    url(r'^admin/', admin.site.urls),
    url(r'^certifications/', include('certifications.urls')),
    url(r'^docs/', include_docs_urls(title='API Documentation')),
]
Everything working as expected. Now add a token-based login endpoint URL as described here:
urlpatterns = [
    url(r'^admin/', admin.site.urls),
    url(r'^certifications/', include('certifications.urls')),
    url(r'^docs/', include_docs_urls(title='API Documentation')),
    url(r'^api-token-auth/', views.obtain_auth_token),
]
Expected behavior
The documentation for api-token-auth should appear alongside the rest of the API documentation.
Actual behavior
All documentation disappears, and is replaced with an entry for api-token-auth. There is also a header by the name of one of my applications, but nothing is under this header.