ghost commented on 14 Mar 2015
Because of how views.APIView routes OPTIONS requests, there is only one entry point into metadata handling and permissions are only checked at the view-wide level when an OPTIONS request is submitted against an instance endpoint.
These joint restrictions make it hard to have distinct metadata based on object level permissions that can be helpful in RESTful applications -- you don't get a separate hook for object level metadata and you can't register side-effects in the object permissions check.
Distinctive metadata sets based on instance endpoint vs list endpoint differentiation are nice for more programmatic consumption of an API.
I understand this may already be worked on with the evolving handling of metadata.