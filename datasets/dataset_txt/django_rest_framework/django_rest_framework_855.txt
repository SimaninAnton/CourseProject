Contributor
cypreess commented on 21 Mar 2017 â€¢
edited
Current implementation of SessionAuthentication assums that CSRF context-less check (without view handler context) is always fired - regardles the fact that csrf_exempt was used to decorate view.
It is not possible currently to define a view that will be exempted from CSRF check for unsafe operation while using Session auth backend.
I found this particulary annoying when implementing login view for API used in CORS, as my Javascript frontend did not have access to cookies that was set on different domain (so session cookie was always sent) but at the same time has lost his csrf token stored localy - so it cannot log again because django will always throw
HTTP 401 - CSRF token missing or incorrect.
The only workaround is to manually provide somehow a new token via e.g. GET method from django to Frontend.
PS. Also I cannot find any rationale for the way CSRF force checking on Session is implemented right now - that is discarding and overriding the intentional use of csrf_exempt.
4