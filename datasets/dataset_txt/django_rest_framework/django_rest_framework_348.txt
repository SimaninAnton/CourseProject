kylebebak commented on 27 Aug 2018 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
Create a model, a model serializer, and a create view as follows:
class TestModel(models.Model):
    a = models.TextField()
    b = models.TextField()


class TestModelSerializer(ModelSerializer):
    class Meta:
        model = TestModel
        exclude = ('a',)


class TestModelCreate(generics.CreateAPIView):
    serializer_class = TestModelSerializer
Send a post request to the endpoint that invokes the create view, without specifying anything for the body.
Expected behavior
A 400 Bad Request should be returned, indicating the field b is required. After all, b is a TextField with blank=False, and b was not included in the request body.
Actual behavior
A TestModel instance is created, even though b was not included the request body, and the field b was not excluded in TestModelSerializer.
Other observations
If I use fields = __all__ and read_only_fields = ('a',) instead of using exclude = ('a',), the serializer behaves correctly. It throws returns a 400 indicating the field b is required.
In other words, the problem relates to how the exclude argument in a model serializer's meta class interacts with blank=False model fields.