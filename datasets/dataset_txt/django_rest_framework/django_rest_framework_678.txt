luismorenolopera commented on 24 Aug 2017
I am developing a hierarchical api for the models of my app, example:
https: //www.example.com/model/pk/submodel/pk2/subsubmodel/pk3 ...etc
so because of that I have to personalizate the generic view class adding the corresponding method for each action example:(def list(), def retrieve() ). The problem of that is things like pagination and filtering doens't work, I have already solved the problem of pagination by adding a few lines of code in the list method but I have not found any way to solve the problem with the filters.
here's an example of my code:
the serializer:
class RegionSerializerList(serializers.ModelSerializer):

    class Meta:
         model = Region
         fields = ('id', 'name')
The view:
class RegionList(generics.ListCreateAPIView):
    queryset = Region.objects.all()
    serializer_class = RegionSerializerList
    pagination_class = PostPageNumberPagination
    filter_backends = [SearchFilter, OrderingFilter]
    search_fields = ['name', 'id']

    def list(self, request, pk):
        self.pagination_class = PostPageNumberPagination
        queryset = Region.objects.filter(country=pk)
        page = self.paginate_queryset(queryset)
        #the following 3 lines fix the pagination problem
        if page is not None:
            serializer = self.get_serializer(page, many=True)
            return self.get_paginated_response(serializer.data)

        serializer = RegionSerializerList(queryset, many=True)
        return Response(serializer.data)
the "filters" botom appears in the web but any function works, Neither the order nor the search works, It continues showing all the same data of the list, Using the URL filter (/?search=) doesn't, and neither using the get_queryset method.
I'm using filter_backends whit SearchFilter, OrderingFilter and the search_fields that work perfectly without the personalised method list, but if i used that method doens't works i don't know why and how to fix that. :(
I need the filter to work without having to change the personalized methods on which my api depends
Then I wonder if anyone here knows how to solve this problem and give me a hand, I would appreciate it a lot, thanks