Contributor
diox commented on 13 May 2019 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce / Description of the issue
With DRF throttling classes current implementation, an action gets added to the history only on success. This means that additional attempts that result in a 429 response aren't considered in throttling checks later. My suggestion is to consider those as well, punishing brute-forcing and rewarding clients that wait the recommended wait period.
Given the following throttling class:
 class TestThrottle(AnonRateThrottle):
    rate = '3/min'
Example scenario of a client hitting an API protected with this class - number in parenthesis is the number of actions the throttling class has left in its history when deciding whether or not to throttle.
Seconds Current behavior Proposed behavior
0 Pass (0) Pass (0)
5 Pass (1) Pass (1)
10 Pass (2) Pass (2)
15 Throttled (3) Throttled (3)
62 Pass (2) Throttled (3)
66 Pass (2) Throttled (3)
76 Pass (2) Pass (2)
This is a somewhat backwards-incompatible change, in the sense that the behavior would be different and the cache contents would differ as well, but unless someone relies on it for purposes other than throttling I don't think it should be much of a problem.
It could be done as a third-party library, but I believe it's better to have this change in DRF itself to make throttling more efficient against brute-force attacks. I haven't written the pull request yet, but it's relatively trivial and I'd be willing to do it, I just want to validate the idea first.