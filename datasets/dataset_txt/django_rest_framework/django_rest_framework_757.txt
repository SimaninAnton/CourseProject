and3rson commented on 6 Jun 2017 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
Create URL for a viewset:
router.register('items/(?P<item_type>products|services)', ItemsViewSet, base_name='item')
Create ModelViewSet:
class ItemsViewSet(ModelViewSet):
    def get_item_type(self):
        return self.request._request.resolver_match.kwargs.get('item_type')

    def get_queryset(self):
        if self.get_item_type() == 'product':
            return ProductModel
        else:
            return ServiceModel

    def get_serializer_class(self):
        if self.get_item_type() == 'products':
            return ProductModelSerializer  # ProductModelSerializer.Meta.model == ProductModel
        else:
            return ServiceModelSerializer  # ServiceModelSerializer.Meta.model == ServiceModel
GET /items/products
Expected behavior
The ViewSet should choose the queryset and serializer based on item_type url kwarg and render it.
Actual behavior
DRF raises exception:
Exception: Could not resolve URL for hyperlinked relationship using view name "product-detail". [...]
Seems like DRF ignores the base_name of the viewset and still tries to use the model name to determine the view name based on serializer model. Is there any way to override this behavior to resolve multiple models to item-detail instead of <model_name>-detail?
Please excuse me if it's a usage issue, but considering the availability of the get_serializer_class method I assume that such behavior should be possible. I went through the docs and couldn't find a way to override the method that generates view name from model.
Thanks in advance. DRF rocks!