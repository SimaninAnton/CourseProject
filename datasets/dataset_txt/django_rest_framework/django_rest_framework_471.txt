Contributor
OJFord commented on 28 Feb 2018 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
class SomeSerialiser(ModelSerializer):

    different_name = CharField(source='actual_name', read_only=True)

    # ...

field = SomeSerialiser().get_fields()['different_name']
print(field.__class__.__name__)
assert field.source == 'actual_name'
(CharField not significant; to match type of actual_name.)
Expected behaviour
Assertion passes.
Actual behaviour
Assertion fails, field is a ReadOnlyField with field.source == 'different_name'.