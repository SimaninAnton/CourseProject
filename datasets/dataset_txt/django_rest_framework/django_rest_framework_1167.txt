shotgunner commented on 26 Jun 2016
here is my code related to login serializer
class LoginSerializer(serializers.Serializer):
    password = serializers.CharField(required=False, style={'input_type': 'password'})

    default_error_messages = {
        'inactive_account': constants.INACTIVE_ACCOUNT_ERROR,
        'invalid_credentials': constants.INVALID_CREDENTIALS_ERROR,
    }

    def __init__(self, *args, **kwargs):
        super(LoginSerializer, self).__init__(*args, **kwargs)
        self.user = None
        self.fields[User.USERNAME_FIELD] = serializers.CharField(required=False)

    def validate(self, attrs):
        self.user = authenticate(username=attrs.get(User.USERNAME_FIELD), password=attrs.get('password'))
        if self.user:
            if not self.user.is_active:
                raise serializers.ValidationError(self.error_messages['inactive_account'])
            return attrs
        else:
            raise serializers.ValidationError(self.error_messages['invalid_credentials'])
when my password ends with spaces attrs returns it without spaces and I can not login the user (invalid_credentials)
I think I find the location of striping the password location in the rest_framework source code in t he rest_framework/fields.py :
def to_internal_value(self, data):
    value = six.text_type(data)
    return value.strip() if self.trim_whitespace else value
my main question is how can I prevent this method to remove the trailing spaces in the password ?