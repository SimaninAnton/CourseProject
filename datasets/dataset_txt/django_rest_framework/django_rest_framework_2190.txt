GeorgeLubaretsi commented on 7 Dec 2014
Current implementation of metadata label_lookup doesn't provide an easy way to map custom field types.
https://github.com/tomchristie/django-rest-framework/blob/master/rest_framework/metadata.py
label_lookup = ClassLookupDict({
        serializers.Field: 'field',
        serializers.BooleanField: 'boolean',
        serializers.CharField: 'string',
        serializers.URLField: 'url',
        serializers.EmailField: 'email',
        serializers.RegexField: 'regex',
        serializers.SlugField: 'slug',
        serializers.IntegerField: 'integer',
        serializers.FloatField: 'float',
        serializers.DecimalField: 'decimal',
        serializers.DateField: 'date',
        serializers.DateTimeField: 'datetime',
        serializers.TimeField: 'time',
        serializers.ChoiceField: 'choice',
        serializers.MultipleChoiceField: 'multiple choice',
        serializers.FileField: 'file upload',
        serializers.ImageField: 'image upload',
    })
field_info['type'] = self.label_lookup[field]
Perhaps separating default and custom fields dicts to separate class variables and only after that passing them to ClassLookupDict would provide better extensibility?