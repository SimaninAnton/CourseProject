almalki commented on 7 Feb 2014
When using HyperlinkedRelatedField (and probably PrimaryKeyRelatedField) with a model, and in order to construct the url, the framework gets the related field and then access its lookup_field (default pk). This entails an access to DB for each related field, and in case of a list, that means a DB access for every item of the list for every HyperlinkedRelatedField. An optimization by a developer would be to select_related or prefetch_related on the queryset for each of these fields, but I think the framework can do better. How about a HyperlinkedRelatedField that just use the foreign key value itself on the model to construct the URL or return primary key in case of PrimaryKeyRelatedField, i.e. if we have:
class Question(models.Model):
    question_text = models.CharField(max_length=200)
    pub_date = models.DateTimeField('date published')


class Choice(models.Model):
    question = models.ForeignKey(Question)
    choice_text = models.CharField(max_length=200)
    votes = models.IntegerField(default=0)
it should be enough to use question_id of a Choice instance to construct the url or return related primary key.
-Thanks