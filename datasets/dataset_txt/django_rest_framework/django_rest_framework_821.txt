kostko commented on 20 Apr 2017 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
I am getting an issue due to this excessive caching without the possibility to clean the cache when a field/serializer is bound. This bug is caused by #3288.
Minimal example:
field = MyField()
tmp = field.root  # or field.context (as it uses self.root)
field.bind('name', parent)
Expected behavior
After the minimal example runs, field.context and field.root should return correct values, based on the parent where the field was just bound to. So either there should be no caching (did someone measure this and found it to be a performance bottleneck?) or the cache should be invalidated after the field is bound.
Actual behavior
After the minimal example runs, both field.context and field.root now point to the wrong thing due to caching.