MosheBerman commented on 18 Apr 2016 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
According to the OP on this Stack Overflow question, submitting a list as multipart/formdata, and then running it through a validator returns a list with a string containing all of the fields, instead of a list of the fields.
Set up a DFR website.
Upload data encoded as multipart/formdata
Run it through a ListField validator.
Expected behavior
Data submitted as multipart/formdata and then validated should be returned as a list.
Actual behavior
The output of the validation is an array of a single string.
Notes
I don't know what versions of Python/Django/DRF the OP was using, but I'm using Django 1.9.4, and DRF 3.3.2.
The original conversation was here: http://stackoverflow.com/q/36696285/224988
From the OP:
Users = ['x1','x2']
In my serializer create method I try to iterate over them:
users = validated_data.get('users', None)
for user in users:
    print(user)
    print("===")
The output I receive is:
x1,x2
===
In my answer there, I traced through the ListField and the ListSerializer and guessed (correctly) that the to_representation method in the serializer was flattening the data.
Is this the intended behavior?
Possibly related issues: #3685, #3864, #3970