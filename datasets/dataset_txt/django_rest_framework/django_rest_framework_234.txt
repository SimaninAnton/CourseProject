Contributor
johnthagen commented on 1 Feb 2019
This feature request is based upon this SO post: https://stackoverflow.com/questions/22178266/django-rest-framework-raise-error-when-extra-fields-are-present-on-post
I was very surprised to find that the default behavior of ModelSerializer was to silently ignore extra, incorrect fields that are passed in. In my opinion, this masks errors (especially during development) because frontend components may be expecting the backend to use these. Or extra data could be being sent, because it's silently ignored it goes undetected for a long time.
It seems like something like the following could be added to at least let users opt-in to strict checking:
class StrictModelSerializer(ModelSerializer):
    """ModelSerializer that ensures that no extra fields are present."""

    def validate(self, attrs):
        unknown_keys = set(self.initial_data.keys()) - set(self.fields.keys())
        if unknown_keys:
            raise ValidationError("Got unknown fields: {}".format(unknown_keys))
        return attrs
Sure, each user could define this in their project, but it seems fundamental enough that this should be built in in some way.