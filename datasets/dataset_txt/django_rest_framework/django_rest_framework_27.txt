wucipo commented on 22 Nov 2019
Steps to reproduce
Model like under:
class User(models.Model):
  username= models.CharField(blank=True, null=True, max_length=100)

class ExtraUser(User):
  nickname= models.CharField(blank=True, null=True, max_length=100)
  kid= models.CharField(unique=True, max_length=32)
  watermark= JSONField(max_length=100, label="watermark")
Serializer
class UserDetailSerializer(serializers.ModelSerializer):
    class Meta:
      model = ExtraUser
      exclude = ('kid', 'watermark')

class NestedSerializer(serializers.Serializer):
   ssid= serializers.CharField(read_only=True)
   user = UserDetailSerializer(read_only=True, required=False)
   name = serializers.CharField(write_only=True)
  
    def create(self, validated_data):
      name = validated_data['name']
      ssid = name[1::]
      user = ExtraUser.object.filter(username=name)
      return {
         'ssid': ssid,
         'user': user
      }
Expected behavior
{
  "ssid": "xxxx",
  "user": {
    "watermark": {
      "city": "USA",
      "room": "123123"
    }
  }
}
Actual behavior
'dict' has no attribute 'watermark'
I found problem is that field has no attribute 'JSONField' include.!!