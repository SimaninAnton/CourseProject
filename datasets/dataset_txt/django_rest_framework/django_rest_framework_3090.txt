Contributor
ulmus commented on 12 Apr 2012
We use DRF for an internal API made for consumption by a backbone + backbone-relational client. This means that it would be very good if we could send foreign keys as integer id:s and arrays of id:s.
For foreignkeys, this is pretty straightforward, put up a rename list on the resource, specify the foreign key field id-field (eg user_id) and rename it to the foreign_key field (user) (additional benefit of saving an SQL query).
For m2m fields, it's a bit harder. Currently we add a method to the resource with the same name as the field and in that method we return an array of id's. It would be great if this could be automatized using the same syntax as the rest of the field definitions on the resource. Eg:
class UserProfileResource(ModelResource):
    model = UserProfile
   fields = ("occupation", "user")
This resource would output json something like this {"occupation" : "Programmer", "user" : {"first_name" : "Jens", "last_name" : "Alm", ... }}.
I suggest something on the form of:
class UserProfileResource(ModelResource):
    model = UserProfile
   fields = ("occupation", ("user", "__pk__"))
That would result in {"occupation" : "Programmer", "user" : 14}.
I tried to implement this myself, but I'm not really familiar enough with the DRF inner workings. If given some pointers however, I would gladly implement this if people agree that it is a good suggestion.