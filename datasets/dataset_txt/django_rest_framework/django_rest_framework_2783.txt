thongly commented on 9 Jul 2013
UPDATE ## - This may be quite relevant to the problem. The issue seems to occur only with a ForeignKey, and when the searched ForeginKey does not exist with the parameters specified in the RelatedField... (in my case, a PrimaryKeyRelatedField) I have updated the example below.
I have discovered a possible, obscure bug, or nuance that deserves explicit mention in the docs. I am using django-filter==0.6 and djangorestframework==2.3.6
In short, I am using the DjangoFilterBackend as my default_filter_backends. I have declared this globally in my settings.py
While a match returns the correct result(s) in all viewsets, there are certain cases when a non-match still returns all results - as if no filter parameters were specified. The strange part is that - while still using the "trouble viewset" - a correct match only returns the subset - as would be expected. The problem lies only in the results from a "non-match", and only affects some viewsets.
Example...
class MyModel(models.Model)
   name = ...
   age = ...
   school = models.ForeignKey(School)

class MySerializer(serializers.ModelSerializer):
    school = serializers.PrimaryKeyRelatedField()

    class Meta:
        model = MyModel
I am using a DefaultRouter with my viewsets
/routers/MyModelViewset/?school=1
--> This will return the correct results - School 1
/routers/MyModelViewset/?school=2
--> as expected, nothing is returned.
NOTE: A school with pk=2 DOES exist
/routers/MyModelViewset/?school=5
--> I would have expected nothing to be returned, yet all entries are returned.
NOTE: There is no school with pk=5
I think this may be an obscure bug