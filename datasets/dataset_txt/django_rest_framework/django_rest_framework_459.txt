Contributor
gthieleb commented on 10 Mar 2018
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
create model including UUIDField
models.py:
class Planning(models.Model):
    uuid = models.UUIDField(default=uuid.uuid4, unique=True, editable=False, verbose_name="UUID")
    middleware = models.ForeignKey(Middleware, to_field='name',
     verbose_name='Middleware', on_delete=models.CASCADE)
serializers.py:
class PlanningSerializer(serializers.ModelSerializer):


    class Meta:
 model = Planning
 fields = '__all__'
Expected behavior
meta for serializer should return
    "actions": {
 "POST": {
     "uuid": {
         "type": "string",
         "required": true,
         "read_only": false,
         "label": "UUID"
     },
Actual behavior
meta for serializer returns
    "actions": {
 "POST": {
     "uuid": {
         "type": "field",
         "required": false,
         "read_only": true,
         "label": "UUID"
     },