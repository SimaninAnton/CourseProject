IainColledge commented on 16 Nov 2016
RequestsClient() should make use of the session.cert parameter as per the requests module and Session class it inherits from.
This is for example when using SSL with a client side certificate + unencrypted key to identify the client.
Steps to reproduce
Using requests directly:
    cert = (cert_path,key_path)
    session = requests.Session()
    session.cert = cert
    response = session.get(url=url+"apilistresponse/")
Results in code working as expected, using RequestClient():
    cert = (cert_path,key_path)
    client = RequestsClient()
    client.cert = cert
    response = client.get(url=url+"apilistresponse/")
Results in the server stating "Authentication credentials were not provided.", the cert is not being sent.
Expected behavior
Both requests.Session() and RequestsClient should be able to have the cert parameter set and used for connections.
Actual behavior
RequestsClient can have the parameter set but does not make use of the parameter and send the cert.
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)