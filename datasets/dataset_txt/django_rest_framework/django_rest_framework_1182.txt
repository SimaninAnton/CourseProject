iraj-jelo commented on 9 Jun 2016 â€¢
edited
Could i have a serializer by a recursive many to many with self?
I have these models:
class Category(models.Model):
    name = models.CharField(max_length=100)
    sub_categories = models.ManyToManyField(u'self', null=True, blank=True,
                                          through=u'SubCategory', symmetrical=False)

    def __unicode__(self):
        return self.name


class SubCategory(models.Model):
    from_category = models.ForeignKey(Category, related_name=u'from_category')
    to_category = models.ForeignKey(Category, related_name=u'to_category')

    def __unicode__(self):
        return self.from_category.name
in Tastypie, we could have something like below and this works:
class ParentCategoryResource(ModelResource):
    class Meta:
        queryset = Category.objects.all()
        resource_name = 'categories'
        authorization = DjangoAuthorization()
        authentication = MultiAuthentication(BasicAuthentication(), SessionAuthentication())
        always_return_data = True
        list_allowed_methods = ['get', 'post', 'put', 'delete']
        filtering = {
            "sub_categories": ALL_WITH_RELATIONS,
            "name": ALL,
            "id": ALL,
        }



class CategoryResource(ParentCategoryResource):
    sub_categories  = fields.ToManyField(ParentCategoryResource, 'sub_categories', related_name='related_to', null=True, blank=True, full=True, use_in='all')