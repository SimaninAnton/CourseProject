end0 commented on 14 Dec 2014
I've found that it's sometimes useful to have different serializers based on the action being performed in the ViewSet. Rather than overwriting the get_serializer_class function for each viewset, I propose a simple mixin which allows for "action-based serializers". Maybe not appropriate for a PR, but thought it useful in any case...
class ActionBasedSerializerMixin():
    """
    Mixin which allows for unique serializers for different ViewSet actions - retrieve, list, create, update, etc.

    Must override serializers with a dict of action=>serializer values
    serializers = {
        'list': ListSerializer,
        'retrieve': RetrieveSerializer,
        ...
        }
    """

    serializers = {}

    def get_serializer_class(self):
        assert self.action in self.serializers.keys(), "serializers dictionary must contain one key-value pair for each available action"

        return self.serializers.get(self.action)