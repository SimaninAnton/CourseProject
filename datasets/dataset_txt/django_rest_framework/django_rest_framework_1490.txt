cosmosgenius commented on 22 Oct 2015
We are having a scenario wherein we were using a HyperlinkedModelSerializer to serialize a model which is not under the request-response flow.
on DRF 3.1.x we would simple pass and empty request object to the serializer context which makes the url to be relative to root than having an absolute url.
https://github.com/tomchristie/django-rest-framework/blob/version-3.1/rest_framework/reverse.py
since DRF 3.2 there is an addition check in the request.GET to preserve the query param from the request object, which as you can see break the above flow.
https://github.com/tomchristie/django-rest-framework/blob/master/rest_framework/reverse.py#L52
So the question is how can we use HyperlinkedModelSerializer without the request context? Getting a relative url to the root is an acceptable scenario than having no urls at all.
Sample code
data = PostsSerializer(post, context={'request': {}}).data
This flow doesn't have request object. eg: Get a data from third party using celery beat. Storing in db. Serializing it to json and sending it to firebase, The same data can be fetched via DRF directly or via firebase.