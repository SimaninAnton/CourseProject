jtiai commented on 26 Mar 2014
Currently DRF doesn't run validations if there are other validations errors from fields.
This makes writing user friendly API slightly difficult:
Provided that I have following serializer:
class MySerializer(serializers.Serializer):
    applicant_name = serializers.CharField()
    applicant_zipcode = serializers.CharField(required=False)
    applicant_city = serializers.CharField(required=False)

    def validation(self, attrs):
        if not (attrs['applicant_zipcode] or attrs['applicant_city']):
            raise ValidationError("Either zipcode or city or both must be provided")
        return attrs
Now if I submit empty data only error in name field is revealed for end user. So fixing single error only cause next data submit to show second error about combined fields.
Django 1.5 changed validation so that all fields that pass validation will retain value in form cleaned_data structure thus allowing running more comprehensive validation in form wide clean-method.
DRF could follow the same convention and allow validation to be run even there are field errors.