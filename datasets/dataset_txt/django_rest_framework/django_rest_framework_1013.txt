kgeorgy commented on 14 Oct 2016
FloatField should use the user current local to parse float value
The FloatField fail to parse float value with coma (ex. 17,456) which is used by some local float format (for example with French locale).
The problem with that is if you are using the TemplateHTMLRenderer, it will fill the html field with a value with a coma, and that will cause an 'A valid number is required.' error when submitting the form.
I don't know if it is more a parser issue or a FloatField issue, or if we need to add a "localize" parameter to the FloatField like for the DecimalField.
Steps to reproduce
Set LANGUAGE_CODE = 'fr-ch' in the django project settings.
Create a serializer with a FloatField, and make it point on an instance having a float value like 2.34.
Render the serializer using an TemplateHTMLRenderer and {% render_form serializer %} in the template.
Observe that the value in the input field is 2,34 (with a coma).
Submit the form (be sure to call .is_valid() on the serializer in the processing view)
You have an 'A valid number is required.' ValidationError.
Expected behavior
The FloatField (or the parser?) should use the current context locale to parse the float value (at least for form encoded data).
Actual behavior
The float value is rendered using the user locale when rendering template but not when parsing the float value.