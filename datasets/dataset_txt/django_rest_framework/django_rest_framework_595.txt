frishberg commented on 3 Nov 2017
I am working on an API that uses the django-rest-framework. We use ModelViewSets to present our results. Using PAGE_SIZE in our settings.py allowed us to paginate the results. However, recently this pagination stopped working. In our project's requirements, we had pinned djangorestframework~=3.6; a redeployment of our app recently picked up version 3.7, which incorporated the change from 107e8b3.
As a workaround, we are setting DEFAULT_PAGINATION_CLASS in our settings.py. (We could, of course, also have pinned our minor version exactly.) However, the documentation states that "Pagination is only performed automatically if you're using the generic views or viewsets." I believe this is out of date.
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
Extend ModelViewSet and direct a view to it per API instructions
Set PAGE_SIZE to 20 in settings.py
Observe that there is no pagination
Expected behavior
PAGE_SIZE should work for any ViewSet which extends the generic viewsets.
Actual behavior
PAGE_SIZE is ignored unless DEFAULT_PAGINATION_CLASS is set explicitly.