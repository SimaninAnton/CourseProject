alex1vanchik commented on 19 Jul 2017
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
create a model Test with a test_filed like:
class TestModel(models.Model):
    test_field = models.BooleanField(blank=False)
create ModelSerializer like:
class TestSerializer(serializers.ModelSerializer):
    class Meta:
        fields = ('test_field',)
        model = TestModel
Create view and send to it empty parameters {}
Expected behavior
The serializer will see that the test_field in the model blank=False and automatically set required=True. Accordingly, the user sees an validation error that the test_field is required(code 400).
Actual behavior
User receives a fatal error django.db.utils.IntegrityError: NOT NULL constraint failed: test_field
If set on the serializer test_field = serializers.BooleanField(required=True) will be work fine.