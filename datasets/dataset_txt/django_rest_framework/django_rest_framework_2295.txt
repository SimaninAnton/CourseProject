Member
tomchristie commented on 5 Nov 2014
Cloning remaining task list from #1800 now that we've merged that into master.
Main remaining considerations are:
Finalising work on serializers as HTML forms.
Design decision on ListSerializer and init issues (possibly just push it back into Serializer)
The 3.0 release notes are available here.
Discussion group thread on 3.0 changes... https://groups.google.com/forum/#!topic/django-rest-framework/24rSIFWEJoI
To do:
Basic serializers as forms
unique, unique_together.
.validate() method on fields.
FileField and ImageField.
ListField vs ListSerializer.
BaseSerializer to accept many, partial, context.
request.data and request.query_params.
Automatic field binding.
many=True on relational fields.
Comprehensive tests for serializer fields & serializers.
Integration tests for serializer relationships
Support extra_kwargs.
NotImplementedError by default on field to/from methods.
Consider to_representation() and to_internal_value() renaming.
MethodField back to SerializerMethodField, support optional method argument.
Ensure NON_FIELD_ERRORS get a consistent key name in responses.
BooleanField to validate more strictly. (See #1866.)
through fields as read-only.
Nice manager representations on serializer repr.
Drop label keyword argument when its default would be correct.
lookup_class to raise KeyError, and ModelField.field_mapping to include models.Field: ModelField mapping.
Compact JSON representation.
Unicode JSON representation with control character escaping.
Remove custom throttle header.
Use Django's GCBV latest .all() behavior instead of._clone()`, here.
Document DecimalField - required args, and coerce_to_string behaviour.
Consider default settings for datetime repr - coerce to string at serializer level by default?
Drop usage of validators.EMPTY_VALUES
Correct class on nested ModelSerializer vs HyperlinkedModelSerializer
Drop defunct tests.
Drop transform_<field_name> and document in release notes.
Drop Field.validate and document in release notes.
Second pass:
Blank date returns incorrect validation error.
Form buttons in browsable API.
ValidationFailed to use errors, not detail?
List serializers as forms to render as 'not supported'
Nested choices.
default=None, default='' on allow_none, allow_blank
Serializers as forms cleanup.
Model field validators should be preserved.
Validators on relational fields.
Style of validation errors inside ListField, ManyRelation, ListSerializer.
test_lists.py from core serializers.
tests for dotted source notation.
ListSerializer and keyword arguments design decision, see... https://groups.google.com/d/msg/django-rest-framework/24rSIFWEJoI/ziZ8zzEOAa4J
Nested serializers as forms.
unique_for_date.
source=<field_name> and method_name=get_<field_name> -> PendingDeprecation, not assert.
Call any simple callables when getting attribute value... https://groups.google.com/forum/#!topic/django-rest-framework/24rSIFWEJoI
Reintroduce save hooks.
PendingDeprecation instead of outright changes.
Consider transform_<field>().
validate returning value or not?
Integration tests for serializer reverse relationships.
tests for Generic FKs.
Consider error lists vs single error.
min_value, max_value on integer fields. (See also django-12030, and associated PR.)
None-list passed to ManyRelation or ListSerializer.
empty / initial on fields and empty serializer data.
Deal with datetime being passed to TimeField or DateField.
Don't include validator kwargs on read only fields.
NullBooleanField.
OPTIONS and the metadata() API.
partial support.
allow_none, allow_blank & required vs default behaviours.
Documentation:
Update the tutorial.
The metadata API.
Validators.
PUT as create, including missing link to docs for PUT-as-create, here when they exist.
Update DateTimeField/DateField/TimeField now that format default has changed.
NullBooleanField
ListField
Document min_value/max_value on integer type fields, as per django/django@1506c71
Remove widget and document style.
Better docs on custom exception handling in release notes.
Autocomplete widget docs no longer correct.
Request API (and check parser API?)
lookup_url_kwarg on serializer fields
Update the tutorial repo https://github.com/tomchristie/rest-framework-tutorial Non blocking. Raised as #2131
ListSerializer
Note possible external packages as part of 3.1 for allow_add_remove etc.
Docs on custom list update/create
ensure raise_exception is documented.
Document examples of nested serialization.
Link to old REST framework 2 docs, and include prominent note.
Update url_field_name/lookup_field etc notes in serializer docs.
"Built with MkDocs"
Nice to haves:
dotted source on relational fields (get_attribute and get_iterable)
Validators defined on Meta
Errors on serializer forms.
Errors as sorted dicts.
Performance on PK fields.
Support ReadOnlyField automatically based on fields attribute.
Error when source == field_name.
Error when SerializerMethodField argument is == get_{field_name}
Nice error messages when fields includes something that is not a field, reverse relationship or simple model method.