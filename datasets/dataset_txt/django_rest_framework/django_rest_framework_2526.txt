korfuri commented on 28 May 2014
Probably identical to the poorly explained #1581
When defining a serializer for a model with a non-editable ForeignKey:
class Foo(Model):
   bar = ForeignKey(Bar, editable=False)

class FooSerializer(Serializer):
   class Meta:
       fields = ('bar',)
DRF raises an exception on every request with:
AssertionError: Cannot set required=True and read_only=True
This happens at HEAD but not in 2.3.13.
This comes from 04315c1 which sets read_only on related fields when the model field is editable=False. I'm not sure whether the whole situation is good, even though I can't pinpoint with certainty the flaw on any of the points at play here:
non-editable fields generate read_only serializer fields: this makes perfect sense
non-nullable fields generate required serializer fields: this makes sense too
a model field can be editable=False and non-nullable: this makes sense because editable only applies when modifying the object
a serializer field can't be read_only and required: this seems to make sense. That's the point I'm not sure about: it seems that read_only applies to edits only, so this check might be wrong.
Can someone with more knowledge of the framework advise? I'm happy to submit a patch but I don't know which part should be fixed.