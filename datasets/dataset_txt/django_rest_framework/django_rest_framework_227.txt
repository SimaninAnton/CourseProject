arielpontes commented on 11 Feb 2019 â€¢
edited
Let's say I have the following model:
class Track(models.Model):
    album = models.ForeignKey(Album)
    name = models.CharField()
    number = models.CharField()
And serializer:
class TrackSerializer(serializers.ModelSerializer):
    class Meta:
        model = Track
        fields = ('name', 'number', 'album_name')
And view:
class TrackListView(generics.ListAPIView):
    def get_queryset(self):
        return Track.objects.annotate(album_name=F('album__name'))
Accessing this view will result in the following error:
ImproperlyConfigured: Field name `album_name` is not valid for model `Track`.
If I try to specify this custom field manually, like this:
class Track(serializers.ModelSerializer):
    album_name = serializers.CharField(source='album_name')
    class Meta:
        model = TrackSerializer
        fields = ('name', 'number', 'album_name')
I get the the following error:
AssertionError: It is redundant to specify `source='album_name'` on field 'CharField' in serializer 'TrackSerializer', because it is the same as the field name. Remove the `source` keyword argument.
If I remove the source keyword argument, it works. Isn't it redundant to have to specify the field manually though?