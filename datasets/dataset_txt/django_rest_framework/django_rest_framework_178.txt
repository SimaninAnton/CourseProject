wakaryry commented on 3 Apr 2019
Steps to reproduce
class ClubValidateSerializer(serializers.ModelSerializer):
    user = serializers.HiddenField(default=serializers.CurrentUserDefault())

    class Meta:
        model = Club
        fields = ('id', 'validated', 'user')
        read_only_fields = ('id',)

    def update(self, instance, validated_data):
        if instance.validated == validated_data['validated']:
            return instance
        history = ClubValidateHistory(club=instance, validator=validated_data['user'],
                                      from_state=instance.validated, to_state=validated_data['validated'])
        instance.validated = validated_data['validated']
        instance.save()
        history.save()
        return instance
Expected behavior
I want to get the user field in validated_data, but it throws KeyError. It from a patch update.
Actual behavior
history = ClubValidateHistory(club=instance, validator=validated_data['user'],
KeyError: 'user'
"PATCH /backend/clubs/4/validate/ HTTP/1.1" 500 17633