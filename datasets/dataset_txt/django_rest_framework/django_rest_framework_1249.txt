Contributor
OJFord commented on 1 Apr 2016
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
class ModelSerialiser(serializers.ModelSerializer):
    class Meta():
        model = Model
        fields = (
            # big list
        )
Create a ViewSet with a partial_update method
Expected behavior
Be able to use the PATCH method without all fields.
Actual behavior
Unable to use the PATCH method unless all fields present (equating it to PUT).
This has been addressed before in #965, which saw the introduction of partial=True for serializers.*Field properties.
However, the issue here is that with many fields, or really however many there are, it's frustrating to have to list them 'manually' just to be able to add partial=True:
field1 = serializers.CharField(
    # copy out params from model
    , partial=True
)
# ...
fieldN = # ...
It would be great if we could add partial = True to Meta in order to apply this to all fields; or better yet, an iterable in the same way as fields (it could then be partial = fields in order to apply to all).