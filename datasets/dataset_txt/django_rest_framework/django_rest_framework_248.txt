saintcrawler commented on 8 Jan 2019
django-rest-framework/rest_framework/generics.py
Line 164 in 7749e4e
 self._paginator = self.pagination_class() 
Most classes in DRF allow overriding default fields dynamically by .get_() methods. So that you can provide different values depending on current request, for example.
I wonder why there is no possibility to do that for paginator? In my case I want to use Limit-Offset pagination by default and Cursor pagination if a certain key is passed to request.query_params.
I solved it with this code:
    @property
    def paginator(self):
        if not hasattr(self, '_paginator'):
            self._paginator = MyCursor() if 'cursor' in self.request.query_params else pagination.LimitOffsetPagination()
        return self._paginator
But I think it would be more naturally to replace the line I pinned at the top by this:
 self._paginator = self.get_pagination_class()()
...
...
def get_pagination_class(self):
    return self.pagination_class
What do you think?