Contributor
mammique commented on 14 Mar 2013
Hi, I think that I would be convenient to be able to specify for what use we are requesting a serializer via get_serializer(). For example, we may want the generic RetriveUpdateAPIView to use two different serializers for retrieving or updating the data, the first one would be data representation oriented, and the second one form oriented (it's sometimes tricky to design a single one that does well both jobs). Thus, the get_form() function of the renderer could pass the method_action='update' argument to get the proper serializer for that case. What would you guys think about that? I can hack this in a fork if you think it would be useful for you too. I'm thinking of something like:
Briefly, I'm thinking of something like:
class MyView(RetrieveUpdateAPIView):
    serializer_class = DefaultSerializer
    serializer_retreive_class = MyObjectRetrieveSerializer
    serializer_update_class = MyObjectUpdateSerializer

    # Head of the function that `RetrieveUpdateAPIView` would inheritate from.
    def get_serializer(self, instance=None, data=None,
                       files=None, many=False, partial=False, method_action=None):