Contributor
jmagnusson commented on 31 Oct 2012
Awesome work on v2, I'm really liking what I've seen so far. Big thumbs up!
One problem arose when I was migrating from tastypie to DRF. I use Django's cache framework to cache everything on the site I'm developing (it's very read-heavy), but when I try to access the API I get TypeError: can't pickle _Input objects. It works just fine with caching disabled.
It should be noted that I use nginx + uwsgi instead of the internal dev server.
Here's the traceback:
Traceback (most recent call last):
  File ".../lib/python2.7/site-packages/django/core/handlers/wsgi.py", line 241, in __call__
    response = self.get_response(request)
  File ".../lib/python2.7/site-packages/django/core/handlers/base.py", line 192, in get_response
    response = self.handle_uncaught_exception(request, resolver, sys.exc_info())
  File ".../lib/python2.7/site-packages/django/core/handlers/base.py", line 221, in handle_uncaught_exception
    return debug.technical_500_response(request, *exc_info)
  File ".../lib/python2.7/site-packages/django/core/handlers/base.py", line 188, in get_response
    response = middleware_method(request, response)
  File ".../lib/python2.7/site-packages/django/middleware/cache.py", line 112, in process_response
    lambda r: self.cache.set(cache_key, r, timeout)
  File ".../lib/python2.7/site-packages/django/template/response.py", line 91, in add_post_render_callback
    callback(self)
  File ".../lib/python2.7/site-packages/django/middleware/cache.py", line 112, in <lambda>
    lambda r: self.cache.set(cache_key, r, timeout)
  File ".../lib/python2.7/site-packages/redis_cache/cache.py", line 218, in set
    result = self._set(key, pickle.dumps(value), int(timeout), client, _add_only)
  File "/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/copy_reg.py", line 70, in _reduce_ex
    raise TypeError, "can't pickle %s objects" % base.__name__
TypeError: can't pickle _Input objects
_Input object is of type uwsgi._Input