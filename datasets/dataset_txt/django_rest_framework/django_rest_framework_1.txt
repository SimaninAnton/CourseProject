ryo-ma commented 2 days ago â€¢
edited
Environment
python3.8
Django 2.2.9
restframework 3.11.0
Steps to reproduce
class MySerializer(serializers.Serializer):
    my_field_name = serializers.CharField(max_length=32, source='myFieldName') # does not recognize source

class MyAPIView(APIView):
    def get(self, request, pk):
        data = {'myFieldName': 'xxxxxxxx'}
        serializer = MySerializer(data=data)
        serializer.is_valid()
        return Response(serializer.data)
        # > serializer.data => {}
serializer.data is empty dict.
I got following errors when I executed a serializer.errors.
{'myFieldName': [ErrorDetail(string='This field is required.', code='required')]}
I seemed that does not work source parameter in serializers.Serializer.
However, the source parameter is working when I used the many parameter.
serializer.data is [OrderedDict([('my_field_name', 'xxxxxx')])]
class MySerializer(serializers.Serializer):
    my_field_name = serializers.CharField(max_length=32, source='myFieldName')

class MyAPIView(APIView):
    def get(self, request, pk):
        data = [{'myFieldName': 'xxxxxxxx'}] # Change to list data.
        serializer = MySerializer(data=data, many=True) # Insert a `many` parameter.
        serializer.is_valid()
        return Response(serializer.data)
        # > serializer.data => [OrderedDict([('my_field_name', 'xxxxxx')])]
Expected behavior
I would like to success validation using the source parameter.
I will get OrderedDict([('my_field_name', 'xxxxxx')]) from the serializer.data
Actual behavior
serializer.data is empty dict.
I got following errors when I executed a serializer.errors.
{'myFieldName': [ErrorDetail(string='This field is required.', code='required')]}