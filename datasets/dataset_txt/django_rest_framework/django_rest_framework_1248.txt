matwey commented on 3 Apr 2016
I am running django-rest-framework 3.3.3 with python 2.7 and Django 1.9.2 and see the following.
When I use Django @override_settings and APILiveServerTestCase, then something seems to be not in sync.
api_settings.DEFAULT_AUTHENTICATION_CLASSES has correct value, but actual request authenticators are different. I've prepared reduced (as simple as I could) test-case to show where the issue exactly is. Unfortunately, gists don't allow directories, so I put it on my github https://github.com/matwey/drf-effective-doodle
Even this is a feature rather than the bug, it is not clear why this works in the way it does.
Steps to reproduce
git clone https://github.com/matwey/drf-effective-doodle
python runtests.py
Expected behavior
All tests are ok
Actual behavior
Second test fails
test_upload1 (tests.test_all.ClientTest) ... ok
test_upload1 (tests.test_all.TokenClientTest) ... FAIL

======================================================================
FAIL: test_upload1 (tests.test_all.TokenClientTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/matwey/lab/drf-liveserver-case/tests/test_all.py", line 8, in test_upload1
    self.assertEqual(r.json()['message'],'Hello, world!')
AssertionError: u'Hello, RoBurToVoy!' != 'Hello, world!'

----------------------------------------------------------------------
Ran 2 tests in 1.005s

FAILED (failures=1)
 OK
[<rest_framework.authentication.SessionAuthentication object at 0x7f7b9bafc110>, <rest_framework.authentication.BasicAuthentication object at 0x7f7b9bafc150>]
[<class 'rest_framework.authentication.SessionAuthentication'>, <class 'rest_framework.authentication.BasicAuthentication'>]
[<rest_framework.authentication.SessionAuthentication object at 0x7f7b97cdad50>, <rest_framework.authentication.BasicAuthentication object at 0x7f7b97cdadd0>]
[<class 'rest_framework.authentication.TokenAuthentication'>]
Destroying test database for alias 'default' (':memory:')...