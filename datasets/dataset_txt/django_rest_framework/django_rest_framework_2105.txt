Camel commented on 2 Jan 2015
Here's my unfortunate situation:
I have two models, Comment and SubComment, but in a multi-tenant system, meaning users are only able to access specific sub-comments (owned by the organization to which they belong, obviously determined by the logged-in user at runtime).
When users POST to /sub_comments to create a SubComment, they are required to pass a comment_id to denote the Comment to which the newly created SubComment will belong. While I can very simply set the queryset parameter on the comment field in the SubComment serializer to be Comment.objects.all(), I think this actually poses a security issue because a user could pass any arbitrary comment id (even one that doesn't belong to their organization). I'm honestly not totally sure what specific issues that would introduce, but I'm not really excited to find out, so I'd like to prevent it from happening.
What I need to do is have some type of get_queryset function on the comment field in the SubComment serializer, so I can at runtime adjust the queryset to something like Comment.objects.filter(user.organization=request.user.organization), which would fix the security issue by limiting the acting user's access to only comments belonging to his/her organization.
This whole issue may be negated by some misunderstanding I have with how this framework works, so I apologize in advance if that is the case, but in any event would really appreciate some guidance here.
Thanks very much in advance.