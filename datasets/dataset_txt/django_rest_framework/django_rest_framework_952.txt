Contributor
COCOLMAN commented on 5 Dec 2016 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
Yes I tested with the same version as the master, and I have identified the same problematic code.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
class CommentSerializer(serializers.ModelSerializer):
    class Meta:
        model = Comment
        fields = ('pk', 'comment', 'created_date')

class PhotoSerializer(serializers.ModelSerializer):
    class Meta:
        model = Photo
        fields = ('pk', 'photo')

class PostSerializer(serializers.ModelSerializer):
    photos = PhotoSerializer(many=True, source='photo_set')
    comment = CommentSerializer(many=True, source='comment_set')

    class Meta:
        model = Post
        fields = ('content', 'photos', 'comment')

    def create(self, validated_data):
          . . . . .
Expected behavior
validated_data is {'content': 'validated_value', 'photo_set': 'validated_value', 'comment_set': 'validated_value'}
Actual behavior
validated_data {'content': 'validated_value', 'photo_set': [], 'comment_set': []}