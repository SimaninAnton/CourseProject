lheckemann commented on 21 May 2015
When None is passed into a ModelSerializer which has SerializerMethodFields defined, these fields will be skipped in its data:
class SomeModel(models.Model):
  pass

class SomeModelSerializer(serializers.ModelSerializer):
  def get_one(self, obj):
    return 1
  one = SerializerMethodField()
  class Meta:
    model = SomeModel
    fields = ('one',)

# SomeModelSerializer(None).data = {}
# SomeModelSerializer(SomeModel()).data = {'one': 1}
This seems somewhat incongruous to me, I would expect it to still call the method.
The behaviour is caused by the Serializer falling back to get_initial(), which skips over the read-only SerializerMethodField.