g00fy- commented on 15 Aug 2011
what about this ?
class ListModelMixin(object):
    """
    Behavior to list a set of `model` instances on GET requests
    """

    # NB. Not obvious to me if it would be better to set this on the resource?
    #
    # Presumably it's more useful to have on the view, because that way you can
    # have multiple views across different querysets mapping to the same resource.
    #
    # Perhaps it ought to be:
    #
    #1) View.queryset
    #2) if None fall back to Resource.queryset
    #3) if None fall back to Resource.model.objects.all()
    #
    # Any feedback welcomed.
    queryset = None

    def get_queryset(self):
        if self.queryset is None:
            self.queryset = self.resource.model.objects.all()
        return self.queryset

    def get(self, request, *args, **kwargs):
        model = self.resource.model

        queryset = self.get_queryset()

        if hasattr(self, 'resource'):
            ordering = getattr(self.resource, 'ordering', None)
        else:
            ordering = None

        if ordering:
            args = as_tuple(ordering)
            queryset = queryset.order_by(*args)
        return queryset.filter(**kwargs)
this would enable for example, integration with django-filter (overwrite get_queryset instead of whole get()).