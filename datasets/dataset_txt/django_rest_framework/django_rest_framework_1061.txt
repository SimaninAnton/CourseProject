melinath commented on 9 Sep 2016 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
Set up a model with a related model.
Use that related model in the __str__ method of the model.
Set up a viewset / HyperlinkedModelSerializer / etc. for the model with no nesting and no select_related() call.
Expected behavior
The API should run one query to fetch the data to be serialized to JSON.
Actual behavior
The API runs one query to fetch the data to be serialized. And then it runs N queries by calling get_name on each object (which calls __str__, which references the related model).
I suppose you could say that this is my fault for not having a 100% pure __str__ method - but sometimes practicality beats purity. __str__ for me is primarily supposed to make it easy for me to tell what an object is when introspecting it in the shell or some other situation. I would also expect it to be called, say, when I'm in the admin looking at a list of objects and their representations.
I would not expect it to be called when I'm looking at a JSON serialized version of the model that doesn't even use the results of the method anywhere. This seems like a pretty big potential pitfall that people might not even realize they're walking into.
Potential solutions:
make it lazy somehow?
don't call it if the format is JSON?