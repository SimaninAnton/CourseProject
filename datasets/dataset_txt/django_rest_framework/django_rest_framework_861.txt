Contributor
COCOLMAN commented on 18 Mar 2017
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
If there is 1 app, no problem occurs.
but if there are two apps
# root/urls.py

urlpatterns = [
    url(r'^admin/', admin.site.urls),
    url(r'^post/', include('post.urls')),
    url(r'^member/', include('member.urls')),
    url(r'^docs/', include_docs_urls(title='My API title'))
]
# post/urls.py

urlpatterns = [
    url(r'^create/$',  views.PostCreate.as_view(), name='post-create')
]
#member/urls.py

urlpatterns = [
    url(r'^signup/', views.UserSignup.as_view(), name='member-signup')
]
No function can be performed.
('Model', 'serializer', and 'view' are not important.)
This problem occurs because the 'common_path' function in 'shemas.py' does not work properly.
If the 'common_path' function does not work properly, it will eventually produce the wrong schema.
Check the schema in the schemaview class.
There is an incorrect value.
Here is the value in the example.
# schema value
<My API title "http://127.0.0.1:8000/docs/schema.js">
    member: {
        signup: {
            create(name, password, [email])
        }
    }
    post: {
        create: {
            create(title, author, [content])
        }
    }
It does not work because there is a dict inside dict.
There is a fun test.
If you change 'root / urls.py' to something like this, it works as expected.
# root/urls.py
urlpatterns = [
    url(r'^admin/', admin.site.urls),
    url(r'^post', include('post.urls')), # '/' been removed.
    url(r'^member', include('member.urls')), # '/' been removed.
    url(r'^docs/', include_docs_urls(title='My API title'))
]
# schema value

<My API title "http://127.0.0.1:8000/docs/schema.js">
    membersignup: {
        create(name, password, [email])
    }
    postcreate: {
        create(title, author, [content])
    }
This is not a solution,
You can see that it works anyway.
The solution to this problem is not to use the subpath in the get_links method in the schemaGenerator class.
As mentioned in # 5002, if you use the method to display all the paths, it is a simple solution.
I can't found any problems with this solution.
Please let me know if you have any additional advice.
If everything is confirmed and then requested, I will send a pull request.
1