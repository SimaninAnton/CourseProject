Ales86 commented on 29 Sep 2015
I have a Django Model defined as follows:
class TestModel(models.Model):
    """
    Test model
    """
    id = models.SmallIntegerField(primary_key=True, editable=False)
    name = models.CharField(max_length=64, editable=False, unique=True)
    transparent = models.BooleanField(blank=False, null=False)
    hex_code = models.CharField(max_length=7, blank=False, null=False)
Specifically, I expect the fields transparent and hex_code should be considered as required:DjangoDoc
The ModelSerializer has been left with the default values:
class TestModelSerializer(serializers.ModelSerializer):
    class Meta:
        model = TestModel
Opening a shell and typing the following:
from myapp.serializers import TempModelSerializer
serializer = TempModelSerializer()
print repr(serializer)
This is what I see:
TempModelSerializer():
    id = IntegerField(read_only=True)
    name = CharField(read_only=True)
    transparent = BooleanField(required=False)
    hex_code = CharField(max_length=7)
The required parameter for some reason is set to False instead of True (when not present, the default should be True, right? DRFDoc)
Lastly, if I send a POST request with the following body:
{
    "hex_code": "#FFaFFF"
}
The validator validates the message as correct even though some fields (e.g. name which should be required=True by default) have not been sent.