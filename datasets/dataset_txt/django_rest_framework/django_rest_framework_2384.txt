stickperson commented on 17 Sep 2014
I'm nesting a serializer with the hopes of creating multiple instances with a single POST request:
class ToDoItemSerializer(serializers.ModelSerializer):
    class Meta:
        model = ToDoItem
        fields = ('text', 'is_completed')

class ToDoListSerializer(serializers.ModelSerializer):
    item = ToDoItemSerializer()

    class Meta:
        model = ToDoList
        fields = ('title', 'items')

class ToDoListCreate(APIView):

    def post(self, request):
        serializer = ToDoListSerializer(data=request.DATA)
        if serializer.is_valid():
            serializer.save()
            return Response(serializer.data, status=status.HTTP_201_CREATED)
        return Response(serializer.errors, status=status.HTTP_400_BAD_REQUEST)
When my POST data contains information about an item, everything works fine. A new ToDoList is created with a nested ToDoItem. Sample POST data: {'title': 'test_title', 'item': {'text': 'test_text', 'is_completed': false}}
However, if I don't include an item I get an error "Cannot assign None: "ToDoList.item" does not allow null values." Sample POST data: {'title': 'test_title', 'item': null}
What methods have to be overwritten in the ToDoListSerializer? I thought it was save_object(), but I can't find out how to get it to work.