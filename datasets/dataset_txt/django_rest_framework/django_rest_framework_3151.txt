akheron commented on 26 Sep 2011
Both POST and PUT fields in the built-in admin-like UI seem to use POST internally. When trying to submit data, I always get a 403 response. It boils down to CSRF validation in UserLoggedInAuthentication:
        if request.method.upper() == 'POST':
            # Temporarily replace request.POST with .DATA,
            # so that we use our more generic request parsing
            request._post = self.view.DATA
            resp = CsrfViewMiddleware().process_view(request, None, (), {})
            del(request._post)
            if resp is not None:  # csrf failed
                return None
(At least in Django 1.3) CsrfViewMiddleware's process_view looks at request.POST['csrfmiddlewaretoken']. If I comment out the request._post = self.view.DATA line, it works as expected. So why is request._post replaced, and is it really needed?