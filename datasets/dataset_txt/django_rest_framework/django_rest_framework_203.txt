latusaki commented on 13 Mar 2019 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
Make a PATCH request against an Update endpoint, with payload keys that do no exist on serializer.
Expected behavior
Making a PATCH request, with keys that do not exist in the serializer, should return 400, based on https://www.django-rest-framework.org/api-guide/generic-views/#updatemodelmixin
"If the request data provided for updating the object was invalid, a 400 Bad Request response will be returned, with the error details as the body of the response."
Is this a case of wrong documentation? Just saw this issue: #4086
Actual behavior
Response is 200, no changes applied, but no error either
Additional Info
Found this while writing unittest for a very basic RetrieveUpdateDestroy endpoint on my application. The endpoint is backed by a ModelSerializer. When read-only values are passed through PATCH, no error is returned (although no edits happen either). If non-existent keys are passed, again no error. If correct keys are passed, partial update works.
Here is a unittest that I think demonstrates the issue:
latusaki@3e14274