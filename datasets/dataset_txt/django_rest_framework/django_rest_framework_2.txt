Contributor
kuter commented 7 days ago
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
models.py
from django.core.exceptions import ValidationError
from django.db import models


class Sample(models.Model):
    title = models.CharField(max_length=50)

    def clean(self):
        raise ValidationError('')
serializers.py
from rest_framework import serializers

from .models import Sample


class SampleSerializer(serializers.ModelSerializer):
    class Meta:
        model = Sample
        fields = '__all__'
forms.py
from django import forms

from .models import Sample


class SampleForm(forms.ModelForm):
    class Meta:
        model = Sample
        fields = "__all__"
tests.py
from django.test import TestCase

from .forms import SampleForm
from .serializers import SampleSerializer


class SampleTests(TestCase):
    def test_form(self):
        form = SampleForm({"title": "test"})
        self.assertFalse(form.is_valid())

    def test_serializer(self):
        serializer = SampleSerializer(data={"title": "test"})
        self.assertFalse(serializer.is_valid())
Expected behavior
ModelSerializer should respect Model clean() method
Actual behavior
It doesn't act like ModelForm, where docs says:
Often you'll want serializer classes that map closely to Django model definitions.