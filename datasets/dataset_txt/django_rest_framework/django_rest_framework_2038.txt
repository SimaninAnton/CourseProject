Contributor
thedrow commented on 2 Feb 2015
Goals
The purpose of this issue is to discuss how Django REST Framework could potentially gain significant performance boost when using NumPy arrays instead of Python dictionaries when serializing/deserializing objects.
As already proven by Monary using NumPy arrays instead of Python dictionaries leads to insane performance boost.
The goal of this issue is to decide whether we'd like to integrate it into the core or not and in which cases the speedups will be used.
If not introduced into the core the result of this research will be published into a third party package.
Course of action
The first actionable step is to decide when we want to compile NumPy.
I think that NumPy speedups should be completely optional and if NumPy is not available then DRF will resort to using Python's dictionary. Moreover I think that if DRF is being installed under PyPy NumPy should only be used if specified explicitly since NumPy only kinda works with PyPy.
After that we'll open a PR against this repository with contributions coordinated from my fork in order to prove that a speedup is even possible and that the speedups do not break any existing tests.
The fact that the PR exist does not mean it should or will be merged.
The next step as in #2499 is benchmarking.
After all this is done we can start discussing if we want this in the core or not. It will depend on how extensive the speedups will change the code.
Steps of implementation
Configure travis to install NumPy and create new build jobs that will run the tests using it
Preallocate a NumPy array according to the serializer's fields