protyagov commented on 9 Jun 2014
It would be nice to make APIException serializeable. This would allow such exception to be passed between servers. For example, you might have DRF running as one service and have different service for say celery workers dedicated to long running tasks. If exception is raised on the worker side I would like pass it back to DRF for further actions, such as presenting it to user.
Currently it is not possible.
According to celery web site
A rarely known Python fact is that exceptions must conform to some simple rules to support being serialized by the pickle module.
Tasks that raise exceptions that are not pickleable will not work properly when Pickle is used as the serializer.
To make sure that your exceptions are pickleable the exception MUST provide the original arguments it was instantiated with in its .args attribute. The simplest way to ensure this is to have the exception call Exception.init.
Currently init for API Exception looks like
#!python

    def __init__(self, detail=None):
        self.detail = detail or self.default_detail
Changing it to the following fixes the issue according to my tests:
#!python

    def __init__(self, detail=None):
        self.detail = detail or self.default_detail
        Exception.__init__(self, self.detail)