Member
tomchristie commented on 3 Dec 2014
This is the start of us formalizing our process for maintainers of the project. The aims for this are that the process is lightweight, and up to date.
What I'd like to try first is a quarterly renewal process whereby members must explicitly opt-in, or else drop out of the maintenance team for the next cycle. The size of the team is currently capped at 5 members. If new folks are seeking to be added to the team we can consider if we want to encourage anyone to cycle out for a period.
Suggestions of revisions to this process are welcome.
Renewing existing members.
The following people are the current maintenance team. Please checkmark your name if you wish to continue to have write permission on the repository for the Jan-Mar 2015 period.
@tomchristie
@xordoquy
@carltongibson
@kevin-brown
Members of this team are added as collaborators on the repository. Responsibilities are:
Merge pull requests.
Build and deploy the documentation.
Add triage labels.
Further notes for maintainers:
Code changes should come in the form of a pull request - do not push directly to master.
Maintainers should typically not merge their own pull requests.
Each issue/pull request should have exactly one label once triaged.
Search for untriaged issues with is:open no:label.
New members.
The following are seeking to be added to the maintenance team for Q1 2015. If you wish to be considered for this or a future date, please comment against this or subsequent issues.
@jpadilla - approved
Decisions on inclusions will currently be made on an informal basis by @tomchristie. We may choose to formalize this process at a future date.
Further notes.
The release manager for Q1 2015 is @xordoquy.
Responsibilities for the release manager are:
Merge 'release' pull requests when a release is finalized. (Confirm with @tomchristie)
Push the package to PyPI.
Deploy the documentation with mkdocs gh-deploy.
Send a message to the discussion group.
Send a message on twitter.
The PyPI package is owned by @tomchristie, and additionally has @j4mie as a backup owner. If I cease to work on the project for some reason it should be considered @j4mie's responsibility to manage the handing over of ownership of the project.