Contributor
vyscond commented on 15 Jan 2016
Hello everyone.
On my project i set the permissions below as the default:
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',
    ),
    'PAGE_SIZE': 10
}
Everything is working fine until i had to add a custom permissions in two of my classes. So just set the permissions directly on permission_classes attribute:
class MyModelCreate(generics.CreateAPIView):
    permission_classes = (permissions.IsVIPPermission,)
    queryset = models.MyModel.objects.all()
    serializer_class = serializers.MyModelSerializer
After a few hours getting the famous TypeError: int() argument must be a string, a bytes-like object or a number, not AnonymousUser i realized that view was not using the default permissions set on the settings. To solve the problem i just increase the permission_classes set to include the IsAuthenticated permission. No big deal.
So the scenario can resumed with: Every views needs an authenticated user to access them, but only VIP user can use create views.
Now i'm thinking: If need more views using my custom permission i will probably end up write a custom mixin class, right? On this in mind i think that with we have a additional permission_classes attribute like permission_classes_additional that could be used to read the new permissions and append them to the default ones loaded from the settings would be helpful this case.
I know that not that hard write a mixin class, but i thinking with can cut as many line as we can from the code this is a good thing for maintenance?
Beside that it's a wonderful framework, thank to make it free and open!