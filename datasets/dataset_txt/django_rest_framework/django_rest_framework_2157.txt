Contributor
thedrow commented on 15 Dec 2014
Using i18n_patterns as the following:
urlpatterns = i18n_patterns('',
    url('news', 'myviews.news', name='news')
)
urlpatterns = format_suffix_patterns(urlpatterns)
Breaks the LocaleMiddleware's assumption that localized urls are resolved using the LocaleRegexURLResolver class resulting in:
>>> from django.core.urlresolvers import reverse
>>> from django.utils.translation import activate
>>> reverse('news')
'/en-us/news/'
>>> activate('ja')
>>> reverse('news')
'/en-us/news/' # The returned value should be /ja/news/
Removing the call to format_suffix_patterns causes the reverse method to resolve the URLs correctly.
urlpatterns = i18n_patterns('',
    url('news', 'myviews.news', name='news')
)
>>> from django.core.urlresolvers import reverse
>>> from django.utils.translation import activate
>>> reverse('news')
'/en-us/news/'
>>> activate('ja')
>>> reverse('news')
'/ja/news/'
Could this be fixed and backported to 2.4?