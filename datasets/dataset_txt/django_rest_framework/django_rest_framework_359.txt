javiermatos commented on 3 Aug 2018
Description
I am using SessionAuthentication and TokenAuthentication. I have a JS frontend with a login page. When there is no cookie (created by session authentication) it works fine, but when the cookie is there (a valid cookie from a successful login using Django admin), then I get a 404 error with {"detail":"CSRF Failed: CSRF cookie not set."}. It seems that once you have done login using Session Authentication, every try to get a token for Token Authentication will fail.
Steps to reproduce
REST_FRAMEWORK = {
    ...
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.TokenAuthentication',
    ),
    ...
}
In urlpatterns I have path(r'api/auth/token/obtain/', authtoken_views.obtain_auth_token),
Expected behavior
We should get the token no matter if we did login using Session Authentication or not (I mean, it should ignore cookies)
Actual behavior
It fails with 404 error and {"detail":"CSRF Failed: CSRF cookie not set."} response.
Fix
Given that obtain_auth_token = ObtainAuthToken.as_view(), then I fixed it creating a new subclass with an empty sequence for authentication_classes as follows:
from rest_framework.authtoken import views


class ObtainAuthTokenFixed(ObtainAuthToken):
    authentication_classes = ()
Then my new view will work as expected.
Could it be a good idea to change ObtainAuthToken definition in DRF to include that change? Is there some issue when applying that change?