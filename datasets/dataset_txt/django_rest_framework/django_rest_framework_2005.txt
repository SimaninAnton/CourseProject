jonathanballs commented on 19 Feb 2015
In django-rest-framework 2.x.x, I was able to override
Serializer.to_native(self, obj):
in order to return custom serializers for different objects. For instance:
def to_native(self, obj):
        """
        For polymorphic objects
        """
        if isinstance(obj, models.Photo):
            return PhotoSerializer(obj, context=self.context).to_native(obj)
        elif isinstance(obj, models.Video):
           return VideoSerializer(obj, context=self.context).to_native(obj)
        return super(GalleryItemModuleSerializer, self).to_native(obj)
Which would return custom serializers based on attributes of the objects being serialized. I understand that this is pretty 'hacky' however it worked rather well. In drf3, the to_native() function was retired and so this no longer works.
Could you give me some pointers or direct me towards some resources which explain how I could do this in drf3? I've taken a cursory glance through the source but can't really seem to figure it out.
Jonny