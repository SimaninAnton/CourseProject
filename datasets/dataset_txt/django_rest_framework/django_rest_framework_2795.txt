Contributor
rudolfolah commented on 27 Jun 2013
I've created sub-class of DefaultRouter and as the API Guide says is possible, I tried to override the routes attribute:
class LocationRouter(DefaultRouter):
    routes = [
        (r'^{prefix}$', {'get': 'list'}, '{basename}-list'),
        (r'^{prefix}/{lookup}$', {'get': 'retrieve'}, '{basename}-detail')
    ]

    def get_default_base_name(self, viewset):
        return 'location-api'
But it returns this error:
'tuple' object has no attribute 'name'
The problem line is in rest_framework.routers.py in the get_api_root_view method:
list_name = self.routes[0].name  # line 216
I'm using version 2.3.2 of the framework. Maybe this is fixed in a newer version?
I noticed there's a named tuple, rest_framework.routers.Route, which is what's used elsewhere in the code, not sure if that's what the docs should be suggesting that developers use instead of a plain old tuple.