jpulec commented on 12 May 2015
Because of how DRF handles dynamic routes, doing something like:
class MyViewSet(viewsets.ModelViewset):
  queryset = Account.objects.all()

  @list_route(methods=['POST',], permission_classes=[IsAdminUser,])
  def extra(self, request):
    # do stuff

request = APIRequestFactory().post(reverse('accounts-extra'), {'data': 'foo'})

response = MyViewSet.as_view({'post': 'extra'})(request)
Does not work as expected, because the kwargs to @list_route are passed to as_view during DRF's routing, meaning that the permission_classes kwarg isn't respected here. The correct implementation looks like:
class MyViewSet(viewsets.ModelViewset):
  queryset = Account.objects.all()

  @list_route(methods=['POST',], permission_classes=[IsAdminUser,])
  def extra(self, request):
    # do stuff

request = APIRequestFactory().post(reverse('accounts-extra'), {'data': 'foo'})

response = MyViewSet.as_view({'post': 'extra'}, **MyViewSet.extra.kwargs)(request)
Is this something that should be documented in the 'Testing' section?