ursomniac commented on 4 Aug 2015
models.py:
class TestModel(models.Model):
    image = models.ImageField(upload_to='images/', null=True, blank=True)
    ...
serializers.py:
class TestModelSerializer(serializers.ModelSerializer):
    image = serializers.ImageField(use_url=False, allow_null=True)
    ...
views.py:
class TestView(generics.RetrieveUpdateDestroyAPIView):
    queryset = TestModel.objects.all()
    ...

    def perform_update(self, serializer):
           ...
          instance = serializer.save()
Here's what happens:
when you create the object, and add an image (through the API), it stores the image as you'd expect.
when you EDIT the object (through the API) it shows the image there, along with another "Browse" button. But, I don't want to change the image - I'm happy with the one that's there.
If you change anything else, and do a PUT:
a) the image field becomes blank
Obviously this is NOT the desired behavior: the end user shouldn't expect to have to re-upload the image every time they edit a record.
What am I missing or doing wrong?
Also, whenever I do an update or create, the API doesn't refresh with the new/changed data when you run the PUT. I have to go up to the URL field in the browser and reload the page in order to confirm that the changes/additions "took". (A cmd-R refresh doesn't do it.) Again - what am I missing?