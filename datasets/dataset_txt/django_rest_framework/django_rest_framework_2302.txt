Contributor
agconti commented on 3 Nov 2014
I'm using django rest-framework's token authentication as described in the docs. Whenever I create a new user django throws:
IntegrityError: duplicate key value violates unique constraint "authtoken_token_user_id_key"
DETAIL:  Key (user_id)=(5) already exists.
Surprisingly django still creates a user and DRF also successfully creates an auth_token for that user. Subsequent requests succeed as well.
The user being created does indeed have a user_id = 5, so the token is being associated correctly. Do you have any idea why DRF might be trying to update the user_id?
Full stack trace:
---------------------------------------------------------------------------
IntegrityError                            Traceback (most recent call last)
<ipython-input-10-5fc39836e102> in <module>()
----> 1 User.objects.create()

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/manager.pyc in manager_method(self, *args, **kwargs)
     90         def create_method(name, method):
     91             def manager_method(self, *args, **kwargs):
---> 92                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     93             manager_method.__name__ = method.__name__
     94             manager_method.__doc__ = method.__doc__

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/query.pyc in create(self, **kwargs)
    370         obj = self.model(**kwargs)
    371         self._for_write = True
--> 372         obj.save(force_insert=True, using=self.db)
    373         return obj
    374

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/base.pyc in save(self, force_insert, force_update, using, update_fields)
    588
    589         self.save_base(using=using, force_insert=force_insert,
--> 590                        force_update=force_update, update_fields=update_fields)
    591     save.alters_data = True
    592

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/base.pyc in save_base(self, raw, force_insert, force_update, using, update_fields)
    625         if not meta.auto_created:
    626             signals.post_save.send(sender=origin, instance=self, created=(not updated),
--> 627                                    update_fields=update_fields, raw=raw, using=using)
    628
    629     save_base.alters_data = True

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/dispatch/dispatcher.pyc in send(self, sender, **named)
    196
    197         for receiver in self._live_receivers(sender):
--> 198             response = receiver(signal=self, sender=sender, **named)
    199             responses.append((receiver, response))
    200         return responses

/Users/administrator/dev/dayo-web/dayo/api/models.pyc in create_auth_token(sender, instance, created, **kwargs)
      9 def create_auth_token(sender, instance=None, created=False, **kwargs):
     10     if created:
---> 11         Token.objects.create(user=instance)

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/manager.pyc in manager_method(self, *args, **kwargs)
     90         def create_method(name, method):
     91             def manager_method(self, *args, **kwargs):
---> 92                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     93             manager_method.__name__ = method.__name__
     94             manager_method.__doc__ = method.__doc__

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/query.pyc in create(self, **kwargs)
    370         obj = self.model(**kwargs)
    371         self._for_write = True
--> 372         obj.save(force_insert=True, using=self.db)
    373         return obj
    374

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/rest_framework/authtoken/models.pyc in save(self, *args, **kwargs)
     31         if not self.key:
     32             self.key = self.generate_key()
---> 33         return super(Token, self).save(*args, **kwargs)
     34
     35     def generate_key(self):

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/base.pyc in save(self, force_insert, force_update, using, update_fields)
    588
    589         self.save_base(using=using, force_insert=force_insert,
--> 590                        force_update=force_update, update_fields=update_fields)
    591     save.alters_data = True
    592

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/base.pyc in save_base(self, raw, force_insert, force_update, using, update_fields)
    616             if not raw:
    617                 self._save_parents(cls, using, update_fields)
--> 618             updated = self._save_table(raw, cls, force_insert, force_update, using, update_fields)
    619         # Store the database on which the object was saved
    620         self._state.db = using

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/base.pyc in _save_table(self, raw, cls, force_insert, force_update, using, update_fields)
    697
    698             update_pk = bool(meta.has_auto_field and not pk_set)
--> 699             result = self._do_insert(cls._base_manager, using, fields, update_pk, raw)
    700             if update_pk:
    701                 setattr(self, meta.pk.attname, result)

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/base.pyc in _do_insert(self, manager, using, fields, update_pk, raw)
    730         """
    731         return manager._insert([self], fields=fields, return_id=update_pk,
--> 732                                using=using, raw=raw)
    733
    734     def delete(self, using=None):

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/manager.pyc in manager_method(self, *args, **kwargs)
     90         def create_method(name, method):
     91             def manager_method(self, *args, **kwargs):
---> 92                 return getattr(self.get_queryset(), name)(*args, **kwargs)
     93             manager_method.__name__ = method.__name__
     94             manager_method.__doc__ = method.__doc__

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/query.pyc in _insert(self, objs, fields, return_id, raw, using)
    919         query = sql.InsertQuery(self.model)
    920         query.insert_values(fields, objs, raw=raw)
--> 921         return query.get_compiler(using=using).execute_sql(return_id)
    922     _insert.alters_data = True
    923     _insert.queryset_only = False

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/models/sql/compiler.pyc in execute_sql(self, return_id)
    918         with self.connection.cursor() as cursor:
    919             for sql, params in self.as_sql():
--> 920                 cursor.execute(sql, params)
    921             if not (return_id and cursor):
    922                 return

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/backends/utils.pyc in execute(self, sql, params)
     79         start = time()
     80         try:
---> 81             return super(CursorDebugWrapper, self).execute(sql, params)
     82         finally:
     83             stop = time()

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/backends/utils.pyc in execute(self, sql, params)
     63                 return self.cursor.execute(sql)
     64             else:
---> 65                 return self.cursor.execute(sql, params)
     66
     67     def executemany(self, sql, param_list):

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/utils.pyc in __exit__(self, exc_type, exc_value, traceback)
     92                 if dj_exc_type not in (DataError, IntegrityError):
     93                     self.wrapper.errors_occurred = True
---> 94                 six.reraise(dj_exc_type, dj_exc_value, traceback)
     95
     96     def __call__(self, func):

/Users/administrator/dev/dayo-web/env/lib/python2.7/site-packages/django/db/backends/utils.pyc in execute(self, sql, params)
     63                 return self.cursor.execute(sql)
     64             else:
---> 65                 return self.cursor.execute(sql, params)
     66
     67     def executemany(self, sql, param_list):

IntegrityError: duplicate key value violates unique constraint "authtoken_token_user_id_key"
DETAIL:  Key (user_id)=(5) already exists.
Related Stack Overflow question: http://stackoverflow.com/q/26717314/359284