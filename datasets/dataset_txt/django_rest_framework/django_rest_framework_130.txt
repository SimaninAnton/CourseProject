meysam81 commented on 10 Jun 2019
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
when inheriting from rest_framework.serializers.ModelSerializer, and also the Meta.fields is equal to __all__, the user password is not hashed, and instead, saved in plain text in database.
Expected behavior
I would expect some kind of default hashing like the following (that I had to add for now apparently):
from django.contrib.auth.models import User
from django.contrib.auth.hashers import make_password

from rest_framework import serializers


class UserSerializer(serializers.ModelSerializer):

    @staticmethod
    def validate_password(password: str) -> str:
        return make_password(password)

    class Meta:
        model = User
        fields = '__all__'
        extra_kwargs = {
            'email': {'required': True},
        }
Actual behavior
currently, when you save a user with the given endpoint in urlpattenrs, it just saves the password as is (plain text).
It shouldn't be like that. It should have some kind of default hashing system compatible with the django hash.