v-hunt commented on 4 May 2018 â€¢
edited
Let's assume we want to have an url that is accessible by authenticated users only. Lets assume I'm not authenticated. In this case the correct response is 401 (NOT AUTHENTICATED), but the API gives us 401 (FORBIDDEN). Note that we expect that the url must be accessible by every authenticated user, not by particular group only (like accountant, manager etc).
This is a link to W3C documentation that explains the difference between 401 and 403 responses. This is a link to StackOverFlow answer
Steps to reproduce
Let's assume we have an view with permission:
class MyView(APIView):
    permission_classes = (IsAuthenticated, )
Expected behavior
The unit test:
   
    def test_not_auth_user_access_denied(self):
        resp = self.client.get(self.URL)

        self.assertEqual(
            resp.status_code,
            status.HTTP_401_UNAUTHORIZED,
            "Not auth user has access to MyView!"
        )
Actual behavior
    def test_not_auth_user_access_denied(self):
        resp = self.client.get(self.URL)

        self.assertEqual(
            resp.status_code,
            status.HTTP_403_FORBIDDEN,
            "Not auth user has access to MyTasksList!"
        )
2