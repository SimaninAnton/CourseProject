scjody commented on 18 Jun 2016
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
A failing test is added in #4204.
Create a ModelSerializer with a RegexValidator on one of the fields.
Create an instance of the ModelSerializer with data.
Call is_valid() on the instance.
Expected behavior
is_valid() returns True or False
Actual behavior
Exception due to deepcopy issue:
Traceback (most recent call last):
  File "/var/www/streambed/drf_issue/users/tests.py", line 11, in test_create_user
    slz.is_valid()
  File "/usr/local/lib/python2.7/dist-packages/rest_framework/serializers.py", line 213, in is_valid
    self._validated_data = self.run_validation(self.initial_data)
  File "/usr/local/lib/python2.7/dist-packages/rest_framework/serializers.py", line 407, in run_validation
    value = self.to_internal_value(data)
  File "/usr/local/lib/python2.7/dist-packages/rest_framework/serializers.py", line 431, in to_internal_value
    fields = self._writable_fields
  File "/usr/local/lib/python2.7/dist-packages/django/utils/functional.py", line 59, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "/usr/local/lib/python2.7/dist-packages/rest_framework/serializers.py", line 346, in _writable_fields
    field for field in self.fields.values()
  File "/usr/local/lib/python2.7/dist-packages/rest_framework/serializers.py", line 339, in fields
    for key, value in self.get_fields().items():
  File "/usr/local/lib/python2.7/dist-packages/rest_framework/serializers.py", line 923, in get_fields
    extra_kwargs = self.get_extra_kwargs()
  File "/usr/local/lib/python2.7/dist-packages/rest_framework/serializers.py", line 1215, in get_extra_kwargs
    extra_kwargs = copy.deepcopy(getattr(self.Meta, 'extra_kwargs', {}))
  File "/usr/lib/python2.7/copy.py", line 163, in deepcopy
    y = copier(x, memo)
  File "/usr/lib/python2.7/copy.py", line 257, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/usr/lib/python2.7/copy.py", line 163, in deepcopy
    y = copier(x, memo)
  File "/usr/lib/python2.7/copy.py", line 257, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/usr/lib/python2.7/copy.py", line 163, in deepcopy
    y = copier(x, memo)
  File "/usr/lib/python2.7/copy.py", line 230, in _deepcopy_list
    y.append(deepcopy(a, memo))
  File "/usr/lib/python2.7/copy.py", line 190, in deepcopy
    y = _reconstruct(x, rv, 1, memo)
  File "/usr/lib/python2.7/copy.py", line 334, in _reconstruct
    state = deepcopy(state, memo)
  File "/usr/lib/python2.7/copy.py", line 163, in deepcopy
    y = copier(x, memo)
  File "/usr/lib/python2.7/copy.py", line 257, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/usr/lib/python2.7/copy.py", line 174, in deepcopy
    y = copier(memo)
TypeError: cannot deepcopy this pattern object
Worked in 3.3.2; broken in 3.3.3 and on master.
May be related to #1954, but that was fixed and this problem still exists.