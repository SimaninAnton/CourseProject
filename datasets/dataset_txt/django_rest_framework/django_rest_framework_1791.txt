rrauenza commented on 28 May 2015
I'd like to be able to disable PATCH. It seems there are two suggestions -- (a), build your own view out of mixins or (b), override the method but return an invalid status:
http://stackoverflow.com/questions/23639113/disable-a-method-in-a-viewset-django-rest-framework
The mixins solution doesn't seem to allow me to include PUT, but exclude PATCH. The override method doesn't affect OPTIONS.
I'd like to propose another solution, but it requires code changes. It looks like abilities are determined here:
def get_method_map(self, viewset, method_map):                              
    """                                                                     
    Given a viewset, and a mapping of http methods to actions,              
    return a new mapping which only includes any mappings that              
    are actually implemented by the viewset.                                
    """                                                                     
    bound_methods = {}                                                      
    for method, action in method_map.items():                               
        if hasattr(viewset, action):                                        
            bound_methods[method] = action                                  
    return bound_methods                                                    
What if this were changed to be:
       if hasattr(viewset, action):
            if viewset.action is not None:  # or check if is callable?                                      
                bound_methods[method] = action                                  
This would allow me to override/disable actions by just setting them to None in inherited classes.
Thoughts?