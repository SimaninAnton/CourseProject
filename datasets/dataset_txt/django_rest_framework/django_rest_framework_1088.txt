stevelacey commented on 21 Aug 2016
I've approached this subject before (#2292), and am interested in seeing if there's a better way around this yet in DRF.
I have a serializer that looks like this:
class InspectionSerializer(ModelSerializer):
    status = serializers.SlugRelatedField(queryset=Status.objects.all(), slug_field='code')

    class Meta:
        model = Inspection
        fields = (
            'vehicle',
        )
And the following relations apply:
Vehicle has many Inspection
Vehicle has many Status (defines what statuses are allowed for inspections of this vehicle)
Inspection has one Status
I need to filter the queryset of the InspectionSerializer's status field so that it only allows a status that belongs to the Vehicle the Inspection also belongs to.
In older versions of DRF, this was pretty difficult, I would filter the queryset in the serializer __init__ using either request data or the instance to determine the vehicle within the context of the current request â€“ necessary to cover all forms of create/update. I am interested in any better way to do this.