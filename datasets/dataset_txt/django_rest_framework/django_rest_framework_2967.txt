Contributor
yprez commented on 2 Jan 2013
In FileField validation, if serializer.files is None, a typeerror will be raised.
This happens when parsing anything except multipart/form-data (which can be used if the file is not required).
Traceback:
  File "***/rest_framework/views.py", line 363, in dispatch
    response = self.handle_exception(exc)
  File "***/rest_framework/views.py", line 360, in dispatch
    response = handler(request, *args, **kwargs)
  File "***/rest_framework/generics.py", line 172, in put
    return self.update(request, *args, **kwargs)
  File "***/rest_framework/mixins.py", line 94, in update
    if serializer.is_valid():
  File "***/rest_framework/serializers.py", line 328, in is_valid
    return not self.errors
  File "***/rest_framework/serializers.py", line 322, in errors
    obj = self.from_native(self.init_data, self.init_files)
  File "***/rest_framework/serializers.py", line 283, in from_native
    attrs = self.restore_fields(data, files)
  File "***/rest_framework/serializers.py", line 214, in restore_fields
    field.field_from_native(data, files, field_name, reverted_data)
  File "***/rest_framework/fields.py", line 184, in field_from_native
    native = files[field_name]
TypeError: 'NoneType' object has no attribute '__getitem__'
For example, if the content-type is application/x-www-form-urlencoded, FormParser() will set the files to None:
https://github.com/tomchristie/django-rest-framework/blob/master/rest_framework/parsers.py#L98
Then the field validator tries to find the field in files:
https://github.com/tomchristie/django-rest-framework/blob/2.1.14/rest_framework/fields.py#L183