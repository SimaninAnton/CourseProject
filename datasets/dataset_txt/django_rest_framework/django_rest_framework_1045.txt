Alir3z4 commented on 22 Sep 2016 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
Have a method that uses Python type annotation:
def get_short_name(self) -> str:
    """Return a short name for user."""
    return self.name

def get_full_name(self) -> str:
    """As for full name, just return the short name."""
    return self.get_short_name()
The the serializer looks like:
class UserSerializer(serializers.ModelSerializer):
    class Meta:
        model = User
        fields = (
            'id',
            'username',
            'name',
            'location',
            'about',
            'is_active',
            'date_joined',
            'updated',
            'get_full_name',
            'get_short_name',
        )
I run the tests and It fails.
The error is as follow:
======================================================================
ERROR: test_update_profile_view (api.tests.account.test_account_views.TestAccountViews)
----------------------------------------------------------------------
Traceback (most recent call last):
  File "/home/alireza/dev/pycharm/myproject/api/tests/account/test_account_views.py", line 91, in test_update_profile_view
    HTTP_AUTHORIZATION='JWT {0}'.format(auth_token),
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/test.py", line 180, in put
    path, data=data, format=format, content_type=content_type, **extra)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/test.py", line 98, in put
    return self.generic('PUT', path, data, content_type, **extra)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/django/test/client.py", line 409, in generic
    return self.request(**r)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/test.py", line 161, in request
    return super(APIClient, self).request(**kwargs)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/test.py", line 113, in request
    request = super(APIRequestFactory, self).request(**kwargs)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/django/test/client.py", line 494, in request
    six.reraise(*exc_info)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/django/utils/six.py", line 686, in reraise
    raise value
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/django/core/handlers/exception.py", line 39, in inner
    response = get_response(request)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/django/core/handlers/base.py", line 249, in _legacy_get_response
    response = self._get_response(request)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/django/views/decorators/csrf.py", line 58, in wrapped_view
    return view_func(*args, **kwargs)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/views.py", line 474, in dispatch
    response = self.handle_exception(exc)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/views.py", line 434, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/views.py", line 471, in dispatch
    response = handler(request, *args, **kwargs)
  File "/home/alireza/dev/pycharm/myproject/api/v1/account/views.py", line 47, in put
    return Response(data=UserSerializer(user).data)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/serializers.py", line 508, in data
    ret = super(Serializer, self).data
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/serializers.py", line 240, in data
    self._data = self.to_representation(self.instance)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/serializers.py", line 464, in to_representation
    attribute = field.get_attribute(instance)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/fields.py", line 412, in get_attribute
    return get_attribute(instance, self.source_attrs)
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/fields.py", line 86, in get_attribute
    if is_simple_callable(instance):
  File "/home/alireza/.virtualenvs/myproject/lib/python3.5/site-packages/rest_framework/fields.py", line 62, in is_simple_callable
    args, _, _, defaults = inspect.getargspec(obj)
  File "/usr/lib64/python3.5/inspect.py", line 1045, in getargspec
    raise ValueError("Function has keyword-only arguments or annotations"
ValueError: Function has keyword-only arguments or annotations, use getfullargspec() API which can support them
When I remove Python 3 annotation the error disappears.
I'm using Python 3.5.2
1