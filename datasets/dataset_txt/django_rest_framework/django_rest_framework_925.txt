Contributor
sohopro commented on 25 Jan 2017 â€¢
edited
Steps to reproduce
I override get_queryet() in views.py like this.
class GetArticles(generics.ListAPIView):
serializer_class = ArticleSerializer
filter_backends = (filters.OrderingFilter,)
ordering_fields = ('updated',)
ordering = ('-updated',)
def get_queryset(self):
    #here is some code.
    return queryset
I used the django-debug-toolbar and found duplicated sqls.
Here is one:
/lib/python3.5/site-packages/rest_framework/views.py in dispatch(471)
response = handler(request, *args, **kwargs)
/lib/python3.5/site-packages/rest_framework/generics.py in get(200)
return self.list(request, *args, **kwargs)
/lib/python3.5/site-packages/rest_framework/mixins.py in list(40)
queryset = self.filter_queryset(self.get_queryset())
/views.py in get_queryset(44)
another:
/lib/python3.5/site-packages/rest_framework/response.py in rendered_content(72)
ret = renderer.render(self.data, accepted_media_type, context)
/lib/python3.5/site-packages/rest_framework/renderers.py in render(697)
context = self.get_context(data, accepted_media_type, renderer_context)
/lib/python3.5/site-packages/rest_framework/renderers.py in get_context(674)
'filter_form': self.get_filter_form(data, view, request),
/lib/python3.5/site-packages/rest_framework/renderers.py in get_filter_form(605)
queryset = view.get_queryset()
/views.py in get_queryset(44)
Expected behavior
get_queryset() should be called once.
Actual behavior
get_queryset() is called multi-times.