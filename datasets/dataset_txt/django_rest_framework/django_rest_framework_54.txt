Ivo-Donchev commented on 4 Oct 2019
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
Implement serializer with a Boolean non required field
Pass empty django.http.QueryDict (request.GET, request.POST, request.query_params, ...)
Validate the serializer
Get serializer.validated_data
from rest_framework.serializers import Serializer, BooleanField
from django.http import QueryDict

class SomeSerializer(Serializer):
    some_boolean = BooleanField(required=False)

empty_data = QueryDict()
serializer = SomeSerializer(data=empty_data)
serializer.is_valid()


assert 'some_boolean' not in serializer.validated_data  # Should not be part of the validated_data
Expected behavior
The serializers.validated_data should NOT include fields that are not passed in the data (and don't have default values).
From the example above: serializer.validated_data should be empty
Actual behavior
serializer.validated_data contains key that's not part of the data (non-required BooleanField without default)
From the example above: serializer.validated_data contains non-provided some_boolean