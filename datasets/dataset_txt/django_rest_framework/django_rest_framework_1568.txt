thenewguy commented on 9 Sep 2015
I am implementing filtering with django-filter per the drf docs. It seems that drf does not handle django-filter in strict mode out of the box.
In my base viewsets.ModelViewSet I override the filter_queryset as follows:
    def filter_queryset(self, queryset):
        """
        django-filter raises django.core.exceptions.ValidationError in strict mode
        """
        try:
            qs = super(APIBaseModelViewSet, self).filter_queryset(queryset)
        except ValidationError, e:
            raise serializers.ValidationError(e)
        return qs
The exception handler correctly returns a 400 status with the expected error list when the format explicitly requested (i.e. /path/to/foo/bar.json?param=invalid). However I've encountered an issue where the response is a 500 error when the format is not explicitly requested and an invalid filter param is requested via the browser.
The debug view shows the exception is the django-filter django.core.exceptions.ValidationError exception wrapped in serializers.ValidationError by my overriden filter_queryset method.
Shouldn't the exception handler be outputting a formatted html page listing the errors instead of a 500 response?