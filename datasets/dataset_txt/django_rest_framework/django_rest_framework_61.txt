pawelad commented on 18 Sep 2019
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
I believe that the queryset argument on reverse relationships is ignored.
class Competition(models.Model):
    active = models.BooleanField(verbose_name="active")

class Season(models.Model):
    competition = models.ForeignKey(
        verbose_name="competition",
        to=Competition,
        related_name="seasons",
        on_delete=models.PROTECT,
    )


class CompetitionSerializer(serializers.ModelSerializer):
    seasons = serializers.PrimaryKeyRelatedField(
        queryset=Season.objects.filter(active=True),
        many=True,
    )

    class Meta:
        model = Competition
        fields = ["id", "seasons"]
Expected behavior
I'd expect the CompetitionSerializer.seasons to only include linked seasons that have active set to True.
Actual behavior
I get all the linked seasons.
More importantly, using something like queryset="foobar" doesn't result in an error and still returns all linked seasons.