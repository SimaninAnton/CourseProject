sdawodu commented on 26 May 2015
>>> import django.conf
>>> django.conf.settings.configure()
>>> import rest_framework.decorators
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/usr/local/lib/python2.7/dist-packages/rest_framework/decorators.py", line 11, in <module>
    from rest_framework.views import APIView
  File "/usr/local/lib/python2.7/dist-packages/rest_framework/views.py", line 14, in <module>
    from rest_framework.response import Response
  File "/usr/local/lib/python2.7/dist-packages/rest_framework/response.py", line 8, in <module>
    from django.utils.six.moves.http_client import responses
ImportError: No module named http_client
>>> import rest_framework
>>> rest_framework.__version__
'3.1.2'
>>> 
A normal import which works in 3.1.1 fails in 3.1.2
>>> import django.conf
>>> django.conf.settings.configure()
>>> import rest_framework.decorators
>>> import rest_framework
>>> rest_framework.__version__
'3.1.1'
looking at response.py:
 from __future__ import unicode_literals
-from django.core.handlers.wsgi import STATUS_CODE_TEXT
+from django.utils.six.moves.http_client import responses
 from django.template.response import SimpleTemplateResponse
 from django.utils import six

@@ -77,7 +77,7 @@ class Response(SimpleTemplateResponse):
         """
         # TODO: Deprecate and use a template tag instead
         # TODO: Status code text for RFC 6585 status codes
-        return STATUS_CODE_TEXT.get(self.status_code, '')
+        return responses.get(self.status_code, '')

     def __getstate__(self):
         """
>>> import django.utils.six.moves
>>> import django.utils.six.moves.http_client
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ImportError: No module named http_client
So something is missing from django (1.6) utils which is causing rest_framework to break on upgrade. Should this be worked around in rest_framework?