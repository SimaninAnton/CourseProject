Contributor
merwok commented on 14 Aug 2017 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
Have a view configured with a route that does not have kwargs, e.g. /users/me/
Define get_object to return self.request.user (with IsAuthenticated as authn class)
Add 'url' to the serializer class (a ModelSerializer) and extra_kwargs = {'url': {'view_name': 'users:profile'}}
Expected behavior
Response includes "url": "http://localhost/api/v1/users/me/"
Actual behavior
Traceback: Could not resolve URL for hyperlinked relationship using view name "users:profile". You may have failed to include the related model in your API, or incorrectly configured the `lookup_field` attribute on this field.
Adding 'lookup_field': None gives another error: getattr(): attribute name must be string. This could be changed to become a simple way to define a url field where the reverse calls only needs a view name and no kwargs, instead of requiring users to write a HyperlinkedIdentityField subclass.