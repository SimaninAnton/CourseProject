a-vladev-appchef commented on 1 Oct 2014
In my post data I have a field which represents a list of dictionaries which are validated in a second validator that is linked with the first one with many=True, blank=False. I expect to get validation error when my list is empty or field is not a list but empty string for example, but both just pass the validation.
System
Rest Framework Version: 2.4.3
Vagrant: ubuntu/trusty64
Python: 2.7
Django: 1.7
TestCase
Expecting last two tests to pass but they fail
# -*- coding: utf-8 -*-
from django.test.testcases import TestCase
from rest_framework import serializers

__author__ = 'Anatoli Vladev'


class DataSerializer(serializers.Serializer):
    name = serializers.CharField(max_length=255)


class InputSerializer(serializers.Serializer):
    data = DataSerializer(many=True, blank=False, required=True)


class RestManyTestCase(TestCase):
    def test_success_on_valid_data(self):
        post = {
            'data': [
                {'name': '1'},
            ]
        }

        serializer = InputSerializer(data=post)

        if not serializer.is_valid():
            self.fail('Serialization fail: %s' % serializer.errors)

    def test_fail_on_invalid_data(self):
        post = {
            'data': [
                {'invalid_field': '1'},
            ]
        }

        serializer = InputSerializer(data=post)

        self.assertFalse(serializer.is_valid(), 'Serializer should return validation error.')
        self.assertIn('data', serializer.errors, 'No "data" field in errors.')

        for data_error in serializer.errors['data']:
            self.assertIn('name', data_error, 'No "name" field in errors.')

    def test_fail_on_empty_data(self):
        post = {
            'data': ''
        }

        serializer = InputSerializer(data=post)

        self.assertFalse(serializer.is_valid(), 'Serializer should return validation error.')
        self.assertIn('data', serializer.errors, 'No "data" field in errors.')

    def test_fail_on_empty_list(self):
        post = {
            'data': []
        }

        serializer = InputSerializer(data=post)

        self.assertFalse(serializer.is_valid(), 'Serializer should return validation error.')
        self.assertIn('data', serializer.errors, 'No "data" field in errors.')
1