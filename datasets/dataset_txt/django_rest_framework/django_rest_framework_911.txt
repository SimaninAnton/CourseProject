andreipradan commented on 7 Feb 2017 •
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
create a UUIDField:
field = serializers.UUIDField()
call to_representation with a boolean value:
field.to_representation(True)
Expected behavior
Calling the field's .to_representation() method with a boolean value would raise exeption:
ValidationError: ['"True" is not a valid UUID.']
Actual behavior
Calling the field's .to_representation() method with a boolean value evaluates to an UUID and returns:
UUID('00000000-0000-0000-0000-000000000001') for True
UUID('00000000-0000-0000-0000-000000000000') for False
I think this is because a boolean value is a subclass of int and to_internal_value verifies against six.integer_types: https://github.com/tomchristie/django-rest-framework/blob/master/rest_framework/fields.py#L829
Pull request with test failing: #4884
I also added this validation in here: https://github.com/tomchristie/django-rest-framework/pull/4884/files#diff-af402f515db75c7c6754453cf15455d9
Let me know if it's ok to uncomment or place this elsewhere.
Or if it's a valid issue.
Thank You!
Andrei Prădan