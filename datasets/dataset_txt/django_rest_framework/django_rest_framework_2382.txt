stevelacey commented on 17 Sep 2014
I see enough people talking about and running into issues getting https://github.com/bradjasper/django-jsonfield working with DRF that it makes me wonder why a serializer isn't included here, and even if we decide not to add one, at least issue can serve as a canonical solution.
I am running into a number of issues including #1809, and various problems with null values and serializing/deserializing - at the moment, on master, deserialization appears to work as expected with no additional effort, and serialization just about works if I use this field on all of my JSONFields:
class JSONSerializerField(WritableField):
    def to_native(self, obj):
        return obj
NB: without the above I get a serialized dict when saving
I am left with 2 problems to solve here:
Allow null values, they're allow_none in my model, but this isn't respected in DRF, I get "This field cannot be blank."
Validate the JSON - I have seen various examples checking whether parsing the JSON works.
Any tips for the above appreciated, but it doesn't seem out of the question to provide a serializer in DRF that already caters for all of this, I think it'd save a lot of pain adding this into implementations.