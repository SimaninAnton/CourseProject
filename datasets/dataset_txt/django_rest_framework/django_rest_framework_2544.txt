joeribekker commented on 5 May 2014
I noticed when doing POST/DELETE (and probably PUT/PATCH) the nested objects are saved/deleted with the root serializer. This works as expected since the save_object/delete_object are not doing any object specific stuff, it's not intuitive.
See comments below when doing: POST /api/parent/
class Parent(models.Model):
    # ...


class Child(models.Model):
    parent = models.ForeignKey(Parent)
    # ...


class ChildSerializer(serializers.ModelSerializer):
    class Meta:
        model = Child

    def delete_object(self, obj):
        # Never called.

    def save_object(self, obj, **kwargs):
        # Never called.


class ParentSerializer(serializers.ModelSerializer):
    children = ChildSerializer(source='children', many=True, allow_add_remove=True)

    class Meta:
        model = Parent

    def delete_object(self, obj):
        if isinstance(obj, Child):
            # Temporary solution, do stuff here.

    def save_object(self, obj, **kwargs):
        if isinstance(obj, Child):
            # Temporary solution, do stuff here.