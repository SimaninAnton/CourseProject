Contributor
flashingpumpkin commented on 3 Jul 2013
Hi
I've run into the use case that some data can not be efficiently validated because of name clashes with Python's reserved words or naming rules.
One example is the Instagram API: When validating a caption one cannot use from as a field name without running into Python syntax errors.
{
  "created_time": "1296710352",
  "text": "Inside le truc #foodtruck",
  "from": {
    "username": "kevin",
    "full_name": "Kevin Systrom",
    "type": "user",
    "id": "3"
  },
  "id": "26621408"
}
Another example is the Mailgun API: Python naming prevents creating variables with hyphens.
I've added an additional argument to fields to handle remapping data keys to field names and vica versa. The commit is available at:
flashingpumpkin/django-rest-framework@b2c54dc
I find it quite useful as this allows to validate the above JSON via:
class CaptionSerializer(serializers.Serializer):
    id = serializers.IntegerField()
    user = UserField(data_key = "from")
    text = serializers.CharField()
    created_time = TimestampField()
Same with Mailgun:
class MailgunSerializer(serializers.Serializer):
    body_plain = serializers.CharField(data_key = "body-plain")
    body_html  = serializers.CharField(data_key = "body-html")
    # etc
Happy to rename data_key into data_source or whatever would fit better.
Cheers, Alen
6