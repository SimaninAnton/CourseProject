toudi commented on 5 Feb 2014
Hi. I could create a patch for that, but i wanted to ask whether you would accept such change.
Here's the thing. I have an application, where i have regular django users (which use inherited auth.AbstractBaseUser for a model). The class for this model is inside settings.AUTH_USER_MODEL setting.
Now comes the tricky part. I also have other types of users, which also inherit from auth.AbstractBaseUser. Because of line no. 12 in authtoken/models.py i cannot reuse your Token implementation. Specifically, i cannot override the user field, like so:
class MyToken(Token):
user = models.OneToOneField('myapp.MyModel')
would you accept the following patch:
diff --git a/rest_framework/authtoken/models.py b/rest_framework/authtoken/models.py
index 8eac2cc..1219cbd 100644
--- a/rest_framework/authtoken/models.py
+++ b/rest_framework/authtoken/models.py
@@ -9,7 +9,12 @@ from django.db import models
 # Note that we don't perform this code in the compat module due to
 # bug report #1297
 # See: https://github.com/tomchristie/django-rest-framework/issues/1297
+# Default action: use AUTH_USER_MODEL setting to get the destination model
+# One can override the key:
+# settings.py
+# TOKEN_USER_MODEL = 'someapp.SomeModel'
 AUTH_USER_MODEL = getattr(settings, 'AUTH_USER_MODEL', 'auth.User')
+AUTH_USER_MODEL = getattr(settings, 'TOKEN_USER_MODEL', AUTH_USER_MODEL)
so basically it would be backward-compatible, but if somebody would want to use other model than the one used for django authentication, one could specify it via 'TOKEN_USER_MODEL' setting.