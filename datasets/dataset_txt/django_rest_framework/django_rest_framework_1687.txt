bufke commented on 28 Jul 2015
I've created a project to demonstrate the issue. https://github.com/bufke/drf-nested-bug-test
Go to /snippets/ and verify that the nested writable works. I made it as brief as possible so it merely prints out the validated_data on the console. You should get a ``create() did not return an object instance. when submitting and see the data on console like `{'snippet': 'sfadsf', 'book': OrderedDict([('title', 'fadsfd')])}`
Now attempt to do the same thing using jquery. The easiest method is in the same DRF gui type in
$.post('/snippets/', {"book": {"title": "fda"}, "snippet": "fsafdsf"}, function(data){console.log(data)})
We expect the same results as above, however we get a 400 book: {title: ["This field is required."]}
This seems to suggest the DRF gui works but jquery doing the same thing does not.
If you inspect what jquery sends you will notice it uses x-www-form-urlencoded. Copy that encoded string and paste it in the raw tab with x-www-form-urlencoded selected. book%5Btitle%5D=fda&snippet=fsafdsf
We get the same validation error. This prevents me from using nested serialized data. I would suspect it's a bug when deserializing the urlencoded data or perhaps somewhere in the validation logic. Or I'm using jquery very wrong and it just happened to work without nested data.
I've worked around this by making only one serializer doing something like:
nested_field = serializers.CharField(source="my_relation.nested_field")