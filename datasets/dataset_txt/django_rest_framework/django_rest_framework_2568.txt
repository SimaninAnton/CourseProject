steve-gregory commented on 8 Apr 2014
I'm using nested serializers and the "context={}" kwarg to get request_user specific information for each of the independent serializers.
The context is properly passed from ProjectSerializer down to the child serializers, but in the init method of these serializers I extract the context to set the request_user attribute and I'm getting a lot of (intentionally) logged messages about the method being initialized without the context kwarg. When I added a pdb line to my __init__method for one of the Child Serializers (VolumeSerializer) I found this:
  <ipython-input-2-a537a5844972>(1)<module>()
----> 1 from api.serializers import ProjectSerializer

  /opt/dev/atmosphere/api/serializers.py(537)<module>()
    535 
    536 
--> 537 class ProjectSerializer(serializers.ModelSerializer):
    538     owner = serializers.Field(source="owner.username")
    539     instances = InstanceSerializer()

  /opt/dev/atmosphere/api/serializers.py(540)ProjectSerializer()
    538     owner = serializers.Field(source="owner.username")
    539     instances = InstanceSerializer()
--> 540     volumes = VolumeSerializer()
    541     applications = ApplicationSerializer()
    542 

> /opt/dev/atmosphere/api/serializers.py(528)__init__()
    526     def __init__(self, *args, **kwargs):
    527         import ipdb;ipdb.set_trace()
--> 528         user = get_context_user(kwargs)
    529         self.request_user = user
    530         super(VolumeSerializer, self).__init__(*args, **kwargs)
Brought this up in IRC and it was suggested that this was a bug and should be reported..