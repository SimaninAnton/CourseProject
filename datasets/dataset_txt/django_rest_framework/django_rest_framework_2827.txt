ksamuel commented on 28 May 2013
I have objects with a generic relation pointing to various other objects, and I need them to be merged (inlined) so the serialized objects look like one whole objects.
E.G:
    class Enrollement(models.Model):
        hq = models.ForeignKey(Hq)
        enrollement_date = models.Datetime()
        content_type = models.ForeignKey(ContentType)
        object_id = models.PositiveIntegerField()
        object = generic.GenericForeignKey('content_type', 'object_id')

    class Nurse(models.Model):
         hospital = models.ForeignKey(Hospital)
         enrollement = GenericRelation(Enrollement)

    class Pilot(models.Model):
         plane = models.ForeignKey(plane)
         enrollement = GenericRelation(Enrollement)
When serialized, I'd like to get something like this:
    {
        count: 50,
        next: 'http...',
        previous: null,
        results: [
            {
            type: "nurse",
            hq: 'http://url/to/hq-detail/view',
            enrollement_date: '2003-01-01 01:01:01',
            hospital: 'http://url/to/hospital-detail/view'

            },
            {
            type: "pilot",
            hq: 'http://url/to/hq-detail/view',
            enrollement_date: '2003-01-01 01:01:01',
            plante: 'http://url/to/plane-detail/view'

            },
        ]
    }
Can I do it, and if yes, how ?
I can get them by nesting them as stated here, and I could post process them, I guess :
http://django-rest-framework.org/api-guide/relations.html
But maybe there is a cleaner way.