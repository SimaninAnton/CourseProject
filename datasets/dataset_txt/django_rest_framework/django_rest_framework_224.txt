JulienPalard commented on 14 Feb 2019
Checklist
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
OK this may be handled in third party, but I'm still posting, in case. The CursorPagination does not give a count, is this voluntary? It looks easy to implement and I'm currently trying it in my code by inheriting the CursorPagination like this:
class CursorPaginationWithCount(pagination.CursorPagination):
    def paginate_queryset(self, queryset, request, view=None):
        self.count = self.get_count(queryset)
        return super().paginate_queryset(queryset, request, view)

    def get_count(self, queryset):
        """
        Determine an object count, supporting either querysets or regular lists.
        """
        try:
            return queryset.count()
        except (AttributeError, TypeError):
            return len(queryset)

    def get_paginated_response(self, data):
        return response.Response(
            OrderedDict(
                [
                    ("next", self.get_next_link()),
                    ("previous", self.get_previous_link()),
                    ("count", self.count),
                    ("results", data),
                ]
            )
        )
I can do a PR, implementing it in CursorPagination directly, if I see my code is reliable in my service. Is it worth it or should this go to third party?