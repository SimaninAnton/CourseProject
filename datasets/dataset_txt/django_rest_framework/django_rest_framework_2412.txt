Matt3o12 commented on 31 Aug 2014
When creating ad-hocs methods, it is not possible to add permissions for this specific method (see example code below).
The docs provide an example how to change the user's password, which basically allows all users to change every everyone's password. This can be prevented by setting the permission_classes class in the ViewSet, however, under some circumstances, it might be necessary to set custom permissions.
Here is a testcase that should only work if the user is an admin.
    class UserViewSet(viewsets.ModelViewSet):
    """
    A viewset that provides the standard actions
    """
    queryset = User.objects.all()
    serializer_class = UserSerializer

    @permission_classes(IsAdminUser,)
    @detail_route(methods=['post'])
    def set_password(self, request, pk=None, format=None):
        user = self.get_object()
        return Response({'status': 'password set for {} by {}'.format(user, request.user)})
curl -X Post "http://localhost:8080/users/1/set_password/" returns: {"status": "password set for test1 by AnonymousUser"}.
Btw: the docs should also mention that the ad-hoc method may get the format parameter. When requesting curl -X Post "http://localhost:8080/users/1/set_password/.json" and no .format parameter is set, a server error will be raised:
$ curl -X Post "http://localhost:8080/users/1/set_password/.json" -D - -o /dev/null 2>/dev/null
HTTP/1.0 500 INTERNAL SERVER ERROR
Date: Sun, 31 Aug 2014 12:43:57 GMT
Server: WSGIServer/0.2 CPython/3.3.5
Content-Type: text/html
X-Frame-Options: SAMEORIGIN
Vary: Cookie