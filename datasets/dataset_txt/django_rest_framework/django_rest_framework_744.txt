Contributor
vimarshc commented on 24 Jun 2017
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
http://www.django-rest-framework.org/api-guide/generic-views/#creating-custom-mixins
In this example of custom mixins for overriding the get_object method. The overridden method does not check the object level permissions as it does in the original method.
A disclaimer for this is given here but someone who directly uses the method in the tutorial and does not go through the documentation for get_object will miss out on an important function without realising.
Expected behaviour
The method in the documentation should be:
class MultipleFieldLookupMixin(object):
    """
    Apply this mixin to any view or viewset to get multiple field filtering
    based on a `lookup_fields` attribute, instead of the default single field filtering.
    """
    def get_object(self):
        queryset = self.get_queryset()             # Get the base queryset
        queryset = self.filter_queryset(queryset)  # Apply any filter backends
        filter = {}
        for field in self.lookup_fields:
            if self.kwargs[field]: # Ignore empty fields.
                filter[field] = self.kwargs[field]
        obj = get_object_or_404(queryset, **filter)  # Lookup the object
        
        # May raise a permission denied
        self.check_object_permissions(self.request, obj)

        return obj