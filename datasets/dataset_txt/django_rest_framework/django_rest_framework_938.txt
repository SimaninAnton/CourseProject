MattFisher commented on 6 Jan 2017
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
Read docs at https://github.com/tomchristie/django-rest-framework/blob/master/docs/topics/3.0-announcement.md#date-and-time-objects-as-iso-8859-1-strings-in-serializer-data
Expected behavior
Docs should state:
Date and time objects as ISO-8601 strings in serializer data.
...
You can modify this behavior globally by settings the existing DATE_FORMAT, DATETIME_FORMAT and TIME_FORMAT settings keys. Setting these values to None instead of their default value of 'iso-8601' will result in native objects being returned in serializer data.
Actual behavior
Docs state:
Date and time objects as ISO-8859-1 strings in serializer data.
...
You can modify this behavior globally by settings the existing DATE_FORMAT, DATETIME_FORMAT and TIME_FORMAT settings keys. Setting these values to None instead of their default value of 'iso-8859-1' will result in native objects being returned in serializer data.