VictorWangwz commented on 15 Dec 2018 â€¢
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce and Actual behavior
Create a model with a field, for example, is_active, default as True; Create a ModelSerializer for it; Post with multipart/form-data without is_active; -> will create an object with default as false. If post with just raw json, it will do the right thing.
I do not clearly know how the serializer parses the querydict from request.data passed by form-data. But It does not parse it in the expected way. I just check the validated_data after validation, it contains "is_active": False which is really weird. Also, If I pass the parameter is_active in form-data, the validated_data will contains both "is_active": True and "is_active": False.
Expected behavior and things to solve
When post with multipart/form-data, parse request.data the same way as raw json;
The serializer should not create default fields for the fields that are not provided and do not have default value.
When validated_data contains duplicated values, just use the one from request.data.