Contributor
toranb commented on 21 Mar 2013
If I have the following get_queryset in my django view (taking advantage of the django orm dates functionality)
class DateListAPIView(generics.ListAPIView):
      model = Foo
      serializer_class = date_serializer.DateSerializer

      def get_queryset(self):
          return self.model.objects.dates('loaded', 'day')

class Foo(models.Model):
    loaded = models.DateTimeField(auto_now_add=True)

class DateSerializer(serializers.ModelSerializer):                                           
      class Meta(object):
          model = Foo
          fields = ('loaded', )
The traceback shows this error for the above setup
'datetime.datetime' object has no attribute 'loaded'
(cleary the model is not correct) -looking a little further
Inside the data property of the BaseSerializer class this line showed the object type as
class 'django.db.models.query.DateQuerySet'
              if many:
                  #this is being called and the obj is actually the django field DateTimeField
                  self._data = [self.to_native(item) for item in obj]
              else:
                  #if instead this had been called => the obj type is DateQuerySet
                  self._data = self.to_native(obj)