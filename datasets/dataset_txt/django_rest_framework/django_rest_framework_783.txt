pga23 commented on 19 May 2017
Steps to reproduce
I have a simple serializer class:
class ProjectSerializer(serializers.ModelSerializer):
    project_users = serializers.SerializerMethodField()

    class Meta:
        model = Project
        fields = ('id', 'name', 'project_users')

    def get_project_users(self, obj):
        try:
            return obj.project_users
        except AttributeError:
            return None
project_users field hasn't been defined in the Project model but added as extra field of SQL queryset inside ProjectManager methods and used for selected API requests.
obj.project_users returns integer value.
Expected behavior
Correct API response like in DRF ver. < 3.5.4
Actual behavior
The following exception in DRF ver. >= 3.5.4
Tested with both Django ver. 1.10.7 and 1.11.1 it works exactly the same.
ERROR 2017-05-18 19:33:40,743 exception 27304 139987474368256 Internal Server Error: /api/v1/projects/
Traceback (most recent call last):
  File "/myproject/.env/desktop/lib/python3.5/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/myproject/.env/desktop/lib/python3.5/site-packages/django/core/handlers/base.py", line 249, in _legacy_get_response
    response = self._get_response(request)
  File "/myproject/.env/desktop/lib/python3.5/site-packages/django/core/handlers/base.py", line 217, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/myproject/.env/desktop/lib/python3.5/site-packages/django/core/handlers/base.py", line 215, in _get_response
    response = response.render()
  File "/myproject/.env/desktop/lib/python3.5/site-packages/django/template/response.py", line 107, in render
    self.content = self.rendered_content
  File "/myproject/.env/desktop/lib/python3.5/site-packages/rest_framework/response.py", line 72, in rendered_content
    ret = renderer.render(self.data, accepted_media_type, context)
  File "/myproject/.env/desktop/lib/python3.5/site-packages/rest_framework/renderers.py", line 701, in render
    context = self.get_context(data, accepted_media_type, renderer_context)
  File "/myproject/.env/desktop/lib/python3.5/site-packages/rest_framework/renderers.py", line 634, in get_context
    raw_data_post_form = self.get_raw_data_form(data, view, 'POST', request)
  File "/myproject/.env/desktop/lib/python3.5/site-packages/rest_framework/renderers.py", line 557, in get_raw_data_form
    content = renderer.render(serializer.data, accepted, context)
  File "/myproject/.env/desktop/lib/python3.5/site-packages/rest_framework/serializers.py", line 531, in data
    ret = super(Serializer, self).data
  File "/myproject/.env/desktop/lib/python3.5/site-packages/rest_framework/serializers.py", line 266, in data
    self._data = self.get_initial()
  File "/myproject/.env/desktop/lib/python3.5/site-packages/rest_framework/serializers.py", line 410, in get_initial
    for field in self.fields.values()
  File "/myproject/.env/desktop/lib/python3.5/site-packages/rest_framework/serializers.py", line 363, in fields
    for key, value in self.get_fields().items():
  File "/myproject/.env/desktop/lib/python3.5/site-packages/rest_framework/serializers.py", line 1004, in get_fields
    field_name, info, model, depth
  File "/myproject/.env/desktop/lib/python3.5/site-packages/rest_framework/serializers.py", line 1139, in build_field
    return self.build_unknown_field(field_name, model_class)
  File "/myproject/.env/desktop/lib/python3.5/site-packages/rest_framework/serializers.py", line 1246, in build_unknown_field
    (field_name, model_class.__name__)
django.core.exceptions.ImproperlyConfigured: Field name `project_users` is not valid for model `Project`.
pydev debugger: process 27471 is connecting
The above exception is for DRF ver. 3.5.4 but similar is also for the latest DRF ver. 3.6.3
Slightly modified code (project_users renamed into project_users_cnt) works properly:
class ProjectSerializer(serializers.ModelSerializer):
    project_users_cnt = serializers.SerializerMethodField()

    class Meta:
        model = Project
        fields = ('id', 'name', 'project_users_cnt')

    def get_project_users_cnt(self, obj):
        try:
            return obj.project_users
        except AttributeError:
            return None