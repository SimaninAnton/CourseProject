fraybabak commented on 30 Dec 2017
I have 2 models in my project .model A and B .model B has a OneToOne relation with model A. I wrote a serializer class for model B. in .create() function I have a problem for saving model B .cause I need to override the save() function in B model for inserting Slug value.the error is : save() got an unexpected keyword argument 'force_insert'
class A(models.Model):
    address = models.Charfield(max_length=160)
  
class b(models.Model):
    a = models.OneToOneField(AdIfo, related_name='ad_info', primary_key=True, 
                                                                                       on_delete=models.CASCADE)
    slug = models.SlugField(unique=True, db_index=True, blank=True)

    def save(self):
        self.slug ="%d%s" %(self.pk, slugify(self.title))
        super(B, self).save()
serializers.py
class ASerializer(serializers.ModelSerializer):

    class Meta:
        model = A
        fields = "__all__

class BSerilizer(serializers.ModelSerializer):
    a = ASerializer(many=False, required=False, allow_null=True)
    slug = serializers.SlugField(read_only=True)

     class Meta:
        model = B
        fields = '__all__'

    def create(self, validated_data):
  
        info_data = validated_data.pop('ad_info')
        A.objects.create(**info_data)
        ad = B.objects.update_or_create(**validated_data)
        A.objects.update_or_create(ad_info=adgame, **info_data)
        ad.save()
        return ad