justanr commented on 24 Feb 2016
I'd like to be able to pass the api_view decorator a specific viewset class to use instead of the generic APIView class. As well as arguments to pass to the as_view. Basically moving from:
@api_view(['GET', 'POST'])
def myview(...):
    pass
to
@api_view(['GET', 'POST'], viewset=MyCustomViewSet, initkwargs={...})
def myview(...):
    pass
The use case for this is that we have a specialized viewset class that adds some convenience for use but using the native api_view forces the APIView class to be used. However, the reason I'm using the decorator as opposed to the viewset itself is because of a routing issue (Simple/Default router really want to put a primary key on a route that I don't need it on).
I believe this can be accomplished in just a few lines of code and I'm happy to submit a PR for this if it's desired.