sampeka commented on 23 Jun 2015
Hi guys, just started using your project - seems great and the documentation is very clear . I'm having a problem at the moment when trying to pass many as a parameter to a PrimaryKeyRelatedField.
This is the Serializer:
class ProductSizeSerializer(serializers.ModelSerializer):
    product = serializers.PrimaryKeyRelatedField(
        many = False, read_only=False, queryset = Product.objects.all()
    )
    class Meta:
        model = ProductSize
        fields = ('product', 'size', 'low_in_stock', 'out_of_stock')
And here is the ProductSize model:
class ProductSize(models.Model):
    product = models.ForeignKey(Product, related_name="sizes")
    size = models.CharField(max_length=30)
    low_in_stock = models.BooleanField(default=False, blank=True)
    out_of_stock = models.BooleanField(default=False, blank=True)

    def __str__(self):
        return str(self.size)

    class Meta:
        ordering = ('size',)
        unique_together = ('product', 'size')
And finally this is the full traceback:
Environment:


Request Method: GET
Request URL: http://localhost:8000/search/

Django Version: 1.8.2
Python Version: 3.4.3
Installed Applications:
('django.contrib.admin',
 'django.contrib.auth',
 'django.contrib.contenttypes',
 'django.contrib.sessions',
 'django.contrib.messages',
 'django.contrib.staticfiles',
 'django.contrib.sites',
 'mptt',
 'search',
 'haystack',
 'social',
 'allauth',
 'allauth.account',
 'allauth.socialaccount',
 'actstream',
 'rest_framework',
 'restapi')
Installed Middleware:
('django.contrib.sessions.middleware.SessionMiddleware',
 'django.middleware.common.CommonMiddleware',
 'django.middleware.csrf.CsrfViewMiddleware',
 'django.contrib.auth.middleware.AuthenticationMiddleware',
 'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
 'django.contrib.messages.middleware.MessageMiddleware',
 'django.middleware.clickjacking.XFrameOptionsMiddleware',
 'django.middleware.security.SecurityMiddleware')


Traceback:
File "/Users/sampeka/virtualenv/thestylelocker/lib/python3.4/site-packages/django/core/handlers/base.py" in get_response
  119.                 resolver_match = resolver.resolve(request.path_info)
File "/Users/sampeka/virtualenv/thestylelocker/lib/python3.4/site-packages/django/core/urlresolvers.py" in resolve
  366.             for pattern in self.url_patterns:
File "/Users/sampeka/virtualenv/thestylelocker/lib/python3.4/site-packages/django/core/urlresolvers.py" in url_patterns
  402.         patterns = getattr(self.urlconf_module, "urlpatterns", self.urlconf_module)
File "/Users/sampeka/virtualenv/thestylelocker/lib/python3.4/site-packages/django/core/urlresolvers.py" in urlconf_module
  396.             self._urlconf_module = import_module(self.urlconf_name)
File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/importlib/__init__.py" in import_module
  109.     return _bootstrap._gcd_import(name[level:], package, level)
File "/Users/sampeka/dev/thestylelocker2/thestylelockerv2/urls.py" in <module>
  27.     url(r'^api/', include('restapi.urls')),
File "/Users/sampeka/virtualenv/thestylelocker/lib/python3.4/site-packages/django/conf/urls/__init__.py" in include
  33.         urlconf_module = import_module(urlconf_module)
File "/usr/local/Cellar/python3/3.4.3/Frameworks/Python.framework/Versions/3.4/lib/python3.4/importlib/__init__.py" in import_module
  109.     return _bootstrap._gcd_import(name[level:], package, level)
File "/Users/sampeka/dev/thestylelocker2/restapi/urls.py" in <module>
  2. from restapi.views import *
File "/Users/sampeka/dev/thestylelocker2/restapi/views.py" in <module>
  2. from restapi.serializers import *
File "/Users/sampeka/dev/thestylelocker2/restapi/serializers.py" in <module>
  17. class ProductSizeSerializer(serializers.ModelSerializer):
File "/Users/sampeka/dev/thestylelocker2/restapi/serializers.py" in ProductSizeSerializer
  19.       many = False, read_only=False, queryset = Product.objects.all()
File "/Users/sampeka/virtualenv/thestylelocker/lib/python3.4/site-packages/rest_framework/relations.py" in __init__
  45.         super(RelatedField, self).__init__(**kwargs)

Exception Type: TypeError at /search/
Exception Value: __init__() got an unexpected keyword argument 'many'
Any ideas why I'm getting this error? The documentation seems to suggest that many is a valid parameter?