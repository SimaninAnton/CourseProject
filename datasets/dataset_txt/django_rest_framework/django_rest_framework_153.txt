antwan commented on 8 May 2019
Since introduction of change #6435 (commit fd32dd7), exceptions that are raised within a DRF APIView have their stack trace truncated. It is therefore very difficult to fix issues as there is no longer indication of line number/file affected when exception is uncaught.
Steps to reproduce
Create a simple view in your code to trigger an uncaught exception
# views.py
from rest_framework.views import APIView

class CrashView(APIView):
    def get(self, request):
        raise Exception('A test exception occured!')
# urls.py
from django.conf.urls import url
from .views import CrashView

urlpatterns = [
    url(r'^crash-me/$', CrashView.as_view(), name='crash-me'),
]
Call the view
GET /crash-me/
Expected behavior
Stack trace returned should be the following:
Traceback (most recent call last):
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/django/views/decorators/csrf.py", line 58, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/rest_framework/views.py", line 492, in dispatch
    response = handler(request, *args, **kwargs)
  File "/Users/antwan/Projects/drf-bug/views.py", line 5, in get
    raise Exception('A test exception occured!')
Actual behavior
Stack trace returned is the following:
Traceback (most recent call last):
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/django/views/decorators/csrf.py", line 58, in wrapped_view
    return view_func(*args, **kwargs)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/django/views/generic/base.py", line 68, in view
    return self.dispatch(request, *args, **kwargs)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/rest_framework/views.py", line 495, in dispatch
    response = self.handle_exception(exc)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/rest_framework/views.py", line 455, in handle_exception
    self.raise_uncaught_exception(exc)
  File "/Users/antwan/Projects/venv/lib/python2.7/site-packages/rest_framework/views.py", line 466, in raise_uncaught_exception
    raise exc