gitaarik commented on 31 Jul 2014
I have a serializer that uses a custom method to return multiple serialized objects:
class DudeSerializer(serializers.Serializer):

    def get_cute_chicks(self, dude):
        return ChickSerializer(
            dude.chicks.filter(attitude='cute'),
            many=True,
            contex=self.context
        ).data

    cute_chicks = serializers.SerializerMethodField('get_cute_chicks')
It would be nice if we could golf it to this:
class DudeSerializer(serializers.Serializer):

    def get_cute_chicks(self, dude):
        return dude.chicks.filter(attitude='cute')

    cute_chicks = ChickSerializer(
        many=True
        serializer_method='get_cute_chicks'
    )
I realise I could as well put the get_cute_chicks method on the model, but this is just as an example, the method I'm using in real life is not desirable on the model (it is specific to the API).
Not sure if this would be the most efficient way. This could also be a possibility:
class DudeSerializer(serializers.Serializer):

    def get_cute_chicks(self, dude):
        return dude.chicks.filter(attitude='cute')

    cute_chicks = serializers.SerializerMethodField(
        'get_cute_chicks',
        serializer=ChickSerializer,
        many=True
    )