shanemgrey commented on 18 May 2016
After working around the inability to update a ForeignKey when it is serialized as a nested object, I have a suggestion for enhancement.
Problem:
Often it's desirable to change only the reference to a foreign model instance without changing the instance.
DRF offers only two options for nested data. The field is either completely read_only, or custom .create() and .update() methods must be written.
Suggestion
A new behavior should be added to remove the need for read_only, and the need to write custom methods when the only thing needing changing is the reference to the related instance.
When receiving an object with a nested field, DRF should read the PK field (id) of the nested object and ignore the rest of the data it contains. In other words, it should treat the nested field as if it were only its PK.
To avoid leading a developer to believe the nested information is being updated without an .update() method, there could be a new param like "update_reference_only=True". And when there is no parameter or custom method provided, the console error could be changed to the following:
AssertionError: The `.update()` method does not support writable
nested fields by default. Write an explicit `.update()` method for serializer
or add `update_reference_only=True` to the field to update only the 
reference to the foreign instance and not it's nested data. 
Same for .create().
This is the write up I did for my work around without this enhancement. http://stackoverflow.com/questions/37285305/update-only-foreignkey-reference-when-given-nested-object/37285306#37285306