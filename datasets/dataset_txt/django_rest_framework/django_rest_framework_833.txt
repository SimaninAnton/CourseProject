rodxavier commented on 7 Apr 2017 •
edited
Checklist
I have verified that that issue exists against the master branch of Django REST framework.
I have searched for similar issues in both open and closed tickets and cannot find a duplicate.
This is not a usage question. (Those should be directed to the discussion group instead.)
This cannot be dealt with as a third party library. (We prefer new functionality to be in the form of third party libraries where possible.)
I have reduced the issue to the simplest possible case.
I have included a failing test as a pull request. (If you are unable to do so we can still accept the issue.)
Steps to reproduce
In Django 1.11's release notes, the following is noted:
For consistency with non-multipart requests, MultiPartParser.parse() now leaves request.POST immutable. If you’re modifying that QueryDict, you must now first copy it, e.g. request.POST.copy().
Now, trying to alter request.data is throwing AttributeError: This QueryDict instance is immutable.
Typical use cases for altering request.data would be adding in computed attributes such as created_by or updating fields dependent on other fields.
Expected behavior
We should still be able to change request.data
Actual behavior
request.data is throwing AttributeError: This QueryDict instance is immutable.