deepakprakash commented on 26 Mar 2013
We are using DRF for our API & loving it so far! However, we have a need to paginate relationship fields that return multiple items - couldn't find a way to do this.
To demonstrate using examples similar to those in the documentation:
class TrackSerializer(serializers.ModelSerializer):
    class Meta:
        model = Track
        fields = ('order', 'title')

class AlbumSerializer(serializers.ModelSerializer):
    tracks = TrackSerializer(many=True)

    class Meta:
        model = Album
        fields = ('album_name', 'artist', 'tracks')
Example serialized output for an Album:
{
    'album_name': 'The Grey Album',
    'artist': 'Danger Mouse'
    'tracks': [
        {'order': 1, 'title': 'Public Service Annoucement'},
        {'order': 2, 'title': 'What More Can I Say'},
        {'order': 3, 'title': 'Encore'},
        ...
    ],
}
This becomes problematic where there are hundreds of tracks in a single Album. Is there a way to paginate the 'tracks' in this case?
Ideally, in cases like this, the 'tracks' should point to an API URL that just returns the Tracks for this particular Album - which in turn can be paginated easily. The down side to that approach being the extra request (and hence delay, etc) required to get even the first few tracks. In our case, its important that we be able to get at least a few of the Tracks with the single request to the Album API and then dynamically load the rest of the tracks as required.
Does the DRF offer any specific feature or pattern for this? Or are there any work arounds?
(Posted this on StackOverflow yesterday - cross posting here)