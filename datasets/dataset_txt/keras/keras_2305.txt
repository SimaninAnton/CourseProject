anupamjamatia commented on 24 May 2017
Can any one explain the difference
Can Someone please explain why there are different accuracy in model.fit() and predict_classes() ?
model.evaluate gave ('Test score:', 0.5457103276905948) and ('Test accuracy:', 0.94977169167505548) using:
score = model.evaluate(x_val, y_val, batch_size=batch_size, verbose=0)
print ('Raw test score:', score)
print('Test score:', score[0])
print('Test accuracy:', score[1])
and the accuracy_score of model.predict_classes on Train and test data gave Training accuracy:94.17% and Testing accuracy: 88.61%
Code is given here: https://gist.github.com/dirko/375397bc942d134a3c82d0dd514f3fea
Regards
[ok] Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
[ok] If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.
[ok] If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
[ok] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).