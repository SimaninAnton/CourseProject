Contributor
daavoo commented on 16 Mar 2017 •
edited
I've updated to keras v2 yesterday.
I adapted all my code from version 1 to the new API, following all the warnings I encountered.
However I'm having some very strange problems with fit_generator method of Model.
Using this toy example, wich worked totally fine in version 1:
from keras.models import Model
from keras.layers import Input, Dense, Flatten
from keras.optimizers import SGD
from keras.losses import categorical_crossentropy
from keras.preprocessing.image import ImageDataGenerator

gen = ImageDataGenerator()
train_batches = gen.flow_from_directory("D:/GitHub/Kaggle/redux/train/")

inp = Input(shape=(256,256,3))
l1 = Flatten()(inp)
out = Dense(2, activation="softmax")(l1)

model = Model(inp, out)

model.compile(loss=categorical_crossentropy, optimizer=SGD(lr=0.01))

model.fit_generator(train_batches, train_batches.samples / train_batches.batch_size)
The output in jupyter notebook is quite strange, printing a unknown symbol until the notebook crashes:
Epoch 1/1
   23/718 [..............................] - ETA: 522s - loss: 8.4146 �������������������������������������������������������
Running the code from the terminal don't print those strange symbols.
The code works perfect when manually getting the batches from the generator to use with model.fit:
n = 0
for imgs, labels in train_batches:
    if n > 3:
        break
    X_train = np.array(imgs)
    y_train = np.array(labels)
    model.fit(X_train, y_train)
     n += 1
Epoch 1/1
   32/32 [==============================] - 0s - loss: 7.5555
   Epoch 1/1
   32/32 [==============================] - 0s - loss: 8.5627
   Epoch 1/1
   32/32 [==============================] - 0s - loss: 6.5480
   Epoch 1/1
   32/32 [==============================] - 0s - loss: 10.0738
Anyone is facing similar problems with fit_generator and/or know something about it?