kohpangwei commented on 14 Oct 2015
Hello!
I'm running into an issue where training a simple model on examples that contain all zeroes returns NaN for the weights and the loss. Here is an example:
import numpy as np 

from keras.models import Sequential
from keras.layers.core import Activation
from keras.layers.convolutional import Convolution1D

np.random.seed(0)

X2 = np.zeros([1, 1, 1])
Y2 = np.ones([1, 1, 1])

model = Sequential()
model.add(            
    Convolution1D(                    
        1,
        1,
        input_dim=1,
        border_mode='valid'))   
model.add(Activation('relu'))

model.compile(optimizer='adagrad', loss='MSE')

hist = model.fit(
    X2,
    Y2,
    nb_epoch=2)
Running the above code gives:
Epoch 1/2
1/1 [==============================] - 0s - loss: 1.0000
Epoch 2/2
1/1 [==============================] - 0s - loss: nan
This happens even when the number of examples is larger (in the above code, it's 1) â€“ just one example that's all zero is sufficient for the NaN to occur. Changing the zero to any other number, even 0.00001, removes the problem. The problem also goes away when you remove the ReLU layer.
I don't get this problem when running on the PyPI Theano build. The problem only occurs when I pull the latest Theano build from their Github repo. However, using the older Theano build isn't an option, because of the concat bug there.
Does anyone know what's going on? Thanks in advance!