meysamgolm commented on 19 Dec 2016 â€¢
edited
I am already aware of some discussions on how to use Keras for very large datasets. But I saw something interesting! When I am using model.fit, my loss decreases to 0.3 with number_epoch=4. But when I am using model.fit_generator, my loss decreases to 0.3 by number_epoch=12. Do you have any idea?
I put my script here just in case:
`def generate_reduced_dimension_arrays_from_file(ilist_a, edfroot_a, featroot_a, labroot_a, feat_ext_a, lab_ext_a, num_channels_a, feat_fdur_a, win_len_a, models_order, ipca_model):
while True:

    # loop over all input list files 
    #
    for i in range(0, len(ilist_a)):

        # read a list of edfs into memory
        #
        edf_list = [line.rstrip('\n') for line in open(ilist_a[i])]

        # loop over all the edf files inside the list.
        #
        for edf_path in edf_list:

            # numpy arrays befor applying IPCA.
            #
            d_raw_np = []
            a_raw_np = []
            train_set_x = []
            train_set_y = []
            d_ipca = []
            d_raw_np, a_raw_np = generate_arrays_from_file(edf_path, edfroot_a, featroot_a, labroot_a, feat_ext_a, lab_ext_a, num_channels_a, feat_fdur_a, win_len_a, models_order)

            # apply IPCA on data 
            #
            d_ipca = ipca_model.transform(d_raw_np)
            print "d_ipca.shape = " , d_ipca.shape

            # reshape data and annotation for LSTM.
            # This is a requirement for Keras.
            # 
            train_set_x = np.reshape(d_ipca, d_ipca.shape + (1,))
            train_set_y = np.reshape(a_raw_np, a_raw_np.shape + (1,))
            yield (train_set_x, train_set_y)
...
# define LSTM model
#
print "Build LSTM model ..."
lstm_model = Sequential()
lstm_model.add(LSTM(lstm_batch_size_a, input_shape=(ipca_output_size_a, 1)))
lstm_model.add(Dense(1, activation='sigmoid'))
lstm_model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
print(lstm_model.summary())
lstm_model.fit_generator(generate_reduced_dimension_arrays_from_file(ilist_a, edfroot_a, featroot_a, labroot_a, feat_ext_a, lab_ext_a, num_channels_a, feat_fdur_a, win_len_a,    models_order, ipca_model),
    samples_per_epoch=80000, nb_epoch=12)`