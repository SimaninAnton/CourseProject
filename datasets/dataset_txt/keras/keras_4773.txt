Contributor
keunwoochoi commented on 15 Jul 2016
#1732 says we can't directly optimise auc as it is not differentiable. Then can't we have it only as a metric?
I just hoped this might work (without proper understanding...), but have an error message in compilation.
from sklearn import metrics
from keras import backend as K

def auc(y_true, y_pred):
    return metrics.roc_auc_score(K.eval(y_true), K.eval(y_pred))
and the error is..
  File "/Users/gnu/Dropbox/codes/msd_tagging/my_keras_model_essence.py", line 66, in build_convnet_model
    model.compile(loss=loss_function, optimizer=optimiser, metrics=metrics)
  File "/Users/gnu/anaconda/lib/python2.7/site-packages/keras/models.py", line 343, in compile
    **kwargs)
  File "/Users/gnu/anaconda/lib/python2.7/site-packages/keras/engine/training.py", line 642, in compile
    self.metrics.append(metric_fn(y_true, y_pred))
  File "/Users/gnu/Dropbox/codes/msd_tagging/my_metrics.py", line 9, in auc
    return metrics.roc_auc_score(K.eval(y_true), K.eval(y_pred))
  File "/Users/gnu/anaconda/lib/python2.7/site-packages/keras/backend/theano_backend.py", line 71, in eval
    return x.eval()
  File "/Users/gnu/anaconda/lib/python2.7/site-packages/theano/gof/graph.py", line 520, in eval
    self._fn_cache[inputs] = theano.function(inputs, self)
  File "/Users/gnu/anaconda/lib/python2.7/site-packages/theano/compile/function.py", line 320, in function
    output_keys=output_keys)
  File "/Users/gnu/anaconda/lib/python2.7/site-packages/theano/compile/pfunc.py", line 479, in pfunc
    output_keys=output_keys)
  File "/Users/gnu/anaconda/lib/python2.7/site-packages/theano/compile/function_module.py", line 1776, in orig_function
    output_keys=output_keys).create(
  File "/Users/gnu/anaconda/lib/python2.7/site-packages/theano/compile/function_module.py", line 1428, in __init__
    accept_inplace)
  File "/Users/gnu/anaconda/lib/python2.7/site-packages/theano/compile/function_module.py", line 177, in std_fgraph
    update_mapping=update_mapping)
  File "/Users/gnu/anaconda/lib/python2.7/site-packages/theano/gof/fg.py", line 171, in __init__
    self.__import_r__(output, reason="init")
  File "/Users/gnu/anaconda/lib/python2.7/site-packages/theano/gof/fg.py", line 367, in __import_r__
    raise MissingInputError("Undeclared input", variable)
theano.gof.fg.MissingInputError: ('Undeclared input', dense_1_target)
The error is from this line.
I would be convenient if numpy-based metric function can be used -- if it is not possible now. I am computing it after each iteration, but then there is redundant predictions and I can't take advantage of callbacks.