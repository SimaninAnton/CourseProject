Contributor
ozabluda commented on 4 Dec 2017 â€¢
edited
The code below
from keras.models import Sequential, Model
from keras.layers import Dense, BatchNormalization, Conv1D, Conv2D
import numpy as np
import keras; print(keras.__version__)

m1 = Sequential([
    Dense(units=1, input_dim=1, use_bias=False),
    #BatchNormalization(),
])

m2 = Sequential([
    Dense(units=1, input_dim=1, use_bias=False),
])

m3 = Model(inputs = m1.inputs, outputs = m2(m1(m1.inputs)))

m2.trainable=False
m3.compile(optimizer='sgd', loss='mse')
print("m3:")
m3.summary()

x = np.zeros((1, 1))
y = np.zeros((1, 1))

m3.fit(x, y, verbose=0)
produces correct number of Trainable params: 1 when BatchNormalization is commented out:
Using TensorFlow backend.
2.1.1
m3:
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense_1_input (InputLayer)   (None, 1)                 0         
_________________________________________________________________
sequential_1 (Sequential)    (None, 1)                 1         
_________________________________________________________________
sequential_2 (Sequential)    (None, 1)                 1         
=================================================================
Total params: 2
Trainable params: 1
Non-trainable params: 1
_________________________________________________________________
but wrong number of Trainable params: 3 if BatchNormalization() is uncommented:
Using TensorFlow backend.
2.1.1
m3:
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense_1_input (InputLayer)   (None, 1)                 0         
_________________________________________________________________
sequential_1 (Sequential)    (None, 1)                 5         
_________________________________________________________________
sequential_2 (Sequential)    (None, 1)                 1         
=================================================================
Total params: 6
Trainable params: 3
Non-trainable params: 3
_________________________________________________________________
correct number is Trainable params: 5, because all 5 of them of them in sequential_1 are trainable (1 Dense + 4 BatchNormalization). Out of correct Total params: 6, Non-trainable params: 3 is wrong (should be Non-trainable params: 1), since the only non-trainable 1 parameter is from m2, same as when BatchNormalization is commented out.