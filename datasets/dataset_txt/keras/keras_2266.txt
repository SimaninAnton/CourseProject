vdods commented on 30 May 2017
Please make sure that the boxes below are checked before you submit your issue. If your issue is an implementation question, please ask your question on StackOverflow or join the Keras Slack channel and ask there instead of filing a GitHub issue.
Thank you!
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).
Currently serialization of a Keras model necessarily involves reading/writing it from/to disk as an HDF5 file. I wasn't able to find any other Keras method or function that does this to an abstract IO stream (or for a more concrete example, serialize to a memory buffer). A also looked at the h5py library which is used by Keras, and did not find any way to serialize to anything but a file.
My usecase is that I need to cache many types of data, including Keras models, in different places -- in memory, as well as a piece of data within a larger data structure or file. Put concisely, I need more control over the serialization of Keras models -- not just "save to file XYZ" or "load from file XYZ". I would be happy with a means to save/load a Keras model to/from a byte array, even if it was still in hdf5 format. A reasonable alternative to hdf5 is protobuf.
Also relevant: An analysis on why hdf5 isn't necessarily a good choice: http://cyrille.rossant.net/moving-away-hdf5/