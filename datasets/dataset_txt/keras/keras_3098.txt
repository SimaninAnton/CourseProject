Imorton-zd commented on 1 Mar 2017 â€¢
edited
I need to add a loss term of two intermediate layers. For example:
x1 = Input(shape=(input_size,))
ld = Dense(128, activation='relu')
out1 = Dense(1, activation='sigmoid')

x2 = Input(shape=(input_size,))
rd = Dense(128, activation='relu')
out2 = Dense(1, activation='sigmoid')

def three_loss(x1,x2,ld,rd,out1,out2):
        loss1 = K.sum(objectives.binary_crossentropy(x1, out))
# The gap between `ld` and `rd` is expected as small as possible
        loss2 = K.sum(objectives.binary_crossentropy(ld, rd))
        loss3 = K.sum(objectives.binary_crossentropy(x2, out2))

model = Model(input=[x1,x2], output=[ld2,rd2])
model.compile(optimizer='adadelta',
                  loss = three_loss, metrics=['accuracy'])
However, the error tells me that the three_loss need six input but only given four. How can I solve this problem? To my knowledge, the input and output must be the actual data sets and observed targets, I can not add the rd or ld in them.