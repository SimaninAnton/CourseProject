dc-ai commented on 9 Feb 2017 â€¢
edited
I'm trying to create a neural network "within" a neural network, basically I branch off from an intermediate layer, use that as an output to train another neural network. I want to train both networks together. I can't seem to do it, I run into the following error:
UserWarning: Model inputs must come from a Keras Input layer, they cannot be the output of a previous non-Input layer
Sample code below:
# 1st NN: Simple convolutional autoencoder
input_img = Input(shape=(1, 80, 80), name="input_layer")
intermediate = Convolution2D(32, 3, 3, subsample=(2, 2))(input_img)
decoded = Deconvolution2D(1, 3, 3, subsample=(2, 2))(intermediate)

#2nd NN: Uses output from encoding part to do supervised learning on FC layers
fc_flatten = Flatten()(intermediate)
y = Dense(64)(fc_flatten)
fc_output = Dense(1)(y)

model = Model(input=[input_img, fc_flatten], output=[decoded, fc_output])
I don't understand. I'm using almost the same architecture as the "Multi-input and multi-output models" example on the Keras Functional API, with the exception that I don't have an auxillary input.