kirk86 commented on 9 Feb 2017
Hi guys,
I was wondering what's the proper usage of .build() method. For instance I wanted to accomplish something like the following:
from keras.applications import VGG16
from keras.layers.core import Dense

model = VGG16(include_top=True, weights=None)
model.layers.pop()
model.layers.append(Dense(10, activation='softmax', name='predictions'))
model.summary()
but model.summary() throws error about layer not being built, so I tried the following
model.build(model.get_layer(name='fc2').output_shape)
model.summary()
still throws error about layer not being built. I'm lost on how to use .build() to build that particular layer.
The above way of doing things feel more natural and I think the .build() should be called automatically when the user uses model.layers.append() instead of having every time to call it explicitly.
Furthermore, the above code seems sorter and more readable than using the following functional api approach
rom keras.applications import VGG16
from keras.layers.core import Dense
from keras.layers import Model

model = VGG16(include_top=True, weights=None)
model.layers.pop()
x = model.output
x = Dense(10, activation='softmax', name='predictions')(x)
model = Model(model.input , x)
model.compile(...)
model.summary()
4