lysecret2 commented on 10 Jul 2018 â€¢
edited
Hey,
I am using TF 1.9 and tf.Keras.
I have a Keras Model which is based on a custom layer. This custom Layer has 3 Arguments. The init looks like this.
class Multi_Attention(keras.layers.Layer):

    def __init__(self, feature_dim,value_dim,nheads, **kwargs):
        self.FC1_dim = feature_dim
        self.value_dim=value_dim
        self.nheads=nheads
        super(Multi_Attention, self).__init__(**kwargs)
        
In my model I instantiate a version of this layer by:
ma_1=Multi_Attention(feature_dim=300,value_dim=300,nheads=20)
Now when I try to convert my keras model to estimator using:
estimator_model = keras.estimator.model_to_estimator(keras_model=model)
I get the following error:
__init__() missing 3 required positional arguments: 'feature_dim', 'value_dim', and 'nheads'
Basically it uses the default initializations of the variables of the model instead of the instantiated ones.
If I do it like this:
class Multi_Attention(keras.layers.Layer):

    def __init__(self, feature_dim=300,value_dim=300,nheads=20, **kwargs):
        self.FC1_dim = feature_dim
        self.value_dim=value_dim
        self.nheads=nheads
        super(Multi_Attention, self).__init__(**kwargs)

        
it works.
Thanks for your help!