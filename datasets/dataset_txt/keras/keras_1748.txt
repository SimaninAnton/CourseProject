saeeeeed2613 commented on 12 Aug 2017 â€¢
edited
I Am developing a classification based-model to predict 12 probability for each pixel in the image , I have built the architecture , but I am not sure whether I am right or not , I am a newbie in deep learning.
The following is the function for my baseline architecture :
import keras
 from keras.models import Model
 from keras.layers import Flatten, Dense, Input, Reshape,concatenate
 from keras.layers import Conv2D
 from keras import regularizers 
 
 Input_Img=Input(shape=(Img_Size,Img_Size,1),name='Main_Input')     
 
 #The First Conv Layer + BatchNormalization
 X=Conv2D(filters=8,kernel_size=5,activation='relu',name='Conv1')(Input_Img)
 #The Second Conv Layer + BatchNormalization
 X=Conv2D(filters=16,kernel_size=5,activation='relu',name='Conv2')(X)
  #The Third Conv Layer + BatchNormalization
 X=Conv2D(filters=32,kernel_size=5,activation='relu',name='Convfsf3d')(X)

 X=Flatten()(X)
 X=Dense(units=8,activation='relu')(X)
 U=Dense(units=49152,name='U_Nodes',activation='softmax')(X)
 V=Dense(units=49152,name='V_Nodes',activation='softmax')(X)
 
 L_Reshape=Reshape(target_shape=(Img_Size*Img_Size,1))(Input_Img)
 U_Reshape=Reshape(target_shape=(Img_Size*Img_Size,12))(U)
 V_Reshape=Reshape(target_shape=(Img_Size*Img_Size,12))(V)
 X=concatenate(inputs=[L_Reshape,U_Reshape,V_Reshape])
 MyModel=Model(Input_Img,X)
 MyModel.compile(optimizer='adam',loss=keras.losses.categorical_crossentropy,metrics=['accuracy'])
 print(MyModel.summary())
 return MyModel
I will explain my architecture , the input is about a 64 * 64 * 1 graysale image , followed by many convolution layers and then it is flattened then there is two different hidden layer U & V , U represents U Channel in the CIELUV color space and V represents V Channel in the same color space, then the U&V channels each of them is reshaped into 64 * 64 * 12 , lemme convert it to 4096 * 12 so , in the 4096 pixel each of them should have a 12 corresponding probabilities and the sum of the 12 probability should be = 1 but that doesn't happen the sum of the overall matrix ( 4096 * 12 ) = 1 , how can I do that make every 12 node have a sum of 1 probability ? thanks in advance