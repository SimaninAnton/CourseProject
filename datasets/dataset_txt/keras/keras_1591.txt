qwfy commented on 14 Oct 2017 â€¢
edited
Two changes are proposed in this issue to make ImageDataGenerator more usable for the final testing phase:
Change 1: ImageDataGenerator can be exhaused
The documentation of ImageDataGenerator says:
Generate batches of tensor image data with real-time data augmentation. The data will be looped over (in batches) indefinitely.
It seems to me that, this (loops indefinitely) implies that, the image data generator is mainly used for the training process, and not for the final test (because we only need one epoch when testing).
Sure you can achieve the one epoch purpose by using steps = ceil(total_examples / batch_size), but this relies on the implementation of preprocessing.image.Iterator and is not a documented behaviour.
I propose:
Add an exhaustive = True|False keyword argument that controls whether the iterator yields indefinitely or not.
Alternative to 1, we can also make the steps = ceil(...) mentioned above a documented behaviour, and also document that after the final step, each image is visited exactly once.
Change 2: Add a new class_mode = "filename" to yields the filenames of the batch
The current implementation of ImageDataGenerator.flow_from_directory() allows you to recover the current batch's filenames by using its batch_index and filenames property, but this relies on the implementation and is not documented.
I propose we add a new class_mode = "filename" to yields the filenames of the current batch, just like we don't let user slice its classes property to get the current batch's class. (The filename is useful at least for making some Kaggle submissions).
Both these changes are backward compatible.
3
1