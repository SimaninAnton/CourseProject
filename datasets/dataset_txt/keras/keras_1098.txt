Jamesswiz commented on 13 Apr 2018 â€¢
edited
I am using Keras with TF backend.
I am trying a new CNN architecture.
Suppose the output of my CNN layer has shape (a,b,c), where a-batchsize, b,c are output row and column dimensions: Lets call it 'x'
c is typically very large so I need to iterate over it somehow.
I want to design a custom Lambda layer which slipts the output tensor x columnwise i.e., x [:, :, i]
and for each ith column, I want to perform a operation. Finally I want to concatenate these new individual outputs to get final output say 'x1' of shape (a,b1,c)
Any help how I can do that efficiently?
I tried a crude way of by splitting output to a list, and perform a operation using say function f(). The network trains well but after saving and reloading the model for testing on same data it fails to predict. I feel somehow the network is not loaded properly.
a,b,c = [i.value for i in x.shape]
xtemp = [keras.layers.Lambda(lambda y: y[:,:,i])(x) for i in range(c)]
xtemp1 = [ f()(l) for l in xtemp]
x1 = keras.layers.concatenate (xtemp1, axis=-1)
thanks in advance!