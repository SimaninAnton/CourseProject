Contributor
jfsantos commented on 20 May 2016
I trained a model and want to use it as the cost function for another model. The model has two inputs and some layers which require a training_phase input (namely, BatchNormalization), but I don't know how to provide the training_phase info to the model. I tried to create a function as follows:
# cost_model is the model I want to use. It has two inputs
cost_model = model_from_json(cost_model_json)
cost_model.load_weights('cost_model.h5')
cost_model.trainable = False
cost = K.function(cost_model.input, cost_model.output)
Then I get this error:
MissingInputError: An input of the graph, used to compute DimShuffle{x,x,x,x}(keras_learning_phase), was not provided and not given a value.Use the Theano flag exception_verbosity='high',for more information on this error.

Backtrace when the variable is created:
  File "c:\users\jfsantos\src\keras\keras\backend\__init__.py", line 51, in <module>
    from .theano_backend import *
  File "<frozen importlib._bootstrap>", line 2237, in _find_and_load
  File "<frozen importlib._bootstrap>", line 2226, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 1200, in _load_unlocked
  File "<frozen importlib._bootstrap>", line 1129, in _exec
  File "<frozen importlib._bootstrap>", line 1471, in exec_module
  File "<frozen importlib._bootstrap>", line 321, in _call_with_frames_removed
  File "c:\users\santosj\src\keras\keras\backend\theano_backend.py", line 17, in <module>
    _LEARNING_PHASE = T.scalar(dtype='uint8', name='keras_learning_phase')  # 0 = test, 1 = train
I tried adding an extra input to the function (calling K.function(cost_model.input + [learning_phase], cost_model.output) but that did not work. Any ideas?