Contributor
mptorr commented on 4 Jun 2017 â€¢
edited
I'm trying to use Keras' implementation of VGG16 with grayscale images, channels first.
My training data is shaped as follows:
x_train shape: (7961, 1, 128, 128)
y_train shape: (7961, 1)
X_test shape: (1991, 1, 128, 128)
y_test shape: (1991, 1)
When I build my model:
model_vgg16 = VGG16(include_top=False, 
                        weights=None, 
                        input_tensor=None, 
                        input_shape=(1, 128, 128), 
                        pooling=None,
                        classes=CLASSES)
it throws this error:
File "/Library/.../keras/applications/vgg16.py", line 101, in VGG16
    include_top=include_top)
  File "/Library/.../keras/applications/imagenet_utils.py", line 116, in _obtain_input_shape
    '`input_shape=' + str(input_shape) + '`')
ValueError: The input must have 3 channels; got `input_shape=(1, 128, 128)`
This seems odd since I am using include_top=False and weights=None but it still seems to expect a 3 channel tensor and is passing my shape through imagenet_utils.py, which seems inflexible in allowing for anything < 3 channels (see _obtain_input_shape).
Is this desirable?
If I keep input_shape=None then I get a shape mismatch error at the beginning of training epoch 1.
Keras 2.0.4
Python 3.5
3