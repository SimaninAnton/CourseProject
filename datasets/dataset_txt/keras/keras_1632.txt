meysamgolm commented on 28 Sep 2017
I implemented a model in both of sequential and API in Keras and the results are different. I appreciate if someone helps me to figure out why the training results are not the same.
Here is the sequential model:
`
# build CNN/LSTM and train it.
#
model = Sequential()

# build CNN/LSTM and train it.

model.add(TimeDistributed(Conv2D(16, (3, 3), padding='same', kernel_initializer='Orthogonal'), input_shape=(210, 22, 26, 1))) 
model.add(Activation('elu'))
model.add(TimeDistributed(MaxPooling2D(pool_size=(2, 2))))
model.add(Dropout(0.2))

model.add(TimeDistributed(Conv2D(32, (3, 3), padding='same', kernel_initializer='Orthogonal'))) 
model.add(Activation('elu'))
model.add(TimeDistributed(MaxPooling2D(pool_size=(2, 2))))
model.add(Dropout(0.2))

model.add(TimeDistributed(Conv2D(64, (3, 3), padding='same', kernel_initializer='Orthogonal'))) 
model.add(Activation('elu'))
model.add(TimeDistributed(MaxPooling2D(pool_size=(2, 2))))

model.add(TimeDistributed(Flatten()))

model.add(Conv1D(16, 3, padding='same', kernel_initializer='Orthogonal'))
model.add(Activation('elu'))
model.add(MaxPooling1D(pool_size=8))

model.add(Bidirectional(LSTM(64, return_sequences=True, kernel_initializer='Orthogonal'))) 
model.add(Activation('elu'))
model.add(Bidirectional(LSTM(128, return_sequences=False, kernel_initializer='Orthogonal'))) 
model.add(Activation('elu'))
model.add(Dense(1, activation='sigmoid'))
adammgm = keras.optimizers.Adam(lr=0.0005, beta_1=0.9, beta_2=0.999, epsilon=1e-08, decay=0.0001)
model.compile(loss='mean_squared_error', optimizer=adammgm, metrics=['accuracy'])
print(model.summary())`
Here is functional API model:
`
# This returns a tensor
#
inputs = Input(shape=(210, 22, 26, 1))

# a layer instance is callable on a tensor, and returns a tensor
#
x = TimeDistributed(Conv2D(16, (3, 3), padding='same', kernel_initializer='Orthogonal'))(inputs)
x = Activation('elu')(x)
x = TimeDistributed(MaxPooling2D(pool_size=(2, 2)))(x)
x = Dropout(0.2)(x)

x = TimeDistributed(Conv2D(32, (3, 3), padding='same', kernel_initializer='Orthogonal'))(x)
x = Activation('elu')(x)
x = TimeDistributed(MaxPooling2D(pool_size=(2, 2)))(x)
x = Dropout(0.2)(x)

x = TimeDistributed(Conv2D(64, (3, 3), padding='same', kernel_initializer='Orthogonal'))(x)
x = Activation('elu')(x)
x = TimeDistributed(MaxPooling2D(pool_size=(2, 2)))(x)

x = TimeDistributed(Flatten())(x) 

x = Conv1D(16, 3, padding='same', kernel_initializer='Orthogonal')(x)
x = Activation('elu')(x)
x = MaxPooling1D(pool_size=8)(x)

x = Bidirectional(LSTM(64, return_sequences=True, kernel_initializer='Orthogonal'))(x) 
x = Activation('elu')(x)
x = Bidirectional(LSTM(128, return_sequences=False, kernel_initializer='Orthogonal'))(x)
x = Activation('elu')(x)

predictions = Dense(1, activation='sigmoid')(x)`