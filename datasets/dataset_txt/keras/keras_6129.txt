breadada commented on 13 Jan 2016
Hi, all.
I am new here. I just want to try 1D-CNN on kaggle-titanic competition.My input data is 819 rows and 24 cols. I have already met many erros such as
1."expected 3, got 2 with shape(128, 24)".After reshape(891, 1, 24), it seems solved.
2."ValueError:Output dimensions are not valid -3*1", I try to fix it, so I change "input_dim=24" to "input_length=24", and something strange occurs:
pic1:source code in keras/layers/convolutional.py (Keras0.1.3)
pic2:my code, change input_dim to input_length
pic3:erros, no input_length!? but it did exist in the source code.
I just want to know how to run through such codes and realize Conv and Pool in 1D data.


my code:
from keras.preprocessing.image import ImageDataGenerator
from keras.models import Sequential
from keras.layers.core import Dense, Dropout, Activation, Flatten
from keras.layers.advanced_activations import PReLU
from keras.layers.convolutional import Convolution1D, MaxPooling1D
from keras.optimizers import SGD, Adadelta, Adagrad
from keras.utils import np_utils, generic_utils
import cPickle as pickle
import numpy as np
from sklearn.cross_validation import train_test_split
''' input data
train_add_test = pickle.load(open('train_add_test.pkl', 'rb'))
label = np.array(train_add_test.Survived[:891])
data = np.array(train_add_test.drop('Survived', axis=1))
label = np_utils.to_categorical(label, 2)
train = data[:891]
test = data[891:]
print train.shape, label.shape # (891, 24) (891, 2)
''' reshape
newshape = (891, 1, 24)
train = np.reshape(train, newshape)
print train.shape # (891, 1, 24)
''' model
model = Sequential()
''' input_dim= 24, after Conv=24-5+1=20, after Maxp=20/2=10
model.add(Convolution1D(nb_filter=4, filter_length=5, input_length=24, border_mode='valid'))
model.add(Activation('tanh'))
model.add(MaxPooling1D(pool_length=2))
''' input_dim=10, after Flatten=4*10
model.add(Flatten())
model.add(Dense(input_dim=40, output_dim=10, init='uniform'))
model.add(Dropout(0.5))
model.add(Activation('tanh'))
model.add(Dense(input_dim=10, output_dim=1))
model.add(Activation('sigmoid'))
''' train
sgd = SGD(l2=0.0, lr=0.02, decay=1e-6)
model.compile(loss='binary_crossentropy',optimizer=sgd, class_mode='binary')
print 'Training...'
model.fit(train, label, nb_epoch=20, shuffle=True, verbose=1, show_accuracy=True, validation_split=0.2)
print 'Done.'
OUTPUT:
"This module will be removed in 0.20.", DeprecationWarning)
(891, 24) (891, 2)
(891, 1, 24)
Traceback (most recent call last):
File "cnn.py", line 37, in
model.add(Convolution1D(nb_filter=4, filter_length=5, input_length=24, border_mode='valid'))
TypeError: init() got an unexpected keyword argument 'input_length'