thebeancounter commented on 28 Dec 2018 â€¢
edited
I am using keras with tf backend to create a siamese network, I am trying to create a custom loss function for triplet loss and need to
pass it with multiple outputs in a one tensor that I can then split in the loss function in order to calculate the gradient.
I am trying to use what explained here as for how to use multiple outputs in a concatenated form, and use it in my code in the following way
input_layer = Input(shape=(784,))                               
a = Dense(100, activation="relu")(input_layer)                  
o = Dense(40, activation="relu")(a)                             
layer1 = Lambda(lambda x: K.expand_dims(x, axis=2))(o)          
layer2 = Lambda(lambda x: K.expand_dims(x, axis=2))(o)          
concat_layer = concatenate([layer1, layer2], axis=2)            
                                                                
model = Model(input_layer, concat_layer)                        
model.compile(optimizer=SGD(), loss=triplet_loss_wrapper())     
                                                                
(x_train, y_train), (x_test, y_test) = mnist.load_data()        
x_test = x_test.reshape(x_test.shape[0], 784)                   
                                                                
                                                                
model.fit(x_test, [1] * len(x_test))
I get the following error
(np_val.shape, subfeed_t.name, str(subfeed_t.get_shape())))
ValueError: Cannot feed value of shape (32, 1) for Tensor
'concatenate_1_target:0', which has shape '(?, ?, ?)'
please also see my connected SO question