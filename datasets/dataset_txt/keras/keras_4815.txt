Fheanor commented on 8 Jul 2016 â€¢
edited
Hey,
I am a beginner in Deeplearning so I might say some "stupid" things. So please, I hope you don't mind.
My problem is that I want to build a Deep Learning model that is able to build a vector of 51 parameters from an image of a hand.
-I have as inputs, images of 64x64 bits, so I need a density of 12288 for the first layer (64_64_3(RGB)).
For information, I work with images of a hand in different positions.
-The output values have to be a vector of 51 parameters that allows me to build a 3D representation of the hand.
So I need as density of the last layer a value of 51.
To train my model, I use supervised learning. I give to the model 35k images of the hand and vectors that are associated to these images.
My aim is that the model is able to see a connection between an image and its vector of parameters. But I can't have a descent one, I have something like 20 of loss.
Here is my model. Could someone have a look at it, and at least explain me what kind of Deep Learning models I should study because I have hard trouble to choose my layers...
model = Sequential()
model.add(Dense(1, input_shape = (12288,), init ="uniform"))
model.add(Activation('tanh'))

model.add(Dropout(0.2))

model.add(Dense(6144))
model.add(Activation('tanh'))
model.add(Dense(3072))
model.add(Activation('tanh'))
model.add(Dense(1536))
model.add(Activation('tanh'))

model.add(Dropout(0.2))

model.add(Dense(output_dim = (51), init="uniform"))

model.compile(loss='mean_squared_error', optimizer='sgd')`
Best regards and thank you very much.