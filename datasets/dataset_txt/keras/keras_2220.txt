vitobellini commented on 5 Jun 2017
It seems that is not possibile to predict without using fit first.
So we cannot predict using a loaded model already trained.
Using TensorFlow backend.
2017-06-05 11:34:04,117 - Keras - INFO - Loading train set
2017-06-05 11:34:04,268 - Keras - INFO - Loading features
2017-06-05 11:34:04,272 - Keras - INFO - Training the model
User: 1 -> Item: 2002
N: 13460
Traceback (most recent call last):
  File "./predict.py", line 225, in <module>
    main()
  File "./predict.py", line 133, in main
    Y = estimator.predict(row)
  File "/usr/local/lib/python3.5/dist-packages/keras/wrappers/scikit_learn.py", line 315, in predict
    return np.squeeze(self.model.predict(x, **kwargs))
AttributeError: 'KerasRegressor' object has no attribute 'model'
my code is:
def load_model():
 global model
 optimizer = optimizers.Nadam(lr=0.002, beta_1=0.9, beta_2=0.999, epsilon=1e-08, schedule_decay=0.004)

 model = model_from_json(open('model.json').read())
 model.load_weights('model.h5')

 # dont forget to compile your model
 model.compile(loss='mean_squared_error', optimizer=optimizer)
 model = to_multi_gpu(model)
 model.compile(loss='mean_squared_error', optimizer=optimizer)
 return model

estimator = KerasRegressor(build_fn=load_model, epochs=250, batch_size=1000, verbose=1)
row = item_row(num_features, train_set, user, user_profile, item, features)