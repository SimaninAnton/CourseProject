rmkemker commented on 9 Nov 2017 â€¢
edited
I am trying to append a model to the pre-trained ResNet-50 using Tensorflow. This is just an example to replicate the error. I am trying to initialize all trainable parameters without erasing the pre-trained ResNet-50 weights. I am using Python 3, and the latest version of Tensorflow and Keras.
import tensorflow as tf
from keras.applications.resnet50 import ResNet50

ckpt_path = 'example'

input_t = tf.placeholder(tf.float32, shape=(None, 224, 224, 3))
training = tf.placeholder(tf.bool)

with tf.variable_scope('new_model'):
    conv1 = tf.layers.conv2d(input_t, 3, 
                             kernel_size=(3,3), 
                             padding='same',name='conv1',
                             kernel_initializer=tf.glorot_normal_initializer())
    
    bn1 = tf.layers.batch_normalization(conv1, fused=True, training=training,
                               name='bn1')

    trainable_vars = tf.get_collection(tf.GraphKeys.TRAINABLE_VARIABLES,
                                           scope="new_model")    
    resnet = ResNet50()(bn1)
  
    with tf.Session() as sess:
        saver = tf.train.Saver()
        sess.run(tf.variables_initializer(trainable_vars))
        saver.save(sess, ckpt_path+'/model.ckpt', 0)
I use BatchNormalization in my model, so I get the following error:
Traceback (most recent call last):

  File "<ipython-input-1-449753a374eb>", line 1, in <module>
    runfile('/home/rmk6217/Documents/ccbb_tf/example_error.py', wdir='/home/rmk6217/Documents/ccbb_tf')

  File "/home/rmk6217/anaconda3/lib/python3.5/site-packages/spyder/utils/site/sitecustomize.py", line 710, in runfile
    execfile(filename, namespace)

  File "/home/rmk6217/anaconda3/lib/python3.5/site-packages/spyder/utils/site/sitecustomize.py", line 101, in execfile
    exec(compile(f.read(), filename, 'exec'), namespace)

  File "/home/rmk6217/Documents/ccbb_tf/example_error.py", line 38, in <module>
    saver.save(sess, ckpt_path+'/model.ckpt', 0)

  File "/home/rmk6217/anaconda3/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1594, in save
    raise exc

  File "/home/rmk6217/anaconda3/lib/python3.5/site-packages/tensorflow/python/training/saver.py", line 1573, in save
    {self.saver_def.filename_tensor_name: checkpoint_file})

  File "/home/rmk6217/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 889, in run
    run_metadata_ptr)

  File "/home/rmk6217/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1120, in _run
    feed_dict_tensor, options, run_metadata)

  File "/home/rmk6217/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1317, in _do_run
    options, run_metadata)

  File "/home/rmk6217/anaconda3/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 1336, in _do_call
    raise type(e)(node_def, op, message)

FailedPreconditionError: Attempting to use uninitialized value new_model/bn1/moving_mean
  [[Node: new_model/bn1/moving_mean/_4 = _Send[T=DT_FLOAT, client_terminated=false, recv_device="/job:localhost/replica:0/task:0/device:CPU:0", send_device="/job:localhost/replica:0/task:0/device:GPU:0", send_device_incarnation=1, tensor_name="edge_7_new_model/bn1/moving_mean", _device="/job:localhost/replica:0/task:0/device:GPU:0"](new_model/bn1/moving_mean)]]
  [[Node: new_model/res3a_branch2c/kernel/_499 = _Recv[_start_time=0, client_terminated=false, recv_device="/job:localhost/replica:0/task:0/device:CPU:0", send_device="/job:localhost/replica:0/task:0/device:GPU:0", send_device_incarnation=1, tensor_name="edge_254_new_model/res3a_branch2c/kernel", tensor_type=DT_FLOAT, _device="/job:localhost/replica:0/task:0/device:CPU:0"](^_arg_new_model/save/Const_0_0, ^new_model/save/SaveV2/tensor_names, ^new_model/save/SaveV2/shape_and_slices)]]
Is there a way of initializing the moving mean's without using tf.global_variables_initializer()? When I use that, it runs without error - but it deletes the pre-trained ResNet-50 weights. Any thoughts would be appreciated.