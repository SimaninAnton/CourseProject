chledowski commented on 28 Nov 2017
Hi!
I am trying to reproduce esim, state of the art method in Natural Language Inference. After first epoch, I get the following error:
Traceback (most recent call last):
  File "src/scripts/train_model.py", line 69, in <module>                                                                                         
    plugins=[MetaSaver(), AutomaticNamer(namer="timestamp_namer")])                                                                               
  File "/home/kchledowski/subspace-word-embeddings/src/vegab.py", line 403, in main                                                               
    call_training_func)()                                                                                                                         
  File "/home/kchledowski/subspace-word-embeddings/src/vegab.py", line 265, in func_wrapper                                                       
    func(*args, **kwargs)                                                                                                                         
  File "/home/kchledowski/subspace-word-embeddings/src/vegab.py", line 388, in call_training_func                                                 
    func(config, args.save_path, **training_func_kwargs)                                                                                          
  File "src/scripts/train_model.py", line 56, in train_model                                                                                      
    n_epochs=config["n_epochs"], batch_size=config["batch_size"])                                                                                 
  File "/home/kchledowski/subspace-word-embeddings/src/training_loop.py", line 125, in baseline_training_loop                                     
    callbacks=callbacks)                                                                                                                          
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/legacy/interfaces.py", line 87, in wrapper                      
    return func(*args, **kwargs)                                                                                                                  
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/training.py", line 2082, in fit_generator                
    callbacks.on_epoch_end(epoch, epoch_logs)                                                                                                     
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/callbacks.py", line 77, in on_epoch_end                         
    callback.on_epoch_end(epoch, logs)                                                                                                            
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/callbacks.py", line 428, in on_epoch_end                        
    self.model.save(filepath, overwrite=True)                                                                                                     
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/topology.py", line 2553, in save                         
    save_model(self, filepath, overwrite, include_optimizer)                                                                                      
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/models.py", line 107, in save_model                             
    'config': model.get_config()                                                                                                                  
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/site-packages/keras/engine/topology.py", line 2394, in get_config                   
    return copy.deepcopy(config)                                                                                                                  
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 150, in deepcopy                                                     
    y = copier(x, memo)   
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 240, in _deepcopy_dict                                               
    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 150, in deepcopy                                                     
    y = copier(x, memo)                                                                                                                           
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 220, in _deepcopy_tuple                                              
    y = [deepcopy(a, memo) for a in x]                                                                                                            
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 220, in <listcomp>                                                   
    y = [deepcopy(a, memo) for a in x]                                                                                                            
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 150, in deepcopy                                                     
    y = copier(x, memo)                                                                                                                           
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 220, in _deepcopy_tuple                                              
    y = [deepcopy(a, memo) for a in x]                                                                                                            
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 220, in <listcomp>                                                   
    y = [deepcopy(a, memo) for a in x]                                                                                                            
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 180, in deepcopy                                                     
    y = _reconstruct(x, memo, *rv)                                                                                                                
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 280, in _reconstruct                                                 
    state = deepcopy(state, memo)                                                                                                                 
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 150, in deepcopy                                                     
    y = copier(x, memo)                                                                                                                           
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 240, in _deepcopy_dict                                               
    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 180, in deepcopy                                                     
    y = _reconstruct(x, memo, *rv)                                                                                                                
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 280, in _reconstruct                                                 
    state = deepcopy(state, memo)                                                                                                                 
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 150, in deepcopy                                                     
    y = copier(x, memo)                                                                                                                           
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 240, in _deepcopy_dict                                               
    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 180, in deepcopy                                                     
    y = _reconstruct(x, memo, *rv)                                                                                                                
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 280, in _reconstruct                                                 
    state = deepcopy(state, memo)                                                                                                                 
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 150, in deepcopy                                                     
    y = copier(x, memo)                                                                                                                           
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 240, in _deepcopy_dict                                               
    y[deepcopy(key, memo)] = deepcopy(value, memo)                                                                                                
  File "/home/kchledowski/anaconda2/envs/tf3gpu/lib/python3.6/copy.py", line 169, in deepcopy                                                     
    rv = reductor(4)                                                                                                                              
TypeError: can't pickle _thread.lock objects 
Which may look like problem with saving in my model. However, when I use simpler neural network architecture, such as bilstm, everything works correctly and I can proceed to the next epoch.
Any ideas, what might be the cause?
[+] Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
[+] If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.