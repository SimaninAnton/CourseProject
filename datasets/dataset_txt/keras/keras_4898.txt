aravindr93 commented on 27 Jun 2016 â€¢
edited
Is there any way to update only a subset of model parameters when using model.fit() procedure? For example, update only the weights corresponding to model.layers[1].W
I have tried a roundabout way: extract all the weights prior to model.fit(). Then set the weights of all other parameters back to the previous value. However, this is extremely slow. Would be great if there were alternate methods to perform this.
It will be useful in a number of contexts like complex network architectures with multiple input streams, multiple output streams, and multiple objectives. It's conceivable that you might want to use one objective to train only a particular part of the network, and hold weights in other parts of the network constant. A popular example would be many architectures like actor-critic in reinforcement learning.
Example: See the multi-input multi-output twitter example in this page http://keras.io/getting-started/functional-api-guide/ How can we train only the dense_1, dense_2 layers using error in main_output channel. Thanks!