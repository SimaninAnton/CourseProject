Contributor
talpay commented on 5 Jul 2016 â€¢
edited
layer.convolutional.Pooling1D and layer.convolutional.Convolution1D are hard-coded to use theano dimensions (the other 2D/3D operations aren't):
self.init = initializations.get(init, dim_ordering='th')
...
output = K.conv2d(x, self.W, strides=self.subsample,
                          border_mode=self.border_mode,
                          dim_ordering='th')
Is this a workaround for something or a bug? From a design perspective, I don't think that passing dim_ordering to the backend makes any sense. The backend knows whether theano or TF is being used, i.e. the dimensionality should be hardcoded in tensorflow_backed to support tensorflow and in theano_backend to support theano (by directly calling e.g. K.image_dim_ordering). I don't see a reasonable scenario where one would ever use Tensorflow but want Theano dimension ordering as the default.