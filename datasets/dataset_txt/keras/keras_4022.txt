JACKHAHA363 commented on 1 Nov 2016
Here I have a loss for VAE.
50     def vae_loss(sf, x, x_dec):                                                                                                                           
51         ''' Use a uniform for y_prior ''' 
52         sf.xent_loss = sf.input_dim * objectives.binary_crossentropy(x, x_dec)
53         sf.z_loss = - 0.5 * K.sum(1 + sf.z_log_var - K.square(sf.z_mean) - K.exp(sf.z_log_var), axis=-1)
54         sf.y_loss =  - K.sum(sf.y_probs * K.log(sf.y_probs * sf.y_dim), axis=-1)  
55         return sf.xent_loss + sf.z_loss + sf.y_loss
I want to check how xent_loss change during the training. I create a call back function like this:
 28 class SaveLossComp(Callback):
 29     def on_epoch_end(self, epoch, logs={}):
 30         logs['reconst_err'] = K.eval(model.xent_loss)
It gives me error that I have to feed a data to the input placeholder. I'm using tensorflow as backend, but I don't know how to feed data using keras backend function. Can any one help me out here? Or is there some existing keras functions that I can use to record the value of a keras tensor throughout training?