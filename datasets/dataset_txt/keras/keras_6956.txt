loyeamen commented on 16 Jun 2015
I have added this layer in my local keras (under convolutional layers):
class GlobalPooling(Layer):
'''
Apply a global pooling to an output.
'''
def init(self, pooling_function = T.mean):
super(GlobalPooling,self).init()
self.pooling_function = pooling_function
def get_output(self, train):
X = self.get_input(train)
return self.pooling_function(X.flatten(3), axis = 2)
def get_config(self):
    return {"name":self.__class__.__name__,
           "pooling_function}":self.pooling_function.__name__}
It seems to work fine, can you please add this support?
Thanks!