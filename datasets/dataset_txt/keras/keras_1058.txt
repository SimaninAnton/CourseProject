Hannabrahman commented on 3 May 2018
Hello GUys,
I am training a multiple input/output keras model. The problem is, during the training the validation accuracies for each output across all epochs are above 83%.
But when I save the best weights through modelcheckpoints and tries to load and evaluate model on the same validation set, I got 42% accuracy. (it assign all samples to one class in a binary classification)
1- Which output this 42% referes to? shouldn't there be 3 accuracy for 3 outputs?
However, I don't have this problem when doing single output keras model.
2- This is the code I use for model.evaluation after training is finished:
load weights
model_mul.load_weights("checkpoints/weights_full_multi.best.hdf8")
Compile model (required to make predictions)
model_mul.compile(loss='categorical_crossentropy',
optimizer='adam',
loss_weights=[1.,0.7,0.7],
metrics=['acc'])
print("Created model and loaded weights from file")
estimate accuracy on whole dataset using loaded weights
scores = model_mul.evaluate([validation_data[0]['word_embedding'],validation_data[0]['aux_vfeature']],[validation_data[1]['task1'],validation_data[1]['task2'],validation_data[1]['task3']], verbose=0)
print("%s: %.2f%%" % (model.metrics_names[1], scores[1]*100))
make prediction
predictions = model_mul.predict([validation_data[0]['word_embedding'],validation_data[0]['aux_vfeature']])
predicted_classes = np.argmax(predictions, axis=1)
Am I evaluating my model wrong? Any help is appreciated