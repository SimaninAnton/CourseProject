y-rok commented on 30 Nov 2017
I am developing multi-layered LSTM networks, but when i set dropout=0.2 as a parameter in LSTMCell object an error occurs.
Here's my code and error log.
class RNN(object):
    def __init__(self,layer = None,model_name = None):
            self.layer=layer
            self.model_name=model_name

    def _get_model(self):

        cells=[]
        if self.model_name == config.RNN_LSTM:
            for unit_num in self.layer:
                cells.append(LSTMCell(unit_num,dropout=0.2))
        elif self.model_name == config.RNN_GRU:
            for unit_num in self.layer:
                cells.append(GRUCell(unit_num,dropout=0.2))

        return keras_RNN(cells)

    def _get_log_path(self):
        return config.LOG_PATH+self.model_name+'_'+str(self.layer)+"/"

    def _get_model_path(self):
        return config.MODEL_PATH+self.model_name+'_'+str(self.layer)+"/"
       
       self.model = Sequential()
        self.model.add(Embedding(num_words, self.layer[0]))
        self.model.add(self._get_model())

        if self.model_name == config.RNN_GRU or self.model_name == config.RNN_LSTM:
            self.model.add(Dense(1, activation='sigmoid'))

        self.model.compile(loss='binary_crossentropy',
                           optimizer='adam',
                           metrics=['accuracy'])
Traceback (most recent call last):
  File "/home/rok/project/RNN_sentiment_analysis/train.py", line 89, in <module>
    rnn=train(FLAGS.dataset, FLAGS.model_name,FLAGS.layer,FLAGS.num_epochs, FLAGS.batch_size,num_words,seq_len)
  File "/home/rok/project/RNN_sentiment_analysis/train.py", line 65, in train
    rnn.build_imdb_model(num_words)
  File "/home/rok/project/RNN_sentiment_analysis/rnn.py", line 39, in build_imdb_model
    self.model.add(self._get_model())
  File "/home/rok/tensorflow/lib/python3.5/site-packages/keras/models.py", line 489, in add
    output_tensor = layer(self.outputs[0])
  File "/home/rok/tensorflow/lib/python3.5/site-packages/keras/layers/recurrent.py", line 482, in __call__
    return super(RNN, self).__call__(inputs, **kwargs)
  File "/home/rok/tensorflow/lib/python3.5/site-packages/keras/engine/topology.py", line 603, in __call__
    output = self.call(inputs, **kwargs)
  File "/home/rok/tensorflow/lib/python3.5/site-packages/keras/layers/recurrent.py", line 589, in call
    input_length=timesteps)
  File "/home/rok/tensorflow/lib/python3.5/site-packages/keras/backend/tensorflow_backend.py", line 2556, in rnn
    outputs, _ = step_function(inputs[0], initial_states + constants)
  File "/home/rok/tensorflow/lib/python3.5/site-packages/keras/layers/recurrent.py", line 580, in step
    return self.cell.call(inputs, states, **kwargs)
  File "/home/rok/tensorflow/lib/python3.5/site-packages/keras/layers/recurrent.py", line 86, in call
    inputs, states = cell.call(inputs, states, **kwargs)
  File "/home/rok/tensorflow/lib/python3.5/site-packages/keras/layers/recurrent.py", line 1806, in call
    inputs_i = inputs * dp_mask[0]
TypeError: 'NoneType' object is not subscriptable
Exception ignored in: <bound method BaseSession.__del__ of <tensorflow.python.client.session.Session object at 0x7f7e13482eb8>>
Traceback (most recent call last):
  File "/home/rok/tensorflow/lib/python3.5/site-packages/tensorflow/python/client/session.py", line 701, in __del__
TypeError: 'NoneType' object is not callable
When i changed _get_model function like below, error does not occur.
    def _get_model(self):

        cells=[]
        if self.model_name == config.RNN_LSTM:
            for unit_num in self.layer:
                cells.append(LSTMCell(unit_num))
        elif self.model_name == config.RNN_GRU:
            for unit_num in self.layer:
                cells.append(GRUCell(unit_num))

        return keras_RNN(cells)
I guess there are problems in LSTMCell module. How can i handle it?