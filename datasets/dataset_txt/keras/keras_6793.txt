Contributor
nehz commented on 6 Aug 2015
Convolution1D(input_dim, nb_filter, ...) 
(nb_samples, steps, input_dim) -> (nb_samples, steps, nb_filter)

Convolution2D(nb_filter, stack_size, nb_row, nb_col, ...)
(nb_samples, stack_size, nb_row, nb_col) -> (nb_samples, nb_filter, nb_row, nb_col)
Why is the init params nb_filter and stack_size/input_dim swapped around (1D compared to 2D)?
Same with the output shapes of (nb_samples, steps, nb_filter) vs (nb_samples, nb_filter, nb_row, nb_col)?
Actually doing a bit more work on 1D convnets, the API is actually quite nice as you can treat steps as X and nb_filter as y1, y2 ... yn.
MaxPooling1D: (nb_samples, steps, dim) -> (nb_samples, steps, new_dim)
MaxPooling2D: (nb_samples, stack_size, nb_row, nb_col) -> (nb_samples, stack_size, new_nb_row, new_nb_col)
With this "swapping", should MaxPooling1D reduce/downsample on the steps axis rather than on the dim/nb_filter output axis ? Also because we are convoluting on the steps axis ?