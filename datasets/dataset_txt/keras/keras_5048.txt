tubaybb321 commented on 1 Jun 2016
Currently, Layers are given default names that are determined only by their class name (with the exception of a uid that is appended). However, an Activation layer may represent a ReLU, SoftMax, Tanh etc.
I think that for diagnostic issues (or at least better identifying a net's architecture, particularly if you use different activation layers), more information could be added to the default name. I'm proposing adding the following lines to the init function of the Activation class, after the call to super:
        name_list = self.name.split('_')
        name_list.insert(-1,self.activation.func_name)
        self.name = '_'.join(name_list)
This way, one will see layer names like:
activation_relu_5
instead of just:
activation_5
I know this is an exceedingly minor issue, but it's a change I've made in my local copy and thought I might as well put it out there