vinayakumarr commented on 5 Apr 2017 â€¢
edited
My code is given below for computing gradients in order to visualize the sailency map
from keras import backend as K
import theano
def compile_saliency_function(model):
"""
Compiles a function to compute the saliency maps and predicted classes
for a given minibatch of input images.
"""
inp = model.layers[0].input
#print("-----------------------input-----------------------------")
#print(inp)
outp = model.layers[-1].output
#print("-----------------------output----------------------------")
#print(outp)
max_outp = K.T.max(outp, axis=1)
#print(max_outp)
saliency = K.gradients(K.sum(max_outp),inp)
#print(saliency.eval())
max_class = K.T.argmax(outp, axis=1)
print(max_class)
v1 = K.function([inp, K.learning_phase()], [saliency, max_class])
return v1
v = compile_saliency_function(model)([X_train[:1], 0])[0]
print(v)
I am getting 421 vector (Because i have 43 features ). But i want to get 424 (where 4 is the number of classes). Could you please tell where should i make changes?