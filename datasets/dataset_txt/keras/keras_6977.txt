c-f-h commented on 7 Jun 2015
Training a binary classification net with the binary_crossentropy loss function, I found that when the fit method has managed to correctly classify all test cases, the error will become 0 and thus the loss function becomes NaN. Any further training steps cause all future calls to predict to return only NaNs as well, which is certainly not intended.
Ideally, the net would stop training once this occurs. At the very least, the case of the loss function becoming NaN should be handled gracefully.