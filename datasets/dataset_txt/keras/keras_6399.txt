colincsl commented on 24 Nov 2015
I just modified my action recognition code to comply with the updated Keras API that includes input shape inference. Previously I had a model that applied a set of 1D convolutions over timeseries data followed by MaxPooling2D(poolsize=(1, n_feat)) which computes the best scoring activation for each timestep.
When I do this with the new update I get an error: "AssertionError: Incompatible shapes: layer expected input with ndim=4 but previous layer has output_shape (None, 9110, 5)"
Is there a reason MaxPooling2D no longer works for timeseries data? Or perhaps I'm applying it incorrectly?
Here is a simplified version of my code:
        model = Graph()
        model.add_input('input', (n_timesteps, n_feat))
        model.add_node(Convolution1D(n_filters, conv, activation="relu", border_mode='full'),
                                   name="d0", input="input")
            model.add_node(MaxPooling2D([1, n_filters]), name="d_0", input="d0")

        model.add_node(Activation('softmax'), name="final", input=d_0)
        model.add_node(Dropout(.5), name="final_d", input="final")
        model.add_output(name='output', input='final_d')

        optimizer = Adam()
        model.compile(loss={'output': loss_type}, optimizer=optimizer)
        model.fit({'input':X_train, 'output':Y_train}, verbose=verbose, nb_epoch=nb_epoch, batch_size=batch_size,
                    sample_weight={'input':M_train})