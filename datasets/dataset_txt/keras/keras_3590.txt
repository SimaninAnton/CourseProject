Contributor
bstriner commented on 26 Dec 2016 â€¢
edited
Hello everybody, and Merry Christmas!
Currently, K.update functions are specific to the backend. For certain models, I need to modify the updates returned by the optimizer. For example, to implement backtracking or unrolling.
For theano this is update[1] but for tensorflow this is update.op.inputs[1]. Writing code to massage updates is different for theano than for tensorflow.
I propose to move the K.update operations to the common section of the backend so updates returned by optimizers are always a list of tuples. This way it is easy to inspect or modify the updates.
The K.Function for tensorflow would be responsible for converting to assignments.
Overall, the change is that a list of tuples is converted into a list of assignments lazily when the tensorflow function is created instead of when the update is created. This should deduplicate a handful of functions from the backend without affecting existing functionality.
Please let me know if anyone sees potential conflicts. Overall, seems like it should make it easier to write meta-optimizers. I'll start putting together a PR.
Note: this should only affect tensorflow because theano updates are already just a list of tuples, which is easy to inspect and modify.
Cheers,
Ben