R-Miner commented on 9 May 2018
This is the code snippet:
images = tf.image.decode_png(tf.squeeze(string_input),channels=3)
print(images.shape)
images=tf.reshape(images,[256,256,3])
images = tf.image.convert_image_dtype(images, dtype=tf.float32)
images = tf.expand_dims(images, 0)
print(images.shape)
model =Sequential()
model.add(InputLayer(input_tensor = images, input_shape = (256,256,3)))
model.add(Conv2D(32, (3, 3),input_shape = (256, 256, 3),activation = 'relu'))
model.add(MaxPooling2D(pool_size = (2, 2)))
model.add(Flatten())
model.add(Dense(units = 128, activation = 'relu'))
model.add(Dense(units = 2, activation = 'sigmoid'))
model.load_weights("model.h5")
model.summary()
But it looks like load_weights are not appended to the model when I check the model summary. Also its giving me a prediction of .499 and .5 for any image to be classified into two classes. How can i do the preprocessing effectively. Any help appreciated. i spend a whole lot time for this ans is not successful yet.