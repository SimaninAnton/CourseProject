MadhuriNagare commented on 18 Apr 2019
System information
Have I written custom code (as opposed to using example directory):
OS Platform: Linux
TensorFlow backend (yes / no): yes
TensorFlow version: tensorflow-gpu 1.13.1
Keras version: 2.2.4
Python version: Python 3.6.5 :: Anaconda, Inc.
CUDA/cuDNN version: 8.0_6.0
GPU model and memory: Tesla
Describe the current behavior
Execution gives an error
I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 AVX512F FMA
2019-04-18 08:53:13.656036: W tensorflow/compiler/xla/service/platform_util.cc:240] unable to create StreamExecutor for CUDA:0: failed initializing StreamExecutor for CUDA device ordinal 0: Internal: failed call to cuDevicePrimaryCtxRetain: CUDA_ERROR_OUT_OF_MEMORY: out of memory; total memory reported: 12790923264
2019-04-18 08:53:13.656293: F tensorflow/stream_executor/lib/statusor.cc:34] Attempting to fetch value instead of handling error Internal: no supported devices found for platform CUDA
/home/mnagare/bin/run_code.sh: line 10: 185799 Aborted python 25d_keras.py
Describe the expected behavior
code should run without an error
Code to reproduce the issue
import tensorflow as tf
from scipy.io import loadmat
import numpy as np
import matplotlib.pyplot as plt
from keras import models
from keras import layers
PS = 30
Num_Patch_z = 5
def create_model(PS, Num_Patch_z):
#network design
network = models.Sequential()
#network.add(layers.Conv2D(64, (3, 3), padding='same', data_format="channels_last", activation='relu', input_shape=(PS, PS, Num_Patch_z)))
network.add(layers.Conv2D(32, (3, 3), padding='same', data_format="channels_last", activation='relu', input_shape=(PS, PS, Num_Patch_z)))
network.add(layers.BatchNormalization(axis=-1, momentum=0.99, epsilon=0.001))
network.add(layers.MaxPooling2D())
network.summary()
gpu_fraction = 0.95
gpu_options = tf.GPUOptions(per_process_gpu_memory_fraction=gpu_fraction)
with tf.Session(sess = tf.Session(config=tf.ConfigProto(gpu_options=gpu_options))):
model = create_model(PS, Num_Patch_z)
Other info / logs
The code ran well on colab. However, it is not working on the local machine.