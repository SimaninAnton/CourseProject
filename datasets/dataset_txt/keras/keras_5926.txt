mininaNik commented on 17 Feb 2016
I want to predict sequences of number vectors based on the previous ones. I have five sequences. I considered the length of the history 100. I transformed the data to following format:
As an input X I have array of n matrices, each with 100 rows and 5 columns (technically, X is a tensor with dimensions n x 100 x 5). The target y will be matrix n x 5 - for each input X_i (matrix 100 x 5) I want one corresponding row of y (with just two elements). So my input data (X) is a numpy array n x 100 x 5 and output (y) is n x 5 .
I want to implement a neural network without hidden layer (just like regression). Since I implemented my more complicated NNs in keras, for comparison with my previous result I have to implement this in keras also. My code is as follows
in_out_neurons = 5
history_length = 100
hidden_neurons = 20
model = Sequential()  
model.add(Dense(in_out_neurons, activation = "linear", input_dim = (history_length,in_out_neurons)))
model.compile(loss="mse", optimizer="rmsprop")
model.fit(X_train, y_train, batch_size=100, nb_epoch=2)
I got this error
Traceback (most recent call last):
File "/home/mina/Documents/research/five cores (FF) 4/KerasLSTM.py", line 216, in
main()
File "/home/mina/Documents/research/five cores (FF) 4/KerasLSTM.py", line 179, in main
model.add(Dense(in_out_neurons, activation = "linear", input_dim=(history_length,in_out_neurons)))
File "/usr/local/lib/python2.7/dist-packages/keras/layers/core.py", line 917, in init
super(Dense, self).init(**kwargs)
File "/usr/local/lib/python2.7/dist-packages/keras/layers/core.py", line 43, in init
self.set_input_shape((None,) + tuple(kwargs['input_shape']))
File "/usr/local/lib/python2.7/dist-packages/keras/layers/core.py", line 141, in set_input_shape
self.build()
File "/usr/local/lib/python2.7/dist-packages/keras/layers/core.py", line 922, in build
self.W = self.init((input_dim, self.output_dim))
File "/usr/local/lib/python2.7/dist-packages/keras/initializations.py", line 39, in glorot_uniform
s = np.sqrt(6. / (fan_in + fan_out))
TypeError: can only concatenate tuple (not "int") to tuple
Does anybody know the reason?