tjurczyk commented on 10 Oct 2015
Hi all,
I'm trying to train my NNet and I'm confused if the performance that I'm seeing is the best what is possible. This is the output when I try to execute check_blas.py from theano:
    blas.ldflags= -L/usr/lib -lopenblas
    compiledir= /home/george/.theano/compiledir_Linux-3.19--generic-x86_64-with-Ubuntu-14.04-trusty-x86_64-2.7.6-64
    floatX= float64
    device= cpu
Some OS infor xation:
    sys.platform= linux2
    sys.version= 2.7.6 (default, Jun 22 2015, 17:58:13) 
[GCC 4.8.2]
    sys.prefix= /home/george/virtualenv/wikiqa
Some environment variables:
    MKL_NUM_THREADS= None
    OMP_NUM_THREADS= None
    GOTO_NUM_THREADS= None
Numpy config: (used when the Theano flag "blas.ldflags" is empty)
lapack_info:
    libraries = ['lapack']
    library_dirs = ['/usr/lib']
    language = f77
lapack_opt_info:
    libraries = ['openblas', 'lapack']
    library_dirs = ['/usr/lib']
    define_macros = [('ATLAS_WITHOUT_LAPACK', None)]
    language = f77
    include_dirs = ['/usr/include/atlas']
blas_opt_info:
    libraries = ['openblas']
    library_dirs = ['/usr/lib']
    define_macros = [('HAVE_CBLAS', None)]
    language = c
openblas_info:
    libraries = ['openblas']
    library_dirs = ['/usr/lib']
    define_macros = [('HAVE_CBLAS', None)]
    language = c
openblas_lapack_info:
  NOT AVAILABLE
atlas_3_10_threads_info:
    libraries = ['openblas']
    library_dirs = ['/usr/lib']
    define_macros = [('ATLAS_WITHOUT_LAPACK', None)]
    language = c
    include_dirs = ['/usr/include/atlas']
lapack_mkl_info:
  NOT AVAILABLE
blas_mkl_info:
  NOT AVAILABLE
mkl_info:
  NOT AVAILABLE
While doing this, I see that all cores are nicely utilized (mpstat shows all cores are working)
However, when I try to train my NeuralNet (Conv2D + Pooling + Dense) I don't see any multicore usage on 'mpstat' (only one core is 100% used while all 15 other ones are idling 100%).
Initially my numpy didn't support openblas. I recompiled numpy with openblas and how Theano seems to support it. While used this test:
python `python -c "import os, theano; print os.path.dirname(theano.__file__)"`/misc/check_blas.py
I see that all cores are utilized, so I believe they should also be (in some way) utilized during training using Keras that uses Theano, aren't they?
Thanks for all suggestions!