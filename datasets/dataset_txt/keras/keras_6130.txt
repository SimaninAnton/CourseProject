pyben commented on 13 Jan 2016
Hi, I'm new to keras and deep learning. Right now I experimenting with imdb dataset using denoising autoencoder to classify the sentiment of the input.
I want to ask, what should I do to get a higher metrics (accuracy, recall, precision, f1)?
My current metrics are:
Accuracy: 0.5106
Recall: 0.41433778857837184
Precision: 0.5054347826086957
F1: 0.45537502782105505
I used scikit learn sklearn.metrics to compute the metrics.
Here's my code and the output of it.
Using Theano backend.
Train: (20000, 100)
Test: (5000, 100)
Epoch 1/2
20000/20000 [==============================] - 0s - loss: 6614393.5104     
Epoch 2/2
20000/20000 [==============================] - 0s - loss: 6614393.5136     
Train on 20000 samples, validate on 5000 samples
Epoch 1/2
20000/20000 [==============================] - 0s - loss: 0.7367 - acc: 0.5024 - val_loss: 0.7089 - val_acc: 0.5182
Epoch 2/2
20000/20000 [==============================] - 0s - loss: 0.7037 - acc: 0.5122 - val_loss: 0.6978 - val_acc: 0.5106
5000/5000 [==============================] - 0s     
Accuracy: 0.5106
Recall: 0.41433778857837184
Precision: 0.5054347826086957
F1: 0.45537502782105505
I tried to use epochs 20 but he metrics(below) are still low.
Accuracy: 0.511
Recall: 0.8120696638315107
Precision: 0.5030105368790768
F1: 0.6212238574748258
Also tried to normalize the input using sklearn.preprocessing.Normalizer but I still got a low metrics
and the output for the test inputs are all 1.
Accuracy: 0.4938
Recall: 1.0
Precision: 0.4938
F1: 0.6611326817512385
Thanks.