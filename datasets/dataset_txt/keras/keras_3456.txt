tobiasbj commented on 16 Jan 2017
Hi,
I am trying to use a Convoluton1D layer with sparse input and have been unable to get it working.
(Note: To enable sparse input I am using the Functional API)
This is the code (ie. I am unable to add the Convolution1D layer):
input = Input(batch_shape=(1, 1, 1), sparse=True) 
conv = Convolution1D(2, 2)(input)
(Note: If I set sparse=False I get no error)
I get the following error output
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-2-27db84482289> in <module>()
      1 input = Input(batch_shape=(1, 1, 1), sparse=True)
----> 2 conv = Convolution1D(2, 2)(input)

C:\Users\tobbjorm\AppData\Local\Continuum\Anaconda3\lib\site-packages\keras\engine\topology.py in __call__(self, x, mask)
    524             # Raise exceptions in case the input is not compatible
    525             # with the input_spec specified in the layer constructor.
--> 526             self.assert_input_compatibility(x)
    527 
    528             # Collect input shapes to build layer.

C:\Users\tobbjorm\AppData\Local\Continuum\Anaconda3\lib\site-packages\keras\engine\topology.py in assert_input_compatibility(self, input)
    464                                          self.name + ': expected ndim=' +
    465                                          str(spec.ndim) + ', found ndim=' +
--> 466                                          str(K.ndim(x)))
    467             if spec.dtype is not None:
    468                 if K.dtype(x) != spec.dtype:

ValueError: Input 0 is incompatible with layer convolution1d_1: expected ndim=3, found ndim=2
Is this something that isn't implemented yet? Or am I doing something wrong? To me it seems like it isn't implemented yet.
I have previously used the Functional API with sparse input for an MLP.
Ex:
input = Input(batch_shape=(None, 1), sparse=True)
hidden = Dense(2, activation='relu')(input)
Which works just fine.
I hope this is an understandable and valid issue.
Best,
Tobias