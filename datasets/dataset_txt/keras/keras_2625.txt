IvanGoenawan commented on 17 Apr 2017
This can be easily reproduced with the following short script:
from keras.applications.vgg16 import VGG16

model1 = VGG16(include_top=False)
print(model1.layers[1].weights[0].get_value().shape)    #3,64,3,3

model2 = VGG16(include_top=False,weights=None)
print(model2.layers[1].weights[0].get_value().shape)    #3,3,3,64
I'm using Keras with Theano. Both channels_first and channels_last format give the same result. The output dimension should come last using both settings. However, after loading in the weights from 'vgg16_weights_tf_dim_ordering_tf_kernels_notop.h5', the weight dimensions are now wrong. This makes the model completely unusable and produces errors such as:
ValueError: GpuElemwise. Input dimension mis-match. Input 1 (indices start at 0) has shape[1] == 64, but the output's size on that axis is 3.
or
ValueError: GpuDnnConv images and kernel must have the same stack size
Using the old theano version weight file 'vgg16_weights_th_dim_ordering_th_kernels_notop.h5' seems to resolve the issue.