Collaborator
fchollet commented on 30 Sep 2015
Here are a few things I think would be valuable to add to Keras in the near future.
These are mere suggestions. You are welcome to discuss them, contest them, add your own ideas... I would like the development of Keras to be increasingly driven by the community. I don't want to be a bottleneck of development.
I won't be writing code myself, but I will happily give feedback and advice to any contributor who wants to tackle some of these features. I will also keep reviewing and merging PRs.
Here's a list of features. Their focus is on simplicity and user experience.
Automatic tensor shape inference. We should be able to add layers to a Sequential mode or a Graph model without having to worry about input shapes.
Introduction of Input layers as part of the above, to define expected input data dimensions.
Ability to re-initialize layer weights without re-compiling a model.
New API for the Graph container. Some thoughts here. As part of this change I believe we should get rid of the add_input and add_output methods, which are cumbersome. A single add method should suffice.
Thorough checking of assumptions made about user-provided constructor arguments throughout the codebase, and raising helpful and clear error messages when some assumptions aren't respected. Ideally no error will ever be raised by Theano, because we will be catching everything on the Keras side. This will make debugging of Keras models much faster and easier.
Abstracting all references to Theano functionality to a Keras backend. This will allow us to implement non-Theano backends in the near future (for instance, based on Nervana's Neon library), that could be readily plugged into Keras in a seamless way. This will allow Keras to keep up with new advances in symbolic tensor libraries (Neon, CGT, etc...)