Contributor
carlthome commented on 24 Mar 2016
This model can be trained and used for predictions, but what does it actually predict? Is it one-to-one, many-to-many, or what? Batch size is set in model.fit(...) but what is the RNN sequence length when input_shape = (None, n)? Is it one? Is it automatically determined by the input shape when calling model.fit(...)? Shouldn't this raise an error?
n = 100
model = Graph()
model.add_input(name='input', input_shape=(None, n))
model.add_node(LSTM(n, return_sequences=True), name='lstm', input='input')
model.add_node(TimeDistributedDense(n, activation='sigmoid'), name='tdd', input='lstm')
model.add_output(name='output', input='tdd')
model.compile(loss={'output': 'mse'}, optimizer='rmsprop')
3