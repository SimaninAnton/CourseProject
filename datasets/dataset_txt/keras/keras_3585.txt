vinayakumarr commented on 27 Dec 2016
program snippet given below. I am trying for character based text classification.
trainlabels = pd.read_csv('labels.csv', header=None)
trainlabel = trainlabels.iloc[:,0:1]
path = "/home/censpark/rancyb/Allinone/other/mydga/lstm/multiclass/dga/New/train.txt"
X = open(path).read()
path = "/home/censpark/rancyb/Allinone/other/mydga/lstm/multiclass/dga/New/test.txt"
T = open(path).read()
Generate a dictionary of valid characters
valid_chars = {x:idx+1 for idx, x in enumerate(set(''.join(X)))}
max_features = len(valid_chars) + 1
maxlen = np.max([len(x) for x in X])
Convert characters to int and pad
X = [[valid_chars[y] for y in x] for x in X]
X_train = sequence.pad_sequences(X, maxlen=maxlen)
y_train1 = np.array(trainlabel)
y_train= to_categorical(y_train1)
embedding_vecor_length = 128
model = Sequential()
model.add(Embedding(max_features, embedding_vecor_length, input_length=maxlen))
model.add(LSTM(128))
model.add(Dropout(0.2))
model.add(Dense(18))
model.add(Activation('softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam',metrics=['accuracy'])
model.fit(X_train, y_train, batch_size=128, nb_epoch=15,validation_data=(X_train,y_train), shuffle=True)
score, acc = model.evaluate(X_train, y_train, batch_size=128)
print('Test score:', score)
print('Test accuracy:', acc)