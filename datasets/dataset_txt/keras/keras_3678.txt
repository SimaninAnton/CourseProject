raphael-sch commented on 15 Dec 2016 â€¢
edited
How can I implement a Siamese Model like http://www.aaai.org/ocs/index.php/AAAI/AAAI16/paper/view/12195 with trainable embeddings?
the two legs look like this by now:
shared_lstm = LSTM()

leg_1 = Sequential(name='sentence_1')
leg_1.add(Embedding(weights=[pretrained_embeddings], trainable=True))
leg_1.add(shared_title_lstm)

leg_2 = Sequential(name='sentence2')
leg_2.add(Embedding(weights=[pretrained_embeddings], trainable=True))
leg_2.add(shared_lstm)

model = Sequential()
model.add(Merge(layers[leg1, leg2], mode='concat', concat_axis=1
...
How can i share the weights of the lstm and the embeddings? I get the error: 'this shared variable already has an update expression'