lazysquid commented on 10 Nov 2017 â€¢
edited
Hello. I'm new to Keras and I'm not sure what should I do to implement this feature.
Currently I'm trying to adjust given (ground truth) data in loss function.
What I want to do is, split RGB image into RG image and apply element-wise divison using B channel values. (The data inside of RGB channel is not actually RGB so I need to some processing to calculate loss.)
For each pixel (R_i,G_i,B_i) --> (R_i/B_i, G_i/B_I)
Is this right implementation of above feature?
    # img is one of loss function input parameter
    converted_img = img[:,:,:,:-1] / img[:,:,:,-1] # (r_i, g_i, b_i) --> (r_i/b_i, g_i/b_i)
Also after this conversion, my data possibly diverge to infinity.
Should I clip this values? I know there is keras.bacend.epsilon which is used to clip small values.
However I couldn't find maximum values or infinity values to clip very large number.
What should I put for this clipping?
    converted_img = K.clip(converted_img, ?, ?)