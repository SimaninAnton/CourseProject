Sakuralbj commented on 29 Oct 2019 â€¢
edited
System information
Have I written custom code (as opposed to using example directory): example VAE
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS High Sierra 10.13.6
TensorFlow backend (yes / no): yes
TensorFlow version: 2.0.0-beta2
Keras version: 2.2.4
Python version: 2.7.15
CUDA/cuDNN version:
GPU model and memory: cpu
You can obtain the TensorFlow version with:
python -c "import tensorflow as tf; print(tf.GIT_VERSION, tf.VERSION)"
You can obtain the Keras version with:
python -c 'import keras as k; print(k.version)'
Describe the current behavior
I want to run the code to do a simple demo, I find the problem when I run it.
RuntimeError: tf.placeholder() is not compatible with eager execution.
Then I add tf.compat.v1.disable_eager_execution() and run it again.
The result:
WARNING: Logging before flag parsing goes to stderr. W1029 10:33:53.465769 140735584514944 deprecation.py:323] From /Users/majianbo/anaconda3/envs/tensorflow/lib/python2.7/site-packages/tensorflow/python/ops/nn_impl.py:182: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version. Instructions for updating: Use tf.where in 2.0, which has the same broadcast rule as np.where Traceback (most recent call last): File "/Users/majianbo/PycharmProjects/DetectionTest/test1.py", line 175, in <module> vae.compile(optimizer='adam') File "/Users/majianbo/anaconda3/envs/tensorflow/lib/python2.7/site-packages/keras/engine/training.py", line 96, in compile self.optimizer = optimizers.get(optimizer) File "/Users/majianbo/anaconda3/envs/tensorflow/lib/python2.7/site-packages/keras/optimizers.py", line 790, in get if isinstance(identifier, tf.train.Optimizer): AttributeError: 'module' object has no attribute 'Optimizer'
Describe the expected behavior
I want to run the code and I wonder if it is caused by tensorflow-version?
Code to reproduce the issue
VAE