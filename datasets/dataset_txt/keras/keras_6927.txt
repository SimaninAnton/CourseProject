ashudeep commented on 26 Jun 2015
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
/data/src/net/regression_train.py in <module>()
     35 Y_train = HDF5Matrix("data/piece.h5", 'label', 0 , 40000000)
     36 Y_test = HDF5Matrix("data/piece.h5", 'label', 40000001 , 44899683)
---> 37 model.fit(X_train, Y_train, batch_size=1000, nb_epoch=1)
     38 
     39 score = model.evaluate(X_test, Y_test, batch_size=16)

/data/anaconda/lib/python2.7/site-packages/Keras-0.1.1-py2.7.egg/keras/models.pyc in fit(self, X, y, batch_size, nb_epoch, verbose, callbacks, validation_split, validation_data, shuffle, show_accuracy)
    164                     print("Train on %d samples, validate on %d samples" % (len(y), len(y_val)))
    165 
--> 166         index_array = np.arange(len(y))
    167 
    168         if verbose:

TypeError: len() of unsized object
@jfsantos added a helper class HDF5Matrix to use HDF5 data without loading it into the memory all at once. I received the above error when I tried to use it for my data.
I figured out a few things:
In my case Y_train is an array of the shape (N,) i.e. a single dimension
len() of unsized object error is thrown because when models.fit calls standardize_y which actually adds another dimension to it by reshaping it to (len(N),1). But this creates a 'faulty' array which has no len attribute finally.
Solution for me (still to check if it works): I will have to add my Ys into the dataset as arrays of size 1 rather than single numbers. This seems to break when using an HDF5Matrix helper class.