zui0711 commented on 23 Apr 2017
I use Keras 1.2.0 with Theano 0.8.2, and find that I get different results when I train the model with the same input data. I have already put numpy.random.seed(1337) in the top.
When I create a model like this, I can get the same result.
def create_model():
    model = Sequential()
    model.add(Dense(input_dim=360, output_dim=20))
    model.add(Dropout(0.1))
    model.add(Dense(1))
    model.add(Activation('sigmoid'))
    model.compile(loss='binary_crossentropy',
                  optimizer='rmsprop',
                  metrics=['accuracy'])
    return model
But when I create a model with LSTM and embedding layer, I cannot get the same result. I don't change any other code.
def create_model():
    model = Sequential()
    model.add(Embedding(input_dim=161 + 1, output_dim=100))
    model.add(LSTM(100, dropout_W=0.1, dropout_U=0.1))
    model.add(Dense(1))
    model.add(Activation('sigmoid'))
    model.compile(loss='binary_crossentropy',
                  optimizer='rmsprop',
                  metrics=['accuracy'])
    return model
I find that when the model initialized, the weights are the same, but just after one epoch, the weights become different between different train.
Can anyone help me ? Thank you !