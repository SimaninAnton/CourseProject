amaall commented on 25 Apr 2017 â€¢
edited
I have used the same data setup in a feed function in tensorflow, and my codes is working. I wonder why the codes below give me the error:
#Create Model
x= Dense(n_neurons,input_dim=n_feat, W_regularizer=l2(0.001),activation='relu')(input1)
merg_x = merge([x, input2],mode='concat',concat_axis=-1) 
pred_out = Dense(1,activation='relu',name='pred_out')(merg_x) 


f_ = Lambda(lambda x: flip_gradient(x, 1)) (merg_x)
x = Dense(n_feat,activation='relu')(f_)
x = Dense(n_feat,activation='relu')(x)
dom_out = Dense(2,activation='softmax',name='dom_out')(x)
print(K.shape(pred_out))
D_labels = np.hstack([np.zeros(int(batch_size / 2), dtype=np.int32),
                          np.ones(int(batch_size / 2), dtype=np.int32)])
print(Xb.shape,tb.shape,yb.shape,D_labels.shape)
model = Model(input=[input1,input2], output=[pred_out, dom_out])
model.compile(optimizer='RMSprop',loss=[lambda yb,pred_out : yb-pred_out, 'sparse_categorical_crossentropy']) 
model.fit({'input1':Xb,'input2':tb},[yb, D_labels],nb_epoch=50,batch_size=128) 
y_pred3 = model.predict([Xt,t_test],batch_size=50,verbose=0)  
rms_ite = mean_squared_error((get_ITE(X_train,y_train,y_test)), get_ITE(X_train, y_train,y_pred3)) 
return rms_ite `