zehzhang commented on 23 Mar 2017 â€¢
edited
I am trying to implement guided backpropagation.
My model is defined as following:
def reproduce(x):
return x
model = Sequential()
model.add(Lambda(reproduce, batch_input_shape=(my_batch_size, img_width, img_height, 3)))
base_model = VGG16(weights='imagenet', include_top=False, input_tensor=model.layers[0].output)
model.add(base_model)
model.add(Flatten())
model.add(Dense(4096, activation='relu'))
model.add(Dense(4096, activation='relu'))
model.add(Dense(24, acti0vation='relu'))
model.add(Activation('softmax'))
If I use print_summary, I get this:
Layer (type) Output Shape Param # Connected to
lambda_1 (Lambda) (1, 224, 224, 3) 0 lambda_input_1[0][0]
vgg16 (Model) (1, 7, 7, 512) 14714688 lambda_1[0][0]
flatten_1 (Flatten) (1, 25088) 0 vgg16[1][0]
dense_1 (Dense) (1, 4096) 102764544 flatten_1[0][0]
dense_2 (Dense) (1, 4096) 16781312 dense_1[0][0]
dense_3 (Dense) (1, 24) 98328 dense_2[0][0]
activation_1 (Activation) (1, 24) 0 dense_3[0][0]
But if I want to get the gradients, e.g., grads = K.gradients(model.layers[-2].output[0, 0], model.layers[-6].layers[-2].output)[0], I get the traceback error messages:
Traceback (most recent call last):
File "guidedBack.py", line 146, in
grads = K.gradients(K.sum(model.layers[-2].output[0, :]), model.layers[-4].o utput)[0]
File "/N/u/zehzhang/tensorflow/lib/python2.7/site-packages/keras/backend/tenso rflow_backend.py", line 1968, in gradients
return tf.gradients(loss, variables, colocate_gradients_with_ops=True)
File "/N/u/zehzhang/tensorflow/lib/python2.7/site-packages/tensorflow/python/o ps/gradients_impl.py", line 482, in gradients
in_grads = grad_fn(op, *out_grads)
File "guidedBack.py", line 24, in _GuidedReluGrad
return select(0. < grad, gen_nn_ops._relu_grad(grad, op.outputs[0]), tf.zero s(grad.get_shape()))
File "/N/u/zehzhang/tensorflow/lib/python2.7/site-packages/tensorflow/python/o ps/array_ops.py", line 1354, in zeros
shape = ops.convert_to_tensor(shape, dtype=dtypes.int32, name="shape")
File "/N/u/zehzhang/tensorflow/lib/python2.7/site-packages/tensorflow/python/f ramework/ops.py", line 637, in convert_to_tensor
as_ref=False)
File "/N/u/zehzhang/tensorflow/lib/python2.7/site-packages/tensorflow/python/f ramework/ops.py", line 702, in internal_convert_to_tensor
ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
File "/N/u/zehzhang/tensorflow/lib/python2.7/site-packages/tensorflow/python/f ramework/constant_op.py", line 128, in _tensor_shape_tensor_conversion_function
"Cannot convert a partially known TensorShape to a Tensor: %s" % s)
ValueError: Cannot convert a partially known TensorShape to a Tensor: (?, 24)
In the summary, it shows that all output shapes are fully specified. But I sill got the above error. How can I solve this?
Also, another interesting problem is that, in my model, vgg16 has two output nodes. I don't know why. Anyone has some ideas?