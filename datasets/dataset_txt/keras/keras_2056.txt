miguelgfierro commented on 27 Jun 2017
With the last version of keras (the master of today) and CNTK v2.0 with GPU 1SGD, I get an error when:
model = ResNet50(include_top=False)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-3-70030c8bcad1> in <module>()
----> 1 model = ResNet50(include_top=False)#doesn't work with CNTK backend

/anaconda/envs/strata/lib/python3.5/site-packages/keras/applications/resnet50.py in ResNet50(include_top, weights, input_tensor, input_shape, pooling, classes)
    204         bn_axis = 1
    205 
--> 206     x = ZeroPadding2D((3, 3))(img_input)
    207     x = Conv2D(64, (7, 7), strides=(2, 2), name='conv1')(x)
    208     x = BatchNormalization(axis=bn_axis, name='bn_conv1')(x)

/anaconda/envs/strata/lib/python3.5/site-packages/keras/engine/topology.py in __call__(self, inputs, **kwargs)
    594 
    595             # Actually call the layer, collecting output(s), mask(s), and shape(s).
--> 596             output = self.call(inputs, **kwargs)
    597             output_mask = self.compute_mask(inputs, previous_mask)
    598 

/anaconda/envs/strata/lib/python3.5/site-packages/keras/layers/convolutional.py in call(self, inputs)
   1354         return K.spatial_2d_padding(inputs,
   1355                                     padding=self.padding,
-> 1356                                     data_format=self.data_format)
   1357 
   1358     def get_config(self):

/anaconda/envs/strata/lib/python3.5/site-packages/keras/backend/cntk_backend.py in spatial_2d_padding(x, padding, data_format)
   1713         if num_dynamic_axis > 0:
   1714             assert len(base_shape) == 3
-> 1715             x = _padding(x, padding[0], 0)
   1716             x = _padding(x, padding[1], 1)
   1717         else:

/anaconda/envs/strata/lib/python3.5/site-packages/keras/backend/cntk_backend.py in _padding(x, pattern, axis)
   1673                          'shape `%s` contains non-specified dimension, '
   1674                          'which is not supported. Please give fixed '
-> 1675                          'dimension to enable padding.' % base_shape)
   1676     if pattern[0] > 0:
   1677         prefix_shape = list(base_shape)

TypeError: not all arguments converted during string formatting
I tried with TF backend and it works correctly