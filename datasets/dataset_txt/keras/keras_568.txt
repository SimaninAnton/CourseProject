HussamCheema commented on 3 Dec 2018 â€¢
edited
I have 7 categories of labels and I am passing 7 in last Dense Layer. And for that, I used sparse_categorical_crossentropy loss function, but loss becomes "nan". Why its giving "nan" for loss?
When I use categorical_crossentropy or mean_squared_error, I get this error:
ValueError: Error when checking target: expected dense_14 to have shape (7,) but got array with shape (1,)
And when I set 1 output in last Dense Layer then It starts to compute loss.
model = Sequential()
model.add(Conv2D(kernel_size=(3,3),filters=8,input_shape=(256, 256, 3),activation="relu",padding="valid"))
model.add(Conv2D(kernel_size=(3,3),filters=8,activation="relu",padding="same"))
model.add(MaxPooling2D(pool_size=(2,2),strides=(2,2)))
model.add(Flatten())
model.add(Dropout(0.6))
model.add(Dense(100,activation="relu"))
model.add(Dense(7,activation='softmax'))
model.summary()

model.compile(loss=keras.losses.sparse_categorical_crossentropy,
              optimizer=keras.optimizers.Adam(lr=0.001),
              metrics=['accuracy'])

X = model.fit(x_train, y_train,
          batch_size=batch_size,
          epochs=epochs,
          verbose=1,
          validation_data=(x_test, y_test))

plt.plot(X.history['loss'])
plt.plot(X.history['val_loss'])
plt.title('model loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['train', 'validation'], loc='upper left')
plt.show()

score = model.evaluate(x_test, y_test, verbose=0)
print('Test loss:', score[0])
print('Test accuracy:', score[1])