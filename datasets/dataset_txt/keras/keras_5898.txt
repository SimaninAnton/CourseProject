mininaNik commented on 22 Feb 2016
I want to have sequence to sequence training. I have five sequences. I considered the length of the history 100 to predict 10 steps ahead for each input sequence. I transformed the data to following format:
As an input X I have array of n matrices, each with 100 rows and 5 columns (technically, X is a tensor with dimensions n x 100 x 5). The target y will be matrix n x10 x 5 - for each input X_i (matrix 100 x 5) I want one corresponding y (10 x 5). So my input data (X) is a numpy array n x 100 x 5 and output (y) is n x10 x 5. I solved this problem when I wanted to predict only one step ahead (when X is a numpy array n x 100 x 5 and output (y) is n x 5 ), here #1727. Now I want to predict more and I guess only changing the output structure and training the network again is enough? Am I right?
My model is as follows:
in_out_neurons = 5
hidden_neurons = 20
n_nxt = 10
n_prev = 100
future_history = n_nxt*hidden_neurons
model = Sequential()  
model.add(LSTM(output_dim=future_history, return_sequences=True, forget_bias_init = 'one', input_shape=(n_prev,in_out_neurons)))
model.add(Dropout(0.2))    
model.add(LSTM(future_history, return_sequences=False, forget_bias_init = 'one'))
model.add(Dropout(0.2))
model.add(Dense(n_nxt*in_out_neurons))
model.add(Activation("linear"))
model.compile(loss="mse", optimizer="rmsprop")
model.fit(X_train, y_train, batch_size=100, nb_epoch=1)
I got the following error, can anybody help me to solve the problem:
 Traceback (most recent call last):
 File "/home/mina/Documents/research/five cores (LSTM) seq2seq changing structure 8/KerasLSTM.py", line 217, in <module>
main()
 File "/home/mina/Documents/research/five cores (LSTM) seq2seq changing structure 8/KerasLSTM.py", line 184, in main
model.fit(X_train, y_train, batch_size=100, nb_epoch=1)
 File "/usr/local/lib/python2.7/dist-packages/keras/models.py", line 581, in fit
shuffle=shuffle, metrics=metrics)
 File "/usr/local/lib/python2.7/dist-packages/keras/models.py", line 239, in _fit
outs = f(ins_batch)
 File "/usr/local/lib/python2.7/dist-packages/keras/backend/theano_backend.py", line 365, in __call__
   return self.function(*inputs)
 File "/usr/local/lib/python2.7/dist-packages/theano/compile/function_module.py", line 513, in __call__
allow_downcast=s.allow_downcast)
 File "/usr/local/lib/python2.7/dist-packages/theano/tensor/type.py", line 169, in filter
data.shape))
 TypeError: ('Bad input argument to theano function with name "/usr/local/lib/python2.7/dist-packages/keras/backend/theano_backend.py:362"  
at index 1(0-based)', 'Wrong number of dimensions: expected 2, got 3 with shape (100, 5, 5).')