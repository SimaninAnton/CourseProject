varun-bankiti commented on 22 Oct 2016
Hello All,
I am using fit_generator to train my model, I am trying the batch implementation similar to test_multiprocessing.py
import numpy as np
from keras.models import Sequential
from keras.layers.core import Dense
from keras.utils.test_utils import keras_test
import multiprocessing

arr_data = np.random.randint(0, 256, (500, 2))
arr_labels = np.random.randint(0, 2, 500)

def myGenerator():

    batch_size = 20
    n_samples = 500
    start = 0;
    while True:
        end = min(start + batch_size,n_samples)
        X = arr_data[start: end]
        y = arr_labels[start: end]
        print "\nProcess: %s, Batch indices (start,end):(%f,%f)"%(multiprocessing.current_process().name,start,end)
        yield X, y
        start += batch_size    

# Build a NN
model = Sequential()
model.add(Dense(1, input_shape=(2, )))
model.compile(loss='mse', optimizer='adadelta')

model.fit_generator(myGenerator(),
                    samples_per_epoch=100,
                    nb_epoch=1,
                    verbose=2,
                    max_q_size=10,
                    nb_worker=4,
                    pickle_safe=True)
And the output is
Epoch 1/1

Process: Process-1, Batch indices (start,end):(0.000000,20.000000)

Process: Process-2, Batch indices (start,end):(0.000000,20.000000)

Process: Process-3, Batch indices (start,end):(0.000000,20.000000)

Process: Process-4, Batch indices (start,end):(0.000000,20.000000)

Process: Process-1, Batch indices (start,end):(20.000000,40.000000)

Process: Process-1, Batch indices (start,end):(40.000000,60.000000)

Process: Process-1, Batch indices (start,end):(60.000000,80.000000)

Process: Process-1, Batch indices (start,end):(80.000000,100.000000)

Process: Process-1, Batch indices (start,end):(100.000000,120.000000)

Process: Process-1, Batch indices (start,end):(120.000000,140.000000)

Process: Process-1, Batch indices (start,end):(140.000000,160.000000)

Process: Process-2, Batch indices (start,end):(20.000000,40.000000)

Process: Process-1, Batch indices (start,end):(160.000000,180.000000)

Process: Process-3, Batch indices (start,end):(20.000000,40.000000)

Process: Process-4, Batch indices (start,end):(20.000000,40.000000)

Process: Process-2, Batch indices (start,end):(40.000000,60.000000)

Process: Process-1, Batch indices (start,end):(180.000000,200.000000)

Process: Process-3, Batch indices (start,end):(40.000000,60.000000)

Process: Process-4, Batch indices (start,end):(40.000000,60.000000)
It is clear from the above output that multiple process are trying to access the same samples (we can see intersection of (start,end) from different process batches).
I have also tried implementation suggested in #1638 but no luck, it is also working similarly.
What should be the batch generator implementation to work correctly(no intersection between the batches as long as possible. In this case always, as samples > samples_per_epoch) with nb_worker > 1 and pickle_safe=True. ?
TIA.