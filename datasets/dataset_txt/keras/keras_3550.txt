Contributor
israelg99 commented on 4 Jan 2017 â€¢
edited
model1 = Sequential()
model1.add(Dense(512, input_shape=(5,)))

model2 = Sequential()
model2.add(Dense(512, input_shape=(3,)))

model = Sequential()
model.add(Merge([model1, model2], mode='dot'))
model.add(Dense(1))
model.add(Activation('sigmoid'))

model.summary()

model.compile(loss='binary_crossentropy', optimizer=RMSprop())

x1, x2 = np.random.rand(20, 5), np.random.rand(20, 3)
y = np.random.rand(20)

model.predict([x1, x2])
Error:
InvalidArgumentError: Matrix size-incompatible: In[0]: [20,20], In[1]: [1,1] 
[[Node: MatMul_19 = MatMul[T=DT_FLOAT, transpose_a=false, transpose_b=false,
_device="/job:localhost/replica:0/task:0/gpu:0"](BatchMatMul_7, dense_22_W/read)]]
If you remove the line model.add(Dense(1)) it won't error out but will produce an output the size of the batch, such that if you predict with batch_size 4 it will return predictions for (data_rows, 4) even though it should return (data_rows, 1).
EDIT: Same thing occurs in functional API models, am I missing something?