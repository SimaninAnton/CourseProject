Dejust commented on 16 Mar 2017
In keras 2.0 we can build custom layers which take arbitrary keyword arguments
class CustomLayer(Layer):
    def call(self, inputs, **kwargs):
        print(kwargs)
        return super().call(inputs)
But if we need to wrap CustomLayer into TimeDistributed exception raises
from keras.engine import Layer
from keras.layers import Dense, Input, TimeDistributed

input_layer = Input(shape=(10, 10))
dense = TimeDistributed(Dense(10))(input_layer)
dummy = TimeDistributed(CustomLayer())(dense, some_additional_param='hello!')
Using TensorFlow backend.
Traceback (most recent call last):
File "/home/artem/ML/tensorflow_study/test.py", line 15, in
dummy = TimeDistributed(CustomLayer())(dense, some_additional_param='hello!')
File "/home/artem/ML/tf10/lib/python3.5/site-packages/keras/engine/topology.py", line 545, in call
output = self.call(inputs, **kwargs)
TypeError: call() got an unexpected keyword argument 'some_additional_param'
This small fix for TimeDistributed maybe helpful: https://github.com/Dejust/keras/commit/7a4ca85baf9838b69a08f047c77d317d70cce45c