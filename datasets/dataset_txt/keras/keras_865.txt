rjpg commented on 24 Jul 2018 â€¢
edited
Hello,
I would like to transform the output of a CNN layer adding info on the beginning and end of the "generated filtered images"... so it can be included for the next CNN layer for the "kernel" process when on the (lateral) edges of the images (using valid padding on this next CNN layer).
the method to transform the CNN output is implemented like this (image_dim_ordering("th")):
def transform(element,n):
    batchResultFlat=[]
    for batchElement in element:
        resultFlat=[]
        for cnnFilterImage in batchElement:
            firstColumns=cnnFilterImage[:,list(range(n))]
            result=np.concatenate((cnnFilterImage,np.array(firstColumns)),axis=1)
            lastColumnsReverse=cnnFilterImage[:,list(range(cnnFilterImage.shape[1]-n,cnnFilterImage.shape[1]))]
            result=np.concatenate((np.array(lastColumnsReverse),result),axis=1)
            resultFlat.append(result)
        batchResultFlat.append(np.array(resultFlat))
    newElement = np.array(batchResultFlat)
    return newElement
Using this function for the lambda function I have the error : TypeError: Tensor objects are not iterable when eager execution is not enabled. To iterate over this tensor use tf.map_fn.
How to deal with this error ?
Thanks !