jostheim commented on 26 Oct 2017
The following gist shows how learning the same network using fit and fit_generator do not yield the same results when using class_weights. The data for the features is here, the data for the targets is here.
Note:
I included a function that verifies that the data produced by the generators is exactly the same as that produced not using a generator.
I also have a comment in about how the documentation for fit_generator shows a shuffle keyword, but the version I have (2.0.8) does not have that keyword. I tried the latest version from github and it showed the same behavior (though it seemed to have the shuffle keyword).
I do understand their may be some use of random numbers might make the training results not exactly the same (although I don't use a Dropout to simplify that factor). If you increase the epochs you'll see that the "fit_generator" version immediately moves to setting everything to the 0 class indicating the class_weights aren't effective, while the "fit" version does not do that.
[ X] Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
[ X] If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.
[ X] If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
[ X] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).