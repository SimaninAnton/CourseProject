jessejohns commented on 14 Feb 2017
I'm not sure if I'm just ignorant of how Lambda functions work, but if I do the following:
x = Lambda(lambda x: x * 0.1)(x)
I have no problem saving and loading a model. However, if I try to pass a variable:
x = Lambda(lambda x: x * factor)(x)
I get the following error on the function closure when loading a model:
TypeError: arg 5 (closure) must be None or tuple.
When I printed out the closure when the model failed, I get whatever that value passed to the variable was - [0.1], for example. I can train and run models, no problem, but I just can't load from the JSON.
Relevant JSON of what produces the error - getting a [0.1] where it expects a null:
{"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000\u0013\u0000\u0000\u0000s\b\u0000\u0000\u0000|\u0000\u0000\u0088\u0000\u0000\u0014S(\u0001\u0000\u0000\u0000N(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0001\u0000\u0000\u0000t\u000e\u0000\u0000\u0000scale_residual(\u0000\u0000\u0000\u0000s-\u0000\u0000\u0000/home/jesse/Source/dl_code/mdl/model_keras.pyt\b\u0000\u0000\u0000<lambda>5\u0004\u0000\u0000s\u0000\u0000\u0000\u0000", null, [0.1]], "name": "lambda_1", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": null, "output_shape_type": "raw"}, "inbound_nodes": [[["batchnormalization_18", 0, 0]]], "name": "lambda_1"}
JSON of working model:
{"class_name": "Lambda", "config": {"function": ["c\u0001\u0000\u0000\u0000\u0001\u0000\u0000\u0000\u0002\u0000\u0000\u0000S\u0000\u0000\u0000s\b\u0000\u0000\u0000|\u0000\u0000d\u0001\u0000\u0014S(\u0002\u0000\u0000\u0000Ng\u009a\u0099\u0099\u0099\u0099\u0099\u00b9?(\u0000\u0000\u0000\u0000(\u0001\u0000\u0000\u0000t\u0001\u0000\u0000\u0000x(\u0000\u0000\u0000\u0000(\u0000\u0000\u0000\u0000s-\u0000\u0000\u0000/home/jesse/Source/dl_code/mdl/model_keras.pyt\b\u0000\u0000\u0000<lambda>5\u0004\u0000\u0000s\u0000\u0000\u0000\u0000", null, null], "name": "lambda_1", "trainable": true, "function_type": "lambda", "arguments": {}, "output_shape": null, "output_shape_type": "raw"}, "inbound_nodes": [[["batchnormalization_18", 0, 0]]], "name": "lambda_1"}