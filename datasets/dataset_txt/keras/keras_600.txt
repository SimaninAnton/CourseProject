andreiliphd commented on 24 Nov 2018 â€¢
edited
Please make sure that the boxes below are checked before you submit your issue.
If your issue is an implementation question, please ask your question on StackOverflow or on the Keras Slack channel instead of opening a GitHub issue.
Thank you!
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/keras-team/keras.git --upgrade --no-deps
Check that your version of TensorFlow is up-to-date. The installation instructions can be found here.
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).
IDEA: I want to offer you a method that put production of a new type of layers on an industrial scale.
PROBLEM: How to turn a neural network in mathematical formula suited for a creation of an absolutely new type of layer. It might be used in Keras, TensorFlow, and PyTorch or anything.
HOW:
1, You trained your network for particular industry application and invested a lot of computational power to make it work. And this neural network work for solving a particular problem in a particular industry very well.
2. You freeze all layers in your neural network.
3. Let's suppose we have an MSE loss for a simplicity.
4. Then you start to training target(label) looking for INTEGRAL of a function of your neural network. It will produce a mathematical formula describing a neural network. Let's call ANTI GRAD algorithm.
5. After it's done you have a mathematical formula that can easily be turned into a new type of layer for particular industry application with a simple(you can tune simplicity) formula for Chemistry, Economics, Medicine.
APPLICATION:
Creation of new type of layers suited for particular industries and application.
Research work can be enhanced. We are turning a neural network into the classic mathematical language.