Contributor
patyork commented on 7 Jan 2017
@fchollet Since we're not adding much to the repo at this stage (in terms of layers, loss functions, callbacks, etc.), we've talked quite a bit about an external repo for user/additional contributions, that, based on utility and usage may eventually make it into the core.
I'm curious about how you would want/like to go about this. An external repo is not a big deal, but I'm wondering:
How do we keep the chain of commits and contributions/contributors intact if or when we start pushing items into the core Keras from the external repo?
How would we go about determining if something is used/useful enough to move to Keras?
Just looking for thoughts on this topic. I've seen a repo or two that are not forks (completely external) and overwrite certain Keras files then do a setup.py install, but that seems like a poor way to do it. A fork would keep the chain of contributions in tact and would be easy to merge, but having any reference to a fork would just be confusing in my opinion.