danijar commented on 17 Jul 2016 â€¢
edited
I'm implementing DQN which has an output layer of the size of available actions. For each example, only the output node corresponding to the taken action is trained towards a target. So I have a custom loss function like this:
def loss(target, pred, action):
    mse = tf.reduce_mean((pred - target) ** 2, 0)
    masked = mse * tf.one_hot(action)
    return tf.reduce_sum(masked)
How can I use two values in addition to the prediction? If possible, it would be nice to pass in the action during training only, not during prediction where all outputs are of interest.