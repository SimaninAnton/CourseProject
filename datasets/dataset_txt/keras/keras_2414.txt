Contributor
kyle-dorman commented on 11 May 2017 â€¢
edited
Often times when using the functional api someone might forget to actually call one of their layers. i.e.
i = Input(shape=(1,1)) 
d1 = Dense(128)
d2 = Dense(320)(d1)
model = Model(inputs=i, outputs=d2)
The resulting error message is AttributeError: 'LAYER_TYPE' object has no attribute 'get_shape'
It would be better if the assert_input_compatibility function validated the "type" of the incoming inputs to ensure it is some type of keras Tensor and throw an error if it is not.
I propose adding something like this to the top of the assert_input_compatibility function
inputs = _to_list(inputs)
for i in inputs:
    if K.is_keras_tensor(i): continue
    elif K._BACKEND == 'tensorflow':
        import tensorflow as tf
        if isinstance(i, tf.Tensor): continue
    raise ValueError('Unexpectedly found an instance of type `' + str(type(i)) + '`.' +
            'Expected an instance of keras Tensor.')