xhlulu commented on 19 Nov 2018
The current documentation on callbacks isn't showing bullet points correctly under the "Arguments" section of a few models. Here's the example for ModelCheckpoint:
filepath: string, path to save the model file. monitor: quantity to monitor. verbose: verbosity mode, 0 or 1. save_best_only: if save_best_only=True, the latest best model according to the quantity monitored will not be overwritten. mode: one of {auto, min, max}. If save_best_only=True, the decision to overwrite the current save file is made based on either the maximization or the minimization of the monitored quantity. For val_acc, this should be max, for val_loss this should be min, etc. In auto mode, the direction is automatically inferred from the name of the monitored quantity. save_weights_only: if True, then only the model's weights will be saved (model.save_weights(filepath)), else the full model is saved (model.save(filepath)). period: Interval (number of epochs) between checkpoints.
Looking at the source code, the docstring seems to be organized correctly:
keras/keras/callbacks.py
Lines 371 to 390 in dc9e510
     # Arguments 
         filepath: string, path to save the model file. 
         monitor: quantity to monitor. 
         verbose: verbosity mode, 0 or 1. 
         save_best_only: if `save_best_only=True`, 
             the latest best model according to 
             the quantity monitored will not be overwritten. 
         mode: one of {auto, min, max}. 
             If `save_best_only=True`, the decision 
             to overwrite the current save file is made 
             based on either the maximization or the 
             minimization of the monitored quantity. For `val_acc`, 
             this should be `max`, for `val_loss` this should 
             be `min`, etc. In `auto` mode, the direction is 
             automatically inferred from the name of the monitored quantity. 
         save_weights_only: if True, then only the model's weights will be 
             saved (`model.save_weights(filepath)`), else the full model 
             is saved (`model.save(filepath)`). 
         period: Interval (number of epochs) between checkpoints. 
     """ 
It is however showing up correctly for other models, e.g. ProgbarLogger:
Arguments
count_mode: One of "steps" or "samples". Whether the progress bar should count samples seen or steps (batches) seen.
stateful_metrics: Iterable of string names of metrics that should not be averaged over an epoch. Metrics in this list will be logged as-is. All others will be averaged over time (e.g. loss, etc).