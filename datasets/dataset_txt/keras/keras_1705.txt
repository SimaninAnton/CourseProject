xujunpeng commented on 29 Aug 2017 â€¢
edited
I tried to implement a simplified version of this paper
What I did right now is to use CNN audoencoder to extract features for a image, then I want to feed this feature map into a LSTM to do the labeling task. So I prefer the LSTM to scan the feature map row by row (say the dimension is (256,256,16) ) and output the labels of each pixel. I used TimeDistributed layer but not sure it is a correct way. Any suggestions?
Following is my code:
input_img = Input(shape=(256,256,1))
# encoder
x = Conv2D(filters=16, kernel_size=(5,5))(input_img)
x = MaxPooling2D((2, 2), padding='same')(x) # 128x128
x = Conv2D(filters=32, kernel_size=(3,3))(x)
encoded = MaxPooling2D((2, 2), padding='same')(x) # 64x64
# decoder
x = Conv2D(filters=32, kernel_size=(3,3))(encoded)
x = UpSampling2D((2, 2))(x)
x = Conv2D(filters=16, kernel_size=(5,5))(x)
x = UpSampling2D((2, 2))(x)
# Using LSTM to produce final outputs
decoded = TimeDistributed(LSTM(3, input_shape=(32, 16),return_sequences=True))(x)
model = Model(input_img, decoded)
But this does not work.