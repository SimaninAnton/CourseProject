Yingyingzhang15 commented on 22 Apr 2016 •
edited
Hi, I have read the Keras doc about "stateful flag" and several issues. However, I still don't understand how the stateful prediction works.
Notes that the methods predict, fit, train_on_batch, predict_classes, etc. will all update the states of the stateful layers in a model. This allows you to do not only stateful training, but also stateful prediction.
For instance, the size of test data is (2000,10,3), where 2000 is the nb_num,10 is sequence_length,3 is input_dim. The size of test label is (2000,2), where 2 is the label_dim.
When I use predict_classes, every time I label a batch of （１，１０，３） ｓｅｑｕｅｎｃｅs. However, the parameters of the network is fixed when predicting, what does the state mean?How can the network pass the state on to next batch?
The second question. Think there are several sequences A,B,C,D...
I want to give sequence B a label based on the label of A. So should I put the sequence A in the first batch, and sequence B in the same place in the second batch? Is there any other method?
The third question.Why does Keras always split the long sequences into shorter ones?If I want to give every timestep a label, I should use TimedistributedDense.But is it possible to process the whole long sequences?
Thank you in advance!