ghost commented on 20 Feb 2018
The Lambda layer seems to allow global python variables in its lambda expression inside,
as training, prediction and save() work well with such Lambda layers.
But load_model() always gives "NameError" when the saved Lambda layer has a global
variable in its lambda expression. The following short example demonstrates this behavior.
Excuse me if this is an intended behavior.
import keras

size_of_something=10.0
input=keras.layers.Input(shape=(1,1))
output1=keras.layers.Lambda(lambda x: x*10.0)(input)
output2=keras.layers.Lambda(lambda x: x*size_of_something)(input)

model1=keras.models.Model(inputs=input, outputs=output1)
model2=keras.models.Model(inputs=input, outputs=output2)
model1.compile(optimizer='rmsprop', loss='mse', metrics=['mae'])
model2.compile(optimizer='rmsprop', loss='mse', metrics=['mae'])
model1.save("model1.hdf5")
model2.save("model2.hdf5")
loaded_model=keras.models.load_model("model1.hdf5")  #This is OK
print(keras.__version__)
loaded_model=keras.models.load_model("model2.hdf5")  #This causes an error "
exit(0)