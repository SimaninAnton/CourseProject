Contributor
EderSantana commented on 27 Nov 2018 â€¢
edited
Yo, it's been a while!
So I have a multi-output model and I wanted to have several different metrics for each output. Imagine an ablation study with several conditions for each output where functions don't repeat but outputs do. I couldn't find a way to do that. Perhaps to make things clear here is an example of what I tried:
a = Input(shape=(32,))
o1 = Dense(32, name="o1")(a)
o2 = Dense(10, name="o2")(a)
model = Model(inputs=a, outputs=[o1, o2])
model.compile("sgd", "mse", metrics=[{"o1": func_for_input_high}, {"o1": func_for_input_low},
 {"o2": func_case_1}, {"o2": func_case_2}]) 
But when we use a list for metrics, Keras expect each element to be a function to be applied to all outputs. If I pass a dictionary, I can use the key corresponding to the model output only once. Let me know if there already is a way to do this, if not I can try to work something out and PR.
The only way I saw how to do that without a PR is by using a lambda layer that just copies the output and renames it so that single dict metric works. See #8884... which is honestly smart, but not the best API if you imagine people training, saving the model, shipping, etc.