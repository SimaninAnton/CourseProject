zzero commented on 24 Jan 2017
I have the following model that outputs combined outputs of other neural networks:
 merged_model = Model(input=[self.x_input], output=\
                               [self.d_mean_on_e_mean,self.d_std_on_e_mean,self.e_mean,self.e_std])
 merged_model.compile(loss = variational_loss,optimizer = self.opt_G)
where each output is from four different networks. What I would like the fit function to do is to minimize the variational_loss w.r.t all the parameters of the four networks. However, when I execute fit function, I get the following:
Epoch 1/1 10000/10000 [==============================] - 3s - loss: 8.2836 - model_1_loss_1: 2.0801 - model_1_loss_2: 2.0747 - e_mean_loss: 2.0657 - e_std_loss: 2.0632
Why are loss values different for all four networks? I would expect them to be the same, since all four networks are minimized simultaneously.