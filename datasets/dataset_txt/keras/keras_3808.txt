michaelosthege commented on 29 Nov 2016
I have a Dropout layer that produces an output of shape (None,512).
I can create a MaxoutDense layer:
md = keras.layers.MaxoutDense(32,4, W_regularizer=keras.regularizers.WeightRegularizer(l1,l2))
But when I call it on the tensor of my Dropout layer:
md_t = md(drop1)
then it fails with
Expected int32, got None of type '_Message' instead.
The full stack trace:
File ".../src/networks.py", line 117, in NetworkBuilder md_t = md(drop1) File ".../venv35/lib/python3.5/site-packages/keras/engine/topology.py", line 517, in __call__ self.add_inbound_node(inbound_layers, node_indices, tensor_indices) File ".../venv35/lib/python3.5/site-packages/keras/engine/topology.py", line 571, in add_inbound_node Node.create_node(self, inbound_layers, node_indices, tensor_indices) File ".../venv35/lib/python3.5/site-packages/keras/engine/topology.py", line 155, in create_node output_tensors = to_list(outbound_layer.call(input_tensors[0], mask=input_masks[0])) File ".../venv35/lib/python3.5/site-packages/keras/layers/core.py", line 934, in call output = K.dot(x, self.W) File ".../venv35/lib/python3.5/site-packages/keras/backend/tensorflow_backend.py", line 380, in dot xt = tf.reshape(x, [-1, x_shape[-1]]) File ".../venv35/lib/python3.5/site-packages/tensorflow/python/ops/gen_array_ops.py", line 1383, in reshape name=name) File ".../venv35/lib/python3.5/site-packages/tensorflow/python/ops/op_def_library.py", line 455, in apply_op as_ref=input_arg.is_ref) File ".../venv35/lib/python3.5/site-packages/tensorflow/python/framework/ops.py", line 620, in convert_to_tensor ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref) File ".../venv35/lib/python3.5/site-packages/tensorflow/python/ops/constant_op.py", line 179, in _constant_tensor_conversion_function return constant(v, dtype=dtype, name=name) File ".../venv35/lib/python3.5/site-packages/tensorflow/python/ops/constant_op.py", line 162, in constant tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape)) File ".../venv35/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py", line 353, in make_tensor_proto _AssertCompatible(values, dtype) File ".../venv35/lib/python3.5/site-packages/tensorflow/python/framework/tensor_util.py", line 290, in _AssertCompatible (dtype.name, repr(mismatch), type(mismatch).__name__)) TypeError: Expected int32, got None of type '_Message' instead.
This exception is only thrown with the TensorFlow backend, but not with Theano. I tested it on CPU only (because that machine doesn't have a supported GPU yet)
The exception is meaningless to me. I'm not blocked because I can work with Theano backend for now, but it looks like a bug nevertheless.