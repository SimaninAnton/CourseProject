Contributor
gokceneraslan commented on 10 Apr 2017 â€¢
edited
I'd like to visualize weight grad distributions in TensorBoard. I tried to add grads to TB using tf.summary.histogram in TensorBoard class as follows (see full commit here):
diff --git a/keras/callbacks.py b/keras/callbacks.py
index 49567f9..f605e7d 100644
--- a/keras/callbacks.py
+++ b/keras/callbacks.py
@@ -630,6 +630,9 @@ class TensorBoard(Callback):
 
                 for weight in layer.weights:
                     tf.summary.histogram(weight.name, weight)
+                    grads = model.optimizer.get_gradients(model.total_loss,
+                                                          weight)
+                    tf.summary.histogram('{}_grad'.format(weight.name), grads)
                     if self.write_images:
                         w_img = tf.squeeze(weight)
                         shape = w_img.get_shape()
But it seems targets and sample_weights are defined as placeholders, so they should be specified in the evaluation of grads. Is there a way to do this and add grad visualization to Keras?
I get the following trace when training starts:
Caused by op 'output_sample_weights', defined at:
  File "sample.py", line 9, in <module>
    learning_rate=0.001, reconstruct=False, activation='relu')
  File "api.py", line 24, in autoencode
    epochs=epochs, **kwargs)
  File "train.py", line 38, in train
    model.compile(loss=loss, optimizer=optimizer)
  File "/home/goekcen_eraslan/Code/keras-gokcen/keras/engine/training.py", line 858, in compile
    name=name + '_sample_weights'))
  File "/home/goekcen_eraslan/Code/keras-gokcen/keras/backend/tensorflow_backend.py", line 351, in placeholder
    x = tf.placeholder(dtype, shape=shape, name=name)
  File "/home/goekcen_eraslan/miniconda3/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py", line 1502, in placeholder
    name=name)
  File "/home/goekcen_eraslan/miniconda3/lib/python3.6/site-packages/tensorflow/python/ops/gen_array_ops.py", line 2149, in _placeholder
    name=name)
  File "/home/goekcen_eraslan/miniconda3/lib/python3.6/site-packages/tensorflow/python/framework/op_def_library.py", line 763, in apply_op
    op_def=op_def)
  File "/home/goekcen_eraslan/miniconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 2327, in create_op
    original_op=self._default_original_op, op_def=op_def)
  File "/home/goekcen_eraslan/miniconda3/lib/python3.6/site-packages/tensorflow/python/framework/ops.py", line 1226, in __init__
    self._traceback = _extract_stack()

InvalidArgumentError (see above for traceback): You must feed a value for placeholder tensor 'output_sample_weights' with dtype float
         [[Node: output_sample_weights = Placeholder[dtype=DT_FLOAT, shape=[], _device="/job:localhost/replica:0/task:0/gpu:0"]()]]
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).