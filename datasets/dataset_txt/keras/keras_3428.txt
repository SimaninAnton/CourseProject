piergiaj commented on 20 Jan 2017
I'm working with the SSD model (https://github.com/rykov8/ssd_keras) and it works fine in tensorflow. I've converted all the tensorflow parts to theano, including the conv kernels (as described here: https://github.com/fchollet/keras/wiki/Converting-convolution-kernels-from-Theano-to-TensorFlow-and-vice-versa) and the model works almost perfectly.
However, I've run into an issue where the output from the max pooling layer when running tensorflow is different from the output in theano. It is a very small difference, but it moves the bounding boxes slightly.
For example, the outputs from conv1_1 and conv1_2 are identical, but the outputs from pool1 in tensorflow give (just a small sample of the output):
 [  7.90634384e+01   0.00000000e+00   0.00000000e+00 ...,
      7.58856506e+01   2.82682953e+02   4.01717926e+02]
   [  9.10728989e+01   0.00000000e+00   0.00000000e+00 ...,
      8.20418091e+01   3.42485565e+02   3.65100067e+02]
   [  1.60205139e+02   0.00000000e+00   0.00000000e+00 ...,
      7.80331039e+01   4.03439850e+02   3.21558014e+02]
while the outputs in theano give
[  6.89849014e+01   1.28302107e+01   0.00000000e+00 ...,
      7.81133041e+01   3.79435974e+02   4.01718109e+02]
   [  8.10280304e+01   2.65449944e+01   0.00000000e+00 ...,
      7.58856430e+01   3.21112823e+02   3.87413025e+02]
   [  2.77083099e+02   0.00000000e+00   0.00000000e+00 ...,
      8.20418396e+01   3.40778381e+02   3.30199341e+02]
Is there some difference in the way keras, theano or tensorflow handle 2D max pooling? I would expect the results to be identical, but they are not.
Here is the model I'm using to test this:
from keras.layers import Activation
from keras.layers import Convolution2D
from keras.layers import Input
from keras.layers import MaxPooling2D
from keras.models import Model



def TestModel(input_shape, num_classes=21):
    net = {}
    # Block 1                                                                                                                                                                                                
    input_tensor = input_tensor = Input(shape=input_shape)
    img_size = (input_shape[1], input_shape[0])
    net['input'] = input_tensor
    net['conv1_1'] = Convolution2D(64, 3, 3,
                                   activation='relu',
                                   border_mode='same',
                                   name='conv1_1')(net['input'])
    net['conv1_2'] = Convolution2D(64, 3, 3,
                                   activation='relu',
                                   border_mode='same',
                                   name='conv1_2')(net['conv1_1'])
    net['pool1'] = MaxPooling2D((2, 2), strides=(2, 2), border_mode='same',
                                name='pool1')(net['conv1_2'])
The weights I downloaded from here.