Atralb commented on 17 Jan 2019 â€¢
edited
Hi all,
First of all I must say I'm very new to Tensorflow, Keras and Deep Learning as a whole.
I am trying to create a very simple autoencoder on my own with keras Sequential model on MNIST dataset, as follows :
import tensorflow as tf
import numpy as np
import pandas as pd
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Conv2D, Dropout, MaxPooling2D, Flatten, Reshape
import matplotlib.pyplot as plt

from keras.datasets import mnist
(x_train, y_train), (x_test, y_test) = mnist.load_data()

model3 = Sequential()

model3.add(Flatten(input_shape=x_train.shape[1:]))
model3.add(Dense(300, activation='relu'))
model3.add(Dense(150, activation='relu'))
model3.add(Dense(300, activation='relu'))
model3.add(Dense(784, activation='relu'))
model3.add(Reshape((28,28)))

model3.compile(optimizer='adam', loss='sparse_categorical_crossentropy')

model3.summary()

model3.fit(x_train,x_train, epochs=10, batch_size=50)
This is the error message I got and I can't figure out where does the error come from. I imagine it's from the reshape layer at the end but I'm not completely sure, and even so I don't know why it's wrong. I already tried with model3.add(Reshape((28,28,1))) without success
ValueError                                Traceback (most recent call last)

<ipython-input-33-f06ec23d8fdd> in <module>()
----> 1 model3.fit(x_train,x_train, epochs=10, batch_size=50)

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, max_queue_size, workers, use_multiprocessing, **kwargs)
   1534         steps_name='steps_per_epoch',
   1535         steps=steps_per_epoch,
-> 1536         validation_split=validation_split)
   1537 
   1538     # Prepare validation data.

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in _standardize_user_data(self, x, y, sample_weight, class_weight, batch_size, check_steps, steps_name, steps, validation_split)
    990         x, y, sample_weight = next_element
    991     x, y, sample_weights = self._standardize_weights(x, y, sample_weight,
--> 992                                                      class_weight, batch_size)
    993     return x, y, sample_weights
    994 

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training.py in _standardize_weights(self, x, y, sample_weight, class_weight, batch_size)
   1152           feed_output_shapes,
   1153           check_batch_axis=False,  # Don't enforce the batch size.
-> 1154           exception_prefix='target')
   1155 
   1156       # Generate sample-wise weight values given the `sample_weight` and

/usr/local/lib/python3.6/dist-packages/tensorflow/python/keras/engine/training_utils.py in standardize_input_data(data, names, shapes, check_batch_axis, exception_prefix)
    330                 'Error when checking ' + exception_prefix + ': expected ' +
    331                 names[i] + ' to have shape ' + str(shape) +
--> 332                 ' but got array with shape ' + str(data_shape))
    333   return data
    334 

ValueError: Error when checking target: expected reshape_7 to have shape (28, 1) but got array with shape (28, 28)
Thanks for your help :)