Contributor
MoyanZitto commented on 10 Apr 2016
When I build a CNN model using Graph, it takes much more time than a same model built by Sequential to compile. In fact, it never end. I think the program may fall into an infinite loop, cause by stop the program manually, I always got:
    for i in v.owner.inputs]
  File "/usr/local/lib/python2.7/dist-packages/theano/tensor/basic.py", line 736, in get_scalar_constant_value
    ret = get_scalar_constant_value(ret)
  File "/usr/local/lib/python2.7/dist-packages/theano/tensor/basic.py", line 660, in get_scalar_constant_value
    for i in v.owner.inputs]
  File "/usr/local/lib/python2.7/dist-packages/theano/tensor/basic.py", line 660, in get_scalar_constant_value
    for i in v.owner.inputs]
  File "/usr/local/lib/python2.7/dist-packages/theano/tensor/basic.py", line 660, in get_scalar_constant_value
    for i in v.owner.inputs]
  File "/usr/local/lib/python2.7/dist-packages/theano/tensor/basic.py", line 660, in get_scalar_constant_value
    for i in v.owner.inputs]
  File "/usr/local/lib/python2.7/dist-packages/theano/tensor/basic.py", line 660, in get_scalar_constant_value

KeyboardInterrupt
>>> 
this is the Sequential model that works, actually it just a copy of the example script "cifar-CNN", except for an extra layer "Dense3D" defined by myself.
def get_sequential_CNN_model(input_shape, N):
    channels, M = input_shape
    l= int(np.sqrt(N))
    model = Sequential()
    model.add(Dense3D((3,N),input_shape=(3,M)))
    model.add(Reshape((3,l,l)))
    model.add(Convolution2D(32, 3, 3, border_mode='same'))
    model.add(Activation('relu'))
    model.add(Convolution2D(32, 3, 3))
    model.add(Activation('relu'))
    model.add(MaxPooling2D(pool_size=(2, 2)))
    model.add(Dropout(0.25))

    model.add(Convolution2D(64, 3, 3, border_mode='same'))
    model.add(Activation('relu'))
    model.add(Convolution2D(64, 3, 3))
    model.add(Activation('relu'))
    model.add(MaxPooling2D(pool_size=(2, 2)))
    model.add(Dropout(0.25))

    model.add(Flatten())
    model.add(Dense(512))
    model.add(Activation('relu'))
    model.add(Dropout(0.5))
    model.add(Dense(10))
    model.add(Activation('softmax'))
    return model
And this is the model that keeps compling....
def get_CNN_model(input_shape, N):
    channels, M = input_shape
    l= int(np.sqrt(N))
    model = Graph()
    model.add_input('input', input_shape=input_shape)
    Dense3D_1 = Dense3D((3,N))
    model.add_node(Dense3D_1,name='dense3D',input='input')
    model.add_node(Reshape((3,l,l)), name='reshape',input='dense3D')
    model.add_node(Convolution2D(32, 3, 3, border_mode='same'),name='conv1', input='reshape')    
    model.add_node(Activation('relu'), name='relu1', input='conv1')
    model.add_node(Convolution2D(32, 3, 3, border_mode='same'),name='conv2', input='relu1')    
    model.add_node(Activation('relu'), name='relu2', input='conv2')
    model.add_node(MaxPooling2D(pool_size=(2,2)), name='pool1', input='relu2')
    model.add_node(Dropout(0.25), name='drop1', input='pool1')
    model.add_node(Convolution2D(64,3,3, border_mode='same'), name='conv3',input='drop1')
    model.add_node(Activation('relu'), name='relu3', input='conv3')
    model.add_node(Convolution2D(64,3,3, border_mode='same'), name='conv4',input='relu3')
    model.add_node(Activation('relu'), name='relu4', input='conv4')
    model.add_node(MaxPooling2D(pool_size=(2,2)), name='pool2', input='relu4')
    model.add_node(Dropout(0.25), name='drop2', input='pool2')
    flatten1 = Flatten()
    model.add_node(flatten1,name='flatten', input='drop2')


    model.add_node(Dense(512),name='dense1', input='flatten')
    model.add_node(Activation('relu'),name='relu',input='dense1')
    model.add_node(Dropout(0.5), name='dropout', input='relu')
    model.add_node(Dense(10), name='dense2', input='dropout')
    model.add_node(Activation('softmax'),name='softmax',input='dense2', create_output=True)

    return model
Looking for any possible solution, thank you a lot!
1