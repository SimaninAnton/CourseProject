sygi commented on 24 Dec 2016
Made a simple RNN model with sparse_categorical_cross_entropy as a loss which compiled successfully using Theano backend. When changed to TF backend, I got an error. Is sparse_categorical_crossentropy meant to work with TF backend?
TypeError                                 Traceback (most recent call last)
<ipython-input-8-96bfccec6816> in <module>()
      6 # shape: (batch_size, seq_length, chars_n)
      7 model.compile(loss='sparse_categorical_crossentropy',
----> 8               optimizer=Adam(clipnorm=1.))
      9               #metrics=['sparse_categorical_accuracy'])
     10 model.summary()

/usr/local/lib/python2.7/dist-packages/keras/models.pyc in compile(self, optimizer, loss, metrics, sample_weight_mode, **kwargs)
    587                            metrics=metrics,
    588                            sample_weight_mode=sample_weight_mode,
--> 589                            **kwargs)
    590         self.optimizer = self.model.optimizer
    591         self.loss = self.model.loss

/usr/local/lib/python2.7/dist-packages/keras/engine/training.pyc in compile(self, optimizer, loss, metrics, loss_weights, sample_weight_mode, **kwargs)
    617             loss_weight = loss_weights_list[i]
    618             output_loss = weighted_loss(y_true, y_pred,
--> 619                                         sample_weight, mask)
    620             if len(self.outputs) > 1:
    621                 self.metrics_tensors.append(output_loss)

/usr/local/lib/python2.7/dist-packages/keras/engine/training.pyc in weighted(y_true, y_pred, weights, mask)
    305     def weighted(y_true, y_pred, weights, mask=None):
    306         # score_array has ndim >= 2
--> 307         score_array = fn(y_true, y_pred)
    308         if mask is not None:
    309             # Cast the mask to floatX to avoid float64 upcasting in theano

/usr/local/lib/python2.7/dist-packages/keras/objectives.pyc in sparse_categorical_crossentropy(y_true, y_pred)
     43     If you get a shape error, add a length-1 dimension to labels.
     44     '''
---> 45     return K.sparse_categorical_crossentropy(y_pred, y_true)
     46 
     47 

/usr/local/lib/python2.7/dist-packages/keras/backend/tensorflow_backend.pyc in sparse_categorical_crossentropy(output, target, from_logits)
   1991     if len(output_shape) == 3:
   1992         # if our output includes timesteps we need to reshape
-> 1993         return tf.reshape(res, [-1, int(output_shape[-2])])
   1994     else:
   1995         return res

TypeError: __int__ returned non-int (type NoneType)
Model definition (error is thrown during model compilation):
# input size: (batch_size, seq_length=32, chars_n=88)
model = Sequential()
model.add(LSTM(1000, input_length=seq_len, input_dim=chars_n, return_sequences=True))
# shape: (batch_size, seq_length, 1000)
model.add(wrappers.TimeDistributed(Dense(chars_n, activation='softmax')))
# shape: (batch_size, seq_length, chars_n)
model.compile(loss='sparse_categorical_crossentropy',
              optimizer='adam',
              metrics=['sparse_categorical_accuracy'])
model.summary()
full code: https://github.com/sygi/ml-learning-diary/blob/master/projects/polish-rnn/code.ipynb