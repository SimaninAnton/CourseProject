anatoliykmetyuk commented on 28 Oct 2016 â€¢
edited
I have the following script:
from keras.layers import *
from keras.models import Model, Sequential

import numpy as np

dim = 1

def model(in_shape, out_shape, init='glorot_uniform', inner_init='glorot_uniform', activation='linear'):
  l = SimpleRNN(
      output_dim = out_shape[-1]
    , input_dim  = in_shape[-1]
    , init       = init
    , inner_init = inner_init
    , activation = activation
    , return_sequences = True
    , input_length = in_shape[0])

  model = Sequential()
  model.add(l)

  model.compile(loss='mse', optimizer='sgd')

  print(model.summary())
  return model

def _test():
  in_shape  = (10, dim)
  out_shape = in_shape
  m = model(in_shape, out_shape)

  sample = np.arange(in_shape[0] * in_shape[1], dtype=np.float64).reshape(1, in_shape[0], in_shape[1])
  print("Sample:    ", sample)

  prediction = m.predict(sample)

  print("Prediction:", prediction)


_test()
This basically creates a SimpleRNN model and feeds it with an input of shape (1, 10, dim) - one sample, 10 time steps, dim features. dim is a variable on line 6.
When dim is set to 1, I get the following error:
Using Theano backend.
Using gpu device 0: GeForce GTX 980 Ti (CNMeM is enabled with initial size: 95.0% of memory, cuDNN not available)
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to
====================================================================================================
simplernn_1 (SimpleRNN)          (None, 10, 1)         3           simplernn_input_1[0][0]
====================================================================================================
Total params: 3
____________________________________________________________________________________________________
None
Sample:     [[[ 0.]
  [ 1.]
  [ 2.]
  [ 3.]
  [ 4.]
  [ 5.]
  [ 6.]
  [ 7.]
  [ 8.]
  [ 9.]]]
Traceback (most recent call last):
  File "simplernn-identity.py", line 39, in <module>
    _test()
  File "simplernn-identity.py", line 34, in _test
    prediction = m.predict(sample)
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/keras/models.py", line 678, in predict
    return self.model.predict(x, batch_size=batch_size, verbose=verbose)
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/keras/engine/training.py", line 1194, in predict
    self._make_predict_function()
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/keras/engine/training.py", line 752, in _make_predict_function
    **kwargs)
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/keras/backend/theano_backend.py", line 787, in function
    return Function(inputs, outputs, updates=updates, **kwargs)
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/keras/backend/theano_backend.py", line 773, in __init__
    **kwargs)
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/theano/compile/function.py", line 326, in function
    output_keys=output_keys)
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/theano/compile/pfunc.py", line 486, in pfunc
    output_keys=output_keys)
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/theano/compile/function_module.py", line 1777, in orig_function
    defaults)
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/theano/compile/function_module.py", line 1644, in create
    input_storage=input_storage_lists, storage_map=storage_map)
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/theano/gof/link.py", line 699, in make_thunk
    storage_map=storage_map)[:3]
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/theano/gof/vm.py", line 1053, in make_all
    impl=impl))
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/theano/scan_module/scan_op.py", line 733, in make_thunk
    self.validate_inner_graph()
  File "/Users/anatolii/anaconda/envs/p3/lib/python3.5/site-packages/theano/scan_module/scan_op.py", line 250, in validate_inner_graph
    (self.name, type_input, type_output))
TypeError: ('The following error happened while compiling the node', forall_inplace,gpu,scan_fn}(TensorConstant{10}, GpuDimShuffle{1,0,x}.0, GpuIncSubtensor{InplaceSet;:int64:}.0, TensorConstant{10}, simplernn_1_U), '\n', "Inconsistency in the inner graph of scan 'scan_fn' : an input and an output are associated with the same recurrent state and should have the same type but have type 'CudaNdarrayType(float32, col)' and 'CudaNdarrayType(float32, matrix)' respectively.")
When dim is set to anything more than 1, no error happens and everything runs fine.
I can't see any theoretical reason why I should not feed a 1D feature in an RNN. I want to train an identity function with an RNN.
What I think: it seems that the "input" and the "output" in the error refer to the hidden state, and an input of CudaNdarrayType(float32, col) means that the feature dimension gets flattened (col), and the input x internally is transformed into a 2D matrix. Hence, each time step is a colon. However, once some math was performed on it to calculate the next hidden state, the hidden state is treated as a matrix: CudaNdarrayType(float32, matrix). That's just a thought.
My configuration:
OS: Mac OS X 10.12
GPU: GeForce GTX 980 Ti
Backend: Theano
Python: 3
CUDA Driver Version: 8.0.46
Please make sure that the boxes below are checked before you submit your issue. Thank you!
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).