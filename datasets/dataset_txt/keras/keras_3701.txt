RylanSchaeffer commented on 12 Dec 2016 â€¢
edited
I'm trying to implement https://github.com/ankeshanand/neural-cryptography-tensorflow with Keras and I'm struggling to find the Keras equivalent of model.py's lines 47, 62 and 70.
My problem is this. I have three models (A, B, E) and two loss functions; the first loss function is used for model E, and the second loss function is used for A and B. The first loss function is the mean absolute error between A's input and E's output. The second loss function is the mean absolute error between A's input and B's output, plus (1 - MAE(A's input, E's output))^2.
I saw in #2662 that custom loss functions are restricted to two inputs, which clearly presents a problem in this situation. In the aforementioned repo, the author assigns A's input, B's output and E's output to variables so that they can be used in the loss functions. Is there some equivalent workaround in Keras?
Edit: I can think of one work-around, but it depends on Keras having the ability to train a model based on an input and a scalar loss value, instead of an input/output pair. Does Keras have such a feature?
Edit 2: I'm a newcomer to this field and library, so if my question is unclear or I'm misunderstanding something, just let me know!