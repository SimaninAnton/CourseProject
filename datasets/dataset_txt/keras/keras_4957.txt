razn7 commented on 16 Jun 2016 â€¢
edited
I need to implement dice coefficient as objective function in keras.
Seems to be I can't do it right.
y_true and y_pred in custom objective function are Tensor Variables not a real data like numpy array , that's why we can operate only with backend functions like K.sum, K.dot and others or tensor functions (T.sum, T.dot...)
I tried at first:
def dice_loss1(y_true,y_pred): 
 yt = T.flatten(y_true)
 yp = T.flatten(y_pred)
 loss=1.0-2.0*T.dot(yt,yp)/(T.sum(yt)+T.sum(yp))
 return loss;
But also I need clip and round prediction data and (T.sum(yt)+T.sum(yp)) can be zero, that's why:
def dice_loss2(y_true,y_pred): 
 yt = K.flatten(y_true)
 yp = K.round(K.clip(K.flatten(y_pred),0.7,1.0))
 sum=K.sum(yt)+K.sum(yp)
 if (sum): loss=1.0-2.0*K.dot(yt,yp)/sum
 else: loss=0.0
 return loss;
I tried to use K.variable and not to use it, nothing new: dice coefficient doesn't work, it calculated wrong.
Please say where am I wrong? I am not fully understand how to work with backend functions and Tensor Variables.