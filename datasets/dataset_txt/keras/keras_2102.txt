Contributor
Dapid commented on 20 Jun 2017
When given a variable length input, CNTK fixes it to the length of the first example.
The following example runs under Theano and Tensorflow.
import numpy as np
from keras.layers import Input, Conv1D
from keras.models import Model

# Get model:
inp = Input(shape=(None, 16))
out = Conv1D(2, 3, padding='same')(inp)

model = Model(inputs=inp, outputs=out)
model.compile('adam', 'mse')

for len_ in (100, 200):
    x = np.random.random((4, len_, 16))
    model.predict(x)
CNTK fails, since once it has seen the first batch, it assumes the second dimension is fixed to 100:
Traceback (most recent call last):
  File "do.py", line 19, in <module>
    model.predict(x)
  File "/home/david/.virtualenv/py35/lib/python3.5/site-packages/keras/engine/training.py", line 1594, in predict
    batch_size=batch_size, verbose=verbose)
  File "/home/david/.virtualenv/py35/lib/python3.5/site-packages/keras/engine/training.py", line 1218, in _predict_loop
    batch_outs = f(ins_batch)
  File "/home/david/.virtualenv/py35/lib/python3.5/site-packages/keras/backend/cntk_backend.py", line 1609, in __call__
    output_values = self.metrics_func.eval(input_dict, as_numpy=False)
  File "/home/david/.virtualenv/py35/lib/python3.5/site-packages/cntk/ops/functions.py", line 626, in eval
    _, output_map = self.forward(arguments, outputs, device=device, as_numpy=as_numpy)
  File "/home/david/.virtualenv/py35/lib/python3.5/site-packages/cntk/internal/swig_helper.py", line 69, in wrapper
    result = f(*args, **kwds)
  File "/home/david/.virtualenv/py35/lib/python3.5/site-packages/cntk/ops/functions.py", line 760, in forward
    keep_for_backward)
  File "/home/david/.virtualenv/py35/lib/python3.5/site-packages/cntk/cntk_py.py", line 1568, in _forward
    return _cntk_py.Function__forward(self, *args)
ValueError: The trailing dimensions of the Value shape '[4 x 200 x 16]' do not match the Variable 'Input('input_1', [#], [100 x 16])' shape '[100 x 16]'.