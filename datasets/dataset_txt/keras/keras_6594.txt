tzczsq commented on 5 Oct 2015
Hi,
I find the examples, such as imdb-lstm.py.
The command:
model.fit(X_train, y_train, batch_size=batch_size, nb_epoch=4,
show_accuracy=True, verbose=1, validation_data=(X_test, y_test))
It's wrong that when training deep model, the validation data should be split from training data, rather than testing data. This gives a good performance.
However, with validation_split=0.2 on training data, this gives a bad performance.
Which is the correct use for model.fit?