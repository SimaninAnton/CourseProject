phu4ku commented on 24 Apr 2016 â€¢
edited
x1 = Input(shape=(3,))
x2 = Input(shape=(3,))
v1 = Reshape((3,1,))(x1)
v2 = Reshape((3,1,))(x2)
v = merge([v1, v2], mode='dot')
model = Model(input=[x1,x2], output=[v])
dummyData = np.random.random((1,3,))
xData = np.random.random((1,3,))
model.compile(loss='mse',
optimizer='rmsprop')
ans = model.predict([dummyData, xData])
print(ans)
If I comment the last two lines, the code can compile. But If I run model.predict..., it'll get error.
ValueError Traceback (most recent call last)
in ()
21 optimizer='rmsprop')
22
---> 23 ans = model.predict([dummyData, xData])
24 #print(ans)
C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\keras\engine\training.pyc in predict(self, x, batch_size, verbose)
1111 f = self.predict_function
1112 return self._predict_loop(f, ins,
-> 1113 batch_size=batch_size, verbose=verbose)
1114
1115 def train_on_batch(self, x, y,
C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\keras\engine\training.pyc in _predict_loop(self, f, ins, batch_size, verbose)
831 ins_batch = slice_X(ins, batch_ids)
832
--> 833 batch_outs = f(ins_batch)
834 if type(batch_outs) != list:
835 batch_outs = [batch_outs]
C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\keras\backend\theano_backend.pyc in call(self, inputs)
497 def call(self, inputs):
498 assert type(inputs) in {list, tuple}
--> 499 return self.function(*inputs)
500
501
C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\theano\compile\function_module.pyc in call(self, _args, *_kwargs)
900 node=self.fn.nodes[self.fn.position_of_error],
901 thunk=thunk,
--> 902 storage_map=getattr(self.fn, 'storage_map', None))
903 else:
904 # old-style linkers raise their own exceptions
C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\theano\gof\link.pyc in raise_with_op(node, thunk, exc_info, storage_map)
312 # extra long error message in that case.
313 pass
--> 314 reraise(exc_type, exc_value, exc_trace)
315
316
C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\theano\compile\function_module.pyc in call(self, _args, *_kwargs)
887 try:
888 outputs =
--> 889 self.fn() if output_subset is None else
890 self.fn(output_subset=output_subset)
891 except Exception:
ValueError: negative dimensions are not allowed
Apply node that caused the error: InplaceDimShuffle{0,1,2,-1}(Reshape{3}.0)
Toposort index: 9
Inputs types: [TensorType(float32, (False, False, True))]
Inputs shapes: [(1L, 3L, 1L)]
Inputs strides: [(12L, 4L, 4L)]
Inputs values: [array([[[ 0.27034158],
[ 0.08950941],
[ 0.12575579]]], dtype=float32)]
Outputs clients: [[Reshape{3}(InplaceDimShuffle{0,1,2,-1}.0, MakeVector{dtype='int64'}.0)]]
Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
File "C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\IPython\core\interactiveshell.py", line 3066, in run_code
exec(code_obj, self.user_global_ns, self.user_ns)
File "", line 12, in
v = merge([v1, v2], mode='dot')
File "C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\keras\engine\topology.py", line 1442, in merge
name=name)
File "C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\keras\engine\topology.py", line 1118, in init
self.add_inbound_node(layers, node_indices, tensor_indices)
File "C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\keras\engine\topology.py", line 543, in add_inbound_node
Node.create_node(self, inbound_layers, node_indices, tensor_indices)
File "C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\keras\engine\topology.py", line 153, in create_node
output_tensors = to_list(outbound_layer.call(input_tensors, mask=input_masks))
File "C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\keras\engine\topology.py", line 1217, in call
output = K.batch_dot(l1, l2, self.dot_axes)
File "C:\Users\xxx\AppData\Local\Continuum\Anaconda2\lib\site-packages\keras\backend\theano_backend.py", line 146, in batch_dot
out = T.batched_tensordot(x, y, axes=axes)
HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.