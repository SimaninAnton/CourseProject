lemelondeau commented on 4 Apr 2017
Hi,
I'm training a sequence-to-sequence RNN, like this one:
I can use the following code for fixed length inputs:
model = Sequential()
hidden_dim = 10
model.add(SimpleRNN(hidden_dim,input_shape=(5,4),return_sequences=True,activation='sigmoid'))
model.add(Dense(1))
model.compile(loss='mse', optimizer='sgd')
model.fit(X_train, y_train, batch_size=10, nb_epoch=10)
But the inputs have variable lengths (outputs have the same lengths as their corresponding inputs), so I padded the inputs with 0 and tried the masking layer:
...
model.add(Masking(0,input_shape=(5,4)))
model.add(SimpleRNN(hidden_dim,return_sequences=True,activation='sigmoid'))
model.add(Dense(1))
...
I got this error:
ValueError: Layer dense_1 does not support masking, but was passed an input_mask: Tensor("Cast_4:0", shape=(?, 5), dtype=uint8)
The question is, Dense layer doesn't support masking while I need it for the output.
I searched a lot, some people don't use dense layer but I need it.
Anyone who have experience dealing with this problem? Thanks in advance!