Manezx commented on 3 Nov 2016
I want to select some time steps of an lstm output and merge these specifics time steps two by two.
I tried to do so with numpy :
`
X = np.arange(60).reshape((2,10,3))
indices = np.array([[0, 2, 3], [1, 2, 4]])

main_input = Input(shape=(10, 3))
indices_input = Input(shape= (2,), dtype="int32")

def filter_np(x, indices):

    extract = np.zeros(shape=(x.shape[0], indices.shape[1], x.shape[2]))
    combine = np.zeros(shape=(x.shape[0], indices.shape[1] * (indices.shape[1] - 1), x.shape[2] *    2))

    for i, ind in enumerate(indices):
        extract[i,:,:] = np.vstack([x[i, v, :] for v in ind])
        combine[i,:,:] = np.array([[np.concatenate((extract[i,j,:], extract[i,k,:]),axis=0)
                                    for k,_ in enumerate(extract[i,:,:]) if k != j]
                          for j,_ in enumerate(extract[i,:,:])]).reshape((indices.shape[1] * (indices.shape[1] - 1), x.shape[2] * 2))

    return combine

print filter_np(X, indices)
`
Output :
 [[[  0.   1.   2.   6.   7.   8.]
   [  0.   1.   2.   9.  10.  11.]
   [  6.   7.   8.   0.   1.   2.]
   [  6.   7.   8.   9.  10.  11.]
   [  9.  10.  11.   0.   1.   2.]
   [  9.  10.  11.   6.   7.   8.]]

  [[ 33.  34.  35.  36.  37.  38.]
   [ 33.  34.  35.  42.  43.  44.]
   [ 36.  37.  38.  33.  34.  35.]
   [ 36.  37.  38.  42.  43.  44.]
   [ 42.  43.  44.  33.  34.  35.]
   [ 42.  43.  44.  36.  37.  38.]]]
So now I would like to do the same with Keras backend and maybe a Lambda layer like :
filtered = Lambda(filter_k, arguments={'indices' : indices_input}, output_shape=(7, 3))(main_input)
Thanks for your help !