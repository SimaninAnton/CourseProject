ghost commented on 14 Nov 2017 â€¢
edited by ghost
I have a dataset C of 10,000 (binary) samples each of 64 features. The class label is binary ( either 1 or -1). For instance, a sample would look like this c=[1,0,0,0,1,0, .... , 0,1], r=[-1]. My goal is to generate a classification model that is able to classify the samples based on the binary classes ( i.e., 1 or -1). I thought to try using Recurrent NN to generate a good model for classification. To do so, I have written the following code using Keras library:
    C = C.reshape((C.shape[0], C.shape[1], 1))
    tr_C, ts_C, tr_r, ts_r = train_test_split(C, r, train_size=.8)
    batch_size = 1000

    print('RNN model...')
    model = Sequential()
    model.add(Dense(64,
                    batch_input_shape=(batch_size, C.shape[1], 1),
                    activation='relu',
                    kernel_initializer='glorot_uniform',
                    bias_initializer='glorot_uniform',
                    )
              )

    model.add(SimpleRNN(64,
                        #batch_input_shape=(batch_size, C.shape[1], 1),
                        activation='relu',
                        kernel_initializer='glorot_uniform',
                        bias_initializer='glorot_uniform',
                        stateful=True,
                        return_sequences=True,
                        )
              )

    model.add(SimpleRNN(64,
                        activation='relu',
                        kernel_initializer='glorot_uniform',
                        bias_initializer='glorot_uniform',
                        )
              )

    model.add(Dense(1, activation='tanh'))

    print('>>> Training...')
    model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])

    model.fit(tr_C, tr_r,
              batch_size=batch_size, epochs=2,
              shuffle=True, validation_data=(ts_C, ts_r))
The problem is that I keep getting only 50% accuracy. I tried different combinations of initial weights, number of layers, and etc but nothing helps. I start thinking that my code has a logical bug! Kindly, can someone verify my code if it is logically correct? Any other hints are appreciated