bzhong2 commented on 4 Jun 2017
Hello,
I built a CNN network for image classification with keras. I would like to multiply the output of the last Dense(with 'softmax') with a weights matrix. I know I can use lambda layer to do it if the weights matrix is constant. However,I want to "train" the weights. How can I do it?
I tried to add a 1D Convolution layer (is it equivalent to matrix multiplication?) on top of the last Dense() layer.
However, it gave me an error. Any help is appreciated!!
###########The code is as below :
Add_layers = Sequential()
Add_layers.add(Dense(512, activation='relu',name='fc_new_1',input_shape=train_data.shape[1:]))
Add_layers.add(Dropout(0.1))
Add_layers.add(Dense(512, activation='relu',name='fc_new_2'))
Add_layers.add(Dropout(0.1))
Add_layers.add(Dense(num_classes, activation='sigmoid',name='logit_1'))
Matrix_Layer = Conv1D(filters=num_classes, kernel_size=num_classes, use_bias=False, strides=1, name='Matrix_Layer')
Add_layers.add(Matrix_Layer)
#########The error is as below
ValueError: Input 0 is incompatible with layer Matrix_Layer: expected ndim=3, found ndim=2