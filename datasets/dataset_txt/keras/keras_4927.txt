mossaab0 commented on 21 Jun 2016
I'm trying to implement a simple QA model. After creating two LSTM layers for the questions and the answers, I want to compute the cosine of the corresponding vectors before feeding them to a Dense layer.
q_input = Input(shape=(121, ), dtype='int32', name = 'q')
q_embedding = Embedding(56066, 200, mask_zero=True)(q_input)
q_lstm = LSTM(output_dim=100)(q_embedding)

a_input = Input(shape=(200, ), dtype='int32', name = 'a')
a_embedding = Embedding(56066, 200, mask_zero=True)(a_input)
a_lstm = LSTM(output_dim=100)(a_embedding)

merged = merge([q_lstm, a_lstm], mode='cos', dot_axes = 1)

y = Dense(1, activation='sigmoid')(merged)

model = Model(input=[q_input, a_input], output=y)
model.compile('adam', 'binary_crossentropy')
model.fit(train_input, train_input["l"])
The snippet above fails at the step of creating the Dense layer, with the error below. Everything works well when the merge mode is sum.
Exception: Input 0 is incompatible with layer dense_2: expected ndim=2, found ndim=3