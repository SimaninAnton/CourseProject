sanjeevmk commented on 29 Sep 2016 â€¢
edited
I observed a few things about random seeds depending on where they're declared in the code; I want to know why that happens.. I'm using "he_normal" initialization for initializing the weights in all my convolution layers. As we know with "he_normal", the size of the filter determines the variance of the normal distribution used, and the seed determines how the weights are sampled from that distribution.
I observe different behaviours based on where I initialize my seed.
The first case:
import numpy as np
np.random.seed(2016)
import keras

# all other keras imports follow after this.
Above, I first import numpy, then set the seed , followed by all keras imports. The result I get from my network is reproducible when I use the same seed, and changing seeds gives different results. This is as expected.
The second case:
import numpy as np
import keras
np.random.seed(2016)

# all other keras imports follow after this.
The only change between first and second case is, the seed initialization is now after the import keras line. So the sequence is, import numpy, then do import keras , then initialize seed, which is followed by all other keras imports. Here also the seed works fine, I get reproducible results for the same seed and different results for different seeds.
But, for the same seed, the above two cases give different results! That is, assume the seed is "x" , I get some result for the first sequence , but I get a different result for the second sequence for the same seed "x".
The seed I set is taking effect, but it works differently when I set the seed before import keras or after import keras . In both cases, reproducibility is ensured for same seed , so I know the seed is doing what its supposed to do, but it is doing so differently based on the position of import keras.
Without setting any seed, I get different results every run, which is expected. Its just that setting the seed with two different import sequences is giving differently reproducible results.
Has anyone faced this? Why are these two cases performing correctly , yet differently ?
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).