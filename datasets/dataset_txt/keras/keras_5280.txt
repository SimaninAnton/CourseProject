wddabc commented on 4 May 2016 â€¢
edited
Hi, if my understanding on the temporal output is correct. It generates a vector rather than a scalar for each example. Considering the number of example, the output should be (nsample, nstep), which should be 2D. In https://github.com/fchollet/keras/blob/master/keras/engine/training.py#L344, the checker seems to enforce y to be 3D, which seems strange to me. Also, the checker, if sample_weight is not None and len(sample_weight.shape) != 2: looks very reasonable, as the sample of sample_weight is (nsample, nstep). Shouldn't y have the same shape as sample_weight ?
In my own example:
model.compile(loss=_batched_binary_crossentropy, optimizer='adam', sample_weight_mode='temporal')
model.fit(x_train, y_train, sample_weight=w_train, batch_size=_args.batch_size, nb_epoch=_args.nepoch, validation_data=(x_dev, y_dev, w_dev))
The shape of x is not important, the shape of y is (nsample, nstep), which means the model predicts a vector with length nstep for each x. w is the weight matrix that have the same shape with y. When I did this. I got an error:
Timestep-wise sample weighting (use of sample_weight_mode="temporal") is restricted to outputs that are at least 3D, i.e. that have a time dimension.
Is my understanding wrong on the temporal usage? Thanks!
Please make sure that the boxes below are checked before you submit your issue. Thank you!
[Y] Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
[Y] If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
[ ] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).
Basically, it is a conceptual question, not a bug.