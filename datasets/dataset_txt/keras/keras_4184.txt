makagan commented on 12 Oct 2016
Masking seems not to be working after a merge layer in a sequential model (unless I have made a silly mistake). Example:
test_left = np.array([[[1.],
[2.],
[3.],
[4.],
[5.],
[0],
[0],
[0],
[0],
[0]]])
test_right = np.array([[1.,1.,1.,1.,1.,0.,0.,0.,0.,0.]])
left_ = Sequential()
left_.add(Masking( mask_value=0, input_shape = (None, 1) ))
right_ = Sequential()
right_.add(Embedding(input_dim=16, output_dim=2, mask_zero=True, input_length=None))
model_ = Sequential()
model_.add( Merge([left_, right_], mode='concat') )
model_.add( LSTM( 5, return_sequences=False) )
print model_.predict([test_left, test_right])
print model_.predict([test_left[:,0:7,:], test_right[:,0:7]])
print model_.predict([test_left[:,0:5,:], test_right[:,0:5]])
gives different outputs for each of the print statements, indicating that masking is not working properly. I check the output masks of the Masking and Embedding layers each seem fine, but the Merging layer has None output mask, and [None, None] input mask.
I tried implementing the same thing with the functional API, and masking worked correctly (the three printed outputs were the same), making me believe that has specifically to do with masking+merging in sequential models.
Does anyone know what the issue might be?