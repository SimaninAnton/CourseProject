ersinyar commented on 15 Sep 2016 â€¢
edited
....
print('Build model...')
model = Sequential()
model.add(Embedding(max_features, 128))
model.add(LSTM(size, return_sequences=True, dropout_W=0.2, dropout_U=0.2))
model.add(GlobalAveragePooling1D())
model.add(Dense(1))
model.add(Activation('sigmoid'))
....
I need to be able to take mean or max of the vectors for all time steps in a sample after LSTM layer before giving the mean or max to the dense layer. I think timedistributedmerge was able to do this but it was deprecated. Using return_sequences = True I can obtain the vectors for all time steps in a sample after LSTM layer. However, GlobalAveragePooling1D() is not compatible with masking and it considers all time steps whereas I need only the non-masked time steps. I saw posts recommending Lambda layer but these also do not take into account of masking. Any help would be appreciated.