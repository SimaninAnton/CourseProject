usamec commented on 22 Jun 2017 â€¢
edited
This is perfectly valid Keras code. Note, that we do not have to set fixed number of timesteps.
from keras.layers import *
from keras.models import *
import numpy as np

m = Sequential()
m.add(Embedding(output_dim=100, input_dim=1000))
m.add(GRU(100, return_sequences=True))
m.add(TimeDistributed(Dense(1000)))

x = np.random.randint(low=0, high=10, size=(5, 10))

print m.predict(x)
However it is impossible to port this code into functional API without specifying the shape of the input.