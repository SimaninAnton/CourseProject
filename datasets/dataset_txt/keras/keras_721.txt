jmarkow commented on 8 Oct 2018
I'm currently using Keras 2.2.4 and tensorflor-gpu 1.11.0, and I'm seeing the following error when using the multi_gpu_model function in a Jupyter notebook. I've tried other model types and no dice. Hopefully I'm not missing something simple.
model = Sequential()
model.add(LSTM(512, return_sequences=True, input_shape=(timesteps, input_dim), dropout=.3))
model.add(LSTM(512, return_sequences=True, dropout=.3))  
model.add(LSTM(512)) 
model.add(Dense(n_classes))
model.add(Activation('softmax'))
model = multi_gpu_model(model, gpus=2)
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-42-54402d49f97a> in <module>()
      1 os.environ["CUDA_VISIBLE_DEVICES"] = "1, 2"
----> 2 model = multi_gpu_model(model, gpus=2)

~/miniconda3/envs/moseq2/lib/python3.6/site-packages/keras/utils/multi_gpu_utils.py in multi_gpu_model(model, gpus, cpu_merge, cpu_relocation)
    252         for name, outputs in zip(output_names, all_outputs):
    253             merged.append(concatenate(outputs,
--> 254                                       axis=0, name=name))
    255         return Model(model.inputs, merged)

~/miniconda3/envs/moseq2/lib/python3.6/site-packages/keras/layers/merge.py in concatenate(inputs, axis, **kwargs)
    647         A tensor, the concatenation of the inputs alongside axis `axis`.
    648     """
--> 649     return Concatenate(axis=axis, **kwargs)(inputs)
    650 
    651 

~/miniconda3/envs/moseq2/lib/python3.6/site-packages/keras/engine/base_layer.py in __call__(self, inputs, **kwargs)
    429                                          'You can build it manually via: '
    430                                          '`layer.build(batch_input_shape)`')
--> 431                 self.build(unpack_singleton(input_shapes))
    432                 self.built = True
    433 

~/miniconda3/envs/moseq2/lib/python3.6/site-packages/keras/layers/merge.py in build(self, input_shape)
    355         for i in range(len(reduced_inputs_shapes)):
    356             del reduced_inputs_shapes[i][self.axis]
--> 357             shape_set.add(tuple(reduced_inputs_shapes[i]))
    358         if len(shape_set) > 1:
    359             raise ValueError('A `Concatenate` layer requires '

TypeError: unhashable type: 'numpy.ndarray'