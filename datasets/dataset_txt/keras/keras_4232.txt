adelsalehali1982 commented on 5 Oct 2016 â€¢
edited
Hello all I'm trying to convert VGG16 to 3D model for action recognition task but I'm getting error.
I tried to run it on GPU and on CPU. my GPU has 4 GB memory.
`
from keras.models import Sequential
from keras.layers.core import Flatten, Dense, Dropout
from keras.optimizers import SGD
import cv2, numpy as np
from keras.layers.convolutional import (Convolution3D, MaxPooling3D,
ZeroPadding3D)
def VGG_16(weights_path=None):
model = Sequential()
model.add(ZeroPadding3D((0,1,1),input_shape=(3,16,224,224)))
model.add(Convolution3D(64, 3, 3,3, activation='relu',dim_ordering='tf'))
model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(64, 3, 3,3, activation='relu',dim_ordering='tf'))
model.add(MaxPooling3D(pool_size=(1,2,2), strides=(1,2,2)))
model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(128, 3, 3,3, activation='relu',dim_ordering='tf'))
model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(128, 3,3, 3, activation='relu',dim_ordering='tf'))
model.add(MaxPooling3D(pool_size=(1,2,2), strides=(1,2,2),dim_ordering='tf'))

model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(256, 3, 3,3, activation='relu',dim_ordering='tf'))
model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(256, 3,3, 3, activation='relu',dim_ordering='tf'))
model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(256, 3,3, 3, activation='relu',dim_ordering='tf'))
model.add(MaxPooling3D(pool_size=(1,2,2), strides=(1,2,2),dim_ordering='tf'))

model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(512, 3,3, 3, activation='relu',dim_ordering='tf'))
model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(512, 3,3, 3, activation='relu',dim_ordering='tf'))
model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(512,3, 3, 3, activation='relu',dim_ordering='tf'))
model.add(MaxPooling3D(pool_size=(2,2,2), strides=(2,2,2),dim_ordering='tf'))

model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(512, 3,3, 3, activation='relu',dim_ordering='tf'))
model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(512,3, 3, 3, activation='relu',dim_ordering='tf'))
model.add(ZeroPadding3D((0,1,1)))
model.add(Convolution3D(512, 3,3, 3, activation='relu',dim_ordering='tf'))
model.add(MaxPooling3D(pool_size=(2,2,2), strides=(2,2,2),dim_ordering='tf'))

model.add(Flatten())
xout=model.output_shape
xin=model.input_shape
model.add(Dense(4096, activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(4096, activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(1000, activation='softmax'))

#if weights_path:
  #  model.load_weights(weights_path)

return model
if name == "main":
im = cv2.resize(cv2.imread('ss.jpg'), (224, 224)).astype(np.float32)
im[:,:,0] -= 103.939
im[:,:,1] -= 116.779
im[:,:,2] -= 123.68
im = im.transpose((2,0,1))
im = np.expand_dims(im, axis=0)
snap=[]
for i in range(16):
snap.append(im)
print '***************************************'
snap=np.array(snap)
print snap.shape
#snap=np.reshape(snap,(snap.shape[0],snap.shape[2],snap.shape[3],snap.shape[4]))
snap=snap.transpose((1,2,0,3,4))
#snap=np.expand_dims(snap, axis=0)
print snap.shape
print '++++++++++++++++++++++++++++++++++++++'

# Test pretrained model
model = VGG_16()
sgd = SGD(lr=0.1, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(optimizer=sgd, loss='categorical_crossentropy')
out = model.predict(snap)
print np.argmax(out)
`
and Here is the error message:
`Using Theano backend.
(16, 1, 3, 224, 224)
(1, 3, 16, 224, 224)
++++++++++++++++++++++++++++++++++++++
Traceback (most recent call last):
File "VGG16_3D.py", line 85, in
out = model.predict(snap)
File "/usr/local/lib/python2.7/dist-packages/keras/models.py", line 671, in predict
return self.model.predict(x, batch_size=batch_size, verbose=verbose)
File "/usr/local/lib/python2.7/dist-packages/keras/engine/training.py", line 1177, in predict
batch_size=batch_size, verbose=verbose)
File "/usr/local/lib/python2.7/dist-packages/keras/engine/training.py", line 876, in _predict_loop
batch_outs = f(ins_batch)
File "/usr/local/lib/python2.7/dist-packages/keras/backend/theano_backend.py", line 672, in call
return self.function(_inputs)
File "/usr/local/lib/python2.7/dist-packages/theano/compile/function_module.py", line 871, in call
storage_map=getattr(self.fn, 'storage_map', None))
File "/usr/local/lib/python2.7/dist-packages/theano/gof/link.py", line 314, in raise_with_op
reraise(exc_type, exc_value, exc_trace)
File "/usr/local/lib/python2.7/dist-packages/theano/compile/function_module.py", line 859, in call
outputs = self.fn()
File "/usr/local/lib/python2.7/dist-packages/theano/gof/op.py", line 912, in rval
r = p(n, [x[0] for x in i], o)
File "/usr/local/lib/python2.7/dist-packages/theano/tensor/nnet/conv3d2d.py", line 110, in perform
xview = get_diagonal_subtensor_view(_inputs)
File "/usr/local/lib/python2.7/dist-packages/theano/tensor/nnet/conv3d2d.py", line 23, in get_diagonal_subtensor_view
raise NotImplementedError('is this allowed?')
NotImplementedError: is this allowed?
Apply node that caused the error: DiagonalSubtensor{inplace}(Reshape{6}.0, TensorConstant{1}, TensorConstant{3})
Toposort index: 190
Inputs types: [TensorType(float32, 6D), TensorType(int8, scalar), TensorType(int8, scalar)]
Inputs shapes: [(1, 1, 64, 3, 12, 224), (), ()]
Inputs strides: [(2064384, 2064384, 32256, 10752, 896, 4), (), ()]
Inputs values: ['not shown', array(1, dtype=int8), array(3, dtype=int8)]
Outputs clients: [[Sum{axis=[3], acc_dtype=float64}(DiagonalSubtensor{inplace}.0), Shape_i{4}(DiagonalSubtensor{inplace}.0), Shape_i{5}(DiagonalSubtensor{inplace}.0), Shape_i{2}(DiagonalSubtensor{inplace}.0), Shape_i{1}(DiagonalSubtensor{inplace}.0), Shape_i{0}(DiagonalSubtensor{inplace}.0)]]
Backtrace when the node is created(use Theano flag traceback.limit=N to make it longer):
File "VGG16_3D.py", line 82, in
model = VGG_16()
File "VGG16_3D.py", line 14, in VGG_16
model.add(Convolution3D(64, 3, 3,3, activation='relu',dim_ordering='tf'))
File "/usr/local/lib/python2.7/dist-packages/keras/models.py", line 308, in add
output_tensor = layer(self.outputs[0])
File "/usr/local/lib/python2.7/dist-packages/keras/engine/topology.py", line 515, in call
self.add_inbound_node(inbound_layers, node_indices, tensor_indices)
File "/usr/local/lib/python2.7/dist-packages/keras/engine/topology.py", line 573, in add_inbound_node
Node.create_node(self, inbound_layers, node_indices, tensor_indices)
File "/usr/local/lib/python2.7/dist-packages/keras/engine/topology.py", line 150, in create_node
output_tensors = to_list(outbound_layer.call(input_tensors[0], mask=input_masks[0]))
File "/usr/local/lib/python2.7/dist-packages/keras/layers/convolutional.py", line 1086, in call
filter_shape=self.W_shape)
File "/usr/local/lib/python2.7/dist-packages/keras/backend/theano_backend.py", line 1203, in conv3d
border_mode=border_mode_3d)
HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
`