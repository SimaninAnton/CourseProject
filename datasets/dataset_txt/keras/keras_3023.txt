Lif3line commented on 10 Mar 2017
I'm writing a custom layer in the standard format:
    def __init__(self):
        # code
        super(customLayer, self).__init__()

    def build(self, input_shape):
         # code

    def get_output_shape_for(self, input_shape):
         # code
         return tuple(shape)

    def call(self, x, mask=None):
        # code
        return output
The layer itself works fine however I was wondering how I might pipe out the number of parameters to model.summary(). I had a look at the source but I'm having trouble seeing how it actually pulls in the parameter numbers from a layer. I can see the flow is something like count_total_params <- count_params <- layer.weights?
Any help would be greatly appreciated.