sanjeevmk commented on 1 Nov 2016 â€¢
edited
I read the multi-input example from here:
https://keras.io/getting-started/functional-api-guide/#multi-input-and-multi-output-models
I'm working with 3D voxel grids, and I tried to give multiple inputs as given in the example. It works fine when both inputs have the same shape (in my case, same number of channels).
I want to give two inputs : 1 input is my voxel grid of shape (64,64,64,1) , with 1 feature channel , and another feature grid of shape (64,64,64,3) with 3 feature channels. So I pass in a list of numpy arrays as inputs as given in the example:
model.fit([voxelgrids,featuregrids],labels)
voxelgrids shape : (N , 64,64,64,1)
featuregrids shape : (N, 64,64,64,3)
Doing this, gives me this error:
ValueError: GpuDnnConv images and kernel must have the same stack size
However, if I send a feature grid with 1 feature channel instead of 3, it works fine!
That is , if,
voxelgrids shape : (N, 64,64,64,1)
featuregrids shape : (N, 64,64,64,1)
then it works properly as expected.
How do I send multiple inputs to my network, where each input may have different number of channels?
For example, I might want to send two images to a network : 1 Grayscale image with 1 feature channel, and 1 RGB image with 3 feature channels.
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).