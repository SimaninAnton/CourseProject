Simoncarbo commented on 4 Jul 2016
Hi,
I'm trying to use the recently added local layers (keras/keras/layers/local.py). Training the exact same network with the same script works on cpu but not on gpu (CUDA, with or without CuDNN). I'm using Theano backend. I had no problems with gpu before. I suppose the problem lies in the local layers implementation.
Issue script:
import numpy.random as random

from keras.models import Sequential
import keras.layers as layers
from keras.optimizers import SGD


model = Sequential()

model.add(layers.ZeroPadding2D(padding=(1, 1),input_shape = (1,10,14))) 
model.add(layers.LocallyConnected2D(2,3,3,activation = 'relu',border_mode = 'valid'))

model.add(layers.Flatten())
model.add(layers.Dense(1, activation = 'sigmoid'))

model.compile(optimizer = SGD(lr = 0.001, momentum = 0.1, decay = 0.0), loss = 'binary_crossentropy', metrics = ['accuracy'])
model.summary()

model.fit(random.rand(10,1,10,14),random.rand(10,1), batch_size = 1,nb_epoch = 5)
with cpu:
Using Theano backend.
____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
zeropadding2d_1 (ZeroPadding2D)  (None, 1, 12, 16)     0           zeropadding2d_input_1[0][0]      
____________________________________________________________________________________________________
locallyconnected2d_1 (LocallyConn(None, 2, 10, 14)     2800        zeropadding2d_1[0][0]            
____________________________________________________________________________________________________
flatten_1 (Flatten)              (None, 280)           0           locallyconnected2d_1[0][0]       
____________________________________________________________________________________________________
dense_1 (Dense)                  (None, 1)             281         flatten_1[0][0]                  
====================================================================================================
Total params: 3081
____________________________________________________________________________________________________
Epoch 1/5
10/10 [==============================] - 0s - loss: 0.6649 - acc: 0.0000e+00     
Epoch 2/5
10/10 [==============================] - 0s - loss: 0.6631 - acc: 0.0000e+00     
Epoch 3/5
10/10 [==============================] - 0s - loss: 0.6613 - acc: 0.0000e+00     
Epoch 4/5
10/10 [==============================] - 0s - loss: 0.6598 - acc: 0.0000e+00     
Epoch 5/5
10/10 [==============================] - 0s - loss: 0.6582 - acc: 0.0000e+00  
with gpu:
Traceback (most recent call last):

  File "<ipython-input-3-da4ca203c2ba>", line 1, in <module>
    runfile('*/test_issue.py', wdir='*')

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\spyderlib\widgets\externalshell\sitecustomize.py", line 714, in runfile
    execfile(filename, namespace)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\spyderlib\widgets\externalshell\sitecustomize.py", line 89, in execfile
    exec(compile(f.read(), filename, 'exec'), namespace)

  File "E:/Simon/Documents/Projets Data Science/Ultrasound Nerve Segmentation- Kaggle/test_issue.py", line 25, in <module>
    model.fit(random.rand(10,1,10,14),random.rand(10,1), batch_size = 1,nb_epoch = 5)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\keras\models.py", line 413, in fit
    sample_weight=sample_weight)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\keras\engine\training.py", line 1081, in fit
    self._make_train_function()

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\keras\engine\training.py", line 705, in _make_train_function
    **self._function_kwargs)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\keras\backend\theano_backend.py", line 541, in function
    return Function(inputs, outputs, updates=updates, **kwargs)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\keras\backend\theano_backend.py", line 527, in __init__
    **kwargs)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\compile\function.py", line 322, in function
    output_keys=output_keys)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\compile\pfunc.py", line 480, in pfunc
    output_keys=output_keys)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\compile\function_module.py", line 1784, in orig_function
    defaults)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\compile\function_module.py", line 1648, in create
    input_storage=input_storage_lists, storage_map=storage_map)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\gof\link.py", line 699, in make_thunk
    storage_map=storage_map)[:3]

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\gof\vm.py", line 1042, in make_all
    no_recycling))

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\sandbox\cuda\__init__.py", line 256, in make_thunk
    compute_map, no_recycling)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\gof\op.py", line 975, in make_thunk
    no_recycling)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\gof\op.py", line 875, in make_c_thunk
    output_storage=node_output_storage)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\gof\cc.py", line 1189, in make_thunk
    keep_lock=keep_lock)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\gof\cc.py", line 1130, in __compile__
    keep_lock=keep_lock)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\gof\cc.py", line 1585, in cthunk_factory
    key=key, lnk=self, keep_lock=keep_lock)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\gof\cmodule.py", line 1145, in module_from_key
    module = lnk.compile_cmodule(location)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\gof\cc.py", line 1491, in compile_cmodule
    preargs=preargs)

  File "C:\Users\sicarbonnell\AppData\Local\Continuum\Anaconda3\envs\python34\lib\site-packages\theano\sandbox\cuda\nvcc_compiler.py", line 403, in compile_str
    'for cmd', ' '.join(cmd))

Exception: ('The following error happened while compiling the node', GpuJoin(TensorConstant{0}, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0, Rebroadcast{1}.0), '\n', 'nvcc return status', 2, 'for cmd', 'nvcc -shared -O3 -arch=sm_50 -Xlinker /DEBUG -D HAVE_ROUND -m64 -Xcompiler -DCUDA_NDARRAY_CUH=m18715462c72ed6afcd7ca5d52813ce90,-DNPY_NO_DEPRECATED_API=NPY_1_7_API_VERSION,/Zi,/MD -IC:\\Users\\sicarbonnell\\AppData\\Local\\Theano\\compiledir_Windows-7-6.1.7601-SP1-Intel64_Family_6_Model_61_Stepping_4_GenuineIntel-3.4.4-64\\cuda_ndarray -IC:\\Users\\sicarbonnell\\AppData\\Local\\Continuum\\Anaconda3\\envs\\python34\\lib\\site-packages\\numpy\\core\\include -IC:\\Users\\sicarbonnell\\AppData\\Local\\Continuum\\Anaconda3\\envs\\python34\\include -IC:\\Users\\sicarbonnell\\AppData\\Local\\Continuum\\Anaconda3\\envs\\python34\\lib\\site-packages\\theano\\gof -IC:\\Users\\sicarbonnell\\AppData\\Local\\Continuum\\Anaconda3\\envs\\python34\\lib\\site-packages\\theano\\sandbox\\cuda -o C:\\Users\\sicarbonnell\\AppData\\Local\\Theano\\compiledir_Windows-7-6.1.7601-SP1-Intel64_Family_6_Model_61_Stepping_4_GenuineIntel-3.4.4-64\\tmpkc7vegoz\\mac87adaa1b92aafdf1d5bd49bc08bc35.pyd mod.cu -LC:\\Users\\sicarbonnell\\AppData\\Local\\Theano\\compiledir_Windows-7-6.1.7601-SP1-Intel64_Family_6_Model_61_Stepping_4_GenuineIntel-3.4.4-64\\cuda_ndarray -LC:\\Users\\sicarbonnell\\AppData\\Local\\Continuum\\Anaconda3\\envs\\python34\\libs -LC:\\Users\\sicarbonnell\\AppData\\Local\\Continuum\\Anaconda3\\envs\\python34 -lcudart -lcublas -lcuda_ndarray -lpython34', '[GpuJoin(TensorConstant{0}, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>, <CudaNdarrayType(float32, (True, False, False))>)]')
Looking forward for your help.
Simon