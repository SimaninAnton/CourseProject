mongoose54 commented on 19 Feb 2017
I am running the latest versions of Keras (1.2.2) and Theano (0.9.0b1). I am trying to add class_weight into my .fit function:
model.fit(imgs_train, imgs_mask_train, batch_size=32, nb_epoch=20, verbose=1, shuffle=True,
class_weight = {0: 28503517, 1: 347683},
callbacks=[model_checkpoint])
It is a binary classification (i.e image segmenation) with 0 and 1 the target classes. I am getting the following error although the target labels are 0 and 1. I double checked with hist, bins = np.histogram(imgs_mask_train.ravel(), density=False) where hist = [28503517 0 0 0 0 0 0 0 0 347683] and bins = [ 0. 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1. ]
ValueError Traceback (most recent call last)
in ()
175
176 if name == 'main':
--> 177 train_and_predict()
in train_and_predict()
150 model.fit(imgs_train, imgs_mask_train, batch_size=32, nb_epoch=20, verbose=1, shuffle=True,
151 class_weight = {0: 28503517, 1: 347683},
--> 152 callbacks=[model_checkpoint])
153
154 print('-'*30)
/usr/local/lib/python2.7/dist-packages/keras/engine/training.pyc in fit(self, x, y, batch_size, nb_epoch, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch)
1114 class_weight=class_weight,
1115 check_batch_axis=False,
-> 1116 batch_size=batch_size)
1117 # prepare validation data
1118 if validation_data:
/usr/local/lib/python2.7/dist-packages/keras/engine/training.pyc in _standardize_user_data(self, x, y, sample_weight, class_weight, check_batch_axis, batch_size)
1038 sample_weights = [standardize_weights(ref, sw, cw, mode)
1039 for (ref, sw, cw, mode)
-> 1040 in zip(y, sample_weights, class_weights, self.sample_weight_modes)]
1041 check_array_lengths(x, y, sample_weights)
1042 check_loss_and_target_compatibility(y, self.loss_functions, self.internal_output_shapes)
/usr/local/lib/python2.7/dist-packages/keras/engine/training.pyc in standardize_weights(y, sample_weight, class_weight, sample_weight_mode)
380 elif isinstance(class_weight, dict):
381 if len(y.shape) > 2:
--> 382 raise ValueError('class_weight not supported for '
383 '3+ dimensional targets.')
384 if y.shape[1] > 1:
ValueError: class_weight not supported for 3+ dimensional targets.