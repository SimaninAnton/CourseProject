canibal1 commented on 25 Jul 2019
`import numpy as np
from numpy import mean
from numpy import std
from numpy import dstack
from pandas import read_csv
from matplotlib import pyplot
from keras.models import Sequential
from keras.layers import Dense
from keras.layers import Flatten
from keras.layers import Dropout
from keras.layers.convolutional import Conv1D
from keras.layers.convolutional import MaxPooling1D
from keras.utils import to_categorical
from sklearn.model_selection import train_test_split
from numpy import zeros, newaxis
seed = 737454
np.random.seed(seed)
X = veriyeni1.values[:]
Y = veriyeni2.values[:]
#X = np.expand_dims(X, axis=2)
#Y = np.expand_dims(Y, axis=2)
(X_train, X_test, Y_train, Y_test) = train_test_split(X, Y, test_size=0.33, random_state=seed)
print(X_train.shape)`
(33500, 2)
n_timesteps, n_features, n_outputs = X_train.shape[0], X_train.shape[1], Y_train.shape[0]
verbose, epochs, batch_size = 0, 10, 32
model = Sequential()
model.add(Conv1D(filters=64, kernel_size=3, activation='relu', input_shape=X_train.shape))
model.add(Conv1D(filters=64, kernel_size=3, activation='relu'))
model.add(Dropout(0.5))
model.add(MaxPooling1D(pool_size=2))
model.add(Flatten())
model.add(Dense(100, activation='relu'))
model.add(Dense(n_outputs, activation='softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(X, Y, epochs=epochs, batch_size=batch_size, verbose=verbose)
ValueError: Error when checking input: expected conv1d_37_input to have 3 dimensions, but got array with shape (50000, 2)
X = veriyeni1.values[:]
Y = veriyeni2.values[:]
X = np.expand_dims(X, axis=2)
Y = np.expand_dims(Y, axis=2)
(X_train, X_test, Y_train, Y_test) = train_test_split(X, Y, test_size=0.33, random_state=seed)
print(X_train.shape)
(33500, 2, 1)
......
Input 0 is incompatible with layer conv1d_39: expected ndim=3, found ndim=4