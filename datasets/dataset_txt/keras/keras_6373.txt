Contributor
MoyanZitto commented on 29 Nov 2015
In keras documents http://keras.io/layers/convolutional/
the Convolution2D is explained in such way:
keras.layers.convolutional.Convolution2D(nb_filter, nb_row, nb_col, 
        init='glorot_uniform', activation='linear', weights=None, 
        border_mode='valid', subsample=(1, 1),
        W_regularizer=None, b_regularizer=None, W_constraint=None)
however, in the source code, the init in Convolution2D shows that:
    def __init__(self, nb_filter, stack_size, nb_row, nb_col,
                 init='glorot_uniform', activation='linear', weights=None,
                 border_mode='valid', subsample=(1, 1),
                 W_regularizer=None, b_regularizer=None, activity_regularizer=None,
                 W_constraint=None, b_constraint=None):
I noticed that the second parameter stack_size is a required parameter, if we use Convolution2D, it may cause some problems.
By the way, what the parameter stack_size mean? It seems that it never been used in the code
And, how can I pass bias to Convolutional2D ? The bias in convolutional2D is initialized by
self.b = shared_zeros((nb_filter,))
however it is not always what we want, for example I have a set of network parameters(weights and bias) stored in a .mat file, I want to build a network and use the parameters in the file to initialize it. I think we could just add another default parameter 'bias' in Convolution2D, if it is 'None', we use the default method to initialize it, else we pass the bias to it.