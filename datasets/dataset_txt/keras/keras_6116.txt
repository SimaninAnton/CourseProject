sunshineatnoon commented on 15 Jan 2016
I found that keras implements max pool layer by setting ignore_border to True when using theano backend like this:
def pool2d(x, pool_size, strides=(1, 1), border_mode='valid',dim_ordering='th', pool_mode='max'):
if border_mode == 'same':
   # TODO: add implementation for border_mode="same"
   raise Exception('border_mode="same" not supported with Theano.')
elif border_mode == 'valid':
   ignore_border = True
   padding = (0, 0)
else:
   raise Exception('Invalid border mode: ' + str(border_mode))
if dim_ordering not in {'th', 'tf'}:
   raise Exception('Unknown dim_ordering ' + str(dim_ordering))
   if dim_ordering == 'tf':
   x = x.dimshuffle((0, 3, 1, 2))
   if pool_mode == 'max':
   pool_out = downsample.max_pool_2d(x, ds=pool_size, st=strides,
                                    ignore_border=ignore_border,
                                    padding=padding,
                                    mode='max')
But in my implementations, I want to set ignore_border=False, so I can get a 44 output when a 77 feature map is maxpooled. Do I have to implement a new layer for this? If so, how can I do this?