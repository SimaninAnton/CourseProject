willcritchlow commented on 16 Sep 2016
Hi there,
I'm trying to train my network to rank order two inputs - each of which has a list of associated metrics (I am familiar with the linear algebra behind neural networks, but totally new to actually writing them - this is a project to learn / teach myself).
I currently have my training data set up as a list of pairs like: [x_i_metrics, x_j_metrics] where each x_i_metrics is itself a list of metrics [m1, m2, m3, ...] (with num_metrics elements).
Am I right that I want to put this through a Reshape layer at the input before going into a Dense layer of dim 2 * num_metrics?
model.add(Reshape((2*num_metrics,), input_shape=(2, num_metrics)))
model.add(Dense(output_dim=hidden, input_dim=2*num_metrics, activation=act))
There is no real structure within the list of metrics, so I don't think a convolutional layer is the right answer (if I've understood that correctly), and so it looks to me as though Reshape is correct, but I'm concerned that I'm losing "structure" information - that the network doesn't get the benefit of knowing to compare m1 for x_i with m1 for x_j - it'll just need to figure that out.
Thanks in advance - I hope this was clear. Thank you for all the work making such an accessible and powerful library.