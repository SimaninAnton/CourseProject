Contributor
PiranjaF commented on 18 Aug 2016
The Keras website has this simple example for using the Permute layer:
model = Sequential()
model.add(Permute((2, 1), input_shape=(10, 64)))
# now: model.output_shape == (None, 64, 10)
# note: `None` is the batch dimension
The issue is that I want to permute tensors of higher dimensionality (i.e. 3D tensors or 4D tensors). For instance, this is useful when connecting convolutional layers to recurrent layers in a specific type of architecture I'm investigating. However, if I try to permute a 3D tensor I get the following error:
ValueError: ('You cannot drop a non-broadcastable dimension.', ((False, False, False, False), (0, 2, 1)))
This issue can be reproduced with the following code:
model = Sequential()
model.add(Permute((2, 1), input_shape=(10, 64, 20)))
Does anyone have an idea how I can fix this issue?