Contributor
dieuwkehupkes commented on 3 Apr 2017 â€¢
edited
For a project I am working on I use a custom model class that only differs from the keras Model class in that it has some extra attributes which should be passed to the initialiser. Saving and then loading such a model is not support by the from_config function in keras, because even when the class is given as a custom object it will be called with the default arguments inputs, outputs and names.
Locally I solved this very simply by adding an extra variable to the get_config method that creates a config_kwargs dictionary that contains optional additional arguments:
config_kwargs = {k:v for k, v in config.iteritems() if k not in ['name', 'layers', 'output_layers', 'input_layers']}     
The are then given as an argument to the constructor that is returned:
return cls(inputs=input_tensors, outputs=output_tensors, name=name, **config_kwargs)
I think this could be useful not only for me but also for others who would like to use models with specific properties in an easy way. As far as I can see this solution does not really harm any other functionality. @fchollet, would you consider including it? Then I'll write a test and do a pull request.