KeironO commented on 25 Jan 2016
Good afternoon,
I have written the following code to vectorise video data into an ndarray.
import cv2, numpy as np, random, csv, os
from scipy import misc

def load_labels_and_file_name(tsv_file, directory):
    tsv_list = []
    with open(tsv_file, "rb") as tsv:
        reader = csv.reader(tsv, delimiter="\t", lineterminator="\n")
        for files in reader:
            if os.path.isfile(directory+"/"+files[0]) == True:
                tsv_list.append(files)
            else:
                print "Not found!"
        return tsv_list

def load_video_vector(directory, tsv_file, height, width):
    labels_file_name = load_labels_and_file_name(tsv_file, directory)
    number_of_videos = len(labels_file_name)
    n_channels = 1 #grayscale
    data = np.empty((number_of_videos, n_frames, n_channels, height, width), dtype="float32")
    data.flatten()
    labels = np.empty((number_of_videos, ), dtype=np.dtype("a16"))
    for i, details in enumerate(labels_file_name):
        video = cv2.VideoCapture(directory+details[0])
        for x in range(n_frames):
            return_value, frame = video.read()
            if return_value == False:
                break
            frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
            frame = misc.imresize(frame, (height, width))
            data[i:x:n_channels,:,:,:] = frame
            labels[i] = details[1]
    return data, labels

if __name__ == "__main__":
    n_frames, height, width = 50, 64, 64
    data, labels = load_video_vector("/home/keo7/.data/pouch_of_douglas/", "/home/keo7/.data/pouch_of_douglas/labels.tsv", height, width)
    np.random.seed(1337) # Reproducible results

    print data.shape
The shape of this is returned as (52, 50, 1, 64, 64), where 52 is the total number of videos, 50 being the number of frames of each video, 1 representing the number of channels and 64, 64 being the height and width respectively.
How can I feed this into a LRCN using the Keras deep learning framework?
Thank you,
Keiron.