leondz commented on 29 Sep 2016 â€¢
edited
Models saved using custom metrics throw an exception on loading:
def x(y_true, y_pred):
    return 0.0 * y_pred

""" define model here """

model.compile(...,
              metrics=[x])
model.save('somefile')
break_here = load_model('somefile')
This produces:
Using Theano backend.
Traceback (most recent call last):
  File "test-case.py", line 14, in <module>
    break_here = load_model('somefile')
  File "/usr/local/lib/python3.5/dist-packages/keras/models.py", line 155, in load_model
    sample_weight_mode=sample_weight_mode)
  File "/usr/local/lib/python3.5/dist-packages/keras/models.py", line 547, in compile
    **kwargs)
  File "/usr/local/lib/python3.5/dist-packages/keras/engine/training.py", line 662, in compile
    metric_fn = metrics_module.get(metric)
  File "/usr/local/lib/python3.5/dist-packages/keras/metrics.py", line 104, in get
    return get_from_module(identifier, globals(), 'metric')
  File "/usr/local/lib/python3.5/dist-packages/keras/utils/generic_utils.py", line 16, in get_from_module
    str(identifier))
Exception: Invalid metric: x
The only workaround seems to be to edit metrics.py directly, which is a little rough.
Here's a gist that reproduces the problem.
I'd like keras to ignore missing metrics when loading, instead of stopping. In an ideal world, it could even search the current scope for appropriate functions.
23