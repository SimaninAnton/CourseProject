PilCAki commented on 19 Aug 2015
from keras.models import Sequential
from keras.layers.core import Dense, Merge
from keras.layers.embeddings import Embedding
from keras.optimizers import SGD
DENSE_INPUT_SIZE=9
DENSE_OUTPUT_SIZE = 3
EMBEDDING_INPUT_SIZE = 22
EMBEDDING_OUTPUT_SIZE = 5
TOTAL_HIDDEN_OUTPUT_SIZE = DENSE_OUTPUT_SIZE + EMBEDDING_OUTPUT_SIZE
e = Sequential()
e.add(Embedding(EMBEDDING_INPUT_SIZE, EMBEDDING_OUTPUT_SIZE))
d = Sequential()
d.add(Dense(DENSE_INPUT_SIZE, DENSE_OUTPUT_SIZE))
model = Sequential()
model.add(Merge([e,d], mode='concat'))
model.add(Dense(TOTAL_HIDDEN_OUTPUT_SIZE, 1))
sgd = SGD()
model.compile(loss='mean_squared_error', optimizer=sgd)
TypeError Traceback (most recent call last)
in ()
23
24 sgd = SGD()
---> 25 model.compile(loss='mean_squared_error', optimizer=sgd)
/home/user/anaconda/lib/python2.7/site-packages/keras/models.pyc in compile(self, optimizer, loss, class_mode, theano_mode)
285 self.X_test = self.get_input(train=False)
286
--> 287 self.y_train = self.get_output(train=True)
288 self.y_test = self.get_output(train=False)
289
/home/user/anaconda/lib/python2.7/site-packages/keras/layers/containers.pyc in get_output(self, train)
49
50 def get_output(self, train=False):
---> 51 return self.layers[-1].get_output(train)
52
53 def set_input(self):
/home/user/anaconda/lib/python2.7/site-packages/keras/layers/core.pyc in get_output(self, train)
339
340 def get_output(self, train=False):
--> 341 X = self.get_input(train)
342 output = self.activation(T.dot(X, self.W) + self.b)
343 return output
/home/user/anaconda/lib/python2.7/site-packages/keras/layers/core.pyc in get_input(self, train)
29 def get_input(self, train=False):
30 if hasattr(self, 'previous'):
---> 31 return self.previous.get_output(train=train)
32 else:
33 return self.input
/home/user/anaconda/lib/python2.7/site-packages/keras/layers/core.pyc in get_output(self, train)
144 elif self.mode == 'concat':
145 inputs = [self.layers[i].get_output(train) for i in range(len(self.layers))]
--> 146 return T.concatenate(inputs, axis=-1)
147 else:
148 raise Exception('Unknown merge mode')
/home/user/anaconda/lib/python2.7/site-packages/Theano-0.7.0-py2.7.egg/theano/tensor/basic.pyc in concatenate(tensor_list, axis)
3860 "or a list, make sure you did not forget () or [] around "
3861 "arguments of concatenate.", tensor_list)
-> 3862 return join(axis, *tensor_list)
3863
3864
/home/user/anaconda/lib/python2.7/site-packages/Theano-0.7.0-py2.7.egg/theano/gof/op.pyc in call(self, _inputs, *_kwargs)
507 """
508 return_list = kwargs.pop('return_list', False)
--> 509 node = self.make_node(_inputs, *_kwargs)
510
511 if config.compute_test_value != 'off':
/home/user/anaconda/lib/python2.7/site-packages/Theano-0.7.0-py2.7.egg/theano/tensor/basic.pyc in make_node(self, *axis_and_tensors)
3510
3511 return self._make_node_internal(
-> 3512 axis, tensors, as_tensor_variable_args, output_maker)
3513
3514 def _make_node_internal(self, axis, tensors,
/home/user/anaconda/lib/python2.7/site-packages/Theano-0.7.0-py2.7.egg/theano/tensor/basic.pyc in _make_node_internal(self, axis, tensors, as_tensor_variable_args, output_maker)
3576 if not python_all([x.ndim == len(bcastable)
3577 for x in as_tensor_variable_args[1:]]):
-> 3578 raise TypeError("Join() can only join tensors with the same "
3579 "number of dimensions.")
3580
TypeError: Join() can only join tensors with the same number of dimensions.