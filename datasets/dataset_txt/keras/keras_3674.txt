psmaragdis commented on 15 Dec 2016
The following example works fine because the input is defined as being of length 4:
x = keras.layers.Input( shape=(4,1))
y = keras.layers.Cropping1D( (0,1))( x)
xn = arange( 4)[None,:,None]
print keras.backend.function([x],[y])( [xn])
If I change the first line to x = keras.layers.Input( shape=(None,1)), i.e. not specifying the input's length ahead of time, I get the error:
/usr/local/anaconda/lib/python2.7/site-packages/keras/layers/convolutional.pyc in call(self, x, mask)
   1679     def call(self, x, mask=None):
   1680         input_shape = self.input_spec[0].shape
-> 1681         return x[:, self.cropping[0]:input_shape[1]-self.cropping[1], :]

TypeError: unsupported operand type(s) for -: 'NoneType' and 'int'
It seems to me that line 1681 in convolutional.py above should instead be:
        return x[:, self.cropping[0]:-self.cropping[1], :]
That would allow one to use input sequences of arbitrary lengths, which can be very useful for many time-sequence models. I presume the 2D and 3D variants can be similarly updated.