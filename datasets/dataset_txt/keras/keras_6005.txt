Contributor
diogoff commented on 3 Feb 2016
I'm training a model using a custom activation (theano) function. When training is finished, I save the model with f.write(model.to_json()).
In another Python script, I load the model with model = model_from_json(f.read()) but I get the following exception:
Traceback (most recent call last):
model = model_from_json(f.read())
File "/usr/lib/python2.7/site-packages/keras/models.py", line 139, in model_from_json
return model_from_config(config, custom_objects=custom_objects)
File "/usr/lib/python2.7/site-packages/keras/models.py", line 150, in model_from_config
model = container_from_config(config, custom_objects=custom_objects)
File "/usr/lib/python2.7/site-packages/keras/utils/layer_utils.py", line 57, in container_from_config
layer = container_from_config(layer_dict['nodes'].get(node['name']))
File "/usr/lib/python2.7/site-packages/keras/utils/layer_utils.py", line 92, in container_from_config
base_layer = get_layer(name, layer_dict)
File "/usr/lib/python2.7/site-packages/keras/utils/layer_utils.py", line 158, in get_layer
instantiate=True, kwargs=kwargs)
File "/usr/lib/python2.7/site-packages/keras/utils/generic_utils.py", line 18, in get_from_module
return res(**kwargs)
File "/usr/lib/python2.7/site-packages/keras/layers/core.py", line 668, in init
self.activation = activations.get(activation)
File "/usr/lib/python2.7/site-packages/keras/activations.py", line 51, in get
return get_from_module(identifier, globals(), 'activation function')
File "/usr/lib/python2.7/site-packages/keras/utils/generic_utils.py", line 14, in get_from_module
str(identifier))
Exception: Invalid activation function: (my custom activation function)
I tried re-declaring the function in the second script but that didn't work either.
So how can I get the second script (the one that loads the model) to recognize the custom activation function that I used in the first script (the one that saved the model)? Thanks.