lkluo commented on 20 Apr 2017 â€¢
edited
I was trying to construct an encoder-decoder model with keras, following the addition_rnn example. Here is my code:
RNN = layers.LSTM

model = Sequential()
model.add(RNN(HIDDEN_LAYER_DIMENSION, input_shape = (INPUT_SEQUENCE_LENGTH, TOKEN_REPRESENTATION_SIZE)))

model.add(RepeatVector(OUTPUT_SEQUENCE_LENGTH))

for _ in range(LAYERS):
    model.add(RNN(HIDDEN_LAYER_DIMENSION, return_sequences=True))

model.add(TimeDistributed(layers.Dense(token_dict_size)))
model.add(layers.Activation('softmax'))

model.compile(loss='sparse_categorical_crossentropy',  # sparse_categorical_crossentropy
              optimizer='adam',
              metrics=['accuracy'])

model.summary()
The model summary is:
Layer (type) Output Shape Param #
lstm_1 (LSTM) (None, 512) 1574912
repeat_vector_1 (RepeatVecto (None, 16, 512) 0
lstm_2 (LSTM) (None, 16, 512) 2099200
time_distributed_1 (TimeDist (None, 16, 7881) 4042953
activation_1 (Activation) (None, 16, 7881) 0
The training data are shaped as: x_train 32 x 16 x 256, and y_train 32 x 16 x 7881.
I got the error as title shows: ValueError: Error when checking model target: expected activation_1 to have shape (None, 16, 1) but got array with shape (32, 16, 7881). From the model summary, it seems no chance to have the error encountered. Right?