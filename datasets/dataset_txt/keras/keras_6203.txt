XuesongYang commented on 26 Dec 2015
Issue: when save the model using json_str = model.to_json(), it raises the error:
*** TypeError: <type 'int'> is not JSON serializable
However, there is no error if using yaml_str = model.to_yaml(). Details of code is shown as follows:
ipdb> config
{'loss': {'output': 'categorical_crossentropy'}, 'theano_mode': None, 'name': 'Graph', 'output_config': [{'inputs': [], 'name': 'output', 'concat_axis': -1, 'merge_mode': 'concat', 'dot_axes': -1, 'input': 'softmax'}], 'input_config': [{'dtype': <type 'int'>, 'name': 'input', 'input_shape': (3082,)}], 'node_config': [{'inputs': [], 'name': 'embedding', 'concat_axis': -1, 'merge_mode': 'concat', 'dot_axes': -1, 'create_output': False, 'input': 'input'}, {'inputs': [], 'name': 'forward', 'concat_axis': -1, 'merge_mode': 'concat', 'dot_axes': -1, 'create_output': False, 'input': 'embedding'}, {'inputs': [], 'name': 'backward', 'concat_axis': -1, 'merge_mode': 'concat', 'dot_axes': -1, 'create_output': False, 'input': 'embedding'}, {'inputs': ['forward', 'backward'], 'name': 'dropout', 'concat_axis': -1, 'merge_mode': 'concat', 'dot_axes': -1, 'create_output': False, 'input': None}, {'inputs': [], 'name': 'sigmoid', 'concat_axis': -1, 'merge_mode': 'concat', 'dot_axes': -1, 'create_output': False, 'input': 'dropout'}, {'inputs': [], 'name': 'softmax', 'concat_axis': -1, 'merge_mode': 'concat', 'dot_axes': -1, 'create_output': False, 'input': 'sigmoid'}], 'output_order': ['output'], 'optimizer': {'beta_1': 0.8999999761581421, 'epsilon': 1e-08, 'beta_2': 0.9990000128746033, 'lr': 0.0010000000474974513, 'name': 'Adam'}, 'input_order': ['input'], 'nodes': {'sigmoid': {'b_constraint': None, 'name': 'Dense', 'activity_regularizer': None, 'W_constraint': None, 'init': 'glorot_uniform', 'activation': 'sigmoid', 'input_dim': None, 'b_regularizer': None, 'W_regularizer': None, 'output_dim': 256}, 'dropout': {'p': 0.5, 'name': 'Dropout'}, 'softmax': {'b_constraint': None, 'name': 'Dense', 'activity_regularizer': None, 'W_constraint': None, 'init': 'glorot_uniform', 'activation': 'softmax', 'input_dim': None, 'b_regularizer': None, 'W_regularizer': None, 'output_dim': 40}, 'embedding': {'name': 'Embedding', 'output_dim': 1024, 'W_constraint': None, 'input_shape': (65095,), 'init': 'uniform', 'input_dim': 65095, 'mask_zero': True, 'W_regularizer': None, 'activity_regularizer': None, 'input_length': 3082}, 'forward': {'name': 'LSTM', 'inner_activation': 'hard_sigmoid', 'go_backwards': False, 'output_dim': 256, 'stateful': False, 'init': 'glorot_uniform', 'inner_init': 'orthogonal', 'input_dim': 1024, 'return_sequences': False, 'activation': 'tanh', 'forget_bias_init': 'one', 'input_length': None}, 'backward': {'name': 'LSTM', 'inner_activation': 'hard_sigmoid', 'go_backwards': True, 'output_dim': 256, 'stateful': False, 'init': 'glorot_uniform', 'inner_init': 'orthogonal', 'input_dim': 1024, 'return_sequences': False, 'activation': 'tanh', 'forget_bias_init': 'one', 'input_length': None}}}
ipdb> config['input_config']
[{'dtype': <type 'int'>, 'name': 'input', 'input_shape': (3082,)}]
ipdb> z = json.dumps(config['input_config'])
*** TypeError: <type 'int'> is not JSON serializable
ipdb> z = yaml.dump(config['input_config'])
ipdb> z
"- dtype: !!python/name:__builtin__.int ''\n  input_shape: !!python/tuple [3082]\n  name: input\n"
The above shows the dump method for YAML and JSON, respectively. The value for the key dtype is abnormal for JSON parser, while it is correct for YAML. What is the correct format of the value for dtype if using JSON parser? is it "<type 'int'>" or not? Thanks.