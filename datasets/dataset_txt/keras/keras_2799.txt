Contributor
kumaranvpl commented on 30 Mar 2017 â€¢
edited
On line 556 of topology.py call method of Layer class is called with output = self.call(inputs, **kwargs).
But call method accepts only one parameter and returns the same without doing anything.
If I am right this call method is implemented either for future feature implementation or a leftover from past feature.
Also on line 556 passing keyword arguments as parameter is implemented by **kwargs. It is wrong. It should be passed by kwargs.
This bug can be fixed using different ways.
Removing **kwargs from call method call.
This way line 556 should look like output = self.call(inputs)
Accepting kwargs as keyword arguments in call method and returning inputs only in call method.
This way line 556 should look like output = self.call(inputs, **kwargs) and line 470 should look like def call(self, inputs, **kwargs):.
Accepting kwargs as keyword arguments in call method and returning both inputs and kwargs in call method.
This ways line 556 should look like output, returned_kwargs = self.call(inputs, **kwargs), line 470 should look like def call(self, inputs, **kwargs): and line 479 should look like return inputs, kwargs.
So, Please let me know which way should be implemented. I like to fix it myself and I want to create a pull request for the fix. This way I can contribute to keras a little.