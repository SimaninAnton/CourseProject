abdelrahmanmohamed commented on 8 Sep 2018 â€¢
edited
Can't save model weights code :
depthInput = Input(shape=(1,), dtype=tf.float32, name='depth')
depthOutput = Dense(32)(Activation('sigmoid')(depthInput))

imageInput = Input(shape=(100, 100, 1), dtype=tf.float32, name='image')
imageInputNormalized = BatchNormalization()(imageInput)

con1 = Conv2D(64, (2, 2), padding='same')(Activation('relu')(imageInputNormalized))
mp1 = MaxPooling2D(pool_size=2)(con1)

con2 = Conv2D(128, (2, 2), padding='same')(Activation('relu')(mp1))
l1 = Lambda(lambda x: x ** depthInput)(con2)
mp2 = MaxPooling2D(pool_size=2)(l1)
drop1 = Dropout(.2)(mp2)

con3 = Conv2D(256, (2, 2), padding='same')(Activation('relu')(drop1))
mp3 = MaxPooling2D(pool_size=2)(con2)
drop2 = Dropout(.2)(mp3)

con4 = Conv2D(512, (2, 2), padding='same')(Activation('relu')(drop2))
mp4 = MaxPooling2D(pool_size=2)(con2)
drop3 = Dropout(.2)(mp4)

con7 = Conv2D(4096, (2, 2), padding='same')(Activation('relu')(drop3))

con8 = Dense(3)(Activation('relu')(con7))
con9 = UpSampling2D(size=(4, 4), data_format=None)(Activation('softmax')(con8))
con10 = Conv2D(1, (1, 1), padding='same')(con9)

model = Model(inputs=[imageInput], outputs=con10)
model.summary()

model.compile(optimizer='rmsprop', loss='binary_crossentropy', metrics=['accuracy'])

epochs = 10

checkpointer = ModelCheckpoint(filepath='weights.best.from_scratch.hdf5',
                               verbose=0, save_best_only=True)

model.fit({'image': train_images_data, 'depth': depths_norm}, target_images_data,
          validation_data=(valid_images_data, valid_targets_data),
          epochs=epochs, batch_size=20, callbacks=[checkpointer], verbose=0)

model.load_weights('weights.best.from_scratch.hdf5')
Exception:
  File "C:\Users\abdo_\Anaconda3\lib\site-packages\IPython\core\interactiveshell.py", line 2961, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File "<ipython-input-2-2514be28c77e>", line 1, in <module>
    runfile('C:/Users/abdo_/PycharmProjects/TGSChallenge/T.py', wdir='C:/Users/abdo_/PycharmProjects/TGSChallenge')
  File "C:\Program Files\JetBrains\PyCharm 2018.2.2\helpers\pydev\_pydev_bundle\pydev_umd.py", line 197, in runfile
    pydev_imports.execfile(filename, global_vars, local_vars)  # execute the script
  File "C:\Program Files\JetBrains\PyCharm 2018.2.2\helpers\pydev\_pydev_imps\_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "C:/Users/abdo_/PycharmProjects/TGSChallenge/T.py", line 106, in <module>
    epochs=epochs, batch_size=20, callbacks=[checkpointer], verbose=0)
  File "C:\Users\abdo_\Anaconda3\lib\site-packages\keras\engine\training.py", line 1037, in fit
    validation_steps=validation_steps)
  File "C:\Users\abdo_\Anaconda3\lib\site-packages\keras\engine\training_arrays.py", line 217, in fit_loop
    callbacks.on_epoch_end(epoch, epoch_logs)
  File "C:\Users\abdo_\Anaconda3\lib\site-packages\keras\callbacks.py", line 77, in on_epoch_end
    callback.on_epoch_end(epoch, logs)
  File "C:\Users\abdo_\Anaconda3\lib\site-packages\keras\callbacks.py", line 444, in on_epoch_end
    self.model.save(filepath, overwrite=True)
  File "C:\Users\abdo_\Anaconda3\lib\site-packages\keras\engine\network.py", line 1085, in save
    save_model(self, filepath, overwrite, include_optimizer)
  File "C:\Users\abdo_\Anaconda3\lib\site-packages\keras\engine\saving.py", line 117, in save_model
    }, default=get_json_type).encode('utf8')
  File "C:\Users\abdo_\Anaconda3\lib\json\__init__.py", line 238, in dumps
    **kw).encode(obj)
  File "C:\Users\abdo_\Anaconda3\lib\json\encoder.py", line 199, in encode
    chunks = self.iterencode(o, _one_shot=True)
  File "C:\Users\abdo_\Anaconda3\lib\json\encoder.py", line 257, in iterencode
    return _iterencode(o, 0)
  File "C:\Users\abdo_\Anaconda3\lib\site-packages\keras\engine\saving.py", line 94, in get_json_type