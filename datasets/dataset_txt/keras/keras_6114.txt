ssiaw12345 commented on 15 Jan 2016
the get_updates method in class SGD,as follow:
def get_updates(self, params, constraints, loss):
grads = self.get_gradients(loss, params)
lr = self.lr * (1.0 / (1.0 + self.decay * self.iterations))
self.updates = [(self.iterations, self.iterations + 1.)]
    for p, g, c in zip(params, grads, constraints):
        m = K.variable(np.zeros(K.get_value(p).shape))  # momentum
        v = self.momentum * m - lr * g  # velocity
        self.updates.append((m, v))

        if self.nesterov:
            new_p = p + self.momentum * v - lr * g
        else:
            new_p = p + v

        self.updates.append((p, c(new_p)))  # apply constraints
    return self.updates
the momentum term seems that it always only has zero elements because of the numpy function that np.zeros(). How does the parameter self.momentum make sense?