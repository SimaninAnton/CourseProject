kingfengji commented on 14 Mar 2016
Hi . I'm using the examples for autoencoder at http://keras.io/layers/core/#autoencoder
to make a toy data set, I added x_train and x_tests with all ones line into
from keras.layers import *
from keras.layers.core import AutoEncoder, Dense
from keras import models
import numpy as np
X_train = np.ones([500,32])
X_test = np.ones([300,32])
encoder = containers.Sequential([Dense(16, input_dim=32), Dense(8)])
decoder = containers.Sequential([Dense(16, input_dim=8), Dense(32)])
autoencoder = AutoEncoder(encoder=encoder, decoder=decoder, output_reconstruction=True)
model = models.Sequential()
model.add(autoencoder)
model.compile(optimizer='sgd', loss='mse')
model.fit(X_train, X_train, nb_epoch=10)
autoencoder.output_reconstruction = False # the model has to be recompiled after modifying this property
model.compile(optimizer='sgd', loss='mse')
representations = model.predict(X_test)
model.fit(X_test, representations, nb_epoch=1) # in this case the loss will be 0, so it's useless
autoencoder.output_reconstruction = True
model.compile(optimizer='sgd', loss='mse')
model.fit(X_train, X_train, nb_epoch=10)
but it returned with error:
AttributeError: 'module' object has no attribute 'not_equal'
I appreciate could someone give me a explanation for this error. Thank you very much
The code is exactly the same on the website http://keras.io/layers/core/#autoencoder, with extra line # added:
X_train = np.ones([500,32])
X_test = np.ones([300,32])