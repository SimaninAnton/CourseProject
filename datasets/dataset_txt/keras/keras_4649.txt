Contributor
sallamander commented on 4 Aug 2016 â€¢
edited
Is there a good reason why we'd ever want to use binary_crossentropy as the loss with more than two classes? I can't think of any, but wanted to check before issuing a PR to throw an error or warning if this is the case.
Currently, there is no error/warning thrown. For example, if we change the loss to binary_crosstropy here (https://github.com/fchollet/keras/blob/master/examples/mnist_cnn.py#L66), everything runs just fine.