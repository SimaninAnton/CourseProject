LarsSoto commented on 30 Mar 2017
Hi,
I'm new to Keras. Trying to follow a very simple example, described in ch7 of Jason Brownlee's book "Deep Learning with Python". I get the following error below. Any help would be appreciated.
from keras.models import Sequential
from keras.layers import Dense, Activation
import numpy
# fix random seed for reproducibility
seed = 7
numpy.random.seed(seed)

# load pima indians dataset
dataset = numpy.loadtxt("/Users/chapter_07/pima-indians-diabetes.csv", delimiter=",")
# split into input (X) and output (Y) variables
X = dataset[:,0:8]
Y = dataset[:,8]

model = Sequential()
model.add(Dense(units=12, input_dim=8))
model.add(Activation('relu'))
model.add(Dense(units=8))
model.add(Activation('relu'))
model.add(Dense(units=1))
model.add(Activation('softmax'))

model.compile(loss='binary_crossentropy',
              optimizer='adam',
              metrics=['accuracy'])

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-5-1ef236e0069f> in <module>()
      1 model.compile(loss='binary_crossentropy',
      2               optimizer='adam',
----> 3               metrics=['accuracy'])

/anaconda/lib/python3.6/site-packages/keras/models.py in compile(self, optimizer, loss, metrics, sample_weight_mode, **kwargs)
    764                            metrics=metrics,
    765                            sample_weight_mode=sample_weight_mode,
--> 766                            **kwargs)
    767         self.optimizer = self.model.optimizer
    768         self.loss = self.model.loss

/anaconda/lib/python3.6/site-packages/keras/engine/training.py in compile(self, optimizer, loss, metrics, loss_weights, sample_weight_mode, **kwargs)
    897             loss_weight = loss_weights_list[i]
    898             output_loss = weighted_loss(y_true, y_pred,
--> 899                                         sample_weight, mask)
    900             if len(self.outputs) > 1:
    901                 self.metrics_tensors.append(output_loss)

/anaconda/lib/python3.6/site-packages/keras/engine/training.py in weighted(y_true, y_pred, weights, mask)
    428         """
    429         # score_array has ndim >= 2
--> 430         score_array = fn(y_true, y_pred)
    431         if mask is not None:
    432             # Cast the mask to floatX to avoid float64 upcasting in theano

/anaconda/lib/python3.6/site-packages/keras/losses.py in binary_crossentropy(y_true, y_pred)
     43 
     44 def binary_crossentropy(y_true, y_pred):
---> 45     return K.mean(K.binary_crossentropy(y_pred, y_true), axis=-1)
     46 
     47 

/anaconda/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py in binary_crossentropy(output, target, from_logits)
   2613 
   2614     return tf.nn.sigmoid_cross_entropy_with_logits(labels=target,
-> 2615                                                    logits=output)
   2616 
   2617 

TypeError: sigmoid_cross_entropy_with_logits() got an unexpected keyword argument 'labels'
Best,
Lars.