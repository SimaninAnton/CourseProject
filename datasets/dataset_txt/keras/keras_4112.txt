johannesu commented on 20 Oct 2016
Running the example in the documentation I get the following error
Traceback (most recent call last):

  File "/usr/local/lib/python3.5/dist-packages/spyder/utils/site/sitecustomize.py", line 866, in runfile
    execfile(filename, namespace)

  File "/usr/local/lib/python3.5/dist-packages/spyder/utils/site/sitecustomize.py", line 102, in execfile
    exec(compile(f.read(), filename, 'exec'), namespace)

  File "/home/johannes/Desktop/test.py", line 11, in <module>
    model.add(Deconvolution2D(3, 3, 3, output_shape=(None, 3, 14, 14), border_mode='valid', input_shape=(3, 12, 12)))

  File "/usr/local/lib/python3.5/dist-packages/keras/models.py", line 276, in add
    layer.create_input_layer(batch_input_shape, input_dtype)

  File "/usr/local/lib/python3.5/dist-packages/keras/engine/topology.py", line 370, in create_input_layer
    self(x)

  File "/usr/local/lib/python3.5/dist-packages/keras/engine/topology.py", line 514, in __call__
    self.add_inbound_node(inbound_layers, node_indices, tensor_indices)

  File "/usr/local/lib/python3.5/dist-packages/keras/engine/topology.py", line 572, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)

  File "/usr/local/lib/python3.5/dist-packages/keras/engine/topology.py", line 149, in create_node
    output_tensors = to_list(outbound_layer.call(input_tensors[0], mask=input_masks[0]))

  File "/usr/local/lib/python3.5/dist-packages/keras/layers/convolutional.py", line 638, in call
    filter_shape=self.W_shape)

  File "/usr/local/lib/python3.5/dist-packages/keras/backend/tensorflow_backend.py", line 1614, in deconv2d
    padding=padding)

  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/nn_ops.py", line 278, in conv2d_transpose
    output_shape_ = ops.convert_to_tensor(output_shape, name="output_shape")

  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py", line 657, in convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)

  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/constant_op.py", line 180, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)

  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/constant_op.py", line 163, in constant
    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape))

  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/tensor_util.py", line 422, in make_tensor_proto
    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])

  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/tensor_util.py", line 422, in <listcomp>
    tensor_proto.string_val.extend([compat.as_bytes(x) for x in proto_values])

  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/util/compat.py", line 64, in as_bytes
    (bytes_or_text,))

TypeError: Expected binary or unicode string, got (None, 3, 14, 14)
I have Python 3.5.2 with Keras 1.1.0 using Tensorflow 0.11.0rc0 as backend.