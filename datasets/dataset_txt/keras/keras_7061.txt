Collaborator
fchollet commented on 19 Apr 2015
One of our goals for the v1 release is to have full unit test coverage. Let's discuss tests!
We want tests to be:
modular (for maintainability); essentially each module should have an independent test file, with independent test functions for each feature of the module.
fast. It should take a few seconds to test the entirety of the library. Otherwise tests would probably not be run often enough, or would result in a significant waste of time, which is very contrary to the Keras philosophy.
What are some best practices that you know of for unit-testing a ML library? I am not a big fan of the way tests are handled in Torch7 (one large file concatenating all test functions).