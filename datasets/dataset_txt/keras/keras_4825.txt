CyrilleDS commented on 7 Jul 2016 â€¢
edited
Hi,
I am trying to replicate this article https://arxiv.org/pdf/1606.07659v1.pdf or https://github.com/fstrub95/torch.github.io/blob/master/blog/_posts/2016-02-21-cfn.md in Keras. It uses auto-encoder as recommender systems. The idea is to mask some of the known values (ratings) in order to teach your network to predict the unknown values while reconstructing correctly the other values.
You hence have three types of ratings: not masked known values ,masked known values (become 0) and unknown values (become 0).
Your loss function needs to include only the errors of the not masked known values and masked known values but if I understand correctly you also need to mask the output for the unknown values for the back propagation to not include them in the weight update (and it needs to be case wise). The picture below is from the article tutorial and explain the steps of forward and backpropagation.
Would you have any idea on how to implement this case wise masking of the output or any other way to deal with this problem?
Thanks a lot!