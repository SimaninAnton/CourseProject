phdowling commented on 30 Oct 2016 â€¢
edited
Hi!
I'm trying to use a Seq2Seq model as follows:
input = Input(shape=(maxlen,))
one_hot = Lambda(
    lambda x: K.one_hot(K.cast(x, dtype="int32"), nb_classes=num_inputs), output_shape=(maxlen, num_inputs)
)(input)
output_seq = Seq2Seq(
    input_shape=(maxlen, num_inputs),
    hidden_dim=hidden_dim,
    output_length=out_maxlen, output_dim=num_inputs,
    depth=2, peek=True
)(one_hot)
predicted = TimeDistributed(Activation("softmax"))(output_seq)
model = Model(input, predicted)
return model
Which compiles fine, but when I try to fit the model using my (num_samples, maxlen) shaped matrix, Theano complains that input_2 was not provided - which, as it turns out, is the input layer of the Seq2Seq model. I was hoping this layer would be fed the output of my Lambda layer automatically, but apparently this does not work. Is what I am trying to do possible? I realize I could just copy and slightly alter the Seq2Seq code, but of course I'd prefer just using the library for more maintainable code.
Edit: more precise exception output:
theano.gof.fg.MissingInputError: ("An input of the graph, used to compute Reshape{2}(input_2, TensorConstant{[-1 53]}), was not provided and not given a value.Use the Theano flag exception_verbosity='high',for more information on this error.", input_2)