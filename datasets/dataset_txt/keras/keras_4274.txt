JACKHAHA363 commented on 30 Sep 2016
Here is the code. I'm building a VAE with independent latent variable (y,z)
21 x = Input(shape=(input_dim,))
22 enc_h_1 = Dense(500, activation='relu', input_dim=input_dim)(x)
23 enc_h_2 = Dense(200, activation='relu')(enc_h_1)
24 z_mean = Dense(z_dim)(enc_h_2)
25 z_log_var = Dense(z_dim)(enc_h_2)
26 y_probs = Dense(y_dim, activation='softmax')(enc_h_2)
27 enc = Model(input=x, output=[z_mean, z_log_var, y_probs])
28
29 # sampling using reparameterization
30 epsilon = K.random_normal(shape=(z_dim,), mean=0, std=1)
31 z = z_mean + K.exp(z_log_var / 2) * epsilon
32
33 # decoder creating layers to be reused
34 z_fc = Dense(200, activation='relu', input_dim=z_dim)
35 y_fc = Dense(200, activation='relu', input_dim=y_dim)
36 merge_layer = Merge([Sequential([z_fc]), Sequential([y_fc])], mode="concat", concat_axis=1)
37 h_fc = Dense(1000, activation='relu')
38 dec_fc = Dense(input_dim, activation='sigmoid')
39 dec = Sequential([merge_layer, h_fc, dec_fc])
40
41 z_h = z_fc(z)
42 y_h = y_fc(y_probs)
43 merged = K.concatenate([z_h, y_h], axis=1)
44 dec_h =h_fc(merged)
45 x_dec = dec_fc(dec_h)
46
47 # total model
48 vae = Model(input=x, output=x_dec)
The error occurs on line 48. It says Exception: Output tensors to a Model must be Keras tensors. But I check in Ipython that x_dec is a tf.Tensor type. And in line 27 all of outputs are also tf.Tensor and I don't have an exception. Can someone explain what's the difference between line 27 and 48 such that I have error in only one of them?