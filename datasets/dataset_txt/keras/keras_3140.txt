Contributor
achalshah20 commented on 24 Feb 2017 â€¢
edited
Why we are checking assert history.history['acc'][-1] >= target in this below code.
in tests/keras/optimizers_test.py
def _test_optimizer(optimizer, target=0.75):
x_train, y_train = get_test_data()
model = get_model(x_train.shape[1], 10, y_train.shape[1])
model.compile(loss='categorical_crossentropy',
optimizer=optimizer,
metrics=['accuracy'])
history = model.fit(x_train, y_train, epochs=5, batch_size=16, verbose=0)
assert history.history['acc'][-1] >= target
config = optimizers.serialize(optimizer)
optim = optimizers.deserialize(config)
new_config = optimizers.serialize(optim)
new_config['class_name'] = new_config['class_name'].lower()
assert config == new_config
With latest theano, this check always fails and this check doesn't make sense to me. Because in the first iteration it may not go above 0.75. But if I change epoch to 3, all test cases are passed (more than ~0.90).
Can someone explain the motivation behind this check?