adelsalehali1982 commented on 18 Oct 2016
Hi all,
I run the of the C3D Model for Keras
https://gist.github.com/albertomontesg/d8b21a179c1e6cca0480ebdf292c34d2
on keras 1.0.3 it goes without any problems but when run it on keras 1.1.0
it show :
' Exception: The shape of the input to "Flatten" is not fully defined (got (0, . ... ). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.
what is the problem?
here is my code
`
from keras.layers.convolutional import (Convolution3D, MaxPooling3D,
ZeroPadding3D)
from keras.layers.core import Dense, Dropout, Flatten
from keras.models import Sequential
from kerasmodelzoo.utils.data import download_file, load_np_data
from keras.optimizers import SGD
def get_model(summary=False):
""" Return the Keras model of the network
"""
model = Sequential()
1st layer group
model.add(Convolution3D(64, 3, 3, 3, activation='relu',
border_mode='same', name='conv1',
subsample=(1, 1, 1),
input_shape=(3, 16, 112, 112)))
print model.output_shape
model.add(MaxPooling3D(pool_size=(1, 2, 2), strides=(1, 2, 2),
border_mode='valid', name='pool1'))
print model.output_shape
2nd layer group
model.add(Convolution3D(128, 3, 3, 3, activation='relu',
border_mode='same', name='conv2',
subsample=(1, 1, 1)))
print model.output_shape
model.add(MaxPooling3D(pool_size=(2, 2, 2), strides=(2, 2, 2),
border_mode='valid', name='pool2'))
print model.output_shape
3rd layer group
model.add(Convolution3D(256, 3, 3, 3, activation='relu',
border_mode='same', name='conv3a',
subsample=(1, 1, 1)))
print model.output_shape
model.add(Convolution3D(256, 3, 3, 3, activation='relu',
border_mode='same', name='conv3b',
subsample=(1, 1, 1)))
print model.output_shape
model.add(MaxPooling3D(pool_size=(2, 2, 2), strides=(2, 2, 2),
border_mode='valid', name='pool3'))
print model.output_shape
4th layer group
model.add(Convolution3D(512, 3, 3, 3, activation='relu',
border_mode='same', name='conv4a',
subsample=(1, 1, 1)))
print model.output_shape
model.add(Convolution3D(512, 3, 3, 3, activation='relu',
border_mode='same', name='conv4b',
subsample=(1, 1, 1)))
model.add(MaxPooling3D(pool_size=(2, 2, 2), strides=(2, 2, 2),
border_mode='valid', name='pool4'))
print model.output_shape
5th layer group
model.add(Convolution3D(512, 3, 3, 3, activation='relu',
border_mode='same', name='conv5a',
subsample=(1, 1, 1)))
print model.output_shape
model.add(Convolution3D(512, 3, 3, 3, activation='relu',
border_mode='same', name='conv5b',
subsample=(1, 1, 1)))
print model.output_shape
model.add(ZeroPadding3D(padding=(0, 1, 1)))
print model.output_shape
model.add(MaxPooling3D(pool_size=(2, 2, 2), strides=(2, 2, 2),
border_mode='valid', name='pool5'))
print model.output_shape
model.add(Flatten())
FC layers group
model.add(Dense(4096, activation='relu', name='fc6'))
model.add(Dropout(.5))
model.add(Dense(4096, activation='relu', name='fc7'))
model.add(Dropout(.5))
model.add(Dense(487, activation='softmax', name='fc8'))
if summary:
print(model.summary())
return model
model = get_model(summary=True)
sgd = SGD(lr=0.1, decay=1e-6, momentum=0.9, nesterov=True)
print 'Compile Model'
model.compile(optimizer=sgd, loss='categorical_crossentropy')
import h5py
model.save_weights('sports1M_weights.h5', overwrite=True)
json_string = model.to_json()
with open('sports1M_model.json', 'w') as f:
f.write(json_string)
mean = load_np_data('c3d_mean.npy')
model =model(weights=True)
sgd = SGD(lr=0.1, decay=1e-6, momentum=0.9, nesterov=True)
print 'Compile Model'
model.compile(optimizer=sgd, loss='categorical_crossentropy')
`