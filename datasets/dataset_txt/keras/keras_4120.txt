Contributor
lgautier commented on 20 Oct 2016
When adding a first layer to Sequential model, it fails with an error if the layer was created with input_shape rather than input_dim.
from keras.models import Sequential
from keras.layers import Dense

# working
model = Sequential()
dl = Dense(32, input_dim=10)
model.add(dl)

# not working
model = Sequential()
dl = Dense(32, input_shape=(None, 10))
model.add(dl)
---------------------------------------------------------------------------                                                    
Exception                                 Traceback (most recent call last)                                                    
<ipython-input-1-2810ab20c54f> in <module>()                                                                                   
     10 model = Sequential()                                                                                                   
     11 dl = Dense(32, input_shape=(None, 10))                                                                                 
---> 12 model.add(dl)                                                                                                          

/home/jupyteruser/py35_env/lib/python3.5/site-packages/keras/models.py in add(self, layer)                                     
    274                 else:                                                                                                  
    275                     input_dtype = None                                                                                 
--> 276                 layer.create_input_layer(batch_input_shape, input_dtype)                                               
    277                                                                                                                        
    278             if len(layer.inbound_nodes) != 1:                                                                          

/home/jupyteruser/py35_env/lib/python3.5/site-packages/keras/engine/topology.py in create_input_layer(self, batch_input_shape, 
input_dtype, name)                                                                                                             
    368         # and create the node connecting the current layer                                                             
    369         # to the input layer we just created.                                                                          
--> 370         self(x)                                                                                                        
    371                                                                                                                        
    372     def assert_input_compatibility(self, input):                                                                       

/home/jupyteruser/py35_env/lib/python3.5/site-packages/keras/engine/topology.py in __call__(self, x, mask)                     
    468             # raise exceptions in case the input is not compatible                                                     
    469             # with the input_spec specified in the layer constructor                                                   
--> 470             self.assert_input_compatibility(x)                                                                         
    471                                                                                                                        
    472             # collect input shapes to build layer                                                                      

/home/jupyteruser/py35_env/lib/python3.5/site-packages/keras/engine/topology.py in assert_input_compatibility(self, input)     
    409                                         self.name + ': expected ndim=' +                                               
    410                                         str(spec.ndim) + ', found ndim=' +                                             
--> 411                                         str(K.ndim(x)))                                                                
    412             if spec.dtype is not None:                                                                                 
    413                 if K.dtype(x) != spec.dtype:                                                                           

Exception: Input 0 is incompatible with layer dense_2: expected ndim=2, found ndim=3  
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).