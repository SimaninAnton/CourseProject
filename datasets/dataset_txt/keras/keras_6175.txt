ghost commented on 3 Jan 2016
I get an assertion error when I try to do this:
from keras.models import Sequential
from keras.layers.core import Dense, Dropout, Activation, Flatten
from keras.layers.convolutional import Convolution2D, MaxPooling2D
from keras.optimizers import SGD

model = Sequential()
model.add(Convolution2D(32, 3, 3, border_mode='valid', input_shape=(1, 100, 100)))
model.add(Activation('relu'))
model.compile(loss='categorical_crossentropy', optimizer=sgd)

model2 = Sequential()
model2.add(Convolution2D(32, 3, 3, border_mode='valid', input_shape=(1, 100, 100)))
model2.add(Activation('relu'))

model3 = Sequential()
model3.add(model)
model3.add(model2)
model3.compile(loss='categorical_crossentropy', optimizer=sgd)
The error:
    126     if image_shape and filter_shape:
    127         try:
--> 128             assert image_shape[1] == filter_shape[1]
    129         except Exception:
    130             print('image ', image_shape, ' filters ', filter_shape)

AssertionError: 
image  [None, 32, 98, 98]  filters  [32, 1, 3, 3]
However, I get no error when I use a single sequential container:
from keras.models import Sequential
from keras.layers.core import Dense, Dropout, Activation, Flatten
from keras.layers.convolutional import Convolution2D, MaxPooling2D
from keras.optimizers import SGD

model = Sequential()
model.add(Convolution2D(32, 3, 3, border_mode='valid', input_shape=(1, 100, 100)))
model.add(Activation('relu'))
model.compile(loss='categorical_crossentropy', optimizer=sgd)

model.add(Convolution2D(32, 3, 3, border_mode='valid', input_shape=(1, 100, 100)))
model.add(Activation('relu'))

model.compile(loss='categorical_crossentropy', optimizer=sgd)
And I don't get any error either if the second sequential container is not a convolutional layer:
from keras.models import Sequential
from keras.layers.core import Dense, Dropout, Activation, Flatten
from keras.layers.convolutional import Convolution2D, MaxPooling2D
from keras.optimizers import SGD

model = Sequential()
model.add(Convolution2D(32, 3, 3, border_mode='valid', input_shape=(1, 100, 100)))
model.add(Activation('relu'))
model.compile(loss='categorical_crossentropy', optimizer=sgd)

model2 = Sequential()
model2.add(Dense(10, input_dim=1, activation='relu'))
model2.add(Activation('relu'))

model3 = Sequential()
model3.add(model)
model3.add(Flatten())
model3.add(model2)
model3.compile(loss='categorical_crossentropy', optimizer=sgd)
I need to use two separate sequential models because I want to be able to train them independently. Any hints to solve this would be very much appreciated.
Thanks!