Contributor
pranv commented on 6 Jul 2015
graph = Graph()
graph.add_input(name='input1', ndim=2)
graph.add_input(name='input2', ndim=2)

# right branch
graph.add_node(Dense(32, 16), name='dense1', input='input1')
graph.add_node(Activation('relu'), name='activation1', input='input1')

# left branch
graph.add_node(Dense(32, 4), name='dense2', input='input2')
graph.add_node(Activation('relu'), name='activation2', input='input2')

# Merge required here
graph.add_node(Dense(8, 4), name='dense3', inputs=['activation1', 'activation2'])
graph.add_node(Activation('relu'), name='activation3', input='input2')

graph.add_output(name='output', input='activation3')
The above code results in an error as Merge tries to merge 'activation1' and activation2', both of which are not weight layers, hence they do not have regularizers.
  File "<stdin>", line 1, in <module>
  File "keras/layers/containers.py", line 168, in add_node
    merge = Merge(to_merge, mode=merge_mode)
  File "keras/layers/core.py", line 128, in __init__
    self.regularizers += m.regularizers
AttributeError: 'Activation' object has no attribute 'regularizers'
The Merge layer was originally intended for merging models, hence the issue. I believe that this can be fixed if Merge can be reimplemented as a layer that takes input from multiple layers as input, or if the Merge layer in not used entirely