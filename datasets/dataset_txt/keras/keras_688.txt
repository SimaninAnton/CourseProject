elanChezhianMuthuvel commented on 22 Oct 2018 â€¢
edited
this is my code
import keras
from keras import backend
from keras.models import Sequential
from keras.layers import Dense, Dropout, Activation
#from keras.layers.core import Dense
from keras.optimizers import SGD,Adam
from keras import backend as K
from keras.metrics import categorical_crossentropy
import numpy as np
import keras.losses

from pandas import DataFrame, read_csv
import pandas as pd
import time

model = Sequential([
    Dense(10, input_shape=(1,),activation = 'relu'),
    Dense(32, activation = 'relu'),
    Dense(1, activation = 'softmax'),
])

model.compile(Adam(lr=.0001), loss="sparse_categorical_crossentropy", metrics=['accuracy'])
country = pd.read_csv('countries.csv')
china = country[country.country == 'China']
train1 = np.array(china.year)
train2 = np.array(china.population)
time.sleep(1)
model.fit(train1, train2, batch_size=10,epochs=20)
this is the error it gave:
Epoch 1/20
---------------------------------------------------------------------------
InvalidArgumentError                      Traceback (most recent call last)
<ipython-input-61-4c713a25a6d7> in <module>()
      1 time.sleep(1)
----> 2 model.fit(train1, train2, batch_size=10,epochs=20)

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/keras/engine/training.py in fit(self, x, y, batch_size, epochs, verbose, callbacks, validation_split, validation_data, shuffle, class_weight, sample_weight, initial_epoch, steps_per_epoch, validation_steps, **kwargs)
   1037                                         initial_epoch=initial_epoch,
   1038                                         steps_per_epoch=steps_per_epoch,
-> 1039                                         validation_steps=validation_steps)
   1040 
   1041     def evaluate(self, x=None, y=None,

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/keras/engine/training_arrays.py in fit_loop(model, f, ins, out_labels, batch_size, epochs, verbose, callbacks, val_f, val_ins, shuffle, callback_metrics, initial_epoch, steps_per_epoch, validation_steps)
    197                     ins_batch[i] = ins_batch[i].toarray()
    198 
--> 199                 outs = f(ins_batch)
    200                 outs = to_list(outs)
    201                 for l, o in zip(out_labels, outs):

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py in __call__(self, inputs)
   2713                 return self._legacy_call(inputs)
   2714 
-> 2715             return self._call(inputs)
   2716         else:
   2717             if py_any(is_tensor(x) for x in inputs):

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py in _call(self, inputs)
   2673             fetched = self._callable_fn(*array_vals, run_metadata=self.run_metadata)
   2674         else:
-> 2675             fetched = self._callable_fn(*array_vals)
   2676         return fetched[:len(self.outputs)]
   2677 

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/client/session.py in __call__(self, *args, **kwargs)
   1397           ret = tf_session.TF_SessionRunCallable(
   1398               self._session._session, self._handle, args, status,
-> 1399               run_metadata_ptr)
   1400         if run_metadata:
   1401           proto_data = tf_session.TF_GetBuffer(run_metadata_ptr)

/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py in __exit__(self, type_arg, value_arg, traceback_arg)
    524             None, None,
    525             compat.as_text(c_api.TF_Message(self.status.status)),
--> 526             c_api.TF_GetCode(self.status.status))
    527     # Delete the underlying status object from memory otherwise it stays alive
    528     # as there is a reference to status from this from the traceback due to

InvalidArgumentError: Received a label value of 1318683136 which is outside the valid range of [0, 1).  Label values: 1084034944 1000281024 1164969984 665769984 943454976 637408000 1230075008 754550016 1318683136 556263552
  [[{{node loss/dense_27_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits}} = SparseSoftmaxCrossEntropyWithLogits[T=DT_FLOAT, Tlabels=DT_INT64, _class=["loc:@train...s_grad/mul"], _device="/job:localhost/replica:0/task:0/device:CPU:0"](loss/dense_27_loss/Log, loss/dense_27_loss/Cast)]]