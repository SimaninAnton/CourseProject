coddinglxf commented on 21 Sep 2016
Hi, I try to reuse the output of standard Keras layers as input for my customer layer. However, it seems that Keras cannot infer the parameters, it there anyway to solve it?
Here is my code:
`
define the input_1
input_sentence = Input(shape=(sentence_maxlen,), dtype='int32')
input_embedding = Embedding(n_words, n_embed_dims)(input_sentence)
attention_output = SimpleRNN(10)(input_embedding)
define the input_2
input_answer = Input(shape=(sentence_maxlen,), dtype='int32')
input_answer_embedding = Embedding(n_words, n_embed_dims)(input_answer)
use the output of input_1 as input for this layer
attention_lstm = AttentionLSTM(
output_dim=5,
attention_vec=attention_output,
return_sequences=False,
)(input_answer_embedding)
output = Dense(
output_dim=1,
activation="softmax"
)(attention_lstm)
predict_green = Model(input=[input_sentence, input_answer], output=[output])
print "compile the model"
predict_green.compile(optimizer='sgd', loss='binary_crossentropy')
print "fit the model"
predict_green.fit([input_1, input_2], [output], nb_epoch=10, verbose=1)`
The AttentionLSTM layer is a customer layer, the code could work, and however, I notice that the Keras cannot infer the parameters of layers “input_embedding” and “attention_output”, if there any trick to solve this problem?