napsternxg commented on 23 Dec 2015
I am using Keras to do sequence to sequence prediction using the code mentioned below. However, the model building script hangs while adding the 2nd LSTM layer. The same happens when I replace the LSTM layers by either GRU or SimpleRNN layers.
$ cat TestingModel.py 

# coding: utf-8

# In[2]:

import logging
logger = logging.getLogger("Testing_Model")
logger.setLevel(logging.INFO)
ch = logging.StreamHandler()
ch.setLevel(logging.INFO)
formatter = logging.Formatter('%(name)s %(levelname)s %(asctime)s:%(message)s')
ch.setFormatter(formatter)
logger.addHandler(ch)
logger.info("Started Logger")


# In[3]:
import theano, keras
logger.info("Using Keras version %s" % keras.__version__)
logger.info("Using Theano version %s" % theano.__version__)
from keras.models import Sequential
from keras.layers.core import Dense, Dropout, Activation, TimeDistributedDense, Flatten, Merge
from keras.layers.embeddings import Embedding
from keras.layers.recurrent import LSTM
from keras.preprocessing.sequence import pad_sequences


import numpy as np
# In[6]:

maxlen = 10
vocab_size = 10
embedding_size = 5
hidden_layer_size = 10
boundary_size = 6


# In[ ]:
logger.info("Building Model")
model = Sequential()
logger.info("Init Model")
model.add(Embedding(vocab_size, embedding_size, input_length=maxlen))
logger.info("Added Embedding Layer")
model.add(LSTM(output_dim=hidden_layer_size, activation='sigmoid', inner_activation='hard_sigmoid', return_sequences=True))
logger.info("Added LSTM Layer")
model.add(Dropout(0.5))
logger.info("Added Dropout Layer")
model.add(LSTM(output_dim=boundary_size, activation='softmax', inner_activation='hard_sigmoid', return_sequences=True))
logger.info("Added LSTM Layer")

logger.info("Compiling Model")
model.compile(loss='categorical_crossentropy', optimizer='adam')



X = np.array([[0,0,0,1,2,1], [0,0,1,1,3,1]])
Y = np.zeroes((X.shape[0], X.shape[1], boundary_size))
for i in xrange(Y.shape[0]):
    for j in xrange(Y.shape[1]):
        Y[i,j, np.random.randint(Y.shape[2])] = 1

logger.info("Created Data. X.shape = %s, Y.shape = %s" % (X.shape, Y.shape))
The above code just hangs after outputting the following lines.
$ ipython
Python 2.7.6 (default, Jun 22 2015, 17:58:13) 
Type "copyright", "credits" or "license" for more information.

IPython 4.0.0 -- An enhanced Interactive Python.
?         -> Introduction and overview of IPython's features.
%quickref -> Quick reference.
help      -> Python's own help system.
object?   -> Details about 'object', use 'object??' for extra details.

In [1]: %run -i TestingModel.py
Testing_Model INFO 2015-12-23 12:23:06,839:Started Logger
Testing_Model INFO 2015-12-23 12:23:07,274:Using Keras version 0.2.0
Testing_Model INFO 2015-12-23 12:23:07,274:Using Theano version 0.7.0
Using Theano backend.
Testing INFO 2015-12-23 12:23:07,366:Started Logger
Testing_Model INFO 2015-12-23 12:23:07,390:Building Model
Testing_Model INFO 2015-12-23 12:23:07,390:Init Model
Testing_Model INFO 2015-12-23 12:23:07,392:Added Embedding Layer
Testing_Model INFO 2015-12-23 12:23:07,394:Added LSTM Layer
Testing_Model INFO 2015-12-23 12:23:07,394:Added Dropout Layer