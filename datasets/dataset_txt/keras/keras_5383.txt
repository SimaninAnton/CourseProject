HenryJia commented on 22 Apr 2016 â€¢
edited
Upsampling seems to fail when the image dimensions are not specified, even though upsampling should be scale invariant.
When the 2nd and 3rd dim of input_shape is set to None as shown below the error at the bottom occurs.
I think it's missing an if statement for when the input_shape is None like the convolutional layers
model = Sequential()
model.add(Convolution2D(16, 17, 17, border_mode='valid', activation='linear', input_shape=(1, None, None))) # 1376 x 496
model.add(ELU())
model.add(AveragePooling2D((2,2))) # 688 x 248
model.add(Convolution2D(8, 9, 9, border_mode='valid', activation='linear')) # 680 x 240
model.add(ELU())
model.add(AveragePooling2D((2,2))) # 340 x 120
model.add(Convolution2D(4, 5, 5, border_mode='valid', activation='linear')) # 336 x 116
model.add(ELU())
model.add(AveragePooling2D((2,2))) # 168 x 58

model.add(Convolution2D(1, 5, 5, border_mode='valid', activation='linear')) # 164 x 54
model.add(ELU())

model.add(ZeroPadding2D((4, 4)))
model.add(Convolution2D(4, 5, 5, border_mode='valid', activation='linear')) # 168 x 58
model.add(ELU())

model.add(UpSampling2D((2, 2))) # 336 x 116
model.add(ZeroPadding2D((4, 4)))
model.add(Convolution2D(8, 5, 5, border_mode='valid', activation='linear')) # 340 x 120
model.add(ELU())

model.add(UpSampling2D((2, 2))) # 680 x 240
model.add(ZeroPadding2D((4, 4)))
model.add(Convolution2D(16, 9, 9, border_mode='valid', activation='linear')) # 688 x 248
model.add(ELU())

model.add(UpSampling2D((2, 2))) # 1376 x 496
model.add(ZeroPadding2D((4, 4)))
model.add(Convolution2D(1, 17, 17, border_mode='valid', activation='sigmoid')) #1392 x 512
Traceback (most recent call last):
  File "conv_autosegment.py", line 211, in <module>
    model.add(UpSampling2D((2, 2))) # 336 x 116
  File "/home/henry/.local/lib/python2.7/site-packages/Keras-1.0.1-py2.7.egg/keras/models.py", line 139, in add
    output_tensor = layer(self.outputs[0])
  File "/home/henry/.local/lib/python2.7/site-packages/Keras-1.0.1-py2.7.egg/keras/engine/topology.py", line 485, in __call__
    self.add_inbound_node(inbound_layers, node_indices, tensor_indices)
  File "/home/henry/.local/lib/python2.7/site-packages/Keras-1.0.1-py2.7.egg/keras/engine/topology.py", line 543, in add_inbound_node
    Node.create_node(self, inbound_layers, node_indices, tensor_indices)
  File "/home/henry/.local/lib/python2.7/site-packages/Keras-1.0.1-py2.7.egg/keras/engine/topology.py", line 151, in create_node
    output_shapes = to_list(outbound_layer.get_output_shape_for(input_shapes[0]))
  File "/home/henry/.local/lib/python2.7/site-packages/Keras-1.0.1-py2.7.egg/keras/layers/convolutional.py", line 1010, in get_output_shape_for
    self.size[0] * input_shape[2],
TypeError: unsupported operand type(s) for *: 'int' and 'NoneType'