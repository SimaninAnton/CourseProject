mdkhan48 commented on 19 Apr 2018 â€¢
edited
I am using transfer learning with VGG16 based on https://github.com/fchollet/deep-learning-with-python-notebooks/blob/master/5.3-using-a-pretrained-convnet.ipynb
Here is the final 2 layers 'Training' code:
model = models.Sequential()
model.add(layers.Dense(256, activation='relu', input_dim=4 * 4 * 512))
model.add(layers.Dropout(0.5))
model.add(layers.Dense(3, activation='softmax'))

model.compile(optimizer=optimizers.RMSprop(lr=2e-5),
              loss='sparse_categorical_crossentropy',
              metrics=['acc']

model.save('5_3_VGG16.h5')
I used the following code to detect from an image 'Testing' code:
model = load_model('5_3_VGG16.h5')
img_path = '/home/sayem/Desktop/weed_video_detect/other.803.jpg'
img = image.load_img(img_path, target_size=(150,150))


x = image.img_to_array(img)
orig = x.copy()

x = np.expand_dims(x, axis=0)

result = model.predict(x)[0]
print (result)

if result[0] == 1:
    prediction = 'cat'
elif result[1] == 1:
    prediction = 'dog'
else:
    prediction = 'other'

print (prediction)
Got the following error:
File "/home/sayem/Desktop/weed_video_detect/testkeras.py", line 27, in
result = model.predict(x)[0]
File "/home/sayem/video_detect/lib/python3.5/site-packages/keras/models.py", line 1025, in predict
steps=steps)
File "/home/sayem/video_detect/lib/python3.5/site-packages/keras/engine/training.py", line 1817, in predict
check_batch_axis=False)
File "/home/sayem/video_detect/lib/python3.5/site-packages/keras/engine/training.py", line 113, in _standardize_input_data
'with shape ' + str(data_shape))
ValueError: Error when checking : expected dense_1_input to have 2 dimensions, but got array with shape (1, 150, 150, 3)
Help me solve it.