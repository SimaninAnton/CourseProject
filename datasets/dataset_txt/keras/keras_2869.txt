KiranBaktha commented on 24 Mar 2017 â€¢
edited
Hi guys,
I have executed an LSTM in my dataset for about 7 epochs.
   inputs = Input(shape = (40,) , dtype = 'int32')
    Embs = Embedding(19449, embedding_vecor_length, input_length=40, weights = [w1],mask_zero=True,trainable=False)
    Embsyo = Embs(inputs)
     lstm1 = LSTM(300,activation='tanh', recurrent_activation='sigmoid')(Embsyo)
     out = Dense(5, activation = 'softmax')(lstm1)
     model = Model(input = inputs, output = out)
     model.compile(loss='categorical_crossentropy', optimizer='rmsprop', metrics=['accuracy'])
However, each time I run the model, I get a different accuracy on my test dataset. Like one time I get 32% and the next time I get 26%. I keep the epochs fixed at 7 and even removed dropouts to avoid randomness. Is there any way I can get Keras to give me the same or atleast very similar accuracy percentage each time I run the code? Thanks in advance