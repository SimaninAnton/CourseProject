HristoBuyukliev commented on 17 Mar 2016
So, i'm trying to debug something, and created a network with 2 layers, each with one neuron. I want to print the weights before and after training and see the difference. However, Highway layers return a nan array. Softmax and Dense layers return OK results.
Here is the code:
sgd = SGD(lr=0.1)

model = Sequential()
for current_hidden in hidden_units:
    model.add(Highway(input_dim=data_dim, activation='relu'))
    print model.layers[-1].get_weights()

print 'compiling...'
model.compile(loss='categorical_crossentropy', optimizer='adadelta')
for epoch in range(nb_epoch):
    model.fit(X_train, y_train, batch_size=128, nb_epoch=1,
        show_accuracy=True, validation_data=(X_test, y_test), shuffle=True, verbose=0)

    predictions = model.predict_proba(X_test)
    print metrics.roc_auc_score(y_test, predictions)
    prediction_scores[epoch] += metrics.roc_auc_score(y_test, predictions)

print model.layers[-2].get_weights()
print model.layers[-1].get_weights()
And here is a sample output. Note that before training the weights seem ok, and after training the net is functioning pretty well.
[array([[ 0.58852339]], dtype=float32), array([ 0.], dtype=float32), array([[ 1.68141031]], dtype=float32), array([-2.], dtype=float32)]
[array([[-1.62892556]], dtype=float32), array([ 0.], dtype=float32), array([[ 1.28964162]], dtype=float32), array([-2.], dtype=float32)]
compiling...
2/2 [==============================] - 0s
1.0
[array([[ nan]], dtype=float32), array([ nan], dtype=float32), array([[ nan]], dtype=float32), array([ nan], dtype=float32)]
[array([[ nan]], dtype=float32), array([ nan], dtype=float32), array([[ nan]], dtype=float32), array([ nan], dtype=float32)]
1