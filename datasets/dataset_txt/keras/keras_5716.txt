josejimenezluna commented on 21 Mar 2016
So I have a binary classification problem with 3d arrays. So I set up a 3D CNN as follows:
def convnet(boxsize = 10):

    model = Sequential()

    model.add(Convolution3D(32, 3, 3, 3, border_mode='same',
                            input_shape=(1, boxsize, boxsize, boxsize)))
    model.add(Activation('relu'))
    model.add(Convolution3D(32, 3, 3, 3))
    model.add(Activation('relu'))
    model.add(MaxPooling3D(pool_size=(2, 2, 2)))
    model.add(Dropout(0.25))

    model.add(Convolution3D(64, 3, 3, 3, border_mode='same'))
    model.add(Activation('relu'))
    model.add(Convolution3D(64, 3, 3, 3))
    model.add(Activation('relu'))
    model.add(MaxPooling3D(pool_size=(2, 2, 2)))
    model.add(Dropout(0.25))

    model.add(Flatten())
    model.add(Dense(512))
    model.add(Activation('relu'))
    model.add(Dropout(0.5))
    model.add(Dense(1))
    model.add(Activation('sigmoid'))

    # let's train the model using SGD + momentum (how original).
    sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
    model.compile(loss = 'binary_crossentropy', optimizer = sgd, class_mode = 'binary')

    return model
And then I start training on my data (only 2 epochs for example):
net.fit(X_batch_train, y_batch_train, nb_epoch = 2, verbose = 1,
          validation_data = (X_batch_val, y_batch_val), show_accuracy = True,
          shuffle = False) 
Train on 3343 samples, validate on 590 samples
Epoch 1/2
3343/3343 [==============================] - 32s - loss: 0.5400 - acc: 0.8498 - val_loss: 0.5059 - val_acc: 0.8169
Epoch 2/2
3343/3343 [==============================] - 42s - loss: 0.4353 - acc: 0.8570 - val_loss: 0.5053 - val_acc: 0.8169
So far so good, reporting a decent accuracy. The problem comes when I do:
yhat = net.predict(X_batch_train)
np.sum(yhat.flatten() > 0.5) ## This reports 0
Meaning that the network is not reporting correctly accuracy during training? Any ideas?