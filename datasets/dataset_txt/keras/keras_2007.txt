Contributor
PavlosMelissinos commented on 3 Jul 2017 â€¢
edited
Lambda layer doesn't work as intended in the case of multi-output layers (output should be a list of tensors). In this case compute_output_shape should return a list of tuples, however keras converts the list into a tuple.
Standalone code sample:
import numpy as np
from keras.layers import Lambda
from keras import backend as K


def split(inputs):
    return [inputs, inputs]


def compute_split_output_shape(input_shape):
    return [input_shape, input_shape]


def compute_split_mask(inputs, mask=None):
    return 2 * [None]

np_arr = np.random.random((8, 64, 64, 3))
input_tensor = K.variable(value=np_arr)
s = Lambda(function=split,
           output_shape=compute_split_output_shape,
           mask=compute_split_mask)(input_tensor)
I'd argue that better documentation (inform the user that Lambda only works for a single output) and a better error message (raise an exception when any of the Lambda wrapped functions return a list) should suffice but a solution that would allow both options to coexist would be nice.
What do you think?