hicham-eyeem commented on 27 Jan 2017 â€¢
edited
I am a bit confused regarding the use of model.evaluate() which produces a different accuracy compared to what I get with TensorFlow :
#data_test is (?,28,28,1) and labels_test are categorical
scores = model.evaluate(data_test, labels_test, verbose=0)
print("Accuracy1 :  " + str(scores[1])) 
#########################
from keras import backend as K
from sklearn.metrics import *
ground_truth = np.argmax(labels_test,axis=1)
K.set_learning_phase(0) 
sess = K.get_session()
softmax_tensor = model.output
prediction = np.zeros(data_test.shape[0])
for index in range(data_test.shape[0]):
 image_data = data_test[index]
 image_data = image_data[None, ...]
 pred = sess.run(softmax_tensor, feed_dict={'data:0': image_data, 'keras_learning_phase:0':0})[0]
 prediction[index] = np.argmax(pred)
print("Accuracy2 : "+ str(accuracy_score(ground_truth, prediction)))
Results :
Accuracy1 : 0.9964
Accuracy2 : 0.9825