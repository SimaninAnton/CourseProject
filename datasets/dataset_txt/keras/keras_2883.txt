Contributor
fbrundu commented on 23 Mar 2017 â€¢
edited
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).
Dear all,
The problem arises at the line 220 in the sklearn wrapper.
Here is a minimal example that reproduces the error (I also attached sample data).
The sample data is composed by a matrix (X) of 50 observations and 50 features, and the corresponding target variable (y), composed by 50 observations. The data type of the matrix is floating point, while the target variable is an integer in [0, 2).
Thanks,
Francesco
from keras.models import Sequential
from keras.layers import BatchNormalization, Dense
from keras.wrappers.scikit_learn import KerasClassifier
import numpy as np
import pandas as pd
from sklearn.model_selection import GridSearchCV


def _fit(X, y):

  nn = KerasClassifier(build_fn=_arch, verbose=1, epochs=1)
  clf = GridSearchCV(
    nn,
    param_grid={
      'input_shape': [(X.shape[1],)],
      'dense_nodes': [np.linspace(X.shape[1], 2, nlayers, dtype=int)
        for nlayers in range(3, 4)]},
    scoring='f1_macro',
    n_jobs=1)
  clf.fit(X.values, y.values)

def _arch(input_shape, dense_nodes):

  arch = Sequential()
  arch.add(BatchNormalization(input_shape=input_shape))
  for nodes in dense_nodes[:-1]:
    arch.add(Dense(nodes, activation='relu'))
  arch.add(Dense(dense_nodes[-1], activation='sigmoid'))
  arch.compile(
    optimizer='sgd',
    loss='sparse_categorical_crossentropy',
    metrics=['accuracy'])

  return arch

X = pd.read_table('X_50_50.txt', sep='\t', index_col=0)
y = pd.read_table('y_50.txt', sep='\t', index_col=0)

_fit(X, y)
X_50_50.txt
y_50.txt