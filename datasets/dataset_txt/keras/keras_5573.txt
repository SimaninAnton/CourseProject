qzshadow commented on 6 Apr 2016
Suppose I have a multi-variable(multi-dimensional) time series data for classification, input_shape = (batch_size, time_steps, data_dim). some of the samples have different time steps, so I need to pad 0s to keep the time steps same to feed them into LSTMs.
I would like to mask these padding zeros so I also use a masking Layer, but I do not understand how to set mask_value for these multi-feature data( data_dim > 1), I try to refer to the source code but it seems theanoish... and these is also little explanation in the docs of how mask Layer works. I have no idea.
should I use
model.add(Masking(mask_value = np.zeros((1,data_dim)), input_shape=(max_timesteps,data_dim)))
or
model.add(Masking(mask_value = 0., input_shape=(max_timesteps,data_dim))?
if I misunderstand the meaning of Masking, please point it out.