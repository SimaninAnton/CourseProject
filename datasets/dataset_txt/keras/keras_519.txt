mha-py commented on 20 Dec 2018 â€¢
edited
Hello!
When i try the code
x = Input((28,28,20))
y = Conv2D(32, 1)(x)
x2 = Input(shape=x.shape[1:])
y2 = Conv2D(32, 1)(x2)
then x/y and x2/y2 should be exactly the same. Even the shape of both x and x2 is printed exactly as the same. But in the second Conv2D (last line) it says:
TypeError: float() argument must be a string or a number, not 'Dimension'.
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-27-0b935c716286> in <module>()
      3 y = Conv2D(32, 1)(x)
      4 x2 = Input(shape=x.shape[1:])
----> 5 y2 = Conv2D(32, 1)(x2)

d:\winpython-64bit-3.6.6.1\python-3.6.6.amd64\lib\site-packages\keras\engine\base_layer.py in __call__(self, inputs, **kwargs)
    429                                          'You can build it manually via: '
    430                                          '`layer.build(batch_input_shape)`')
--> 431                 self.build(unpack_singleton(input_shapes))
    432                 self.built = True
    433 

d:\winpython-64bit-3.6.6.1\python-3.6.6.amd64\lib\site-packages\keras\layers\convolutional.py in build(self, input_shape)
    136                                       name='kernel',
    137                                       regularizer=self.kernel_regularizer,
--> 138                                       constraint=self.kernel_constraint)
    139         if self.use_bias:
    140             self.bias = self.add_weight(shape=(self.filters,),

d:\winpython-64bit-3.6.6.1\python-3.6.6.amd64\lib\site-packages\keras\legacy\interfaces.py in wrapper(*args, **kwargs)
     89                 warnings.warn('Update your `' + object_name +
     90                               '` call to the Keras 2 API: ' + signature, stacklevel=2)
---> 91             return func(*args, **kwargs)
     92         wrapper._original_function = func
     93         return wrapper

d:\winpython-64bit-3.6.6.1\python-3.6.6.amd64\lib\site-packages\keras\engine\base_layer.py in add_weight(self, name, shape, dtype, initializer, regularizer, trainable, constraint)
    247         if dtype is None:
    248             dtype = K.floatx()
--> 249         weight = K.variable(initializer(shape),
    250                             dtype=dtype,
    251                             name=name,

d:\winpython-64bit-3.6.6.1\python-3.6.6.amd64\lib\site-packages\keras\initializers.py in __call__(self, shape, dtype)
    207             scale /= max(1., fan_out)
    208         else:
--> 209             scale /= max(1., float(fan_in + fan_out) / 2)
    210         if self.distribution == 'normal':
    211             # 0.879... = scipy.stats.truncnorm.std(a=-2, b=2, loc=0., scale=1.)

TypeError: float() argument must be a string or a number, not 'Dimension'