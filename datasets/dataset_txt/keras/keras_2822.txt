oak-tree commented on 28 Mar 2017
I tried to run the example from https://keras.io/applications/#resnet50 (copy&paste)
This result with the following error :
    preds = model.predict(x)
  File "/home/oak/venv2/local/lib/python2.7/site-packages/keras/engine/training.py", line 1572, in predict
    batch_size=batch_size, verbose=verbose)
  File "/home/oak/venv2/local/lib/python2.7/site-packages/keras/engine/training.py", line 1202, in _predict_loop
    batch_outs = f(ins_batch)
  File "/home/oak/venv2/local/lib/python2.7/site-packages/keras/backend/theano_backend.py", line 1122, in __call__
    return self.function(*inputs)
  File "/home/oak/venv2/local/lib/python2.7/site-packages/theano/compile/function_module.py", line 898, in __call__
    storage_map=getattr(self.fn, 'storage_map', None))
  File "/home/oak/venv2/local/lib/python2.7/site-packages/theano/gof/link.py", line 325, in raise_with_op
    reraise(exc_type, exc_value, exc_trace)
  File "/home/oak/venv2/local/lib/python2.7/site-packages/theano/compile/function_module.py", line 884, in __call__
    self.fn() if output_subset is None else\
ValueError: GpuDnnConv images and kernel must have the same stack size

Apply node that caused the error: GpuDnnConv{algo='small', inplace=True}(GpuContiguous.0, GpuContiguous.0, GpuAllocEmpty.0, GpuDnnConvDesc{border_mode='valid', subsample=(2, 2), conv_mode='conv', precision='float32'}.0, Constant{1.0}, Constant{0.0})
Toposort index: 1039
Inputs types: [CudaNdarrayType(float32, 4D), CudaNdarrayType(float32, 4D), CudaNdarrayType(float32, 4D), <theano.gof.type.CDataType object at 0x7fd6e7ed0190>, Scalar(float32), Scalar(float32)]
Inputs shapes: [(1, 3, 230, 230), (7, 7, 3, 64), (1, 7, 114, 84), 'No shapes', (), ()]
Inputs strides: [(0, 52900, 230, 1), (1344, 192, 64, 1), (0, 9576, 84, 1), 'No strides', (), ()]
Inputs values: ['not shown', 'not shown', 'not shown', <capsule object NULL at 0x7fd6eae6ce70>, 1.0, 0.0]
Inputs name: ('image', 'kernel', 'output', 'descriptor', 'alpha', 'beta')

Outputs clients: [[GpuElemwise{Add}[(0, 0)](GpuDnnConv{algo='small', inplace=True}.0, GpuDimShuffle{x,0,x,x}.0)]]
2