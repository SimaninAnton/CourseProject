code-ball commented on 22 Apr 2016 â€¢
edited
Hi,
i am trying to build a model where I want to have multiple inputs for an LSTM and also one is embedded while other is not. Following are issues I am facing:
1.) Dimension problems. LSTM expects 3D inputs and embedding layer provides 3D inputs but what to do about normal input?
2.) How to have separate parameters for separate inputs inside LSTM?
Example: Consider there are 2 inputs a and b.
a is n-dimensional vector and embedded to k-dimensional vector (call it a_em).
b is 1-d and so not embedded.
Thus, each sequence length will be k (a_em) + 1(b)
I want to provide both of these inputs to LSTM so that I get following formation:
h = P_a * a_em + P_b * b + P_h * h_(t-1)+b
where, P_a and P_b are different parameters.
It tried to wrap my head around this but it seems I am not getting how to do it. I have code written following code below but it seems there are two separate issues :1.) Dimension problem and 2.) Merge doesn't seem to be right way to provide multiple inputs as I want separate parameters.
a = Input(shape=(1000,), dtype='int32', name = 'a') 
b = Input(shape = (1,), dtype='float64', name = 'b')

a_em = Embedding(output_dim=60,input_dim=1000,input_length=1) (a)
a_em = Reshape((60,)) (a_em)

megred = merge([a,b], mode='concat', concat_axis=1)
gru = GRU(64)
res = gru(merged)
Can someone help me understand and resolve this?
Thanks