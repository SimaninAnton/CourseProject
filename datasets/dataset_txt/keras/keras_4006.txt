CCXD commented on 2 Nov 2016 â€¢
edited
Trying to implement a custom loss function that works as following in Theano:
        def sparse_sqe(y_true, y_pred):
            ix = y_true.nonzero()
            return (y_pred[ix] - y_true[ix]) ** 2
e.g. y_true = [[0, 0, 0, 0, 5], [9, 0, 0, 0, 0]]
y_pred = [[0.2, 0.1, 0.2, 0, 4.8], [9.5, 0.3, 0.1, 0, 0]]
would return ([4.8, 9.5] - [5, 9]) ** 2 = 0.29
The loss should only be calculated for the y_pred values at the index of the nonzero y_true values.
I tried
K.gather(y_pred, K.argmax(y_true))
but k.gather applies to a collection of tensors, and it will slice the vectors, instead of the elements of those vectors.
On a sidenote: the tf function K.where seems to be missing, which could be useful to get indices as such:
z = tf.constant(0, tf.float32)
K.where(K.not_equal(y_true, z))
Any help would be greatly appreciated.
2