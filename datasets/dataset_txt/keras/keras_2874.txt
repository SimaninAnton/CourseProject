lk1983823 commented on 24 Mar 2017
I copyed an UFCNN model from "https://github.com/lukovkin/ufcnn-keras". Because the keras code in UFCNN.ipynb is outdated, I have changed some of the code under my keras 1.2.1 and tensorflow 0.10.0. Here is my code below:
from __future__ import absolute_import
from __future__ import print_function
import numpy as np
import keras 
from keras.models import Model
from keras.models import Sequential
from keras.layers import Input, merge
from keras.layers.core import Activation
from keras.layers.convolutional import Convolution1D
import matplotlib.pyplot as plt
from keras.preprocessing import sequence

def ufcnn_regression_model(sequence_length=5000,
                           features=1,
                           nb_filter=150,
                           filter_length=5,
                           output_dim=1,
                           optimizer='adagrad',
                           loss='mse'):

    inputs = Input(shape=(sequence_length, features), name = 'input')
    conv_1 = Convolution1D(nb_filter=nb_filter, filter_length=filter_length, border_mode='same')(inputs)
    relu_1 = Activation('relu')(conv_1)
    conv_2 = Convolution1D(nb_filter=nb_filter, filter_length=filter_length, border_mode='same')(relu_1)
    relu_2 = Activation('relu')(conv_2)
    conv_3 = Convolution1D(nb_filter=nb_filter, filter_length=filter_length, border_mode='same')(relu_2)
    relu_3 = Activation('relu')(conv_3)
    conv_4 = Convolution1D(nb_filter=nb_filter, filter_length=filter_length, border_mode='same')(relu_3)
    relu_4 = Activation('relu')(conv_4)
    merge_1 = merge([relu_2, relu_4], mode = 'sum')
    conv_5 = Convolution1D(nb_filter=nb_filter, filter_length=filter_length, border_mode='same')(merge_1)
    relu_5 = Activation('relu')(conv_5)
    merge_2 = merge([relu_1, relu_5], mode = 'sum')
    conv_6 = Convolution1D(nb_filter=nb_filter, filter_length=filter_length, border_mode='same')(merge_2)
    relu_6 = Activation('relu')(conv_6)
    conv_7 = Convolution1D(nb_filter=nb_filter, filter_length=filter_length, border_mode='same')(relu_6)
    model = Model(inputs = inputs, outputs = conv_7)

    model.compile(optimizer=optimizer, loss={'output': loss})
    
    return model


def gen_cosine_amp(amp=100, period=25, x0=0, xn=50000, step=1, k=0.0001):
    
    cos = np.zeros(((xn - x0) * step,  1, 1))
    print("Cos. Shape",cos.shape)
    for i in range(len(cos)):
        idx = x0 + i * step
        cos[i, 0, 0] = amp * np.cos(idx / (2 * np.pi * period))
        cos[i, 0, 0] = cos[i, 0, 0] * np.exp(-k * idx)
    return cos

sequence_length = 64      
features = 1               
nb_filter = 150             
filter_length = 5          
output_dim = 1              

UFCNN_1 = ufcnn_regression_model(sequence_length=sequence_length)
The error are as followsï¼š
TypeError Traceback (most recent call last)
in ()
----> 1 UFCNN_1 = ufcnn_regression_model(sequence_length=sequence_length)
in ufcnn_regression_model(sequence_length, features, nb_filter, filter_length, output_dim, optimizer, loss)
53 #########################################################
54 # model.add_output(name='output', input='conv7')
---> 55 model = Model(inputs = inputs, outputs = conv_7)
56
57 model.compile(optimizer=optimizer, loss={'output': loss})
TypeError: init() got an unexpected keyword argument 'outputs'
Is this due to the version of my keras and tensorflow, or my code? Thanks for help!!!