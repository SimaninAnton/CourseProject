lireagan commented on 8 Jan 2016
First I convert my label vectors to binary class matrices.
Y_test = np_utils.to_categorical(y_test, nb_classes)
then I fit my model and test it by accuracy function.
acc = accuracy(Y_test,
               np.round(np.array(model.predict({'input': X_test},
                                               batch_size=batch_size)['output'])))
But I found it's wrong to use it for binary class matrices.
def accuracy(p, y):
    return np.mean([a == b for a, b in zip(p, y)])
Because [a == b for a, b in zip(p, y)] will get a matrix size of nb_samples X nb_classes with (True or False) elements. So the accuracy will be nb_True/(nb_samples X nb_classe).
So I use the following codes to compute accuracy.
c = 0.0
for i,e in enumerate(Y_test):
    if (e == Y_pred[i]).all():
        c = c + 1.0
acc = c/nb_classe