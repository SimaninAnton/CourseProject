Contributor
sachinruk commented on 23 Nov 2016
This is a crosspost from: http://stackoverflow.com/questions/40734745/keras-get-first-n-layers/40735741#40735741
I am loading an autoencoder from a saved file by doing the following, with the shown structire:
autoencoder = load_model("autoencoder_mse1.h5")
autoencoder.summary()
>>> ____________________________________________________________________________________________________
Layer (type)                     Output Shape          Param #     Connected to                     
====================================================================================================
input_8 (InputLayer)             (None, 19)            0                                            
____________________________________________________________________________________________________
dense_43 (Dense)                 (None, 16)            320         input_8[0][0]                    
____________________________________________________________________________________________________
dense_44 (Dense)                 (None, 16)            272         dense_43[0][0]                   
____________________________________________________________________________________________________
dense_45 (Dense)                 (None, 2)             34          dense_44[0][0]                   
____________________________________________________________________________________________________
dense_46 (Dense)                 (None, 16)            48          dense_45[0][0]                   
____________________________________________________________________________________________________
dense_47 (Dense)                 (None, 16)            272         dense_46[0][0]                   
____________________________________________________________________________________________________
dense_48 (Dense)                 (None, 19)            323         dense_47[0][0]                   
====================================================================================================
Total params: 1269
__________________
The first four layers including the InputLayer constitutes the encoder part. I was wondering if there was a quick way of grabbing those four layers. So far the only possible solutions I've come across is:
encoder = Sequential()
for i,l in enumerate(autoencoder.layers[1:]):
    if i==0:
        encoder.add(Dense(input_dim=data.shape[1],output_dim=l.output_dim,
                          activation="relu",weights=l.get_weights()))
    else:
        encoder.add(Dense(output_dim=l.output_dim,activation="relu",weights=l.get_weights()))
    if l.output_dim == 2:
        break
I'm hoping that there is a way to extract the first four layers in a more efficient way. Especially since the .summary() method spits out the layer summaries.