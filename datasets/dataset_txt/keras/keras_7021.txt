jmmcd commented on 14 May 2015
I'm using the MLP example code on https://github.com/fchollet/keras (complete code below). I've made a toy binary classification dataset. Obviously, the network is too large for this data, but reducing it doesn't change my problem. When I run it, the loss and validation loss don't improve, and y-hat is always just all zeros. predict_proba gives all ones. What am I missing?
I notice this message: UserWarning: MRG_RandomStreams Can't determine #streams from size (Shape.0), guessing 60*256 -- but I have also seen that in examples in the /examples directory (which work ok).
#!/usr/bin/env python

from keras.models import Sequential
from keras.layers.core import Dense, Dropout
from keras.optimizers import SGD
import numpy as np

X = np.array([
    [0.0, 0.1],
    [0.6, 0.8],
    [0.1, 0.2],
    [0.9, 0.8],
    [0.9, 0.7],
    [0.3, 0.0],
    [0.2, 0.2],
    [0.5, 0.9]
    ])

y = (X[:,0] + X[:,1] > 0.5).astype("int32")

# MLP example from https://github.com/fchollet/keras
model = Sequential()
model.add(Dense(2, 64, init='uniform', activation='tanh'))
model.add(Dropout(0.5))
model.add(Dense(64, 64, init='uniform', activation='tanh'))
model.add(Dropout(0.5))
model.add(Dense(64, 1, init='uniform', activation='softmax'))
sgd = SGD(lr=0.1, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(loss='mean_squared_error', optimizer=sgd)

model.fit(X, y, validation_split=0.5, shuffle=True)

print("y")
print(y)
print("yhat")
print(model.predict_classes(X))