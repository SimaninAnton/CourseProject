gyan-garcia commented on 18 Feb 2017 â€¢
edited
I got Keras 1.2.2 and tensorflow 1.0.0 running on a Django server on a Windows 10 machine. 
My current architecture loads the weights (load_weights) each time there is a relevant rest API call. This works as expected when making the first call just after starting the server. Any subsequent call will always fail when calling load_weights. I presume the .h5 file stays opened after calling load_weights.
This is the code that gets executed on each Rest API call:
# load json and create model
json_file = open('C:\TensorFlow\\ImageRecognizerServer\\ImageRecognizerServer\\app\\model.json', 'r')
loaded_model_json = json_file.read()
json_file.close()
loaded_model = model_from_json(loaded_model_json)

# load weights into new model
loaded_model.load_weights("C:\TensorFlow\\ImageRecognizerServer\\ImageRecognizerServer\\app\\model_weights.h5")
print("Loaded model from disk")

loaded_model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])
print("Compiling model")

return predict_class(loaded_model, img_matrix, 1)
This is the callstack I get:
Traceback (most recent call last):
File "C:\TensorFlow\ImageRecognizerServer\ImageRecognizerServer\Django_TS_Test\lib\site-packages\tensorflow\python\client\session.py", line 267, in init
fetch, allow_tensor=True, allow_operation=True))
File "C:\TensorFlow\ImageRecognizerServer\ImageRecognizerServer\Django_TS_Test\lib\site-packages\tensorflow\python\framework\ops.py", line 2318, in as_graph_element
return self._as_graph_element_locked(obj, allow_tensor, allow_operation)
File "C:\TensorFlow\ImageRecognizerServer\ImageRecognizerServer\Django_TS_Test\lib\site-packages\tensorflow\python\framework\ops.py", line 2402, in _as_graph_element_locked
raise ValueError("Operation %s is not an element of this graph." % obj)
ValueError: Operation name: "init"
op: "NoOp"
input: "^convolution2d_1_W/Assign"
input: "^convolution2d_1_b/Assign"
input: "^convolution2d_2_W/Assign"
input: "^convolution2d_2_b/Assign"
input: "^dense_1_W/Assign"
input: "^dense_1_b/Assign"
input: "^dense_2_W/Assign"
input: "^dense_2_b/Assign"
is not an element of this graph.
Thanks for this beautiful component!