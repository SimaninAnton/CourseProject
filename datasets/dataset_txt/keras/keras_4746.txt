Contributor
mmmikael commented on 20 Jul 2016 â€¢
edited
In some cases like with fully-convolutional nets, it makes sense to appy a network to different images sizes. This was possible until keras 1.0.3 but not with more recent versions. This is due to a new check on input shapes in standardize_input_data when predict is called.
Would it make sense to add an optional parameter to skip this check? Since standardize_input_data() skips the check if shapes is None, predict() could be modified as follows:
def predict(self, x, batch_size=32, verbose=0, check_input_shapes=True):
    if check_input_shapes:
        x = standardize_input_data(x, self.input_names,
                                   self.internal_input_shapes,
                                   check_batch_dim=False)
    else:
        x = standardize_input_data(x, self.input_names,
                                   check_batch_dim=False)
7