peternaf commented on 24 Apr 2017 â€¢
edited
Please make sure that the boxes below are checked before you submit your issue. If your issue is an implementation question, please ask your question on StackOverflow or join the Keras Slack channel and ask there instead of filing a GitHub issue.
Thank you!
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).
==========================================================
It happens because NumpyArrayIterator().next() uses self.x to transform itself and then keeps the transformed image, generating pixalated images after several transforms.
To fix it, you can keep the original x matrix and transform its' copy: self.x[j].copy()
keras\preprocessing\image.py (lines 801-803):
batch_x = np.zeros(tuple([current_batch_size] + list(self.x.shape)[1:]), dtype=K.floatx())
for i, j in enumerate(index_array):
    x = self.x[j]
An example of the code to run (you will need to load the image matrix):
import cv2
from keras.preprocessing.image import ImageDataGenerator, array_to_img, img_to_array, load_img

#Need to load data_matrix with images and labels_matrix with their labels  
train_datagen = ImageDataGenerator(
        horizontal_flip=True,
        rotation_range=20,
        width_shift_range=0.05,
        height_shift_range=0.05,
        shear_range=0.05,
        fill_mode='nearest',
        zoom_range=0.05.data_format = 'channels_last')

train_generator = train_datagen.flow(x=data_matrix, y=labels_matrix,
                                         batch_size=10,
                                         shuffle=False)
for next_generated in train_generator:
cv2.imwrite(r'D:\temp\\test.jpg', next_generated[0][0, :, :, :])