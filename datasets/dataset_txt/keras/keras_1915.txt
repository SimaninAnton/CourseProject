RameenAbdal commented on 15 Jul 2017
I am using the following model and it showing issue during extraction of feature maps.
def get_model( ):
inputs = Input((input_imp_depth, img_rows, img_cols))
conv1 = Convolution2D(16, 3, 3,  border_mode='same',init=init)(inputs)  
conv1 = Convolution2D(16, 3, 3,  border_mode='same',init=init)(conv1)
pool1 = MaxPooling2D(pool_size=(2, 2))(conv1)
act1 = Activation("relu")(pool1)         

conv2 = Convolution2D(32, 3, 3, border_mode='same',init=init)(act1)
pool2 = MaxPooling2D(pool_size=(2, 2))(conv2)
act2 = Activation("relu")(pool2)

conv3 = Convolution2D(64, 3, 3,  border_mode='same',init=init)(act2)
pool3 = MaxPooling2D(pool_size=(2, 2))(conv3)
act3 = Activation("relu")(pool3)

conv5 = Convolution2D(128, 3, 3,  border_mode='same',init=init)(act3)


up7 = merge([Deconvolution2D(128,2,2,output_shape=(None,128,img_rows/4,img_cols/4),subsample=(2,2),init=init)(conv5), conv3], mode='concat', concat_axis=1) 
act7 = Activation("relu")(up7)
conv7 = Convolution2D(64, 3, 3,  border_mode='same',init=init)(act7)

up8 = merge([Deconvolution2D(64,2,2,output_shape=(None,64,img_rows/2,img_cols/2),subsample=(2,2),init='normal')(conv7), conv2], mode='concat', concat_axis=1)
act8 = Activation("relu")(up8)
conv8 = Convolution2D(32, 3, 3,  border_mode='same',init=init)(act8)
conv8 = Convolution2D(32, 3, 3, border_mode='same',init=init)(conv8)

up9 = merge([Deconvolution2D(32,2,2,output_shape=(None,32,img_rows,img_cols),subsample=(2,2),init='normal')(conv8), conv1], mode='concat', concat_axis=1)
act9 = Activation("relu")(up9)
conv9 = Convolution2D(16, 3, 3,  border_mode='same',init=init)(act9)
conv9 = Convolution2D(16, 3, 3,  border_mode='same',init=init)(conv9)

conv10 = Convolution2D(1, 1, 1,init=init,activation="sigmoid")(conv9)
flatten1 = Flatten()(conv10)
model = Model(input=inputs, output=flatten1)

model.compile(optimizer=Adam(1e-5), loss="binary_crossentropy", metrics=["accuracy"])

return model
After training the model , it is having the following issue with the function
get_attributes = k.function([model.layers[0].input, k.learning_phase()], [model.layers[5].output])
features = get_attributes([data]) #data is of the size of the input to the model
Error:
self.inv_finder[c]))
TypeError: Missing required input: keras_learning_phase