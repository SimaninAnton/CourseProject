chivalry123 commented on 24 Apr 2017
Hi, I have a network generated with 1.2.2 and I could load it successfully with
import keras
keras.models.load_model("32pairs_duration_12_predictiongap_1_keras")
However, when I upgrade to 2.0.2 and perform the same code. I got the issue:
/home/myname/anaconda2/lib/python2.7/site-packages/keras/engine/topology.py:1206: UserWarning: Update your `Dense` call to the Keras 2 API: `Dense(batch_input_shape=[None, 512..., kernel_constraint=None, name="dense_1", bias_regularizer=None, bias_constraint=None, activity_regularizer={u'l2': 0...., trainable=True, kernel_initializer="glorot_uniform", kernel_regularizer={u'l2': 0...., input_dtype="float32", units=240, input_dim=512, use_bias=True, activation="sigmoid")`
  return cls(**config)
Traceback (most recent call last):
  File "quick_test.py", line 32, in <module>
    keras.models.load_model("32pairs_duration_12_predictiongap_1_keras")
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/models.py", line 232, in load_model
    model = model_from_config(model_config, custom_objects=custom_objects)
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/models.py", line 293, in model_from_config
    return layer_module.deserialize(config, custom_objects=custom_objects)
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/layers/__init__.py", line 46, in deserialize
    printable_module_name='layer')
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/utils/generic_utils.py", line 141, in deserialize_keras_object
    return cls.from_config(config['config'])
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/models.py", line 1189, in from_config
    layer = layer_module.deserialize(conf)
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/layers/__init__.py", line 46, in deserialize
    printable_module_name='layer')
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/utils/generic_utils.py", line 141, in deserialize_keras_object
    return cls.from_config(config['config'])
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/engine/topology.py", line 1206, in from_config
    return cls(**config)
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/legacy/interfaces.py", line 88, in wrapper
    return func(*args, **kwargs)
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/layers/core.py", line 811, in __init__
    self.kernel_regularizer = regularizers.get(kernel_regularizer)
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/regularizers.py", line 75, in get
    return deserialize(identifier)
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/regularizers.py", line 68, in deserialize
    printable_module_name='regularizer')
  File "/home/myname/anaconda2/lib/python2.7/site-packages/keras/utils/generic_utils.py", line 122, in deserialize_keras_object
    raise ValueError('Improper config format: ' + str(config))
ValueError: Improper config format: {u'l2': 0.0, u'name': u'L1L2Regularizer', u'l1': 9.99999993922529e-09}
Do you know what might be happening and what should i do? Thank you. I generate my model in this way if you think it could help...
    def _generate_model(self):
        model=keras.models.Sequential()


        if self._activation=="PReLU":
            self._activation_function = (keras.layers.advanced_activations.PReLU())
        else:
            self._activation_function = (keras.layers.Activation(self._activation))


        for i in range(len(self._hidden_layer_dim)):
            layer_now=self._hidden_layer_dim[i]
            print("i now is ",i)
            if i==0:
                model.add(keras.layers.Dense(layer_now,input_dim=self._input_dimension,
                                             W_regularizer=keras.regularizers.l1(self._weight_decay),
                                             activity_regularizer=keras.regularizers.activity_l1(self._weight_decay),
                                             activation=self._activation))
            else:
                model.add(keras.layers.Dense(layer_now,W_regularizer=keras.regularizers.l1(self._weight_decay),
                                             activity_regularizer=keras.regularizers.activity_l1(self._weight_decay),
                                             activation=self._activation))

            print("dropout rate is ", self._dropout_rate)


            # if self._activation=="PReLU":
            #     model.add(keras.layers.advanced_activations.PReLU())
            # else:
            #     model.add(keras.layers.Activation(self._activation))
            model.add(keras.layers.Dropout(self._dropout_rate))
            model.add(keras.layers.BatchNormalization())

        model.add(keras.layers.Dense(self._output_dimension,W_regularizer=keras.regularizers.l1(self._weight_decay)))

        loss='mean_absolute_error'
        # loss=custom_objective

        self._optimizer=keras.optimizers.adam(lr=self._Learning_rate)

        model.compile(optimizer=keras.optimizers.adam(lr=self._Learning_rate),loss=self._Loss_function,metrics=[loss,'mean_absolute_error','mean_squared_error','mean_squared_logarithmic_error'])
        return model
3