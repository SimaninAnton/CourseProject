trustinbharat commented on 30 Apr 2016 â€¢
edited
The following is the example in the documentation for comparison of tweets. I wish to use similar set up for feature vector comparison. There are two feature vector has 100 attributes describing facial features of a person like Asian, Indian etc. The quantities are in float numbers.
The goal is to identify if two feature vectors are of same person or not.
However, in the example below, the input is discrete in 256 dimensions.
Please tell me how to remodel the same for my problem.
Many Thanks
from keras.layers import Input, LSTM, Dense, merge
from keras.models import Model
tweet_a = Input(shape=(140, 256))
tweet_b = Input(shape=(140, 256))
shared_lstm = LSTM(64)
encoded_a = shared_lstm(tweet_a)
encoded_b = shared_lstm(tweet_b)
merged_vector = merge([encoded_a, encoded_b], mode='concat', concat_axis=-1)
predictions = Dense(1, activation='sigmoid')(merged_vector)
model = Model(input=[tweet_a, tweet_b], output=predictions)
model.compile(optimizer='rmsprop',
loss='binary_crossentropy',
metrics=['accuracy'])
model.fit([data_a, data_b], labels, nb_epoch=10)