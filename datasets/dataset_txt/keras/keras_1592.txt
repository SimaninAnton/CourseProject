malamo commented on 14 Oct 2017
I am a beginner with deep learning, it is the first time that I want to test CNN model. I know that the most important step is to prepare mys data.
My goal is to classify some curves in groups:
Total number of curves (Training) is 20000
Shape of each train curve is about 6000 samples
Total number of curves (Testing) is 7000
Shape of each test curve is about 6000 samples
My curves are concatenated in the same file.
def load_train_data_Traces(nb_traces_train, validation_split):

 x_train=np.empty([nb_traces_train,nb_samples], dtype='float32')
 print(x_train.shape)
 y_train=np.empty([nb_traces_train], dtype='uint8')
 print(y_train.shape)
 print ("Load label for <TRAIN>")
 
 y_train_all=np.loadtxt('Training_Label.txt', dtype='uint8')
 path='Training_Traces.npy'
 Traces= np.load(path)
 print(Traces.shape)
 print(len(Traces))
 for cmpt in range(len(Traces)):
  print(Traces[cmpt])
  if cmpt<nb_traces_train:
   x_train[cmpt]= Traces[cmpt]
   print (x_train[cmpt])
   print (cmpt)
   y_train[cmpt]=y_train_all[cmpt]
   print  (y_train[cmpt])
 return (x_train,y_train) 
  
def load_test_data_Traces(nb_traces_test, key_id):
 
 x_test=np.empty([nb_traces_test, nb_samples], dtype='float32')
 y_test=np.empty([nb_traces_test], dtype='uint8')
 print ("Load label for <TEST>")
 y_test_all=np.loadtxt('Testing_Label.txt', dtype='uint8')

 path='Testing_Traces.npy''
 x_test= np.load(path)
 print(x_test.shape)
 x_test=np.reshape(x_test,(8624,8000))
 print(x_test)
 y_test=y_test_all[0:nb_traces_test]
 print(y_test)
 
 return (x_test,y_test)

print ("Load Traces data [TRAINING]")
(x_train,y_train) = load_train_data_Traces(nb_traces_train,validation_split)

print ("Load Traces data [TESTING]")
(x_test,y_test) = load_test_data_Traces(nb_traces_test,0)

print ('x_train.shape',x_train.shape)

print ('y_train.shape',y_train.shape)
print  ('y_test.shape',y_test.shape)
print ('y_train[0]',y_train[0])
print('y_test[0]',y_test[0])
y_train = np_utils.to_categorical(y_train,nb_classes)
print('np_utils.to_categorical_y_train',y_train)
y_test = np_utils.to_categorical(y_test,nb_classes)
print('np_utils.to_categorical_y_test',y_test)
print ('y_train.shape', y_train.shape)
print ('y_test.shape',y_test.shape)
print ('y_train[0]',y_train[0])
print('y_test[0]', y_test[0])
//Model
In fact I have 378 classes where I compute them based on some parameters related to curves.
I notice each classe in categorical way for examoe: [[0 0 0 0 0 0 0...
0 0 0 0 0 1 0 ...
0 0 0 0 0 0 0... ]]
My problem is I am not sure about how I introduce data with this two functions : load_test_data_Traces and load_train_data_Traces.
I would be very grateful if you could help me please.