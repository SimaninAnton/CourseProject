kirk86 commented on 8 Mar 2017
Hi guys, I was recently wondering whether the deconv2d operation is doing what is supposed to be doing?
For instance I don't get somewhat similar results if I try to use upsampling vs deconvolution for a segmentation task.
In other deep learning frameworks e.g. torch for the deconvolution they use a full convolution which gives me similar results to what upsampling + convolution provides. In other words I can visualize and see the image across the different filters.
With deconvolution2d this is impossible since I get rubbish results, just a yellow image without any structure in it.
Check the below examples.
Anyone has any idea?
Example:
from keras.models import Sequential  
from keras.layers import Convolution2D, MaxPooling2D
from keras.layers import UpSampling2D, Reshape, Activation
from keras.layers import Deconvolution2D 
from spicy.misc import face
import numpy as np
from matplotlib import pyplot as plt

img = np.expand_dims(face()[50:50+512, 200:200+512, :], axis=0)


model = Sequential([
  Convolution2D(32, 3, 3, activation='relu', border_mode='same', input_shape=(512, 512, 3)),
  Convolution2D(64, 3, 3, activation='relu', border_mode='same'),
  MaxPooling2D(pool_size=(2, 2)),
  Convolution2D(128, 3, 3, activation='relu', border_mode='same'),
  Convolution2D(256, 3, 3, activation='relu', border_mode='same'),
  MaxPooling2D(pool_size=(2, 2)), 
  Deconvolution2D(128, 2, 2, output_shape=(None, 256, 256, 128),
  Deconvolution2D(64, 2, 2, output_shape=(None, 512, 512, 64),
  Convolution2D(1, 1, 1, activation='sigmoid', border_mode='same'),
  Reshape((512, 512))
]) 

model.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

model2 = Sequential([
Convolution2D(32, 3, 3, activation='relu', border_mode='same',  input_shape=(512, 512, 3)), Convolution2D(64, 3, 3, activation='relu', border_mode='same'), 
MaxPooling2D(pool_size=(2, 2)),
Convolution2D(128, 3, 3, activation='relu', border_mode='same'),
Convolution2D(256, 3, 3, activation='relu', border_mode='same'),  
MaxPooling2D(pool_size=(2, 2)),
UpSampling2D(), 
UpSampling2D(), 
Convolution2D(1, 1, 1, activation='sigmoid', border_mode='same'),
Reshape((512, 512))
])

model2.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])

out1 = model.predict(img)
out2  = model2.predict(img)

plt.imshow(out1)
plt.show()
plt.imshow(out2)
plt.show()