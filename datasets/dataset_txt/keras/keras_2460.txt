yaserkl commented on 6 May 2017
I'm trying to use a generator that reads from a pickle file and output the result as follows:
class threadsafe_iter:
    """Takes an iterator/generator and makes it thread-safe by
    serializing call to the `next` method of given iterator/generator.
    """
    def __init__(self, it):
        self.it = it
        self.lock = threading.Lock()

    def __iter__(self):
        return self

    def next(self):
        with self.lock:
            return self.it.next()

def threadsafe_generator(f):
    """A decorator that takes a generator function and makes it thread-safe.
    """
    def g(*a, **kw):
        return threadsafe_iter(f(*a, **kw))
    return g

@threadsafe_generator
def generator(pickle_file_path):
    pckl = Unpickler(open(pickle_file_path))
    number_of_batches = int(pckl.load())
    while True:
        try:
            datalist = pckl.load()
        except EOFError:
            raise StopIteration
        yield datalist[0], datalist[1]

def steps_per_epoch(pickle_file_path):
    pckl = Unpickler(open(pickle_file_path))
    number_of_batches = int(pckl.load())
    return number_of_batches
And I'm using the following script to run the fit_generator() function:
spe_train = steps_per_epoch(train_pickle_path)
spe_valid = steps_per_epoch(valid_pickle_path)
model.fit_generator(generator(train_pickle_path), steps_per_epoch=spe_train,
                validation_data=generator(train_pickle_path),validation_steps=spe_valid,
                nb_epoch=nb_epoch,
                verbose=1, callbacks=[checkpoint],
                class_weight={0:1, 1:ratio})
The first line of the pickle file contains the number of batches in the train/valid dataset and the rest of the pickle file contains the data.
I'm getting the "output of generator should be a tuple (x, y, sample_weight) or (x, y). Found: None" error quite the last batches (495/500) as follows:
Epoch 1/20
495/500 [============================>.] - ETA: 0s - loss: 0.8828 - acc: 0.7378Exception in thread Thread-487:
Traceback (most recent call last):
    File "/usr/lib/python2.7/threading.py", line 801, in __bootstrap_inner
        self.run()
    File "/usr/lib/python2.7/threading.py", line 754, in run
        self.__target(*self.__args, **self.__kwargs)
    File "/home/ubuntu/env/local/lib/python2.7/site-packages/keras/engine/training.py", line 612, in data_generator_task
    generator_output = next(self._generator)
StopIteration
ValueError                                Traceback (most recent call last)
<ipython-input-33-2a6cb837e4c1> in <module>()
      3                     nb_epoch=nb_epoch,
      4                     verbose=1, callbacks=[checkpoint],
----> 5                     class_weight={0:1, 1:ratio})

/home/ubuntu/env/local/lib/python2.7/site-packages/keras/legacy/interfaces.pyc in wrapper(*args, **kwargs)
     86                 warnings.warn('Update your `' + object_name +
     87                               '` call to the Keras 2 API: ' + signature, stacklevel=2)
---> 88             return func(*args, **kwargs)
     89         wrapper._legacy_support_signature = inspect.getargspec(func)
     90         return wrapper

/home/ubuntu/env/local/lib/python2.7/site-packages/keras/engine/training.pyc in fit_generator(self, generator, steps_per_epoch, epochs, verbose, callbacks, validation_data, validation_steps, class_weight, max_q_size, workers, pickle_safe, initial_epoch)
   1863                                          'a tuple `(x, y, sample_weight)` '
   1864                                          'or `(x, y)`. Found: ' +
-> 1865                                          str(generator_output))
   1866                     if len(generator_output) == 2:
   1867                         x, y = generator_output

ValueError: output of generator should be a tuple "(x, y, sample_weight)" or "(x, y)". Found: None
My batch size is 1500 and all the batches contains exactly this number of instances except the very last one which contains 64 instances.