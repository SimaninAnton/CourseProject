albertomontesg commented on 19 May 2016
Hi, I have been working with a model which I have defined two inputs and each input with a defined batch_size. When I try to fit the model, the standardize_input_data method seems to return an error in checking the first dimension where there is the batch_size. In my case, the input batch size for each of the inputs is:
Input 1: (256, 20, 4096)
Input 2: (256, 20, 202)
Then I try to fit my data with arrays with (100608, 20, 4096) and (100608, 20, 202) respectively. In this case with my input data's first dimension can fit the model for 393 batches so is weird that it gives the following error:
Exception: Error when checking model input: expected prev_output to have shape (256, 20, 202) but got array with shape (100608, 20, 202)
The most estrange thing is that I previously tried to fit a model with only the first input, and it didn't complain.
Checking deeply at the code I found the following unexpected behaviour:
data = np.random.random((20, 10, 3)) # 2 batches
shapes = [(10, 10, 3)]
names = ['test1']
arrays = standardize_input_data(data, names, shapes=shapes, check_batch_dim=False)
# This worked fine without raising any error
data = [np.random.random((20, 10, 3)), np.random.random((20, 10, 4))]
shapes = [(10, 10, 3), (10, 10, 4)]
names = ['test1', 'test2']
arrays = standardize_input_data(data, names, shapes=shapes, check_batch_dim=False)
print(arrays)
Raises the following error:
---------------------------------------------------------------------------
Exception                                 Traceback (most recent call last)
<ipython-input-2-681551af0d9f> in <module>()
      2 shapes = [(10, 10, 3), (10, 10, 4)]
      3 names = ['test1', 'test2']
----> 4 arrays = standardize_input_data(data, names, shapes=shapes, check_batch_dim=False)
      5 print(arrays)

/Users/Alberto/Development/DeepLearning/frameworks/Keras/keras/keras/engine/training.py in standardize_input_data(data, names, shapes, check_batch_dim, exception_prefix)
    102                                         ' to have shape ' + str(shapes[i]) +
    103                                         ' but got array with shape ' +
--> 104                                         str(array.shape))
    105     return arrays
     106 

Exception: Error when checking : expected test2 to have shape (10, 10, 4) but got array with shape (20, 10, 4)
I can provide a pull request to fix this if required.