dannyeuu commented on 20 Apr 2016 â€¢
edited
I'm having this error using anaconda Theano 0.8.1 e Keras 1.0.1 and pandas 0.18.0
Train on 3071224 samples, validate on 4585110 samples
Epoch 1/20
Traceback (most recent call last):
  File "onematch_test.py", line 57, in <module>
    validation_data=(X_test.values, Y_test.values))
  File "/home/daniel/anaconda2/lib/python2.7/site-packages/keras/models.py", line 402, in fit
    sample_weight=sample_weight)
  File "/home/daniel/anaconda2/lib/python2.7/site-packages/keras/engine/training.py", line 1030, in fit
    callback_metrics=callback_metrics)
  File "/home/daniel/anaconda2/lib/python2.7/site-packages/keras/engine/training.py", line 757, in _fit_loop
    ins_batch = slice_X(ins[:-1], batch_ids) + [ins[-1]]
  File "/home/daniel/anaconda2/lib/python2.7/site-packages/keras/engine/training.py", line 286, in slice_X
    return [x[start] for x in X]
  File "/home/daniel/anaconda2/lib/python2.7/site-packages/pandas/core/frame.py", line 1986, in __getitem__
    return self._getitem_array(key)
  File "/home/daniel/anaconda2/lib/python2.7/site-packages/pandas/core/frame.py", line 2031, in _getitem_array
    return self.take(indexer, axis=1, convert=True)
  File "/home/daniel/anaconda2/lib/python2.7/site-packages/pandas/core/generic.py", line 1628, in take
    convert=True, verify=True)
  File "/home/daniel/anaconda2/lib/python2.7/site-packages/pandas/core/internals.py", line 3637, in take
    indexer = maybe_convert_indices(indexer, n)
  File "/home/daniel/anaconda2/lib/python2.7/site-packages/pandas/core/indexing.py", line 1810, in maybe_convert_indices
    raise IndexError("indices are out-of-bounds")
IndexError: indices are out-of-bounds
running this code
import pandas as pd
import numpy as np
from keras.models import Sequential
from keras.layers.core import Dense, Dropout, Activation
from keras.utils import np_utils

np.random.seed(2837)

batch_size = 128
nb_classes = 2
nb_epoch = 20

bids = pd.read_csv('bids.csv', index_col='bid_id', engine='c')
train = pd.read_csv('train.csv', index_col='bidder_id', engine='c')
test = pd.read_csv('test.csv', index_col='bidder_id', engine='c')

train_bidders = pd.merge(train, bids, left_index=True, right_on='bidder_id', how='inner')
test_bidders = pd.merge(test, bids, left_index=True, right_on='bidder_id', how='inner')
test_bidders['outcome'] = -1.0

X_train = train_bidders[['payment_account', 'address', 'bidder_id', 'auction',
    'merchandise', 'device', 'time', 'country', 'ip', 'url']]
X_test =  test_bidders[['payment_account', 'address', 'bidder_id', 'auction',
    'merchandise', 'device', 'time', 'country', 'ip', 'url']]
Y_train = train_bidders[['outcome']]
Y_test = test_bidders[['outcome']]

model = Sequential()

model.add(Dense(5000, input_dim=10))
model.add(Activation('relu'))
model.add(Dropout(0.4))
model.add(Dense(3000))
model.add(Activation('relu'))
model.add(Dropout(0.4))
model.add(Dense(nb_classes))
model.add(Activation('softmax'))

model.compile(loss='sparse_categorical_crossentropy', optimizer='adadelta', metrics=["accuracy"])

print X_train.shape
print X_test.shape
print Y_train.shape
print Y_test.shape

model.fit(
    x=X_train,
    y=Y_train,
    batch_size=batch_size,
    nb_epoch=nb_epoch,
    verbose=1,
    validation_data=(X_test.values, Y_test.values))

score = model.evaluate(X_test, Y_test, accuracy=True, verbose=0)
print('Test score:', score[0])
print('Test accuracy:', score[1])