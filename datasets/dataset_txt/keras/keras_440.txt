Joerg99 commented on 20 Jan 2019
Keras 2.2.0
I added the second line (logits_temp...) to my code which causes problems saving the model. If I remove the second line and use 'output' directly as an input instead of 'logits_temperature' everything is fine.
Why is that? Whats the solution? See code for saving below. The error pops up at 'self.models[modelName].save(savePath, True)'. The full error trace is also attached.
output = shared_layer
logits_temperature = Lambda(lambda x : x / self.params['temperature'])(output)
TimeDistributed(Dense(n_class_labels, activation='softmax'), name=modelName+'_softmax')(logits_temperature) 
def saveModel(self, modelName, epoch, dev_score, test_score):
        import json
        import h5py

        if self.modelSavePath == None:
            raise ValueError('modelSavePath not specified.')

        savePath = self.modelSavePath.replace("[DevScore]", "%.4f" % dev_score).replace("[TestScore]", "%.4f" % test_score).replace("[Epoch]", str(epoch+1)).replace("[ModelName]", modelName)

        directory = os.path.dirname(savePath)
        if not os.path.exists(directory):
            os.makedirs(directory)

        if os.path.isfile(savePath):
            logging.info("Model "+savePath+" already exists. Model will be overwritten")

        self.models[modelName].save(savePath, True)

        with h5py.File(savePath, 'a') as h5file:
            h5file.attrs['mappings'] = json.dumps(self.mappings)
            h5file.attrs['params'] = json.dumps(self.params)
            h5file.attrs['modelName'] = modelName
            h5file.attrs['labelKey'] = self.datasets[modelName]['label']
Traceback (most recent call last):
  File "/home/joerg/workspace/emnlp2017-bilstm-cnn-crf/Train_generate.py", line 85, in <module>
    model.fit(epochs=101)
  File "/home/joerg/workspace/emnlp2017-bilstm-cnn-crf/neuralnets/BiLSTM_uni.py", line 435, in fit
    self.saveModel(modelName, epoch, dev_score, test_score)
  File "/home/joerg/workspace/emnlp2017-bilstm-cnn-crf/neuralnets/BiLSTM_uni.py", line 838, in saveModel
    self.models[modelName].save(savePath, True)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/site-packages/keras/engine/network.py", line 1104, in save
    save_model(self, filepath, overwrite, include_optimizer)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/site-packages/keras/engine/saving.py", line 117, in save_model
    'config': model.get_config()
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/site-packages/keras/engine/network.py", line 942, in get_config
    return copy.deepcopy(config)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 218, in _deepcopy_list
    y.append(deepcopy(a, memo))
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 223, in _deepcopy_tuple
    y = [deepcopy(a, memo) for a in x]
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 223, in <listcomp>
    y = [deepcopy(a, memo) for a in x]
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 223, in _deepcopy_tuple
    y = [deepcopy(a, memo) for a in x]
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 223, in <listcomp>
    y = [deepcopy(a, memo) for a in x]
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 182, in deepcopy
    y = _reconstruct(x, rv, 1, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 297, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 182, in deepcopy
    y = _reconstruct(x, rv, 1, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 297, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 218, in _deepcopy_list
    y.append(deepcopy(a, memo))
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 182, in deepcopy
    y = _reconstruct(x, rv, 1, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 297, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 182, in deepcopy
    y = _reconstruct(x, rv, 1, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 297, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 218, in _deepcopy_list
    y.append(deepcopy(a, memo))
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 223, in _deepcopy_tuple
    y = [deepcopy(a, memo) for a in x]
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 223, in <listcomp>
    y = [deepcopy(a, memo) for a in x]
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 182, in deepcopy
    y = _reconstruct(x, rv, 1, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 297, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 155, in deepcopy
    y = copier(x, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 243, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/joerg/applications/envs/tud_lm/lib/python3.5/copy.py", line 174, in deepcopy
    rv = reductor(4)
TypeError: cannot serialize '_io.TextIOWrapper' object