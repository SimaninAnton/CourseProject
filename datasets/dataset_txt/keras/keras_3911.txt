jingweimo commented on 17 Nov 2016 â€¢
edited
In using LSTM for image classification, people have tried to organize the image data in two manners as inputs (http://link.springer.com/article/10.1007/s11633-016-1006-2). The first is to reshape the image into a vector, thus giving a pixel based sequence; the second is to scan the image row-by-row, and each row is treated as a sequence. My question is about how the image data are fed into LSTM.
In keras, the LSTM model can be built as follows:
model.add(LSTM(
       output_dim=hidden_units, 
       input_shape=input_shape, 
       )) 
Assuming the MNIST images data of the size 28*28, how to define the input_shape to accommodate the two types of image inputs.
I have checked the LSTM class in reccurent.py. In def preprocess_input(self,x):
input_shape=self.input_spec[0].shape
input_dim = input_shape[2]
timesteps = input_shape[1]
Does that mean the input_shape should be a 3-element tuple?
What is the input_shape[0]?
What the meaning of input_dim and timesteps? How to relate them to the image size?
If I choose the row-wise input, can I set input_shape = (28,28) or (nbImage, 28, 28) ?
When I set input_shape = (28,28), run the model.add() code, it results in:
(None, 28, 28)
But when:
input_shape = (60000,28,28) # nbImage = 60000
A error shows up:
Exception: Input 0 is incompatible with layer lstm_14: expected ndim=3, found ndim=4
How does that happens?
Please make sure that the boxes below are checked before you submit your issue. Thank you!
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).