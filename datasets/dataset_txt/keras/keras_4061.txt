shamitlal commented on 27 Oct 2016 â€¢
edited
I have 50 videos with runtime varying between 1 to 4 minutes recorded at 30fps. I want to build a model similar to figure 3 of this paper ( A LSTM which accepts output of CNN as input ). I currently have the following implementation:
`
model=Sequential()
model.add(TimeDistributed(Convolution2D(32, 3, 3,
border_mode='valid'),input_shape=(TimeStep,1, 150, 150)))
model.add(keras.layers.normalization.BatchNormalization())
model.add(Activation('relu'))
model.add(TimeDistributed(MaxPooling2D(pool_size=(2, 2))))
model.add(Dropout(0.25))
model.add(TimeDistributed(Convolution2D(32, 3, 3, border_mode='valid')))
model.add(keras.layers.normalization.BatchNormalization())
model.add(Activation('relu'))
model.add(TimeDistributed(MaxPooling2D(pool_size=(2, 2))))
model.add(Dropout(0.25))
model.add(TimeDistributed(Convolution2D(32, 3, 3, border_mode='valid')))
model.add(keras.layers.normalization.BatchNormalization())
model.add(Activation('relu'))
model.add(TimeDistributed(MaxPooling2D(pool_size=(2, 2))))
model.add(Dropout(0.25))
model.add(TimeDistributed(Flatten()))
model.add(TimeDistributed(Dense(256,activation='relu')))
model.add(TimeDistributed(Dense(128,activation='relu')))
model.add(Bidirectional(LSTM(output_dim=255,return_sequences=True)))
model.add(TimeDistributed(Dense(1,activation='sigmoid')))
sgd = SGD(lr = 0.1, decay = 1e-5, momentum=0.9, nesterov=True)
model.compile(loss='mean_absolute_error', optimizer=sgd, metrics=['accuracy'])
`
If each video has TimeStep number of frames, then I want the model, at each time-step, to output a score for that frame.
This compiles successfully. However my concern is since each video has different number of frames ( and hence different timesteps ) what should be the value of "TimeStep" in first model.add line, given I don't want to use padding and can work with batch size of 1.
Another problem is that most of the keras LSTM implementations available online prepared input data consisting of entire timesteps before hand. Hence each input is like a list of list, i.e. a list of list of features for each time step. However in my case, I will not be having entire sequence beforehand. I want to pass frames one by one through CNN and subsequently pass the 1 dimensional representation of frame prepared by CNN to LSTM. How can I accomplish this?
@farizrahman4u @fchollet @joelthchao @anayebi Can you please help me on this?