Contributor
pnb commented on 24 Mar 2017 â€¢
edited
The simple variational autoencoder on MNIST digits example (https://github.com/fchollet/keras/blob/master/examples/variational_autoencoder.py) does not converge. It converges with Keras 1.2.1.
I am using the CPU TF backend on OSX 10.12.3.
Steps to reproduce
Copy the example code from https://github.com/fchollet/keras/blob/master/examples/variational_autoencoder.py
Revert to old version of Keras (1.2.1)
pip install keras==1.2.1
Slightly tweak example code to run on Keras 1.2.1, replacing stddev with std and epochs with nb_epoch
cat variational_autoencoder.py | sed 's/stddev=/std=/g' | sed 's/epochs=/nb_epoch=/g' > variational_autoencoder_1.2.1.py
Run example
python variational_autoencoder_1.2.1.py
Example training loss monotonically decreases, ending at approximately 150. Validation loss tends to decrease, ending around 153 last time I tried it. Great!
Upgrade to newest Keras
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
Run example
python variational_autoencoder.py
Training loss decreases for approximately 6 epochs, reaching about 165, then diverges. It ended around 240 a couple times I tried it, and once actually went to infinity. Not great! Validation loss follows suit. The digit visualizations look wrong as well.
What I've done to investigate
I thought it might have something to do with the vae_loss() function, so I looked through the TF backend code history on GitHub to see if binary_crossentropy() function might have changed, but it looks functionally the same. It moved from objectives to losses, but that's about it.
I looked at random_normal() as well since the signature had changed, but didn't see anything suspicious there.
Update:
I tried the Theano backend with the latest Keras and it does converge, which suggests it might have something to do with keras/backend/tensorflow_backend.py.
Update 2:
I also tried the other VAE example (https://github.com/fchollet/keras/blob/master/examples/variational_autoencoder_deconv.py) and it too does not converge with the TF backend but does with the Theano backend.
Checklist
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).