yanje03 commented on 1 Apr 2016
from keras.callbacks import EarlyStopping  
early_stopping =EarlyStopping(monitor='value_loss', patience=100)  

history = model.fit(X_train, Y_train, nb_epoch=2000, batch_size=4, show_accuracy=True, verbose=2,
                     callbacks=[early_stopping])
it always stop when patience number reached. then i went to debug and found
in callbacks.py
logs is always empty when on_epoch_end in was called.
so value current is always null, training will always stop when patience number reached.
but logs isn't empty when on_batch_begin/end was called. will logs reset before on_epoch_end was called?
Do I miss something?
def on_epoch_end(self, epoch, logs={}):
        current = logs.get(self.monitor)  
        if current is None:
            warnings.warn('Early stopping requires %s available!' %
                          (self.monitor), RuntimeWarning)

        if self.monitor_op(current, self.best):   # current is [] , self.wait never been reset to 0
            self.best = current
            self.wait = 0   
        else:
            if self.wait >= self.patience:
                if self.verbose > 0:
                    print('Epoch %05d: early stopping' % (epoch))
                self.model.stop_training = True
            self.wait += 1
1