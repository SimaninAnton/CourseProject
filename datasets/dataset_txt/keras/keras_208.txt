mhgump commented on 27 May 2019 â€¢
edited
Please make sure that this is a Bug or a Feature Request and provide all applicable information asked by the template.
If your issue is an implementation question, please ask your question on StackOverflow or on the Keras Slack channel instead of opening a GitHub issue.
System information
I've reproduced the behavior on two systems and included information on both:
Have I written custom code (as opposed to using example directory): Yes, included in original post with comments.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): macOS High Sierra Version 10.13.6
TensorFlow backend (yes / no): yes
TensorFlow version: 1.13.1   
Keras version: 2.2.4 
Python version:  3.7.3
CUDA/cuDNN version: I do not have cuda and do not have a gpu on this system. I think my code disables using GPU.
GPU model and memory:
Have I written custom code (as opposed to using example directory): Yes, included in original post with comments.
OS Platform and Distribution (e.g., Linux Ubuntu 16.04): Ubuntu 18.04.1 LTS
TensorFlow backend (yes / no): yes
TensorFlow version: 1.12.0
Keras version: 2.2.4.1
Python version: 3.6.7
CUDA/cuDNN version: I do not have cuda and do not have a gpu on this system. I think my code disables using GPU.
GPU model and memory:
Describe the current behavior
When a Bidirectional LSTM model is used as a Sequential model with fit_generator a "You must compile your model before using it" error crashes the script. This error does not occur when either an identical model is used with the Functional API or when identical data is fed through fit instead of fit_generator.
Describe the expected behavior
I would expect the error to either be thrown in all four cases (Sequential or Functional API, fit or fit_generator) or none of them. Either I misunderstand something about the Keras API or this is a bug.
Code to reproduce the issue
Provide a reproducible test case that is the bare minimum necessary to generate the problem.
import os
os.environ["CUDA_DEVICE_ORDER"] = "PCI_BUS_ID"   # see issue #152
os.environ["CUDA_VISIBLE_DEVICES"] = ""

from keras.models import *
from keras.layers import *
import keras
import numpy as np

use_sequential = False
use_fit_generator = True

batch_size = 5
input_length = 10
input_size = 3
hidden_size = 8
output_length = 5
output_size = 1
epochs = 1

class DataGenerator(keras.utils.Sequence):
    def __init__(self):
     pass
            
    def __len__(self):
     return 1

    def __getitem__(self, index):
        return np.zeros((batch_size, input_length, input_size)), np.zeros((batch_size, output_length, output_size))

train_generator = DataGenerator()
validation_generator = DataGenerator()
X,y = train_generator[0]


# ------------------------------------------
# Sequential model works with model.fit but not with model.fit_generator

if use_sequential:
 model = Sequential()
 model.add(Bidirectional(LSTM(hidden_size, input_shape=(input_length, input_size), return_sequences=False, return_state=False))) 
 model.add(RepeatVector(output_length))
 model.add(TimeDistributed(Dense(output_size)))
 model.compile(loss='mse', optimizer='adam', metrics=['accuracy', 'mape']) 

# ------------------------------------------

# ------------------------------------------
# Functional model works with both model.fit and model.fit_generator

else:
 input_sequences = Input(shape=(input_length, input_size))
 output = Bidirectional(LSTM(hidden_size, input_shape=(input_length, input_size), return_sequences=False, return_state=False))(input_sequences)
 output = RepeatVector(output_length)(output)
 output = TimeDistributed(Dense(output_size))(output)
 model = Model(inputs=[input_sequences], outputs=[output])
 model.compile(loss='mse', optimizer='adam', metrics=['accuracy', 'mape']) 

# ------------------------------------------

if use_fit_generator:
 
 history = model.fit_generator(generator=train_generator,
     validation_data=validation_generator,
     epochs=epochs)

else:

 history = model.fit(X, y, epochs=epochs)

# This final line causes a "You must compile your model before using it." 
# error when the sequential model is used with model.fit_generator
# but in no other case.

print(model.summary()) 
Other info / logs
Include any logs or source code that would be helpful to diagnose the problem. If including tracebacks, please include the full traceback. Large logs and files should be attached.
Traceback on Failure (when use_sequential=True, use_fit_generator=True):
Using TensorFlow backend.
WARNING:tensorflow:From /usr/local/lib/python3.7/site-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.
Instructions for updating:
Colocations handled automatically by placer.
Traceback (most recent call last):
  File "keras_test.py", line 61, in <module>
    epochs=epochs)
  File "/usr/local/lib/python3.7/site-packages/keras/legacy/interfaces.py", line 91, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.7/site-packages/keras/engine/training.py", line 1418, in fit_generator
    initial_epoch=initial_epoch)
  File "/usr/local/lib/python3.7/site-packages/keras/engine/training_generator.py", line 40, in fit_generator
    model._make_train_function()
  File "/usr/local/lib/python3.7/site-packages/keras/engine/training.py", line 496, in _make_train_function
    raise RuntimeError('You must compile your model before using it.')
RuntimeError: You must compile your model before using it.
Traceback on Success (when any of use_sequential or use_fit_generator are False):
Using TensorFlow backend.
WARNING:tensorflow:From /usr/local/lib/python3.7/site-packages/tensorflow/python/framework/op_def_library.py:263: colocate_with (from tensorflow.python.framework.ops) is deprecated and will be removed in a future version.
Instructions for updating:
Colocations handled automatically by placer.
WARNING:tensorflow:From /usr/local/lib/python3.7/site-packages/tensorflow/python/ops/math_ops.py:3066: to_int32 (from tensorflow.python.ops.math_ops) is deprecated and will be removed in a future version.
Instructions for updating:
Use tf.cast instead.
Epoch 1/1
2019-05-26 16:57:43.028629: I tensorflow/core/platform/cpu_feature_guard.cc:141] Your CPU supports instructions that this TensorFlow binary was not compiled to use: AVX2 FMA
1/1 [==============================] - 1s 1s/step - loss: 0.0000e+00 - acc: 1.0000 - mean_absolute_percentage_error: 0.0000e+00 - val_loss: 0.0000e+00 - val_acc: 1.0000 - val_mean_absolute_percentage_error: 0.0000e+00
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_1 (InputLayer)         (None, 10, 3)             0         
_________________________________________________________________
bidirectional_1 (Bidirection (None, 16)                768       
_________________________________________________________________
repeat_vector_1 (RepeatVecto (None, 5, 16)             0         
_________________________________________________________________
time_distributed_1 (TimeDist (None, 5, 1)              17        
=================================================================
Total params: 785
Trainable params: 785
Non-trainable params: 0
_________________________________________________________________
None