benjaminalt commented on 3 Aug 2017
When trying to import a model exported with to_json() using keras.models.model_from_json(...), I get the following error:
 File "Q:\Anaconda2\lib\site-packages\keras\models.py", line 325, in model_from_json
  return layer_module.deserialize(config, custom_objects=custom_objects)
File "Q:\Anaconda2\lib\site-packages\keras\layers\__init__.py", line 46, in deserialize
  printable_module_name='layer')
File "Q:\Anaconda2\lib\site-packages\keras\utils\generic_utils.py", line 140, in deserialize_keras_object
  list(custom_objects.items())))
File "Q:\Anaconda2\lib\site-packages\keras\engine\topology.py", line 2374, in from_config
  process_layer(layer_data)
File "Q:\Anaconda2\lib\site-packages\keras\engine\topology.py", line 2343, in process_layer
  custom_objects=custom_objects)
File "Q:\Anaconda2\lib\site-packages\keras\layers\__init__.py", line 46, in deserialize
  printable_module_name='layer')
File "Q:\Anaconda2\lib\site-packages\keras\utils\generic_utils.py", line 141, in deserialize_keras_object
  return cls.from_config(config['config'])
File "Q:\Anaconda2\lib\site-packages\keras\engine\topology.py", line 1206, in from_config
  return cls(**config)
File "Q:\Anaconda2\lib\site-packages\keras\legacy\interfaces.py", line 88, in wrapper
  return func(*args, **kwargs)
File "Q:\Anaconda2\lib\site-packages\keras\layers\recurrent.py", line 931, in __init__
  super(LSTM, self).__init__(**kwargs)
File "Q:\Anaconda2\lib\site-packages\keras\layers\recurrent.py", line 181, in __init__
  super(Recurrent, self).__init__(**kwargs)
File "Q:\Anaconda2\lib\site-packages\keras\engine\topology.py", line 277, in __init__
  raise TypeError('Keyword argument not understood:', kwarg)
TypeError: ('Keyword argument not understood:', u'return_state')
The problem occurs when trying to import an LSTM layer: in keras.layers.recurrent.py, super.__init__ is called with the keyword args; however, keras.engine.topology.Layer.__init__ throws an exception if the keyword is not in the allowed_kwargs list. However, return_state is an allowed kwarg of LSTM (and Recurrent) as per the documentation. The model was json-serialized using the same version of Keras as when I try to load it. Is this desired behavior? One might expect that when a model can be serialized, it should also be deserializable using the same version of Keras.
The JSON description of the model can be found in this gist.
Here is my setup:
OS: 64-bit Windows 10
Python: Python 2.7.13 (Anaconda 4.4.0 64-bit)
Keras: 2.0.6
Theano: 0.9.0