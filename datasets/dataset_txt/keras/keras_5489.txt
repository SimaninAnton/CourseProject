ericflo commented on 14 Apr 2016
I created a callback function to save weights after N epochs, however when trying to load up the model weights next time, it says "You are trying to load a weight file containing 13 layers into a model with 12 layers".
Poking into it a bit, here's the output of the model right before calling load_weights (mnist_cnn.py example):
>>> print([layer.name.encode('utf8') for layer in model.layers])
['convolution2d_1', 'activation_1', 'convolution2d_2', 'activation_2', 'maxpooling2d_1', 'dropout_1', 'flatten_1', 'dense_1', 'activation_3', 'dropout_2', 'dense_2', 'activation_4']
But when inspecting the .h5 file saved from the callback, it includes an extra "input" layer:
>>> f = h5py.File('/tmp/model.h5', mode='r')
>>> print f.attrs['layer_names']
['convolution2d_input_1' 'convolution2d_1' 'activation_1' 'convolution2d_2'
 'activation_2' 'maxpooling2d_1' 'dropout_1' 'flatten_1' 'dense_1'
 'activation_3' 'dropout_2' 'dense_2' 'activation_4']
Any thoughts on how to mitigate this issue, or what I'm doing wrong?