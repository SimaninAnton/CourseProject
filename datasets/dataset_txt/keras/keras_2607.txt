hicham-eyeem commented on 20 Apr 2017 â€¢
edited
Hi there,
I am having an issue with the LSTM layer with the stateful mode on. The problem is that sess.run() doesn't seem to work properly with tensors from this layer, probably related to the state of the cell that is not updated. Also, it is not clear how to reset the state when switching to pure Tensorflow. I tried to use Tensorboard to find the corresponding state tensor names but without a success.
Here's an example :
Model definition :
batch_size = 1
rnn_input = Input(batch_shape=(batch_size,1,embedding_dimension), dtype='float32', name='rnn_input')
lstm_layer = LSTM(lstm_layer_size,  batch_input_shape=(batch_size, 1, embedding_dimension), stateful=True, name='rnn')
final_dense_layer = Dense(vocabulary_len, activation = 'softmax', bias=True, name='dense')
rnn_model = final_dense_layer(lstm_layer(rnn_input))
model = Model(rnn_input, rnn_model)
Keras prediction :
model.reset_states()
sequence_length = 24
rnn_input = ...  #first word of the sequence
for _ in range(sequence_length):
    word_prob = model.predict(rnn_input)
   do stuff with word_prob and set rnn_input to current word
Outputs something like this which is correct
water flowing from faucet in garden
Same session but now with Tensorflow (even when using model.reset_states() before) :
sequence_length = 24
rnn_input = ...  #first word of the sequence
rnn_input_name = .... #name of the input tensor
output_tensor = mode.output
for _ in range(sequence_length):
    word_prob = sess.run(output_tensor, feed_dict={rnn_input_name: rnn_input})
   do stuff with word_prob and set rnn_input to current word
Outputs the same thing regardless the input which is wrong
a bouldering # a bouldering # a bouldering # a bouldering etc.
Thank you very much in advance.