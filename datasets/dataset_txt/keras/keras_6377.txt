KlaymenGC commented on 28 Nov 2015
Hello everyone,
I'm new to deep learning and python and now I'm trying to implement a deconvolutional network to do semantic segmentation (http://arxiv.org/abs/1505.04366), I've got a problem implementing the deconvolutional layer, the code is shown below:
# fully connected layer 1, 8x8x8 -> 1x1x16
model.add(Flatten())
model.add(Dense(16))
model.add(Activation('relu'))

# deconv layer 1, 1x1x16 -> 8x8x8
model.add(Convolution2D(8, 8, 8,
                        border_mode='full'))
model.add(Activation('relu'))
I'll leave out the convolutional layer, an error occurs right after the fully connected layer:
Traceback (most recent call last): 
File "/Documents/PycharmProjects/Deconvnet/Deconvnet.py", line 77, in <module> border_mode='full')) 
File "/Library/Python/2.7/site-packages/keras/layers/containers.py", line 37, in add self.layers[-1].set_previous(self.layers[-2]) 
File "/Library/Python/2.7/site-packages/keras/layers/core.py", line 33, in set_previous str(self.input_ndim) + " but previous layer has output_shape " + str(layer.output_shape)
AssertionError: Incompatible shapes: layer expected input with ndim=4 but previous layer has output_shape (None, 16)
I think the deconvolution using convolution has no problem theoretically... Is there a way of doing this deconvolution using Keras? Any help would be much appreciated!