ilkarman commented on 2 Mar 2018 â€¢
edited
Currently the requirement for a special folder structure to get the class labels is very restrictive and a waste of space for classification with non mutually-exclusive classes. Is it possible to just pass a dictionary like this:
class_labels = {
    'file1.png':[0, 1, 1, 0], 
    'file2.png':[1, 1, 1, 0],
    'file3.png':[0, 0, 0, 1]}

train_generator = train_datagen.flow_from_directory(directory, class_dic = class_labels)
And then instead of just (https://github.com/keras-team/keras/blob/master/keras/preprocessing/image.py#L1212)
for res in results:
    classes, filenames = res.get()
    self.classes[i:i + len(classes)] = classes
    self.filenames += filenames
    i += len(classes)
We can have:
if class_dic:
 for res in results:
  filenames = res.get()
  classes = class_dic[filenames]
  self.classes[i:i + len(classes)] = classes
     self.filenames += filenames
     i += len(classes)
By overriding something in the flow_from_directory method? That would make it more flexible