lan2720 commented on 22 Nov 2019 â€¢
edited
from keras.layers import *
from keras.models import *

model1 = Sequential()
model1.add(TimeDistributed(Dense(4, use_bias=False), input_shape=(10, 8)))
model1.summary()

model2 = Sequential()
model2.add(Dense(4, use_bias=False, input_shape=(10, 8)))
model2.summary()
I got the output is:
Model: "sequential_1"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
time_distributed_1 (TimeDist (None, 10, 4)             32        
=================================================================
Total params: 32
Trainable params: 32
Non-trainable params: 0
_________________________________________________________________
Model: "sequential_2"
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
dense_2 (Dense)              (None, 10, 4)             32        
=================================================================
Total params: 32
Trainable params: 32
Non-trainable params: 0
_________________________________________________________________
The amount of parameters is the same for these two usage. But I wonder know is there any difference?
According to the doc,
You can then use TimeDistributed to apply a Dense layer to each of the 10 timesteps, independently
If the Dense layer is independent by each timestep, the parameters should be 10*32=320 instead of 32?