stephenhky commented on 9 May 2017
I ran with the latest version of tensorflow and keras. I didn't experience an import problem with theano as the backend. And when I put tensorflow as the backend, I saw the following message:
`
In [1]: import keras
Using TensorFlow backend.
AttributeError Traceback (most recent call last)
in ()
----> 1 import keras
//anaconda/lib/python2.7/site-packages/keras/init.py in ()
1 from future import absolute_import
2
----> 3 from . import activations
4 from . import applications
5 from . import backend
//anaconda/lib/python2.7/site-packages/keras/activations.py in ()
4 from . import backend as K
5 from .utils.generic_utils import deserialize_keras_object
----> 6 from .engine import Layer
7
8
//anaconda/lib/python2.7/site-packages/keras/engine/init.py in ()
6 from .topology import Layer
7 from .topology import get_source_inputs
----> 8 from .training import Model
//anaconda/lib/python2.7/site-packages/keras/engine/training.py in ()
22 from .. import metrics as metrics_module
23 from ..utils.generic_utils import Progbar
---> 24 from .. import callbacks as cbks
25 from ..legacy import interfaces
26
//anaconda/lib/python2.7/site-packages/keras/callbacks.py in ()
24 if K.backend() == 'tensorflow':
25 import tensorflow as tf
---> 26 from tensorflow.contrib.tensorboard.plugins import projector
27
28
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/init.py in ()
28 from tensorflow.contrib import deprecated
29 from tensorflow.contrib import distributions
---> 30 from tensorflow.contrib import factorization
31 from tensorflow.contrib import framework
32 from tensorflow.contrib import graph_editor
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/factorization/init.py in ()
22 from tensorflow.contrib.factorization.python.ops.clustering_ops import *
23 from tensorflow.contrib.factorization.python.ops.factorization_ops import *
---> 24 from tensorflow.contrib.factorization.python.ops.gmm import *
25 from tensorflow.contrib.factorization.python.ops.gmm_ops import *
26 # pylint: enable=wildcard-import
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/factorization/python/ops/gmm.py in ()
25 from tensorflow.contrib.framework.python.framework import checkpoint_utils
26 from tensorflow.contrib.framework.python.ops import variables
---> 27 from tensorflow.contrib.learn.python.learn.estimators import estimator
28 from tensorflow.contrib.learn.python.learn.estimators import model_fn as model_fn_lib
29 from tensorflow.python.framework import constant_op
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/init.py in ()
85
86 # pylint: disable=wildcard-import
---> 87 from tensorflow.contrib.learn.python.learn import *
88 # pylint: enable=wildcard-import
89
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/init.py in ()
21
22 # pylint: disable=wildcard-import
---> 23 from tensorflow.contrib.learn.python.learn import *
24 # pylint: enable=wildcard-import
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/init.py in ()
23 from tensorflow.contrib.learn.python.learn import basic_session_run_hooks
24 from tensorflow.contrib.learn.python.learn import datasets
---> 25 from tensorflow.contrib.learn.python.learn import estimators
26 from tensorflow.contrib.learn.python.learn import graph_actions
27 from tensorflow.contrib.learn.python.learn import learn_io as io
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/init.py in ()
295 from tensorflow.contrib.learn.python.learn.estimators._sklearn import NotFittedError
296 from tensorflow.contrib.learn.python.learn.estimators.constants import ProblemType
--> 297 from tensorflow.contrib.learn.python.learn.estimators.dnn import DNNClassifier
298 from tensorflow.contrib.learn.python.learn.estimators.dnn import DNNEstimator
299 from tensorflow.contrib.learn.python.learn.estimators.dnn import DNNRegressor
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/dnn.py in ()
27 from tensorflow.contrib.layers.python.layers import optimizers
28 from tensorflow.contrib.learn.python.learn import metric_spec
---> 29 from tensorflow.contrib.learn.python.learn.estimators import dnn_linear_combined
30 from tensorflow.contrib.learn.python.learn.estimators import estimator
31 from tensorflow.contrib.learn.python.learn.estimators import head as head_lib
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/dnn_linear_combined.py in ()
29 from tensorflow.contrib.layers.python.layers import optimizers
30 from tensorflow.contrib.learn.python.learn import metric_spec
---> 31 from tensorflow.contrib.learn.python.learn.estimators import estimator
32 from tensorflow.contrib.learn.python.learn.estimators import head as head_lib
33 from tensorflow.contrib.learn.python.learn.estimators import model_fn
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/estimators/estimator.py in ()
47 from tensorflow.contrib.learn.python.learn.estimators import tensor_signature
48 from tensorflow.contrib.learn.python.learn.estimators._sklearn import NotFittedError
---> 49 from tensorflow.contrib.learn.python.learn.learn_io import data_feeder
50 from tensorflow.contrib.learn.python.learn.utils import export
51 from tensorflow.contrib.learn.python.learn.utils import saved_model_export_utils
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/learn_io/init.py in ()
19 from future import print_function
20
---> 21 from tensorflow.contrib.learn.python.learn.learn_io.dask_io import extract_dask_data
22 from tensorflow.contrib.learn.python.learn.learn_io.dask_io import extract_dask_labels
23 from tensorflow.contrib.learn.python.learn.learn_io.dask_io import HAS_DASK
//anaconda/lib/python2.7/site-packages/tensorflow/contrib/learn/python/learn/learn_io/dask_io.py in ()
24 try:
25 # pylint: disable=g-import-not-at-top
---> 26 import dask.dataframe as dd
27 allowed_classes = (dd.Series, dd.DataFrame)
28 HAS_DASK = True
//anaconda/lib/python2.7/site-packages/dask/dataframe/init.py in ()
1 from future import print_function, division, absolute_import
2
----> 3 from .core import (DataFrame, Series, Index, _Frame, map_partitions,
4 repartition)
5 from .io import (from_array, from_bcolz, from_array, from_bcolz,
//anaconda/lib/python2.7/site-packages/dask/dataframe/core.py in ()
36 return_scalar = 'return_scalar'
37
---> 38 pd.computation.expressions.set_use_numexpr(False)
39
40
AttributeError: 'module' object has no attribute 'computation'
`
However, I did not experience any error when simply import tensorflow directly:
import tensorflow