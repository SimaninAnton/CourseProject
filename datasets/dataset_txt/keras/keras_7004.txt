Contributor
vzhong commented on 25 May 2015
Hi,
I've noticed a problem using Merge on Sequential networks with flattened Embeddings. The context of the problem is as follows:
I have two embedding tables, for each example, I'd like to look up 1 embedding from table 1 and two embeddings from table 2 and concatenate the three embeddings together. While this works on the CPU, it fails on the GPU with the following error:
ValueError: GpuJoin: Wrong inputs for input 1 related to inputs 0.!
Apply node that caused the error: GpuJoin(TensorConstant{-1}, GpuReshape{2}.0, GpuReshape{2}.0)
Inputs types: [TensorType(int8, scalar), CudaNdarrayType(float32, matrix), CudaNdarrayType(float32, matrix)]
Inputs shapes: [(), (2, 2), (2, 4)]
Inputs strides: [(), (2, 1), (4, 1)]
Inputs values: [array(-1, dtype=int8), <CudaNdarray object at 0x11766c0f0>, 'not shown']

HINT: Re-running with most Theano optimization disabled could give you a back-trace of when this node was created. This can be done with by setting the Theano flag 'optimizer=fast_compile'. If that does not work, Theano optimizations can be disabled with 'optimizer=None'.
HINT: Use the Theano flag 'exception_verbosity=high' for a debugprint and storage map footprint of this apply node.
I've made a unittest for my model demonstrating this problem here. Using a GTX760, the first two tests (single embedding lookup and double embedding lookup) pass while the third test fails with the above error.
I think I've tracked down the discrepancy to Merge's T.concatenate(..., axis=-1). This problem goes away if axis=1 in this particular case. I'm not sure that the cause of this particular error is a Keras issue, as it doesn't exist on the CPU.