nickhuangxinyu commented on 2 Jul 2019
my layer code:
from keras.layers.core import Layer
from keras.engine import InputSpec
from keras import backend as K
try:
from keras import initializations
except ImportError:
from keras import initializers as initializations
import numpy as np
class HardAttention(Layer):
def init(self, **kwargs):
super(HardAttention, self).init(**kwargs)
self.input_spec = InputSpec(min_ndim=2)
def build(self, input_shape):
    input_dim = input_shape[-1]
    self.attention = self.add_weight(shape=input_shape,
                                     initializer='uniform',
                                     name='attention',
                                     dtype=np.float32,
                                     trainable=True)
                                     #dtype=bool)
    self.input_spec = InputSpec(min_ndim=2, axes={-1: input_dim})
    self.built = True
    super(HardAttention, self).build(input_shape)

def call(self, inputs):
    return K.multiply(inputs, self.attention)

def compute_output_shape(self, input_shape):
    return input_shape
model code:
(time_step, n_stock) = np.shape(x_train)
model = Sequential()
model.add(InputLayer(input_shape=(3,)))
model.add(HardAttention())
model.add(Dense(5))
model.compile(optimizer='adam', loss='mse')
model.summary()
error message:
TypeError: Failed to convert object of type <class 'tuple'> to Tensor. Contents: (None, 3). Consider casting elements to a supported type.
can anyone help me about this error, i think i define this layer quite similar with dense layer, why it doesnt work?