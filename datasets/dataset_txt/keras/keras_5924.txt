shyamupa commented on 18 Feb 2016
I am using a LSTM to get a time series embedding of shape (batch_size, seq_length, hidden_dim). I want to slice out the last vector of the series (the one I would get if I had return_sequence set to False). I cannot use return sequence because I am using part of the time series elsewhere. So I try using Lambda layer like so,
def get_H_n(X):
    return X[:,-1,:]

...
model.add_node(LSTM(options.lstm_units, return_sequences=True), name='forward', ...)
model.add_node(LSTM(options.lstm_units, return_sequences=True, go_backwards=True), name='backward' ..)
model.add_node(Dropout(0.5), name='dropout', inputs=['forward', 'backward']) # the bidir-lstm is passed through dropout
model.add_node(Lambda(get_H_n), name='h_n', input='dropout')
Strangely, I still get the same output sizes when I do print(model.summary()),
Dropout (dropout)             (None, 200, 280)              0
Lambda (h_n)                  (None, 200, 280)              0
What am I doing wrong?