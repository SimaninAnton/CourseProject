Contributor
rushter commented on 6 Dec 2015
We can either throw an informative error, or automatically convert DataFrame to numpy object.
I think it worth to add support for Pandas.
import numpy as np
import pandas as pd

from keras.layers.core import Dense, Activation
from keras.models import Sequential

X_train = pd.DataFrame(np.zeros((100, 10)))
y_train = pd.DataFrame(np.zeros((100, 2)))

model = Sequential()
model.add(Dense(512, input_shape=(10,)))
model.add(Dense(2))
model.add(Activation('softmax'))

model.compile(loss='categorical_crossentropy', optimizer='adam')
model.fit(X_train, y_train)
Traceback (most recent call last):
  File "/Users/imac/Projects/keras/examples/reuters_mlp.py", line 17, in <module>
    history = model.fit(X_train, y_train)
  File "/Users/imac/Projects/keras/keras/models.py", line 507, in fit
    shuffle=shuffle, metrics=metrics)
  File "/Users/imac/Projects/keras/keras/models.py", line 217, in _fit
    ins_batch = slice_X(ins, batch_ids)
  File "/Users/imac/Projects/keras/keras/models.py", line 60, in slice_X
    return [x[start] for x in X]
  File "/Users/imac/anaconda/envs/kerasvenv/lib/python2.7/site-packages/pandas/core/frame.py", line 1963, in __getitem__
    return self._getitem_array(key)
  File "/Users/imac/anaconda/envs/kerasvenv/lib/python2.7/site-packages/pandas/core/frame.py", line 2007, in _getitem_array
    indexer = self.ix._convert_to_indexer(key, axis=1)
  File "/Users/imac/anaconda/envs/kerasvenv/lib/python2.7/site-packages/pandas/core/indexing.py", line 1150, in _convert_to_indexer
    raise KeyError('%s not in index' % objarr[mask])
KeyError: '[21 44 77 56 66 78 36 92 94 90 30 10 88 52 86 91 74 13 72 41 58 89 22 46 15\n 75 14 24 33 53 12 73 48 64 50 87 51 27 84 60 39 71 82 97 29 45 67 32 28 43\n 49 47 61 76 63 68 93 37 23 59 69 80 79 38 55 31 25 34 16 98 99 85 81 96 17\n 40 95 70 18 57 26 19 11 62 42 83 35 54 20 65] not in index
2