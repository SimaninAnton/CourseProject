zacheberhart commented on 2 May 2017 â€¢
edited
I'm getting really tripped up on the input / output for LSTM. And I'm having a lot of trouble finding information / resources / tutorials on LSTMs with multiple features.
Am I interpreting the data shape correctly?
Let's say I have some data with four features (first four cols) and the target (last col), with each row being a different time period (let's use "days" as an example, so first row would be data for first day, second row for second day, and so on). I want to be able to predict what the output will be n days in the future.
Example:
# array of some data
dat = np.array([[0, 0, 0, 0, 9]
                [1, 1, 1, 1, 9],
                [2, 2, 2, 2, 9],
                [3, 3, 3, 3, 9],
                [4, 4, 4, 4, 9],
                [5, 5, 5, 5, 9],
                [6, 6, 6, 6, 9],
                [7, 7, 7, 7, 9],
                [8, 8, 8, 8, 9]], np.int32
              )
Now I need to split into X and Y and reshape it according to keras specifications:
# split dataset
X = dat[:,:-1].copy()
Y = dat[:,-1:].copy()

# set the number of timesteps
timesteps = 4

# reshape input to be: (samples, time steps, features)
X = reshape_data(X, timesteps)
Y = reshape_data(Y, timesteps)
Which gives me three-dimensional arrays that look like this:
X.shape # (6, 4, 4)
Y.shape # (6, 4, 1)

# second time step slice
X[:,1,:]

#array([[1, 1, 1, 1],
#       [2, 2, 2, 2],
#       [3, 3, 3, 3],
#       [4, 4, 4, 4],
#       [5, 5, 5, 5],
#       [6, 6, 6, 6]])
But I keep on getting various errors about input / output shape. Am I shaping it correctly? Does the shape represent the data how it should?
Thank you!
1