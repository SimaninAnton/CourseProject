AntreasAntoniou commented on 26 May 2015
Hello there ,
I have recently (1,5 months ago) started learning about deep learning and practising it quite a lot. I 've found keras to be really awesome so I was trying to use it's convolutional approach which I usually do with caffe but can't get it to work for some reason. You can see my code below as well as the error that follows it , could explain what is going wrong in there ?
from future import absolute_import
from future import print_function
import numpy as np
import pandas as pd
from keras.models import Sequential
from keras.layers.core import Dense, Dropout, Activation,Reshape
from keras.layers.normalization import BatchNormalization
from keras.layers.advanced_activations import PReLU
from keras.utils import np_utils, generic_utils
from keras.optimizers import SGD
from keras.layers.core import Dense, Dropout, Activation, Flatten
from keras.layers.convolutional import Convolution2D, MaxPooling2D
from keras.optimizers import SGD, Adadelta, Adagrad
from sklearn.preprocessing import LabelEncoder
from sklearn.preprocessing import StandardScaler
np.random.seed(1337)
def load_data(path, train=True):
df = pd.read_csv(path)
X = df.values.copy()
if train:
np.random.shuffle(X) # https://youtu.be/uyUXoap67N8
X, labels = X[:, 1:-1].astype(np.float32), X[:, 0]
print("X is :")
print(X)
print("Labels are:")
print(labels)
return X, labels
else:
X = X[:,0:-1].astype(np.float32)
print("X is:")
print(X)
return X
def preprocess_data(X):
X = X/255
return X
def preprocess_labels(y, encoder=None, categorical=True):
if not encoder:
encoder = LabelEncoder()
encoder.fit(labels)
y = encoder.transform(labels).astype(np.int32)
if categorical:
y = np_utils.to_categorical(y)
return y, encoder
def make_submission(y_prob, encoder, fname):
with open(fname, 'w') as f:
f.write(','.join([str(i) for i in encoder.classes_]))
f.write('\n')
for i, probs in zip(y_prob):
probas = ','.join([i] + [str(p) for p in probs.tolist()])
f.write(probas)
f.write('\n')
print("Wrote submission to file {}.".format(fname))
print("Loading data...")
X, labels = load_data('trainMnist.csv', train=True)
X = preprocess_data(X)
y, encoder = preprocess_labels(labels)
X_test = load_data('testMnist.csv', train=False)
X_test = preprocess_data(X_test)
nb_classes = y.shape[1]
print(nb_classes, 'classes')
dims = X.shape[1]
print(dims, 'dims')
print("Building model...")
model=Sequential()
neurons=2048
model = Sequential()
model.add(Convolution2D(32, 3, 3, 3, border_mode='full'))
model.add(Activation('relu'))
model.add(Convolution2D(32, 32, 3, 3))
model.add(Activation('relu'))
model.add(MaxPooling2D(poolsize=(2, 2)))
model.add(Dropout(0.25))
model.add(Convolution2D(64, 32, 3, 3, border_mode='full'))
model.add(Activation('relu'))
model.add(Convolution2D(64, 64, 3, 3))
model.add(Activation('relu'))
model.add(MaxPooling2D(poolsize=(2, 2)))
model.add(Dropout(0.25))
model.add(Flatten())
model.add(Dense(64_8_8, 256))
model.add(Activation('relu'))
model.add(Dropout(0.5))
model.add(Dense(256, 10))
model.add(Activation('softmax'))
sgd = SGD(lr=0.1, decay=1e-6, momentum=0.9, nesterov=True)
model.compile(loss='categorical_crossentropy', optimizer=sgd)
model.compile(loss='categorical_crossentropy', optimizer=sgd)
print("Training model...")
model.fit(X, y, nb_epoch=40, batch_size=56, validation_split=0.11,verbose=1)
print("Generating submission...")
proba = model.predict_proba(X_test)
make_submission(proba, encoder, fname='Submission11.csv')
10 classes
783 dims
Building model...
Training model...
Train on 37380 samples, validate on 4620 samples
Epoch 0
Traceback (most recent call last):
File "imageRecognitionAdvanced.py", line 123, in
model.fit(X, y, nb_epoch=40, batch_size=56, validation_split=0.11,verbose=1)
File "build/bdist.linux-x86_64/egg/keras/models.py", line 252, in fit
File "/usr/local/lib/python2.7/dist-packages/theano/compile/function_module.py", line 517, in call
allow_downcast=s.allow_downcast)
File "/usr/local/lib/python2.7/dist-packages/theano/tensor/type.py", line 168, in filter
data.shape))
TypeError: ('Bad input argument to theano function with name "build/bdist.linux-x86_64/egg/keras/models.py:106" at index 0(0-based)', 'Wrong number of dimensions: expected 4, got 2 with shape (56, 783).')