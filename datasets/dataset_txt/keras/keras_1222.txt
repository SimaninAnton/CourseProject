silentsnooc commented on 23 Feb 2018 â€¢
edited
I am running this example from the docs:
from keras.layers import Input, LSTM

a = Input(shape=(280, 256))
b = Input(shape=(280, 256))

lstm = LSTM(32)
encoded_a = lstm(a)
encoded_b = lstm(b)
but encoded_a = lstm(a) will throw
Traceback (most recent call last):
  File "/home/stefan/workspaces/kaggle/jigsaw-toxic-comment-classification-challenge/challenge/autoencoder/encoder.py", line 35, in <module>
    encoded_a = lstm(a)
  File "/usr/local/lib/python3.5/dist-packages/keras/layers/recurrent.py", line 499, in __call__
    return super(RNN, self).__call__(inputs, **kwargs)
  File "/usr/local/lib/python3.5/dist-packages/keras/engine/topology.py", line 590, in __call__
    self.build(input_shapes[0])
  File "/usr/local/lib/python3.5/dist-packages/keras/layers/recurrent.py", line 461, in build
    self.cell.build(step_input_shape)
  File "/usr/local/lib/python3.5/dist-packages/keras/layers/recurrent.py", line 1772, in build
    constraint=self.bias_constraint)
  File "/usr/local/lib/python3.5/dist-packages/keras/legacy/interfaces.py", line 91, in wrapper
    return func(*args, **kwargs)
  File "/usr/local/lib/python3.5/dist-packages/keras/engine/topology.py", line 411, in add_weight
    weight = K.variable(initializer(shape),
  File "/usr/local/lib/python3.5/dist-packages/keras/layers/recurrent.py", line 1764, in bias_initializer
    self.bias_initializer((self.units * 2,), *args, **kwargs),
  File "/usr/local/lib/python3.5/dist-packages/keras/backend/tensorflow_backend.py", line 1878, in concatenate
    return tf.concat([to_dense(x) for x in tensors], axis)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/ops/array_ops.py", line 1075, in concat
    dtype=dtypes.int32).get_shape(
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/ops.py", line 669, in convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/constant_op.py", line 176, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/constant_op.py", line 165, in constant
    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/tensor_util.py", line 367, in make_tensor_proto
    _AssertCompatible(values, dtype)
  File "/usr/local/lib/python3.5/dist-packages/tensorflow/python/framework/tensor_util.py", line 302, in _AssertCompatible
    (dtype.name, repr(mismatch), type(mismatch).__name__))
TypeError: Expected int32, got list containing Tensors of type '_Message' instead.

Process finished with exit code 1
Not quite sure why this is not working.
I am using Keras 2.1.4