vicmak commented on 20 Jun 2017
Hi!
I try to implement a sequence classification.
Each instance is a numpy array of numpy arrays. That is, an array having 60 vectors, each with 50 dimensions. All the instances reside in another numpy array - xx.
I initialize my model as following:
model = Sequential()
model.add(LSTM(50, input_shape=(50,60), return_sequences=False))
model.add(Dense(1, activation='sigmoid'))
model.compile(loss='binary_crossentropy', optimizer='adam', metrics=['accuracy'])
model.fit(xx, yy, epochs=4, batch_size=5)
but get the following error:
ValueError: Error when checking input: expected lstm_1_input to have 3 dimensions, but got array with shape (44, 1)
44 is the number of instances.
Where am I wrong?
Note that the vectors are not embeddings of any kind :-) but rather measurements I want to use as features.
Thanks ahead!
Victor.
Please make sure that the boxes below are checked before you submit your issue. If your issue is an implementation question, please ask your question on StackOverflow or join the Keras Slack channel and ask there instead of filing a GitHub issue.
Thank you!
[X ] Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
[ X] If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.
[X ] If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
[ X] Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).