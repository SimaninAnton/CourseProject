ssoulhi commented on 28 Apr 2017
Hi All,
I have a numerical dataset where
X = dataset[:,0:31]
Y = dataset[:,[31,32]]
The model is:
model = Sequential()
model.add(Dense(40, activation='relu', kernel_initializer='uniform', input_dim=31))
model.add(Dense(31, activation='relu', kernel_initializer='uniform'))
model.add(Dense(2, activation='sigmoid', kernel_initializer='uniform'))
model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['categorical_accuracy'])
model.fit(X, Y, epochs=1, batch_size=10, verbose=2)
At the training the loss is 0.0032 and the categorical_accuracy is 0.8831
After Evaluation with same training data: score, acc = model.evaluate(X, Y)
the loss is 0.000153304499... and the accuracy is 100%
When running predict: predictions = model.predict(X)
I got very bad results. Below 1st 10 rows of Y and Y_hat:
Y
[[ 0. 0.]
[ 0. 0.]
[ 0. 0.]
[ 0. 0.]
[ 0. 0.]
[ 0. 0.]
[ 0. 0.]
[ 0. 0.]
[ 0. 0.]
[ 0. 0.]]
Y_hat
[[ 1. 0.]
[ 1. 0.]
[ 1. 0.]
[ 1. 0.]
[ 1. 0.]
[ 1. 0.]
[ 1. 0.]
[ 1. 0.]
[ 1. 0.]
[ 1. 0.]]
How come the evaluate accuracy is 100% while the prediction from model.predict is bad.
Note that I am using same X and Y for training, evaluate and predict on purpose.
Please advise what I am missingï¿½
Thanks for your help