songpeng326 commented on 25 Jul 2018
def model_ResNet50(img_dim, num_label):
print('begin to load resnet50-model')
input_tensor = Input(shape=img_dim)
base_model = ResNet50(include_top=False, input_shape=img_dim, weights='imagenet')
bn = BatchNormalization()(input_tensor)
x = base_model(bn)
x = GlobalAveragePooling2D()(x)
x = Dropout(0.5)(x)
output = Dense(num_label, activation='softmax')(x)
model = Model(input_tensor, output)
print('finish loading resnet50-model')
return model
img_dim=(224,224,3)
num_label=16
model=model_ResNet50(img_dim, num_label)
adam = Adam(lr=0.0001)
model.compile(optimizer=adam,loss='categorical_crossentropy',metrics=['accuracy'])
checkpointer = ModelCheckpoint(filepath='/media/lab326/9a55ef08-6e15-4a6e-b1c5-9f20232c2f00/lab326/songpeng/terrain_model/resnet50.best.hdf5', verbose=1,
save_best_only=True)
model.fit(X_train, Y_train, batch_size=24, epochs=15,
callbacks=[EarlyStopping(patience=3), checkpointer],
shuffle=True,
validation_split=0.1)
model.save(filepath="/media/lab326/9a55ef08-6e15-4a6e-b1c5-9f20232c2f00/lab326/songpeng/terrain_model/resnet_model.h5", include_optimizer=False)
mymodel=load_model("/media/lab326/9a55ef08-6e15-4a6e-b1c5-9f20232c2f00/lab326/songpeng/terrain_model/resnet_model.h5")
for i in mymodel.layers:
print(i)
print(len(mymodel.layers))
result：
<keras.engine.topology.InputLayer object at 0x7f3eb50773c8>
<keras.layers.normalization.BatchNormalization object at 0x7f3eb5077438>
<keras.engine.training.Model object at 0x7f3eb50775c0>
<keras.layers.pooling.GlobalAveragePooling2D object at 0x7f3eb4f2c710>
<keras.layers.core.Dropout object at 0x7f3eb5acc048>
<keras.layers.core.Dense object at 0x7f3eb5acc4e0>
question：
I use the resnet50 that comes with keras, but the last full connection layer is my own. When I display this layer, there are only 6 layers, but resnet has 168 layers, and I want to extract the features of the middle layer, while keras think of all the middle layers as one layer.
I hope that the great god can solve my doubts！