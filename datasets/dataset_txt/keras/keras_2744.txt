dhruvjain commented on 4 Apr 2017
def create_base_net(n,input_dim,output_dim):
    model = Sequential()
    model.add(LSTM(output_dim, input_shape=(n, input_dim)))
    model.add(Dropout(0.5))
    return model

n = 73 # number of words
input_dim = 100 # size of each word vector
output_dim = 32 # size of output representation
#size of Ques_1  and Ques_2 is (3168, 73, 100) and Score is (3168,1)
x_train = [Ques_1,Ques_2]
y_train = Score

base_network = create_base_net(n,input_dim,output_dim)


input_a = Input(shape=(n,input_dim), dtype='float32', name = 'ques1')
input_b = Input(shape=(n,input_dim), dtype = 'float32', name = 'ques2')

processed_a = base_network(input_a)
processed_b = base_network(input_b)


distance = Lambda(euclidean_distance,
                  output_shape=eucl_dist_output_shape)([processed_a,processed_b])

angle = Lambda(dot_prod,
                  output_shape=eucl_dist_output_shape)([processed_a, processed_b])
x = keras.layers.concatenate([distance,angle])

x =  Dense(100, activation='tanh', init='he_normal')(x)


main_output = Dense(1,activation='sigmoid')(x)
main_model = Model(inputs=[input_a,input_b], outputs=main_output)

main_model.compile(optimizer='RMSprop', loss='binary_crossentropy')
main_model.fit({'ques1':Ques_1, 'ques2': Ques_2}, y_train, batch_size=2, epochs=1)
When I run the above code I get the following error:
Shape mismatch: x has 32 cols (and 2 rows) but y has 2 rows (and 32 cols)
Apply node that caused the error: Dot22(if{inplace}.0, if{inplace}.0)
Toposort index: 202
Inputs types: [TensorType(float32, matrix), TensorType(float32, matrix)]
Inputs shapes: [(2, 32), (2, 32)]
Inputs strides: [(128, 4), (128, 4)]
Inputs values: ['not shown', 'not shown']
Inputs type_num: [11, 11]
Outputs clients: [[Join(TensorConstant{1}, Elemwise{Composite{sqrt(clip(i0, i1, i2))}}[(0, 0)].0, Dot22.0)]]
I have tried setting the theano flags to get the detailed error but can't figure out the error. Please help!!