kevinmartinmauro commented on 4 Nov 2015
In the main page under "Examples" (http://keras.io/examples/)
You have listed:
"# Dense(64) is a fully-connected layer with 64 hidden units. in the first layer, you must specify the expected input data shape: here, 20-dimensional vectors.
model.add(Dense(64, input_dim=20, init='uniform'))"
However, this will throw an error, because python takes in 64 as input_dim, then you re-assign input_dim with a keyword in the second input. Python is unsure which is the correct input_dim and throws an error. Also, in my neural network classes I have never seen the phrase "hidden units" -- I don't think this is so common as you presume, and makes me think of hidden layers, which it is not. Can you just say "neurons" instead?
I have not heavily tested the rest of the documentation, but I think the rest of the example should follow the formula:
model.add(Dense(inputLayer, midLayer, init='uniform'))
model.add(Dense(midLayer, outputLayer, init='uniform'))
or some similar extension, where xxxLayer is the # of neurons (hidden units) in each layer