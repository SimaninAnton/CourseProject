federicolisi commented on 4 Aug 2017 â€¢
edited
I have two datasets, both have a lot of rows, for each row I have in the first dataset 10 columns (extracted features) in the second dataset I have 18 columns(features extracted). Now I would like to train a Recurrent Neural Network (in Keras) with both datasets but having different input_size (the columns). This is my code:
time_steps = 1 # the height of the image
input_size = 10 # extracted features dataset 1
BATCH_SIZE = 1
num_class = 7
model = Sequential()
model.add(LSTM(batch_input_shape=(BATCH_SIZE, time_steps, input_size), units=n_hidden_units, recurrent_dropout=0.3, activation='tanh', recurrent_activation='hard_sigmoid'))
model.add(Dense(num_class))
model.add(Activation('softmax'))
model.compile(optimizer='nadam',loss='categorical_crossentropy', metrics=['accuracy'])
model.fit(data, target, epochs=25, batch_size=1, verbose=False)
prediction = model.predict_classes(data_test, batch_size=1)
The above code is only for the first dataset and how you can see the input_size=10 is equal to the number of features for dataset one.
My question is how can I do, if I would like to train a Recurrent like above where the input_size become variable?