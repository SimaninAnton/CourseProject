philipperemy commented on 7 Apr 2016
This is not an issue but a proposal to enhance Keras.
Problem encountered
Predict an integer value [0, +oo[. With the activation functions, I use relu or linear but I didn't know how to output only integers. So I came up with my own (very simple) implementation.
Would it be useful to include this code in Keras? That's an open question. Also we could give a function pointer to have any function if Round is restrictive. For example
Custom.__init__(self, func_ptr, **kwargs)
Let me know.
Source code
from keras.layers import Layer
import keras.backend as K

class Round(Layer):

    def __init__(self, **kwargs):
        super(Round, self).__init__(**kwargs)

    def get_output(self, train=False):
        X = self.get_input(train)
        return K.round(X)

    def get_config(self):
        config = {"name": self.__class__.__name__}
        base_config = super(Round, self).get_config()
        return dict(list(base_config.items()) + list(config.items()))
Example of a network
m = Sequential()
m.add(Dense(20, input_shape=(max_features,)))
m.add(Activation('relu'))
m.add(Dense(20))
m.add(Activation('relu'))
m.add(Dense(3))
m.add(Round())
m.compile(loss='mean_absolute_error', optimizer='adam')