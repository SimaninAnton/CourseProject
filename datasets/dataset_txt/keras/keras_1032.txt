taewookim commented on 11 May 2018 â€¢
edited
Couple of questions about batch predictions for simple image classification models
Does batch prediction only improve when GPU is used? I trained a model on GPU but serving on CPU.. and i found that batching (in size of 4, 8, 16, 32, or 64) isn't any faster than running the model 1 image at a time. In fact, batching is slower.
if i pass in a bunch of cv2 numpy arras via np.vstack to model.predict(), are the predictions in the order that is passed ?
example:
def prepare_image(image_path, target=(224,224)):

    cv2_image = cv2.imread(image_path)
    image = Image.fromarray(cv2_image)
    image = image.resize(target)
    image = img_to_array(image)
    image = np.expand_dims(image, axis=0)
    image = preprocess_input(image)

    # return the processed image
    return image

if __name__ == '__main__':
    cat = prepare_image("cat.jpg")
    dog = prepare_image("dog.jpg")
    monkey = prepare_image("monkey.jpg")

    input = np.vstack([cat, dog, monkey])
    model = load_model()
    preds = model.predict(input)

    print("Cat Prediction: {}".format(preds[0]))
    print("Dog Prediction: {}".format(preds[1]))
    print("Monkey Prediction: {}".format(preds[2]))
Is this correct?