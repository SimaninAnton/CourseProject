kirk86 commented on 9 Jan 2017
Hi, thanks for keras. I've been recently trying to play around and I've found that model.build() doesn't initialize all layer weights as is indicated in the documentation, instead one has to call build() on the individual layer.
Example:
from keras.layers import Input, Lambda
from keras.applications import VGG16
from keras.optimizers import Adam
import numpy as np

model = VGG16(include_top=False, weights=None, input_tensor=Input(shape=(224, 224, 3)))
model.summary()

# Now let's say that I want to add the vgg preprocessing after the 'input_1' layer
def vgg_preprocess(x):
    x -= np.array([123.68, 116.779, 103.939])
    return x

model.layers.insert(1, Lambda(vgg_preprocess, input_shape=(224, 224, 3), output_shape=(299,299,3)))

# at this stage I was hopping that `model.compile` would have taken care of everything but that was not true
model.compile(optimizer=Adam(), loss='categorical_crossentropy', metrics=['accuracy'])

# trying to print a summary of the model gives an error
model.summary()

# using model.build((224, 224, 3)) doesn't help either
model.build((224, 224, 3))
model.summary()

# the only solution was to use build on the layer
model.layers[1].build((224, 224, 3))

model.summary()
I also have another question, in the printed model summary the layer gets a random name and the output shape says multiple.
How can I set my own name plus I don't understand the output shape multiple is that good or bad? How can I define that properly?
1