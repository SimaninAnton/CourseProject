oak-tree commented on 27 Mar 2017
I have the following function:
def transpose_dot(vects):
    x, y = vects
    # <x,x> + <y,y> - 2<x,y>

    return K.dot(x, K.transpose(y))
When try to evaluate it with keras it works
x = K.variable(np.array(np_x))
y = K.variable(np.array(np_x))
obj = transpose_dot
objective_output = obj((x, y))
print('-----------------')
print (K.eval(objective_output))
result with:
[[ 1.  1.  1.  2.]
 [ 1.  2.  2.  4.]
 [ 1.  2.  2.  4.]
 [ 2.  4.  4.  8.]
But, when try to use it as function for Lambda layer it does not work.
np_x = [[1, 0], [1, 1], [1, 1], [2, 2]]
features = np.array([np_x])
test_input = Input(shape=np.array(np_x).shape)
dot_layer= Lambda(transpose_dot, output_shape=(4,4))([test_input, test_input])
x = Model(inputs=test_input, outputs=dot_layer)
x.predict(features, batch_size=1)
Result with
self.fn() if output_subset is None else\
ValueError: Shape mismatch: x has 2 cols (and 4 rows) but y has 4 rows (and 2 cols)
Apply node that caused the error: Dot22(Reshape{2}.0, Reshape{2}.0)
Toposort index: 11
Inputs types: [TensorType(float32, matrix), TensorType(float32, matrix)]
Inputs shapes: [(4, 2), (4, 2)]
Inputs strides: [(8, 4), (8, 4)]
Inputs values: ['not shown', 'not shown']
Outputs clients: [[Reshape{4}(Dot22.0, MakeVector{dtype='int64'}.0)]]
Any idea what I'm missing here?
P.s
Stackoverflow link provide as well