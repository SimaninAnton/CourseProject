lotempeledGong commented on 15 May 2017 â€¢
edited
Hi, I'm running Keras 2.0.4 with Tensorflow 1.1.0 backend on Python 3.5 .
I'm trying to train and save a sequential model as follows:
model = Sequential()
model.add(Embedding(vocab_size, embedding_size, input_length=input_length))
model.add(Bidirectional(GRU(hidden_size, return_sequences=True, activation="tanh")))
model.add(TimeDistributed(Dense(num_labels, activation='softmax')))
optimizer = Adagrad(lr=learning_rate)
model.compile(loss='categorical_crossentropy', optimizer=optimizer, metrics=['categorical_accuracy'])
callbacks = [EarlyStopping(monitor='val_loss', patience=patience, verbose=0)]
model.fit(x_train, y_train, batch_size=batch_size, epochs = epochs, callbacks=callbacks, validation_data=[x_dev, y_dev])

model.save("model.h5")
Evaluation at this point gives me accuracy of about 70.
Then I close the python session, open a different one and try:
model2 = load_model('model.h5')
Evaluation at this point gives me an accuracy of about 20.
This happens whether I use model.save, model.save_weights, or model.to_json.