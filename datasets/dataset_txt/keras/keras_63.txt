isaacgerg commented on 17 Sep 2019 â€¢
edited
System information
Google colab environment.
keras version 2.2.5
Describe the current behavior
Suppose I have an image I want to classify. I would suspect that the image should have the same classification no matter what other images are in the batch. This is not so and will be demonstrated below.
Describe the expected behavior
The image under test has the same classification regardless of the other data in the batch.
Code to reproduce the issue
From google colab:
import keras
import numpy as np
import random
import tensorflow as tf

print(keras.__version__)

random.seed(1)
np.random.seed(1)
tf.random.set_random_seed(1) 

input1 = keras.layers.Input(shape=(128,128,1))
x = keras.layers.Flatten()(input1)
x = keras.layers.Dense(5, activation = 'softmax')(x)

model = keras.models.Model(input1, x)

batchSize = 32
x = np.random.rand(1, 128,128,1)
x = np.repeat(x, batchSize, axis=0)

print('The following rows should all be equal...')
for k in range(1, batchSize):  
    y = model.predict(x[0:k,:,:,:], batch_size=8)
    print(y[0,:])
I get the following output excerpt:
2.2.5
The following rows should all be equal...
[0.37883344 0.07293485 0.10506483 0.25064823 0.19251859]
[0.37883344 0.07293485 0.10506483 0.25064826 0.19251864]
[0.37883344 0.07293485 0.10506483 0.25064826 0.19251864]
[0.37883344 0.07293485 0.10506483 0.25064826 0.19251864]
[0.37883344 0.07293485 0.10506483 0.25064826 0.19251864]
[0.37883344 0.07293485 0.10506483 0.25064826 0.19251864]
[0.3788333  0.07293487 0.10506485 0.25064826 0.19251871]
[0.3788333  0.07293487 0.10506485 0.25064826 0.19251871]
[0.3788333  0.07293487 0.10506485 0.25064826 0.19251871]
[0.3788333  0.07293487 0.10506485 0.25064826 0.19251871]
[0.3788333  0.07293487 0.10506485 0.25064826 0.19251871]
You will notice that rows 1 and 2 are not the same in the last class.
1