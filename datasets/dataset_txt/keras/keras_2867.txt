mleong1117 commented on 24 Mar 2017 â€¢
edited
I'm doing a neural network like Keras' Inception_v3.
Here is my code`
x = Convolution2D(64, 7, 7, border_mode='same', activation='relu')(img_input)
x = MaxPooling2D((3, 3), strides=(2, 2))(x)
x = Convolution2D(64, 3, 3, border_mode='same', activation='relu')(x)
x = MaxPooling2D((3, 3), strides=(2, 2))(x)

# mixed 0
branch1x1 = Convolution2D(64, 1, 1, border_mode='same', activation='relu')(x)

branch5x5 = Convolution2D(16, 1, 1, border_mode='same', activation='relu')(x)
branch5x5 = Convolution2D(32, 5, 5, border_mode='same', activation='relu')(branch5x5)

branch3x3 = Convolution2D(96, 1, 1, border_mode='same', activation='relu')(x)
branch3x3 = Convolution2D(128, 3, 3, border_mode='same', activation='relu')(branch3x3)

branch_pool = AveragePooling2D((3, 3), strides=(1, 1), border_mode='same')(x)
branch_pool = Convolution2D(64, 1, 1, border_mode='same', activation='relu')(x) 
x = merge([branch1x1, branch3x3, branch5x5, branch_pool], mode='concat', concat_axis=1)
 
# mixed 1
branch1x1 = Convolution2D(64, 1, 1, border_mode='same', activation='relu')(x)

branch5x5 = Convolution2D(16, 1, 1, border_mode='same', activation='relu')(x)
branch5x5 = Convolution2D(32, 5, 5, border_mode='same', activation='relu')(branch5x5)

branch3x3 = Convolution2D(96, 1, 1, border_mode='same', activation='relu')(x)
branch3x3 = Convolution2D(128, 3, 3, border_mode='same', activation='relu')(branch3x3)

branch_pool = AveragePooling2D((3, 3), strides=(1, 1), border_mode='same')(x)
branch_pool = Convolution2D(64, 1, 1, border_mode='same', activation='relu')(x) 

x = merge([branch1x1, branch3x3, branch5x5, branch_pool], mode='concat')
x = MaxPooling2D((3, 3), strides=(2, 2))(x)

# mixed 2
branch1x1 = Convolution2D(64, 1, 1, border_mode='same', activation='relu')(x)

branch5x5 = Convolution2D(16, 1, 1, border_mode='same', activation='relu')(x)
branch5x5 = Convolution2D(32, 5, 5, border_mode='same', activation='relu')(branch5x5)

branch3x3 = Convolution2D(96, 1, 1, border_mode='same', activation='relu')(x)
branch3x3 = Convolution2D(128, 3, 3, border_mode='same', activation='relu')(branch3x3)

branch_pool = AveragePooling2D((3, 3), strides=(1, 1), border_mode='same')(x)
branch_pool = Convolution2D(64, 1, 1, border_mode='same', activation='relu')(branch_pool)

x = merge([branch1x1, branch3x3, branch5x5, branch_pool], mode='concat')
x = MaxPooling2D((3, 3), strides=(2, 2))(x)
x = AveragePooling2D((3, 3), strides=(1, 1))(x)
x = Flatten()(x)
x = Dense(y_train.shape[1], activation='softmax')(x)`
But there is an error popped up
Traceback (most recent call last):
  File "m_inception2.py", line 214, in <module>
    cnn_architecture(X_train, y_train, conv_arch=[(32,3),(32,3),(64,3)], dense=[64,2], batch_size=256, nb_epoch=5000, dirpath = '/home/waileong/mememoji/src/data/results/')
  File "m_inception2.py", line 162, in cnn_architecture
    x = Dense(y_train.shape[1], activation='softmax')(x)
  File "/usr/local/lib/python2.7/dist-packages/keras/engine/topology.py", line 458, in __call__
    self.build(input_shapes[0])
  File "/usr/local/lib/python2.7/dist-packages/keras/layers/core.py", line 604, in build
    name='{}_W'.format(self.name))
  File "/usr/local/lib/python2.7/dist-packages/keras/initializations.py", line 61, in glorot_uniform
    return uniform(shape, s, name=name)
  File "/usr/local/lib/python2.7/dist-packages/keras/initializations.py", line 32, in uniform
    return K.variable(np.random.uniform(low=-scale, high=scale, size=shape),
  File "mtrand.pyx", line 1565, in mtrand.RandomState.uniform (numpy/random/mtrand/mtrand.c:17303)
OverflowError: Range exceeds valid bounds
I know some people can solve it by editting the .keras file and adding
from keras import backend as K
K.set_image_dim_ordering('th')
to change the input shape of Dense layer.
I've tried both of them but neither of them can solve the error.