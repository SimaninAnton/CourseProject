Ritaja commented on 19 Nov 2015
I am trying to learn GraphNN based on the example provided at the documentation page. my example dataset has 784 features and the GNN code is a shamelessly copied from documentation examples, for understanding:
       # graph model with one input and two outputs
        graph = Graph()
        graph.add_input(name='input', input_shape=(784,))
        graph.add_node(Dense(input_dim=784, output_dim=13), name='dense1', input='input')
        graph.add_node(Dense(input_dim=13, output_dim=1), name='dense2', input='input')
        graph.add_node(Dense(input_dim=13, output_dim=1), name='dense3', input='dense1')
        graph.add_output(name='output1', input='dense2')
        graph.add_output(name='output2', input='dense3')

        graph.compile('rmsprop', {'output1': 'mse', 'output2': 'mse'})
        graph.fit({'input': X_train, 'output1': y_train, 'output2': y_train}, batch_size=16, nb_epoch=30)
And when I try to evaluate my graph model I face issues.
        graph.evaluate({'input': X_test, 'output1': y_test, 'output2': y_test}, batch_size=16, verbose=1)
Throws an error (only root case error is shown here):
File "/Library/Python/2.7/site-packages/keras/models.py", line 55, in slice_X
    return [x[start] for x in X]
IndexError: index 1 is out of bounds for size 1
for reference sake my shapes are:
Xtrain:  (32738, 784)
Xtest:  (16125, 784)
ytest:  (16125,)
ytrain:  (32738,)
Just a simple trace and analysis reveals that the graph.evaluate(self, data, batch_size=128, verbose=0, sample_weight={}) initialises sample_weight as [array([1.]), array([1.])] and following that ins is a combination of "input","output1","output2" and sample_weight
Which causes a problem in self._test_loop(self._test, ins, batch_size, verbose) at ins_batch = slice_X(ins, batch_ids)when slice_X tries to slice sample_weight using batch_ids.
Am I missing something obvious from the documentation?