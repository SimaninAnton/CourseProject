thisiskofi commented on 19 Aug 2015
First off, thanks so much for your efforts in putting together what is shaping up to be an a mazing piece of software for neural network training/analysis!
Here's the issue:
After saving an autoencoder model using to_yaml() and the corresponding weights using save_weights(), I'm unable to load the model. I've isolated the problem to container_from_config() in layer_utils.py and have a solution that at least works for my specific setup. If I add the following elif clause:
elif name == 'AutoEncoder':
layer_dict.pop('name')
encoder = container_from_config(layer_dict.get('encoder_config'))
decoder = container_from_config(layer_dict.get('decoder_config'))
output_reconstruction = layer_dict.get('output_reconstruction')
weights = layer_dict.get('weights')
autoencoder_layer = AutoEncoder(encoder,decoder,output_reconstruction=output_reconstruction,weights=weights)
return autoencoder_layer
and modify the core import line to include the Autoencoder:
from ..layers.core import ActivityRegularization, TimeDistributedDense, AutoEncoder, MaxoutDense
it loads fine. Is this an appropriate solution? If so, can it be incorporated into the code base?