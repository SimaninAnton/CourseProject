xuhuaren commented on 13 Jul 2016 â€¢
edited
Hi, every one
Recently, I try to use multi-channel input segmenting my custom image dataset.
I make sure two channel of my input is correct, each of them could get a wonderful result. Here are my model:
def model_auto(nx,ny,nz):
model1 = Sequential()
model1.add(BatchNormalization(input_shape=(1, nx, ny, nz),axis=1,mode=2))
model1.add(Convolution3D(16, 3, 3, 3,init='he_normal'))


model2 = Sequential()
model2.add(BatchNormalization(input_shape=(1, nx, ny, nz),axis=1,mode=2))
model2.add(Convolution3D(16, 3, 3, 3,init='he_normal'))


model = Sequential()    
model.add(Merge([model1, model2], mode='ave'))
model.add(Activation('relu'))

model.add(BatchNormalization(axis=1,mode=2))
model.add(Convolution3D(32, 3, 3, 3,init='he_normal'))
model.add(Activation('relu'))


model.add(BatchNormalization(axis=1,mode=2))
model.add(MaxPooling3D((2,2,2), strides=(1,1,1)))
model.add(Dropout(0.25))

model.add(BatchNormalization(axis=1,mode=2))
model.add(Convolution3D(64, 3, 3, 3,init='he_normal'))
model.add(Activation('relu'))

model.add(BatchNormalization(axis=1,mode=2))
model.add(Convolution3D(64, 3, 3, 3,init='he_normal'))
model.add(Activation('relu'))

model.add(BatchNormalization(axis=1,mode=2))
model.add(MaxPooling3D((2,2,2), strides=(1,1,1)))
model.add(Dropout(0.25))

model.add(Flatten())
model.add(Dense(512,init='he_normal'))
model.add(Activation('relu'))
model.add(Dropout(0.5))
model.add(Dense(1,init='he_normal'))
model.add(Activation('sigmoid'))
return model     
I hesitate:
Maybe too many parameters in this network?
My fusion strategy was not right?