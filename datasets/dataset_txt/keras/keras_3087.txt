avielbl commented on 2 Mar 2017
Hi,
I found that by using the KerasRegressor wrapper for use with sklearn RandomizedSearchCV or GridSearchCV the worst model is returned by means of highest validation loss.
I believe it is resulted from the fact the score method returns a loss (best model is with lowest value) as the score while scikit expect a score value such as validation accuracy (best model is with highest value).
I temporarily fixed that by returning -loss:
def score(self, X, y, **kwargs):
    '''Returns the mean loss on the given test data and labels.

    # Arguments
        X: array-like, shape `(n_samples, n_features)`
            Test samples where n_samples in the number of samples
            and n_features is the number of features.
        y: array-like, shape `(n_samples,)`
            True labels for X.
        kwargs: dictionary arguments
            Legal arguments are the arguments of `Sequential.evaluate`.

    # Returns
        score: float
            Mean accuracy of predictions on X wrt. y.
    '''
    kwargs = self.filter_sk_params(Sequential.evaluate, kwargs)
    loss = self.model.evaluate(X, y, **kwargs)
    if type(loss) is list:
        return -loss[0]
    return -loss
5