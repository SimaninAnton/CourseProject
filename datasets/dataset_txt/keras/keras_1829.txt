joaospinto commented on 1 Aug 2017 â€¢
edited
Hi,
I have written some code for training an RNN with Keras which works on Tensorflow (both CPU and GPU) and on Theano only in CPU mode; I get a segfault when running on Theano GPU.
Here is my anaconda environment definition:
python=2.7
numpy=1.12.1
h5py=2.7.0
keras=2.0.2
libgpuarray=0.6.8
mkl=2017.0.3
pygpu=0.6.8
scipy=0.19.1
tensorflow-gpu=1.1.0
theano=0.9.0
pip=9.0.1
pip:
grpcio==1.4.0
grpcio-tools==1.4.0
tensorboard==1.00a6
Within this environment, running import theano; print theano.__version__ yields 0.9.0.dev-c697eeab84e5b8a74908da654b66ec9eca4f1291.
My GPU theanorc file is as follows:
[global]
floatX = float32
device = cuda
force_device = True
[gpuarray]
preallocate = 0.8
[cuda]
root = /usr/local/cuda-0.8
[dnn]
enabled = True
include_path = /usr/local/cuda-8.0/targets/x86_64-linux/include
library_path = /usr/local/cuda-8.0/targets/x86_64-linux/lib
I can run import theano successfully on this GPU configuration; here is what the command yields:
Using cuDNN version 5110 on context None
Preallocating 6489/8111 Mb (0.800000) on cuda
Mapped name None to device cuda: Quadro M4000 (0000:03:00.0)
Here is a simplified version of my code, which triggers the same segfault problem on the last command:
import os
os.environ["KERAS_BACKEND"] = "theano"
os.environ["THEANORC"] = os.path.join(os.getcwd(), "theanorc/gpu_config")
from keras.layers import Input
from keras.layers.recurrent import GRU
timesteps = 2
inp_dim = 2
out_dim = 1
inp = Input(shape=(timesteps, inp_dim), name='in_layer')
out = GRU(units=out_dim)(inp)
Please let me know what your thoughts are. I'd imagine that this is an error of Theano, not Keras, but thought I should post it here first.
Thank you for your much valued time.