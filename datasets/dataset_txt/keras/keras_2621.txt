wulabs commented on 18 Apr 2017
There is a regression in predicted values for a simple Dense model between Keras v1.2.2 and v2.0. Code to reproduce is below.
Using Keras v1.2.2 commit 4fa7e5d
Using Keras April 17 v2.0 commit 73bf06f
Using Theano April 17 TOT commit 388805f946685e86225cdf602eb8a4f0059f9667
Running on Theano.Cuda with GeForce GT 750M, CuDNN v5105
"""
Testing for Regression in initial Dense model prediction between Keras v1.2.2 and v2.0.
Imports are included here to use as code snippet for Github issue.
"""
import numpy as np
import random
np.random.seed(7)
random.seed(7)

import keras
import keras.layers as k_layers
from keras.layers import Dense, Input
from keras.models import Model

x_train = np.array([[1]])
x_input = Input(shape=(1,))
initializer = 'one'

print "Using Keras version: %s" % keras.__version__[0]

if keras.__version__[0] == '2':
    x = Dense(1, kernel_initializer=initializer)(x_input)
    output = Dense(1, activation='linear', name='output_layer')(x)
    test_model = Model(inputs=x_input, outputs=output)
else:
    x = Dense(1, init=initializer)(x_input)
    output = Dense(1, activation='linear', name='output_layer')(x)
    test_model = Model(input=x_input, output=output)

test_model.compile(
    optimizer="adam",
    loss="mse",
    metrics=["accuracy"])

predict_val = test_model.predict(x_train)

# Keras_v1.2.2, this value should be -1.4677111
# Keras_v2.0, this value should be 1.7169169
print predict_val.sum().sum()
#self.assertAlmostEquals(predict_val.sum().sum(), -1.4677111)