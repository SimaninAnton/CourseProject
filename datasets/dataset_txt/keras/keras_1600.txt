ghost commented on 11 Oct 2017 â€¢
edited by ghost
I have a Conv2D layer taking in a tensor of shape (batch_size, 600, 105, 8). This is a batch of song spectrograms with a feature_map (convolution layer) of 8. Now I want to apply a "Dense" layer of size 48 to each time frame (600) to produce a tensor of shape (batch_size, 600, 48). The default Keras Dense layer doesn't seem to cut it...
Any suggestions?
This is my function
    def build_cnn(input_shape=(None, None, 1),
     feature_map_size=8,
     num_layers=5,
     kernerl_size=(5, 5),
     dropout=0.2,
     pool_size=(2, 2),
     epochs=100,
     lr=0.001,
     momentum=0.9,
     verbose=False):

     model = Sequential()

     # Add the convolutional layers
     for _ in range(num_layers):  
      # Conv layer
      model.add(Conv2D(
       feature_map_size,
       kernerl_size,
       input_shape=input_shape,
       padding='same',
       activation='elu')
      )
      # Dropout layer
      # model.add(Dropout(dropout))

     # Dense layer
     model.add(TimeDistributed(Dense(48, activation='elu')))