akmahaja commented on 12 Apr 2016
When i am using spearmint to optimize the hyperparamaters for Keras models, for the first time it runs fine. But the second job onwards it always throws the following error.
<type 'exceptions.TypeError'>, TypeError('An update must have the same type as the original shared variable (shared_var=<TensorType(float32, matrix)>, shared_var.type=TensorType(float32, matrix), update_val=Elemwise{add,no_inplace}.0, update_val.type=TensorType(float64, matrix)).', 'If the difference is related to the broadcast pattern, you can call the tensor.unbroadcast(var, axis_to_unbroadcast[, ...]) function to remove broadcastable dimensions.'), <traceback object at 0x18a5c5710>)
I am using the following code to load the pre-created numpy matrices of the train data and test data. The following params are passed by the optimization python script. But the set of parameters work fine if run without spearmint.
def load_train_data(arg_type, params=None):

    X_train1 = pickle.load(open(arg_type+"_train1","rb"))

     X_train2 = pickle.load(open(arg_type+"_train2","rb"))

    Y_train = pickle.load(open(arg_type+"_train_labels","rb"))



     model=combined_model(X_train1,X_train2,Y_train,params)



    X_test1 = pickle.load(open(arg_type+"_test1","rb"))

    X_test2 = pickle.load(open(arg_type+"_test2","rb"))

     Y_test = pickle.load(open(arg_type+"_test_labels","rb"))



    loss = model.evaluate({'input1': X_test1,'input2': X_test2,'output':Y_test},batch_size=450)

    return loss