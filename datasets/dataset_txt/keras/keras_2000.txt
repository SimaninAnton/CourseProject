Bjoux2 commented on 4 Jul 2017 â€¢
edited
def test_set_weight():
    input_imgs = Input(shape=(784, ))
    W = np.random.rand(784, 10)
    b = np.random.rand(10)
    encoded = Dense(10, activation='relu').set_weights(np.array([W, b]))(input_imgs)


if __name__ == '__main__':
    test_set_weight()
Here, I want to set a self-defined weights for the Dense layer, however, I got this error:
Using TensorFlow backend.
Traceback (most recent call last):
  File "/home/thl/my_task/DeepMT/pyspace/ML/SdA_demo_mnist_v2.py", line 134, in <module>
    test_set_weight()
  File "/home/thl/my_task/DeepMT/pyspace/ML/SdA_demo_mnist_v2.py", line 128, in test_set_weight
    encoded = Dense(10, activation='relu').set_weights(np.array([W, b]))(input_imgs)
  File "/usr/local/lib/python2.7/dist-packages/keras/engine/topology.py", line 1169, in set_weights
    str(weights)[:50] + '...')
ValueError: You called `set_weights(weights)` on layer "dense_1" with a  weight list of length 2, but the layer was expecting 0 weights. Provided weights: [ array([[ 0.12146454,  0.43726934,  0.61852376, ....
then I delete [W, b] and run it again
def test_set_weight():
    input_imgs = Input(shape=(784, ))
    encoded = Dense(10, activation='relu').set_weights()(input_imgs)


if __name__ == '__main__':
    test_set_weight()
it gives:
Using TensorFlow backend.
Traceback (most recent call last):
  File "/home/thl/my_task/DeepMT/pyspace/ML/SdA_demo_mnist_v2.py", line 134, in <module>
    test_set_weight()
  File "/home/thl/my_task/DeepMT/pyspace/ML/SdA_demo_mnist_v2.py", line 128, in test_set_weight
    encoded = Dense(10, activation='relu').set_weights()(input_imgs)
TypeError: set_weights() takes exactly 2 arguments (1 given)
It is really confusing.
From the second error, the set_weights() needs 2 arguments. I think they are W and b. However, when I added [W, b] in set_weights(), it returns but the layer was expecting 0 weights. (the first error)
What am I supposed to do?
Thanks!