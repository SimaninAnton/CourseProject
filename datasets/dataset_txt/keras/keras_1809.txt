abdulqayyum commented on 4 Aug 2017 â€¢
edited
I have a model with single channel input and predict other two channels. To save a proper image I want to join input channel+2 output channel
Last Layer
X_train was the input with channel L stacked thrice to a vgg-16
some deconv layers then
x = Conv2D(2, (3, 3), activation='relu', padding='same', name='bfinal')(x)
After which I use lambda layer and define a function with two inputs,
   def stackxtrainx(x,X_train):
       glist = []
       g3list = []
       X_train=np.asarray(X_train)
       for i in xrange(X_train.shape[0]):
           glist.append(K.stack(X_train[i,:,:,0:1],x[i,:,:,:]))#np.dstack(glist)
           g3list = K.stack(glist)
       return g3list
   x = Lambda(stackxtrainx(x,X_train))
   #print("tensor type", x.)
   model = Model(input=base_model.input, output=x)
   return model
How can I get a keras tensor output? Or if there is any easy method to concatenate image channels?
I am using tensorflow backend