KeironO commented on 12 Sep 2015
I'm getting a strange binary incompatibility error in Keras.
'''
THEANO_FLAGS=mode=FAST_RUN,device=gpu,floatX=float32 python neuralnetwork.py
'''

import numpy, random
from keras.utils import np_utils
from keras.models import Sequential
from keras.layers.core import Dense, Dropout, Activation
from keras.layers.embeddings import Embedding
from keras.layers.recurrent import LSTM


def load_data():
    # Removed
    return X, Y


def vectorise(X, Y):
    # Removed
    return data, labels

def split_train_and_validation(split,data,labels):
    print labels.shape
    print data.shape
    # Removed

def model_lstm(train_data, train_label, val_data, val_label, test_data, test_label):
    model = Sequential()
    max_features = 3610
    model.add(Embedding(max_features, 256))
    model.add(LSTM(256, 128, activation='sigmoid', inner_activation='hard_sigmoid'))
    model.add(Dropout(0.5))
    model.add(Dense(128, 1))
    model.add(Activation('sigmoid'))

    model.compile(loss='binary_crossentropy', optimizer='rmsprop')

    model.fit(train_data, train_label, batch_size=16, nb_epoch=1, show_accuracy=True, verbose=1, validation_data=(val_data, val_label))
    score = model.evaluate(test_data, test_label, batch_size=16, verbose=1)
    print "Loss:", score[0], "Accuracy:", score[1]


if __name__ == '__main__':
    nb_classes = 2
    split = 0.9
    X, Y = load_data()
    data, labels = vectorise(X, Y)
    index = [i for i in range(len(labels))]

    random.shuffle(index)

    data = data[index]
    labels = labels[index]
    train_data, train_label, val_data, val_label, test_data, test_label = split_train_and_validation(split,data, labels)
    model_lstm(train_data, train_label, val_data, val_label, test_data, test_label)
When I print the sizes of the vector, I am getting:
(1855, 2)
(1855, 3610)