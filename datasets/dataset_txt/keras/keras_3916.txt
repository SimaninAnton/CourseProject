jbDelafosse commented on 16 Nov 2016
Hello,
I'm not sure if this is the proper place to ask a question about keras. I apologize in advance if it is not.
I'm currently trying to reproduce this publication which is using recurrent neural nets to predict chemical activities.
Goulon, A., T. Picot, A. Duprat, and G. Dreyfus. “Predicting Activities without Computing Descriptors: Graph Machines for QSAR.” SAR and QSAR in Environmental Research 18, no. 1–2 (January 1, 2007): 141–53. doi:10.1080/10629360601054313.
In two words : the autors represent a molecule as a directed acyclic graph. Each node of this graph being an atom and each edge being a chemical bond. Then a neural network is applied on the "exit node" (called root node in the publication). This neural network calls itself on the parents of the root node and so on to provide a prediction on the whole molecule.
I think I understand how the training works for this graph machine: for each molecule, a gradient of the cost function is calculated by backpropagation in the molecule. The gradient over a batch of molecules is a weighted average of the gradient calculated for each molecule composing the batch.
A gradient descent algorithm is then used to minimize the cost-function.
My main trouble is : how can I implement this training procedure in Keras ? Usually, you just provide a list of X and a list of corresponding Y and just use model.compile() and then model.fit(). From what I understand, it is not possible here because each molecule should have its own keras.model
Is keras even the best solution here ?
Best regards,