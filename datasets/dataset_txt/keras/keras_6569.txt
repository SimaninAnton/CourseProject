alejandrok commented on 11 Oct 2015
Hi there!
We are working on performing audio source separation using a recurrent (LSTM) network architecture. We basically train the network using an audio magnitude spectrogram as an input (ie. vocals + instruments) and as an output, the corresponding vocals-only magnitude spectrogram. The spectrograms are normalized to [0, 1] so that we can use a sigmoid function in the output.
Based on the training and validation loss the network does a good job in learning this sort of transfer function we need and generalizing well (in theory, based on the validation loss) .We are using the MSE
SAMPLE OUTPUT FROM THE TRAINING STAGE:
Epoch 200/200
1059/1059 [==============================] - 6s - loss: 0.00044327 - val_loss: 0.00003266
but when it comes to testing it we are not getting a consistent output using predict. We suspect that we are doing something wrong in using predict(). We also don't know what the batch_size parameter in predict() does.
Any ideas about what could be wrong?
MODEL
freqBeans = 385 (number of freq coefficients in the spectrograms)
timestep = 32
model = Sequential()
model.add(LSTM(freqBeams, freqBeams, return_sequences=True))
model.add(LSTM(freqBeams, freqBeams, return_sequences=True))
model.add(LSTM(freqBeams, freqBeams, return_sequences=True))
model.add(TimeDistributedDense(freqBeams, freqBeams))
model.add(Activation('sigmoid'))
opt = SGD(lr=0.5, momentum=0.95, decay=1e-5, nesterov=False, clipnorm=.1)
AFTER TRAINING / AFTER SAVING THE WEIGHTS
model.load_weights("/storage/work/trainedModelKeras")
model.compile(loss='mean_squared_error', optimizer=opt)
TEST
prediction = model.predict(evalSample, batch_size=32)
Based on the output prediction we suspect that there's something wrong not related to the network's performance. (Note that in the prediction spectrogram there is a significantly different vector every 32, which is exactly the timestep value. We suspect maybe predict() is throwing vectors instead of the full sequence or something like that.
Any ideas about what could be wrong in the prediction phase?