asai95 commented on 24 Mar 2016
Hi, everyone!
I've just started to learn keras and already have one serious problem. I'm trying to predict stock price using its previous values. The model I use is built on examlples from official site. This model minimizes its lost function and weights are changing, but when I'm trying to actualy predict prices using trainig examples, I'm getting an array with fixed number (well, it's changing a little, but insignificantly).
Here's my code:
from keras.models import Sequential
from keras.layers import Dense
from keras.optimizers import SGD
import numpy

data = numpy.genfromtxt('data.csv', delimiter=';', skip_header=True, skip_footer=False)

scale = numpy.max(data)
data /= scale

y = data[:, :1]
x = data[:, 1:]

model = Sequential()
model.add(Dense(7, input_dim=x.shape[1], init='uniform', activation='linear'))
model.add(Dense(4, init='uniform', activation='tanh'))
model.add(Dense(y.shape[1], init='uniform', activation='linear'))

sgd = SGD(lr=0.06, decay=1e-6, momentum=0.5, nesterov=False)
model.compile(loss='mean_squared_error', optimizer=sgd)
model.fit(x, y, nb_epoch=2, batch_size=1, shuffle=False)

print(model.predict(x, batch_size=1)*scale)
And the output:
Epoch 1/2
2451/2451 [==============================] - 2s - loss: 8.8777e-04     
Epoch 2/2
2451/2451 [==============================] - 2s - loss: 5.1640e-04     
2451/2451 [==============================] - 1s     

[[ 145.92594338]
 [ 145.92718066]
 [ 145.92615142]
 ..., 
 [ 145.88787241]
 [ 145.88566064]
 [ 145.88658038]]
Can someone please explain what's wrong with this model. I understand that basic mlp is not a good predictor, especially with only previous values as input features, but this still seems wrong to me.