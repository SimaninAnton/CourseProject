onanypoint commented on 14 Nov 2016
I am trying to implement a network similar to the one presented by Daniel Johnson. To make my question related to the blog post, I will use a musical example.
What I would like to do:
As input, an array of (pitch_count, timesteps, feature). Where pitch_count represent the number of pitch (chromatic scale) represented in a score, the timesteps represent the time. This input is fed into a LSTM stack (return_sequence = True). The output should thus be (pitch_count, timesteps, hidden_1). Then, what I would like to do is permute the pitch_count and timesteps dimension and feed this into a second LSTM stack input=(timesteps, pitch_count, hidden_1) -> ouput = (timesteps, pitch_count, hidden_2) where this time the recurrence is done on the chromatic scale. At the end, I would revert the permutation and end up with something like (pitch_count, timesteps, hidden_2).
To sum up, I will cite a comment from the blog post:
The output from the last LSTM goes to the new LSTM, but rotated, so that the batches in one direction are the steps in the other and vice versa.
Is it possible to do this using Keras? I looked into the Permute layer but, it seems that it can not work on the sample dimension.
P.S. Thank you very much for all your good work! Keras is a wonderful tool and I am thankful for the time you invest!