ypxie commented on 26 Mar 2016
The problem is that the argument of Resize2D:model.get_node('conv_1').output_shape is not a constant, so it can not be dumped into a json string.
I may use an integer to trace back to the specific layer, but it will be easily messed up when the number of layers is large.
Any suggestions to solve this?
def buildmodel(img_rows, img_cols,img_channels, outputshape, weight_decay = 1e-7):
    model = Graph()
    model.add_input(name = 'input', input_shape = (img_channels, None, None), dtype = 'float')    
    model.add_node(Convolution2D_shape(4,3,3, border_mode = 'same', activation='relu'), 
                          name = 'conv_1', input = 'input')

    model.add_node(MaxPooling2D(pool_size = (2,2)), name = 'max_1', input = 'conv_1')

    model.add_node(Convolution2D_shape(6,3,3, border_mode = 'same', activation='relu'), 
                          name = 'conv_2', input = 'max_1')
    model.add_node(MaxPooling2D(pool_size = (2,2)), 
                   name = 'max_2', input = 'conv_2')

    model.add_node(UpSampling2D((2,2)), name = 'upsamp_1', input = 'max_2')
    model.add_node(Resize2D(model.get_node('conv_2').output_shape), name = 'resize_1', input = 'upsamp_1')
    model.add_node(Convolution2D_shape(6,3,3, border_mode = 'same', activation='relu'), 
                          name = 'conv_3', input = 'resize_1')

    model.add_node(UpSampling2D((2,2)), name = 'upsamp_2', input = 'conv_3')    
    model.add_node(Resize2D(model.get_node('conv_1').output_shape), name = 'resize_2', input = 'upsamp_2')
    model.add_node(Convolution2D_shape(4,3,3, border_mode = 'same', activation='relu'), 
                          name = 'conv_4', input = 'resize_2')

    model.add_node(Convolution2D_shape(1,3,3, border_mode = 'same', activation='sigmoid'), 
                          name = 'conv_5', input = 'conv_4')
    model.add_output(name = 'output_mask', input = 'conv_5')
    opt = RMSprop(lr=0.001, rho=0.9, epsilon=1e-6) 
    model.compile(loss={'output_mask': 'mse' }, optimizer=opt)
    return model