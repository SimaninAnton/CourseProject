Contributor
MoyanZitto commented on 13 Oct 2015
When I was trying to print the configuration of a model by "model.get_config()" or trying to save my model as a 'json' file:
json_str = autoEncoder.to_json()
open('temp_model.json','w').write(json_str)
autoEncoder.save_weights('temp_model_weights.h5')
It raise the exception "float object has no attribute 'get_value' " in file 'optimizer.py', in class SGD(because I was using SGD as the optimizer), the definition of get_config() is:
def get_config(self):
return {"name": self.class.name,
"lr": float(self.lr.get_value()),
"momentum": float(self.momentum.get_value()),
"decay": float(self.decay.get_value()),
"nesterov": self.nesterov}
while the init of class SGD does not contain decay and nesterov
def __init__(self, lr=0.01, momentum=0., decay=0., nesterov=False, *args, **kwargs):
    super(SGD, self).__init__(**kwargs)
    self.__dict__.update(locals())
    self.iterations = shared_scalar(0)
    self.lr = shared_scalar(lr)
    self.momentum = shared_scalar(momentum)
Is it a bug? Can I fix the problem by adding 'self.decay = shared_scalar(decay)' or something like this?
Thank you very much!