zlian2016 commented on 29 May 2019
Here I got the image features of shape=(BATCH_SIZE, 512). And how can I pass the initial_state(the image features) to the decoder 'lstm'.
Firstly, lstm needs two tensors to init the hidden layer, [init_h, init_c]. But we only have ONE tensor. What should I do? Just pass the image features to both two tensors?
Secondly, I'm sorry I use tensorflow keras just some days ago. I don't know where to add the variable 'initial_state'. I have read many blogs and the source code, but get no idea.
Here is my Decoder code.
class Decoder(tf.keras.Model):
def init(self):
super(Decoder, self).init()
self.embedding = tf.keras.layers.Embedding(input_dim=num_words,
output_dim=EMBEDDING_DIM,
input_length=max_seqs_length)
self.lstm = tf.keras.layers.CuDNNLSTM(units=LSTM_HIDDEN_UNITS,
return_sequences=True,
return_state=True,
recurrent_initializer='glorot_uniform')
self.fc = tf.keras.layers.Dense(units=num_words)
def call(self, inputs, training=None, mask=None):
    e = self.embedding(inputs)
    y, state_h, state_c = self.lstm(e, initial_state=self.init_state)
    return self.fc(y)
I need some help. Thanks for help!