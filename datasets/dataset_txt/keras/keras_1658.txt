woodrujm commented on 19 Sep 2017
df shape: 8155674 rows Ã— 45 columns
input_dimi = len(df.columns) - 1
y = df[target_column].values
x = df.drop(target_column,axis=1).values
Create Model
start = time()
early_stopping = EarlyStopping(monitor='val_loss', min_delta=0, patience=50, verbose=0, mode='auto')
model = Sequential()
model.add(Dense(input_dimi, input_dim=input_dimi, kernel_initializer='normal', activation='elu'))
model.add(Dropout(.9))
model.add(Dense(11, kernel_initializer='normal', activation='linear'))
model.add(Dense(1, kernel_initializer='normal'))
model.compile(loss='mean_squared_error', optimizer='adam')
tensorboard = TensorBoard(log_dir="logs/{}".format(time()))
Fit and predict with model
history = model.fit(x,y,validation_split=.33,epochs=500, batch_size=200,verbose=0,callbacks=[early_stopping, tensorboard])
Plot Results
plt.plot(history.history['loss'])
plt.plot(history.history['val_loss'])
plt.title('model loss')
plt.ylabel('loss')
plt.xlabel('epoch')
plt.legend(['train', 'test'], loc='upper left')
plt.show()
end = time()
print(str((end-start)/3600) + " hours = " + str((end-start)/60) + " minutes = " + str(end-start) + str(" seconds"))