ShellRox commented on 27 Jan 2019
I'm trying to implement a special type of convolutional neural network, which contains MyLayer at some point which takes multi-dimensional array that contains rows of 5 integers representing bounding boxes for region proposals:
[[  0, x1, x2, y1, y2] # row 0
 ...
 [  0, x1, x2, y1, y2]] # row N
Then these bounding box proposals should be projected on feature map of one of the convolutional layers and then they are maxpooled. So that is basically what MyLayer does in this case.
Problem is, I have to get shape of multi-dimensional array in my layer, like this:
from keras.engine.topology import Layer

class MyLayer(Layer):
    def __init__(self):
        ...
    ...

    def call(x):
        ...
        N = x.shape[0]  # Get amount of rows (N) of bboxes
        ...
    ... 
But due to specific architecture of Keras, instead of integer I will get just tensor placeholder (until the model is compiled). But I do need to use N variable for the layer to work.
In Caffe it could easily be done, since the cpu_data method gives an actual value. But I would much rather use Keras if there is any chance to find solution for this problem.
Is there anything I can do? Perhaps some hack?
Thank you very much.