richard27950 commented on 24 Mar 2016
I have a simple way to adapt Keras to work with scipy.sparse matrices that I can contribute if you are interested? It just checks if the input is a scipy.sparse matrix and then converts each batch (or mini batch) to dense before sending it to the backend, something like:
import scipy.sparse as sps
...
if sps.issparse(ins_batch[0]):
    ins_batch[0] = ins_batch[0].toarray()
if sps.issparse(ins_batch[1]):
    ins_batch[1] = ins_batch[1].toarray()
I also have to convert all of the len(ins[0]) to ins[0].shape[0], but that's about it. I appreciate that the long term solution is probably to use Theano/Tensorflow's sparse matrices in the backend but until someone that has deeper knowledge of those frameworks than I do wants to take that on I think this is quite a nice solution: at least it has allowed me to work with datasets that wouldn't fit in memory on my box in dense format.
My changes pass all the existing tests, so if you want me to submit a PR then please let me know and I'll write some extra unit tests for my little additions and a bit of documentation then fire it in for your assessment.