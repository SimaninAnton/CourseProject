KamalOthman commented on 27 Apr 2017
Hi Everyone,
I am working on a problem of binary-class following this link https://blog.keras.io/building-powerful-image-classification-models-using-very-little-data.html using the bottleneck features of a pre-trained network. I trained the top model (FC), and everything is working well. After this stage, I saved top model with its weights as shown in the link.
Now, I want to predict the class of a new image. Here is my code:
import numpy as np
import scipy.misc
from keras.applications.vgg16 import VGG16
from keras.preprocessing import image
from keras.applications.vgg16 import preprocess_input

def vgg16(img_path):
    print('Loading VGG16')
    model = VGG16(weights='imagenet', include_top=False )
    img = image.load_img(img_path, target_size=(150, 150))
    x = image.img_to_array(img)
    print(x.shape)
    x = np.expand_dims(x, axis=0)
    x = preprocess_input(x)

    features = model.predict(x)
    print(features)
    return features
    
def resizing_image(img):
    print('resizing an input image')
    imgs = [np.transpose(scipy.misc.imresize(scipy.misc.imread(img), (150, 150)),
                         (2,0,1)).astype('float32')]
    print(type(imgs))
    print(imgs[0].shape)
    return np.array(imgs)/255 

def load_model(model_def_fname, model_weight_fname):
    model = model_from_json(open(model_def_fname).read())
    model.load_weights(model_weight_fname)
    return model
 
def head_model(bottom_features):
    print('loading the top model')
    model = load_model(classifier_path, weights_path)
    prediction = model.predict_classes(bottom_features)
    return prediction
       
if __name__ == '__main__':

    bottom_features = vgg16(image_path)
    
    head_prediction = head_model(bottom_features)
    
    print('prediction ', head_prediction)
    
    print('the program is done')
I need your help to solve this following error:
loading the top model
('features shape ', (1, 4, 4, 512))
Traceback (most recent call last):
File "newData_prediction.py", line 91, in
head_prediction = head_model(bottom_features)
File "newData_prediction.py", line 77, in head_model
prediction = model.predict_classes(bottom_features)
File "/home/kamal/anaconda2/lib/python2.7/site-packages/keras/models.py", line 779, in predict_classes
proba = self.predict(x, batch_size=batch_size, verbose=verbose)
File "/home/kamal/anaconda2/lib/python2.7/site-packages/keras/models.py", line 671, in predict
return self.model.predict(x, batch_size=batch_size, verbose=verbose)
File "/home/kamal/anaconda2/lib/python2.7/site-packages/keras/engine/training.py", line 1161, in predict
check_batch_dim=False)
File "/home/kamal/anaconda2/lib/python2.7/site-packages/keras/engine/training.py", line 108, in standardize_input_data
str(array.shape))
Exception: Error when checking : expected flatten_input_1 to have shape (None, 512, 4, 4) but got array with shape (1, 4, 4, 512)