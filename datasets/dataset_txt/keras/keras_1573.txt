weiHelloWorld commented on 23 Oct 2017 â€¢
edited
This is really weird, when I run following code (train a model and save it) directly:
from keras.models import Sequential, Model, load_model
from keras.optimizers import *
from keras.layers import Dense, Activation, Lambda, Reshape, Input
from keras.regularizers import l2
from keras.callbacks import EarlyStopping
from keras import layers
from keras import backend as K
node_num = [8,50,2,50,8]
inputs_net = Input(shape=(node_num[0],))
x = Dense(node_num[1], activation='tanh')(inputs_net)
x_bottleneck = [Dense(1, activation='tanh')(x)
                for _ in range(node_num[2])]  # hierarchical bottleneck CV layer
x_next = [Dense(node_num[3], activation='linear')(item) for item in x_bottleneck]
assert (len(x_next) == 2)
x_next_tmp = layers.Add()(x_next)
x_next_1 = [Lambda(lambda x: K.tanh(x), output_shape=None)(item) for item in [x_next[0],x_next_tmp]]
shared_final_layer = Dense(node_num[4], activation='tanh')
outputs_net = layers.Concatenate()([shared_final_layer(item) for item in x_next_1])
molecule_net = Model(inputs=inputs_net, outputs=outputs_net)
call_back_list = []
earlyStopping = EarlyStopping(monitor='val_loss', patience=30, verbose=0, mode='min')
call_back_list += [earlyStopping]

data = np.random.uniform(size=(100, 8))
data_out = np.random.uniform(size=(100, 16))
molecule_net.compile(loss='mean_squared_error', metrics=['accuracy'],
                 optimizer=SGD(lr=0.1, momentum=0.9, decay=0, nesterov=True)
                 )
molecule_net.fit(data, data_out, epochs=3, validation_split=0.2, callbacks=call_back_list)
molecule_net.save('temp_1.hdf5')
Everything is fine, but if I run it inside a function (nothing is changed other than it is wrapped inside a function):
def test():
    from keras.models import Sequential, Model, load_model
    from keras.optimizers import *
    from keras.layers import Dense, Activation, Lambda, Reshape, Input
    from keras.regularizers import l2
    from keras.callbacks import EarlyStopping
    from keras import layers
    from keras import backend as K
    node_num = [8,50,2,50,8]
    inputs_net = Input(shape=(node_num[0],))
    x = Dense(node_num[1], activation='tanh')(inputs_net)
    x_bottleneck = [Dense(1, activation='tanh')(x)
                    for _ in range(node_num[2])]  # hierarchical bottleneck CV layer
    x_next = [Dense(node_num[3], activation='linear')(item) for item in x_bottleneck]
    assert (len(x_next) == 2)
    x_next_tmp = layers.Add()(x_next)
    x_next_1 = [Lambda(lambda x: K.tanh(x), output_shape=None)(item) for item in [x_next[0],x_next_tmp]]
    shared_final_layer = Dense(node_num[4], activation='tanh')
    outputs_net = layers.Concatenate()([shared_final_layer(item) for item in x_next_1])
    molecule_net = Model(inputs=inputs_net, outputs=outputs_net)
    call_back_list = []
    earlyStopping = EarlyStopping(monitor='val_loss', patience=30, verbose=0, mode='min')
    call_back_list += [earlyStopping]

    data = np.random.uniform(size=(100, 8))
    data_out = np.random.uniform(size=(100, 16))
    molecule_net.compile(loss='mean_squared_error', metrics=['accuracy'],
                     optimizer=SGD(lr=0.1, momentum=0.9, decay=0, nesterov=True)
                     )
    molecule_net.fit(data, data_out, epochs=3, validation_split=0.2, callbacks=call_back_list)
    molecule_net.save('temp_1.hdf5')
    return 

test()
I got following error:
ImportErrorTraceback (most recent call last)
<ipython-input-8-a7abe5cbe3cb> in <module>()
----> 1 a = test()

<ipython-input-7-d6d7c3d02b05> in test()
     24                      )
     25     molecule_net.fit(data, data_out, epochs=3, validation_split=0.2, callbacks=call_back_list)
---> 26     molecule_net.save('temp_1.hdf5')
     27     return

/home/XXXX/.anaconda2/lib/python2.7/site-packages/keras/engine/topology.pyc in save(self, filepath, overwrite, include_optimizer)
   2504         """
   2505         from ..models import save_model
-> 2506         save_model(self, filepath, overwrite, include_optimizer)
   2507 
   2508     def save_weights(self, filepath, overwrite=True):

/home/XXXX/.anaconda2/lib/python2.7/site-packages/keras/models.pyc in save_model(model, filepath, overwrite, include_optimizer)
    104     f.attrs['model_config'] = json.dumps({
    105         'class_name': model.__class__.__name__,
--> 106         'config': model.get_config()
    107     }, default=get_json_type).encode('utf8')
    108 

/home/XXXX/.anaconda2/lib/python2.7/site-packages/keras/engine/topology.pyc in get_config(self)
   2381             model_outputs.append([layer.name, new_node_index, tensor_index])
   2382         config['output_layers'] = model_outputs
-> 2383         return copy.deepcopy(config)
   2384 
   2385     @classmethod

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)
    161     copier = _deepcopy_dispatch.get(cls)
    162     if copier:
--> 163         y = copier(x, memo)
    164     else:
    165         try:

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in _deepcopy_dict(x, memo)
    255     memo[id(x)] = y
    256     for key, value in x.iteritems():
--> 257         y[deepcopy(key, memo)] = deepcopy(value, memo)
    258     return y
    259 d[dict] = _deepcopy_dict

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)
    161     copier = _deepcopy_dispatch.get(cls)
    162     if copier:
--> 163         y = copier(x, memo)
    164     else:
    165         try:

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in _deepcopy_list(x, memo)
    228     memo[id(x)] = y
    229     for a in x:
--> 230         y.append(deepcopy(a, memo))
    231     return y
    232 d[list] = _deepcopy_list

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)
    161     copier = _deepcopy_dispatch.get(cls)
    162     if copier:
--> 163         y = copier(x, memo)
    164     else:
    165         try:

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in _deepcopy_dict(x, memo)
    255     memo[id(x)] = y
    256     for key, value in x.iteritems():
--> 257         y[deepcopy(key, memo)] = deepcopy(value, memo)
    258     return y
    259 d[dict] = _deepcopy_dict

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)
    161     copier = _deepcopy_dispatch.get(cls)
    162     if copier:
--> 163         y = copier(x, memo)
    164     else:
    165         try:

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in _deepcopy_dict(x, memo)
    255     memo[id(x)] = y
    256     for key, value in x.iteritems():
--> 257         y[deepcopy(key, memo)] = deepcopy(value, memo)
    258     return y
    259 d[dict] = _deepcopy_dict

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)
    161     copier = _deepcopy_dispatch.get(cls)
    162     if copier:
--> 163         y = copier(x, memo)
    164     else:
    165         try:

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in _deepcopy_tuple(x, memo)
    235     y = []
    236     for a in x:
--> 237         y.append(deepcopy(a, memo))
    238     d = id(x)
    239     try:

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)
    161     copier = _deepcopy_dispatch.get(cls)
    162     if copier:
--> 163         y = copier(x, memo)
    164     else:
    165         try:

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in _deepcopy_tuple(x, memo)
    235     y = []
    236     for a in x:
--> 237         y.append(deepcopy(a, memo))
    238     d = id(x)
    239     try:

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)
    188                             raise Error(
    189                                 "un(deep)copyable object of type %s" % cls)
--> 190                 y = _reconstruct(x, rv, 1, memo)
    191 
    192     memo[d] = y

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in _reconstruct(x, info, deep, memo)
    332     if state is not None:
    333         if deep:
--> 334             state = deepcopy(state, memo)
    335         if hasattr(y, '__setstate__'):
    336             y.__setstate__(state)

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)
    161     copier = _deepcopy_dispatch.get(cls)
    162     if copier:
--> 163         y = copier(x, memo)
    164     else:
    165         try:

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in _deepcopy_dict(x, memo)
    255     memo[id(x)] = y
    256     for key, value in x.iteritems():
--> 257         y[deepcopy(key, memo)] = deepcopy(value, memo)
    258     return y
    259 d[dict] = _deepcopy_dict

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)
    188                             raise Error(
    189                                 "un(deep)copyable object of type %s" % cls)
--> 190                 y = _reconstruct(x, rv, 1, memo)
    191 
    192     memo[d] = y

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in _reconstruct(x, info, deep, memo)
    332     if state is not None:
    333         if deep:
--> 334             state = deepcopy(state, memo)
    335         if hasattr(y, '__setstate__'):
    336             y.__setstate__(state)

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)
    161     copier = _deepcopy_dispatch.get(cls)
    162     if copier:
--> 163         y = copier(x, memo)
    164     else:
    165         try:

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in _deepcopy_dict(x, memo)
    255     memo[id(x)] = y
    256     for key, value in x.iteritems():
--> 257         y[deepcopy(key, memo)] = deepcopy(value, memo)
    258     return y
    259 d[dict] = _deepcopy_dict

/home/XXXX/.anaconda2/lib/python2.7/copy.pyc in deepcopy(x, memo, _nil)
    176                 reductor = dispatch_table.get(cls)
    177                 if reductor:
--> 178                     rv = reductor(x)
    179                 else:
    180                     reductor = getattr(x, "__reduce_ex__", None)

/home/XXXX/.anaconda2/lib/python2.7/site-packages/numpy/core/__init__.pyc in _ufunc_reduce(func)
     89     from pickle import whichmodule
     90     name = func.__name__
---> 91     return _ufunc_reconstruct, (whichmodule(func, name), name)
     92 
     93 

/home/XXXX/.anaconda2/lib/python2.7/pickle.pyc in whichmodule(func, funcname)
    821         if module is None:
    822             continue # skip dummy package entries
--> 823         if name != '__main__' and getattr(module, funcname, None) is func:
    824             break
    825     else:

/home/XXXX/.anaconda2/lib/python2.7/site-packages/seaborn/external/six.pyc in __getattr__(self, attr)
    114         if attr in ("__file__", "__name__") and self.mod not in sys.modules:
    115             raise AttributeError
--> 116         _module = self._resolve()
    117         value = getattr(_module, attr)
    118         setattr(self, attr, value)

/home/XXXX/.anaconda2/lib/python2.7/site-packages/seaborn/external/six.pyc in _resolve(self)
    103 
    104     def _resolve(self):
--> 105         return _import_module(self.mod)
    106 
    107     def __getattr__(self, attr):

/home/XXXX/.anaconda2/lib/python2.7/site-packages/seaborn/external/six.pyc in _import_module(name)
     74 def _import_module(name):
     75     """Import module, returning the module after the last dot."""
---> 76     __import__(name)
     77     return sys.modules[name]
     78 

ImportError: No module named _winreg
Does anyone know why this happens and how I should fix it?
My keras version is 2.0.8, theano version is 0.9.0.
Thanks!
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).