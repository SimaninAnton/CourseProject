farmeh commented on 21 Mar 2016
Hi,
I was trying to train a very simple model using embeddings and LSTM for sentiment prediction.
Basically my input data is a matrix, in which, each row is one sentence,
and each column, is the index of the word in my embedding matrix.
Number of columns is fixed and set to the maximum length of a sentence I notice in the
training set, and I do padding from the left. Assuming that I have 500 sentences,
and maximum seen length of a sentence is 52, then I will have a 500x52 input matrix.
I didn't pay attention to the maximum length of a sentence in the test data.
I just created the input matrix for test data and it became a 200x65 matrix.
Surely, 65 does not agree with 52, but keras didn't complain at all, and I could train, optimize, and evaluate the whole pipeline!
the following code, simply demonstrate my problem:
`import numpy as np ;
from keras.models import Graph ;
from keras.layers import Embedding
import theano.tensor as T ; #for fixing theano error in Graph model ... see: #340
data1 = np.array ([[1,0],[0,1]])
data2 = np.array ([[0,1,0,1],[1,0,1,0]])
E = np.array ([[10,10,10],[20,20,20]])
max_features = E.shape[0]
embedding_size = E.shape[1]
model = Graph();
model.add_input (name="I" , input_shape = (2,)) ;
model.inputs["I"].input = T.imatrix(); ##for fixing theano error in Graph model ... see: #340
model.add_node (Embedding (input_dim = max_features , output_dim = embedding_size , weights=[E]), input="I" , name="E")
model.add_output (name="O", input="E")
model.compile (loss={"O":'mse'}, optimizer="sgd") ;
print model.predict ({"I":data1}) , "\n"
print model.predict ({"I":data2})
`
and the output is:
{'O': array([[[ 20., 20., 20.],
[ 10., 10., 10.]],
   [[ 10.,  10.,  10.],
    [ 20.,  20.,  20.]]])} 
{'O': array([[[ 10., 10., 10.],
[ 20., 20., 20.],
[ 10., 10., 10.],
[ 20., 20., 20.]],
   [[ 20.,  20.,  20.],
    [ 10.,  10.,  10.],
    [ 20.,  20.,  20.],
    [ 10.,  10.,  10.]]])}
I was expecting to get an error when doing prediction for data2, since the input shape of the data2 does not agree with what is defined (input_shape).
Isn't it a bug?
Should I care to set the number of columns for train and test matrices EQUALLY when
crating the matrix, especially if the maximum length of a sentence in test set is bigger than train set?
Thanks in advance.