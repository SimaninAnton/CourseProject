Polychemy commented on 21 Mar 2018 â€¢
edited
Im getting this error on my custom loss function : ValueError: None values not supported.
The out put is a 2d array of binary digits (2000,2).
I need to calculate the accuracy on certain entries only, not the entire set.
Here's my loss function and how i did it:
def getBalance(x_true, x_pred):

    ##Selected entries for calculation
    trade_index = K.tf.not_equal(x_pred[:,1], 0 )
    
    x_true_tradeable  = K.tf.boolean_mask(x_true[:,0], trade_index)
    x_pred_tradeable  = K.tf.boolean_mask(x_pred[:,0], trade_index)
    
    
    cm = K.tf.confusion_matrix(x_true_tradeable, x_pred_tradeable)
    
    
    correctPredictions = cm[0,0]+cm[1,1]
    wrongPredictions = cm[1,0]+cm[0,1]
    TotalTrades = correctPredictions+wrongPredictions
    Accuracy = (correctPredictions/TotalTrades)*100
    
    
    Accuracy = K.tf.cast(Accuracy, K.tf.float32)
    
    return Accuracy
I get the above mentioned error. Here is my model for reference:
model = Sequential()
model.add(Dropout(0.4, input_shape=(train_input_data_NN.shape[1], train_input_data_NN.shape[2])))
model.add(LSTM(30, dropout=0.4, recurrent_dropout=0.4,  return_sequences=False))
model.add(Dense(2))
model.compile(loss='getBalance', optimizer='adam')
history = model.fit(train_input_data_NN, outputs_NN, epochs=50,  batch_size=64, verbose=1, validation_data=(test_input_data_NN, outputs_NN_test))
The inputs are a multi-variant multi-timestep time series.
What might be wrong?