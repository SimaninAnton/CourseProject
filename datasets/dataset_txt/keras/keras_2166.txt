GauravBh1010tt commented on 11 Jun 2017 â€¢
edited
I want to create a model that has multiple layers but updates are performed for a specific layer only depending on the data type. It looks something like this

One way that I have thought of is by passing a variable from the fit function that specifies the variable type. As per Keras, this looks like the following:
    model_temp = {}
    len_data_type = 3
    for i in range(len_data_type):
        name = 'ntn'+str(i)
        mid_pro = Merge(mode='sum')([inpx,inpy]))
        model_temp[i] = Dense(20,name=name)(mid_pro)
    score = Dense(1,activation='tanh')(model_temp[data_type])
    model = Model([inpx,inpy,data_type],score)
Finally, calling the fit or train_on_batch function as
    for i in range(nb_epochs):    
         v1,v2,label_train,data_type = create_batch(data)
         model.fit([v1,v2,data_type],labels_train,batch_size=100)
But this doesn't seem to work. I have tried different ways of passing a constant tensor to the model with no success. May be I am missing something here. Any help is highly appreciated.
Thank you!