ssdf93 commented on 12 May 2016 â€¢
edited
I want to build the network shown in the picture
    question_input = Input(shape=(maxlen,),dtype='int32')
    answer_input = Input(shape=(maxlen,),dtype='int32')
    good_answer_input = Input(shape=(maxlen,),dtype='int32')
    bad_answer_input = Input(shape=(maxlen,),dtype='int32')

    embedding_layers=Embedding(dicSize,length,input_length=maxlen,weights=[embedding])
    question_embeds=embedding_layers(question_input)
    answer_embeds=embedding_layers(answer_input)


    maxpool = Lambda(lambda x: K.max(x, axis=1), output_shape=lambda x: (x[0], x[2]))
    question_maxpool = maxpool(question_embeds)
    answer_maxpool = maxpool(answer_embeds)

    dot = lambda a, b: K.batch_dot(a, b, axes=1)


    similarity = lambda x: dot(x[0], x[1]) / K.sqrt(dot(x[0], x[0]) * dot(x[1], x[1]))

    similarity_value=merge([question_maxpool, answer_maxpool], mode=similarity,output_shape=lambda x: x[0])


    qa_model=Model(input=[question_input, answer_input], output=similarity_value)

    good_output = qa_model([question_input, good_answers])
    bad_output = qa_model([question_input, bad_answers])

    M=0.03
    max_margin_loss = merge([good_output, bad_output], mode=lambda x:K.maximum(1e-6, M - x[0] + x[1]), output_shape=lambda x: x[0])

    training_model = Model(input=[question_input, good_answer_input, bad_answer_input], output=max_margin_loss)

    training_model.compile(loss=lambda y_true, y_pred: y_pred, optimizer='adam')
    print(training_model.layers)
`
Traceback (most recent call last):
File "/Users/insuranceQA-master/rnn.py", line 233, in
build_model(questions,good_answers,bad_answers)
File "/Users/insuranceQA-master/rnn.py", line 172, in build_model
training_model = Model(input=[question_input, good_answer_input, bad_answer_input], output=max_margin_loss)
File "/Library/Frameworks/Python.framework/Versions/3.4/lib/python3.4/site-packages/keras/engine/topology.py", line 1571, in init
'Keras tensors. Found: ' + str(x))
Exception: Output tensors to a Model must be Keras tensors. Found: Elemwise{true_div,no_inplace}.0
`
I think problem may be happened from qa_model to training_model