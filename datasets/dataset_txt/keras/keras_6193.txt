Contributor
PiranjaF commented on 28 Dec 2015
For a ConvNet it can be interesting to find the norm-bounded input that maximizes the activity of a single conv. filter as a way to visualize the filters. This could be done using a black box optimization algorithm with the code from the FAQ.
# with a Sequential model
get_3rd_layer_output = theano.function([model.layers[0].input],
                                       model.layers[3].get_output(train=False))
layer_output = get_3rd_layer_output(X)
However, it would be a substantially easier optimization task if I had the gradient. How can I extract the gradient from the Theano expression and input it into a Python optimization library such as Scipy?
I assume that this is interesting to others as well. I'll gladly do a PR when I've got a working example.