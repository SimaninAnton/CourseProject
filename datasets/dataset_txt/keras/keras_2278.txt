divamgupta commented on 28 May 2017
If we use keras with tensorflow, the output shape of a Conv2DTranspose is undefined even if the input shape is fixed. This problem doesn't happen with Conv2D . This is probably due to a bug in the implementation of Conv2DTranspose.
import tensorflow as tf

config = tf.ConfigProto()
config.gpu_options.allow_growth=True
sess = tf.Session(config=config)

from keras.layers.convolutional import Conv2DTranspose , Conv2D

layer1 = Conv2DTranspose( 8  , (4 , 4) , strides=(1, 1)  , data_format='channels_first'  , input_shape=(3,64,64) )
layer2 = Conv2D( 8 , (4, 4) , strides=(1, 1), input_shape=(3, 64, 64) , data_format='channels_first'  )

BATCH_SIZE = 32
x = tf.placeholder(tf.float32, shape=( BATCH_SIZE , 3, 64 , 64 ))
          
o1 = layer1( x )
o2 = layer2( x )


print o1.get_shape() # Prints (?, 8, ?, ?) , why???
print o2.get_shape() # Prints (32, 8, 61, 61) , which is correct 
5