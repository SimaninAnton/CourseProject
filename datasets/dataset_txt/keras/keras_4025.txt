meera26 commented on 1 Nov 2016
hello
(binary classification)
i have 40,000 samples.
for each sample, input is a 2000 dimension feature vector. each feature has value either 0 or 1.
for each sample, output is one class label either 0 or 1.
i used a simple regression type model
##############################
model=Sequential()
model.add(Dense(1,input_dim=2000,init='normal',activation='sigmoid'))
model.compile(loss='binary_crossentropy',optimizer=SGD(lr=0.0001))
model.fit(xtrain,ytrain,batch_size=32,nb_epoch=80,verbose=1,validation_data=(xval,yval))
##############################
the problem is that among 40,000 samples, very few (5 to 10) samples have class label=1. (class imbalance)
I still want to train a model. However, i am new to keras and i am unable to formulate the problem.
Approach - using batch size = 2. for each batch select one sample with class label 0 and other sample with class label 1. There would be repetitive use of samples with class label 1 but that is okay.
Q1. is this handled by using class_weight in model.fit? Giving more weight to class label1 and less weight to class label0
Q2. is this handled by using sample_weight in model.fit? giving more weight to samples with class label1?
Q3. how do i make the model select a particular sample(i want one with class label1 and other with class label0) in a batch size?
Q4. or shall i do resampling outside keras? however it would take a lot of memory ?