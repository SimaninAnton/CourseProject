mhubrich commented on 7 Aug 2016
I want to create a ConvNet to do Multiple Instance Learning (MIL).
To summarize MIL, "the training set consists of labeled “bags”, each of which is a collection of unlabeled instances. A bag is positively labeled if at least one instance in it is positive, and is negatively labeled if all instances in it are negative. The goal of the MIL is to predict the labels of new, unseen bags."
To keep things simple, one batch of training data corresponds to one bag. This implies that with a batch size of M, one particular bag contains M instances.
Now, the only thing you have to do is to use a suitable loss function. Zhou et al. suggests to use function (1) to compute the error of a bag B (and hence a batch):

where o_j is the actual output of instance j and d the desired output of bag B.
Quoting from Zhou et al., (1) "means that if at least one instance of a positive training bag is perfectly predicted at positive, or all the instances of a negative bag are predicted as negative, then the error on the concerned bag is zero and the weights of the network will not be updated. Otherwise the weights will be updated according to the error on the instance whose corresponding actual output is maximal among all the instances in the bag."
Now it comes to Keras. I'm actually not sure if my implementation of (1) is correct. Also, I'm not sure how Keras deals with the maximum function in backpropagation. As far as I know, the loss function has to be differentiable in order to compute the gradients. But the maximum function is not differentiable. Here is my implementation:
def mil_squared_error(y_true, y_pred):
    return K.tile(K.square(K.max(y_pred) - K.max(y_true)), 16)
where I have a batch size of 16 and my class_mode is 'binary'. There is probably a lot to improve, e.g. I didn't know how to get the length of y_true (but should be equal to 16).
My question is: can I work with such a loss function and is there anything I have to consider? How will backpropagation work this function or (1) in general?