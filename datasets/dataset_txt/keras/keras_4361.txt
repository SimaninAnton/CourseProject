zacstewart commented on 17 Sep 2016
I have a big directory of images named like 00001.jpg. I have an info CSV that maps these filenames to metadata, including their label. I'd like to use flow, but there is too much data for me to load into memory. I'd like to use flow_from_directory, but it seems like unnecessary work to restructure the directories these images are in just to benefit from class inference.
For the time being, I wrote my own generator that cycles through rows in my info CSV and loads batches of images based on the rows in it. This works well, but I miss out on the benefit of data augmentation unless I want to add a lot more code to my generator.
It would be nice if I could write my own generator that fetches images, whether I need to get them from a directory of images, or pull them out of an hdf5 file, or whatever. How the (input_batch, label_batch) gets produced could be no concern of ImageDataGenerator. I propose that ImageDataGenerator implement a new method, flow_from_generator, which takes a generator implementing the same interface as Model.fit_generator.
If there's support for this feature, I'd be willing to take a shot at implementing it.
2