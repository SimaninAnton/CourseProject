ytsaig commented on 22 Oct 2015
I am trying to build a convolutional network to classify 1D data (time series data). Specifically, the input consists of vectors of length 256. I tried using the Convolutional1D layer to construct the network, but ran into trouble with specifying the input dimensions.
I consulted the docs, which state that:
When using this layer (Convolutional1D) as the first layer in a model, either provide the keyword argument input_dim (int, e.g. 128 for sequences of 128-dimensional vectors), or input_shape (tuple of integers, e.g. (10, 128) for sequences of 10 vectors of 128-dimensional vectors).
I opted for specifying the input dimensions via input_dim=256. Here's the full code to construct the network, using a single convolutional layer:
from keras.models import Sequential
from keras.layers.core import Dense, Dropout, Activation, Flatten
from keras.layers.convolutional import Convolution1D, MaxPooling1D

m2 = Sequential()
m2.add(Convolution1D(nb_filter=nb_filter,
                        filter_length=filter_length,
                        border_mode="valid",
                        activation="relu", 
                        input_dim=256))
m2.add(MaxPooling1D(pool_length=2))
m2.add(Flatten())
m2.add(Dense(128))
m2.add(Dropout(0.25))
m2.add(Activation('relu'))
The code fails on the line m2.add(Dense(128)) with the message
TypeError: unsupported operand type(s) for *: 'NoneType' and 'int'
Is there something in the docs that I am missing?
4