asmith26 commented on 3 Jun 2016 â€¢
edited
When datagen.fit(X_train) is called in the cifar10_cnn.py example, shouldn't it be (when data_augmentation=True):
datagen.fit(X_train, augment=True)
as the default value for augment is False?
Also, I am right in thinking when using augment=True the original (i.e. non-augmented - ignoring any normalisation/standardisation) data is not necessarily trained on? If so, I thought data augmentation is a method of artificially increasing the size of your dataset, so shouldn't we additionally be training on the non-augmented data? Thanks
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).