jnwei commented on 5 May 2017
I'm having issues with the K.greater function in the Tensorflow backend. I wrote a custom RNN layer, and one of the functions I am using is shown below. This function is called by the step function of the RNN layer.
When I print and store the output of my cdf_vector, rand_matrix, and compared_output as numpy vectors, I find that compared_output is not equal to np.greater(rand_matrix, cdf_vector).
If in a separate session I make Keras constants out of cdf_vector and rand_matrix, and then run K.greater on the resulting Keras constants, I do get the correct behavior.
Any help would be greatly appreciated.
def output_sampling(self, output, rand_matrix):
        # Generates a sampled selection based on raw output vector 
        # Creates a cdf as a vector and compares against a randomly generated number
        # Requires a pregenerated cdf_mask (lower triangular matrix of 1s)

        sampled_output = output/ K.sum(output, axis=-1, keepdims=True)  # (batch_size, self.units) 
        mod_sampled_output = sampled_output/K.exp(self.temperature)
        norm_exp_sampled_output = mod_sampled_output/ K.sum(mod_sampled_output, axis=-1, keepdims=True)

        cdf_vector = K.dot(norm_exp_sampled_output, self.cdf_mask)
        rand_matrix = K.stack([rand_matrix], axis=0)
        compared_output = K.greater( rand_matrix, cdf_vector)

        maxes = K.sum( K.cast(compared_output, 'int32'), 2)
        final_output = K.one_hot(maxes, self.units)

        return final_output 
[x ] Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
[x ] If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.