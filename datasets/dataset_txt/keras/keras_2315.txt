dkristoffersson commented on 23 May 2017
https://keras.io/getting-started/sequential-model-guide/
1.
from keras.models import Sequential
from keras.layers import Dense, Dropout
from keras.layers import Embedding
from keras.layers import LSTM

model = Sequential()
model.add(Embedding(max_features, output_dim=256))
model.add(LSTM(128))
model.add(Dropout(0.5))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss='binary_crossentropy',
              optimizer='rmsprop',
              metrics=['accuracy'])

model.fit(x_train, y_train, batch_size=16, epochs=10)
score = model.evaluate(x_test, y_test, batch_size=16)
Running results in:
<ipython-input-1-b96b42b04ade> in <module>()
      5 
      6 model = Sequential()
----> 7 model.add(Embedding(max_features, output_dim=256))
      8 model.add(LSTM(128))
      9 model.add(Dropout(0.5))

NameError: name 'max_features' is not defined
from keras.models import Sequential
from keras.layers import Dense, Dropout
from keras.layers import Embedding
from keras.layers import Conv1D, GlobalAveragePooling1D, MaxPooling1D

model = Sequential()
model.add(Conv1D(64, 3, activation='relu', input_shape=(seq_length, 100)))
model.add(Conv1D(64, 3, activation='relu'))
model.add(MaxPooling1D(3))
model.add(Conv1D(128, 3, activation='relu'))
model.add(Conv1D(128, 3, activation='relu'))
model.add(GlobalAveragePooling1D())
model.add(Dropout(0.5))
model.add(Dense(1, activation='sigmoid'))

model.compile(loss='binary_crossentropy',
              optimizer='rmsprop',
              metrics=['accuracy'])

model.fit(x_train, y_train, batch_size=16, epochs=10)
score = model.evaluate(x_test, y_test, batch_size=16)
Running results in:
NameError                                 Traceback (most recent call last)
<ipython-input-2-f5c36da31620> in <module>()
      5 
      6 model = Sequential()
----> 7 model.add(Conv1D(64, 3, activation='relu', input_shape=(seq_length, 100)))
      8 model.add(Conv1D(64, 3, activation='relu'))
      9 model.add(MaxPooling1D(3))

NameError: name 'seq_length' is not defined