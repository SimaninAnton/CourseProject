Contributor
jlherren commented on 20 Aug 2018
It seems that starting with Keras 2.2.1 fit_generator() no longer stops the validation process after validation_steps steps, but continues through the entire sequence. See this example code:
import numpy
from keras import Input, Model
from keras.layers import Dense
from keras.utils import Sequence

class Gen(Sequence):
    def __init__(self, name):
        super().__init__()
        self.name = name

    def __len__(self):
        return 1000

    def __getitem__(self, index):
        print('Generate %s %d' % (self.name, index))
        return numpy.zeros(shape=(10, 10)), numpy.zeros(shape=(10, 2))

i = Input(shape=(10,))
o = Dense(units=2)(i)
m = Model(i, o)
m.compile('sgd', 'mse')
m.fit_generator(
    generator=Gen('training_data'),
    shuffle=False,
    steps_per_epoch=5,
    validation_data=Gen('validation_data'),
    validation_steps=5,
    workers=1,
    max_queue_size=1,
    verbose=0,
)
Which will output
Generate validation_data 0
Generate validation_data 1
Generate training_data 0
Generate training_data 1
Generate training_data 2
Generate training_data 3
Generate training_data 4
Generate training_data 5
Generate training_data 6
Generate validation_data 2
Generate validation_data 3
Generate validation_data 4
Generate validation_data 5
Generate validation_data 6
Generate validation_data 7
...
Generate validation_data 998
Generate validation_data 999
This was working fine in keras 2.2.0.