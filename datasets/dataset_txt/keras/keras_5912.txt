Contributor
qdbp commented on 19 Feb 2016
While working with models.py I got the feeling that there is a lot of unnecessary code duplciation needed to support Sequential and Graph as two fundamentally independent entities.
Logically, a Sequential model is a (useful and common) special case of a Graph; therefore, I believe Sequential should be implemented as a thin convenience wrapper around Graph (in my mind having a private ._graph as a property or similar), and any "heavy lifting" (such as fit, etc.) should be written once only for Graph.
For example, sequential.fit might look something like this:
def fit(self, X, y, ...): out = self._graph.fit({'_x': X, '_y': y}, ...)
I would be willing to work on this, but I'd like to get some feedback in case this idea is obviously stupid or unimplementable for a reason I might have overlooked.
2