lover0258020 commented on 8 Apr 2019 â€¢
edited
I'm trying flatten avg_pool_1 and avg_pool_2. What's happen in my error message. Thanks!
input_dim = X1.shape[1:]
input_a = Input(shape=input_dim) # <class 'tensorflow.python.framework.ops.Tensor'>
input_b = Input(shape=input_dim)
model_a = resnet50.ResNet50(weights="imagenet", include_top=True, input_tensor=input_a)
model_b = resnet50.ResNet50(weights="imagenet", include_top=True, input_tensor=input_b)
for layer in model_a.layers:
if(layer.name != 'fc1000'):
layer.trainable = False
layer.name = layer.name + "_1"
for layer in model_b.layers:
if(layer.name != 'fc1000'):
layer.trainable = False
layer.name = layer.name + "_2"
shared_fc1000 = model_a.get_layer('fc1000_1')
a=Flatten((model_a.get_layer('avg_pool_1').output)
b=Flatten((model_b.get_layer('avg_pool_2').output)
error message
Traceback (most recent call last):
File "xxx.py", line 368, in
a = Flatten()(model_a.get_layer('avg_pool_1').output)
File "/usr/local/lib/python3.5/dist-packages/keras/engine/base_layer.py", line 414, in call
self.assert_input_compatibility(inputs)
File "/usr/local/lib/python3.5/dist-packages/keras/engine/base_layer.py", line 327, in assert_input_compatibility
str(K.ndim(x)))
ValueError: Input 0 is incompatible with layer flatten_1: expected min_ndim=3, found ndim=2