KeironO commented on 4 Dec 2015
Getting the following error when attempting to set strides on the pooling layer.
Traceback (most recent call last):
  File "classifier.py", line 176, in <module>
    model, convout1 = create_conv_net(image_dimensions[0], image_dimensions[1], number_classes)
  File "classifier.py", line 88, in create_conv_net
    model.add(MaxPooling2D((2,2), strides=(2,2)))
  File "/usr/local/lib/python2.7/dist-packages/keras/layers/convolutional.py", line 329, in __init__
    super(MaxPooling2D, self).__init__(**kwargs)
  File "/usr/local/lib/python2.7/dist-packages/keras/layers/core.py", line 23, in __init__
    assert kwarg in {'input_shape'}, "Keyword argument not understood: " + kwarg
AssertionError: Keyword argument not understood: strides
    model = Sequential()

    model.add(Convolution2D(16, 5, 5, border_mode="full", input_shape=(3, height, width)))
    model.add(Convolution2D(16, 5, 5))
    model.add(Activation("relu"))
    model.add(Convolution2D(32, 5, 5))
    model.add(Activation("relu"))
    model.add(Convolution2D(32, 5, 5))
    model.add(Activation("relu"))
    model.add(Convolution2D(128, 5, 5))
    model.add(Activation("relu"))

    model.add(MaxPooling2D((2,2), strides=(2,2)))
    model.add(Dropout(0.25))

    model.add(Convolution2D(256, 5, 5))
    model.add(Activation("relu"))
    model.add(Convolution2D(256, 5, 5))
    model.add(Activation("relu"))
    model.add(Convolution2D(256, 5, 5))
    model.add(Activation("relu"))

    model.add(MaxPooling2D((2,2), strides=(2,2)))
    model.add(Dropout(0.25))

    model.add(Convolution2D(265, 5, 5))
    model.add(Activation("relu"))
    model.add(Convolution2D(265, 5, 5))
    model.add(Activation("relu"))

    model.add(MaxPooling2D((2,2), strides=(4,4)))
    model.add(Dropout(0.25))

    model.add(Flatten())
    model.add(Dense(512))
    model.add(Activation("relu"))
    model.add(Dropout(0.5))
    model.add(Dense(3))
    model.add(Activation("softmax"))

    sgd = SGD(lr=0.01, decay=1e-6, momentum=0.9, nesterov=True)
    model.compile(loss='categorical_crossentropy', optimizer=sgd)