Contributor
wxs commented on 4 Jun 2015
Keras uses Theano's T.nnet categorical_crossentropy function behind the scenes when you use the categorical_crossentropy objective in your model. From the Theano docs:
true_dist - symbolic 2D Tensor OR symbolic vector of ints. In the case of an integer vector argument, each element represents the position of the ‘1’ in a 1-of-N encoding (aka “one-hot” encoding)
Unfortunately if I pass in an integer vector as the true labels to the fit() method of my model I get an error at this line:
loss = self._train(*ins)
which says
ValueError: GpuElemwise. Input dimension mis-match. Input 3 (indices start at 0) has shape[1] == 1, but the output's size on that axis is 800.
I'm not sure I understand Keras' architecture enough to understand what the issue is here, since it appears that self._train here is directly wrapping categorical_crossentropy which should be able to handle the dimension mis-match.
Any ideas how to resolve this?