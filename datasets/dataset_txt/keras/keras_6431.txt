Collaborator
fchollet commented on 15 Nov 2015
Here's the backend branch, introducing theano_backend.py and tensorflow_backend.py: https://github.com/fchollet/keras/tree/backend/keras/backend
It's still a work in progress. It contains 95% of the Theano functionality used in Keras, implemented both in Theano and in TensorFlow, and accessible through a same API.
The general usage in Keras would be as follow (just a trivial example):
from keras import backend as K

x = K.variable(np.random.random((3, 4)))
y = K.placeholder(ndim=2)
z = K.exp(x) + y
f = K.function(inputs=[y], outputs=[z], updates=[(x, x * 2)])
What isn't implemented:
rnn, the equivalent of Theano's scan.
the remaining 5%: as far as I can tell, shape_padright, tensordot, and batched_tensordot, the broadcasting business... we might deal with it by eliminating these from the Keras codebase.
Known issues
conv2d and maxpool2d work separately in TF and Theano, but output different values. It is unclear yet why. Not a big issue unless we want trained models to be portable from one backend to another (which I would prefer, of course).
What's next
adding Theano and TF implementations for rnn
figuring out the conv2d and maxpool2d issue
rewriting Keras to use the backend (K) instead of Theano. In 95% of cases this would be a trivial search-and-replace. The remaining 5% might require extending the backend a little bit, or reimplementing old Theano functionality with existing backend primitives.
If you have cycles to spare, please consider helping out with the rewriting of Keras. It is simple and quite impactful.