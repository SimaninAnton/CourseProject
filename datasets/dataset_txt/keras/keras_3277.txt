ctmakro commented on 7 Feb 2017 â€¢
edited
To efficiently train a GAN, you must be able to update different set of weights w.r.t different losses, in one forward pass. That's why all GAN implemented in Keras are instead using the inefficient method(create two training model, and fit them separately).
As a fan of Keras, after digging thru TF documentation I wrote some code that could update different sets of weights from different models w.r.t. different losses in one forward-backward pass. That's at least 2X faster than the inefficient method.
Implementation detail and explainations: https://ctmakro.github.io/site/on_learning/fast_gan_in_keras.html
However I'm not sure what's the best way to embed this kind of functionality into Keras. Maybe a new GANModel class that takes two model(D and G) as input, then call its fit() method?
3