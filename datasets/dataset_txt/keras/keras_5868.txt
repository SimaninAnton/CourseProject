unography commented on 27 Feb 2016
I want to do multi-label image classification. For this, I am currently getting the pool3 features for each of my images from tensorflow's inception model, and then using those to prepare my data set for classifying it into labels.
Currently, this is my code.
    from sklearn.preprocessing import MultiLabelBinarizer
    from keras.models import Sequential
    from keras.layers.core import Dense
    import pickle
    import numpy as np

    data = pickle.load(open('/data.p','rb'))  # contains pool3 feature vector
    target = pickle.load(open('/target.p','rb'))  # contains multi label as text
    data = np.array(data)
    mlb = MultiLabelBinarizer()
    mlbtarget = mlb.fit_transform(target)
    # mlbtarget.shape is (1001, 238)
    testdata = [data[2],data[3]]
    testdata = np.array(testdata)
    testtarget = [mlbtarget[2],mlbtarget[3]]


    model = Sequential()

    model.add(Dense(output_dim=2048, input_dim=2048, init='uniform', activation='tanh'))
    model.add(Dense(output_dim=238, init='uniform', activation='sigmoid'))
    model.compile(optimizer='adadelta', loss='binary_crossentropy')

    model.fit(np.array(data), mlbtarget)
    objective_score = model.evaluate(testdata, testtarget, batch_size=1)
    print objective_score`  # currently objective_score is 0.0898
Is this approach correct? What things should I be doing better?