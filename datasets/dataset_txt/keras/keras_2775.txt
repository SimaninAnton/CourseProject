fmfn commented on 31 Mar 2017
This seems like a very specific bug, but the following script fails with tensorflow backend.
from keras.layers import LSTM
from keras.models import Sequential
model = Sequential()
model.add(LSTM(units=8, return_sequences=True, input_shape=(10, 100), unroll=False))
model.add(LSTM(units=11, return_sequences=False, implementation=2, unroll=True))
with error message:
  File "../test.py", line 23, in <module>
    model.add(LSTM(units=11, return_sequences=False, implementation=2, unroll=True))
  File "/Users/fnogueira/venvs/general/lib/python3.6/site-packages/keras/models.py", line 455, in add
    output_tensor = layer(self.outputs[0])
  File "/Users/fnogueira/venvs/general/lib/python3.6/site-packages/keras/layers/recurrent.py", line 252, in __call__
    return super(Recurrent, self).__call__(inputs, **kwargs)
  File "/Users/fnogueira/venvs/general/lib/python3.6/site-packages/keras/engine/topology.py", line 556, in __call__
    output = self.call(inputs, **kwargs)
  File "/Users/fnogueira/venvs/general/lib/python3.6/site-packages/keras/layers/recurrent.py", line 298, in call
    input_length=input_shape[1])
  File "/Users/fnogueira/venvs/general/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py", line 2227, in rnn
    input_list = tf.unstack(inputs)
  File "/Users/fnogueira/venvs/general/lib/python3.6/site-packages/tensorflow/python/ops/array_ops.py", line 960, in unstack
    raise ValueError("Cannot infer num from shape %s" % value_shape)
ValueError: Cannot infer num from shape (?, ?, 8)
While it is definitely an odd choice of unroll and implementation combination, I thought it was worth pointing out. It works if both unroll are set to true, of ir implementation is set to 0.
2