isega24 commented on 24 Jan 2019
I have a problem trying to make a Lambda layer that aplies fft2d to a tensor:
from keras.layers import Lambda, Input
import tensorflow as tf


inp = Input(shape=(299,299),dtype='complex64')
tensorTransformada = Lambda(tf.fft2d)(Inp)
Even if I have declared the first tensor as 'complex64', the next error appears:
Traceback (most recent call last):

File "", line 1, in

File "/usr/local/lib/python3.6/dist-packages/keras/engine/base_layer.py", line 474, in call

output_shape = self.compute_output_shape(input_shape)

File "/usr/local/lib/python3.6/dist-packages/keras/layers/core.py", line 648, in compute_output_shape x = self.call(x) File "/usr/local/lib/python3.6/dist-packages/keras/layers/core.py", line 682, in call return self.function(inputs, **arguments)

File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/ops/gen_spectral_ops.py", line 437, in fft2d "FFT2D", input=input, name=name)

File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py", line 609, in _apply_op_helper param_name=input_name)

File "/usr/local/lib/python3.6/dist-packages/tensorflow/python/framework/op_def_library.py", line 60, in _SatisfiesTypeConstraint ", ".join(dtypes.as_dtype(x).name for x in allowed_list)))

TypeError: Value passed to parameter 'input' has DataType float32 not in list of allowed values: complex64, complex128
Please solve this bug
Running on Python 3.6.7, keras 2.2.2, tensorflow 1.11.0 on CPU,