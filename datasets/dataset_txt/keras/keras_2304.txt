acorbe commented on 24 May 2017
In a Keras 2/ TF 1.1 setup I have a NN using a custom regularizer.
Looks to me impossible to load a model saved like so, regardless I pass the regularizer as a custom_object while loading.
Beside the issue per se, that I hope I am signaling properly, is there any workaround?
thanks
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
<ipython-input-8-661638f48d44> in <module>()
      2 
      3 model = keras.models.load_model('./m__2017-05-24_11:52:07__weights.54-0.04.hdf5'
----> 4                                , custom_objects = {"same_conv_filter_penalizer_2MSE" : sac.same_conv_filter_penalizer_2MSE})

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/models.pyc in load_model(filepath, custom_objects)
    230         raise ValueError('No model found in config file.')
    231     model_config = json.loads(model_config.decode('utf-8'))
--> 232     model = model_from_config(model_config, custom_objects=custom_objects)
    233 
    234     # set weights

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/models.pyc in model_from_config(config, custom_objects)
    291                         'Maybe you meant to use '
    292                         '`Sequential.from_config(config)`?')
--> 293     return layer_module.deserialize(config, custom_objects=custom_objects)
    294 
    295 

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/layers/__init__.pyc in deserialize(config, custom_objects)
     44                                     module_objects=globs,
     45                                     custom_objects=custom_objects,
---> 46                                     printable_module_name='layer')

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/utils/generic_utils.pyc in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)
    138                 return cls.from_config(config['config'],
    139                                        custom_objects=dict(list(_GLOBAL_CUSTOM_OBJECTS.items()) +
--> 140                                                            list(custom_objects.items())))
    141             return cls.from_config(config['config'])
    142         else:

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/engine/topology.pyc in from_config(cls, config, custom_objects)
   2372 
   2373         for layer_data in config['layers']:
-> 2374             process_layer(layer_data)
   2375 
   2376         name = config.get('name')

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/engine/topology.pyc in process_layer(layer_data)
   2341             from ..layers import deserialize as deserialize_layer
   2342             layer = deserialize_layer(layer_data,
-> 2343                                       custom_objects=custom_objects)
   2344             created_layers[layer_name] = layer
   2345 

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/layers/__init__.pyc in deserialize(config, custom_objects)
     44                                     module_objects=globs,
     45                                     custom_objects=custom_objects,
---> 46                                     printable_module_name='layer')

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/utils/generic_utils.pyc in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)
    139                                        custom_objects=dict(list(_GLOBAL_CUSTOM_OBJECTS.items()) +
    140                                                            list(custom_objects.items())))
--> 141             return cls.from_config(config['config'])
    142         else:
    143             # Then `cls` may be a function returning a class.

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/engine/topology.pyc in from_config(cls, config)
   1204             A layer instance.
   1205         """
-> 1206         return cls(**config)
   1207 
   1208     def count_params(self):

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/legacy/interfaces.pyc in wrapper(*args, **kwargs)
     86                 warnings.warn('Update your `' + object_name +
     87                               '` call to the Keras 2 API: ' + signature, stacklevel=2)
---> 88             return func(*args, **kwargs)
     89         wrapper._legacy_support_signature = inspect.getargspec(func)
     90         return wrapper

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/layers/convolutional.pyc in __init__(self, filters, kernel_size, strides, padding, data_format, dilation_rate, activation, use_bias, kernel_initializer, bias_initializer, kernel_regularizer, bias_regularizer, activity_regularizer, kernel_constraint, bias_constraint, **kwargs)
    453             kernel_constraint=kernel_constraint,
    454             bias_constraint=bias_constraint,
--> 455             **kwargs)
    456         self.input_spec = InputSpec(ndim=4)
    457 

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/layers/convolutional.pyc in __init__(self, rank, filters, kernel_size, strides, padding, data_format, dilation_rate, activation, use_bias, kernel_initializer, bias_initializer, kernel_regularizer, bias_regularizer, activity_regularizer, kernel_constraint, bias_constraint, **kwargs)
    110         self.kernel_initializer = initializers.get(kernel_initializer)
    111         self.bias_initializer = initializers.get(bias_initializer)
--> 112         self.kernel_regularizer = regularizers.get(kernel_regularizer)
    113         self.bias_regularizer = regularizers.get(bias_regularizer)
    114         self.activity_regularizer = regularizers.get(activity_regularizer)

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/regularizers.pyc in get(identifier)
     76     elif isinstance(identifier, six.string_types):
     77         config = {'class_name': str(identifier), 'config': {}}
---> 78         return deserialize(config)
     79     elif callable(identifier):
     80         return identifier

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/regularizers.pyc in deserialize(config, custom_objects)
     66                                     module_objects=globals(),
     67                                     custom_objects=custom_objects,
---> 68                                     printable_module_name='regularizer')
     69 
     70 

/home/acorbe-gpu/anaconda2/envs/keras2/lib/python2.7/site-packages/keras/utils/generic_utils.pyc in deserialize_keras_object(identifier, module_objects, custom_objects, printable_module_name)
    131             if cls is None:
    132                 raise ValueError('Unknown ' + printable_module_name +
--> 133                                  ': ' + class_name)
    134         if hasattr(cls, 'from_config'):
    135             arg_spec = inspect.getargspec(cls.from_config)

ValueError: Unknown regularizer: same_conv_filter_penalizer_2MSE