unrealwill commented on 8 Feb 2017 â€¢
edited
def BuggyReg():
    inp = Input( batch_shape=(None,10))
    out = ActivityRegularization(100000.0,100000.0)( Dense(100)(inp))
    model= Model([inp],[out])

    #This WORKS fine and takes regularization into account
    #model.compile("adam", "mse")
    #return model

    inp = Input(batch_shape=(None, 10))
    out2 = model(inp)
    model2 = Model([inp],[out2])

    #This doesn't work correctly : regularization is not taken into account
    model2.compile("adam","mse")
    return model2`


m= BuggyReg()
keras/engine/topology.py:379: UserWarning: The `regularizers` property of layers/models is deprecated. Regularization losses are now managed via the `losses` layer/model property.
  warnings.warn('The `regularizers` property of layers/models '

In [4]: m.fit(np.random.randn(10000,10), np.ones((10000,100)))
10000/10000 [==============================] - 0s - loss: 0.7956   SHOULD BE in order of 1000000
A quick search of the warning (which just appeared) points to the previous release note :
#4703
The refactorization of regularization is quite fresh, and I couldn't find any more information to how to obtain the correct behaviour.
I need to be able to compose model, and at the same time apply some regularization.
This bug was quite tricky to catch because some regularization layers like batchNormalization works fine, and inner models worked fine, but combined model was insensitive to regularization.
Can you please advise.
Thank you!
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps