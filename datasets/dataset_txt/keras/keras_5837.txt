KeironO commented on 2 Mar 2016
Hey there,
How does one actually use class_weight on model.fit?
I had originally written the following method to do this, but I'm not entirely sure whether it works or not.
def calculate_class_weights(train_label):
    list = train_label.tolist()

    num_neg = list.count(0)
    num_pos = list.count(1)

    duplicate = num_pos / num_neg

    class_weights={0 : (num_neg * (duplicate)) , 1: num_pos }
    return class_weights
This returns a dictionary of...
{0: 34, 1: 34}
Does anyone have a working example of how to balance 2 classes using the class_weights method?
Thanks,
Keiron.