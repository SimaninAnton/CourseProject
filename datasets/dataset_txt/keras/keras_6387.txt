tunoat commented on 26 Nov 2015
I have an X inputs which is a matrix as following.
[ [sentence], [sentence], [sentence] .....]
Each sentence contain words and each word contain word_idx and my Y outputs are the tagging of each word.
My current code is like this for each word contain word_idx only.
maxlen = 0
for i in X:
if len(i) > maxlen:
maxlen = len(i)
batch_size = 32
X_train = sequence.pad_sequences(X_train, maxlen=maxlen)
X_test = sequence.pad_sequences(X_test, maxlen=maxlen)
Y_train = sequence.pad_sequences(Y_train, maxlen=maxlen)
Y_test = sequence.pad_sequences(Y_test, maxlen=maxlen)
model = Sequential()
model.add(Embedding(len(worddict) , 128, input_length=maxlen))
model.add(LSTM(128))
model.add(Dropout(0.5))
model.add(Dense(maxlen))
model.add(Activation('sigmoid'))
model.compile(loss='mse', optimizer='adam', class_mode="binary")
model.fit(X_train, Y_train, batch_size=batch_size, nb_epoch=4, validation_data=(X_test, Y_test), show_accuracy=True)
score, acc = model.evaluate(X_test, Y_test, batch_size=batch_size, show_accuracy=True)
But the prediction is not accurate enough. So I plan to add part-of-speech along with word_idx for each word. So after do that I am not quite sure what should I changed from my current code other than sequence padding. What should it look like?
Best regards,