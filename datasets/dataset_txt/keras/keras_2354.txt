anirudhdahiya9 commented on 18 May 2017
Hi
I'm making an encoder decoder model for learning sentence/phrase representations. This is my model
model = Sequential()
model.add(Embedding(len(wrd_to_int.keys()) + 1, 100, input_length = cutoff, trainable=False,name="emb"))
model.add(LSTM(100))
model.add(RepeatVector(cutoff, name="rep"))
model.add(LSTM(100, return_sequences=True))
model.add(Dense(len(words)+1, activation='softmax'))

model.compile(loss='categorical_crossentropy',optimizer='rmsprop')
model.fit(data, data, epochs=10 , callbacks=callbacks_list)
When I try to run the program, I get the following error at the line model.fit
ValueError: Error when checking model target: expected act to have 3 dimensions, but got array with shape (21, 15)
To be clear , my input is simply a 2D matrix, each row is basically a list in integers(the words indexed to integers), and my input is same as the output.
For further reference, this is the model summary:
Layer (type)                 Output Shape              Param #
=================================================================
emb (Embedding)              (None, 15, 100)           23400
_________________________________________________________________
lstm1 (LSTM)                 (None, 100)               80400
_________________________________________________________________
rep (RepeatVector)           (None, 15, 100)           0
_________________________________________________________________
lstm2 (LSTM)                 (None, 15, 100)           80400
_________________________________________________________________
act (Dense)                  (None, 15, 234)           23634
=================================================================
Total params: 207,834.0
Trainable params: 184,434.0
Non-trainable params: 23,400.0
_________________________________________________________________
I suspect this dimensionality error comes up due setting up the incoming data in batches(and thus for the outputs), but isn't this supposed to be handled by keras itself?