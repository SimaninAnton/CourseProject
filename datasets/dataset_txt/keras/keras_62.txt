mpad commented on 17 Sep 2019
System information
I'm pointing a line of code in the master of engine/training_utilis.py so I don't think all the system info is relevant...
Have I written custom code : irrelevant
OS Platform and Distribution : irrelevant
TensorFlow backendyes :
TensorFlow version: irrelevant
Keras version: master
Python version: irrelevant
Describe the current behavior
The problem I see is on this line
keras/keras/engine/training_utils.py
Line 419 in 9080613
 return K.mean(score_array) 
from the function weighted_masked_objective(). I understand the goal of this code is to return the weighted average of the losses, where weights are user-given through the sample_weight option of model.fit() function.
Line 417 (score_array *= weights) in this module correctly applies the weights to the scores (losses).
Line 418 is a non-operation (division by 1) if the weights are non-0.
But then to get the weighted average I expect to return K.sum(score_array)/K.sum(weights) which is different than K.mean(score_array)
Describe the expected behavior
The function should return the real weight-averaged losses, not the mean of weights x losses.
Code to reproduce the issue
Hopefully not needed if the diagnostic I have from the 3 lines above is correct. Note I might be overlooking something if the case where the array score_array and/or weights are more complex than 1D arrays (?).