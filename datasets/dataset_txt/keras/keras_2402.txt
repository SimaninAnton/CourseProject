gauss-clb commented on 12 May 2017 â€¢
edited
When I run this code:
from keras.layers import Input, Dense
from keras.models import Model
from keras import backend as K
import tensorflow as tf
import numpy as np

session = tf.Session()
K.set_session(session)

x = tf.placeholder('float32', [None, 1])
x0 = Input(shape = (1,))
y0 = Dense(1)(x0)
model = Model(x0, y0)
y = model(x)
init = tf.global_variables_initializer()

init.run(session = session)
for i in model.layers:
    print(i.get_weights())
print(y.eval(session = session, feed_dict = {x : np.array([[1.]])}))
# for i in model.layers:
#     print(i.get_weights())
the result is correct.
[]
[array([[-0.1085484]], dtype=float32), array([ 0.], dtype=float32)]
[[-0.1085484]]
the weight equals to y.
But When I run this code:
from keras.layers import Input, Dense
from keras.models import Model
from keras import backend as K
import tensorflow as tf
import numpy as np

session = tf.Session()
K.set_session(session)

x = tf.placeholder('float32', [None, 1])
x0 = Input(shape = (1,))
y0 = Dense(1)(x0)
model = Model(x0, y0)
y = model(x)
init = tf.global_variables_initializer()

init.run(session = session)
# for i in model.layers:
#     print(i.get_weights())
print(y.eval(session = session, feed_dict = {x : np.array([[1.]])}))
for i in model.layers:
    print(i.get_weights())
the result is wrong
[[-0.18571448]]
[]
[array([[ 0.15062749]], dtype=float32), array([ 0.], dtype=float32)]
And When I run this code:
from keras.layers import Input, Dense
from keras.models import Model
from keras import backend as K
import tensorflow as tf
import numpy as np

session = tf.Session()
K.set_session(session)

x = tf.placeholder('float32', [None, 1])
x0 = Input(shape = (1,))
y0 = Dense(1)(x0)
model = Model(x0, y0)
y = model(x)
init = tf.global_variables_initializer()

init.run(session = session)
for i in model.layers:
    print(i.get_weights())
print(y.eval(session = session, feed_dict = {x : np.array([[1.]])}))
for i in model.layers:
    print(i.get_weights())
the result is correct too.
[]
[array([[ 1.25365579]], dtype=float32), array([ 0.], dtype=float32)]
[[ 1.25365579]]
[]
[array([[ 1.25365579]], dtype=float32), array([ 0.], dtype=float32)]
What's happened?