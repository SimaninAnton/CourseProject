viksit commented on 25 Nov 2015
When using the tokenizer.texts_to_sequences() function with unicode inputs, it appears that the system breaks here,
File "build/bdist.macosx-10.10-x86_64/egg/keras/preprocessing/text.py", line 104, in texts_to_sequences
  File "build/bdist.macosx-10.10-x86_64/egg/keras/preprocessing/text.py", line 118, in texts_to_sequences_generator
  File "build/bdist.macosx-10.10-x86_64/egg/keras/preprocessing/text.py", line 31, in text_to_word_sequence
TypeError: character mapping must return integer, None or unicode
On further digging, line 31 specifically,
    text = text.translate(maketrans(filters, split*len(filters)))
From the stackoverflow gods [1], it appears that there's a solution for this like so,
def translate_non_alphanumerics(to_translate, translate_to=u'_'):
    not_letters_or_digits = u'!"#%\'()*+,-./:;<=>?@[\]^_`{|}~'
    translate_table = dict((ord(char), translate_to) for char in not_letters_or_digits)
    return to_translate.translate(translate_table)

>>> translate_non_alphanumerics(u'<foo>!')
u'_foo__'
Is this something that would be worth adding, or am I overlooking something obvious?
Thanks!
[1] http://stackoverflow.com/questions/1324067/how-do-i-get-str-translate-to-work-with-unicode-strings
8