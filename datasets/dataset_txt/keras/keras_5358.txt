code-ball commented on 24 Apr 2016
Hi,
I have a model where I get multiple outputs with each having its own loss function. There 3 outputs where 2 of them can use already in-built objective functions while the third one will use the custom objective function written by me. Something like this:
model.compile(optimizer='rmsprop',
loss={'output1': 'binary_crossentropy', 'output2': 'categorical_crossentropy', 'output3':'custom_objective'})
I don't need separate loss weights for each one and also the custom function returns log probability.
In this scenario does the above formulation mean "minimizing joint negative log likelihood"? That is what I want, to minimize the sum of negative log likelihood for all output but I am not sure if the above formulation achieves that.
If not, can someone please share what needs to be done for my case?
Thanks
2