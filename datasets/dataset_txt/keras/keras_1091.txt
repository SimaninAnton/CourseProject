Pcres91 commented on 18 Apr 2018
Using Keras 2.1.5 and tensorflow 1.7.0
Below is the code for my validation generator:
    def validation_generator(self):
        print("Start_of_gen")
        number_of_files = int(self.number_of_validation_files/self.files_in_memory)
        while 1:
            print("start_of_while")
            self.reset_available_files()
            for file_number in range(number_of_files):
                print("start_of_file_loop, self.data_counter =", self.data_counter)
                self.data_counter = 0
                print("Validation_files: {}".format(self.available_validation_file_indices))
                file_data, file_labels, _ = self.get_formatted_data()
                print("len(file_data) =", len(file_data))
                for frame in zip(file_data, file_labels):
                    self.data_counter += 1
                    data = frame[0]
                    label = frame[1]
                    data = data[np.newaxis, :, :, :]
                    label = label[np.newaxis, :, :, :]
                    yield data, label
The data is stored in multiple files with each sample being called a frame, and for each file_number a new file is loaded and the data should be retrieved in self.get_formatted_data() for subsequent frame (the final for loop). I've added in the print statements to show what I'm seeing.
As I understand it, the generator should enter the while() loop, reset the available files, fetch the iterate over the files, and for each file iterate over the frames inside, yielding a piece of data for each frame.
This is what happens correctly for the first epoch, as shown by these printouts:
validation steps = 2000.0
Epoch 1/7
file_list_amplitudes.shape = (1000, 400, 1, 1), file_list_labels.shape = (1000, 400, 1, 1)

 1/10 [==>...........................] - ETA: 33s - loss: 1.0986 - acc: 1.0000
 2/10 [=====>........................] - ETA: 15s - loss: 1.0979 - acc: 1.0000
 3/10 [========>.....................] - ETA: 9s - loss: 1.0973 - acc: 1.0000 
 4/10 [===========>..................] - ETA: 6s - loss: 1.0966 - acc: 1.0000
 5/10 [==============>...............] - ETA: 4s - loss: 1.0959 - acc: 1.0000
 6/10 [=================>............] - ETA: 2s - loss: 1.0953 - acc: 1.0000
 7/10 [====================>.........] - ETA: 1s - loss: 1.0946 - acc: 1.0000
 8/10 [=======================>......] - ETA: 1s - loss: 1.0940 - acc: 1.0000
 9/10 [==========================>...] - ETA: 0s - loss: 1.0933 - acc: 1.0000Start_of_gen
start_of_while
start_of_file_loop, self.data_counter = 0
Validation_files: [6, 0]
file_list_amplitudes.shape = (1000, 400, 1, 1), file_list_labels.shape = (1000, 400, 1, 1)
len(file_data) = 1000
start_of_file_loop, self.data_counter = 1000
Validation_files: [0]
file_list_amplitudes.shape = (1000, 400, 1, 1), file_list_labels.shape = (1000, 400, 1, 1)
len(file_data) = 1000
start_of_while
start_of_file_loop, self.data_counter = 1000
Validation_files: [6, 0]
file_list_amplitudes.shape = (1000, 400, 1, 1), file_list_labels.shape = (1000, 400, 1, 1)
len(file_data) = 1000

10/10 [==============================] - 23s 2s/step - loss: 1.0926 - acc: 1.0000 - val_loss: 4.7751 - val_acc: 0.4375
Immediately after this however, I start seeing this:
Start_of_gen
start_of_while
start_of_file_loop, self.data_counter = 1
Validation_files: [6, 0]
file_list_amplitudes.shape = (1000, 400, 1, 1), file_list_labels.shape = (1000, 400, 1, 1)
len(file_data) = 1000
Start_of_gen
start_of_while
start_of_file_loop, self.data_counter = 1
Validation_files: [6, 0]
file_list_amplitudes.shape = (1000, 400, 1, 1), file_list_labels.shape = (1000, 400, 1, 1)
len(file_data) = 1000
Start_of_gen
start_of_while
start_of_file_loop, self.data_counter = 1
Validation_files: [6, 0]
file_list_amplitudes.shape = (1000, 400, 1, 1), file_list_labels.shape = (1000, 400, 1, 1)
len(file_data) = 1000
Start_of_gen
start_of_while
start_of_file_loop, self.data_counter = 1
Validation_files: [6, 0]
file_list_amplitudes.shape = (1000, 400, 1, 1), file_list_labels.shape = (1000, 400, 1, 1)
len(file_data) = 1000
And this continues indefinitely. it is seemingly just restarting the generator each time, which on top of it doing this indefinitely means the data is going to be just the first frame of the first file in self.available_validation_file_indices.
Can someone explain why this is happening? Is this expected behaviour? I would've expected what's happening in Epoch 1 to continue happening for each subsequent Epoch.
1