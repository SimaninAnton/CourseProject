eyaler commented on 23 Oct 2016
code:
import numpy as np
from keras.layers import Input, merge, Masking, LSTM
from keras.models import Model
rand = lambda *shape: np.asarray(np.random.random(shape) > 0.5, dtype='int32')
inputs
input_a = Input(shape=(3,4))
input_b = Input(shape=(3,4))
masks
masked_a = Masking()(input_a)
masked_b = Masking()(input_b)
masked_a = LSTM(4, return_sequences=True)(masked_a)
three different types of merging
merged_sum = merge([masked_a, masked_b], mode='sum')
merged_concat = merge([masked_a, masked_b], mode='concat', concat_axis=-1)
merged_concat_mixed = merge([masked_a, input_b], mode='concat', concat_axis=-1)
test sum
model_sum = Model([input_a, input_b], [merged_sum])
model_sum.compile(loss='mse', optimizer='sgd')
model_sum.fit([rand(2, 3, 4), rand(2, 3, 4)], [rand(2, 3, 4)], nb_epoch=1)
test concatenation
model_concat = Model([input_a, input_b], [merged_concat])
model_concat.compile(loss='mse', optimizer='sgd')
model_concat.fit([rand(2, 3, 4), rand(2, 3, 4)], [rand(2, 3, 8)], nb_epoch=1)
test concatenation with masked and non-masked inputs
model_concat = Model([input_a, input_b], [merged_concat_mixed])
model_concat.compile(loss='mse', optimizer='sgd')
model_concat.fit([rand(2, 3, 4), rand(2, 3, 4)], [rand(2, 3, 8)], nb_epoch=1)
result:
Using Theano backend.
Using gpu device 0: GeForce GTX 860M (CNMeM is enabled with initial size: 80.0% of memory, cuDNN 5105)
Epoch 1/1
2/2 [==============================] - 0s - loss: 0.6706
<<!! BUG IN FGRAPH.REPLACE OR A LISTENER !!>> <class 'AssertionError'> local_subtensor_merge
ERROR (theano.gof.opt): Optimization failure due to: local_subtensor_merge
ERROR (theano.gof.opt): node: Subtensor{int64:int64:int64}(Subtensor{int64::}.0, ScalarFromTensor.0, ScalarFromTensor.0, ScalarFromTensor.0)
ERROR (theano.gof.opt): TRACEBACK:
ERROR (theano.gof.opt): Traceback (most recent call last):
File "C:\Anaconda34\lib\site-packages\theano\gof\opt.py", line 1962, in process_node
remove=remove)
File "C:\Anaconda34\lib\site-packages\theano\gof\toolbox.py", line 391, in replace_all_validate_remove
chk = fgraph.replace_all_validate(replacements, reason)
File "C:\Anaconda34\lib\site-packages\theano\gof\toolbox.py", line 340, in replace_all_validate
fgraph.replace(r, new_r, reason=reason, verbose=False)
File "C:\Anaconda34\lib\site-packages\theano\gof\fg.py", line 508, in replace
self.change_input(node, i, new_r, reason=reason)
File "C:\Anaconda34\lib\site-packages\theano\gof\fg.py", line 450, in change_input
self.import_r(new_r, reason=reason)
File "C:\Anaconda34\lib\site-packages\theano\gof\fg.py", line 351, in import_r
self.import(variable.owner, reason=reason)
File "C:\Anaconda34\lib\site-packages\theano\gof\fg.py", line 414, in import
self.execute_callbacks('on_import', node, reason)
File "C:\Anaconda34\lib\site-packages\theano\gof\fg.py", line 588, in execute_callbacks
fn(self, _args, *_kwargs)
File "C:\Anaconda34\lib\site-packages\theano\tensor\opt.py", line 1300, in on_import
assert r in self.shape_of
AssertionError
Traceback (most recent call last):
File "C:/Users/eyalg/Dropbox/python/writer/temp.py", line 30, in
model_concat.fit([rand(2, 3, 4), rand(2, 3, 4)], [rand(2, 3, 8)], nb_epoch=1)
File "C:\Anaconda34\lib\site-packages\keras\engine\training.py", line 1092, in fit
self._make_train_function()
File "C:\Anaconda34\lib\site-packages\keras\engine\training.py", line 716, in _make_train_function
*_self._function_kwargs)
File "C:\Anaconda34\lib\site-packages\keras\backend\theano_backend.py", line 787, in function
return Function(inputs, outputs, updates=updates, *_kwargs)
File "C:\Anaconda34\lib\site-packages\keras\backend\theano_backend.py", line 773, in init
*_kwargs)
File "C:\Anaconda34\lib\site-packages\theano\compile\function.py", line 326, in function
output_keys=output_keys)
File "C:\Anaconda34\lib\site-packages\theano\compile\pfunc.py", line 486, in pfunc
output_keys=output_keys)
File "C:\Anaconda34\lib\site-packages\theano\compile\function_module.py", line 1776, in orig_function
output_keys=output_keys).create(
File "C:\Anaconda34\lib\site-packages\theano\compile\function_module.py", line 1458, in init
optimizer_profile = optimizer(fgraph)
File "C:\Anaconda34\lib\site-packages\theano\gof\opt.py", line 98, in call
return self.optimize(fgraph)
File "C:\Anaconda34\lib\site-packages\theano\gof\opt.py", line 87, in optimize
ret = self.apply(fgraph, *args, *_kwargs)
File "C:\Anaconda34\lib\site-packages\theano\gof\opt.py", line 235, in apply
sub_prof = optimizer.optimize(fgraph)
File "C:\Anaconda34\lib\site-packages\theano\gof\opt.py", line 87, in optimize
ret = self.apply(fgraph, _args, *_kwargs)
File "C:\Anaconda34\lib\site-packages\theano\gof\opt.py", line 2415, in apply
lopt_change = self.process_node(fgraph, node, lopt)
File "C:\Anaconda34\lib\site-packages\theano\gof\opt.py", line 1970, in process_node
self.failure_callback(e, self, repl_pairs, lopt, node)
File "C:\Anaconda34\lib\site-packages\theano\gof\opt.py", line 1821, in warn_inplace
return NavigatorOptimizer.warn(exc, nav, repl_pairs, local_opt, node)
File "C:\Anaconda34\lib\site-packages\theano\gof\opt.py", line 1807, in warn
raise exc
File "C:\Anaconda34\lib\site-packages\theano\gof\opt.py", line 1962, in process_node
remove=remove)
File "C:\Anaconda34\lib\site-packages\theano\gof\toolbox.py", line 391, in replace_all_validate_remove
chk = fgraph.replace_all_validate(replacements, reason)
File "C:\Anaconda34\lib\site-packages\theano\gof\toolbox.py", line 340, in replace_all_validate
fgraph.replace(r, new_r, reason=reason, verbose=False)
File "C:\Anaconda34\lib\site-packages\theano\gof\fg.py", line 508, in replace
self.change_input(node, i, new_r, reason=reason)
File "C:\Anaconda34\lib\site-packages\theano\gof\fg.py", line 450, in change_input
self.import_r(new_r, reason=reason)
File "C:\Anaconda34\lib\site-packages\theano\gof\fg.py", line 351, in import_r
self.import(variable.owner, reason=reason)
File "C:\Anaconda34\lib\site-packages\theano\gof\fg.py", line 414, in import
self.execute_callbacks('on_import', node, reason)
File "C:\Anaconda34\lib\site-packages\theano\gof\fg.py", line 588, in execute_callbacks
fn(self, _args, *_kwargs)
File "C:\Anaconda34\lib\site-packages\theano\tensor\opt.py", line 1300, in on_import
assert r in self.shape_of
AssertionError
Process finished with exit code 1