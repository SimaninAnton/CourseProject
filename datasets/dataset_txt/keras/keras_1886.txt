paintkiller commented on 21 Jul 2017
https://github.com/fchollet/keras/blob/master/keras/engine/training.py#L463 is strange.
The code used for weighting is:
    # apply sample weighting
    if weights is not None:
        # reduce score_array to same ndim as weight array
        ndim = K.ndim(score_array)
        weight_ndim = K.ndim(weights)
        score_array = K.mean(score_array, axis=list(range(weight_ndim, ndim)))
        score_array *= weights
        score_array /= K.mean(K.cast(K.not_equal(weights, 0), K.floatx()))
    return K.mean(score_array)
I think the line
        score_array /= K.mean(K.cast(K.not_equal(weights, 0), K.floatx()))
should become
        score_array /= K.mean(weights)
This would make the weighted loss be normalized. For instance, with N samples and weights w[i] with K non-zero weights, the weighted loss is sum(loss[i] * w[i] for i in range(N)) / K.
I think it should instead be sum(loss[i] * w[i] for i in range(N)) / sum(w).
2