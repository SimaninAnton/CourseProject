olix20 commented on 9 May 2017
Hi guys,
I'm working with a set of images and am trying to do on the fly (not from directory) image augmentation.
Previously I used flow_from_directoy and combining it with model.predict_generator worked as expected with predict_generator yielding predictions in batches defined for flow_from_directoy. but I can't get the same behaviour from ImageDataGenerator.flow(X,y).
Here's how i load the data
for f, tags in tqdm(df_train.values, miniters=1000):
    img = cv2.imread('data/train-jpg/{}.jpg'.format(f))
    targets = np.zeros(10) # 10 binary classes, here 0s for simplicity

    x_train.append(cv2.resize(img, target_size))
    y_train.append(targets)
input and output shape:
x_train.shape,y_train.shape
((20239, 3, 100, 100), (20239, 10))
ImageDataGenerator and flow function:
train_gen = image.ImageDataGenerator( 
    rotation_range=0.1,
    width_shift_range=0.1,
    height_shift_range=0.1,
    shear_range=0.1,
    zoom_range=0.1,
    channel_shift_range=0.1,
    horizontal_flip=True,
    vertical_flip=True)

train_batch = train_gen.flow(x_train,y_train,batch_size=64, shuffle=True,seed=2047)
Action .. I was expecting the following to progress in batches of 64 but it advances 1 by 1 with an estimated time of 'quite long'.
predict_generator(train_batch, steps=2*len(X_train) ,verbose=1)
What am i missing? Thanks for tips.