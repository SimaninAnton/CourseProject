Contributor
WindQAQ commented on 5 Nov 2017 â€¢
edited
Hi,
Because of some reasons, I have to change the activation function in LSTM layer, that is, the parameter activation in keras.layers.LSTM(). It is successful to replace it with my custom function. However, when I use keras.layers.Bidirectional() wrapping around the LSTM layer, the error occurs. Here is the code:
>>> from keras.layers import Bidirectional, LSTM
>>> from keras.activations import relu
>>>
>>> def clipped_relu(x):
...     return relu(x, 20)
...
>>> l = Bidirectional(LSTM(256, activation=clipped_relu))
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
  File "/opt/conda/envs/lab508-py36/lib/python3.6/site-packages/keras/layers/wrappers.py", line 257, in __init__
    self.backward_layer = layer.__class__.from_config(config)
  File "/opt/conda/envs/lab508-py36/lib/python3.6/site-packages/keras/engine/topology.py", line 1252, in from_config
    return cls(**config)
  File "/opt/conda/envs/lab508-py36/lib/python3.6/site-packages/keras/legacy/interfaces.py", line 87, in wrapper
    return func(*args, **kwargs)
  File "/opt/conda/envs/lab508-py36/lib/python3.6/site-packages/keras/layers/recurrent.py", line 989, in __init__
    self.activation = activations.get(activation)
  File "/opt/conda/envs/lab508-py36/lib/python3.6/site-packages/keras/activations.py", line 95, in get
    return deserialize(identifier)
  File "/opt/conda/envs/lab508-py36/lib/python3.6/site-packages/keras/activations.py", line 87, in deserialize
    printable_module_name='activation function')
  File "/opt/conda/envs/lab508-py36/lib/python3.6/site-packages/keras/utils/generic_utils.py", line 159, in deserialize_keras_object
    ':' + function_name)
ValueError: Unknown activation function:clipped_relu
>>> l = LSTM(256, activation=clipped_relu) # This is OK
>>> l = Bidirectional(LSTM(256, activation='relu')) # This is OK, too.
It seems that custom function is not seen in the wrapper?