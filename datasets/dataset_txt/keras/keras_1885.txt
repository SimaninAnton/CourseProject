yliu7366 commented on 21 Jul 2017 â€¢
edited
Please make sure that the boxes below are checked before you submit your issue. If your issue is an implementation question, please ask your question on StackOverflow or join the Keras Slack channel and ask there instead of filing a GitHub issue.
Thank you!
[ x] Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
[x ] If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short)
Below is my simple code to use ImageDataGenerator to do some data augmentation. Let's say I have 1000 input cat images, I want to use ImageDataGenerator to augment each image 20 times, so totally I should get 1000*20 = 20,000 augmented images. However, the following code only produces < 10,000 files. The output files have a 'cat_0_xxxx.jpeg' pattern in filenames where xxxx goes from 0 to 9999, does that mean ImageDataGenerator won't go beyond 10,000 files? I would expect it will save 'cat_1_xxxx.jpeg" after saving cat_0_9999.jpeg but that did not happen. Is this a bug?
BTW, I installed Keras using pip: pip install keras, the installed version is keras-2.0.6.tar.gz.
from keras.preprocessing.image import ImageDataGenerator, array_to_img, img_to_array, load_img
import glob
import os, sys
datagen = ImageDataGenerator(
rotation_range=40,
width_shift_range=0.2,
height_shift_range=0.2,
shear_range=0.2,
zoom_range=0.2,
horizontal_flip=True,
fill_mode='nearest')
path = 'test20170721/train/cats'
outPath = 'test20170721/augmentation/cats'
files = glob.glob(path + '/*.jpg')
for file in files:
print file
img = load_img(file)
x = img_to_array(img)
x = x.reshape((1,) + x.shape)
i = 0
for batch in datagen.flow(x, save_to_dir=outPath, save_prefix='cat', save_format='jpeg'):
i += 1
if i > 20:
break