ArmenAg commented on 11 Aug 2016 â€¢
edited
Please make sure that the boxes below are checked before you submit your issue. Thank you!
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
Provide a link to a GitHub Gist of a Python script that can reproduce your issue (or just copy the script here if it is short).
Hello,
I have trained a deep residual learning model based off of the keras resnet example. I now want to visualize filters and apply a deep dream transform to various image's using my trained resnet. I have changed only one part of the deep_dream example code, to reflect the fact that my model's are built not in a flattened manner (sequential) but in a nested manner (functional).
layer_dict = {}
for layer in model.layers:
    if type(layer) is keras.engine.training.Model:
        for i in layer.layers:
            layer_dict[layer.name + i.name] = i
    else:
        layer_dict[layer.name] = layer 
Everything thing else in the deep_dream.py code was kept. But when I run it I receive an error that says
Traceback (most recent call last):
  File "resnet_1_deep_dream.py", line 128, in <module>
    f_outputs = K.function([dream], outputs)
  File "/home/armen/anaconda3/lib/python3.5/site-packages/keras/backend/theano_backend.py", line 665, in function
    return Function(inputs, outputs, updates=updates, **kwargs)
  File "/home/armen/anaconda3/lib/python3.5/site-packages/keras/backend/theano_backend.py", line 651, in __init__
    **kwargs)
  File "/home/armen/anaconda3/lib/python3.5/site-packages/theano/compile/function.py", line 322, in function
    output_keys=output_keys)
  File "/home/armen/anaconda3/lib/python3.5/site-packages/theano/compile/pfunc.py", line 480, in pfunc
    output_keys=output_keys)
  File "/home/armen/anaconda3/lib/python3.5/site-packages/theano/compile/function_module.py", line 1787, in orig_function
    output_keys=output_keys).create(
  File "/home/armen/anaconda3/lib/python3.5/site-packages/theano/compile/function_module.py", line 1439, in __init__
    accept_inplace)
  File "/home/armen/anaconda3/lib/python3.5/site-packages/theano/compile/function_module.py", line 176, in std_fgraph
    update_mapping=update_mapping)
  File "/home/armen/anaconda3/lib/python3.5/site-packages/theano/gof/fg.py", line 181, in __init__
    self.__import_r__(output, reason="init")
  File "/home/armen/anaconda3/lib/python3.5/site-packages/theano/gof/fg.py", line 376, in __import_r__
    self.__import__(variable.owner, reason=reason)
  File "/home/armen/anaconda3/lib/python3.5/site-packages/theano/gof/fg.py", line 418, in __import__
    variable=r)
theano.gof.fg.MissingInputError: An input of the graph, used to compute Elemwise{abs_,no_inplace}(input_10), was not provided and not given a value.Use the Theano flag exception_verbosity='high',for more information on this error.

Backtrace when the variable is created:
  File "resnet_1_deep_dream.py", line 67, in <module>
    model = model_builder.residual_model_128_128(3)
  File "/home/armen/Documents/ai_filter/models/model_builder.py", line 75, in residual_model_128_128
    kernel_sizes=(3, 3), n_skip=2, is_subsample=False, subsample=None))
  File "/home/armen/Documents/ai_filter/models/model_builder.py", line 30, in building_residual_block
    x = Input(shape=(input_shape))
  File "/home/armen/anaconda3/lib/python3.5/site-packages/keras/engine/topology.py", line 1081, in Input
    input_tensor=tensor)
  File "/home/armen/anaconda3/lib/python3.5/site-packages/keras/engine/topology.py", line 1004, in __init__
    name=self.name)
  File "/home/armen/anaconda3/lib/python3.5/site-packages/keras/backend/theano_backend.py", line 54, in placeholder
    x = T.TensorType(dtype, broadcast)(name)
Now the reason behind this is because of the way that resnets are built. Looking at the first couple lines of the code for a residual block.
def building_residual_block(input_shape, n_feature_maps, kernel_sizes=None, n_skip=2, is_subsample=False, subsample=None):
    kernel_row, kernel_col = kernel_sizes
    x = Input(shape=(input_shape))
A new input is created and the theano compiler is asking for an input that represents the input to that residual block.
How would I go about changing the deep_dream.py code for it to be compatible with resnets and nested functional models?
Thank you.
1