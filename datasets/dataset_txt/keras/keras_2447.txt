ShunyuanZ commented on 8 May 2017
So I have a trained model, and I want use it for predicting on test set. Now, i'm testing it on a validation set which was used as validation set during the training of the model. So, it should give me the same result as the validation error/accuracy at the end of the last epoch of training (which is accuracy=0.7).
However, what I found is: the prediction result is as expected if I didn't compile the model before calling model.predict(). But it gave me wired prediction result if I compiled the model (accuracy=0.25!!) before prediction..
I couldn't figure this out. I mean, yes model.predict() doesn't require model compilation. However, it shouldn't change anything if you did compilation. I'm posting my code below, could someone point out what I'm missing here? Thank you!!
Btw, my model was built by adding two FC layers (and two dropout layers) , one output layer on top of a VGG16 network. And I used weights pretrained from VGG16 as my starting point of training. So is it because of the dropout layers that changed someting?
model=VGG16(img_width, img_height) # here is a function to build VGG16 network

model.add(Dense(output_dim=4096, init='uniform',activation='relu', name='newFC1')) # I'm adding two extra FC layers on top of VGG. 
model.add(Dropout(0.5))

model.add(Dense(output_dim=4096, init='uniform', activation='relu', name='newFC2'))
model.add(Dropout(0.5))
Next section, add out-put layer, for a multi-class classification problem.
And load saved weights from trained model.
model.add(Dense(output_dim=4, init='uniform',activation='softmax', name='predictions'))
model.load_weights('trained_myweight.h5') # load previously trained weights
Next section do (optional) model compilation.
from keras.optimizers import SGD

model.compile(
metrics=['accuracy'],
    loss='categorical_crossentropy',
            optimizer=SGD(lr=5e-5, decay=1e-4, momentum=0.9, nesterov=True)
          )
print('Model compiled.')
Then I do prediction, using input sample X
yhat=model.predict(X, batch_size=32, verbose=1)