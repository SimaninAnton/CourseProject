aliostad commented on 1 Nov 2017
I am using Keras with Conv1D to recognise 16 classes of programming languages (github project).
At the training phase, it converges and achieves 0.9999 accuracy but during testing, items for the last class (represented by a one-hot-vector of length 16 with 1 at the last position) always scores zero while all other class achieve 97-99%. The last class was SQL and I removed it and made it down to 15 classes since I thought there was an issue with the quality of my samples but then once down to 15 classes, now F# files always fail being detected and they happen to be the 15th class.
The is nothing special about my code hence I think it could be a Keras related issue.
The whole code is available on the link above - you can run and test by cloning my project. I am bringing the network setup here.
# Setting up the model
graph_in = Input(shape=(sequence_length, number_of_quantised_characters))
convs = []
for i in range(0, len(filter_sizes)):
    conv = Conv1D(filters=num_filters,
                  kernel_size=filter_sizes[i],
                  padding='valid',
                  activation='relu',
                  strides=1)(graph_in)
    pool = MaxPooling1D(pool_size=pooling_sizes[i])(conv)
    flatten = Flatten()(pool)
    convs.append(flatten)

if len(filter_sizes)>1:
    out = Concatenate()(convs)
else:
    out = convs[0]

graph = Model(inputs=graph_in, outputs=out)

# main sequential model
model = Sequential()


model.add(Dropout(dropout_prob[0], input_shape=(sequence_length, number_of_quantised_characters)))
model.add(graph)
model.add(Dense(hidden_dims))
model.add(Dropout(dropout_prob[1]))
model.add(Dense(number_of_classes))
model.add(Activation('softmax'))
model.compile(loss='categorical_crossentropy', optimizer='adadelta', metrics=['accuracy'])