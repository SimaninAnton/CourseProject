Contributor
ahundt commented on 23 Jun 2017 •
edited
Keras Input Tensor API Design Proposal
Executive Summary
Tensors that input data to a Model will run faster, add dataset formats, improve usability, and reduce backend lock-in.
# Data Tensors, for example tf yield ops created by RecordInput,
# which supply dataset images and labels
x_train_batch, y_train_batch = read_and_decode_recordinput(...)
 
# batch tensors are added to an Input layer
# Perhaps this aspect of API usage can be improved?
x_train_input = Input(tensor=x_train_batch)
y_train_input = Input(tensor=y_train_batch)
 
# run training
train_model.fit(x_train_input, y_train_input)
I’d appreciate if you make suggestions and give feedback! It is currently a draft, and comments can be made directly on the Google Doc for the full proposal.
As this is the very first Keras API design review, please be kind. :-)
Thanks for considering my proposal and thanks to those who will become a reviewer or contributor!
HELP WANTED
I need help from CNTK & Theano experts on how those backends might be affected by this proposal. Feel free to add comments directly that can be discussed and incorporated.
REVIEW THE REVIEW OR CREATE A PROPOSAL
Please also either give feedback on the process itself or make your own proposal via the Keras API Design Review Template.
p.s. plaintext link:
https://docs.google.com/document/d/1tf2Nl7wor8rmWPUoxfClLuPLQGqvZryegD7K7-1tTe8/edit?usp=sharing