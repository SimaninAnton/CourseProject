basma-b commented on 9 Jan 2018
I am implementing a model with two loss function as below: the first one is binary_crossentropy and the second one is sparse_categorical_crossentropy. My main output is out and aux output is context_decoded.
dual_encoder = Model([context_input, response_input], [out, context_decoded]) dual_encoder.compile(loss={'main_output':'binary_crossentropy', 'aux_output':'sparse_categorical_crossentropy'}, loss_weights={'main_output': 1., 'aux_output': 0.2}, optimizer=args.optimizer)
Until here everything is fine but when I try to fit my model on my data I get an error.
dual_encoder.fit([train_c, train_r], {'main_output': train_l, 'aux_output': train_c_2nd_turn}, batch_size=args.batch_size, epochs=1, callbacks=[histories], validation_data=([dev_c, dev_r], {'main_output': dev_l, 'aux_output': dev_c_2nd_turn}), verbose=1)
ValueError: Error when checking target: expected aux_output to have 4 dimensions, but got array with shape (1000000, 10, 50)
Although the the aux_output has 3 dimensions instead of 4 because I use sparse_categorical_crossentropy. Can anyone help me solving this problem ?