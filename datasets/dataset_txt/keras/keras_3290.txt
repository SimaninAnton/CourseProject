ktamiola commented on 6 Feb 2017
Expected behaviour:
As signalized in the Keras 1.2.1 manual, LocallyConnected2D layer should behave in the same way as the Convolution2D. I have successfully built and trained networks with Convolution2D layers operating on [N, 1, x, y] type tensors. LocallyConnected2D works without any problems with [N, 3, x, y] type tensors (e.g. RGB images).
Observed behaviour:
Traceback (most recent call last):
  File "tmp_keras_issue.py", line 23, in <module>
    Activation('relu'),
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/keras/models.py", line 273, in __init__
    self.add(layer)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/keras/models.py", line 299, in add
    layer.create_input_layer(batch_input_shape, input_dtype)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/keras/engine/topology.py", line 401, in create_input_layer
    self(x)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/keras/engine/topology.py", line 546, in __call__
    self.build(input_shapes[0])
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/keras/layers/local.py", line 317, in build
    constraint=self.W_constraint)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/keras/engine/topology.py", line 418, in add_weight
    weight = initializer(shape, name=name)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/keras/initializations.py", line 66, in glorot_uniform
    return uniform(shape, s, name=name)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/keras/initializations.py", line 33, in uniform
    return K.random_uniform_variable(shape, -scale, scale, name=name)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/keras/backend/tensorflow_backend.py", line 622, in random_uniform_variable
    low, high, dtype=tf_dtype, seed=seed)(shape)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/init_ops.py", line 171, in _initializer
    return random_ops.random_uniform(shape, minval, maxval, dtype, seed=seed)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/random_ops.py", line 245, in random_uniform
    seed2=seed2)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/ops/gen_random_ops.py", line 220, in _random_uniform
    seed=seed, seed2=seed2, name=name)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/op_def_library.py", line 759, in apply_op
    op_def=op_def)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 2242, in create_op
    set_shapes_for_outputs(ret)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 1617, in set_shapes_for_outputs
    shapes = shape_func(op)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 1568, in call_with_requiring
    return call_cpp_shape_fn(op, require_shape_fn=True)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.py", line 610, in call_cpp_shape_fn
    debug_python_shape_fn, require_shape_fn)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/common_shapes.py", line 660, in _call_cpp_shape_fn_impl
    s = tensor_util.constant_value_as_shape(op.inputs[idx])
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_util.py", line 742, in constant_value_as_shape
    [d if d != -1 else None for d in value]))
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py", line 457, in __init__
    self._dims = [as_dimension(d) for d in dims_iter]
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py", line 378, in as_dimension
    return Dimension(value)
  File "/Users/kamil/anaconda2/lib/python2.7/site-packages/tensorflow/python/framework/tensor_shape.py", line 38, in __init__
    raise ValueError("Dimension %d must be >= 0" % self._value)
ValueError: Dimension -126 must be >= 0
Code to reproduce:
# -*- coding: utf-8 -*-
"""
    Keras | LocallyConnected2D Failure on [1, 128, 128] input tensor
"""

__author__ = 'Kamil Tamiola'

import numpy as np
from keras.models import Sequential
from keras.layers import Dense, Activation, Flatten, LocallyConnected2D

if __name__ == '__main__':

    X = np.ones((4096, 1, 128, 128))
    Y = np.ones((4096, 128))

    batch_size = 128

    model = Sequential([
        LocallyConnected2D(16, 3, 3, input_shape=(1, 128, 128)),
        Flatten(),
        Dense(128),
        Activation('relu'),
    ])

    model.compile(optimizer='adam', loss='mse')
    model.fit(X, Y, nb_epoch=1000, verbose=1,
              batch_size=batch_size, validation_split=0.1)