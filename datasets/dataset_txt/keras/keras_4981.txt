dr-costas commented on 13 Jun 2016 â€¢
edited
Hi,
I have two sequential models, pretrained, and I want to combine them. I think that the most intuitive way would be with the functional API. So, I tried the following:
with open(model_1_name) as f: model_1 = model_from_json(f.read())
with open(model_2_name) as f: model_2 = model_from_json(f.read())

model_1_layers = model_1.layers
overall_input = Input(shape=(None, 40), name='overall_input')

lstm = model_1_layers[0](overall_input)

for layer_index in range(1, len(model_1_layers)): lstm = model_1_layers[layer_index](lstm)

on_top = LSTM(61, return_sequences=True, name='on_top')(lstm)

model_2_layers = model_2.layers
model_2_layer_0 = model_2_layers[0]
on_top = model_2_layer_0(on_top)
model = Model(input=nn_input, output=on_top)
First of all I do not know if this is the correct programmatical way to combine two, pre-trained, sequential models into one.
If the above way is a, or the, correct one, then keras assigns the overall_input as input to the model_2_layer_0 layer.
Any ideas and/or solutions?
Thnx!
3