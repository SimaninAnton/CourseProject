Fheanor commented on 28 Jun 2016 â€¢
edited
Hey !
First, I am really a super beginner in Deep Learning so I might not be to use correct term, I am sorry.
I built a model with 3 layers that work with pictures as datas and int as labels. It is a supervised model.
To load the datas, I build a very larg matrix and each line is a picture.
Then I use the function 'fit' to train the model.
Example :
#Loading some datas in X_train
#Y_train is a matrix of my labels

#Loading part ...

#-----------------------------------

Y_train = np_utils.to_categorical(y_train,nb_classes)

model = Sequential()
model.add(Dense(1, input_shape=(12288,)))
model.add(Activation('relu'))
model.add(Dropout(0.2))
model.add(Dense(512))
model.add(Activation('relu'))
model.add(Dropout(0.2))
model.add(Dense(34074)) 
model.add(Activation('softmax'))

model.compile(loss='categorical_crossentropy',
              optimizer=RMSprop(),
              metrics=['accuracy'])

history = model.fit(X_train, Y_train,
                    batch_size=batch_size, nb_epoch=nb_epoch,
                    verbose=1)
However, when my matrix is too big, I have a memory Error problem when I use "np_utils.to_categorical(..).
So I would like to split my matrix in 2 matrix and then it might work. But I will need to call the "fit" function two times.
Does anyone have any idea if it could work or not ?
Thanks a lot and have a good day