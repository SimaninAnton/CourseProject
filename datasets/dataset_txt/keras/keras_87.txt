yannivain commented on 12 Aug 2019
The data are loaded with flow_from_directory. I watched this issue #3477, and applied the tweaks:
No shuffle
Good order of the images on the FS
Remove transformations
valid_datagen = ImageDataGenerator(rescale=1./255)
valid_generator = valid_datagen.flow_from_directory(
    directory=VALI_PATH,
    target_size=(IMG_SIZE, IMG_SIZE),
    color_mode=COLOR,
    batch_size=batch_size,
    class_mode=CLASS_MODE,
    shuffle=False
)
STEP_SIZE_VALID=valid_generator.n//valid_generator.batch_size+1
I don't have a test dataset and want to print the result of the prediction to draw the confusion matrix. I use the same datas (Validation) during the training and the prediction.
During the training, the model achieve 91.5% of accuracy. The model.evalutate_generator gives me the same accuracy. But during the prediction, I have a completely different accuracy, which is only 86%.
Training Python code:
log = model.fit_generator(generator=train_generator,
                    steps_per_epoch=STEP_SIZE_TRAIN,
                    validation_data=valid_generator,
                    validation_steps=STEP_SIZE_VALID,
                    epochs=epochs,
                    callbacks=callbacks_list,
                    verbose=1)
Evaluate python code:
scores = model.evaluate_generator(generator=valid_generator, steps=STEP_SIZE_VALID, verbose=1)
print('Validating loss:', scores[0])
print('Validating accuracy:', scores[1])
Prediction python code:
valid_generator.reset()
pred=model.predict_generator(valid_generator,
                            steps=STEP_SIZE_VALID,
                            verbose=1)
temp = sum(valid_generator.classes == pred.argmax(axis=1))
accuracy = 100*(temp/valid_generator.n)
print("Test accuracy: %.4f%%" % accuracy)
It runs on jupyter notebook with python 3. Is it an issue or am I missing something ?