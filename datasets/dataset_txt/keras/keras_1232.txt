Jackal93 commented on 19 Feb 2018
I'm having trouble understanding what's going on in the following code, in which i'm reshaping the input from (batch_size, features) to (1, batch_size, features), then feeding this to an LSTM with return_sequences=True (i.e. i'm basically turning the batch into time steps).
I'm under the impression that this should output something with shape (1, time_steps, lstm_units), where batch_size == time_steps, and indeed Keras' model summary confirms this, however the actual output has shape (time_steps, time_steps, lstm_units).
Moreover the output is identical across the first dimension.
import numpy as np
import keras.backend as K
from keras.layers import Input, LSTM, Lambda
from keras.models import Model


batch_size = 2

batch_shape = (batch_size, 5)
inp = Input(batch_shape=batch_shape)
re = Lambda(lambda x: K.reshape(x, (1, batch_size, 5)))
lstm = LSTM(1, stateful=True, return_sequences=True)
out = lstm(re(inp))

model = Model(inputs=inp, outputs=out)

model.summary()

x = np.random.random(batch_shape)

y = model.predict(x, batch_size=batch_size)
print("y.shape:", y.shape)
print('y:', y, sep='\n')
This outputs:
_________________________________________________________________
Layer (type)                 Output Shape              Param #   
=================================================================
input_1 (InputLayer)         (2, 5)                    0         
_________________________________________________________________
lambda_1 (Lambda)            (1, 2, 5)                 0         
_________________________________________________________________
lstm_1 (LSTM)                (1, 2, 1)                 28        
=================================================================
Total params: 28
Trainable params: 28
Non-trainable params: 0
_________________________________________________________________

y.shape: (2, 2, 1)
y:
[[[-0.11784139]
  [-0.16627716]]

 [[-0.11784139]
  [-0.16627716]]]
As i said the output is identical across the first dimension, i.e. -0.11784139 and -0.16627716 are repeated, which seems suspicious as the input is random.
Why is this happening? Why is y.shape not (1,2,1)?