marc88 commented on 6 Dec 2018 â€¢
edited by gabrieldemarmiesse
Hello,
Can anyone help me understand this error please? Am trying to run the code snippet below for a conv2d. The code snippets have been commented for better clarity.
from keras.models import Model
sent_grams = Input(shape=(None,),dtype='int32')
sent_embed = Embedding(23625, 50, input_length=5, trainable=True)(sent_grams)
print(sent_embed.shape) #output: (?, ?, 50)
sent_input = expand_dims(sent_embed,axis=3) # for channels
print(sent_input.shape) # output: (?, ?, 50,1)

# 3 separate convolutions on the same input data 'sent_input'

conv2d_out7= MaxPooling2D(pool_size=(3,1))(Dropout(0.3)(Conv2D(filters=120,kernel_size=(3,50),activation='relu')(sent_input)))
conv2d_out6= MaxPooling2D(pool_size=(4,1))(Dropout(0.3)(Conv2D(filters=120,kernel_size=(2,50),activation='relu')(sent_input)))
conv2d_out5= MaxPooling2D(pool_size=(5,1))(Dropout(0.3)(Conv2D(filters=120,kernel_size=(1,50),activation='relu')(sent_input)))

print(conv2d_out7.shape,conv2d_out6.shape,conv2d_out5.shape)
# output: (?, ?, 1, 120) (?, ?, 1, 120) (?, ?, 1, 120)

# Concatenate the inputs from the above three convolutions

cat_conv = concatenate([conv2d_out7,conv2d_out6,conv2d_out5],axis=3)
print(cat_conv.shape)
#output: (?, ?, 1, 360)

squeezed_cat_conv = keras.backend.squeeze(cat_conv,axis=2)
squeezed_cat_conv2 = keras.backend.squeeze(squeezed_cat_conv,axis=1)
print(squeezed_cat_conv2.shape)
#output: (?, 360)

linear_input = Reshape((10,36))(squeezed_cat_conv2)
print(linear_input.shape)
#output: (?, 10, 36)

# model.add(Dense(5, input_shape=(36,)))
# now the model will take as input arrays of shape (*, 36)
# and output arrays of shape (*, 5)

linear_output = Dense(5,input_shape=(36,),activation='relu')(linear_input)
print(linear_output.shape)
#output: (?, 10, 5)


#Modeling
model = Model(inputs=[sent_grams],outputs=[linear_output])
The last line above gives an error that am unable to understand, as:
AttributeError Traceback (most recent call last)
in ()
66 print(linear_output.shape)
67
---> 68 model = Model(inputs=[sent_grams],outputs=[linear_output])
69
70 # output = concatenate([words, casing,char])
/opt/anaconda3/lib/python3.6/site-packages/keras/legacy/interfaces.py in wrapper(*args, **kwargs)
89 warnings.warn('Update your ' + object_name + ' call to the ' +
90 'Keras 2 API: ' + signature, stacklevel=2)
---> 91 return func(*args, **kwargs)
92 wrapper._original_function = func
93 return wrapper
/opt/anaconda3/lib/python3.6/site-packages/keras/engine/network.py in init(self, *args, **kwargs)
91 'inputs' in kwargs and 'outputs' in kwargs):
92 # Graph network
---> 93 self._init_graph_network(*args, **kwargs)
94 else:
95 # Subclassed network
/opt/anaconda3/lib/python3.6/site-packages/keras/engine/network.py in _init_graph_network(self, inputs, outputs, name)
229 # Keep track of the network's nodes and layers.
230 nodes, nodes_by_depth, layers, layers_by_depth = _map_graph_network(
--> 231 self.inputs, self.outputs)
232 self._network_nodes = nodes
233 self._nodes_by_depth = nodes_by_depth
/opt/anaconda3/lib/python3.6/site-packages/keras/engine/network.py in _map_graph_network(inputs, outputs)
1364 layer=layer,
1365 node_index=node_index,
-> 1366 tensor_index=tensor_index)
1367
1368 for node in reversed(nodes_in_decreasing_depth):
/opt/anaconda3/lib/python3.6/site-packages/keras/engine/network.py in build_map(tensor, finished_nodes, nodes_in_progress, layer, node_index, tensor_index)
1351 tensor_index = node.tensor_indices[i]
1352 build_map(x, finished_nodes, nodes_in_progress, layer,
-> 1353 node_index, tensor_index)
1354
1355 finished_nodes.add(node)
/opt/anaconda3/lib/python3.6/site-packages/keras/engine/network.py in build_map(tensor, finished_nodes, nodes_in_progress, layer, node_index, tensor_index)
1351 tensor_index = node.tensor_indices[i]
1352 build_map(x, finished_nodes, nodes_in_progress, layer,
-> 1353 node_index, tensor_index)
1354
1355 finished_nodes.add(node)
/opt/anaconda3/lib/python3.6/site-packages/keras/engine/network.py in build_map(tensor, finished_nodes, nodes_in_progress, layer, node_index, tensor_index)
1323 ValueError: if a cycle is detected.
1324 """
-> 1325 node = layer._inbound_nodes[node_index]
1326
1327 # Prevent cycles.
AttributeError: 'NoneType' object has no attribute '_inbound_nodes'
Please help.
Thanks