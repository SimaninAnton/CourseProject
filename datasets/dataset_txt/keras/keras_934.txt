Contributor
jlherren commented on 26 Jun 2018
The Dense layer is documented to work with any number of dimensions >= 2. However it fails on 3D tensors if the image_data_format setting is set to channel_first. Here is an example to reproduce on Keras 2.2.0:
# set 'image_data_format' to 'channels_first' in keras.json
import numpy
from keras import Input, Model
from keras.layers import Dense
#input_shape = (2, 3)  # works
input_shape = (2, 3, 5)  # fails
input = Input(batch_shape=input_shape)
output = Dense(units=7)(input)
model = Model(input, output)
model.predict(numpy.zeros(input_shape))
As I understand it, the image_data_format setting is related to convolutional layers and shouldn't affect a dense layer in any way.
Error on theano 1.0.1:
ValueError: GpuElemwise. Input dimension mis-match. Input 1 (indices start at 0) has shape[1] == 7, but the output's size on that axis is 3.
Error on tensorflow 1.8:
ValueError: Dimensions must be equal, but are 3 and 7 for 'dense_1/add' (op: 'Add') with input shapes: [2,3,7], [1,7,1].