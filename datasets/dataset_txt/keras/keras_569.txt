optiluca commented on 3 Dec 2018 â€¢
edited
I'm trying to use a network trained with CuDNNLSTM layers on a CPU - as I understand it this is now a supported scenario if I recreate the network with "simple" LSTM layers and then load the weights (ref. #8307)
Here is a script that as I understand it should work:
https://gist.github.com/optiluca/18629eb8aa74e6043ef857ae0f4cb5da
But:
ValueError: Dimension 0 in both shapes must be equal, but are 400 and 800. Shapes are [400] and [800]. for 'Assign_2' (op: 'Assign') with input shapes: [400], [800].
Did that change ever make it into a release? I'm on keras 2.2.4. I've tried messing with preprocess_weights_for_loading and other things I saw elsewhere, but am failing on all fronts at the minute.
Thanks,
Luca