sergeyf commented on 4 Nov 2015
The following works just fine:
d_in = 10
d_out = 55
weights = np.random.random((d_in,d_out))
model = Sequential()
D = Dense(input_dim=d_in, output_dim=d_out, weights=[weights, np.zeros(d_out)])
model.add(D)
But trying the same thing with Graph results in an error:
model = Graph()
model.add_input(name='input',input_shape=(d_in,))
D = Dense(input_dim=d_in, output_dim=d_out, weights=[weights, np.zeros(d_out)])
model.add_node(D,name='dense', input='input')
Here's the full trace:
Traceback (most recent call last):

  File "<ipython-input-40-c6155a32b3d8>", line 12, in <module>
    model.add_node(D,name='dense', input='input')

  File "build\bdist.win-amd64\egg\keras\layers\containers.py", line 254, in add_node
    layer.set_previous(self.inputs[input])

  File "build\bdist.win-amd64\egg\keras\layers\core.py", line 39, in set_previous
    self.build()

  File "build\bdist.win-amd64\egg\keras\layers\core.py", line 645, in build
    if self.initial_weights is not None:

AttributeError: 'Dense' object has no attribute 'initial_weights'