amanrai commented on 16 Oct 2016
Hi,
I am attempting to merge several Convolution1D layers to perform a sentiment classification task.
Here is my full network:
ngram_filters = [2, 4, 6, 8]
conv_filters = []

for n_gram in ngram_filters:
    sequential = Sequential()
    sequential.add(Convolution1D(nb_filter=nb_feature_maps,
                            filter_length=n_gram,
                            border_mode='same',
                            input_shape=(maxWords,maxFeatures)))
    sequential.add(Activation('relu'))
    sequential.add(MaxPooling1D(pool_length=sequential.output_shape[1]))
    sequential.add(Flatten())


model = Sequential()

merged = Merge(conv_filters, mode='concat')

model.add(merged)

model.add(Dense(model.output_shape[1]))
model.add(Dropout(0.2))
model.add(Activation('relu'))

model.add(Dense(3))
model.add(Activation('softmax'))
When I run this code, I get the following error:
raise Exception('The first layer in a Sequential model must '
Exception: The first layer in a Sequential model must get an input_shape or batch_input_shape argument.
I checked several other issues here, but everyone suggests reading the documentation which states:
pass an input_shape argument to the first layer. This is a shape tuple (a tuple of integers or None entries, where None indicates that any positive integer may be expected). In input_shape, the batch dimension is not included.
However, anytime I try to add an input_shape to the merged layer, I get another error.
TypeError: init() got an unexpected keyword argument 'input_shape'
This second error actually makes sense because the inputs to this layer should be coming from the convolutional layers being merged.
I'm unsure of how to proceed. Any help would be greatly appreciated.