Contributor
tristandeleu commented on 20 Jun 2015
There is an interesting discussion in the Machine Learning subreddit about Keras and other python/theano frameworks like Lasagne, Pylearn2 and Blocks. Here are some extracts:
@dwf: Aside from not being flexible enough for my needs, still no automated unit tests. Just a bunch of scripts that get run with who knows what frequency. That ain't no way to live.
@benanne: Lasagne definitely has a different target audience compared to Keras. Whereas Keras abstracts Theano away (so you only need to know about it if you want to extend it), Lasagne is built to be used in conjunction with Theano, because the latter is such a powerful tool, and we want to expose this power to the user. We're aiming for customisability and Lasagne is definitely geared more to people who want to experiment (e.g. researchers), and people who are already using Theano.
@kastnerkyle: Keras is targeting one group of users, and Theano is meant for a very different group. It is basically analogous to scikit-learn -> numpy : Keras -> Theano. If you are writing new papers on ML (as people who heavily use Theano are) you need additional flexibility, at the cost of additional pain. Applying these things once the math and approach have been fleshed out using a sklearn style estimator is perfect.
@kastnerkyle: Ideally, you could combine this rapid prototyping with an easy transition to "sklearn API" so that people can actually use your model on new data... even if they need to tweak the guts to extend to new code. It is such a huge PITA to reimplement other people's code for sanity checking.
The overall statement here is that on a easy-to-use/high-level to flexible/low-level spectrum, Keras appears to be closer to the former end. That's essentially what it was built for (@fchollet correct me if I'm wrong).
I really like the Model abstraction as it makes the overall code cleaner but on the other hand I also really like the flexibility of Lasagne -- and easier access to layers, parameters sharing. I would like to hear what you think about that (whether you use Keras or other libraries).