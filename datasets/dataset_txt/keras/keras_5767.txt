bkj commented on 12 Mar 2016
I'm trying to implement a loss function with a temperature parameter that changes over time, eg
def my_loss(y_true, y_pred):
  a =  K.mean(K.abs(y_pred - y_true), axis=-1) * temp
  b =  K.mean(K.square(y_pred - y_true), axis=-1) * (1 - temp)
  return a + b
but I can't figure out how to get temp to change inside the function. This does not work (presumably because non-Theano variables get fixed at compile time -- but I'm a Theano novice so that's as far as I can reason)
def temp():
  global temp_
  temp_ -= 0.1
  return temp_

def my_loss(y_true, y_pred):
  a =  K.mean(K.abs(y_pred - y_true), axis=-1) * temp()
  b =  K.mean(K.square(y_pred - y_true), axis=-1) * (1 - temp())
  return a + b
Any help would be much appreciated.
EDIT : Also, if this is the wrong way/place to try to set this kind of temperature parameter, I'm open to other suggestions.