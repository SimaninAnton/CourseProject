jhihn commented on 9 Feb 2018
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/keras-team/keras.git --upgrade --no-deps
If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.
If running on Theano, check that you are up-to-date with the master branch of Theano. You can update with:
pip install git+git://github.com/Theano/Theano.git --upgrade --no-deps
I wrote a script to programmatically generate variations of models and repeatedly evaluate them, reporting the average. Even though I create each model independently I do so in the same python proccess. My machine with 16GB eventually came to a crawl as it entered swap. The initial starting condition of the python process for 1 stand-alone model used less than 200MB. Fortunately, I was running it on a server with more RAM in parallel JIC. That one as 128GB and finished fine. I don't always have access to that server though.
The reason I think this is a Keras problem is because the last iteration had a layer name of input_156 (52 variants * 3 invocations = 156), in the model summary, so I think Keras was keeping all the previous models around. The last input layer should have been 171, (57 total variants * 3 invocations )I had expected each model to start with input_1. I do not keep a reference to the models around. My looping code looks like:
all_results = []
for test in tests:
 results = []
 for iteration in range(repeat):  
  wordvec_conv_train2(reference_scores_json, keras_model, test['kernels'], test['pools'], verbose=False) #saves model in keras_model (filename), so no reference stored
  same, total = compare_outputs(keras_model, reference_scores_json, input_csv, input_column, verbose=False) #creates model from keras_model filename
  result = {'same':same, 'total': total}
  result.update(test)
  results.append(result)
  print 'result:', iteration, json.dumps(result, sort_keys=True)
 avg_result = {}
 avg_result.update(test)
 avg_result.update({'same': sum([result['same'] for result in results])/ repeat, 'total': results[0]['total']})
 all_results.append(avg_result)
How can I reset keras to only keep one model around? (Or whatever I need to make sure it only has one model.