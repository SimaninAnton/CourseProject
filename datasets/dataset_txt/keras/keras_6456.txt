vict0rsch commented on 9 Nov 2015
Hi everyone,
my aim is to predict a binary class ('good' or 'bad') from 2 seconds of a 250Hz signal (so 500 points as input).
I tried the following code :
from keras.models import Sequential
from keras.layers.core import Dense, Activation
from keras.layers.convolutional import Convolution1D
from keras.layers.convolutional import MaxPooling1D
from keras.layers.core import Flatten
from keras.optimizers import RMSprop
from network_fullyconnected import load_data_quality


x_train, x_test, y_train, y_test = load_data_quality()
mod = Sequential()
mod.add(
    Convolution1D(5, 25, input_shape=(500, 1))
)
mod.add(
    Activation('relu')
)
mod.add(
    MaxPooling1D()
)
mod.add(
    Flatten()
)
mod.add(
    Dense(500)
)
mod.add(
    Activation('relu')
)
mod.add(
    Dense(2, init='he_normal')
)
mod.add(
    Activation('softmax')
)
mod.compile(
    loss='mse', optimizer=RMSprop()
)
mod.fit(
    x_train, y_train, nb_epoch=100, batch_size=128,
    show_accuracy=True, verbose=2
)
mod.evaluate(
    x_test, y_test, batch_size=128, show_accuracy=True
)
I get the following error:
Epoch 1/100
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
/home/test_conv_1D.py in <module>()
     39 mod.fit(
     40     x_train, y_train, nb_epoch=100, batch_size=128,
---> 41     show_accuracy=True, verbose=2
     42 )
     43 # mod.evaluate(

/usr/local/lib/python2.7/dist-packages/Keras-0.2.0-py2.7.egg/keras/models.pyc in fit(self, X, y, batch_size, nb_epoch, verbose, callbacks, validation_split, validation_data, shuffle, show_accuracy, class_weight, sample_weight)
    487                          verbose=verbose, callbacks=callbacks,
    488                          val_f=val_f, val_ins=val_ins,
--> 489                          shuffle=shuffle, metrics=metrics)
    490
    491     def predict(self, X, batch_size=128, verbose=0):

/usr/local/lib/python2.7/dist-packages/Keras-0.2.0-py2.7.egg/keras/models.pyc in _fit(self, f, ins, out_labels, batch_size, nb_epoch, verbose, callbacks, val_f, val_ins, shuffle, metrics)
    208                 batch_logs['size'] = len(batch_ids)
    209                 callbacks.on_batch_begin(batch_index, batch_logs)
--> 210                 outs = f(*ins_batch)
    211                 if type(outs) != list:
    212                     outs = [outs]

/usr/local/lib/python2.7/dist-packages/theano/compile/function_module.pyc in __call__(self, *args, **kwargs)
    784                         s.storage[0] = s.type.filter(
    785                             arg, strict=s.strict,
--> 786                             allow_downcast=s.allow_downcast)
    787
    788                     except Exception as e:

/usr/local/lib/python2.7/dist-packages/theano/tensor/type.pyc in filter(self, data, strict, allow_downcast)
    175             raise TypeError("Wrong number of dimensions: expected %s,"
    176                             " got %s with shape %s." % (self.ndim, data.ndim,
--> 177                                                         data.shape))
    178         if not data.flags.aligned:
    179             try:

TypeError: ('Bad input argument to theano function with name
"build/bdist.linux-x86_64/egg/keras/models.py:401"  at index 0(0-based)', 
'Wrong number of dimensions: expected 3, got 2 with shape (128, 500).') 
Thanks to issue#870 my error has moved from executing mod.add(Dense(500)) to the fitting part of my code (within Convolutional1D I changed input_dim=500 to input_shape=(500,1)) but I am stuck here and do not know what to do...
Thank you all!