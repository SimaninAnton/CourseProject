detag17 commented on 19 Sep 2017 â€¢
edited
Instead of this code
data = mnist.load_mnist()

x_train_batch, y_train_batch = tf.train.shuffle_batch(
    tensors=[data.train.images, data.train.labels.astype(np.int32)],
    batch_size=batch_size,
    capacity=capacity,
    min_after_dequeue=min_after_dequeue,
    enqueue_many=enqueue_many,
    num_threads=8)
I'm using this code
def read_and_decode(filename_queue):
    reader = tf.TFRecordReader()
    _, serialized_example = reader.read(filename_queue)

    features = tf.parse_single_example(
        serialized_example,
        features={
            'label': tf.FixedLenFeature([8], tf.int64),
            'image': tf.FixedLenFeature([150528], tf.float32)
        })
    label = features['label'][1:]
    image = features['image']
    image = tf.reshape(image, [224, 224, 3])
    image = tf.cast(image, tf.float32) / 255

    return image, label

filename_list = glob.glob(os.path.join(train_dir, '*.tfrecords'))
filename_queue = tf.train.string_input_producer(filename_list, num_epochs=epochs)
image, label = read_and_decode(filename_queue)

x_train_batch, y_train_batch = tf.train.shuffle_batch(
[image, label],
batch_size=batch_size,
num_threads=8,
capacity=2000 + 3 * batch_size,
min_after_dequeue=2000,
enqueue_many=False)`
The rest of the code remains the same.
Error-
OutOfRangeError (see above for traceback): RandomShuffleQueue '_1_shuffle_batch/random_shuffle_queue' is closed and has insufficient elements (requested 128, current size 0)
         [[Node: shuffle_batch = QueueDequeueManyV2[component_types=[DT_FLOAT, DT_INT64], timeout_ms=-1, _device="/job:localhost/replica:0/task:0/cpu:0"](shuffle_batch/random_shuffle_queue, shuffle_batch/n)]]
I am missing something but don't know what.