Contributor
flomlo commented on 2 Sep 2017 â€¢
edited
So, in recurrent.py is a piece of batshit-crazy code:
def get_initial_state(self, inputs):
    # build an all-zero tensor of shape (samples, output_dim)
    initial_state = K.zeros_like(inputs)  # (samples, timesteps, input_dim)
    initial_state = K.sum(initial_state, axis=(1, 2))  # (samples,)
    initial_state = K.expand_dims(initial_state)  # (samples, 1)
    initial_state = K.tile(initial_state, [1, self.units])  # (samples, output_dim)
    initial_state = [initial_state for _ in range(len(self.states))]
return initial_state
I do understand that K.shape is no solution for this mess as it needs to evaluate a graph at build time (not nice), but wouldnt K.int_shape solve the problem quite nicely? Kinda like that:
def get_initial_state(self, inputs):
    # build an all-zero tensor of shape (samples, output_dim)
    samples = K.int_shape(inputs)[0]
    initial_state = K.zeros(shape=(samples, self.units))  # (samples, output_dim)
return initial_state    
Or is there an issue I'm overlooking?
Otherwise im tempted to cook up a patch in a minute.
Check that you are up-to-date with the master branch of Keras. You can update with:
pip install git+git://github.com/fchollet/keras.git --upgrade --no-deps
If running on TensorFlow, check that you are up-to-date with the latest version. The installation instructions can be found here.