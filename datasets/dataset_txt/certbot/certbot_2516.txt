Contributor
schoen commented on 23 Jan 2016
We received a proposal to separate private keys from public keys at a higher level of the directory hierarchy. This can have security advantages for some jailing/isolation mechanisms, by limiting on a directory basis what software can access the private keys or when.
Some of the code in storage.py currently assumes that the archive versions of the four managed objects are located in the same directory, and may also make the same assumption about the live versions. The main reason for this assumption has to do with determining what the currently deployed lineage version is, and also identifying what versions of a lineage exist.
A good first step would be to modify storage.py to eliminate these assumptions so that, if we had a lineage that was subdivided across public and private directory hierarchies, things wouldn't break. A subsequent step would be to figure out whether we can create hierarchies that are split this way and how to deal with legacy or migration issues from the already pretty large installed base of users who use the old structure.