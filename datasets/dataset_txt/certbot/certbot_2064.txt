Contributor
cowlicks commented on 26 May 2016
When I run boulder start on master:
(venv)âžœ  ~/github/letsencrypt git:(master) ./tests/boulder-start.sh
+ git clone -b docker-integration https://github.com/letsencrypt/boulder
Cloning into 'boulder'...
remote: Counting objects: 23370, done.
remote: Compressing objects: 100% (88/88), done.
remote: Total 23370 (delta 40), reused 0 (delta 0), pack-reused 23280
Receiving objects: 100% (23370/23370), 18.37 MiB | 452.00 KiB/s, done.
Resolving deltas: 100% (14269/14269), done.
Checking connectivity... done.
+ cd
+ sed -i 's/FAKE_DNS: .*/FAKE_DNS: 172.17.42.1/' docker-compose.yml
sed: can't read docker-compose.yml: No such file or directory
./tests/boulder-start.sh: line 9: ./start.py: No such file or directory
The problem:
boulder-start.sh calls the boulder-fetch.sh script.
boulder-fetch.sh tries to git clone boulder into the $BOULDERPATh directory here. But that isn't set anywhere. So it just it just goes in the certbot directory.
We pop back to boulder-start.sh, where we cd $GOPATH/src/github.com/letsencrypt/boulder because this used to be where boulder would go, back when we got boulder with go get. So this directory either doesn't exist or is empty (my case), or has an old copy of boulder.
Try to run start.py, but it isn't there so fail.
Since we need to get a special branch, I don't think we could use go get. So we need to set $BOULDERPATH properly. Probably to $GOPATH/src/github.com/letsencrypt/ in boulder-start.sh.