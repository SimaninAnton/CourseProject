thetruthger commented on 6 Apr 2018 â€¢
edited
I ran into an issue while testing the new wildcard feature of the acme-v02 endpoint in manual mode.
I was trying to create a certificate including a domain example.com and a wildcard *.example.com
Now the certbot runs the auth hook for each entered canonical name and THEN runs the validation.
So it's creating the TXT-Record for _acme-challenge.example.com for the first domain and then creates the same record with the second keys before validating the domains and then the validation fails for at least one CN since letsencrypt isn't able to differenciate which key is for which CN.
Is it possible do make certbot run the validations seperately, like: run auth-hook, validate, cleanup, run auth-hook, validate, cleanup?
Creating to different certificates with one CN example.com and the other one with *.example.com runs without any problems, but i would like to have both in one certificate if that is even possible.
My operating system is (include version):
Tested on Ubuntu 14.04 and Ubuntu 16.04
I installed Certbot with (certbot-auto, OS package manager, pip, etc):
Tested with certbot-auto and the one from the APT packet manager
I ran this command and it produced this output:
Command:
certbot-auto certonly \
    --manual \
    --preferred-challenge dns-01 \
    --manual-auth-hook /my/manual/auth-hook \
    --manual-cleanup-hook /my/manual/cleanup-hook \
    --server https://acme-v02.api.letsencrypt.org/directory' \
    -d domain.com \
    -d *.domain.com
Certbot's behavior differed from what I expected because:
As described above, it ran all the auth-hooks at first, then all validations, then all cleanup-hooks.
I expected it to run the first auth-hook, then the first validation, then the first cleanup, and then continues with the next canonical name.
Here is a Certbot log showing the issue (if available):
Logs are stored in /var/log/letsencrypt by default. Feel free to redact domains, e-mail and IP addresses as you see fit.
Here is the relevant nginx server block or Apache virtualhost for the domain I am configuring:
I deploy my certs manually, so the nginx server blocks are not relevant for this issue.