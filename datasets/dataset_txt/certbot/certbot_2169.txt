jvanasco commented on 22 Apr 2016
let's assume i create a multi-domain certificate with the letsencrypt client
./letsencrypt-auto certonly --standalone \
    -d example.com \
    -d foo.example.com \
    -d example2.com
That will store into /etc/letsencrypt the following core files (and some others):
archive
/etc/letsencrypt/archive/{DOMAIN}/cert1.pem
/etc/letsencrypt/archive/{DOMAIN}/chain1.pem
/etc/letsencrypt/archive/{DOMAIN}/fullchain1.pem
/etc/letsencrypt/archive/{DOMAIN}/privkey1.pem
live
/etc/letsencrypt/live/{DOMAIN}/cert.pem
/etc/letsencrypt/live/{DOMAIN}/chain.pem
/etc/letsencrypt/live/{DOMAIN}/fullchain.pem
/etc/letsencrypt/live/{DOMAIN}/privkey.pem
Unless you use openssl x509 to decode the cert, there's no easy way to tell what is on a cert because only one DOMAIN appears in the directory path. This makes finding the cert for a specific domain rather difficult, because every active cert must be analyzed to find the right certificate.
So I have a small suggestion:
Add an info.txt / info1.txt file to the directories which simply contains the following:
signed: <timestamp>
expires: <timestamp>
domains: <list of domains>
This would allow someone to quickly grep the live/* folders for data on which certificate is where.
Another crazier solution would be to create a domains archive that has directory for each domain, and the contents are just symlinks to files in the /archive/. using an info.txt would be simpler though...
grep foo.example.com live/*/info.txt