donpotat commented on 4 Dec 2017
Here's the error that I'm getting:
ERR_CONNECTION_CLOSED
Here is the relevant nginx server block or Apache virtualhost for the domain I am configuring:
server {
    listen 80;
    listen [::]:80;

    root (HIDDEN);
    index index.php index.html index.htm index.nginx-debian.html;

    server_name (HIDDEN);

    location / {
        try_files $uri $uri/ =404;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/run/php/php7.0-fpm.sock;
    }

    location ~ /\.ht {
        deny all;
    }

    # Don't hint these as folders
    rewrite ^/(content|site|kirby)$ /error last;

    # block content
    rewrite ^/content/(.*).(txt|md|mdown)$ /error last;

   # block all files in the site and kirby folder from being accessed directly
   rewrite ^/(site|kirby)/(.*)$ /error last;

   # removes trailing slashes (prevents SEO duplicate content issues)
   if (!-d $request_filename) {
     rewrite ^/(.+)/$ /$1 permanent;
   }

   # Panel URL
   location ~ /panel { # with the ~
     index index.php;
     try_files $uri $uri/ /panel/index.php?$uri&$args;
   }

   # site links
   location ~ / {
     try_files $uri $uri/ /index.php?$uri&$args;
   }

   # Prevent clients from accessing hidden files (starting with a dot)
   # This is particularly important if you store .htpasswd files in the site hierarchy
   location ~ (?:^|/)\. {
     deny all;
   }

   # Prevent clients from accessing to backup/config/source files
   location ~ (?:\.(?:bak|config|sql|fla|psd|ini|log|sh|inc|swp|dist)|~)$ {
     deny all;
   }


    listen 443 ssl; # managed by Certbot
ssl_certificate (HIDDEN)
ssl_certificate_key (HIDDEN)
ssl_session_cache shared:le_nginx_SSL:1m; # managed by Certbot
ssl_session_timeout 1440m; # managed by Certbot

ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # managed by Certbot
ssl_prefer_server_ciphers on; # managed by Certbot

ssl_ciphers (HIDDEN)




    # Redirect non-https traffic to https
    # if ($scheme != "https") {
    #     return 301 https://$host$request_uri;
    # } # managed by Certbot



}

server {
  server_name (HIDDEN);
  return 301 $scheme://(HIDDEN).org.uk$request_uri;

  # For pre-0.8.42 installations:
  # rewrite ^ $scheme://(HIDDEN).org.uk$request_uri? permanent;
}

server {
  server_name (HIDDEN).co.uk www.(HIDDEN).co.uk;
  return 301 $scheme://(HIDDEN).org.uk$request_uri;

  # For pre-0.8.42 installations:
  # rewrite ^ $scheme://(HIDDEN).org.uk$request_uri? permanent;
}
Any ideas?