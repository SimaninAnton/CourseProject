ibizista commented on 7 Jul 2017
My operating system is (include version):
Debian 8.7
I installed Certbot with (certbot-auto, OS package manager, pip, etc):
certbot-auto
I ran this command and it produced this output:
(I've changed the domain and IP)
certbot-auto certonly -n -d example.example.com --standalone --renew-by-default
Saving debug log to /var/log/letsencrypt/letsencrypt.log
Renewing an existing certificate
Performing the following challenges:
tls-sni-01 challenge for example.example.com
Waiting for verification...
Cleaning up challenges
Failed authorization procedure. example.example.com (tls-sni-01): urn:acme:error:unauthorized :: The client lacks sufficient authorization :: Incorrect validation certificate for tls-sni-01 challenge. Requested 852ba7cdb5c08e5cb264f2e47f203653.3c1752edd065662535953644bf49d80f.acme.invalid from 69.187.94.163:443. Received 2 certificate(s), first certificate had names "example.example.com"
IMPORTANT NOTES:
The following errors were reported by the server:
Domain: example.example.com
Type: unauthorized
Detail: Incorrect validation certificate for tls-sni-01 challenge.
Requested
852ba7cdb5c08e5cb264f2e47f203653.3c1752edd065662535953644bf49d80f.acme.invalid
from 69.187.94.163:443. Received 2 certificate(s), first
certificate had names "example.example.com"
To fix these errors, please make sure that your domain name was
entered correctly and the DNS A/AAAA record(s) for that domain
contain(s) the right IP address.
I'm using a haproxy that catch all
/.well-known/acme-challenge
And send it to the server that manage the certs
Certbot's behavior differed from what I expected because:
I've created the certificate in the same way succesfully
Haproxy manage diferents certs for the same IP, but, its working right if I use firefox or chrome.
Here is a Certbot log showing the issue (if available):
Logs are stored in /var/log/letsencrypt by default. Feel free to redact domains, e-mail and IP addresses as you see fit.
Here is the relevant HAPROXY server block for the domain I am configuring:
acl letsencrypt path_beg -i /.well-known/acme-challenge
rspadd Strict-Transport-Security:\ max-age=31536000;\ includeSubDomains;\ preload
use_backend letsencrypt_server if letsencrypt