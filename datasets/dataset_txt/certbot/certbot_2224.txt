eleumik commented on 10 Apr 2016
Hi,
Using --apache I selected the 'safe' option to always use HTTPS, then I went with my browser to test it, everything fine.
Problems started when I wanted to remove this option (because of IE6 not working). Firefox and Chrome strong cache the redirect and do not hit anymore the http version of the site, going directly to https. The effect is that a browser that got the redirect once does not go anymore to the http version of the site. If I use an other browser all is fine.
I tried to solve the problem with Firefox just waiting (days), then disabling / clearing the cache but still not succeeding, see the many "does not work for me" in http://superuser.com/questions/467999/clear-301-redirect-cache-in-firefox
I read more about it in http://getluky.net/2010/12/14/301-redirects-cannot-be-undon/
If you’re lucky, this is an intranet app and you can instruct all users to manually clear their browser caches. If it’s public and this was a big redesign, your users may never even be able to get to a valid page if you just dump the old files on the webserver and they’re all redirected via 301s.
Is there a reason to use a permanent 301 redirect ? Looks like it can cause problems if one wants to go back to http.
The alternative would be using 302.
To use 302, the output Apache configuration should be changed in this way:
RewriteRule ^ https://%{SERVER_NAME}%{REQUEST_URI} [L,QSA,R=302]
I read now that there are search engines related reasons to use 301, see https://www.hochmanconsultants.com/301-vs-302-redirect/ so maybe it could be an idea to allow both options, 302 for trying, and 301 once a decision has been taken, otherwise I suggest to use 302 since 301 caused some troubles to me.