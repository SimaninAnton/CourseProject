Contributor
craigiansmith commented on 7 Dec 2016
Running certbot 0.10.0.dev0 on Ubuntu 16.04.1 LTS I ran
./tests/boulder-integration.sh && echo OK || echo FAIL. I have cloned
boulder manually and started it with docker-compose and added the DNS entries
to my /etc/hosts file.
The first time I ran this, it ran through the integration tests and finished
by echoing OK.
I ran it a second time, with no changes, and expected the same results.
What actually happened was that it echoed FAIL.
OUTPUT
At the end of the output, just prior to the FAIL:
+ kill 10386
./tests/boulder-integration.sh: 41: kill: No such process
Line 41 of tests\boulder-integration tries to kill a python SimpleHTTPServer.
Earlier in the ouput appears:
+ readlink=readlink
+ python_server_pid=10386
+ common --domains le1.wtf --preferred-challenges tls-sni-01 auth
+ common_no_force_renew --renew-by-default --domains le1.wtf --preferred-challenges tls-sni-01 auth
+ certbot_test_no_force_renew --authenticator standalone --installer null --renew-by-default --domains le1.wtf --preferred-challenges tls-sni-01 auth
+ + certbot --server http://localhost:4000/directory --no-verify-ssl --tls-sni-01-port 5001 --http-01-portpython 5002 -m --manual-test-mode SimpleHTTPServer --config-dir 5002 /tmp/leitd1DP/conf
 --work-dir /tmp/leitd1DP/work --logs-dir /tmp/leitd1DP/logs --non-interactive --no-redirect --agree-tos --register-unsafely-without-email --debug -vv --authenticator standalone --installer null --renew-by-default --domains le1.wtf --preferred-challenges tls-sni-01 auth
Traceback (most recent call last):
  File "/usr/lib/python2.7/runpy.py", line 174, in _run_module_as_main
    "__main__", fname, loader, pkg_name)
  File "/usr/lib/python2.7/runpy.py", line 72, in _run_code
    exec code in run_globals
  File "/usr/lib/python2.7/SimpleHTTPServer.py", line 235, in <module>
    test()
  File "/usr/lib/python2.7/SimpleHTTPServer.py", line 231, in test
    BaseHTTPServer.test(HandlerClass, ServerClass)
  File "/usr/lib/python2.7/BaseHTTPServer.py", line 606, in test
    httpd = ServerClass(server_address, HandlerClass)
  File "/usr/lib/python2.7/SocketServer.py", line 417, in __init__
    self.server_bind()
  File "/usr/lib/python2.7/BaseHTTPServer.py", line 108, in server_bind
    SocketServer.TCPServer.server_bind(self)
  File "/usr/lib/python2.7/SocketServer.py", line 431, in server_bind
    self.socket.bind(self.server_address)
  File "/usr/lib/python2.7/socket.py", line 228, in meth
    return getattr(self._sock,name)(*args)
socket.error: [Errno 98] Address already in use
A workaround is to run ps aux | grep SimpleHTTPServer, get the pid and kill
it manually after each time I run ./tests/boulder-integration.sh.