Member
bmw commented on 29 Mar 2017 â€¢
edited
Certbot has a configuration object that it passes around the majority of the code base. In general, if you run git grep config on certbot and see a variable with that name, it's likely this configuration object.
Unfortunately, each of our tests currently handles creating one of these objects on their own. Often, creating these objects is an error prone process because if the dummy version of the config object is missing an attribute (or it's a mock object that returns an incompatible type), tests will fail. Here's a few links to examples where we create these objects:
certbot/certbot/tests/account_test.py
Line 65 in 650611b
 self.config = mock.MagicMock(config_dir="/etc/letsencrypt") 

certbot/certbot/tests/account_test.py
Line 107 in 650611b
 self.config = mock.MagicMock( 

certbot/certbot/tests/cert_manager_test.py
Line 32 in 650611b
 self.cli_config = configuration.NamespaceConfig(mock.MagicMock( 

certbot/certbot/tests/cert_manager_test.py
Line 340 in 650611b
 self.mock_config = configuration.NamespaceConfig( 
These are just the first 4 examples I found, but there are many more. Instead of doing this, we should create a class in certbot/tests/util.py that inherits from TempDirTestCase and creates one of these objects. It should have all of the default values except it should use the temporary directory created by TempDirTestCase in it's paths.
Solving #4435 may help with this.
EDIT: I rewrote this post to provide more context for people less familiar with the Certbot code base.