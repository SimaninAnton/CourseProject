Contributor
kuba commented on 5 Apr 2015
# letsencrypt -ed $IP
Traceback (most recent call last):                                                                                                                                                                                   
  File "/root/lets-encrypt-preview/venv/bin/letsencrypt", line 9, in <module>
    load_entry_point('letsencrypt==0.1', 'console_scripts', 'letsencrypt')()
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/scripts/main.py", line 205, in main
    cert_file, chain_file = acme.obtain_certificate(doms)
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/client/client.py", line 90, in obtain_certificate
    name, self.acme_challenge(name), self.authkey)
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/client/client.py", line 120, in acme_challenge
    messages.Challenge)
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/client/network.py", line 79, in send_and_receive_expected
    response = self.send(msg)
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/client/network.py", line 64, in send
    logging.error(json_string)
  File "/usr/lib/python2.7/logging/__init__.py", line 1584, in error
    root.error(msg, *args, **kwargs)
  File "/usr/lib/python2.7/logging/__init__.py", line 1174, in error
    self._log(ERROR, msg, args, **kwargs)
  File "/usr/lib/python2.7/logging/__init__.py", line 1267, in _log
    self.handle(record)
  File "/usr/lib/python2.7/logging/__init__.py", line 1277, in handle
    self.callHandlers(record)
  File "/usr/lib/python2.7/logging/__init__.py", line 1317, in callHandlers
    hdlr.handle(record)
  File "/usr/lib/python2.7/logging/__init__.py", line 748, in handle
    self.emit(record)
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/client/log.py", line 40, in emit
    for line in (record.msg % record.args).splitlines():
TypeError: unsupported operand type(s) for %: 'dict' and 'tuple'
and in text mode:
# letsencrypt -ted $IP
INFO:root:Generating key (2048 bits): /etc/letsencrypt/keys/0007_key-letsencrypt.pem
ERROR:root:{u'message': u"Requested action would violate the server's policy", u'type': u'error', u'error': u'forbidden'}
Traceback (most recent call last):
  File "/root/lets-encrypt-preview/venv/bin/letsencrypt", line 9, in <module>
    load_entry_point('letsencrypt==0.1', 'console_scripts', 'letsencrypt')()
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/scripts/main.py", line 205, in main
    cert_file, chain_file = acme.obtain_certificate(doms)
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/client/client.py", line 90, in obtain_certificate
    name, self.acme_challenge(name), self.authkey)
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/client/client.py", line 120, in acme_challenge
    messages.Challenge)
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/client/network.py", line 79, in send_and_receive_expected
    response = self.send(msg)
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/client/network.py", line 62, in send
    return messages.Message.from_json(json_string)
  File "/root/lets-encrypt-preview/venv/local/lib/python2.7/site-packages/letsencrypt-0.1-py2.7.egg/letsencrypt/acme/messages.py", line 50, in from_json
    raise errors.SchemaValidationError(error)
letsencrypt.acme.errors.SchemaValidationError: u'forbidden' is not one of [u'malformed', u'unauthorized', u'serverInternal', u'nonSupported', u'unknown', u'badCSR']

Failed validating u'enum' in schema[u'properties'][u'error']:
    {u'enum': [u'malformed',
               u'unauthorized',
               u'serverInternal',
               u'nonSupported',
               u'unknown',
               u'badCSR']}

On instance[u'error']:
    u'forbidden'
emit() should probably call str(record.msg)...