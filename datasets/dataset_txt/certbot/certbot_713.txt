Kramerican commented on 24 Feb 2018 â€¢
edited
Ubuntu 16.04
Certbot 0.21.1
We invoke a workflow where we call Certbot immediately after having provisioned a server in order to secure the customer's default domain, as per the LetsEncrypt mission statement :)
However, what we have found is that Certbot will fail when restarting the webserver, for nginx this looks like:
CLICK ME
Of course per Murphys law I cannot reproduce this atm for Apache, but I have definitely seen this happen for Apache as well.
What's interesting is that this flips the webserver completely, and I have to issue a killall command and then bring it back up.
My solution is a dumb one: I put in a 10 second sleep command, and that seems to do the trick.
However, I am curious: How are you restarting the webserver? You're not invoking systemctl? It seems like as soon as Certbot is invoked you're doing something to interact with the webserver. I can't quite figure out what you are doing here, it's all a bit strange ...
Edit: Just noticed that my current test here with Apache does not result in Certbot throwing an error - the log looks clean, but Apache has not been started succesfully and I had to manually run systemctl start apache2
As mentioned, putting in a 10 second sleep before invoking Certbot solves all issues.
This is all very strange, as immediately after provisioning the webserver is up and listening on port 80 and can be reached from the outside world. Certbot takes a bit of time ot auth the server (I am using webroot authentication) and one would think that Certbots interaction with the webserver in order to restart it would happen at the very end of the workflow.
But it almost seems to me you are grabbing the processes somehow very early, and then using that to restart the server, or something. Again, I find all this exceedingly bizarre.