Contributor
diracdeltas commented on 1 Apr 2015
cf https://auth0.com/blog/2015/03/31/critical-vulnerabilities-in-json-web-token-libraries/
I don't think the current JOSE implementation supports the 'None' alg type, but it does support HMAC and RSA. If the verifier isn't explicitly checking for the one that it's expecting, an attacker could potentially use this to construct valid payloads.
The blog post recommends:
The server should already know what algorithm it uses to sign tokens, and it's not safe to allow attackers to provide this value.
Some might argue that some servers need to support more than one algorithm for compatibility reasons. In this case, a separate key can (and should) be used for each supported algorithm. JWT conveniently provides a "key ID" field (kid) for exactly this purpose. Since servers can use the key ID to look up the key and its corresponding algorithm, attackers are no longer able to control the manner in which a key is used for verification. In any case, I don't think JWT libraries should even look at the alg field in the header, except maybe to check that it matches what was the expected algorithm.