FedericoBiccheddu commented on 3 Apr 2018
Using certbot for a custom reverse proxy configuration, I received the following error:
Could not automatically find a matching server block. Set the server_name directive to use the Nginx installer.
My operating system is (include version):
Debian GNU/Linux 9
I installed Certbot with (certbot-auto, OS package manager, pip, etc):
wget https://dl.eff.org/certbot-auto \
    && chmod a+x certbot-auto \
    && mv ./certbot-auto /usr/local/sbin/ \
I ran this command and it produced this output:
certbot-auto run -n --nginx --expand --no-redirect -d sub.private.com -d www.private2.com -d www.private3.com
Certbot's behavior differed from what I expected because:
This is the output:
Saving debug log to /var/log/letsencrypt/letsencrypt.log
Plugins selected: Authenticator nginx, Installer nginx
Renewing an existing certificate
Performing the following challenges:
tls-sni-01 challenge for sub.private.com
tls-sni-01 challenge for www.private2.com
http-01 challenge for www.private3.com
Cleaning up challenges
2018/04/03 13:55:06 [notice] 47#47: signal process started
Could not automatically find a matching server block. Set the `server_name` directive to use the Nginx installer.
Here is a Certbot log showing the issue (if available):
[…]
2018-04-03 13:55:06,340:INFO:certbot.auth_handler:tls-sni-01 challenge for sub.private.com
2018-04-03 13:55:06,340:INFO:certbot.auth_handler:tls-sni-01 challenge for www.private2.com
2018-04-03 13:55:06,341:INFO:certbot.auth_handler:http-01 challenge for www.private3.com
2018-04-03 13:55:06,368:DEBUG:certbot.error_handler:Encountered exception:
Traceback (most recent call last):
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot/auth_handler.py", line 124, in _solve_challenges
    resp = self.auth.perform(all_achalls)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot_nginx/configurator.py", line 968, in perform
    sni_response = sni_doer.perform()
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot_nginx/tls_sni_01.py", line 58, in perform
    vhosts = self.configurator.choose_vhosts(achall.domain, create_if_no_match=True)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot_nginx/configurator.py", line 285, in choose_vhosts
    vhosts = [self._vhost_from_duplicated_default(target_name)]
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot_nginx/configurator.py", line 330, in _vhost_from_duplicated_default
    default_vhost = self._get_default_vhost(port)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot_nginx/configurator.py", line 361, in _get_default_vhost
    raise errors.MisconfigurationError("Could not automatically find a matching server"
MisconfigurationError: Could not automatically find a matching server block. Set the `server_name` directive to use the Nginx installer.

2018-04-03 13:55:06,368:DEBUG:certbot.error_handler:Calling registered functions
2018-04-03 13:55:06,368:INFO:certbot.auth_handler:Cleaning up challenges
2018-04-03 13:55:07,607:DEBUG:certbot.log:Exiting abnormally:
Traceback (most recent call last):
  File "/opt/eff.org/certbot/venv/bin/letsencrypt", line 11, in <module>
    sys.exit(main())
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot/main.py", line 1266, in main
    return config.func(config, plugins)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot/main.py", line 1031, in run
    certname, lineage)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot/main.py", line 113, in _get_and_save_cert
    renewal.renew_cert(config, domains, le_client, lineage)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot/renewal.py", line 297, in renew_cert
    new_cert, new_chain, new_key, _ = le_client.obtain_certificate(domains)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot/client.py", line 294, in obtain_certificate
    orderr = self._get_order_and_authorizations(csr.data, self.config.allow_subset_of_names)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot/client.py", line 330, in _get_order_and_authorizations
    authzr = self.auth_handler.handle_authorizations(orderr, best_effort)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot/auth_handler.py", line 72, in handle_authorizations
    resp = self._solve_challenges(aauthzrs)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot/auth_handler.py", line 124, in _solve_challenges
    resp = self.auth.perform(all_achalls)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot_nginx/configurator.py", line 968, in perform
    sni_response = sni_doer.perform()
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot_nginx/tls_sni_01.py", line 58, in perform
    vhosts = self.configurator.choose_vhosts(achall.domain, create_if_no_match=True)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot_nginx/configurator.py", line 285, in choose_vhosts
    vhosts = [self._vhost_from_duplicated_default(target_name)]
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot_nginx/configurator.py", line 330, in _vhost_from_duplicated_default
    default_vhost = self._get_default_vhost(port)
  File "/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/certbot_nginx/configurator.py", line 361, in _get_default_vhost
    raise errors.MisconfigurationError("Could not automatically find a matching server"
MisconfigurationError: Could not automatically find a matching server block. Set the `server_name` directive to use the Nginx installer.
Here is the relevant nginx server block or Apache virtualhost for the domain I am configuring:
server {
    listen 80;

    server_name _;

    return 301 https://$host$request_uri;
}

##
# Custom domains
##
server {
    server_name sub.private.com www.private2.com www.private3.com;

    listen 443 ssl;
    ssl_certificate     /etc/letsencrypt/live/letsencrypt.starteed.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/letsencrypt.starteed.com/privkey.pem; # managed by Certbot
}

server {
    […]
}

server {
    […]
}