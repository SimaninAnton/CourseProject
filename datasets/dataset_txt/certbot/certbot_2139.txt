Contributor
schoen commented on 4 May 2016
A recent issue (#2903) showed that if users manually edit the contents of /etc/letsencrypt in a way that the client regards as inconsistent (for example, some files no longer exist in the relationships that storage.py expects), the client is often not cautious enough to notice and explain the problem, and instead may crash with an exception. This isn't very helpful; what would be more helpful would be to tell the user something like "This certificate lineage appears to have been modified or partially deleted on disk, and the client can't find some of the associated files" instead of (e.g.) "ValueError: max() arg is an empty sequence", or various other cases that it's probably possible to trigger by deleting symlink targets.
We should go through and look at everywhere that the renewer or storage.py follows a symlink or creates or reads a file, and make sure that failures based on corrupted lineage structure are handled intelligently.