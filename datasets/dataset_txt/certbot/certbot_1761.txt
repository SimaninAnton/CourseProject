Member
bmw commented on 4 Oct 2016
certbot-auto/letsencrypt-auto require specific versions of all our Python dependencies and verifies the hashes of all downloaded packages. Doing this increases both the security and the stability of the scripts. To do this, however, we need to include a hash of each installation mechanism uploaded to PyPI (sdists, wheels, etc.).
Over the weekend, pycparsing uploaded a new installation mechanism to PyPI. Previously, they only had a sdist available, but over the weekend they uploaded a wheel. When using pip to install packages from PyPI, it prefers wheels over sdists. The result of all of this is when using certbot-auto to install pycparsing, pip would download the wheel, check it against the hash(es) we have for pycparsing, and exit with a message about an invalid hash.
pycparsing has since removed this wheel due to other problems with it resolving our issue. In general, I think it is uncommon to add a distribution mechanism for an already released version of a package. In my experience, things like this are usually added when a new version of the package is released.
With that said, there's nothing stopping us from having this problem in the future. To try and help mitigate this problem, perhaps we should add --no-binary to our usage of pip for packages that currently do not have a wheel available. Using this approach, if a wheel is added to one of our dependencies without bumping the package version, certbot-auto users are unaffected.