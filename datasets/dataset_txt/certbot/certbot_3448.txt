Contributor
schoen commented on 23 Jul 2015
In a discussion today with @jsha about #411, he proposed the somewhat radical possibility of having the client deliberately get separate and independent certs by default for every requested name. For example, if you simultaneously asked for example.org, example.com, and example.net certs, the client would actually make 3 requests -- one for www.example.org and example.org, one for www.example.com and example.com, and one for www.example.net and example.net. These would be three separate cert lineages which could then be renewed (or revoked) completely independently of one another.
This would be the default behavior, and the present behavior of attempting to get all of the names in one cert would be available as a non-default option.
The reason I think @jsha advocated this is that that it automatically solves #411 and #318 because normally certs are just totally independent of one another. If you need to renew one, you renew that one, and your success or failure at renewing it simply doesn't affect any other cert that you possess. So if you had certs for 100 names and then one of the names got transferred to someone else, you would be able to succeed with 99 renewal requests, and 1 would fail, yet there would be no interference or delay.
In general, this would have the following advantages:
More reliable and straightforward renewal and revocation
Easy handling of cases where a single name gets transferred or expires
Better privacy for servers (not automatically revealing all sites that they host)
Less network traffic to LE cert users (due to smaller certs)
Better crypto key diversity, less target aggregation
And the following disadvantages:
Greater load on the CA
Greater issuance volume
Potentially greater latency for initial issuance or renewal (due to reduced request parallelization)
Loss of compatibility with non-SNI clients
Worse privacy for clients that could otherwise somehow have avoided the SNI request (they now can't avoid revealing which virtual host they were interested in)
@jsha also argues that for sites that specifically need large SNI certs because of a conscious engineering judgment, the ability to get those would still be available to them (using the existing protocol and issuance mechanisms, and optionally a new command-line flag if they're using our software).
Cc @pde, @jdkasten.