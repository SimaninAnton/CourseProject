xykong commented on 15 Jun 2017 •
edited
My operating system is (include version):
macOS 10.12.5 (16F73)
nginx version: nginx/1.12.0
certbot 0.15.0
I installed Certbot with (certbot-auto, OS package manager, pip, etc):
I installed Certbot with brew install certbot:
➜ brew info certbot
certbot: stable 0.15.0 (bottled), HEAD
Tool to obtain certs from Let's Encrypt and autoenable HTTPS
https://certbot.eff.org/
/usr/local/Cellar/certbot/0.15.0 (2,589 files, 20.7MB) *
Poured from bottle on 2017-06-15 at 19:31:20
From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/certbot.rb
==> Dependencies
Required: augeas ✔, dialog ✔, openssl@1.1 ✔
==> Requirements
Required: python ✔
I ran this command and it produced this output:
➜ certbot --nginx
The following error was encountered:
[Errno 13] Permission denied: '/var/log/letsencrypt/.certbot.lock'
If running as non-root, set --config-dir, --work-dir, and --logs-dir to writeable paths.
➜ sudo certbot --nginx
Saving debug log to /var/log/letsencrypt/letsencrypt.log
Error while running nginx -c /etc/nginx/nginx.conf -t.
nginx: [emerg] open() "/etc/nginx/nginx.conf" failed (2: No such file or directory)
nginx: configuration file /etc/nginx/nginx.conf test failed
The nginx plugin is not working; there may be problems with your existing configuration.
The error was: MisconfigurationError('Error while running nginx -c /etc/nginx/nginx.conf -t.\n\nnginx: [emerg] open() "/etc/nginx/nginx.conf" failed (2: No such file or directory)\nnginx: configuration file /etc/nginx/nginx.conf test failed\n',)
Certbot's behavior differed from what I expected because:
My nginx installed by the following command:
➜ brew info nginx
nginx: stable 1.12.0 (bottled), devel 1.13.1, HEAD
HTTP(S) server and reverse proxy, and IMAP/POP3 proxy server
https://nginx.org/
/usr/local/Cellar/nginx/1.12.0_1 (23 files, 1MB) *
Poured from bottle on 2017-06-15 at 18:50:43
From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/nginx.rb
==> Dependencies
Required: pcre ✔, openssl@1.1 ✔
Optional: passenger ✘
==> Options
--with-debug
Compile with support for debug log
--with-gunzip
Compile with support for gunzip module
--with-passenger
Compile with support for Phusion Passenger module
--with-webdav
Compile with support for WebDAV module
--devel
Install development version 1.13.1
--HEAD
Install HEAD version
==> Caveats
Docroot is: /usr/local/var/www
The default port has been set in /usr/local/etc/nginx/nginx.conf to 8080 so that
nginx can run without sudo.
nginx will load all files in /usr/local/etc/nginx/servers/.
To have launchd start nginx now and restart at login:
brew services start nginx
Or, if you don't want/need a background service you can just run:
nginx
Here is a Certbot log showing the issue (if available):
Logs are stored in /var/log/letsencrypt by default. Feel free to redact domains, e-mail and IP addresses as you see fit.
➜ sudo cat /var/log/letsencrypt/letsencrypt.log
2017-06-15 11:40:21,207:DEBUG:certbot.main:certbot version: 0.15.0
2017-06-15 11:40:21,208:DEBUG:certbot.main:Arguments: ['--nginx']
2017-06-15 11:40:21,208:DEBUG:certbot.main:Discovered plugins: PluginsRegistry(PluginEntryPoint#apache,PluginEntryPoint#manual,PluginEntryPoint#nginx,PluginEntryPoint#null,PluginEntryPoint#standalone,PluginEntryPoint#webroot)
2017-06-15 11:40:21,404:DEBUG:certbot.log:Root logging level set at 20
2017-06-15 11:40:21,405:INFO:certbot.log:Saving debug log to /var/log/letsencrypt/letsencrypt.log
2017-06-15 11:40:21,406:DEBUG:certbot.plugins.selection:Requested authenticator nginx and installer nginx
2017-06-15 11:40:21,426:ERROR:certbot.util:Error while running nginx -c /etc/nginx/nginx.conf -t.
nginx: [emerg] open() "/etc/nginx/nginx.conf" failed (2: No such file or directory)
nginx: configuration file /etc/nginx/nginx.conf test failed
2017-06-15 11:40:21,427:DEBUG:certbot.plugins.disco:Misconfigured PluginEntryPoint#nginx: Error while running nginx -c /etc/nginx/nginx.conf -t.
nginx: [emerg] open() "/etc/nginx/nginx.conf" failed (2: No such file or directory)
nginx: configuration file /etc/nginx/nginx.conf test failed
Traceback (most recent call last):
File "/usr/local/Cellar/certbot/0.15.0/libexec/lib/python2.7/site-packages/certbot/plugins/disco.py", line 127, in prepare
self._initialized.prepare()
File "/usr/local/Cellar/certbot/0.15.0/libexec/lib/python2.7/site-packages/certbot_nginx/configurator.py", line 158, in prepare
self.config_test()
File "/usr/local/Cellar/certbot/0.15.0/libexec/lib/python2.7/site-packages/certbot_nginx/configurator.py", line 607, in config_test
raise errors.MisconfigurationError(str(err))
MisconfigurationError: Error while running nginx -c /etc/nginx/nginx.conf -t.
nginx: [emerg] open() "/etc/nginx/nginx.conf" failed (2: No such file or directory)
nginx: configuration file /etc/nginx/nginx.conf test failed
2017-06-15 11:40:21,428:DEBUG:certbot.plugins.selection:Single candidate plugin: * nginx
Description: Nginx Web Server plugin - Alpha
Interfaces: IAuthenticator, IInstaller, IPlugin
Entry point: nginx = certbot_nginx.configurator:NginxConfigurator
Initialized: <certbot_nginx.configurator.NginxConfigurator object at 0x10bcfaf50>
Prep: Error while running nginx -c /etc/nginx/nginx.conf -t.
nginx: [emerg] open() "/etc/nginx/nginx.conf" failed (2: No such file or directory)
nginx: configuration file /etc/nginx/nginx.conf test failed
2017-06-15 11:40:21,430:DEBUG:certbot.plugins.selection:Selected authenticator None and installer None
Here is the relevant nginx server block or Apache virtualhost for the domain I am configuring:
➜ cat /usr/local/etc/nginx/nginx.conf
#user nobody;
worker_processes 1;
#error_log logs/error.log;
#error_log logs/error.log notice;
#error_log logs/error.log info;
#pid logs/nginx.pid;
events {
worker_connections 1024;
}
http {
include mime.types;
default_type application/octet-stream;
#log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
#                  '$status $body_bytes_sent "$http_referer" '
#                  '"$http_user_agent" "$http_x_forwarded_for"';

#access_log  logs/access.log  main;

sendfile        on;
#tcp_nopush     on;

#keepalive_timeout  0;
keepalive_timeout  65;

#gzip  on;

server {
    listen       80;
    server_name  localhost;

    #charset koi8-r;

    #access_log  logs/host.access.log  main;

    location / {
        root   html;
        index  index.html index.htm;
    }

    location /.well-known/acme-challenge/ {
        alias /usr/local/var/www/challenges/;
        try_files $uri =404;
    }


    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        root   html;
    }

    # proxy the PHP scripts to Apache listening on 127.0.0.1:80
    #
    #location ~ \.php$ {
    #    proxy_pass   http://127.0.0.1;
    #}

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}
}


# another virtual host using mix of IP-, name-, and port-based configuration
#
#server {
#    listen       8000;
#    listen       somename:8080;
#    server_name  somename  alias  another.alias;

#    location / {
#        root   html;
#        index  index.html index.htm;
#    }
#}


# HTTPS server
#
#server {
#    listen       443 ssl;
#    server_name  localhost;

#    ssl_certificate      cert.pem;
#    ssl_certificate_key  cert.key;

#    ssl_session_cache    shared:SSL:1m;
#    ssl_session_timeout  5m;

#    ssl_ciphers  HIGH:!aNULL:!MD5;
#    ssl_prefer_server_ciphers  on;

#    location / {
#        root   html;
#        index  index.html index.htm;
#    }
#}
include servers/*;
}
1