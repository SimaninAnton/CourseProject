Member
bmw commented on 7 Aug 2019
As of writing this issue, our code in setup.py to declare a dependency on pywin32 on Windows looks like this.
# Add pywin32 on Windows platforms to handle low-level system calls.
# This dependency needs to be added using environment markers to avoid its installation on Linux.
# However environment markers are supported only with setuptools >= 36.2.
# So this dependency is not added for old Linux distributions with old setuptools,
# in order to allow these systems to build certbot from sources.
if StrictVersion(setuptools_version) >= StrictVersion('36.2'):
    install_requires.append("pywin32 ; sys_platform == 'win32'")
elif 'bdist_wheel' in sys.argv[1:]:
    raise RuntimeError('Error, you are trying to build certbot wheels using an old version '
                       'of setuptools. Version 36.2+ of setuptools is required.')
I think this code is insufficient though as a dependency on pywin32 will not be added when not using a prebuilt wheel with an old version of setuptools on Windows.
To fix this, I think we can just add to the bottom of this code:
elif os.name == 'nt':
    install_requires.append("pywin32")
Alternatively, we could error out when we're run with an old version of setuptools on Windows, however, we cannot do this in general because of ancient distros where we're still seeing updates.
What do you think @erikrose?