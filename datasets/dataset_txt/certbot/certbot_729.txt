Contributor
ohemorange commented on 16 Feb 2018 â€¢
edited
Part of #5367.
From #5554 (comment):
For the methods that try and handle the differences, we first add a method like request_challenges or request_authorizations that takes either a CSR or list of domains and returns a list of authorizations. A CSR is only necessary if new_order takes a CSR. For ACMEv1, it takes the domains (possibly after extracting them from the CSR) and calls request_domain_challenges for each domain and returns a list of obtained authzs. For ACMEv2, this calls new_order with either the CSR/domains and returns the authorizations in the Order. This order object is stored as an attribute of the class to be handled internally. Use new_order and a dummy OrderResource object.
Next we add a method like request_issuance which takes a CSR and returns the cert and its chain. For ACMEv1, it forwards the arguments to request_issuance and then retries calling fetch_chain (see certbot.client.obtain_certificate_from_csr). For ACMEv2 it adds the CSR to the internal order object (if necessary) and calls poll_order_and_request_issuance. We then need to split the certificate and chain, probably by looking for the first line containing "END CERTIFICATE". If the request_challenges/request_authorizations method takes a CSR, we could keep this as an attribute of the class too and remove the parameter here if we really wanted.