uovobw commented on 10 May 2018
The current dns-route53 plugin is very useful for people that want to run letsencrypt for their certs but also want to maintain a decent mobility in their infrastructure, not being too closely tied to AWS.
When working in a complex environment certbot might find itself running on a shared host that might already have some configuration on it, be it manually configured by a user or generally available to other tools on the system, so I was very surprised when i found out that the dns-route53 plugin expects the .aws/credentials file to be populated with the correct access key/access secret needed by boto3 in order to interact with the AWS API. The boto client is configurable during creation in code and/or on the command line by specifying the access key and secret, would it be possible to specify these parameters for the dns-route53 plugin as well?
Ideally a certbot call could then be
certbot <whatever> --dns-route53 --aws-access-key ASDFASDF --aws-access-secret QWERQWER -d ...
so that the script could be run completely statelessly on any host, in the sense that the only state that it would depend on is its own.
Since this is an open source project, i'd like to put my money where my mouth is and implement this feature by myself. To do this i need some information:
does this feature make sense? would it be useful to someone other than myself?
is it doable? can a plugin add command line parameters to the certbot invokation? are there any security considerations for this other than "please do not pass authentication stuff on the command line"?
where can i start looking into modifying the plugin to support this behaviour? suggestions?
many thanks for reading this