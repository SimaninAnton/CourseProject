Contributor
jdkasten commented on 19 Mar 2015
Did a bit of digging on the pylint 1.4.3 problem There are a few issues.... first of all it appears that for the classes where slots really matter... (classes derived from acme.util.ImmutableMap) do not pass the recently added new-class style test.
https://bitbucket.org/logilab/astroid/diff/astroid/scoped_nodes.py?diff1=ca726f4c9aad&diff2=46deabf86bd2ff4cf2bb3c5017240f56dc48d4c1&at=default
The major errors happen when the scoped_node(_Environ) class gets run which throws the exception..
astroid.exceptions.AstroidError: Could not find <Import() l.398 [os] at 0x7f0feffce150> in <TryExcept() l.392 [os] at 0x7f0ff00bbfd0>'s children
Obviously, we should limit the plugin to run only on the classes derived from ImmutableMap, but the objects passed to the transform function are of <class 'astroid.scoped_nodes.Class>.
I did not find an easy way to access the underlying represented class... ie. classes like letsencrypt.acme.challenges.* where something like issubclass could be run. Even if we do find a nice mechanism... the linter_plugin still won't work because the classes are not being recognized as having the newstyle attribute.
The changes causing the issues are extremely recent. I might temporarily pin pylint to 1.4.1 or 1.4.2 until we can figure out what is going on or the issues are solved upstream.