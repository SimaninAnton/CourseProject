johey commented on 19 Oct 2017
Problem description
I have properly configured nginx with a few virtual hosts. They are perfectly working on port 80. In one of the location{} blocks, I have a content_by_lua_block{} with valid lua syntax. This seems to make certbot comfused, as removing that block before running the certbot command helps.
That said, I have successfully found a workaround, temporarily removing the content_by_lua_block{} and reenabling it after running certbot, but it took me a while to pinpoint the problem. And I am not sure how it will handle reissuing of the certificates.
My operating system is (include version):
Ubuntu 16.04 x86_64
I installed Certbot with (certbot-auto, OS package manager, pip, etc):
python-certbot-nginx 0.17.0-2+ubuntu16.04.1+certbot+1 from ppa:certbot/certbot
I ran this command and it produced this output:
sudo certbot --nginx
No names were found in your configuration files. Please enter in your domain
Certbot's behavior differed from what I expected because:
As I have several server{ [...] server_name [...] } blocks in my `/etc/nginx/sites-enabled/default' file, I expect them all to be picked up.
Here is a Certbot log showing the issue (if available):
2017-10-19 05:11:21,441:DEBUG:certbot.main:certbot version: 0.17.0
2017-10-19 05:11:21,442:DEBUG:certbot.main:Arguments: ['--nginx']
2017-10-19 05:11:21,442:DEBUG:certbot.main:Discovered plugins: PluginsRegistry(PluginEntryPoint#manual,PluginEntryPoint#nginx,PluginEntryPoint#null,PluginEntryPoint#standalone,PluginEntryPoint#webroot)
2017-10-19 05:11:21,452:DEBUG:certbot.log:Root logging level set at 20
2017-10-19 05:11:21,453:INFO:certbot.log:Saving debug log to /var/log/letsencrypt/letsencrypt.log
2017-10-19 05:11:21,453:DEBUG:certbot.plugins.selection:Requested authenticator nginx and installer nginx
2017-10-19 05:11:21,558:DEBUG:certbot_nginx.parser:Could not parse file: /etc/nginx/sites-enabled/default due to Expected "}" (at char 223), (line:11, col:5)
2017-10-19 05:11:21,566:DEBUG:certbot.plugins.selection:Single candidate plugin: * nginx
Description: Nginx Web Server plugin - Alpha
Interfaces: IAuthenticator, IInstaller, IPlugin
Entry point: nginx = certbot_nginx.configurator:NginxConfigurator
Initialized: <certbot_nginx.configurator.NginxConfigurator object at 0x7f1165b878d0>
Prep: True
2017-10-19 05:11:21,567:DEBUG:certbot.plugins.selection:Selected authenticator <certbot_nginx.configurator.NginxConfigurator object at 0x7f1165b878d0> and installer <certbot_nginx.configurator.NginxConfigurator object at 0x7f1165b878d0>
2017-10-19 05:11:21,570:DEBUG:certbot.main:Picked account: <Account(RegistrationResource(body=Registration(status=None, contact=(u'mailto:X@X.com',), agreement=u'https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf', key=JWKRSA(key=<ComparableRSAKey(<cryptography.hazmat.backends.openssl.rsa._RSAPublicKey object at 0x7f116a5df090>)>)), uri=u'https://acme-v01.api.letsencrypt.org/acme/reg/22895103', new_authzr_uri=u'https://acme-v01.api.letsencrypt.org/acme/new-authz', terms_of_service=u'https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf'), 90e30c7645ece4f5a1a62ea274a29931, Meta(creation_host=u'ip-10-2-138-150.eu-west-1.compute.internal', creation_dt=datetime.datetime(2017, 10, 18, 11, 48, 44, tzinfo=<UTC>)))>
2017-10-19 05:11:21,571:DEBUG:acme.client:Sending GET request to https://acme-v01.api.letsencrypt.org/directory.
2017-10-19 05:11:21,587:DEBUG:requests.packages.urllib3.connectionpool:Starting new HTTPS connection (1): acme-v01.api.letsencrypt.org
2017-10-19 05:11:22,003:DEBUG:requests.packages.urllib3.connectionpool:https://acme-v01.api.letsencrypt.org:443 "GET /directory HTTP/1.1" 200 561
2017-10-19 05:11:22,004:DEBUG:acme.client:Received response:
HTTP 200
Server: nginx
Content-Type: application/json
Content-Length: 561
Replay-Nonce: E4gnIaY3jmM_WI_L9spwjItaqmfJoA0f5EkQMIZcdz4
X-Frame-Options: DENY
Strict-Transport-Security: max-age=604800
Expires: Thu, 19 Oct 2017 05:11:22 GMT
Cache-Control: max-age=0, no-cache, no-store
Pragma: no-cache
Date: Thu, 19 Oct 2017 05:11:22 GMT
Connection: keep-alive

{
  "EQPIVzhRltQ": "https://community.letsencrypt.org/t/adding-random-entries-to-the-directory/33417",
  "key-change": "https://acme-v01.api.letsencrypt.org/acme/key-change",
  "meta": {
    "terms-of-service": "https://letsencrypt.org/documents/LE-SA-v1.1.1-August-1-2016.pdf"
  },
  "new-authz": "https://acme-v01.api.letsencrypt.org/acme/new-authz",
  "new-cert": "https://acme-v01.api.letsencrypt.org/acme/new-cert",
  "new-reg": "https://acme-v01.api.letsencrypt.org/acme/new-reg",
  "revoke-cert": "https://acme-v01.api.letsencrypt.org/acme/revoke-cert"
}
2017-10-19 05:12:01,757:ERROR:certbot.log:Exiting abnormally:
Traceback (most recent call last):
  File "/usr/bin/certbot", line 11, in <module>
    load_entry_point('certbot==0.17.0', 'console_scripts', 'certbot')()
  File "/usr/lib/python2.7/dist-packages/certbot/main.py", line 753, in main
    return config.func(config, plugins)
  File "/usr/lib/python2.7/dist-packages/certbot/main.py", line 600, in run
    domains, certname = _find_domains_or_certname(config, installer)
  File "/usr/lib/python2.7/dist-packages/certbot/main.py", line 286, in _find_domains_or_certname
    domains = display_ops.choose_names(installer)
  File "/usr/lib/python2.7/dist-packages/certbot/display/ops.py", line 109, in choose_names
    "No names were found in your configuration files. ")
  File "/usr/lib/python2.7/dist-packages/certbot/display/ops.py", line 177, in _choose_names_manually
    cli_flag="--domains", force_interactive=True)
  File "/usr/lib/python2.7/dist-packages/certbot/display/util.py", line 181, in input
    ans = input_with_timeout(message)
  File "/usr/lib/python2.7/dist-packages/certbot/display/util.py", line 79, in input_with_timeout
    rlist, _, _ = select.select([sys.stdin], [], [], timeout)
KeyboardInterrupt
Here is the relevant nginx server block or Apache virtualhost for the domain I am configuring:
server {
    listen 80 default_server;
    server_name mydomain1.example.com;

    root /var/www/html;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;


    location = / {
        default_type application/json;
        content_by_lua_block {
            ngx.req.read_body()
            local args, err = ngx.req.get_post_args()
            for key in pairs(args) do
                local f = io.popen("python /home/ubuntu/mapmodule.py \'" .. key .. "\'")
                local l = f:read("*a")
                f:close()
                ngx.say(l)
            end
        }
    }
}

server {
    listen 80;
    server_name mydomain2.example.com;

    root /var/www/html;

    # Add index.php to the list if you are using PHP
    index index.html index.htm index.nginx-debian.html;


    location = / {
        default_type application/json;
    }
}