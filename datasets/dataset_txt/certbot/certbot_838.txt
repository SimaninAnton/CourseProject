Contributor
ohemorange commented on 5 Jan 2018 â€¢
edited by bmw
Step 2 of #5365
Certbot core
Delete lines from certbot.util.enforce_domain_sanity that error on wildcards. We should still have code somewhere that errors if a wildcard is requested from a v1 endpoint because according to the spec "Wildcard domain names (with "*" as the first label) MUST NOT be included in authorization requests" and we should provide a clean error message to the user.
Improve error message if a wildcard is requested with an authenticator that can't do DNS challenges.
Don't make cert names with wildcards by default.
Fix --allow-subset-of-names for ACMEv2. This could be done in certbot.client.obtain_certificate, by having it repeatedly create a CSR, request a new_order, and perform authorizations until all authorizations pass. If any fail, we should create a new CSR with only the domains that succeeded. The order/authorizations would then be passed to obtain_certificate_from_csr.
Need to show link to TOS before calling register/new_account on the client from the acme module when ACMEv2 is used. Doing this requires being able to get TOS from ACMEv2 directory, ideally without making the user of the ACME library reach into the directory object themselves. We also need to skip this code for ACMEv1 and not try and show TOS again after registering for ACMEv2. (Suggests acme change)
Call new_account/register based on ACME version (Could be mitigated by #5491 or changes to acme.client.ClientV2)
If current design of #5374 stays, we have to make CSR before performing challenges in certbot.client.obtain_certificate because the CSR is needed earlier by the client in ACME. (Could be mitigated by #5491 or changes to #5374)
certbot.auth_handler.get_authorizations (or closely related function) should take a dict/list of authorization objects instead of domains. We can have another function on the auth_handler take domains and create authzs if we wanted for convenience of supporting ACMEv1 (Could be mitigated by #5491 by keeping order object internal to acme client)
We now get back the fullchain from the ACME server rather than separate leaf and chain certs. These need to be split (probably by just looking for the first line containing "END CERTIFICATE"). (Could be mitigated by #5491)
Apache and Nginx
Open question: Should Apache/Nginx suggest wildcards found in the config with get_all_names?
Have Nginx and Apache installers support wildcards (deploy and enhance) in the case when there is one vhost matching the wildcard. Doing this involves making sure we can properly search the config for the vhost serving the wildcard (doing this 100% correctly could be hard/impossible for server names that are regexes) and fixing small things that break if wildcards are used. For example, if ($host = *.example.com) { doesn't make sense for Nginx redirects.
Possibly have Apache and Nginx installers (offer to) modify all vhosts that match the wildcard.
1