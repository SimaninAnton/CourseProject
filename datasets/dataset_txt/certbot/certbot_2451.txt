akamensky commented on 4 Feb 2016
I am trying to automate my certificates renewal (in short check NotAfter of certificate and if past certain threshold then call letsencrypt), but I get very weird behavior.
The error message is like this:
# python ssl-checker.py -c /etc/ssl-checker/ssl-checker.conf
Updating letsencrypt and virtual environment dependencies......
Requesting root privileges to run with virtualenv: /root/.local/share/letsencrypt/bin/letsencrypt certonly --webroot --renew-by-default --agree-tos --webroot-path /var/www/html/ -d www.deleted.com -d deleted.com
usage:
  letsencrypt-auto [SUBCOMMAND] [options] [-d domain] [-d domain] ...

The Let's Encrypt agent can obtain and install HTTPS/TLS/SSL certificates.  By
default, it will attempt to use a webserver both for obtaining and installing
the cert. Major SUBCOMMANDS are:

  (default) run        Obtain & install a cert in your current webserver
  certonly             Obtain cert, but do not install it (aka "auth")
  install              Install a previously obtained cert in a server
  revoke               Revoke a previously obtained certificate
  rollback             Rollback server configuration changes made during install
  config_changes       Show changes made to server config during installation
  plugins              Display information about installed plugins
letsencrypt: error: unrecognized arguments: certonly --webroot --renew-by-default --agree-tos --webroot-path /var/www/html/
So it tells me that certonly is not recognized as an argument, but when I just simply copy paste line from above (the one after Requesting root privileges to run with virtualenv:), it works fine and updates certificates in the destination location.
In my code I am using child = subprocess.Popen(args, shell=True) where args is a list of arguments such as args = ['/root/letsencrypt/letsencrypt-auto', 'certonly', '--webroot', '--renew-by-default', '--agree-tos', '--webroot-path'...]