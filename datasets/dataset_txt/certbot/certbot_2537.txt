bviktor commented on 19 Jan 2016
I think we can agree on that reducing the attack surface should be a principle everyone should follow. That means install the least amount of packages that still lets you get things done. Now if I do a mere
# letsencrypt-auto --help
It installs the following packages:
python-devel python-virtualenv gcc libffi-devel openssl-devel redhat-rpm-config cpp dwz glibc-devel glibc-headers kernel-headers keyutils-libs-devel krb5-devel libcom_err-devel libmpc libselinux-devel libsepol-devel libverto-devel mpfr pcre-devel perl-srpm-macros zip zlib-devel
without even asking. yum -y all the way. If I do this as a sudoer user, it still becomes root in the blink of an eye, everything's run with sudo.
If you think it's acceptable to install compilers and a lot of libs and headers on each and every web server for... running a Python script, that's totally up to you. But please, at least ask us if we really want that.
Now, this wouldn't bother me this much if there was a way to set up a single, isolated VM which I could use to request certificates for all our servers. Except I, of course, can't do that. The script needs to be run on the server that'll serve those domains.
I personnaly erased all these packages and reverted to our Comodo certs for now and by the look of things, it'll stay that way. I want to make it clear that I'm not complaing - it wouldn't even make any sense since you're giving away certs for free, which is awesome. This is merely a suggestion that you may or may not consider.
I do believe that most admins would greatly appreciate if letsencrypt came in the way of
a) a single binary - IIRC there are tools for doing that in Python but FIXME
b) a self-contained Python script - e.g. does serving HTTP requests, amongst other, mostly simple things really require kernel headers and a C compiler in Python? I doubt it.
iinstead of a script that
a) installs a lot of bloat on web servers
b) sets up a Python virtual environment... somewhere, that may be trivial for you python guys but not for the average nginx admin and honestly, I really don't have the interest or desire to deal with it
c) installs packages via pip
Thanks in advance.