Contributor
jsoref commented on 12 Jan 2017
This snippet gets me a working python2.7 (redhat6.8 / x86_64)
mkdir centos-py27
cd centos-py27
ver=$(grep '%rhel' /etc/rpm/macros.dist|cut -d ' ' -f2)
proc=$(uname -p)
wget https://dl.iuscommunity.org/pub/ius/archive/CentOS/$ver/$proc/python27-devel-2.7.12-1.ius.centos$ver.$proc.rpm
wget https://dl.iuscommunity.org/pub/ius/archive/CentOS/$ver/$proc/python27-tools-2.7.12-1.ius.centos$ver.$proc.rpm
wget https://dl.iuscommunity.org/pub/ius/archive/CentOS/$ver/$proc/python27-libs-2.7.12-1.ius.centos$ver.$proc.rpm
wget https://dl.iuscommunity.org/pub/ius/archive/CentOS/$ver/$proc/python27-2.7.12-1.ius.centos$ver.$proc.rpm
for a in python27-*rpm; do rpm2cpio $a |cpio -idmv; done

cat > python.template << UNLIKELY_EOF
#!/bin/sh
LD_LIBRARY_PATH=\$VIRTUAL_ENV/usr/lib PYTHONPATH=\$VIRTUAL_ENV/lib/python2.7/site-packages \$VIRTUAL_ENV/usr/bin/python2.7 "\$@"
UNLIKELY_EOF
for a in usr/lib{,64}; do [ -f $a/libpython2.7.so ] && sed -e " s#usr/lib #$a #; s#\$VIRTUAL_ENV#`pwd`#g; " python.template > python; done
chmod +x python
mv python usr/bin/

virtualenv -p usr/bin/python testenv
for a in usr/lib{,64}; do [ -f $a/libpython2.7.so ] && sed -e " s#usr/lib #$a #; " python.template > python; done
chmod +x python
mv python testenv/bin/python2.7
mv usr testenv
I'd imagine we could tie this together with the cryptography that letsencrypt auto does to validate the packages.
It's also possible to use this approach to avoid messing with EPEL / getting virtualenv.
Personally, I'm often not root when I'm doing development (and I don't have a redhat subscription, the company that hosts our boxes does, which means I can't easily enable some RHN channels).