Member
bmw commented on 7 Sep 2017
My operating system is (include version):
Debian Stretch (although every OS is affected)
I installed Certbot with (certbot-auto, OS package manager, pip, etc):
certbot-auto
I ran this command and it produced this output:
$ ./certbot-auto                  
Upgrading certbot-auto 0.17.0 to 0.18.0...
Replacing certbot-auto...
Creating virtual environment...
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/virtualenv.py", line 2375, in <module>
    main()
  File "/usr/lib/python3/dist-packages/virtualenv.py", line 724, in main
    symlink=options.symlink)
  File "/usr/lib/python3/dist-packages/virtualenv.py", line 946, in create_environment
    site_packages=site_packages, clear=clear, symlink=symlink))
  File "/usr/lib/python3/dist-packages/virtualenv.py", line 1157, in install_python
    mkdir(lib_dir)
  File "/usr/lib/python3/dist-packages/virtualenv.py", line 329, in mkdir
    os.makedirs(path)
  File "/usr/lib/python2.7/os.py", line 150, in makedirs
    makedirs(head, mode)
  File "/usr/lib/python2.7/os.py", line 150, in makedirs
    makedirs(head, mode)
  File "/usr/lib/python2.7/os.py", line 150, in makedirs
    makedirs(head, mode)
  File "/usr/lib/python2.7/os.py", line 150, in makedirs
    makedirs(head, mode)
  File "/usr/lib/python2.7/os.py", line 157, in makedirs
    mkdir(name, mode)
OSError: [Errno 13] Permission denied: '/opt/eff.org'
Certbot's behavior differed from what I expected because:
It crashes.
The problem that occurs when upgrading is older versions of certbot-auto download a new version of themselves during what's called in the script "Phase 1". After this, the script is rerun with --le-auto-phase2 and the new version of the script assumes that if you're in "Phase 2", we've already ensured we have root access. This isn't true when "Phase 1" is completed by an older version of the script.